// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: CSRCollection.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include "cib_a.csr_define.vri"
#include "tlr_a.csr_define.vri"
#include "general_csr_defines.vri"
#include "CSRFmwork.vrh"
#include "base_access_define.vri"
#include "FIRE_local_access_define.vri"

class CSRCollection {

	local string 		csr_collection_name;
	local integer		offset;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_slt_cap_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_link_cfg_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl_state[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH];
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm_state;
	CSRState 		fire_dlc_ilu_cib_csr_a_ilu_int_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_oe_log_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts_state;
	CSRState 		fire_dlc_ilu_cib_csr_a_ilu_log_en_state;
	CSRState 		fire_dlc_ilu_cib_csr_a_ilu_en_err_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_symbol_num_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_replay_timer_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status_state[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH];
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_dev_sts_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_trn_off_state;
	CSRState 		fire_dlc_ilu_cib_csr_a_ilu_diagnos_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ce_log_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_lane_skew_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_core_status_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer_state;
	CSRState 		fire_dlc_ilu_cib_csr_a_pec_int_en_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias_state;
	CSRState 		fire_dlc_ilu_cib_csr_a_pec_en_err_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_link_ctl_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status_state[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH];
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_ue_log_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg_state[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH];
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl_state[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH];
	CSRState 		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_dev_cap_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1_state;
	CSRState 		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl_state;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_slt_cap;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_link_cfg;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH];
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_ilu_int_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_oe_log;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_ilu_log_en;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_ilu_en_err;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_symbol_num;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_replay_timer;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH];
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_dev_sts;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_trn_off;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_ilu_diagnos;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ce_log;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_lane_skew;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_core_status;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_pec_int_en;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_pec_en_err;
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_link_ctl;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH];
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_ue_log;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH];
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH];
	CSRAccessor 		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_dev_cap;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1;
	CSRAccessor 		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl;


	task new ( CSRAccessMethod	input_access_methods[]) {
	    	integer		        access_level[];
	    	string		        access_name[];
	    	string			input_name;
	    	string			base_csr_name;
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_slt_cap_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg_state = new;
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH; ++offset)
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl_state[offset] = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm_state = new;
		fire_dlc_ilu_cib_csr_a_ilu_int_en_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_oe_log_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts_state = new;
		fire_dlc_ilu_cib_csr_a_ilu_log_en_state = new;
		fire_dlc_ilu_cib_csr_a_ilu_en_err_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_replay_timer_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en_state = new;
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH; ++offset)
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status_state[offset] = new;
		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_dev_sts_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_trn_off_state = new;
		fire_dlc_ilu_cib_csr_a_ilu_diagnos_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ce_log_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_core_status_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer_state = new;
		fire_dlc_ilu_cib_csr_a_pec_int_en_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias_state = new;
		fire_dlc_ilu_cib_csr_a_pec_en_err_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb_state = new;
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH; ++offset)
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status_state[offset] = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_ue_log_state = new;
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH; ++offset)
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg_state[offset] = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl_state = new;
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH; ++offset)
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl_state[offset] = new;
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_dev_cap_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1_state = new;
		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl_state = new;

	//////////////////////// Single-Entry CSRs //////////////////////////////
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2 = new(
					fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_0_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_0_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_0_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_0_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_3_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_3_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_3_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_3_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_4_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_4_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_4_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_4_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_5_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_5_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_5_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_5_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_6_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_6_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_6_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_6_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_7_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_7_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_7_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_2_CNT_BAD_SYMBOL_7_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_ici_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_PHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_CHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICI_NHC_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh = new(
					fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_RPLAY_TMR_THR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_RPLAY_TMR_THR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_RPLAY_TMR_THR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIM_THRESH_RPLAY_TMR_THR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_slt_cap = new(
					fire_plc_tlu_ctb_tlr_csr_a_slt_cap_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_slt_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_slt_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLV_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLV_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLV_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SLT_CAP_SPLV_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_link_cfg = new(
					fire_plc_tlu_ctb_tlr_csr_a_link_cfg_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_OTHER_MESSAGE_REQUEST_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_OTHER_MESSAGE_REQUEST_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_OTHER_MESSAGE_REQUEST_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_OTHER_MESSAGE_REQUEST_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_DATA_LINK_ENABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_DATA_LINK_ENABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_DATA_LINK_ENABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_DATA_LINK_ENABLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_NAK_DISABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_NAK_DISABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_NAK_DISABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_NAK_DISABLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_FREQ_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_FREQ_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_FREQ_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_ACK_FREQ_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_SPARE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_SPARE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_SPARE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_SPARE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_FLOW_CONTROL_DISABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_FLOW_CONTROL_DISABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_FLOW_CONTROL_DISABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CFG_FLOW_CONTROL_DISABLE_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_icr_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_PHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_CHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICR_NHC_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm = new(
					fire_plc_tlu_ctb_tlr_csr_a_force_ltssm_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCE_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCE_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCE_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCE_EN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCED_LTSSM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCED_LTSSM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCED_LTSSM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_FORCE_LTSSM_FORCED_LTSSM_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_ilu_int_en = new(
					fire_dlc_ilu_cib_csr_a_ilu_int_en_state,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE3_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE2_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_IHB_PE_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_INT_EN_SPARE1_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_oe_log = new(
					fire_plc_tlu_ctb_tlr_csr_a_oe_log_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_oe_log.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_LOG_EN_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en = new(
					fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_ERROR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_ERROR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_ERROR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_ERROR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_EVENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_EVENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_EVENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_EN_EN_EVENT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_SPARE2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_ROF_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UR_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_MFP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_CTO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_PP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_DLP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_FCP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1S_ALIAS_UC_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts = new(
					fire_plc_tlu_ctb_tlr_csr_a_lnk_sts_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_CLOCK_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_CLOCK_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_CLOCK_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_CLOCK_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_TRAIN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_TRAIN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_TRAIN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_TRAIN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPARE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPARE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPARE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPARE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPEED_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPEED_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPEED_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_SPEED_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_WIDTH_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_WIDTH_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_WIDTH_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_STS_WIDTH_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_ilu_log_en = new(
					fire_dlc_ilu_cib_csr_a_ilu_log_en_state,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_dlc_ilu_cib_csr_a_ilu_log_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE1_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE1_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE1_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE1_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE2_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE2_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE2_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE2_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_IHB_PE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_IHB_PE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_IHB_PE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_IHB_PE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE3_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE3_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE3_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_EN_SPARE3_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_ilu_en_err = new(
					fire_dlc_ilu_cib_csr_a_ilu_en_err_state,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE3_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE2_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_IHB_PE_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_EN_ERR_SPARE1_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en = new(
					fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_ERROR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_ERROR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_ERROR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_ERROR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_EVENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_EVENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_EVENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_LOG_EN_EN_EVENT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en = new(
					fire_plc_tlu_ctb_tlr_csr_a_oe_int_en_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_INT_EN_EN_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_SPARE2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_ROF_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UR_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_MFP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_CTO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_PP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_DLP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_FCP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_ERR_RW1C_ALIAS_UC_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err = new(
					fire_plc_tlu_ctb_tlr_csr_a_oe_en_err_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_EN_ERR_ERR_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_symbol_num = new(
					fire_plc_tlu_ctb_tlr_csr_a_symbol_num_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SKIP_SYMBOLS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SKIP_SYMBOLS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SKIP_SYMBOLS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SKIP_SYMBOLS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_TS1_SYMBOLS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_TS1_SYMBOLS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_TS1_SYMBOLS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_TS1_SYMBOLS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_NUM_SPARE_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_replay_timer = new(
					fire_plc_tlu_ctb_tlr_csr_a_replay_timer_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_replay_timer.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_RPLAY_TMR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_RPLAY_TMR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_RPLAY_TMR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_RPLAY_TMR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_replay_timer.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_REPLAY_NUM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_REPLAY_NUM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_REPLAY_NUM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_REPLAY_TIMER_REPLAY_NUM_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1 = new(
					fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR1_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2 = new(
					fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_RUE_HDR2_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0 = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_CNT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_CNT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_CNT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF0_CNT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1 = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_CNT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_CNT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_CNT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF1_CNT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_SPARE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EPE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LIN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_NFP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_RUC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EDP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LPU_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LRS_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EHP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CTO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EIP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_CRS_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_WUC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MRC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LDN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_EMP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_ERU_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LUP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_IIP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_LWC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1S_ALIAS_MFC_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2 = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_CNT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_CNT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_CNT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRF2_CNT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_sts_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_STATUS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_STATUS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_STATUS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_STATUS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_DRAIN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_DRAIN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_DRAIN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_STS_DRAIN_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en = new(
					fire_plc_tlu_ctb_tlr_csr_a_ce_int_en_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_INT_EN_EN_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err = new(
					fire_plc_tlu_ctb_tlr_csr_a_ce_en_err_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_EN_ERR_ERR_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1 = new(
					fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR1_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2 = new(
					fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TUE_HDR2_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_dev_sts = new(
					fire_plc_tlu_ctb_tlr_csr_a_dev_sts_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_dev_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_TP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_TP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_TP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_STS_TP_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_trn_off = new(
					fire_plc_tlu_ctb_tlr_csr_a_trn_off_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_trn_off.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_PTO_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_PTO_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_PTO_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TRN_OFF_PTO_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_ilu_diagnos = new(
					fire_dlc_ilu_cib_csr_a_ilu_diagnos_state,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_TRIG_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_TRIG_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_TRIG_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_TRIG_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_TRIG_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_TRIG_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_TRIG_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_TRIG_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_PAR_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_PAR_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_PAR_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EHI_PAR_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX0_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX0_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX0_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX0_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX1_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX1_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX1_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX1_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX2_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX2_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX2_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX2_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX3_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX3_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX3_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX3_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX4_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX4_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX4_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX4_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX5_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX5_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX5_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX5_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_PAR_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_PAR_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_PAR_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_EDI_PAR_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX0_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX0_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX0_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX0_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX6_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX6_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX6_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX6_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX1_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX1_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX1_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX1_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX7_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX7_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX7_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENRX7_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX2_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX2_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX2_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX2_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX3_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX3_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX3_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX3_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_RATE_SCALE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_RATE_SCALE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_RATE_SCALE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_RATE_SCALE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX4_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX4_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX4_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX4_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX5_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX5_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX5_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX5_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL0_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL0_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL0_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL0_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX6_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX6_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX6_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX6_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL1_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL1_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL1_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENPLL1_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX7_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX7_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX7_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_DIAGNOS_ENTX7_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_SPARE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EPE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LIN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_NFP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_RUC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EDP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LPU_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LRS_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EHP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CTO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EIP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_CRS_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_WUC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MRC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LDN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_EMP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_ERU_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LUP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_IIP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_LWC_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_OE_ERR_RW1C_ALIAS_MFC_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1 = new(
					fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR1_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2 = new(
					fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ROE_HDR2_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL0_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL0_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL0_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL0_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_PRFC_SEL2_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ce_log = new(
					fire_plc_tlu_ctb_tlr_csr_a_ce_log_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ce_log.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_LOG_EN_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts = new(
					fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_ERROR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_ERROR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_ERROR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_ERROR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_EVENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_EVENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_EVENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_INT_STS_EN_EVENT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev = new(
					fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_DLPL_ID_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_DLPL_ID_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_DLPL_ID_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_DLPL_ID_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_SERDES_ID_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_SERDES_ID_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_SERDES_ID_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_PEU_DLPL_SERDES_REV_SERDES_ID_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1 = new(
					fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR1_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2 = new(
					fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_HDR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_HDR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_HDR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TOE_HDR2_HDR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh = new(
					fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_ACK_NAK_THR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_ACK_NAK_THR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_ACK_NAK_THR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_THRESH_ACK_NAK_THR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg = new(
					fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_V_MESSAGE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_V_MESSAGE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_V_MESSAGE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_VEN_DLLP_MSG_V_MESSAGE_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_lane_skew = new(
					fire_plc_tlu_ctb_tlr_csr_a_lane_skew_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_0_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_0_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_0_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_0_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_5_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_5_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_5_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_5_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_4_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_4_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_4_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_4_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_FORCE_RCV_PRESENT_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_FORCE_RCV_PRESENT_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_FORCE_RCV_PRESENT_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_FORCE_RCV_PRESENT_EN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_SPARE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_DESKEW_DISABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_DESKEW_DISABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_DESKEW_DISABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_DESKEW_DISABLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_3_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_3_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_3_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_3_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_2_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_2_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_2_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_2_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_7_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_7_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_7_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_7_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_1_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_1_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_1_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_1_RCV_PRESENT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_6_RCV_PRESENT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_6_RCV_PRESENT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_6_RCV_PRESENT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LANE_SKEW_LN_6_RCV_PRESENT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en = new(
					fire_plc_tlu_ctb_tlr_csr_a_ue_int_en_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_INT_EN_EN_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_core_status = new(
					fire_plc_tlu_ctb_tlr_csr_a_core_status_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_0_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_0_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_0_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_0_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RV_LOS_STATE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RV_LOS_STATE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RV_LOS_STATE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RV_LOS_STATE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_SDS_READY_1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_LINK_NUM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_LINK_NUM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_LINK_NUM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_LINK_NUM_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_ALIGN_STS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_ALIGN_STS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_ALIGN_STS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_ALIGN_STS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCVR_DETECT_STS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCVR_DETECT_STS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCVR_DETECT_STS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCVR_DETECT_STS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LOCK_STS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LOCK_STS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LOCK_STS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LOCK_STS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RBUF_NOT_EMPTY_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RBUF_NOT_EMPTY_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RBUF_NOT_EMPTY_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RBUF_NOT_EMPTY_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_POLARITY_REV_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_POLARITY_REV_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_POLARITY_REV_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_POLARITY_REV_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LANE_REV_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LANE_REV_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LANE_REV_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_PCS_LANE_REV_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_FTS_NUM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_FTS_NUM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_FTS_NUM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_RCV_FTS_NUM_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_TX_LOS_STATE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_TX_LOS_STATE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_TX_LOS_STATE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_TX_LOS_STATE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_INT_FCSM_STATE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_INT_FCSM_STATE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_INT_FCSM_STATE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_INT_FCSM_STATE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_core_status.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_LTSSM_STATE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_LTSSM_STATE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_LTSSM_STATE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CORE_STATUS_LTSSM_STATE_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap = new(
					fire_plc_tlu_ctb_tlr_csr_a_lnk_cap_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_ASPM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_ASPM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_ASPM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_ASPM_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L0S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L0S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L0S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_L0S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_SPEED_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_SPEED_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_SPEED_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_SPEED_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_WIDTH_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_WIDTH_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_WIDTH_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_WIDTH_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_PORT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_PORT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_PORT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CAP_PORT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err = new(
					fire_plc_tlu_ctb_tlr_csr_a_ue_en_err_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_EN_ERR_ERR_S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SRC_TLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SRC_TLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SRC_TLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SRC_TLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_OUTSTANDING_SKIP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_OUTSTANDING_SKIP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_OUTSTANDING_SKIP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_OUTSTANDING_SKIP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_HOT_RST_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_HOT_RST_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_HOT_RST_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_HOT_RST_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDP_NO_END_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDP_NO_END_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDP_NO_END_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDP_NO_END_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_TS2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDS_LOS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDS_LOS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDS_LOS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SDS_LOS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_SEND_SKP_B2B_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_SEND_SKP_B2B_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_SEND_SKP_B2B_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_SEND_SKP_B2B_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_PAD_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_PAD_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_PAD_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_PAD_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EN_LB_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EN_LB_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EN_LB_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EN_LB_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_KCHAR_DLLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_KCHAR_DLLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_KCHAR_DLLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_KCHAR_DLLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_END_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_END_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_END_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_END_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_UNSUP_DLLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_UNSUP_DLLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_UNSUP_DLLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_UNSUP_DLLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_STP_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_STP_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_STP_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_STP_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_SDP_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_SDP_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_SDP_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ILL_SDP_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ALIGN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ALIGN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ALIGN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_ALIGN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_STP_NO_END_EDB_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_STP_NO_END_EDB_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_STP_NO_END_EDB_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_STP_NO_END_EDB_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_DIS_LINK_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_DIS_LINK_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_DIS_LINK_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_DIS_LINK_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SYNC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SYNC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SYNC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_SYNC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_SDP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_SDP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_SDP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_SDP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_STP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_STP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_STP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_MULTI_STP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_END_EDB_NO_STP_SDP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_END_EDB_NO_STP_SDP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_END_EDB_NO_STP_SDP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_ERR_END_EDB_NO_STP_SDP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_EXIT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_EXIT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_EXIT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1S_ALIAS_EVT_RCV_EIDLE_EXIT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl = new(
					fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_CLOCK_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_CLOCK_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_CLOCK_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_CLOCK_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_ASPM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_ASPM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_ASPM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_ASPM_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RETRAIN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RETRAIN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RETRAIN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RETRAIN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RCB_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RCB_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RCB_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_RCB_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_EXTSYNC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_EXTSYNC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_EXTSYNC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_EXTSYNC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_DISABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_DISABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_DISABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_CTL_DISABLE_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RTO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RNR_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BTP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_BDP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1S_ALIAS_RE_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll = new(
					fire_plc_tlu_ctb_tlr_csr_a_serdes_pll_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_LB_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_LB_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_LB_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_LB_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_SPARE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_SPARE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_SPARE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_SPARE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_MPY_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_MPY_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_MPY_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_PLL_MPY_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer = new(
					fire_plc_tlu_ctb_tlr_csr_a_acknak_timer_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_ACK_NAK_TMR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_ACK_NAK_TMR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_ACK_NAK_TMR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_ACKNAK_TIMER_ACK_NAK_TMR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_pec_int_en = new(
					fire_dlc_ilu_cib_csr_a_pec_int_en_state,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_dlc_ilu_cib_csr_a_pec_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_CE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_CE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_CE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_CE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_ILU_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_ILU_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_ILU_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_ILU_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_OE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_OE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_OE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_OE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_int_en.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_UE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_UE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_UE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_INT_EN_PEC_UE_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SRC_TLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SRC_TLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SRC_TLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SRC_TLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_OUTSTANDING_SKIP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_OUTSTANDING_SKIP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_OUTSTANDING_SKIP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_OUTSTANDING_SKIP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_HOT_RST_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_HOT_RST_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_HOT_RST_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_HOT_RST_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDP_NO_END_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDP_NO_END_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDP_NO_END_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDP_NO_END_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS2_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS2_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS2_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_TS2_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDS_LOS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDS_LOS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDS_LOS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SDS_LOS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_SEND_SKP_B2B_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_SEND_SKP_B2B_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_SEND_SKP_B2B_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_SEND_SKP_B2B_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_OVRFLW_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_PAD_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_PAD_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_PAD_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_PAD_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EN_LB_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EN_LB_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EN_LB_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EN_LB_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_KCHAR_DLLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_KCHAR_DLLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_KCHAR_DLLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_KCHAR_DLLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_END_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_END_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_END_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_END_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_UNSUP_DLLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_UNSUP_DLLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_UNSUP_DLLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_UNSUP_DLLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ELASTIC_FIFO_UNDRFLW_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_STP_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_STP_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_STP_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_STP_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_SDP_POS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_SDP_POS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_SDP_POS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ILL_SDP_POS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ALIGN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ALIGN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ALIGN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_ALIGN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_STP_NO_END_EDB_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_STP_NO_END_EDB_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_STP_NO_END_EDB_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_STP_NO_END_EDB_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_DIS_LINK_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_DIS_LINK_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_DIS_LINK_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_DIS_LINK_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SYNC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SYNC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SYNC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_SYNC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_SDP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_SDP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_SDP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_SDP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_STP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_STP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_STP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_MULTI_STP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_END_EDB_NO_STP_SDP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_END_EDB_NO_STP_SDP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_END_EDB_NO_STP_SDP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_ERR_END_EDB_NO_STP_SDP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_EXIT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_EXIT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_EXIT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_EVENT_ERR_STS_CLR_RW1C_ALIAS_EVT_RCV_EIDLE_EXIT_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_pec_en_err = new(
					fire_dlc_ilu_cib_csr_a_pec_en_err_state,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_dlc_ilu_cib_csr_a_pec_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_UE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_UE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_UE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_UE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_OE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_OE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_OE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_OE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_CE_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_CE_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_CE_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_CE_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_pec_en_err.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_ILU_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_ILU_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_ILU_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_PEC_EN_ERR_ILU_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias = new(
					fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias_state,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE3_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE2_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_IHB_PE_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1S_ALIAS_SPARE1_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_diag_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_TRG_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_TRG_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_TRG_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_TRG_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPP_DIS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPP_DIS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPP_DIS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPP_DIS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_PAR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_PAR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_PAR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_PAR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_PAR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_PAR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_PAR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_PAR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_TRG_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_TRG_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_TRG_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_EPI_TRG_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_PAR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_PAR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_PAR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_PAR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_TRG_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_TRG_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_TRG_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_ERBI_TRG_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_TRG_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_TRG_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_TRG_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IDI_TRG_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_CHK_DIS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_CHK_DIS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_CHK_DIS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_CHK_DIS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_MRC_TRG_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_MRC_TRG_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_MRC_TRG_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_MRC_TRG_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_PAR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_PAR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_PAR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IHI_PAR_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IFC_DIS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IFC_DIS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IFC_DIS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DIAG_IFC_DIS_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer = new(
					fire_plc_tlu_ctb_tlr_csr_a_symbol_timer_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_SKIP_INTERVAL_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_SKIP_INTERVAL_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_SKIP_INTERVAL_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_SYMBOL_TIMER_SKIP_INTERVAL_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_link_ctl = new(
					fire_plc_tlu_ctb_tlr_csr_a_link_ctl_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SCRAMBLE_DISABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SCRAMBLE_DISABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SCRAMBLE_DISABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SCRAMBLE_DISABLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_ELASTICAL_BUFFER_DISABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_ELASTICAL_BUFFER_DISABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_ELASTICAL_BUFFER_DISABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_ELASTICAL_BUFFER_DISABLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SPARE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SPARE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SPARE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_SPARE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_CAPABLE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_CAPABLE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_CAPABLE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_CAPABLE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RESET_ASSERT_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RESET_ASSERT_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RESET_ASSERT_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RESET_ASSERT_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_FAST_LINK_MODE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_FAST_LINK_MODE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_FAST_LINK_MODE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_FAST_LINK_MODE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RX_HIGH_IMP_DIS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RX_HIGH_IMP_DIS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RX_HIGH_IMP_DIS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_RX_HIGH_IMP_DIS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_NUM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_NUM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_NUM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_LINK_NUM_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_N_FTS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_N_FTS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_N_FTS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LINK_CTL_N_FTS_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias = new(
					fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_P_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RTO_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RNR_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BTP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_BDP_S_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_P_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_P_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_P_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_CE_ERR_RW1C_ALIAS_RE_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_erb_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CL_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CL_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CL_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ERB_CL_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHI_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHI_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHI_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHI_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHI_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHI_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHI_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHI_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_PHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHI_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHI_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHI_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHI_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_CHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECC_NHC_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_ue_log = new(
					fire_plc_tlu_ctb_tlr_csr_a_ue_log_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_ue_log.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_UE_LOG_EN_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_L0S_TIM_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_L0S_TIM_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_L0S_TIM_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_L0S_TIM_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_NPWR_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_NPWR_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_NPWR_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_NPWR_EN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CTO_SEL_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CTO_SEL_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CTO_SEL_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CTO_SEL_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CONFIG_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CONFIG_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CONFIG_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_CTL_CONFIG_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias = new(
					fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias_state,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_HW_ADDR,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_POR_VALUE,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_RMASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_READ_ONLY_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_WRITE_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_CLEAR_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SET_MASK,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_TOGGLE_MASK,
					input_name,
					FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE3_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_S_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_S_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_S_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE2_S_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_IHB_PE_P_FIELD_NAME
						  );
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.init_field_info (
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_P_FID,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_P_FMASK,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_P_POSITION,
						  FIRE_DLC_ILU_CIB_CSR_A_ILU_LOG_ERR_RW1C_ALIAS_SPARE1_P_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDI_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDI_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDI_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDI_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDI_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDI_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDI_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDI_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_CHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_NHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDI_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDI_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDI_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ECL_PDI_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_ica_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_PHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_CHC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NDC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NDC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NDC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NDC_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NHC_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NHC_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NHC_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_ICA_NHC_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_dev_cap = new(
					fire_plc_tlu_ctb_tlr_csr_a_dev_cap_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_dev_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_MPS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_MPS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_MPS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_MPS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_dev_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L1_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L1_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L1_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L1_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_dev_cap.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L0S_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L0S_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L0S_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CAP_L0S_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_SIGNAL_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_SIGNAL_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_SIGNAL_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_SIGNAL_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_MODULE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_MODULE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_MODULE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_MODULE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_BLOCK_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_BLOCK_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_BLOCK_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_A_BLOCK_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b = new(
					fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_SIGNAL_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_SIGNAL_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_SIGNAL_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_SIGNAL_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_MODULE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_MODULE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_MODULE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_MODULE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_BLOCK_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_BLOCK_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_BLOCK_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_TLU_DBG_SEL_B_BLOCK_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_READ_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1 = new(
					fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_DAEMON
					);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_EN_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_EN_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_EN_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_EN_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_PRE_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_PRE_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_PRE_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_PRE_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_TLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_TLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_TLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_TLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_DLLP_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_DLLP_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_DLLP_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_CNT_BAD_DLLP_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_CLR_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_CLR_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_CLR_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_LNK_BIT_ERR_CNT_1_BER_COUNT_CLR_FIELD_NAME
						  );
		sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_NAME);
		sprintf(input_name,"%s_%0d",base_csr_name,0);
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl = new(
					fire_plc_tlu_ctb_tlr_csr_a_dev_ctl_state,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_HW_ADDR,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MPS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MPS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MPS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MPS_FIELD_NAME
						  );
		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl.init_field_info (
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MRRS_FID,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MRRS_FMASK,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MRRS_POSITION,
						  FIRE_PLC_TLU_CTB_TLR_CSR_A_DEV_CTL_MRRS_FIELD_NAME
						  );

	//////////////////////// Multi-Entry CSRs //////////////////////////////
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH; ++offset) {
			sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_NAME);
			sprintf(input_name,"%s_%0d",base_csr_name,offset);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset] = new(
					fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl_state[offset],
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_HW_ADDR + offset,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_INVPAIR_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_INVPAIR_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_INVPAIR_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_INVPAIR_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DE_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DE_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DE_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DE_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_ENTEST_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_ENTEST_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_ENTEST_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_ENTEST_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SWING_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SWING_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SWING_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SWING_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SPARE_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SPARE_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SPARE_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_SPARE_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_CM_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_CM_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_CM_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_CM_FIELD_NAME
								  );
		}
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH; ++offset) {
			sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_NAME);
			sprintf(input_name,"%s_%0d",base_csr_name,offset);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset] = new(
					fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status_state[offset],
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_HW_ADDR + offset,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_LOSDTCT_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_LOSDTCT_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_LOSDTCT_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_LOSDTCT_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_TESTFAIL_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_TESTFAIL_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_TESTFAIL_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_TESTFAIL_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_SYNC_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_SYNC_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_SYNC_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_SYNC_FIELD_NAME
								  );
		}
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH; ++offset) {
			sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_NAME);
			sprintf(input_name,"%s_%0d",base_csr_name,offset);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[offset] = new(
					fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status_state[offset],
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_HW_ADDR + offset,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_TESTFAIL_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_TESTFAIL_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_TESTFAIL_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_TESTFAIL_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_RDTCTIP_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_RDTCTIP_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_RDTCTIP_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_RDTCTIP_FIELD_NAME
								  );
		}
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH; ++offset) {
			sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_NAME);
			sprintf(input_name,"%s_%0d",base_csr_name,offset);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset] = new(
					fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg_state[offset],
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_HW_ADDR + offset,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENRXPATT_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENRXPATT_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENRXPATT_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENRXPATT_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_CLKBYP_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_CLKBYP_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_CLKBYP_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_CLKBYP_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_LOOPBACK_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_LOOPBACK_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_LOOPBACK_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_LOOPBACK_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RATE_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RATE_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RATE_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RATE_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_INVPATT_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_INVPATT_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_INVPATT_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_INVPATT_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSTX_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSTX_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSTX_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSTX_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSPT_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSPT_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSPT_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSPT_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RESERVED_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RESERVED_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RESERVED_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_RESERVED_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_TESTPATT_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_TESTPATT_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_TESTPATT_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_TESTPATT_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENTXPATT_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENTXPATT_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENTXPATT_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENTXPATT_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSRX_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSRX_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSRX_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_ENBSRX_FIELD_NAME
								  );
		}
		access_level[CSRT_DAEMON] = CSRT_FULL_ACCESS;
		access_level[CSRT_OMNI] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_MED] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_FAST] = CSRT_FULL_ACCESS;
		access_level[FIRE_PIO_SLOW] = CSRT_FULL_ACCESS;
		access_level[FIRE_JTAG] = CSRT_FULL_ACCESS;
		access_name[CSRT_DAEMON] = "DAEMON";
		access_name[CSRT_OMNI] = "OMNI";
		access_name[FIRE_PIO_MED] = "PIO_MED";
		access_name[FIRE_PIO_FAST] = "PIO_FAST";
		access_name[FIRE_PIO_SLOW] = "PIO_SLOW";
		access_name[FIRE_JTAG] = "JTAG";

		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH; ++offset) {
			sprintf(base_csr_name,"%s", FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_NAME);
			sprintf(input_name,"%s_%0d",base_csr_name,offset);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset] = new(
					fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl_state[offset],
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_HW_ADDR + offset,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_POR_VALUE,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_RMASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_READ_ONLY_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_WRITE_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CLEAR_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_SET_MASK,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_TOGGLE_MASK,
					input_name,
					FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_NUM_FIELDS,
					input_access_methods,
					access_level,
					access_name,
					CSRT_OMNI
					);
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CDR_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CDR_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CDR_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CDR_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_TERM_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_TERM_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_TERM_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_TERM_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXN_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXN_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXN_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXN_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CMA_ALN_EN_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CMA_ALN_EN_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CMA_ALN_EN_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_CMA_ALN_EN_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_ENTEST_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_ENTEST_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_ENTEST_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_ENTEST_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXP_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXP_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXP_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_BSINRXP_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_LOS_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_LOS_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_LOS_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_LOS_FIELD_NAME
								  );
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].init_field_info (
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_EQ_FID,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_EQ_FMASK,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_EQ_POSITION,
								  FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_EQ_FIELD_NAME
								  );
		}
	} //End New

	//===============================================================
	//              Check Registers Function
	//===============================================================

	function integer check_registers (integer method = CSRT_USE_DEFAULT_METHOD) {
		integer status = CSRT_SUCCESSFUL_RETURN_CODE;
		integer ZTMethod, NZTMethod;


		if (method == CSRT_USE_DEFAULT_METHOD) {
      			ZTMethod = CSRT_OMNI;
      			NZTMethod = CSRT_DAEMON;
      		}
		else {
      			ZTMethod = method;
      			NZTMethod = method;
      		}
		//////////////////// Register Disable List //////////////////

		//////////////////// Per Register Checks //////////////////
		status &= fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_slt_cap.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_link_cfg.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_force_ltssm.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_ilu_int_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_oe_log.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_ilu_log_en.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_ilu_en_err.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_oe_int_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_oe_en_err.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_symbol_num.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_replay_timer.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_sts.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ce_int_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ce_en_err.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_dev_sts.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_trn_off.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_ilu_diagnos.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ce_log.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_lane_skew.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ue_int_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_core_status.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ue_en_err.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_serdes_pll.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_acknak_timer.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_pec_int_en.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_pec_en_err.check_register(NZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_symbol_timer.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_link_ctl.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_erb.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_ue_log.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.check_register(ZTMethod);
		status &= fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_dev_cap.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b.check_register(ZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.check_register(NZTMethod);
		status &= fire_plc_tlu_ctb_tlr_csr_a_dev_ctl.check_register(ZTMethod);
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH; ++offset) {
			status &= fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].check_register(ZTMethod);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH; ++offset) {
			status &= fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset].check_register(ZTMethod);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH; ++offset) {
			status &= fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[offset].check_register(ZTMethod);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH; ++offset) {
			status &= fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].check_register(ZTMethod);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH; ++offset) {
			status &= fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].check_register(ZTMethod);
		}

		check_registers = status;
	} // end check_registers

	//===============================================================
	//              Reset Registers
	//===============================================================

	task reset_all_shadow_registers () {

		//////////////////// Per Register Resets //////////////////
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.reset();
		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh.reset();
		fire_plc_tlu_ctb_tlr_csr_a_slt_cap.reset();
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.reset();
		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm.reset();
		fire_dlc_ilu_cib_csr_a_ilu_int_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_oe_log.reset();
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.reset();
		fire_dlc_ilu_cib_csr_a_ilu_log_en.reset();
		fire_dlc_ilu_cib_csr_a_ilu_en_err.reset();
		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err.reset();
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num.reset();
		fire_plc_tlu_ctb_tlr_csr_a_replay_timer.reset();
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1.reset();
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1.reset();
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2.reset();
		fire_plc_tlu_ctb_tlr_csr_a_dev_sts.reset();
		fire_plc_tlu_ctb_tlr_csr_a_trn_off.reset();
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.reset();
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1.reset();
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ce_log.reset();
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts.reset();
		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev.reset();
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1.reset();
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2.reset();
		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg.reset();
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_core_status.reset();
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err.reset();
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll.reset();
		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer.reset();
		fire_dlc_ilu_cib_csr_a_pec_int_en.reset();
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.reset();
		fire_dlc_ilu_cib_csr_a_pec_en_err.reset();
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.reset();
		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer.reset();
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.reset();
		fire_plc_tlu_ctb_tlr_csr_a_ue_log.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.reset();
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.reset();
		fire_plc_tlu_ctb_tlr_csr_a_dev_cap.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a.reset();
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b.reset();
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.reset();
		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl.reset();
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].reset();
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset].reset();
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[offset].reset();
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].reset();
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].reset();
		}
	} // end reset_all_shadow_registers


	//===============================================================
	//    Change default access method for all registers
	//===============================================================

	task set_all_default_access_methods (integer method) {
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_2.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ici.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_replay_tim_thresh.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_slt_cap.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_link_cfg.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_icr.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_force_ltssm.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_ilu_int_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_oe_log.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1s_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_sts.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_ilu_log_en.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_ilu_en_err.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_log_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_oe_int_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ue_err_rw1c_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_oe_en_err.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_symbol_num.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_replay_timer.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr1.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_rue_hdr2.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf0.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf1.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1s_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prf2.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_sts.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ce_int_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ce_en_err.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr1.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tue_hdr2.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_dev_sts.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_trn_off.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_ilu_diagnos.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_oe_err_rw1c_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr1.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_roe_hdr2.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_prfc.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ce_log.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_int_sts.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_peu_dlpl_serdes_rev.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr1.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_toe_hdr2.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_acknak_thresh.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ven_dllp_msg.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_lane_skew.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ue_int_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_core_status.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_cap.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ue_en_err.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1s_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_ctl.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1s_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_serdes_pll.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_acknak_timer.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_pec_int_en.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_event_err_sts_clr_rw1c_alias.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_pec_en_err.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1s_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_diag.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_symbol_timer.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_link_ctl.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ce_err_rw1c_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_erb.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecc.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_ue_log.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ctl.set_default_access_method(method);
		fire_dlc_ilu_cib_csr_a_ilu_log_err_rw1c_alias.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ecl.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_ica.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_dev_cap.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_a.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_tlu_dbg_sel_b.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_lnk_bit_err_cnt_1.set_default_access_method(method);
		fire_plc_tlu_ctb_tlr_csr_a_dev_ctl.set_default_access_method(method);
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_CTL_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_ctl[offset].set_default_access_method(method);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_STATUS_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_status[offset].set_default_access_method(method);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_XMITTER_LANE_STATUS_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_xmitter_lane_status[offset].set_default_access_method(method);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_MACRO_TEST_CFG_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_macro_test_cfg[offset].set_default_access_method(method);
		}
		for (offset = 0; offset < FIRE_PLC_TLU_CTB_TLR_CSR_A_SERDES_RECEIVER_LANE_CTL_DEPTH; ++offset) {
			fire_plc_tlu_ctb_tlr_csr_a_serdes_receiver_lane_ctl[offset].set_default_access_method(method);
		}
	} // set_all_default_access_methods

} //End FIRE_CSRCollection
