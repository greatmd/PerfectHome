// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: CTVerifObjectBase.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>

// The abstract base classes defined here have the following format:
//
// Public Instance Variables
//
// Private Instance Variables
//
// Protected Instance Variables
//
// Pure Virtual Methods
//
// Super-class Virtual Methods
//
// Public Methods
//
// Private Methods


// Tests, contexts, and strategies are defined as verification objects, therefore,
// all Test, Context, and Strategy classes descend from the VerifObject class.
//
virtual class CTVerifObject {

  // Variables that are "global" in reference to VerifObjects (i.e., tests, contexts, and strategies)
  // are defined below.
  // (Note: global is used in quotes because true global variables (in the technical sense)
  // are defined in the scope of the program block.)

  // Examples: class libraries of math or set operations.

  // Behaviors or methods common to VerifObjects are defined (implemented) below. 
  // This does not mean that any interfaces are being enforced from this high level;
  // instead, this follows the Java model of behavior being shared by every class.

  task new () {}
}







