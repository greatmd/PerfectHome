// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: CTThreadAttributes.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>

/* 
 * The CTThreadAttributes class is used to define criteria which will describe
 * strategy threads which are registered in the Thread Manager database.
 *
 * This base class contains no criteria by default and must be extended by any
 * testbench which wishes to use the Thread Manager.  
 *
 */
virtual class CTThreadAttributes
{
  // Ordinal number of this thread (assigned by ThreadMgr on registration)
  protected integer ThreadNumber = -1; 
  virtual task setThreadNumber(integer num)  { if (num >= 0) ThreadNumber = num; }
  virtual function integer getThreadNumber() { getThreadNumber = ThreadNumber; }

  // Attributes for this thread, and methods to deal with them.
  // NOTE: Default attributes must be supplied in subclasses within each testbench.
  virtual function integer compareAttributes(CTThreadAttributes attr);
  virtual function string attributesToString();
}
