// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: CSRAccessMethod.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include "general_csr_defines.vri"
#include "cReport.vrh"

//=================================================
//	This virtual class enforces the interface to any user defined methods
//=================================================

class CSRAccessMethod {

  protected bit [CSRT_MODE_WIDTH-1:0] accessor_mode;
  protected ReportClass     CSRReport = new ;

   //=================================================
   //		Constructor
   //=================================================

   task new (integer input_verbosity_level = CSRT_ERROR_MSG_ONLY_ENABLED) {
      accessor_mode = ZEROS;
   } // end task new ()



   //=================================================
   //		Virtual Read Function
   //=================================================

   virtual function bit [CSRT_DATA_WIDTH-1:0] read (bit[CSRT_ADDR_OFFSET_WIDTH-1:0] addr) {}



   //=================================================
   //		Virtual Write Task
   //=================================================

   virtual task write (bit[CSRT_ADDR_OFFSET_WIDTH-1:0] addr, bit [CSRT_DATA_WIDTH-1:0] data) {}



   //=================================================
   //		Set Accessor Mode Task
   //=================================================

   task set_accessor_mode (bit [CSRT_MODE_WIDTH-1:0] new_accessor_mode) {
      accessor_mode = new_accessor_mode;
   } // end task set_accessor_mode()



   //=================================================
   //		Get Accessor Mode Function
   //=================================================

   function bit [CSRT_MODE_WIDTH-1:0] get_accessor_mode () {
      get_accessor_mode = accessor_mode;
   } // end function get_accessor_mode()


} // end class CSRAccessMethod



