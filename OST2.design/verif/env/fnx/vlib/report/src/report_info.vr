// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: report_info.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include <report_msg_format.vrh>

/*
  Print level:	A "verbosity" parameter assigned to each ReportClass instance.
		The message type will be displayed if the global print threshold
		is greater than or equal to the message's print level.
		Note that Nonmaskable messages (errors, warnings) will always be printed.
*/
enum PrintLevel =
	RPRT_NOP		= 0,
	RPRT_DEBUG_3		= 1,
	RPRT_DEBUG_2		= 2,
	RPRT_DEBUG_1		= 3,
	RPRT_INFO		= 4,
	RPRT_NONMASKABLE		= 5;

/*
  Error level:	A "fatality" parameter assigned to each individual report.
		- Errors cause the "fatal keyword" to be printed in the log, and increment the error count.
		- Warnings cause the global warning count to be incremented.
		- Messages are simply displayed with no other side effects.
 */
enum ErrorLevel =
	RERR_MESSAGE		= 0,
	RERR_WARNING		= 1,
	RERR_ERROR		= 2;

/*
  Message types (standard and user)
*/
enum ReportType {
  __RTYP_FIRST_TYPE = 0,
	DCCCsrRing_RTYP_DATA_MISCOMPARE = 1,
	DCCCsrRing_RTYP_UNEXPECT_ERROR = 2,
	RTYP_ALL_REPORTS = 3,
	RTYP_CCC_XTR_SAMPLED_X_ERROR = 4,
	RTYP_CSR_ALERT = 5,
	RTYP_CSR_DEBUG_1 = 6,
	RTYP_CSR_DEBUG_2 = 7,
	RTYP_CSR_DEBUG_3 = 8,
	RTYP_CSR_ERROR = 9,
	RTYP_CSR_INFO = 10,
	RTYP_DATA_MISCOMPARE = 11,
	RTYP_DATA_PACKET_SM_CHECK = 12,
	RTYP_DEBUG_1 = 13,
	RTYP_DEBUG_2 = 14,
	RTYP_DEBUG_3 = 15,
	RTYP_DMC_DEBUG_1 = 16,
	RTYP_DMC_DEBUG_2 = 17,
	RTYP_DMC_DEBUG_3 = 18,
	RTYP_DMC_IMU_AGT_DEBUG_1 = 19,
	RTYP_DMC_IMU_AGT_DEBUG_2 = 20,
	RTYP_DMC_IMU_AGT_DEBUG_3 = 21,
	RTYP_DMC_IMU_AGT_GC_INVALID_ERROR = 22,
	RTYP_DMC_IMU_AGT_INFO = 23,
	RTYP_DMC_INFO = 24,
	RTYP_DMC_MMU_AGT_DEBUG_1 = 25,
	RTYP_DMC_MMU_AGT_DEBUG_2 = 26,
	RTYP_DMC_MMU_AGT_DEBUG_3 = 27,
	RTYP_DMC_MMU_AGT_INFO = 28,
	RTYP_DRV_PROT = 29,
	RTYP_EXP_PROT = 30,
	RTYP_FNXMMUINFORMER_DUP_TBLWLK_ERROR = 31,
	RTYP_FNXMMUINFORMER_INTERNAL_ERROR = 32,
	RTYP_FNXMMUINFORMER_INVALIDATE_ERROR = 33,
	RTYP_FNXMMUINFORMER_QUEUE_ERROR = 34,
	RTYP_FNXMMUINFORMER_UNEXPECT_ERROR = 35,
	RTYP_FNXMMUINFORMER_WRONG_MTAG_ERROR = 36,
	RTYP_FNX_PCIE_XTR_DEBUG_1 = 37,
	RTYP_FNX_PCIE_XTR_DEBUG_2 = 38,
	RTYP_FNX_PCIE_XTR_DEBUG_3 = 39,
	RTYP_FNX_PCIE_XTR_ERROR = 40,
	RTYP_FNX_PCIE_XTR_INFO = 41,
	RTYP_FNX_PCIE_XTR_PYLD = 42,
	RTYP_FNX_TB_ALERT = 43,
	RTYP_FNX_TB_CALL_STACK_MSG = 44,
	RTYP_FNX_TB_ = 45,
	RTYP_FNX_TB_NONMASK = 46,
	RTYP_FNX_TB_UNHANDLED_ERROR_CONDITION = 47,
	RTYP_IBXTR_DATA_PKT_CHK_MACHINE_ERROR = 48,
	RTYP_IBXTR_DUP_EXPECT = 49,
	RTYP_IBXTR_EBP_WARNING = 50,
	RTYP_IBXTR_LINK_PKT_CHK_MACHINE_ERROR = 51,
	RTYP_IBXTR_MAJOR_ERROR_DETECTED = 52,
	RTYP_IBXTR_MINOR_ERROR_DETECTED = 53,
	RTYP_IBXTR_PRINT_DRIVEN_DATA = 54,
	RTYP_IBXTR_PRINT_PKT_PYLD = 55,
	RTYP_IBXTR_PRINT_SAMPLED_DATA = 56,
	RTYP_IBXTR_PYLD_LENGTH_ERROR = 57,
	RTYP_IBXTR_PYLD_SRC_ERROR = 58,
	RTYP_IBXTR_RSVD_FIELD_ERROR = 59,
	RTYP_INFO = 60,
	RTYP_INFORMER_EXPECT_REMOVED_BY_USER = 61,
	RTYP_INFORMER_EXPECT_TIMEOUT_ERR = 62,
	RTYP_INFORMER_ILLEGAL_METHOD_WARNING = 63,
	RTYP_INFORMER_SAMPLED_X_ERR = 64,
	RTYP_INFORMER_SAMPLE_TIMEOUT_ERR = 65,
	RTYP_INTERNAL_ERROR = 66,
	RTYP_JBCDMC_MON_DEBUG1 = 67,
	RTYP_JBCDMC_MON_DEBUG2 = 68,
	RTYP_JBCDMC_MON_DEBUG3 = 69,
	RTYP_JBCDMC_MON_ERROR = 70,
	RTYP_JBCDMC_MON_INFO = 71,
	RTYP_JBCDMC_MON_WARNING = 72,
	RTYP_LINK_PACKET_SM_CHECK = 73,
	RTYP_MCMS_RTL_DEBUG_1 = 74,
	RTYP_MCMS_RTL_DEBUG_2 = 75,
	RTYP_MCMS_RTL_DEBUG_3 = 76,
	RTYP_MCMS_RTL_ERROR = 77,
	RTYP_MCMS_RTL_INFO = 78,
	RTYP_MCMS_RTL_INTERNAL_ERROR = 79,
	RTYP_MIBE_CSRXTR_SAMPLED_X_ERROR = 80,
	RTYP_MIBE_SPE_TB_NONMASKABLE = 81,
	RTYP_MIBE_TB_ALERT = 82,
	RTYP_MIBE_TB_CALL_STACK_MSG = 83,
	RTYP_MIBE_TB_FDB_ALLOC_TIMEOUT = 84,
	RTYP_MIBE_TB_PAYLD_STORE_TIMEOUT = 85,
	RTYP_MIBE_TB_UNHANDLED_ERROR_CONDITION = 86,
	RTYP_MIBE_XRAMMON_SI_ERR0 = 87,
	RTYP_MIBE_XRAMMON_SI_ERR1 = 88,
	RTYP_MIBE_XRAMMON_SI_ERR10 = 89,
	RTYP_MIBE_XRAMMON_SI_ERR11 = 90,
	RTYP_MIBE_XRAMMON_SI_ERR12 = 91,
	RTYP_MIBE_XRAMMON_SI_ERR13 = 92,
	RTYP_MIBE_XRAMMON_SI_ERR14 = 93,
	RTYP_MIBE_XRAMMON_SI_ERR15 = 94,
	RTYP_MIBE_XRAMMON_SI_ERR16 = 95,
	RTYP_MIBE_XRAMMON_SI_ERR17 = 96,
	RTYP_MIBE_XRAMMON_SI_ERR18 = 97,
	RTYP_MIBE_XRAMMON_SI_ERR19 = 98,
	RTYP_MIBE_XRAMMON_SI_ERR2 = 99,
	RTYP_MIBE_XRAMMON_SI_ERR3 = 100,
	RTYP_MIBE_XRAMMON_SI_ERR4 = 101,
	RTYP_MIBE_XRAMMON_SI_ERR5 = 102,
	RTYP_MIBE_XRAMMON_SI_ERR6 = 103,
	RTYP_MIBE_XRAMMON_SI_ERR7 = 104,
	RTYP_MIBE_XRAMMON_SI_ERR8 = 105,
	RTYP_MIBE_XRAMMON_SI_ERR9 = 106,
	RTYP_MIBE_XRAMXACT_BUS_CONTENTION_ERROR = 107,
	RTYP_MIBE_XRAMXACT_BUS_INVALID_COMMAND = 108,
	RTYP_MIBE_XRAMXACT_DDR_INIT_ERROR = 109,
	RTYP_MON_DDRSDRAM_STATE_DEBUG = 110,
	RTYP_MON_DDRSDRAM_STATE_ERR0 = 111,
	RTYP_MON_DDRSDRAM_STATE_ERR1 = 112,
	RTYP_MON_DDRSDRAM_STATE_ERR10 = 113,
	RTYP_MON_DDRSDRAM_STATE_ERR11 = 114,
	RTYP_MON_DDRSDRAM_STATE_ERR12 = 115,
	RTYP_MON_DDRSDRAM_STATE_ERR13 = 116,
	RTYP_MON_DDRSDRAM_STATE_ERR14 = 117,
	RTYP_MON_DDRSDRAM_STATE_ERR15 = 118,
	RTYP_MON_DDRSDRAM_STATE_ERR2 = 119,
	RTYP_MON_DDRSDRAM_STATE_ERR3 = 120,
	RTYP_MON_DDRSDRAM_STATE_ERR4 = 121,
	RTYP_MON_DDRSDRAM_STATE_ERR5 = 122,
	RTYP_MON_DDRSDRAM_STATE_ERR6 = 123,
	RTYP_MON_DDRSDRAM_STATE_ERR7 = 124,
	RTYP_MON_DDRSDRAM_STATE_ERR8 = 125,
	RTYP_MON_DDRSDRAM_STATE_ERR9 = 126,
	RTYP_MSMC_RAMMON_SI_ERR1 = 127,
	RTYP_MSMC_RAMMON_SI_ERR10 = 128,
	RTYP_MSMC_RAMMON_SI_ERR11 = 129,
	RTYP_MSMC_RAMMON_SI_ERR12 = 130,
	RTYP_MSMC_RAMMON_SI_ERR13 = 131,
	RTYP_MSMC_RAMMON_SI_ERR14 = 132,
	RTYP_MSMC_RAMMON_SI_ERR15 = 133,
	RTYP_MSMC_RAMMON_SI_ERR16 = 134,
	RTYP_MSMC_RAMMON_SI_ERR17 = 135,
	RTYP_MSMC_RAMMON_SI_ERR18 = 136,
	RTYP_MSMC_RAMMON_SI_ERR19 = 137,
	RTYP_MSMC_RAMMON_SI_ERR2 = 138,
	RTYP_MSMC_RAMMON_SI_ERR3 = 139,
	RTYP_MSMC_RAMMON_SI_ERR4 = 140,
	RTYP_MSMC_RAMMON_SI_ERR5 = 141,
	RTYP_MSMC_RAMMON_SI_ERR6 = 142,
	RTYP_MSMC_RAMMON_SI_ERR7 = 143,
	RTYP_MSMC_RAMMON_SI_ERR8 = 144,
	RTYP_MSMC_RAMMON_SI_ERR9 = 145,
	RTYP_PCIE_TLP_DEBUG1 = 146,
	RTYP_PCIE_TLP_DEBUG2 = 147,
	RTYP_PCIE_TLP_DEBUG3 = 148,
	RTYP_PCIE_TLP_ERROR = 149,
	RTYP_PCIE_TLP_INFO = 150,
	RTYP_PCIE_TLP_WARNING = 151,
	RTYP_PORT_SM_CHECK = 152,
	RTYP_QPS_RTL_DEBUG_1 = 153,
	RTYP_QPS_RTL_DEBUG_2 = 154,
	RTYP_QPS_RTL_DEBUG_3 = 155,
	RTYP_QPS_RTL_ERROR = 156,
	RTYP_QPS_RTL_INFO = 157,
	RTYP_RAP_XACTOR_DEBUG_1 = 158,
	RTYP_RAP_XACTOR_DEBUG_EXPECT_Q = 159,
	RTYP_RAP_XACTOR_DEBUG_PHY_CONNECTION = 160,
	RTYP_RAP_XACTOR_ERR = 161,
	RTYP_RAP_XACTOR_ERR_FLOW_CONTROL = 162,
	RTYP_RAP_XACTOR_ERR_PKT_MATCH = 163,
	RTYP_RAP_XACTOR_ERR_X_ON_BUS = 164,
	RTYP_RAP_XACTOR_MSG = 165,
	RTYP_RAP_XACTOR_MSG_MIN = 166,
	RTYP_RAP_XACTOR_WARN = 167,
	RTYP_RBC_RTL_DEBUG_1 = 168,
	RTYP_RBC_RTL_DEBUG_2 = 169,
	RTYP_RBC_RTL_DEBUG_3 = 170,
	RTYP_RBC_RTL_ERROR = 171,
	RTYP_RBC_RTL_INFO = 172,
	RTYP_RECEIVE_SM_CHECK = 173,
	RTYP_REPORT_MSG = 174,
	RTYP_RSUTRANS_ERROR = 175,
	RTYP_RSUTRANS_INFO = 176,
	RTYP_SBX_BAD_CRC = 177,
	RTYP_SBX_DATA_HOLD_ERROR = 178,
	RTYP_SBX_DEBUG_1 = 179,
	RTYP_SBX_DEBUG_2 = 180,
	RTYP_SBX_FALSE_PKT_START = 181,
	RTYP_SBX_INCOMPLETE = 182,
	RTYP_SBX_INFO = 183,
	RTYP_SBX_STRAY_BIT = 184,
	RTYP_SBX_XEXPECT = 185,
	RTYP_SBX_X_ON_BUS = 186,
	RTYP_SFQ_RTL_CSRQ_ERROR = 187,
	RTYP_SFQ_RTL_CSRQ_PUSH = 188,
	RTYP_SFQ_RTL_USER_DEBUG_MSG = 189,
	RTYP_SFQ_RTL_USER_DEFINED_MSG = 190,
	RTYP_SFQ_RTL_USER_ERROR = 191,
	RTYP_SFQ_TB_ENQUEUE_XACTION = 192,
	RTYP_SFQ_TB_USER_DEBUG_MSG = 193,
	RTYP_SFQ_TB_USER_DEFINED_MSG = 194,
	RTYP_SFQ_TB_USER_ERROR = 195,
	RTYP_SPE_RTL_DEBUG_1 = 196,
	RTYP_SPE_RTL_DEBUG_2 = 197,
	RTYP_SPE_RTL_DEBUG_3 = 198,
	RTYP_SPE_RTL_ERROR = 199,
	RTYP_SPE_RTL_INFO = 200,
	RTYP_STREAM_CHECK = 201,
	RTYP_TB_THREADMGR_DB_UPDATE = 202,
	RTYP_TB_THREADMGR_DEBUG_3 = 203,
	RTYP_TB_THREADMGR_SIGNAL_BROADCAST = 204,
	RTYP_TB_THREADMGR_THREADS_INCOMPLETE_ERROR = 205,
	RTYP_TB_THREADMGR_THREAD_LIST = 206,
	RTYP_TB_THREADMGR_WARNING = 207,
	RTYP_TDB_RTL_INFO = 208,
	RTYP_TEST_ERROR = 209,
	RTYP_TII_MON_DEBUG1 = 210,
	RTYP_TII_MON_DEBUG2 = 211,
	RTYP_TII_MON_DEBUG3 = 212,
	RTYP_TII_MON_ERROR = 213,
	RTYP_TII_MON_INFO = 214,
	RTYP_TII_MON_WARNING = 215,
	RTYP_TIMEOUT = 216,
	RTYP_TLULPU_MON_DEBUG1 = 217,
	RTYP_TLULPU_MON_DEBUG2 = 218,
	RTYP_TLULPU_MON_DEBUG3 = 219,
	RTYP_TLULPU_MON_ERROR = 220,
	RTYP_TLULPU_MON_INFO = 221,
	RTYP_TLULPU_MON_WARNING = 222,
	RTYP_TTL_PROT = 223,
	RTYP_UNEXPECT_ERROR = 224,
	RTYP_VERA_ERROR = 225,
	RTYP_VERILOG_ERROR = 226,
	RTYP_WARNING = 227,
	RTYP_XACTOR_FMWORK_DUP_EXPECT_ERR = 228,
	RTYP_XACTOR_FMWORK_DUP_WILDCARD_EXPECT_WARN = 229,
	RTYP_XACTOR_FMWORK_EXPECT_REMOVED_BY_USER = 230,
	RTYP_XACTOR_FMWORK_EXPECT_TIMEOUT_ERR = 231,
	RTYP_XACTOR_FMWORK_MEM_ALLOCATION_ERROR = 232,
	RTYP_XACTOR_FMWORK_MSG = 233,
	RTYP_XACTOR_FMWORK_SAMPLED_DUP_XACTION_ERR = 234,
	RTYP_XACTOR_FMWORK_SAMPLED_X_ERR = 235,
	RTYP_XACTOR_FMWORK_SAMPLE_TIMEOUT_ERR = 236,
	RTYP_XACTOR_FMWORK_UNEXPECTED_XACTION_ERR = 237,
	VRTYP_DTJXTR_CREDIT_ERROR = 238,
	VRTYP_DTJXTR_CREDIT_WARNING = 239,
	VRTYP_DTJXTR_DUP_TAG_ERROR = 240,
	VRTYP_DTJXTR_INTERNAL_DEBUG = 241,
	VRTYP_DTJXTR_INTERNAL_ERROR = 242,
	VRTYP_DTJXTR_INTERNAL_WARNING = 243,
	VRTYP_DTJXTR_PACKET_INFO = 244,
	VRTYP_DTJXTR_PROTOCOL_ERROR = 245,
	VRTYP_DTJXTR_UNKNOWN_PKT_WARNING = 246,
	VRTYP_EBUS_XTR_DEBUG1 = 247,
	VRTYP_EBUS_XTR_DEBUG2 = 248,
	VRTYP_EBUS_XTR_DEBUG3 = 249,
	VRTYP_EBUS_XTR_ERROR = 250,
	VRTYP_EBUS_XTR_INFO = 251,
	VRTYP_EBUS_XTR_VERA_ERROR = 252,
	VRTYP_EBUS_XTR_WARNING = 253,
	VRTYP_I2C_XTR_DEBUG1 = 254,
	VRTYP_I2C_XTR_DEBUG2 = 255,
	VRTYP_I2C_XTR_DEBUG3 = 256,
	VRTYP_I2C_XTR_ERROR = 257,
	VRTYP_I2C_XTR_INFO = 258,
	VRTYP_I2C_XTR_WARNING = 259,
	VRTYP_JBUS_XTR_DEBUG1 = 260,
	VRTYP_JBUS_XTR_DEBUG2 = 261,
	VRTYP_JBUS_XTR_DEBUG3 = 262,
	VRTYP_JBUS_XTR_ERROR = 263,
	VRTYP_JBUS_XTR_INFO = 264,
	VRTYP_JBUS_XTR_WARNING = 265,
	VRTYP_JDICOMMON_INFO = 266,
	VRTYP_JDICOMMON_INTERNAL_DEBUG = 267,
	VRTYP_JDICOMMON_INTERNAL_ERROR = 268,
	VRTYP_JDICOMMON_INTERNAL_WARNING = 269,
	VRTYP_JTDXTR_CREDIT_ERROR = 270,
	VRTYP_JTDXTR_CREDIT_WARNING = 271,
	VRTYP_JTDXTR_DUP_TAG_ERROR = 272,
	VRTYP_JTDXTR_INTERNAL_DEBUG = 273,
	VRTYP_JTDXTR_INTERNAL_ERROR = 274,
	VRTYP_JTDXTR_INTERNAL_WARNING = 275,
	VRTYP_JTDXTR_PACKET_INFO = 276,
	VRTYP_JTDXTR_PROTOCOL_ERROR = 277,
	VRTYP_JTDXTR_UNKNOWN_PKT_WARNING = 278,
	VRTYP_PECXTR_DISPLAY_DLLP_INFO = 279,
	VRTYP_PECXTR_DISPLAY_DOUBLE_WORD_INFO = 280,
	VRTYP_PECXTR_DISPLAY_TLP_ERROR = 281,
	VRTYP_PECXTR_DISPLAY_TLP_INFO = 282,
	VRTYP_PECXTR_ILLEGAL_CAST_ERR = 283,
	VRTYP_PECXTR_ILLEGAL_CLAUSE_ENTRY_ERR = 284,
	VRTYP_PECXTR_ILLEGAL_METHOD_CALL_ERR = 285,
	VRTYP_PECXTR_INVALID_DOUBLE_WORD_ERR = 286,
	VRTYP_PECXTR_PARITY_ERROR_ERR = 287,
	VRTYP_PECXTR_PEEK_EMPTY_QUEUE_ERR = 288,
	VRTYP_PECXTR_POP_EMPTY_QUEUE_ERR = 289,
	VRTYP_PECXTR_RX_CMD_AGAINST_TLP_IN_PROGRESS_ERR = 290,
	VRTYP_PECXTR_RX_INVALID_COMMAND_ERR = 291,
	VRTYP_PECXTR_RX_INVALID_DATA_CREDIT_IN_INIT_ERR = 292,
	VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_ERR = 293,
	VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_IN_INIT_ERR = 294,
	VRTYP_PECXTR_RX_INVALID_HEADER_CREDIT_IN_INIT_ERR = 295,
	VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_INIT_ERR = 296,
	VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_UPDATE_ERR = 297,
	VRTYP_PECXTR_RX_INVALID_POSITION_ERR = 298,
	VRTYP_PECXTR_RX_INVALID_VC_IN_INIT_ERR = 299,
	VRTYP_PECXTR_RX_INVALID_VC_IN_UPDATE_ERR = 300,
	VRTYP_PECXTR_RX_INVALID_WHILE_DACK_DOWN_ERR = 301,
	VRTYP_PECXTR_RX_INVALID_WHILE_LINK_DOWN_ERR = 302,
	VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_DATA_ERR = 303,
	VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_AND_DATA_ERR = 304,
	VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_ERR = 305,
	VRTYP_PECXTR_TX_ILLEGAL_FLAGS_ERR = 306,
	VRTYP_PX_ARRAY_EMPTY_ERR = 307,
	VRTYP_PX_DISPLAY_BYTE_INFO = 308,
	VRTYP_PX_DISPLAY_DLLP_INFO = 309,
	VRTYP_PX_DISPLAY_FCDLLP_INFO = 310,
	VRTYP_PX_DISPLAY_FCIDLCMSM_STATE_INFO = 311,
	VRTYP_PX_DISPLAY_LTSSM_STATE_INFO = 312,
	VRTYP_PX_DISPLAY_PLP_INFO = 313,
	VRTYP_PX_DISPLAY_PMDLLP_INFO = 314,
	VRTYP_PX_DISPLAY_SNDLLP_INFO = 315,
	VRTYP_PX_DISPLAY_TLP_HEADER_INFO = 316,
	VRTYP_PX_DISPLAY_TLP_INFO = 317,
	VRTYP_PX_ILLEGAL_CLAUSE_ENTRY_ERR = 318,
	VRTYP_PX_LTSSM_INVALID_L0S_EXIT_ERR = 319,
	VRTYP_PX_LTSSM_INVALID_STATE_ERR = 320,
	VRTYP_PX_MAILBOX_CREATION_FAILURE_ERR = 321,
	VRTYP_PX_MAILBOX_REMOVED_EMPTY_ERR = 322,
	VRTYP_PX_MAILBOX_TYPE_REMOVED_MISMATCH_ERR = 323,
	VRTYP_PX_OUT_OF_RANGE_INTEGER_VALUE_ERR = 324,
	VRTYP_PX_REGISTRATION_ERR = 325,
	VRTYP_PX_RX_BAD_SYMBOL_IN_COM_ERR = 326,
	VRTYP_PX_RX_BAD_SYMBOL_IN_DLLP_ERR = 327,
	VRTYP_PX_RX_BAD_SYMBOL_IN_FTS_ERR = 328,
	VRTYP_PX_RX_BAD_SYMBOL_IN_IDLE_ERR = 329,
	VRTYP_PX_RX_BAD_SYMBOL_IN_IDL_ERR = 330,
	VRTYP_PX_RX_BAD_SYMBOL_IN_PAD_ERR = 331,
	VRTYP_PX_RX_BAD_SYMBOL_IN_SKP_ERR = 332,
	VRTYP_PX_RX_BAD_SYMBOL_IN_SYMBOL_TIME_ERR = 333,
	VRTYP_PX_RX_BAD_SYMBOL_IN_TLP_ERR = 334,
	VRTYP_PX_RX_BAD_SYMBOL_IN_TS1_ERR = 335,
	VRTYP_PX_RX_BAD_SYMBOL_IN_TS2_ERR = 336,
	VRTYP_PX_RX_BAD_SYMBOL_IN_TS_ERR = 337,
	VRTYP_PX_RX_DATA_ON_UNCONFIGURED_LANE_ERR = 338,
	VRTYP_PX_RX_DLLP_BAD_LENGTH_ERR = 339,
	VRTYP_PX_RX_DLLP_INVALID_FLOW_CONTROL_ERR = 340,
	VRTYP_PX_RX_DLLP_INVALID_LCRC_ERR = 341,
	VRTYP_PX_RX_DLLP_INVALID_LTSSM_STATE_ERR = 342,
	VRTYP_PX_RX_DLLP_INVALID_SEQUENCE_NUMBER_ERR = 343,
	VRTYP_PX_RX_DLLP_INVALID_STATE_ERR = 344,
	VRTYP_PX_RX_DLLP_INVALID_STATIC_FIELDS_ERR = 345,
	VRTYP_PX_RX_EDB_IN_WRONG_LANE_ERR = 346,
	VRTYP_PX_RX_END_IN_WRONG_LANE_ERR = 347,
	VRTYP_PX_RX_ILLEGAL_10B_SYMBOL_ERR = 348,
	VRTYP_PX_RX_PLP_INVALID_LANE_NUMBER_ERR = 349,
	VRTYP_PX_RX_PLP_INVALID_LINK_NUMBER_ERR = 350,
	VRTYP_PX_RX_PLP_INVALID_LTSSM_STATE_ERR = 351,
	VRTYP_PX_RX_PLP_INVALID_NFTS_ERR = 352,
	VRTYP_PX_RX_SDP_IN_WRONG_LANE_ERR = 353,
	VRTYP_PX_RX_STP_IN_WRONG_LANE_ERR = 354,
	VRTYP_PX_RX_TLP_BAD_LENGTH_ERR = 355,
	VRTYP_PX_RX_TLP_INSUFFICIENT_FLOW_CONTROL_ERR = 356,
	VRTYP_PX_RX_TLP_INVALID_LCRC_ERR = 357,
	VRTYP_PX_RX_TLP_INVALID_LTSSM_STATE_ERR = 358,
	VRTYP_PX_RX_TLP_INVALID_STATE_ERR = 359,
	VRTYP_PX_RX_TLP_SEQUENCE_NUMBER_DUPLICATE_ERR = 360,
	VRTYP_PX_RX_TLP_SEQUENCE_NUMER_OUT_OF_ORDER_ERR = 361,
	VRTYP_PX_RX_TOO_MANY_SDP_IN_SYMBOL_TIME_ERR = 362,
	VRTYP_PX_RX_TOO_MANY_STP_IN_SYMBOL_TIME_ERR = 363,
	VRTYP_PX_TX_BAD_FC_DLLP_BUILD_ERR = 364,
	VRTYP_PX_TX_BAD_PM_DLLP_BUILD_ERR = 365,
	VRTYP_PX_TX_BAD_SN_DLLP_BUILD_ERR = 366,
	VRTYP_PX_TX_BAD_TRANSACTOR_SIZE_ERR = 367,
	VRTYP_PX_TX_BAD_VENDOR_DLLP_BUILD_ERR = 368,
	VRTYP_PX_TX_BYTE_SIZE_TOO_BIG_ERR = 369,
	VRTYP_PX_TX_DIFFERING_COUNT_VALUES_ERR = 370,
	VRTYP_PX_TX_DIFFERING_SIZE_BYTES_ERR = 371,
	VRTYP_PX_TX_ILLEGAL_8B_SYMBOL_ERR = 372,
	VRTYP_PX_TX_INVALID_DLLP_TYPE_ERR = 373,
	VRTYP_PX_UNKNOWN_10B_VALUE_ERR = 374,
	VRTYP_PX_UNKNOWN_8B_VALUE_ERR = 375,
	VRTYP_PX_UNKNOWN_INTEGER_VALUE_ERR = 376,
	VRTYP_PX_UNREGISTRATION_ERR = 377,
	VRTYP_PX_VERILOG_RX_INVALID_BIT_ERR = 378,
	VRTYP_PX_VERILOG_RX_INVALID_COM_SYMBOL_ERR = 379,
	VRTYP_PX_VERILOG_RX_INVALID_DATA_ERR = 380,
	VRTYP_PX_VERILOG_TX_INVALID_DATA_QUANTITY_ERR = 381,
	VRTYP_PX_VERILOG_TX_INVALID_DRIVE_ERR = 382,
	VRTYP_PX_VERILOG_TX_INVALID_XID_ERR = 383,
	VRTYP_TIIXTR_CREDIT_ERROR = 384,
	VRTYP_TIIXTR_CREDIT_WARNING = 385,
	VRTYP_TIIXTR_INTERNAL_DEBUG = 386,
	VRTYP_TIIXTR_INTERNAL_ERROR = 387,
	VRTYP_TIIXTR_INTERNAL_WARNING = 388,
	VRTYP_TIIXTR_PACKET_INFO = 389,
	VRTYP_TIIXTR_PARITY_ERROR = 390,
	VRTYP_TIIXTR_PROTOCOL_ERROR = 391,  __RTYP_LAST_TYPE
 }; // ReportType enum


// This class can be used to pass in data for each type of report from the preprocessor.
// NOTE: This class is *only* necessary because Vera doesn't allow static functions!
class ReportTypeInfo
{
    static integer num_report_types = 392;
    static string prefix_by_type [392] = {
      "__RTYP_FIRST_TYPE",
	"DCCCsrRing_RTYP_DATA_MISCOMPARE",
	"DCCCsrRing_RTYP_UNEXPECT_ERR",
	"all reports",
	"CCC_XTR_SMPL_X_ERR",
	"CSR_ALERT",
	"CSR_DEBUG_1",
	"CSR_DEBUG_2",
	"CSR_DEBUG_3",
	"CSR_ERROR",
	"CSR_INFO",
	"NONFATAL_ERROR",
	"DATA_PACKET_SM_CHECK_STREAM_ERROR",
	"DBG1",
	"DBG2",
	"DBG3",
	"DMC_DBG1",
	"DMC_DBG2",
	"DMC_DBG3",
	"DMC_IMU_DBG1",
	"DMC_IMU_DBG2",
	"DMC_IMU_DBG3",
	"NONFATAL_ERROR",
	"DMC_IMU_INFO",
	"DMC_INFO",
	"DMC_MMU_DBG1",
	"DMC_MMU_DBG2",
	"DMC_MMU_DBG3",
	"DMC_MMU_INFO",
	"PCOV_INFO_DRIVE",
	"PCOV_INFO_EXPECT",
	"FNXMMUINFORMER_DUP_TBLWLK_ERR",
	"FNXMMUINFORMER_INTERNAL_ERR",
	"FNXMMUINFORMER_INVALIDATE_ERR",
	"FNXMMUINFORMER_QUEUE_ERR",
	"FNXMMUINFORMER_UNEXPECT_ERR",
	"FNXMMUINFORMER_WRONG_MTAG_ERR",
	"DBG1",
	"DBG2",
	"DBG3",
	"ERROR",
	"INFO",
	"PYLD",
	"TB-ALERT",
	"TB-STACK",
	"",
	"SPE_TB",
	"TB-ERR(DISABLED)",
	"IBXTR_DPKT_CHK_ERROR",
	"IBXTR_DUP_EXPECT",
	"IBXTR_EBP_WARNING",
	"IBXTR_LPKT_CHK_ERROR",
	"IBXTR_MAJOR_ERROR",
	"IBXTR_MINOR_ERROR",
	"IBXTR_DRIVEN",
	"IBXTR_PKT_PYLD",
	"IBXTR_SAMPLED",
	"IBXTR_PYLD_LEN_ERR",
	"IBXTR_PYLD_SRC_ERR",
	"IBXTR_RSVD_FIELD_ERR",
	"INFO",
	"INFORMER:",
	"ERROR(DISABLED",
	"WARNING(DISABLED)",
	"ERROR(DISABLED)",
	"ERROR(DISABLED",
	"NONFATAL_ERROR",
	"JBCDMC_MON_DEBUG1",
	"JBCDMC_MON_DEBUG2",
	"JBCDMC_MON_DEBUG3",
	"JBCDMC_MON_ERROR",
	"JBCDMC_MON_INFO",
	"JBCDMC_MON_WARNING",
	"LINK_PACKET_SM_CHECK_STREAM_ERROR",
	"MCMS_RTL_DBG1",
	"MCMS_RTL_DBG2",
	"MCMS_RTL_DBG3",
	"MCMS_RTL_ERROR",
	"MCMS_RTL_INFO",
	"MCMS_RTL_INTERNAL_ERROR",
	"MIBE_CSRXTR_SMPL_X_ERR",
	"SPE_TB",
	"TB-ALERT",
	"TB-STACK",
	"TB-TIMEOUT(DISABLED)",
	"TB-TIMEOUT(DISABLED)",
	"TB-ERR(DISABLED)",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMMON",
	"MIBE_XRAMXACT",
	"MIBE_XRAMXACT",
	"MIBE_XRAMXACT",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MON_DDRSDRAM",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"MSMC_RAMMON",
	"PCIE_TLP_DEBUG1",
	"PCIE_TLP_DEBUG2",
	"PCIE_TLP_DEBUG3",
	"PCIE_TLP_ERROR",
	"PCIE_TLP_INFO",
	"PCIE_TLP_WARNING",
	"PORT_SM_CHECK_ERROR",
	"QPS_RTL_DBG1",
	"QPS_RTL_DBG2",
	"QPS_RTL_DBG3",
	"QPS_RTL_ERROR",
	"QPS_RTL_INFO",
	"RAPTOR XACTOR:(DEBUG 1)",
	"RAPTOR XACTOR:(DEBUG Expect Q)",
	"RAPTOR XACTOR:(VerilogConnection)",
	"RAPTOR XACTOR:Standard Errors DISABLED",
	"RAPTOR XACTOR:Flow Control Error Checking DISABLED",
	"RAPTOR XACTOR:Packet Matching Error Checking DISABLED",
	"RAPTOR XACTOR:X Checking on the bus DISABLED",
	"RAPTOR XACTOR",
	"RAPTOR XACTOR",
	"RAPTOR XACTOR",
	"RBC_RTL_DBG1",
	"RBC_RTL_DBG2",
	"RBC_RTL_DBG3",
	"RBC_RTL_ERROR",
	"RBC_RTL_INFO",
	"RECEIVE_SM_CHECK_STREAM_ERROR",
	"Report",
	"RSU XACTOR: ",
	"RSU XACTOR: ",
	"SBX_BAD_CRC",
	"SBX_DATA_HOLD_ERROR",
	"SBX_DEBUG_1",
	"SBX_DEBUG_2",
	"SBX_FALSE_PKT_START",
	"SBX_INCOMPLETE_PACKET",
	"SBX_INFO",
	"SBX_STRAY_BIT",
	"SBX_XEXPECT",
	"SBX_X_ON_BUS",
	"NONFATAL_ERROR",
	"CSRQ",
	"USER_DBG",
	"USER",
	"NONFATAL_ERROR",
	"QUEUE",
	"USER_DBG",
	"USER",
	"NONFATAL_ERROR",
	"SPE_RTL_DBG1",
	"SPE_RTL_DBG2",
	"SPE_RTL_DBG3",
	"SPE_RTL_ERROR",
	"SPE_RTL_INFO",
	"STREAM_ERROR",
	"THREADMGR:DB:",
	"THREADMGR:DEBUG3:",
	"THREADMGR:SIG:",
	"ERROR(DISABLED)",
	"THREADMGR:LIST:",
	"WARNING(DISABLED)",
	"TDB_RTL_INFO",
	"NONFATAL_ERROR",
	"TII_MON_DEBUG1",
	"TII_MON_DEBUG2",
	"TII_MON_DEBUG3",
	"TII_MON_ERROR",
	"TII_MON_INFO",
	"TII_MON_WARNING",
	"NONFATAL_ERROR",
	"TLULPU_MON_DEBUG1",
	"TLULPU_MON_DEBUG2",
	"TLULPU_MON_DEBUG3",
	"TLULPU_MON_ERROR",
	"TLULPU_MON_INFO",
	"TLULPU_MON_WARNING",
	"PCOV_INFO_TTOOL",
	"NONFATAL_ERROR",
	"NONFATAL_ERROR",
	"NONFATAL_ERROR",
	"WARN",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"XACTOR_FMWORK",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"NONFATAL_ERROR",
	"DEBUG",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"PACKET",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"EBUS_XTR_DEBUG1",
	"EBUS_XTR_DEBUG2",
	"EBUS_XTR_DEBUG3",
	"EBUS_XTR_ERROR",
	"EBUS_XTR_INFO",
	"EBUS_XTR_VERA_ERROR",
	"EBUS_XTR_WARNING",
	"I2C_XTR_DEBUG1",
	"I2C_XTR_DEBUG2",
	"I2C_XTR_DEBUG3",
	"I2C_XTR_ERROR",
	"I2C_XTR_INFO",
	"I2C_XTR_WARNING",
	"JBUS_XTR_DEBUG1",
	"JBUS_XTR_DEBUG2",
	"JBUS_XTR_DEBUG3",
	"JBUS_XTR_ERROR",
	"JBUS_XTR_INFO",
	"JBUS_XTR_WARNING",
	"PACKET",
	"DEBUG",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"NONFATAL_ERROR",
	"DEBUG",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"PACKET",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PEC XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"PCIE XTR",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"DEBUG",
	"NONFATAL_ERROR",
	"NONFATAL_WARNING",
	"PACKET",
	"NONFATAL_ERROR",
	"NONFATAL_ERROR"};
    static string report_type_str_by_type [392] = {
      "__FIRST_FLAG",
	"DCCCsrRing_RTYP_DATA_MISCOMPARE",
	"DCCCsrRing_RTYP_UNEXPECT_ERROR",
	"RTYP_ALL_REPORTS",
	"RTYP_CCC_XTR_SAMPLED_X_ERROR",
	"RTYP_CSR_ALERT",
	"RTYP_CSR_DEBUG_1",
	"RTYP_CSR_DEBUG_2",
	"RTYP_CSR_DEBUG_3",
	"RTYP_CSR_ERROR",
	"RTYP_CSR_INFO",
	"RTYP_DATA_MISCOMPARE",
	"RTYP_DATA_PACKET_SM_CHECK",
	"RTYP_DEBUG_1",
	"RTYP_DEBUG_2",
	"RTYP_DEBUG_3",
	"RTYP_DMC_DEBUG_1",
	"RTYP_DMC_DEBUG_2",
	"RTYP_DMC_DEBUG_3",
	"RTYP_DMC_IMU_AGT_DEBUG_1",
	"RTYP_DMC_IMU_AGT_DEBUG_2",
	"RTYP_DMC_IMU_AGT_DEBUG_3",
	"RTYP_DMC_IMU_AGT_GC_INVALID_ERROR",
	"RTYP_DMC_IMU_AGT_INFO",
	"RTYP_DMC_INFO",
	"RTYP_DMC_MMU_AGT_DEBUG_1",
	"RTYP_DMC_MMU_AGT_DEBUG_2",
	"RTYP_DMC_MMU_AGT_DEBUG_3",
	"RTYP_DMC_MMU_AGT_INFO",
	"RTYP_DRV_PROT",
	"RTYP_EXP_PROT",
	"RTYP_FNXMMUINFORMER_DUP_TBLWLK_ERROR",
	"RTYP_FNXMMUINFORMER_INTERNAL_ERROR",
	"RTYP_FNXMMUINFORMER_INVALIDATE_ERROR",
	"RTYP_FNXMMUINFORMER_QUEUE_ERROR",
	"RTYP_FNXMMUINFORMER_UNEXPECT_ERROR",
	"RTYP_FNXMMUINFORMER_WRONG_MTAG_ERROR",
	"RTYP_FNX_PCIE_XTR_DEBUG_1",
	"RTYP_FNX_PCIE_XTR_DEBUG_2",
	"RTYP_FNX_PCIE_XTR_DEBUG_3",
	"RTYP_FNX_PCIE_XTR_ERROR",
	"RTYP_FNX_PCIE_XTR_INFO",
	"RTYP_FNX_PCIE_XTR_PYLD",
	"RTYP_FNX_TB_ALERT",
	"RTYP_FNX_TB_CALL_STACK_MSG",
	"RTYP_FNX_TB_",
	"RTYP_FNX_TB_NONMASK",
	"RTYP_FNX_TB_UNHANDLED_ERROR_CONDITION",
	"RTYP_IBXTR_DATA_PKT_CHK_MACHINE_ERROR",
	"RTYP_IBXTR_DUP_EXPECT",
	"RTYP_IBXTR_EBP_WARNING",
	"RTYP_IBXTR_LINK_PKT_CHK_MACHINE_ERROR",
	"RTYP_IBXTR_MAJOR_ERROR_DETECTED",
	"RTYP_IBXTR_MINOR_ERROR_DETECTED",
	"RTYP_IBXTR_PRINT_DRIVEN_DATA",
	"RTYP_IBXTR_PRINT_PKT_PYLD",
	"RTYP_IBXTR_PRINT_SAMPLED_DATA",
	"RTYP_IBXTR_PYLD_LENGTH_ERROR",
	"RTYP_IBXTR_PYLD_SRC_ERROR",
	"RTYP_IBXTR_RSVD_FIELD_ERROR",
	"RTYP_INFO",
	"RTYP_INFORMER_EXPECT_REMOVED_BY_USER",
	"RTYP_INFORMER_EXPECT_TIMEOUT_ERR",
	"RTYP_INFORMER_ILLEGAL_METHOD_WARNING",
	"RTYP_INFORMER_SAMPLED_X_ERR",
	"RTYP_INFORMER_SAMPLE_TIMEOUT_ERR",
	"RTYP_INTERNAL_ERROR",
	"RTYP_JBCDMC_MON_DEBUG1",
	"RTYP_JBCDMC_MON_DEBUG2",
	"RTYP_JBCDMC_MON_DEBUG3",
	"RTYP_JBCDMC_MON_ERROR",
	"RTYP_JBCDMC_MON_INFO",
	"RTYP_JBCDMC_MON_WARNING",
	"RTYP_LINK_PACKET_SM_CHECK",
	"RTYP_MCMS_RTL_DEBUG_1",
	"RTYP_MCMS_RTL_DEBUG_2",
	"RTYP_MCMS_RTL_DEBUG_3",
	"RTYP_MCMS_RTL_ERROR",
	"RTYP_MCMS_RTL_INFO",
	"RTYP_MCMS_RTL_INTERNAL_ERROR",
	"RTYP_MIBE_CSRXTR_SAMPLED_X_ERROR",
	"RTYP_MIBE_SPE_TB_NONMASKABLE",
	"RTYP_MIBE_TB_ALERT",
	"RTYP_MIBE_TB_CALL_STACK_MSG",
	"RTYP_MIBE_TB_FDB_ALLOC_TIMEOUT",
	"RTYP_MIBE_TB_PAYLD_STORE_TIMEOUT",
	"RTYP_MIBE_TB_UNHANDLED_ERROR_CONDITION",
	"RTYP_MIBE_XRAMMON_SI_ERR0",
	"RTYP_MIBE_XRAMMON_SI_ERR1",
	"RTYP_MIBE_XRAMMON_SI_ERR10",
	"RTYP_MIBE_XRAMMON_SI_ERR11",
	"RTYP_MIBE_XRAMMON_SI_ERR12",
	"RTYP_MIBE_XRAMMON_SI_ERR13",
	"RTYP_MIBE_XRAMMON_SI_ERR14",
	"RTYP_MIBE_XRAMMON_SI_ERR15",
	"RTYP_MIBE_XRAMMON_SI_ERR16",
	"RTYP_MIBE_XRAMMON_SI_ERR17",
	"RTYP_MIBE_XRAMMON_SI_ERR18",
	"RTYP_MIBE_XRAMMON_SI_ERR19",
	"RTYP_MIBE_XRAMMON_SI_ERR2",
	"RTYP_MIBE_XRAMMON_SI_ERR3",
	"RTYP_MIBE_XRAMMON_SI_ERR4",
	"RTYP_MIBE_XRAMMON_SI_ERR5",
	"RTYP_MIBE_XRAMMON_SI_ERR6",
	"RTYP_MIBE_XRAMMON_SI_ERR7",
	"RTYP_MIBE_XRAMMON_SI_ERR8",
	"RTYP_MIBE_XRAMMON_SI_ERR9",
	"RTYP_MIBE_XRAMXACT_BUS_CONTENTION_ERROR",
	"RTYP_MIBE_XRAMXACT_BUS_INVALID_COMMAND",
	"RTYP_MIBE_XRAMXACT_DDR_INIT_ERROR",
	"RTYP_MON_DDRSDRAM_STATE_DEBUG",
	"RTYP_MON_DDRSDRAM_STATE_ERR0",
	"RTYP_MON_DDRSDRAM_STATE_ERR1",
	"RTYP_MON_DDRSDRAM_STATE_ERR10",
	"RTYP_MON_DDRSDRAM_STATE_ERR11",
	"RTYP_MON_DDRSDRAM_STATE_ERR12",
	"RTYP_MON_DDRSDRAM_STATE_ERR13",
	"RTYP_MON_DDRSDRAM_STATE_ERR14",
	"RTYP_MON_DDRSDRAM_STATE_ERR15",
	"RTYP_MON_DDRSDRAM_STATE_ERR2",
	"RTYP_MON_DDRSDRAM_STATE_ERR3",
	"RTYP_MON_DDRSDRAM_STATE_ERR4",
	"RTYP_MON_DDRSDRAM_STATE_ERR5",
	"RTYP_MON_DDRSDRAM_STATE_ERR6",
	"RTYP_MON_DDRSDRAM_STATE_ERR7",
	"RTYP_MON_DDRSDRAM_STATE_ERR8",
	"RTYP_MON_DDRSDRAM_STATE_ERR9",
	"RTYP_MSMC_RAMMON_SI_ERR1",
	"RTYP_MSMC_RAMMON_SI_ERR10",
	"RTYP_MSMC_RAMMON_SI_ERR11",
	"RTYP_MSMC_RAMMON_SI_ERR12",
	"RTYP_MSMC_RAMMON_SI_ERR13",
	"RTYP_MSMC_RAMMON_SI_ERR14",
	"RTYP_MSMC_RAMMON_SI_ERR15",
	"RTYP_MSMC_RAMMON_SI_ERR16",
	"RTYP_MSMC_RAMMON_SI_ERR17",
	"RTYP_MSMC_RAMMON_SI_ERR18",
	"RTYP_MSMC_RAMMON_SI_ERR19",
	"RTYP_MSMC_RAMMON_SI_ERR2",
	"RTYP_MSMC_RAMMON_SI_ERR3",
	"RTYP_MSMC_RAMMON_SI_ERR4",
	"RTYP_MSMC_RAMMON_SI_ERR5",
	"RTYP_MSMC_RAMMON_SI_ERR6",
	"RTYP_MSMC_RAMMON_SI_ERR7",
	"RTYP_MSMC_RAMMON_SI_ERR8",
	"RTYP_MSMC_RAMMON_SI_ERR9",
	"RTYP_PCIE_TLP_DEBUG1",
	"RTYP_PCIE_TLP_DEBUG2",
	"RTYP_PCIE_TLP_DEBUG3",
	"RTYP_PCIE_TLP_ERROR",
	"RTYP_PCIE_TLP_INFO",
	"RTYP_PCIE_TLP_WARNING",
	"RTYP_PORT_SM_CHECK",
	"RTYP_QPS_RTL_DEBUG_1",
	"RTYP_QPS_RTL_DEBUG_2",
	"RTYP_QPS_RTL_DEBUG_3",
	"RTYP_QPS_RTL_ERROR",
	"RTYP_QPS_RTL_INFO",
	"RTYP_RAP_XACTOR_DEBUG_1",
	"RTYP_RAP_XACTOR_DEBUG_EXPECT_Q",
	"RTYP_RAP_XACTOR_DEBUG_PHY_CONNECTION",
	"RTYP_RAP_XACTOR_ERR",
	"RTYP_RAP_XACTOR_ERR_FLOW_CONTROL",
	"RTYP_RAP_XACTOR_ERR_PKT_MATCH",
	"RTYP_RAP_XACTOR_ERR_X_ON_BUS",
	"RTYP_RAP_XACTOR_MSG",
	"RTYP_RAP_XACTOR_MSG_MIN",
	"RTYP_RAP_XACTOR_WARN",
	"RTYP_RBC_RTL_DEBUG_1",
	"RTYP_RBC_RTL_DEBUG_2",
	"RTYP_RBC_RTL_DEBUG_3",
	"RTYP_RBC_RTL_ERROR",
	"RTYP_RBC_RTL_INFO",
	"RTYP_RECEIVE_SM_CHECK",
	"RTYP_REPORT_MSG",
	"RTYP_RSUTRANS_ERROR",
	"RTYP_RSUTRANS_INFO",
	"RTYP_SBX_BAD_CRC",
	"RTYP_SBX_DATA_HOLD_ERROR",
	"RTYP_SBX_DEBUG_1",
	"RTYP_SBX_DEBUG_2",
	"RTYP_SBX_FALSE_PKT_START",
	"RTYP_SBX_INCOMPLETE",
	"RTYP_SBX_INFO",
	"RTYP_SBX_STRAY_BIT",
	"RTYP_SBX_XEXPECT",
	"RTYP_SBX_X_ON_BUS",
	"RTYP_SFQ_RTL_CSRQ_ERROR",
	"RTYP_SFQ_RTL_CSRQ_PUSH",
	"RTYP_SFQ_RTL_USER_DEBUG_MSG",
	"RTYP_SFQ_RTL_USER_DEFINED_MSG",
	"RTYP_SFQ_RTL_USER_ERROR",
	"RTYP_SFQ_TB_ENQUEUE_XACTION",
	"RTYP_SFQ_TB_USER_DEBUG_MSG",
	"RTYP_SFQ_TB_USER_DEFINED_MSG",
	"RTYP_SFQ_TB_USER_ERROR",
	"RTYP_SPE_RTL_DEBUG_1",
	"RTYP_SPE_RTL_DEBUG_2",
	"RTYP_SPE_RTL_DEBUG_3",
	"RTYP_SPE_RTL_ERROR",
	"RTYP_SPE_RTL_INFO",
	"RTYP_STREAM_CHECK",
	"RTYP_TB_THREADMGR_DB_UPDATE",
	"RTYP_TB_THREADMGR_DEBUG_3",
	"RTYP_TB_THREADMGR_SIGNAL_BROADCAST",
	"RTYP_TB_THREADMGR_THREADS_INCOMPLETE_ERROR",
	"RTYP_TB_THREADMGR_THREAD_LIST",
	"RTYP_TB_THREADMGR_WARNING",
	"RTYP_TDB_RTL_INFO",
	"RTYP_TEST_ERROR",
	"RTYP_TII_MON_DEBUG1",
	"RTYP_TII_MON_DEBUG2",
	"RTYP_TII_MON_DEBUG3",
	"RTYP_TII_MON_ERROR",
	"RTYP_TII_MON_INFO",
	"RTYP_TII_MON_WARNING",
	"RTYP_TIMEOUT",
	"RTYP_TLULPU_MON_DEBUG1",
	"RTYP_TLULPU_MON_DEBUG2",
	"RTYP_TLULPU_MON_DEBUG3",
	"RTYP_TLULPU_MON_ERROR",
	"RTYP_TLULPU_MON_INFO",
	"RTYP_TLULPU_MON_WARNING",
	"RTYP_TTL_PROT",
	"RTYP_UNEXPECT_ERROR",
	"RTYP_VERA_ERROR",
	"RTYP_VERILOG_ERROR",
	"RTYP_WARNING",
	"RTYP_XACTOR_FMWORK_DUP_EXPECT_ERR",
	"RTYP_XACTOR_FMWORK_DUP_WILDCARD_EXPECT_WARN",
	"RTYP_XACTOR_FMWORK_EXPECT_REMOVED_BY_USER",
	"RTYP_XACTOR_FMWORK_EXPECT_TIMEOUT_ERR",
	"RTYP_XACTOR_FMWORK_MEM_ALLOCATION_ERROR",
	"RTYP_XACTOR_FMWORK_MSG",
	"RTYP_XACTOR_FMWORK_SAMPLED_DUP_XACTION_ERR",
	"RTYP_XACTOR_FMWORK_SAMPLED_X_ERR",
	"RTYP_XACTOR_FMWORK_SAMPLE_TIMEOUT_ERR",
	"RTYP_XACTOR_FMWORK_UNEXPECTED_XACTION_ERR",
	"VRTYP_DTJXTR_CREDIT_ERROR",
	"VRTYP_DTJXTR_CREDIT_WARNING",
	"VRTYP_DTJXTR_DUP_TAG_ERROR",
	"VRTYP_DTJXTR_INTERNAL_DEBUG",
	"VRTYP_DTJXTR_INTERNAL_ERROR",
	"VRTYP_DTJXTR_INTERNAL_WARNING",
	"VRTYP_DTJXTR_PACKET_INFO",
	"VRTYP_DTJXTR_PROTOCOL_ERROR",
	"VRTYP_DTJXTR_UNKNOWN_PKT_WARNING",
	"VRTYP_EBUS_XTR_DEBUG1",
	"VRTYP_EBUS_XTR_DEBUG2",
	"VRTYP_EBUS_XTR_DEBUG3",
	"VRTYP_EBUS_XTR_ERROR",
	"VRTYP_EBUS_XTR_INFO",
	"VRTYP_EBUS_XTR_VERA_ERROR",
	"VRTYP_EBUS_XTR_WARNING",
	"VRTYP_I2C_XTR_DEBUG1",
	"VRTYP_I2C_XTR_DEBUG2",
	"VRTYP_I2C_XTR_DEBUG3",
	"VRTYP_I2C_XTR_ERROR",
	"VRTYP_I2C_XTR_INFO",
	"VRTYP_I2C_XTR_WARNING",
	"VRTYP_JBUS_XTR_DEBUG1",
	"VRTYP_JBUS_XTR_DEBUG2",
	"VRTYP_JBUS_XTR_DEBUG3",
	"VRTYP_JBUS_XTR_ERROR",
	"VRTYP_JBUS_XTR_INFO",
	"VRTYP_JBUS_XTR_WARNING",
	"VRTYP_JDICOMMON_INFO",
	"VRTYP_JDICOMMON_INTERNAL_DEBUG",
	"VRTYP_JDICOMMON_INTERNAL_ERROR",
	"VRTYP_JDICOMMON_INTERNAL_WARNING",
	"VRTYP_JTDXTR_CREDIT_ERROR",
	"VRTYP_JTDXTR_CREDIT_WARNING",
	"VRTYP_JTDXTR_DUP_TAG_ERROR",
	"VRTYP_JTDXTR_INTERNAL_DEBUG",
	"VRTYP_JTDXTR_INTERNAL_ERROR",
	"VRTYP_JTDXTR_INTERNAL_WARNING",
	"VRTYP_JTDXTR_PACKET_INFO",
	"VRTYP_JTDXTR_PROTOCOL_ERROR",
	"VRTYP_JTDXTR_UNKNOWN_PKT_WARNING",
	"VRTYP_PECXTR_DISPLAY_DLLP_INFO",
	"VRTYP_PECXTR_DISPLAY_DOUBLE_WORD_INFO",
	"VRTYP_PECXTR_DISPLAY_TLP_ERROR",
	"VRTYP_PECXTR_DISPLAY_TLP_INFO",
	"VRTYP_PECXTR_ILLEGAL_CAST_ERR",
	"VRTYP_PECXTR_ILLEGAL_CLAUSE_ENTRY_ERR",
	"VRTYP_PECXTR_ILLEGAL_METHOD_CALL_ERR",
	"VRTYP_PECXTR_INVALID_DOUBLE_WORD_ERR",
	"VRTYP_PECXTR_PARITY_ERROR_ERR",
	"VRTYP_PECXTR_PEEK_EMPTY_QUEUE_ERR",
	"VRTYP_PECXTR_POP_EMPTY_QUEUE_ERR",
	"VRTYP_PECXTR_RX_CMD_AGAINST_TLP_IN_PROGRESS_ERR",
	"VRTYP_PECXTR_RX_INVALID_COMMAND_ERR",
	"VRTYP_PECXTR_RX_INVALID_DATA_CREDIT_IN_INIT_ERR",
	"VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_ERR",
	"VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_IN_INIT_ERR",
	"VRTYP_PECXTR_RX_INVALID_HEADER_CREDIT_IN_INIT_ERR",
	"VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_INIT_ERR",
	"VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_UPDATE_ERR",
	"VRTYP_PECXTR_RX_INVALID_POSITION_ERR",
	"VRTYP_PECXTR_RX_INVALID_VC_IN_INIT_ERR",
	"VRTYP_PECXTR_RX_INVALID_VC_IN_UPDATE_ERR",
	"VRTYP_PECXTR_RX_INVALID_WHILE_DACK_DOWN_ERR",
	"VRTYP_PECXTR_RX_INVALID_WHILE_LINK_DOWN_ERR",
	"VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_DATA_ERR",
	"VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_AND_DATA_ERR",
	"VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_ERR",
	"VRTYP_PECXTR_TX_ILLEGAL_FLAGS_ERR",
	"VRTYP_PX_ARRAY_EMPTY_ERR",
	"VRTYP_PX_DISPLAY_BYTE_INFO",
	"VRTYP_PX_DISPLAY_DLLP_INFO",
	"VRTYP_PX_DISPLAY_FCDLLP_INFO",
	"VRTYP_PX_DISPLAY_FCIDLCMSM_STATE_INFO",
	"VRTYP_PX_DISPLAY_LTSSM_STATE_INFO",
	"VRTYP_PX_DISPLAY_PLP_INFO",
	"VRTYP_PX_DISPLAY_PMDLLP_INFO",
	"VRTYP_PX_DISPLAY_SNDLLP_INFO",
	"VRTYP_PX_DISPLAY_TLP_HEADER_INFO",
	"VRTYP_PX_DISPLAY_TLP_INFO",
	"VRTYP_PX_ILLEGAL_CLAUSE_ENTRY_ERR",
	"VRTYP_PX_LTSSM_INVALID_L0S_EXIT_ERR",
	"VRTYP_PX_LTSSM_INVALID_STATE_ERR",
	"VRTYP_PX_MAILBOX_CREATION_FAILURE_ERR",
	"VRTYP_PX_MAILBOX_REMOVED_EMPTY_ERR",
	"VRTYP_PX_MAILBOX_TYPE_REMOVED_MISMATCH_ERR",
	"VRTYP_PX_OUT_OF_RANGE_INTEGER_VALUE_ERR",
	"VRTYP_PX_REGISTRATION_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_COM_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_DLLP_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_FTS_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_IDLE_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_IDL_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_PAD_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_SKP_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_SYMBOL_TIME_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TLP_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TS1_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TS2_ERR",
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TS_ERR",
	"VRTYP_PX_RX_DATA_ON_UNCONFIGURED_LANE_ERR",
	"VRTYP_PX_RX_DLLP_BAD_LENGTH_ERR",
	"VRTYP_PX_RX_DLLP_INVALID_FLOW_CONTROL_ERR",
	"VRTYP_PX_RX_DLLP_INVALID_LCRC_ERR",
	"VRTYP_PX_RX_DLLP_INVALID_LTSSM_STATE_ERR",
	"VRTYP_PX_RX_DLLP_INVALID_SEQUENCE_NUMBER_ERR",
	"VRTYP_PX_RX_DLLP_INVALID_STATE_ERR",
	"VRTYP_PX_RX_DLLP_INVALID_STATIC_FIELDS_ERR",
	"VRTYP_PX_RX_EDB_IN_WRONG_LANE_ERR",
	"VRTYP_PX_RX_END_IN_WRONG_LANE_ERR",
	"VRTYP_PX_RX_ILLEGAL_10B_SYMBOL_ERR",
	"VRTYP_PX_RX_PLP_INVALID_LANE_NUMBER_ERR",
	"VRTYP_PX_RX_PLP_INVALID_LINK_NUMBER_ERR",
	"VRTYP_PX_RX_PLP_INVALID_LTSSM_STATE_ERR",
	"VRTYP_PX_RX_PLP_INVALID_NFTS_ERR",
	"VRTYP_PX_RX_SDP_IN_WRONG_LANE_ERR",
	"VRTYP_PX_RX_STP_IN_WRONG_LANE_ERR",
	"VRTYP_PX_RX_TLP_BAD_LENGTH_ERR",
	"VRTYP_PX_RX_TLP_INSUFFICIENT_FLOW_CONTROL_ERR",
	"VRTYP_PX_RX_TLP_INVALID_LCRC_ERR",
	"VRTYP_PX_RX_TLP_INVALID_LTSSM_STATE_ERR",
	"VRTYP_PX_RX_TLP_INVALID_STATE_ERR",
	"VRTYP_PX_RX_TLP_SEQUENCE_NUMBER_DUPLICATE_ERR",
	"VRTYP_PX_RX_TLP_SEQUENCE_NUMER_OUT_OF_ORDER_ERR",
	"VRTYP_PX_RX_TOO_MANY_SDP_IN_SYMBOL_TIME_ERR",
	"VRTYP_PX_RX_TOO_MANY_STP_IN_SYMBOL_TIME_ERR",
	"VRTYP_PX_TX_BAD_FC_DLLP_BUILD_ERR",
	"VRTYP_PX_TX_BAD_PM_DLLP_BUILD_ERR",
	"VRTYP_PX_TX_BAD_SN_DLLP_BUILD_ERR",
	"VRTYP_PX_TX_BAD_TRANSACTOR_SIZE_ERR",
	"VRTYP_PX_TX_BAD_VENDOR_DLLP_BUILD_ERR",
	"VRTYP_PX_TX_BYTE_SIZE_TOO_BIG_ERR",
	"VRTYP_PX_TX_DIFFERING_COUNT_VALUES_ERR",
	"VRTYP_PX_TX_DIFFERING_SIZE_BYTES_ERR",
	"VRTYP_PX_TX_ILLEGAL_8B_SYMBOL_ERR",
	"VRTYP_PX_TX_INVALID_DLLP_TYPE_ERR",
	"VRTYP_PX_UNKNOWN_10B_VALUE_ERR",
	"VRTYP_PX_UNKNOWN_8B_VALUE_ERR",
	"VRTYP_PX_UNKNOWN_INTEGER_VALUE_ERR",
	"VRTYP_PX_UNREGISTRATION_ERR",
	"VRTYP_PX_VERILOG_RX_INVALID_BIT_ERR",
	"VRTYP_PX_VERILOG_RX_INVALID_COM_SYMBOL_ERR",
	"VRTYP_PX_VERILOG_RX_INVALID_DATA_ERR",
	"VRTYP_PX_VERILOG_TX_INVALID_DATA_QUANTITY_ERR",
	"VRTYP_PX_VERILOG_TX_INVALID_DRIVE_ERR",
	"VRTYP_PX_VERILOG_TX_INVALID_XID_ERR",
	"VRTYP_TIIXTR_CREDIT_ERROR",
	"VRTYP_TIIXTR_CREDIT_WARNING",
	"VRTYP_TIIXTR_INTERNAL_DEBUG",
	"VRTYP_TIIXTR_INTERNAL_ERROR",
	"VRTYP_TIIXTR_INTERNAL_WARNING",
	"VRTYP_TIIXTR_PACKET_INFO",
	"VRTYP_TIIXTR_PARITY_ERROR",
	"VRTYP_TIIXTR_PROTOCOL_ERROR"};
    static PrintLevel default_print_level_by_report_type [392] = {
      RPRT_NOP,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NOP,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NOP,
	RPRT_DEBUG_2,
	RPRT_NOP,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_DEBUG_1,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_DEBUG_3,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_3,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_DEBUG_2,
	RPRT_DEBUG_3,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_DEBUG_3,
	RPRT_DEBUG_1,
	RPRT_INFO,
	RPRT_DEBUG_2,
	RPRT_DEBUG_2,
	RPRT_DEBUG_1,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_INFO,
	RPRT_DEBUG_1,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE,
	RPRT_INFO,
	RPRT_NONMASKABLE,
	RPRT_NONMASKABLE};

    static ErrorLevel default_error_level_by_report_type [392] = {
      RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_WARNING,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_WARNING,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_ERROR,
	RERR_WARNING,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_ERROR,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_WARNING,
	RERR_MESSAGE,
	RERR_ERROR,
	RERR_ERROR};


  function string get_prefix(ReportType type, ErrorLevel error_level)
  {
    case (error_level)
      {
      RERR_MESSAGE:
	{
	  get_prefix = prefix_by_type[type];
	}
      RERR_WARNING:
	{
	  get_prefix = REPORT_KEYWORD_WARNING;
	}
      RERR_ERROR:
	{
	  get_prefix = REPORT_KEYWORD_FATAL_ERROR;
	}
      }
  }

  // Useful functions
  function PrintLevel get_default_print_level(ReportType type)
  {
      get_default_print_level = default_print_level_by_report_type[type];
  }
  
  function ErrorLevel get_default_error_level(ReportType type)
  {
      get_default_error_level = default_error_level_by_report_type[type];
  }

  function integer bit_string_to_print_level(bit [511:0] bit_str, var PrintLevel pl)
  {
      string str;
      str.bittostr(bit_str);
    case (str)
      {
	"RPRT_NOP":		{ pl = RPRT_NOP; bit_string_to_print_level =  1; }
	"RPRT_DEBUG_3":		{ pl = RPRT_DEBUG_3; bit_string_to_print_level =  1; }
	"RPRT_DEBUG_2":		{ pl = RPRT_DEBUG_2; bit_string_to_print_level =  1; }
	"RPRT_DEBUG_1":		{ pl = RPRT_DEBUG_1; bit_string_to_print_level =  1; }
	"RPRT_INFO":		{ pl = RPRT_INFO; bit_string_to_print_level =  1; }
	"RPRT_NONMASKABLE":		{ pl = RPRT_NONMASKABLE; bit_string_to_print_level =  1; }
	default:		{ bit_string_to_print_level = 0; }
      }
  }

function integer string_to_report_type(string str, var ReportType type)
{
    case (str)
      {
	"DCCCsrRing_RTYP_DATA_MISCOMPARE":		{ type = DCCCsrRing_RTYP_DATA_MISCOMPARE; string_to_report_type =  1; }
	"DCCCsrRing_RTYP_UNEXPECT_ERROR":		{ type = DCCCsrRing_RTYP_UNEXPECT_ERROR; string_to_report_type =  1; }
	"RTYP_ALL_REPORTS":		{ type = RTYP_ALL_REPORTS; string_to_report_type =  1; }
	"RTYP_CCC_XTR_SAMPLED_X_ERROR":		{ type = RTYP_CCC_XTR_SAMPLED_X_ERROR; string_to_report_type =  1; }
	"RTYP_CSR_ALERT":		{ type = RTYP_CSR_ALERT; string_to_report_type =  1; }
	"RTYP_CSR_DEBUG_1":		{ type = RTYP_CSR_DEBUG_1; string_to_report_type =  1; }
	"RTYP_CSR_DEBUG_2":		{ type = RTYP_CSR_DEBUG_2; string_to_report_type =  1; }
	"RTYP_CSR_DEBUG_3":		{ type = RTYP_CSR_DEBUG_3; string_to_report_type =  1; }
	"RTYP_CSR_ERROR":		{ type = RTYP_CSR_ERROR; string_to_report_type =  1; }
	"RTYP_CSR_INFO":		{ type = RTYP_CSR_INFO; string_to_report_type =  1; }
	"RTYP_DATA_MISCOMPARE":		{ type = RTYP_DATA_MISCOMPARE; string_to_report_type =  1; }
	"RTYP_DATA_PACKET_SM_CHECK":		{ type = RTYP_DATA_PACKET_SM_CHECK; string_to_report_type =  1; }
	"RTYP_DEBUG_1":		{ type = RTYP_DEBUG_1; string_to_report_type =  1; }
	"RTYP_DEBUG_2":		{ type = RTYP_DEBUG_2; string_to_report_type =  1; }
	"RTYP_DEBUG_3":		{ type = RTYP_DEBUG_3; string_to_report_type =  1; }
	"RTYP_DMC_DEBUG_1":		{ type = RTYP_DMC_DEBUG_1; string_to_report_type =  1; }
	"RTYP_DMC_DEBUG_2":		{ type = RTYP_DMC_DEBUG_2; string_to_report_type =  1; }
	"RTYP_DMC_DEBUG_3":		{ type = RTYP_DMC_DEBUG_3; string_to_report_type =  1; }
	"RTYP_DMC_IMU_AGT_DEBUG_1":		{ type = RTYP_DMC_IMU_AGT_DEBUG_1; string_to_report_type =  1; }
	"RTYP_DMC_IMU_AGT_DEBUG_2":		{ type = RTYP_DMC_IMU_AGT_DEBUG_2; string_to_report_type =  1; }
	"RTYP_DMC_IMU_AGT_DEBUG_3":		{ type = RTYP_DMC_IMU_AGT_DEBUG_3; string_to_report_type =  1; }
	"RTYP_DMC_IMU_AGT_GC_INVALID_ERROR":		{ type = RTYP_DMC_IMU_AGT_GC_INVALID_ERROR; string_to_report_type =  1; }
	"RTYP_DMC_IMU_AGT_INFO":		{ type = RTYP_DMC_IMU_AGT_INFO; string_to_report_type =  1; }
	"RTYP_DMC_INFO":		{ type = RTYP_DMC_INFO; string_to_report_type =  1; }
	"RTYP_DMC_MMU_AGT_DEBUG_1":		{ type = RTYP_DMC_MMU_AGT_DEBUG_1; string_to_report_type =  1; }
	"RTYP_DMC_MMU_AGT_DEBUG_2":		{ type = RTYP_DMC_MMU_AGT_DEBUG_2; string_to_report_type =  1; }
	"RTYP_DMC_MMU_AGT_DEBUG_3":		{ type = RTYP_DMC_MMU_AGT_DEBUG_3; string_to_report_type =  1; }
	"RTYP_DMC_MMU_AGT_INFO":		{ type = RTYP_DMC_MMU_AGT_INFO; string_to_report_type =  1; }
	"RTYP_DRV_PROT":		{ type = RTYP_DRV_PROT; string_to_report_type =  1; }
	"RTYP_EXP_PROT":		{ type = RTYP_EXP_PROT; string_to_report_type =  1; }
	"RTYP_FNXMMUINFORMER_DUP_TBLWLK_ERROR":		{ type = RTYP_FNXMMUINFORMER_DUP_TBLWLK_ERROR; string_to_report_type =  1; }
	"RTYP_FNXMMUINFORMER_INTERNAL_ERROR":		{ type = RTYP_FNXMMUINFORMER_INTERNAL_ERROR; string_to_report_type =  1; }
	"RTYP_FNXMMUINFORMER_INVALIDATE_ERROR":		{ type = RTYP_FNXMMUINFORMER_INVALIDATE_ERROR; string_to_report_type =  1; }
	"RTYP_FNXMMUINFORMER_QUEUE_ERROR":		{ type = RTYP_FNXMMUINFORMER_QUEUE_ERROR; string_to_report_type =  1; }
	"RTYP_FNXMMUINFORMER_UNEXPECT_ERROR":		{ type = RTYP_FNXMMUINFORMER_UNEXPECT_ERROR; string_to_report_type =  1; }
	"RTYP_FNXMMUINFORMER_WRONG_MTAG_ERROR":		{ type = RTYP_FNXMMUINFORMER_WRONG_MTAG_ERROR; string_to_report_type =  1; }
	"RTYP_FNX_PCIE_XTR_DEBUG_1":		{ type = RTYP_FNX_PCIE_XTR_DEBUG_1; string_to_report_type =  1; }
	"RTYP_FNX_PCIE_XTR_DEBUG_2":		{ type = RTYP_FNX_PCIE_XTR_DEBUG_2; string_to_report_type =  1; }
	"RTYP_FNX_PCIE_XTR_DEBUG_3":		{ type = RTYP_FNX_PCIE_XTR_DEBUG_3; string_to_report_type =  1; }
	"RTYP_FNX_PCIE_XTR_ERROR":		{ type = RTYP_FNX_PCIE_XTR_ERROR; string_to_report_type =  1; }
	"RTYP_FNX_PCIE_XTR_INFO":		{ type = RTYP_FNX_PCIE_XTR_INFO; string_to_report_type =  1; }
	"RTYP_FNX_PCIE_XTR_PYLD":		{ type = RTYP_FNX_PCIE_XTR_PYLD; string_to_report_type =  1; }
	"RTYP_FNX_TB_ALERT":		{ type = RTYP_FNX_TB_ALERT; string_to_report_type =  1; }
	"RTYP_FNX_TB_CALL_STACK_MSG":		{ type = RTYP_FNX_TB_CALL_STACK_MSG; string_to_report_type =  1; }
	"RTYP_FNX_TB_":		{ type = RTYP_FNX_TB_; string_to_report_type =  1; }
	"RTYP_FNX_TB_NONMASK":		{ type = RTYP_FNX_TB_NONMASK; string_to_report_type =  1; }
	"RTYP_FNX_TB_UNHANDLED_ERROR_CONDITION":		{ type = RTYP_FNX_TB_UNHANDLED_ERROR_CONDITION; string_to_report_type =  1; }
	"RTYP_IBXTR_DATA_PKT_CHK_MACHINE_ERROR":		{ type = RTYP_IBXTR_DATA_PKT_CHK_MACHINE_ERROR; string_to_report_type =  1; }
	"RTYP_IBXTR_DUP_EXPECT":		{ type = RTYP_IBXTR_DUP_EXPECT; string_to_report_type =  1; }
	"RTYP_IBXTR_EBP_WARNING":		{ type = RTYP_IBXTR_EBP_WARNING; string_to_report_type =  1; }
	"RTYP_IBXTR_LINK_PKT_CHK_MACHINE_ERROR":		{ type = RTYP_IBXTR_LINK_PKT_CHK_MACHINE_ERROR; string_to_report_type =  1; }
	"RTYP_IBXTR_MAJOR_ERROR_DETECTED":		{ type = RTYP_IBXTR_MAJOR_ERROR_DETECTED; string_to_report_type =  1; }
	"RTYP_IBXTR_MINOR_ERROR_DETECTED":		{ type = RTYP_IBXTR_MINOR_ERROR_DETECTED; string_to_report_type =  1; }
	"RTYP_IBXTR_PRINT_DRIVEN_DATA":		{ type = RTYP_IBXTR_PRINT_DRIVEN_DATA; string_to_report_type =  1; }
	"RTYP_IBXTR_PRINT_PKT_PYLD":		{ type = RTYP_IBXTR_PRINT_PKT_PYLD; string_to_report_type =  1; }
	"RTYP_IBXTR_PRINT_SAMPLED_DATA":		{ type = RTYP_IBXTR_PRINT_SAMPLED_DATA; string_to_report_type =  1; }
	"RTYP_IBXTR_PYLD_LENGTH_ERROR":		{ type = RTYP_IBXTR_PYLD_LENGTH_ERROR; string_to_report_type =  1; }
	"RTYP_IBXTR_PYLD_SRC_ERROR":		{ type = RTYP_IBXTR_PYLD_SRC_ERROR; string_to_report_type =  1; }
	"RTYP_IBXTR_RSVD_FIELD_ERROR":		{ type = RTYP_IBXTR_RSVD_FIELD_ERROR; string_to_report_type =  1; }
	"RTYP_INFO":		{ type = RTYP_INFO; string_to_report_type =  1; }
	"RTYP_INFORMER_EXPECT_REMOVED_BY_USER":		{ type = RTYP_INFORMER_EXPECT_REMOVED_BY_USER; string_to_report_type =  1; }
	"RTYP_INFORMER_EXPECT_TIMEOUT_ERR":		{ type = RTYP_INFORMER_EXPECT_TIMEOUT_ERR; string_to_report_type =  1; }
	"RTYP_INFORMER_ILLEGAL_METHOD_WARNING":		{ type = RTYP_INFORMER_ILLEGAL_METHOD_WARNING; string_to_report_type =  1; }
	"RTYP_INFORMER_SAMPLED_X_ERR":		{ type = RTYP_INFORMER_SAMPLED_X_ERR; string_to_report_type =  1; }
	"RTYP_INFORMER_SAMPLE_TIMEOUT_ERR":		{ type = RTYP_INFORMER_SAMPLE_TIMEOUT_ERR; string_to_report_type =  1; }
	"RTYP_INTERNAL_ERROR":		{ type = RTYP_INTERNAL_ERROR; string_to_report_type =  1; }
	"RTYP_JBCDMC_MON_DEBUG1":		{ type = RTYP_JBCDMC_MON_DEBUG1; string_to_report_type =  1; }
	"RTYP_JBCDMC_MON_DEBUG2":		{ type = RTYP_JBCDMC_MON_DEBUG2; string_to_report_type =  1; }
	"RTYP_JBCDMC_MON_DEBUG3":		{ type = RTYP_JBCDMC_MON_DEBUG3; string_to_report_type =  1; }
	"RTYP_JBCDMC_MON_ERROR":		{ type = RTYP_JBCDMC_MON_ERROR; string_to_report_type =  1; }
	"RTYP_JBCDMC_MON_INFO":		{ type = RTYP_JBCDMC_MON_INFO; string_to_report_type =  1; }
	"RTYP_JBCDMC_MON_WARNING":		{ type = RTYP_JBCDMC_MON_WARNING; string_to_report_type =  1; }
	"RTYP_LINK_PACKET_SM_CHECK":		{ type = RTYP_LINK_PACKET_SM_CHECK; string_to_report_type =  1; }
	"RTYP_MCMS_RTL_DEBUG_1":		{ type = RTYP_MCMS_RTL_DEBUG_1; string_to_report_type =  1; }
	"RTYP_MCMS_RTL_DEBUG_2":		{ type = RTYP_MCMS_RTL_DEBUG_2; string_to_report_type =  1; }
	"RTYP_MCMS_RTL_DEBUG_3":		{ type = RTYP_MCMS_RTL_DEBUG_3; string_to_report_type =  1; }
	"RTYP_MCMS_RTL_ERROR":		{ type = RTYP_MCMS_RTL_ERROR; string_to_report_type =  1; }
	"RTYP_MCMS_RTL_INFO":		{ type = RTYP_MCMS_RTL_INFO; string_to_report_type =  1; }
	"RTYP_MCMS_RTL_INTERNAL_ERROR":		{ type = RTYP_MCMS_RTL_INTERNAL_ERROR; string_to_report_type =  1; }
	"RTYP_MIBE_CSRXTR_SAMPLED_X_ERROR":		{ type = RTYP_MIBE_CSRXTR_SAMPLED_X_ERROR; string_to_report_type =  1; }
	"RTYP_MIBE_SPE_TB_NONMASKABLE":		{ type = RTYP_MIBE_SPE_TB_NONMASKABLE; string_to_report_type =  1; }
	"RTYP_MIBE_TB_ALERT":		{ type = RTYP_MIBE_TB_ALERT; string_to_report_type =  1; }
	"RTYP_MIBE_TB_CALL_STACK_MSG":		{ type = RTYP_MIBE_TB_CALL_STACK_MSG; string_to_report_type =  1; }
	"RTYP_MIBE_TB_FDB_ALLOC_TIMEOUT":		{ type = RTYP_MIBE_TB_FDB_ALLOC_TIMEOUT; string_to_report_type =  1; }
	"RTYP_MIBE_TB_PAYLD_STORE_TIMEOUT":		{ type = RTYP_MIBE_TB_PAYLD_STORE_TIMEOUT; string_to_report_type =  1; }
	"RTYP_MIBE_TB_UNHANDLED_ERROR_CONDITION":		{ type = RTYP_MIBE_TB_UNHANDLED_ERROR_CONDITION; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR0":		{ type = RTYP_MIBE_XRAMMON_SI_ERR0; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR1":		{ type = RTYP_MIBE_XRAMMON_SI_ERR1; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR10":		{ type = RTYP_MIBE_XRAMMON_SI_ERR10; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR11":		{ type = RTYP_MIBE_XRAMMON_SI_ERR11; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR12":		{ type = RTYP_MIBE_XRAMMON_SI_ERR12; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR13":		{ type = RTYP_MIBE_XRAMMON_SI_ERR13; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR14":		{ type = RTYP_MIBE_XRAMMON_SI_ERR14; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR15":		{ type = RTYP_MIBE_XRAMMON_SI_ERR15; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR16":		{ type = RTYP_MIBE_XRAMMON_SI_ERR16; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR17":		{ type = RTYP_MIBE_XRAMMON_SI_ERR17; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR18":		{ type = RTYP_MIBE_XRAMMON_SI_ERR18; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR19":		{ type = RTYP_MIBE_XRAMMON_SI_ERR19; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR2":		{ type = RTYP_MIBE_XRAMMON_SI_ERR2; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR3":		{ type = RTYP_MIBE_XRAMMON_SI_ERR3; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR4":		{ type = RTYP_MIBE_XRAMMON_SI_ERR4; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR5":		{ type = RTYP_MIBE_XRAMMON_SI_ERR5; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR6":		{ type = RTYP_MIBE_XRAMMON_SI_ERR6; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR7":		{ type = RTYP_MIBE_XRAMMON_SI_ERR7; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR8":		{ type = RTYP_MIBE_XRAMMON_SI_ERR8; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMMON_SI_ERR9":		{ type = RTYP_MIBE_XRAMMON_SI_ERR9; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMXACT_BUS_CONTENTION_ERROR":		{ type = RTYP_MIBE_XRAMXACT_BUS_CONTENTION_ERROR; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMXACT_BUS_INVALID_COMMAND":		{ type = RTYP_MIBE_XRAMXACT_BUS_INVALID_COMMAND; string_to_report_type =  1; }
	"RTYP_MIBE_XRAMXACT_DDR_INIT_ERROR":		{ type = RTYP_MIBE_XRAMXACT_DDR_INIT_ERROR; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_DEBUG":		{ type = RTYP_MON_DDRSDRAM_STATE_DEBUG; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR0":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR0; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR1":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR1; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR10":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR10; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR11":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR11; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR12":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR12; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR13":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR13; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR14":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR14; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR15":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR15; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR2":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR2; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR3":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR3; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR4":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR4; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR5":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR5; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR6":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR6; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR7":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR7; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR8":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR8; string_to_report_type =  1; }
	"RTYP_MON_DDRSDRAM_STATE_ERR9":		{ type = RTYP_MON_DDRSDRAM_STATE_ERR9; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR1":		{ type = RTYP_MSMC_RAMMON_SI_ERR1; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR10":		{ type = RTYP_MSMC_RAMMON_SI_ERR10; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR11":		{ type = RTYP_MSMC_RAMMON_SI_ERR11; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR12":		{ type = RTYP_MSMC_RAMMON_SI_ERR12; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR13":		{ type = RTYP_MSMC_RAMMON_SI_ERR13; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR14":		{ type = RTYP_MSMC_RAMMON_SI_ERR14; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR15":		{ type = RTYP_MSMC_RAMMON_SI_ERR15; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR16":		{ type = RTYP_MSMC_RAMMON_SI_ERR16; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR17":		{ type = RTYP_MSMC_RAMMON_SI_ERR17; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR18":		{ type = RTYP_MSMC_RAMMON_SI_ERR18; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR19":		{ type = RTYP_MSMC_RAMMON_SI_ERR19; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR2":		{ type = RTYP_MSMC_RAMMON_SI_ERR2; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR3":		{ type = RTYP_MSMC_RAMMON_SI_ERR3; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR4":		{ type = RTYP_MSMC_RAMMON_SI_ERR4; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR5":		{ type = RTYP_MSMC_RAMMON_SI_ERR5; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR6":		{ type = RTYP_MSMC_RAMMON_SI_ERR6; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR7":		{ type = RTYP_MSMC_RAMMON_SI_ERR7; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR8":		{ type = RTYP_MSMC_RAMMON_SI_ERR8; string_to_report_type =  1; }
	"RTYP_MSMC_RAMMON_SI_ERR9":		{ type = RTYP_MSMC_RAMMON_SI_ERR9; string_to_report_type =  1; }
	"RTYP_PCIE_TLP_DEBUG1":		{ type = RTYP_PCIE_TLP_DEBUG1; string_to_report_type =  1; }
	"RTYP_PCIE_TLP_DEBUG2":		{ type = RTYP_PCIE_TLP_DEBUG2; string_to_report_type =  1; }
	"RTYP_PCIE_TLP_DEBUG3":		{ type = RTYP_PCIE_TLP_DEBUG3; string_to_report_type =  1; }
	"RTYP_PCIE_TLP_ERROR":		{ type = RTYP_PCIE_TLP_ERROR; string_to_report_type =  1; }
	"RTYP_PCIE_TLP_INFO":		{ type = RTYP_PCIE_TLP_INFO; string_to_report_type =  1; }
	"RTYP_PCIE_TLP_WARNING":		{ type = RTYP_PCIE_TLP_WARNING; string_to_report_type =  1; }
	"RTYP_PORT_SM_CHECK":		{ type = RTYP_PORT_SM_CHECK; string_to_report_type =  1; }
	"RTYP_QPS_RTL_DEBUG_1":		{ type = RTYP_QPS_RTL_DEBUG_1; string_to_report_type =  1; }
	"RTYP_QPS_RTL_DEBUG_2":		{ type = RTYP_QPS_RTL_DEBUG_2; string_to_report_type =  1; }
	"RTYP_QPS_RTL_DEBUG_3":		{ type = RTYP_QPS_RTL_DEBUG_3; string_to_report_type =  1; }
	"RTYP_QPS_RTL_ERROR":		{ type = RTYP_QPS_RTL_ERROR; string_to_report_type =  1; }
	"RTYP_QPS_RTL_INFO":		{ type = RTYP_QPS_RTL_INFO; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_DEBUG_1":		{ type = RTYP_RAP_XACTOR_DEBUG_1; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_DEBUG_EXPECT_Q":		{ type = RTYP_RAP_XACTOR_DEBUG_EXPECT_Q; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_DEBUG_PHY_CONNECTION":		{ type = RTYP_RAP_XACTOR_DEBUG_PHY_CONNECTION; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_ERR":		{ type = RTYP_RAP_XACTOR_ERR; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_ERR_FLOW_CONTROL":		{ type = RTYP_RAP_XACTOR_ERR_FLOW_CONTROL; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_ERR_PKT_MATCH":		{ type = RTYP_RAP_XACTOR_ERR_PKT_MATCH; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_ERR_X_ON_BUS":		{ type = RTYP_RAP_XACTOR_ERR_X_ON_BUS; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_MSG":		{ type = RTYP_RAP_XACTOR_MSG; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_MSG_MIN":		{ type = RTYP_RAP_XACTOR_MSG_MIN; string_to_report_type =  1; }
	"RTYP_RAP_XACTOR_WARN":		{ type = RTYP_RAP_XACTOR_WARN; string_to_report_type =  1; }
	"RTYP_RBC_RTL_DEBUG_1":		{ type = RTYP_RBC_RTL_DEBUG_1; string_to_report_type =  1; }
	"RTYP_RBC_RTL_DEBUG_2":		{ type = RTYP_RBC_RTL_DEBUG_2; string_to_report_type =  1; }
	"RTYP_RBC_RTL_DEBUG_3":		{ type = RTYP_RBC_RTL_DEBUG_3; string_to_report_type =  1; }
	"RTYP_RBC_RTL_ERROR":		{ type = RTYP_RBC_RTL_ERROR; string_to_report_type =  1; }
	"RTYP_RBC_RTL_INFO":		{ type = RTYP_RBC_RTL_INFO; string_to_report_type =  1; }
	"RTYP_RECEIVE_SM_CHECK":		{ type = RTYP_RECEIVE_SM_CHECK; string_to_report_type =  1; }
	"RTYP_REPORT_MSG":		{ type = RTYP_REPORT_MSG; string_to_report_type =  1; }
	"RTYP_RSUTRANS_ERROR":		{ type = RTYP_RSUTRANS_ERROR; string_to_report_type =  1; }
	"RTYP_RSUTRANS_INFO":		{ type = RTYP_RSUTRANS_INFO; string_to_report_type =  1; }
	"RTYP_SBX_BAD_CRC":		{ type = RTYP_SBX_BAD_CRC; string_to_report_type =  1; }
	"RTYP_SBX_DATA_HOLD_ERROR":		{ type = RTYP_SBX_DATA_HOLD_ERROR; string_to_report_type =  1; }
	"RTYP_SBX_DEBUG_1":		{ type = RTYP_SBX_DEBUG_1; string_to_report_type =  1; }
	"RTYP_SBX_DEBUG_2":		{ type = RTYP_SBX_DEBUG_2; string_to_report_type =  1; }
	"RTYP_SBX_FALSE_PKT_START":		{ type = RTYP_SBX_FALSE_PKT_START; string_to_report_type =  1; }
	"RTYP_SBX_INCOMPLETE":		{ type = RTYP_SBX_INCOMPLETE; string_to_report_type =  1; }
	"RTYP_SBX_INFO":		{ type = RTYP_SBX_INFO; string_to_report_type =  1; }
	"RTYP_SBX_STRAY_BIT":		{ type = RTYP_SBX_STRAY_BIT; string_to_report_type =  1; }
	"RTYP_SBX_XEXPECT":		{ type = RTYP_SBX_XEXPECT; string_to_report_type =  1; }
	"RTYP_SBX_X_ON_BUS":		{ type = RTYP_SBX_X_ON_BUS; string_to_report_type =  1; }
	"RTYP_SFQ_RTL_CSRQ_ERROR":		{ type = RTYP_SFQ_RTL_CSRQ_ERROR; string_to_report_type =  1; }
	"RTYP_SFQ_RTL_CSRQ_PUSH":		{ type = RTYP_SFQ_RTL_CSRQ_PUSH; string_to_report_type =  1; }
	"RTYP_SFQ_RTL_USER_DEBUG_MSG":		{ type = RTYP_SFQ_RTL_USER_DEBUG_MSG; string_to_report_type =  1; }
	"RTYP_SFQ_RTL_USER_DEFINED_MSG":		{ type = RTYP_SFQ_RTL_USER_DEFINED_MSG; string_to_report_type =  1; }
	"RTYP_SFQ_RTL_USER_ERROR":		{ type = RTYP_SFQ_RTL_USER_ERROR; string_to_report_type =  1; }
	"RTYP_SFQ_TB_ENQUEUE_XACTION":		{ type = RTYP_SFQ_TB_ENQUEUE_XACTION; string_to_report_type =  1; }
	"RTYP_SFQ_TB_USER_DEBUG_MSG":		{ type = RTYP_SFQ_TB_USER_DEBUG_MSG; string_to_report_type =  1; }
	"RTYP_SFQ_TB_USER_DEFINED_MSG":		{ type = RTYP_SFQ_TB_USER_DEFINED_MSG; string_to_report_type =  1; }
	"RTYP_SFQ_TB_USER_ERROR":		{ type = RTYP_SFQ_TB_USER_ERROR; string_to_report_type =  1; }
	"RTYP_SPE_RTL_DEBUG_1":		{ type = RTYP_SPE_RTL_DEBUG_1; string_to_report_type =  1; }
	"RTYP_SPE_RTL_DEBUG_2":		{ type = RTYP_SPE_RTL_DEBUG_2; string_to_report_type =  1; }
	"RTYP_SPE_RTL_DEBUG_3":		{ type = RTYP_SPE_RTL_DEBUG_3; string_to_report_type =  1; }
	"RTYP_SPE_RTL_ERROR":		{ type = RTYP_SPE_RTL_ERROR; string_to_report_type =  1; }
	"RTYP_SPE_RTL_INFO":		{ type = RTYP_SPE_RTL_INFO; string_to_report_type =  1; }
	"RTYP_STREAM_CHECK":		{ type = RTYP_STREAM_CHECK; string_to_report_type =  1; }
	"RTYP_TB_THREADMGR_DB_UPDATE":		{ type = RTYP_TB_THREADMGR_DB_UPDATE; string_to_report_type =  1; }
	"RTYP_TB_THREADMGR_DEBUG_3":		{ type = RTYP_TB_THREADMGR_DEBUG_3; string_to_report_type =  1; }
	"RTYP_TB_THREADMGR_SIGNAL_BROADCAST":		{ type = RTYP_TB_THREADMGR_SIGNAL_BROADCAST; string_to_report_type =  1; }
	"RTYP_TB_THREADMGR_THREADS_INCOMPLETE_ERROR":		{ type = RTYP_TB_THREADMGR_THREADS_INCOMPLETE_ERROR; string_to_report_type =  1; }
	"RTYP_TB_THREADMGR_THREAD_LIST":		{ type = RTYP_TB_THREADMGR_THREAD_LIST; string_to_report_type =  1; }
	"RTYP_TB_THREADMGR_WARNING":		{ type = RTYP_TB_THREADMGR_WARNING; string_to_report_type =  1; }
	"RTYP_TDB_RTL_INFO":		{ type = RTYP_TDB_RTL_INFO; string_to_report_type =  1; }
	"RTYP_TEST_ERROR":		{ type = RTYP_TEST_ERROR; string_to_report_type =  1; }
	"RTYP_TII_MON_DEBUG1":		{ type = RTYP_TII_MON_DEBUG1; string_to_report_type =  1; }
	"RTYP_TII_MON_DEBUG2":		{ type = RTYP_TII_MON_DEBUG2; string_to_report_type =  1; }
	"RTYP_TII_MON_DEBUG3":		{ type = RTYP_TII_MON_DEBUG3; string_to_report_type =  1; }
	"RTYP_TII_MON_ERROR":		{ type = RTYP_TII_MON_ERROR; string_to_report_type =  1; }
	"RTYP_TII_MON_INFO":		{ type = RTYP_TII_MON_INFO; string_to_report_type =  1; }
	"RTYP_TII_MON_WARNING":		{ type = RTYP_TII_MON_WARNING; string_to_report_type =  1; }
	"RTYP_TIMEOUT":		{ type = RTYP_TIMEOUT; string_to_report_type =  1; }
	"RTYP_TLULPU_MON_DEBUG1":		{ type = RTYP_TLULPU_MON_DEBUG1; string_to_report_type =  1; }
	"RTYP_TLULPU_MON_DEBUG2":		{ type = RTYP_TLULPU_MON_DEBUG2; string_to_report_type =  1; }
	"RTYP_TLULPU_MON_DEBUG3":		{ type = RTYP_TLULPU_MON_DEBUG3; string_to_report_type =  1; }
	"RTYP_TLULPU_MON_ERROR":		{ type = RTYP_TLULPU_MON_ERROR; string_to_report_type =  1; }
	"RTYP_TLULPU_MON_INFO":		{ type = RTYP_TLULPU_MON_INFO; string_to_report_type =  1; }
	"RTYP_TLULPU_MON_WARNING":		{ type = RTYP_TLULPU_MON_WARNING; string_to_report_type =  1; }
	"RTYP_TTL_PROT":		{ type = RTYP_TTL_PROT; string_to_report_type =  1; }
	"RTYP_UNEXPECT_ERROR":		{ type = RTYP_UNEXPECT_ERROR; string_to_report_type =  1; }
	"RTYP_VERA_ERROR":		{ type = RTYP_VERA_ERROR; string_to_report_type =  1; }
	"RTYP_VERILOG_ERROR":		{ type = RTYP_VERILOG_ERROR; string_to_report_type =  1; }
	"RTYP_WARNING":		{ type = RTYP_WARNING; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_DUP_EXPECT_ERR":		{ type = RTYP_XACTOR_FMWORK_DUP_EXPECT_ERR; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_DUP_WILDCARD_EXPECT_WARN":		{ type = RTYP_XACTOR_FMWORK_DUP_WILDCARD_EXPECT_WARN; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_EXPECT_REMOVED_BY_USER":		{ type = RTYP_XACTOR_FMWORK_EXPECT_REMOVED_BY_USER; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_EXPECT_TIMEOUT_ERR":		{ type = RTYP_XACTOR_FMWORK_EXPECT_TIMEOUT_ERR; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_MEM_ALLOCATION_ERROR":		{ type = RTYP_XACTOR_FMWORK_MEM_ALLOCATION_ERROR; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_MSG":		{ type = RTYP_XACTOR_FMWORK_MSG; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_SAMPLED_DUP_XACTION_ERR":		{ type = RTYP_XACTOR_FMWORK_SAMPLED_DUP_XACTION_ERR; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_SAMPLED_X_ERR":		{ type = RTYP_XACTOR_FMWORK_SAMPLED_X_ERR; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_SAMPLE_TIMEOUT_ERR":		{ type = RTYP_XACTOR_FMWORK_SAMPLE_TIMEOUT_ERR; string_to_report_type =  1; }
	"RTYP_XACTOR_FMWORK_UNEXPECTED_XACTION_ERR":		{ type = RTYP_XACTOR_FMWORK_UNEXPECTED_XACTION_ERR; string_to_report_type =  1; }
	"VRTYP_DTJXTR_CREDIT_ERROR":		{ type = VRTYP_DTJXTR_CREDIT_ERROR; string_to_report_type =  1; }
	"VRTYP_DTJXTR_CREDIT_WARNING":		{ type = VRTYP_DTJXTR_CREDIT_WARNING; string_to_report_type =  1; }
	"VRTYP_DTJXTR_DUP_TAG_ERROR":		{ type = VRTYP_DTJXTR_DUP_TAG_ERROR; string_to_report_type =  1; }
	"VRTYP_DTJXTR_INTERNAL_DEBUG":		{ type = VRTYP_DTJXTR_INTERNAL_DEBUG; string_to_report_type =  1; }
	"VRTYP_DTJXTR_INTERNAL_ERROR":		{ type = VRTYP_DTJXTR_INTERNAL_ERROR; string_to_report_type =  1; }
	"VRTYP_DTJXTR_INTERNAL_WARNING":		{ type = VRTYP_DTJXTR_INTERNAL_WARNING; string_to_report_type =  1; }
	"VRTYP_DTJXTR_PACKET_INFO":		{ type = VRTYP_DTJXTR_PACKET_INFO; string_to_report_type =  1; }
	"VRTYP_DTJXTR_PROTOCOL_ERROR":		{ type = VRTYP_DTJXTR_PROTOCOL_ERROR; string_to_report_type =  1; }
	"VRTYP_DTJXTR_UNKNOWN_PKT_WARNING":		{ type = VRTYP_DTJXTR_UNKNOWN_PKT_WARNING; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_DEBUG1":		{ type = VRTYP_EBUS_XTR_DEBUG1; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_DEBUG2":		{ type = VRTYP_EBUS_XTR_DEBUG2; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_DEBUG3":		{ type = VRTYP_EBUS_XTR_DEBUG3; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_ERROR":		{ type = VRTYP_EBUS_XTR_ERROR; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_INFO":		{ type = VRTYP_EBUS_XTR_INFO; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_VERA_ERROR":		{ type = VRTYP_EBUS_XTR_VERA_ERROR; string_to_report_type =  1; }
	"VRTYP_EBUS_XTR_WARNING":		{ type = VRTYP_EBUS_XTR_WARNING; string_to_report_type =  1; }
	"VRTYP_I2C_XTR_DEBUG1":		{ type = VRTYP_I2C_XTR_DEBUG1; string_to_report_type =  1; }
	"VRTYP_I2C_XTR_DEBUG2":		{ type = VRTYP_I2C_XTR_DEBUG2; string_to_report_type =  1; }
	"VRTYP_I2C_XTR_DEBUG3":		{ type = VRTYP_I2C_XTR_DEBUG3; string_to_report_type =  1; }
	"VRTYP_I2C_XTR_ERROR":		{ type = VRTYP_I2C_XTR_ERROR; string_to_report_type =  1; }
	"VRTYP_I2C_XTR_INFO":		{ type = VRTYP_I2C_XTR_INFO; string_to_report_type =  1; }
	"VRTYP_I2C_XTR_WARNING":		{ type = VRTYP_I2C_XTR_WARNING; string_to_report_type =  1; }
	"VRTYP_JBUS_XTR_DEBUG1":		{ type = VRTYP_JBUS_XTR_DEBUG1; string_to_report_type =  1; }
	"VRTYP_JBUS_XTR_DEBUG2":		{ type = VRTYP_JBUS_XTR_DEBUG2; string_to_report_type =  1; }
	"VRTYP_JBUS_XTR_DEBUG3":		{ type = VRTYP_JBUS_XTR_DEBUG3; string_to_report_type =  1; }
	"VRTYP_JBUS_XTR_ERROR":		{ type = VRTYP_JBUS_XTR_ERROR; string_to_report_type =  1; }
	"VRTYP_JBUS_XTR_INFO":		{ type = VRTYP_JBUS_XTR_INFO; string_to_report_type =  1; }
	"VRTYP_JBUS_XTR_WARNING":		{ type = VRTYP_JBUS_XTR_WARNING; string_to_report_type =  1; }
	"VRTYP_JDICOMMON_INFO":		{ type = VRTYP_JDICOMMON_INFO; string_to_report_type =  1; }
	"VRTYP_JDICOMMON_INTERNAL_DEBUG":		{ type = VRTYP_JDICOMMON_INTERNAL_DEBUG; string_to_report_type =  1; }
	"VRTYP_JDICOMMON_INTERNAL_ERROR":		{ type = VRTYP_JDICOMMON_INTERNAL_ERROR; string_to_report_type =  1; }
	"VRTYP_JDICOMMON_INTERNAL_WARNING":		{ type = VRTYP_JDICOMMON_INTERNAL_WARNING; string_to_report_type =  1; }
	"VRTYP_JTDXTR_CREDIT_ERROR":		{ type = VRTYP_JTDXTR_CREDIT_ERROR; string_to_report_type =  1; }
	"VRTYP_JTDXTR_CREDIT_WARNING":		{ type = VRTYP_JTDXTR_CREDIT_WARNING; string_to_report_type =  1; }
	"VRTYP_JTDXTR_DUP_TAG_ERROR":		{ type = VRTYP_JTDXTR_DUP_TAG_ERROR; string_to_report_type =  1; }
	"VRTYP_JTDXTR_INTERNAL_DEBUG":		{ type = VRTYP_JTDXTR_INTERNAL_DEBUG; string_to_report_type =  1; }
	"VRTYP_JTDXTR_INTERNAL_ERROR":		{ type = VRTYP_JTDXTR_INTERNAL_ERROR; string_to_report_type =  1; }
	"VRTYP_JTDXTR_INTERNAL_WARNING":		{ type = VRTYP_JTDXTR_INTERNAL_WARNING; string_to_report_type =  1; }
	"VRTYP_JTDXTR_PACKET_INFO":		{ type = VRTYP_JTDXTR_PACKET_INFO; string_to_report_type =  1; }
	"VRTYP_JTDXTR_PROTOCOL_ERROR":		{ type = VRTYP_JTDXTR_PROTOCOL_ERROR; string_to_report_type =  1; }
	"VRTYP_JTDXTR_UNKNOWN_PKT_WARNING":		{ type = VRTYP_JTDXTR_UNKNOWN_PKT_WARNING; string_to_report_type =  1; }
	"VRTYP_PECXTR_DISPLAY_DLLP_INFO":		{ type = VRTYP_PECXTR_DISPLAY_DLLP_INFO; string_to_report_type =  1; }
	"VRTYP_PECXTR_DISPLAY_DOUBLE_WORD_INFO":		{ type = VRTYP_PECXTR_DISPLAY_DOUBLE_WORD_INFO; string_to_report_type =  1; }
	"VRTYP_PECXTR_DISPLAY_TLP_ERROR":		{ type = VRTYP_PECXTR_DISPLAY_TLP_ERROR; string_to_report_type =  1; }
	"VRTYP_PECXTR_DISPLAY_TLP_INFO":		{ type = VRTYP_PECXTR_DISPLAY_TLP_INFO; string_to_report_type =  1; }
	"VRTYP_PECXTR_ILLEGAL_CAST_ERR":		{ type = VRTYP_PECXTR_ILLEGAL_CAST_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_ILLEGAL_CLAUSE_ENTRY_ERR":		{ type = VRTYP_PECXTR_ILLEGAL_CLAUSE_ENTRY_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_ILLEGAL_METHOD_CALL_ERR":		{ type = VRTYP_PECXTR_ILLEGAL_METHOD_CALL_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_INVALID_DOUBLE_WORD_ERR":		{ type = VRTYP_PECXTR_INVALID_DOUBLE_WORD_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_PARITY_ERROR_ERR":		{ type = VRTYP_PECXTR_PARITY_ERROR_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_PEEK_EMPTY_QUEUE_ERR":		{ type = VRTYP_PECXTR_PEEK_EMPTY_QUEUE_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_POP_EMPTY_QUEUE_ERR":		{ type = VRTYP_PECXTR_POP_EMPTY_QUEUE_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_CMD_AGAINST_TLP_IN_PROGRESS_ERR":		{ type = VRTYP_PECXTR_RX_CMD_AGAINST_TLP_IN_PROGRESS_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_COMMAND_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_COMMAND_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_DATA_CREDIT_IN_INIT_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_DATA_CREDIT_IN_INIT_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_IN_INIT_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_DLLP_TYPE_IN_INIT_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_HEADER_CREDIT_IN_INIT_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_HEADER_CREDIT_IN_INIT_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_INIT_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_INIT_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_UPDATE_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_HIGH_PRIORITY_IN_UPDATE_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_POSITION_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_POSITION_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_VC_IN_INIT_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_VC_IN_INIT_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_VC_IN_UPDATE_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_VC_IN_UPDATE_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_WHILE_DACK_DOWN_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_WHILE_DACK_DOWN_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_INVALID_WHILE_LINK_DOWN_ERR":		{ type = VRTYP_PECXTR_RX_INVALID_WHILE_LINK_DOWN_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_DATA_ERR":		{ type = VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_DATA_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_AND_DATA_ERR":		{ type = VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_AND_DATA_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_ERR":		{ type = VRTYP_PECXTR_RX_UPDATE_FOR_INFINITE_HEADER_ERR; string_to_report_type =  1; }
	"VRTYP_PECXTR_TX_ILLEGAL_FLAGS_ERR":		{ type = VRTYP_PECXTR_TX_ILLEGAL_FLAGS_ERR; string_to_report_type =  1; }
	"VRTYP_PX_ARRAY_EMPTY_ERR":		{ type = VRTYP_PX_ARRAY_EMPTY_ERR; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_BYTE_INFO":		{ type = VRTYP_PX_DISPLAY_BYTE_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_DLLP_INFO":		{ type = VRTYP_PX_DISPLAY_DLLP_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_FCDLLP_INFO":		{ type = VRTYP_PX_DISPLAY_FCDLLP_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_FCIDLCMSM_STATE_INFO":		{ type = VRTYP_PX_DISPLAY_FCIDLCMSM_STATE_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_LTSSM_STATE_INFO":		{ type = VRTYP_PX_DISPLAY_LTSSM_STATE_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_PLP_INFO":		{ type = VRTYP_PX_DISPLAY_PLP_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_PMDLLP_INFO":		{ type = VRTYP_PX_DISPLAY_PMDLLP_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_SNDLLP_INFO":		{ type = VRTYP_PX_DISPLAY_SNDLLP_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_TLP_HEADER_INFO":		{ type = VRTYP_PX_DISPLAY_TLP_HEADER_INFO; string_to_report_type =  1; }
	"VRTYP_PX_DISPLAY_TLP_INFO":		{ type = VRTYP_PX_DISPLAY_TLP_INFO; string_to_report_type =  1; }
	"VRTYP_PX_ILLEGAL_CLAUSE_ENTRY_ERR":		{ type = VRTYP_PX_ILLEGAL_CLAUSE_ENTRY_ERR; string_to_report_type =  1; }
	"VRTYP_PX_LTSSM_INVALID_L0S_EXIT_ERR":		{ type = VRTYP_PX_LTSSM_INVALID_L0S_EXIT_ERR; string_to_report_type =  1; }
	"VRTYP_PX_LTSSM_INVALID_STATE_ERR":		{ type = VRTYP_PX_LTSSM_INVALID_STATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_MAILBOX_CREATION_FAILURE_ERR":		{ type = VRTYP_PX_MAILBOX_CREATION_FAILURE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_MAILBOX_REMOVED_EMPTY_ERR":		{ type = VRTYP_PX_MAILBOX_REMOVED_EMPTY_ERR; string_to_report_type =  1; }
	"VRTYP_PX_MAILBOX_TYPE_REMOVED_MISMATCH_ERR":		{ type = VRTYP_PX_MAILBOX_TYPE_REMOVED_MISMATCH_ERR; string_to_report_type =  1; }
	"VRTYP_PX_OUT_OF_RANGE_INTEGER_VALUE_ERR":		{ type = VRTYP_PX_OUT_OF_RANGE_INTEGER_VALUE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_REGISTRATION_ERR":		{ type = VRTYP_PX_REGISTRATION_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_COM_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_COM_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_DLLP_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_DLLP_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_FTS_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_FTS_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_IDLE_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_IDLE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_IDL_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_IDL_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_PAD_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_PAD_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_SKP_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_SKP_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_SYMBOL_TIME_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_SYMBOL_TIME_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TLP_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_TLP_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TS1_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_TS1_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TS2_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_TS2_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_BAD_SYMBOL_IN_TS_ERR":		{ type = VRTYP_PX_RX_BAD_SYMBOL_IN_TS_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DATA_ON_UNCONFIGURED_LANE_ERR":		{ type = VRTYP_PX_RX_DATA_ON_UNCONFIGURED_LANE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_BAD_LENGTH_ERR":		{ type = VRTYP_PX_RX_DLLP_BAD_LENGTH_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_INVALID_FLOW_CONTROL_ERR":		{ type = VRTYP_PX_RX_DLLP_INVALID_FLOW_CONTROL_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_INVALID_LCRC_ERR":		{ type = VRTYP_PX_RX_DLLP_INVALID_LCRC_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_INVALID_LTSSM_STATE_ERR":		{ type = VRTYP_PX_RX_DLLP_INVALID_LTSSM_STATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_INVALID_SEQUENCE_NUMBER_ERR":		{ type = VRTYP_PX_RX_DLLP_INVALID_SEQUENCE_NUMBER_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_INVALID_STATE_ERR":		{ type = VRTYP_PX_RX_DLLP_INVALID_STATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_DLLP_INVALID_STATIC_FIELDS_ERR":		{ type = VRTYP_PX_RX_DLLP_INVALID_STATIC_FIELDS_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_EDB_IN_WRONG_LANE_ERR":		{ type = VRTYP_PX_RX_EDB_IN_WRONG_LANE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_END_IN_WRONG_LANE_ERR":		{ type = VRTYP_PX_RX_END_IN_WRONG_LANE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_ILLEGAL_10B_SYMBOL_ERR":		{ type = VRTYP_PX_RX_ILLEGAL_10B_SYMBOL_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_PLP_INVALID_LANE_NUMBER_ERR":		{ type = VRTYP_PX_RX_PLP_INVALID_LANE_NUMBER_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_PLP_INVALID_LINK_NUMBER_ERR":		{ type = VRTYP_PX_RX_PLP_INVALID_LINK_NUMBER_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_PLP_INVALID_LTSSM_STATE_ERR":		{ type = VRTYP_PX_RX_PLP_INVALID_LTSSM_STATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_PLP_INVALID_NFTS_ERR":		{ type = VRTYP_PX_RX_PLP_INVALID_NFTS_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_SDP_IN_WRONG_LANE_ERR":		{ type = VRTYP_PX_RX_SDP_IN_WRONG_LANE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_STP_IN_WRONG_LANE_ERR":		{ type = VRTYP_PX_RX_STP_IN_WRONG_LANE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_BAD_LENGTH_ERR":		{ type = VRTYP_PX_RX_TLP_BAD_LENGTH_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_INSUFFICIENT_FLOW_CONTROL_ERR":		{ type = VRTYP_PX_RX_TLP_INSUFFICIENT_FLOW_CONTROL_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_INVALID_LCRC_ERR":		{ type = VRTYP_PX_RX_TLP_INVALID_LCRC_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_INVALID_LTSSM_STATE_ERR":		{ type = VRTYP_PX_RX_TLP_INVALID_LTSSM_STATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_INVALID_STATE_ERR":		{ type = VRTYP_PX_RX_TLP_INVALID_STATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_SEQUENCE_NUMBER_DUPLICATE_ERR":		{ type = VRTYP_PX_RX_TLP_SEQUENCE_NUMBER_DUPLICATE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TLP_SEQUENCE_NUMER_OUT_OF_ORDER_ERR":		{ type = VRTYP_PX_RX_TLP_SEQUENCE_NUMER_OUT_OF_ORDER_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TOO_MANY_SDP_IN_SYMBOL_TIME_ERR":		{ type = VRTYP_PX_RX_TOO_MANY_SDP_IN_SYMBOL_TIME_ERR; string_to_report_type =  1; }
	"VRTYP_PX_RX_TOO_MANY_STP_IN_SYMBOL_TIME_ERR":		{ type = VRTYP_PX_RX_TOO_MANY_STP_IN_SYMBOL_TIME_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_BAD_FC_DLLP_BUILD_ERR":		{ type = VRTYP_PX_TX_BAD_FC_DLLP_BUILD_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_BAD_PM_DLLP_BUILD_ERR":		{ type = VRTYP_PX_TX_BAD_PM_DLLP_BUILD_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_BAD_SN_DLLP_BUILD_ERR":		{ type = VRTYP_PX_TX_BAD_SN_DLLP_BUILD_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_BAD_TRANSACTOR_SIZE_ERR":		{ type = VRTYP_PX_TX_BAD_TRANSACTOR_SIZE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_BAD_VENDOR_DLLP_BUILD_ERR":		{ type = VRTYP_PX_TX_BAD_VENDOR_DLLP_BUILD_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_BYTE_SIZE_TOO_BIG_ERR":		{ type = VRTYP_PX_TX_BYTE_SIZE_TOO_BIG_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_DIFFERING_COUNT_VALUES_ERR":		{ type = VRTYP_PX_TX_DIFFERING_COUNT_VALUES_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_DIFFERING_SIZE_BYTES_ERR":		{ type = VRTYP_PX_TX_DIFFERING_SIZE_BYTES_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_ILLEGAL_8B_SYMBOL_ERR":		{ type = VRTYP_PX_TX_ILLEGAL_8B_SYMBOL_ERR; string_to_report_type =  1; }
	"VRTYP_PX_TX_INVALID_DLLP_TYPE_ERR":		{ type = VRTYP_PX_TX_INVALID_DLLP_TYPE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_UNKNOWN_10B_VALUE_ERR":		{ type = VRTYP_PX_UNKNOWN_10B_VALUE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_UNKNOWN_8B_VALUE_ERR":		{ type = VRTYP_PX_UNKNOWN_8B_VALUE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_UNKNOWN_INTEGER_VALUE_ERR":		{ type = VRTYP_PX_UNKNOWN_INTEGER_VALUE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_UNREGISTRATION_ERR":		{ type = VRTYP_PX_UNREGISTRATION_ERR; string_to_report_type =  1; }
	"VRTYP_PX_VERILOG_RX_INVALID_BIT_ERR":		{ type = VRTYP_PX_VERILOG_RX_INVALID_BIT_ERR; string_to_report_type =  1; }
	"VRTYP_PX_VERILOG_RX_INVALID_COM_SYMBOL_ERR":		{ type = VRTYP_PX_VERILOG_RX_INVALID_COM_SYMBOL_ERR; string_to_report_type =  1; }
	"VRTYP_PX_VERILOG_RX_INVALID_DATA_ERR":		{ type = VRTYP_PX_VERILOG_RX_INVALID_DATA_ERR; string_to_report_type =  1; }
	"VRTYP_PX_VERILOG_TX_INVALID_DATA_QUANTITY_ERR":		{ type = VRTYP_PX_VERILOG_TX_INVALID_DATA_QUANTITY_ERR; string_to_report_type =  1; }
	"VRTYP_PX_VERILOG_TX_INVALID_DRIVE_ERR":		{ type = VRTYP_PX_VERILOG_TX_INVALID_DRIVE_ERR; string_to_report_type =  1; }
	"VRTYP_PX_VERILOG_TX_INVALID_XID_ERR":		{ type = VRTYP_PX_VERILOG_TX_INVALID_XID_ERR; string_to_report_type =  1; }
	"VRTYP_TIIXTR_CREDIT_ERROR":		{ type = VRTYP_TIIXTR_CREDIT_ERROR; string_to_report_type =  1; }
	"VRTYP_TIIXTR_CREDIT_WARNING":		{ type = VRTYP_TIIXTR_CREDIT_WARNING; string_to_report_type =  1; }
	"VRTYP_TIIXTR_INTERNAL_DEBUG":		{ type = VRTYP_TIIXTR_INTERNAL_DEBUG; string_to_report_type =  1; }
	"VRTYP_TIIXTR_INTERNAL_ERROR":		{ type = VRTYP_TIIXTR_INTERNAL_ERROR; string_to_report_type =  1; }
	"VRTYP_TIIXTR_INTERNAL_WARNING":		{ type = VRTYP_TIIXTR_INTERNAL_WARNING; string_to_report_type =  1; }
	"VRTYP_TIIXTR_PACKET_INFO":		{ type = VRTYP_TIIXTR_PACKET_INFO; string_to_report_type =  1; }
	"VRTYP_TIIXTR_PARITY_ERROR":		{ type = VRTYP_TIIXTR_PARITY_ERROR; string_to_report_type =  1; }
	"VRTYP_TIIXTR_PROTOCOL_ERROR":		{ type = VRTYP_TIIXTR_PROTOCOL_ERROR; string_to_report_type =  1; }
	default:		{ string_to_report_type = 0; }
      }
}

//function ReportType get_type_by_index(integer index)
//{
//    case (index)
//      {
//      }
//}

  ////////////////////////////////////////////////////////////////////////////////
  // Display

  function string print_level_to_str(PrintLevel print_level)
  {
    case (print_level)
      {
	RPRT_NOP:		print_level_to_str = "RPRT_NOP";
	RPRT_DEBUG_3:		print_level_to_str = "RPRT_DEBUG_3";
	RPRT_DEBUG_2:		print_level_to_str = "RPRT_DEBUG_2";
	RPRT_DEBUG_1:		print_level_to_str = "RPRT_DEBUG_1";
	RPRT_INFO:		print_level_to_str = "RPRT_INFO";
	RPRT_NONMASKABLE:		print_level_to_str = "RPRT_NONMASKABLE";
      }
  }

  function string error_level_to_str(ErrorLevel error_level)
  {
    case (error_level)
      {
	RERR_MESSAGE:		error_level_to_str = "RERR_MESSAGE";
	RERR_WARNING:		error_level_to_str = "RERR_WARNING";
	RERR_ERROR:		error_level_to_str = "RERR_ERROR";
      }
  }

function string report_type_to_str(ReportType type)
{
  report_type_to_str = report_type_str_by_type[type];
}

////////////////////////////////////////////////////////////////////////////////
// Validation
function integer is_print_level_valid(PrintLevel print_level)
{
    case (print_level)
    {
	RPRT_NOP:		{ is_print_level_valid =  1; }
	RPRT_DEBUG_3:		{ is_print_level_valid =  1; }
	RPRT_DEBUG_2:		{ is_print_level_valid =  1; }
	RPRT_DEBUG_1:		{ is_print_level_valid =  1; }
	RPRT_INFO:		{ is_print_level_valid =  1; }
	RPRT_NONMASKABLE:		{ is_print_level_valid =  1; }
	default:		{ is_print_level_valid = 0; }
   }
}

} // end class ReportInfo
