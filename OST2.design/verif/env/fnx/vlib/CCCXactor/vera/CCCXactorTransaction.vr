// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: CCCXactorTransaction.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>
#include "CTTransactionID.vrh"
//#include "CTSupportClasses.vrh"


//------------------------------------------------------------------------------
//  Class Definition 
//      
//
//
//------------------------------------------------------------------------------

class CCCXactorTransaction {

  CTTransactionID RingXactionID;
  bit	      error;
  bit         wr_rd_cmd;
  bit [26:0]  address;
  bit [63:0]  csr_data;
  bit  [1:0]  src_bus_id;

  task new();
  
  function string toString();
  
}


  //***************************************************************
  //  Constructor 
  //
  //	- Initailize Transaction 
  //		- read/write and scr bus id = x
  //		- Address and Data = 0 
  //
  //***************************************************************

task CCCXactorTransaction::new() {
 
  RingXactionID = new;
  error		= 1'b0;
  wr_rd_cmd 	= 1'bx;
  address 	= 0;
  csr_data 	= 0;
  src_bus_id 	= 2'bxx;
}


  //***************************************************************
  //  toString Function  
  //
  // 	- Returns a String 
  //
  //***************************************************************


function string CCCXactorTransaction::toString()
{
  string tmp;

  sprintf( tmp, "[%0d %0d %0d]", RingXactionID.GetContextID(),
	   RingXactionID.GetStrategyID(),RingXactionID.GetTransID() );
  toString = { tmp," ring transaction:\ncommand=" };

  if( wr_rd_cmd === 1'b1 )
    toString = { toString,"write  " };
  else
    toString = { toString,"read  " };

  sprintf( tmp, "address=%h  data=%h  src bus id=%h  error=%h\n",
	   address, csr_data, src_bus_id, error );
  toString = { toString,tmp };
}
