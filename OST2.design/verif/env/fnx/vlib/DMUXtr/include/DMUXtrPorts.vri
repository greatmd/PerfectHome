// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: DMUXtrPorts.vri
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef DMU_XTR_PORTS_DEFINED
#define DMU_XTR_PORTS_DEFINED


port po_DMUegress {
  deq;         /* PEC record dequeue (return credit) */
  addr;        /* requested DOU address */
  relrcd;      /* egress release record */
  relrcdenq;   /* release record enqueue ("relrcd" valid) */
#ifndef	N2_FC
  recd;        /* egress PEC record */
  enq;         /* PEC record enqueue (consume credit) */
  data;        /* DOU data corresponding to "addr" */
  par;         /* parity for DOU "data" */
  douvalid;    /* Is there a valid entry in the DOU? (for DMA cmp'n data) */
  douaddr;     /* The index of the "valid" DOU entry */
  douerr;      /* "1" if the entry is garbage */
#endif
}

port po_DMUingress {
  recd;        /* ingress PEC record */
  enq;         /* PEC record enqueue (consume credit) */
#ifndef	N2_FC
  deq;         /* PEC record dequeue (return credit) */
  data;        /* DOU data corresponding to "addr" */
  par;         /* parity for DOU "data" */
  addr;        /* requested DOU address */
  relrcd;      /* ingress release record */
  relrcdenq;   /* release record enqueue ("relrcd" valid) */
#endif
}

port po_DMUmisc {
#ifndef	N2_FC
  pwrOnRstN;	/*Active low Power On Reset*/
  resetN; 	/*Active low reset*/
#endif
  int;		/*Interrupt from ILU*/
  mps;    	/*Max packet size*/ 
  drain;    	/*drainState entered */ 
}
#endif
