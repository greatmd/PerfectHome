// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ssi.if.vrh
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef INC_SSI_IF_VRH
#define INC_SSI_IF_VRH


#include <vera_defines.vrh>
#include "defines.vri"

interface ssi_if {

        input           clk     CLOCK           verilog_node "tb_top.SSI_SCK";
        input           ssi_mosi      PSAMPLE      #-0      verilog_node "tb_top.SSI_MOSI";
        output          ssi_miso      PHOLD     #0     verilog_node "tb_top.SSI_MISO";
	output		ssi_int_l     PHOLD     #0     verilog_node "tb_top.SSI_EXT_INT_L";
        input          ssi_sync_l     PSAMPLE      #-0       verilog_node "tb_top.SSI_SYNC_L";
//        input          ssi_reset_l    PSAMPLE      #-0       verilog_node "tb_top.PEX_RESET_L";
        input          ssi_reset_l    PSAMPLE      #-0       verilog_node "tb_top.SSI_SYNC_L";

}

port ssi_iport {
  clk;
  data;
  reset;
}

port ssi_oport {
  clk;
  data;
  int_l;
  sync_l;
}


bind ssi_iport ncu {
  clk ssi_if.clk;
  data ssi_if.ssi_mosi;
  reset ssi_if.ssi_reset_l;
}

bind ssi_oport ssi {
  clk ssi_if.clk;
  data ssi_if.ssi_miso;
  int_l ssi_if.ssi_int_l;
  sync_l ssi_if.ssi_sync_l;
}
 
#endif

