// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ios_verilog_tasks.vri
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
hdl_task SetNiuSiiData15(reg value) "tb_top.SetNiuSiiData15";
hdl_task RelNiuSiiData15() "tb_top.RelNiuSiiData15";
hdl_task SetNiuSiiDP0(reg value) "tb_top.SetNiuSiiDP0";
hdl_task RelNiuSiiDP0() "tb_top.RelNiuSiiDP0";
hdl_task SetNiuSiiAP0(reg value) "tb_top.SetNiuSiiAP0";
hdl_task RelNiuSiiAP0() "tb_top.RelNiuSiiAP0";
hdl_task SetNiuSiiCMDP(reg value) "tb_top.SetNiuSiiCMDP";
hdl_task RelNiuSiiCMDP() "tb_top.RelNiuSiiCMDP";
hdl_task SetNiuSiiIOAE() "tb_top.SetNiuSiiIOAE";
hdl_task RelNiuSiiIOAE() "tb_top.RelNiuSiiIOAE";
hdl_task SetNiuSiiIOUE() "tb_top.SetNiuSiiIOUE";
hdl_task RelNiuSiiIOUE() "tb_top.RelNiuSiiIOUE";
hdl_task SetNiuSiiCECC0(reg value) "tb_top.SetNiuSiiCECC0";
hdl_task RelNiuSiiCECC0() "tb_top.RelNiuSiiCECC0";
hdl_task SetNiuSiiCECC1(reg value) "tb_top.SetNiuSiiCECC1";
hdl_task RelNiuSiiCECC1() "tb_top.RelNiuSiiCECC1";
hdl_task SetDmuSiiDP0(reg value) "tb_top.SetDmuSiiDP0";
hdl_task RelDmuSiiDP0() "tb_top.RelDmuSiiDP0";
hdl_task SetDmuSiiBEP(reg value) "tb_top.SetDmuSiiBEP";
hdl_task RelDmuSiiBEP() "tb_top.RelDmuSiiBEP";
hdl_task SetDmuSiiAP0(reg value) "tb_top.SetDmuSiiAP0";
hdl_task RelDmuSiiAP0() "tb_top.RelDmuSiiAP0";
hdl_task SetDmuSiiCMDP(reg value) "tb_top.SetDmuSiiCMDP";
hdl_task RelDmuSiiCMDP() "tb_top.RelDmuSiiCMDP";
hdl_task SetDmuSiiIOAE() "tb_top.SetDmuSiiIOAE";
hdl_task RelDmuSiiIOAE() "tb_top.RelDmuSiiIOAE";
hdl_task SetDmuSiiIOUE() "tb_top.SetDmuSiiIOUE";
hdl_task RelDmuSiiIOUE() "tb_top.RelDmuSiiIOUE";
hdl_task SetDmuSiiTOUT() "tb_top.SetDmuSiiTOUT";
hdl_task RelDmuSiiTOUT() "tb_top.RelDmuSiiTOUT";
hdl_task SetDmuSiiCECC0(reg value) "tb_top.SetDmuSiiCECC0";
hdl_task RelDmuSiiCECC0() "tb_top.RelDmuSiiCECC0";
hdl_task SetDmuSiiCECC1(reg value) "tb_top.SetDmuSiiCECC1";
hdl_task RelDmuSiiCECC1() "tb_top.RelDmuSiiCECC1";
hdl_task SetSioNiuDP0(reg value) "tb_top.SetSioNiuDP0";
hdl_task RelSioNiuDP0() "tb_top.RelSioNiuDP0";
hdl_task SetSioDmuDP0(reg value) "tb_top.SetSioDmuDP0";
hdl_task RelSioDmuDP0() "tb_top.RelSioDmuDP0";
hdl_task SetSioNiuCECC0(reg value) "tb_top.SetSioNiuCECC0";
hdl_task RelSioNiuCECC0() "tb_top.RelSioNiuCECC0";
hdl_task SetSioNiuCECC1(reg value) "tb_top.SetSioNiuCECC1";
hdl_task RelSioNiuCECC1() "tb_top.RelSioNiuCECC1";
hdl_task SetSioDmuCECC0(reg value) "tb_top.SetSioDmuCECC0";
hdl_task RelSioDmuCECC0() "tb_top.RelSioDmuCECC0";
hdl_task SetSioDmuCECC1(reg value) "tb_top.SetSioDmuCECC1";
hdl_task RelSioDmuCECC1() "tb_top.RelSioDmuCECC1";
hdl_task SetL2SioDP0(reg value, integer bank) "tb_top.SetL2SioDP0";
hdl_task RelL2SioDP0(integer bank) "tb_top.RelL2SioDP0";
hdl_task SetL2SioEBIT(reg value, integer bank) "tb_top.SetL2SioEBIT";
hdl_task RelL2SioEBIT(integer bank) "tb_top.RelL2SioEBIT";
hdl_task SetL2SioCECC0(reg value, integer bank) "tb_top.SetL2SioCECC0";
hdl_task RelL2SioCECC0(integer bank) "tb_top.RelL2SioCECC0";
hdl_task SetL2SioCECC1(reg value, integer bank) "tb_top.SetL2SioCECC1";
hdl_task RelL2SioCECC1(integer bank) "tb_top.RelL2SioCECC1";
hdl_task SetSiiNcuDP0(reg value) "tb_top.SetSiiNcuDP0";
hdl_task RelSiiNcuDP0() "tb_top.RelSiiNcuDP0";
hdl_task SetSiiNcuCECC0(reg value) "tb_top.SetSiiNcuCECC0";
hdl_task RelSiiNcuCECC0() "tb_top.RelSiiNcuCECC0";
hdl_task SetSiiNcuCECC1(reg value) "tb_top.SetSiiNcuCECC1";
hdl_task RelSiiNcuCECC1() "tb_top.RelSiiNcuCECC1";
hdl_task SetDmuNcuWRACKPAR(reg value) "tb_top.SetDmuNcuWRACKPAR";
hdl_task RelDmuNcuWRACKPAR() "tb_top.RelDmuNcuWRACKPAR";
hdl_task SetNcuDmuMONDOPAR(reg value) "tb_top.SetNcuDmuMONDOPAR";
hdl_task RelNcuDmuMONDOPAR() "tb_top.RelNcuDmuMONDOPAR";
hdl_task SetSiiDmuWRACKPAR(reg value) "tb_top.SetSiiDmuWRACKPAR";
hdl_task RelSiiDmuWRACKPAR() "tb_top.RelSiiDmuWRACKPAR";
#ifdef N2_IOS
    hdl_task assert_mdint(bit[2:0] id) "tb_top.assert_mdint";
    hdl_task deassert_mdint(bit[2:0] id) "tb_top.deassert_mdint";
    hdl_task check_mdint_status(bit[2:0] id, var bit status) "tb_top.check_mdint_status";
#endif
