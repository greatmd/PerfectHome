// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ncu_dmu_sample.vrhpal
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
sample ncu_dmu_intf_size_sample (ncu_dmu_size)
{
	   state SIZE0		( 3'b011 ); 
}
sample ncu_dmu_intf_type_sample (ncu_dmu_type)
{
           state READ_REQ  	( 4'b0100 );
           state WRITE_REQ  	( 4'b0101 );
}
sample ncu_dmu_intf_type_trans (ncu_dmu_type)
{
           state READ_REQ  	( 4'b0100 );
           state WRITE_REQ  	( 4'b0101 );


	  trans TYPE_TRAN00 ("READ_REQ" -> "READ_REQ");
	  trans TYPE_TRAN01 ("READ_REQ" -> "WRITE_REQ");

	  trans TYPE_TRAN10 ("WRITE_REQ" -> "READ_REQ");
	  trans TYPE_TRAN11 ("WRITE_REQ" -> "WRITE_REQ");
}

sample ncu_dmu_intf_bufid_sample (ncu_dmu_bufid)
{
          state BUFFID_0  	(0);
          //state BUFFID_1  	(1); // need tcu to do csr rw via JTAG
}

sample ncu_dmu_intf_cpuid_sample (ncu_dmu_cpuid)
{
           m_state CPUID  	( 0:63 ) ;
}

sample ncu_dmu_intf_b2b_sample (ncu_dmu_b2b)
{
           m_state B2B  	( 2:5 ) ;
}

sample ncu_dmu_intf_stall_b2b_sample (dmu_ncu_stall_b2b)
{
           m_state STALL	( 1:30 ) ;
}

cross ncu_dmu_intf_id_type_cross (ncu_dmu_intf_cpuid_sample, ncu_dmu_intf_type_sample);

sample ncu_dmu_intf_pkt_gap (ncu_dmu_pkt_gap)
{
           m_state PKT_GAP      ( 1:10 ) ;
}

