// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: siu_dmu_out_sample.vrhpal
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#inc "siu_cov_inc.pal";

#ifndef SIU_INTF_COV
sample siu_dmu_out_sample_this (sio_dmu_this_cmd)
{
  state RDD		( 6'b10_1010 );

  cov_weight = 0;
}

. $j = 5;
. for ($i=0; $i<20; $i++)
. {
    sample siu_dmu_out_sample_${i}_clk_last (sio_dmu_last_cmd) 
    {
      state RDD_last	( 6'b10_1010 ) if (sio_dmu_back_to_back==${j});

      cov_weight = 0;
.     $j++;
    }
. }

. for ($i=0; $i<20; $i++)
. {
    cross dmusiu_intf_outb_cmd_${i}_clk_cross (siu_dmu_out_sample_${i}_clk_last, siu_dmu_out_sample_this)
    {
      cov_weight = 1;
    }
.}

// make sure all bits of the dmc tag field are toggled.
sample dmusiu_intf_dmuid_out_sample ( dmu_id_out[15:0] ) 
{
. &toggle( 16 );

  cov_weight = 1;
}

#else
// FC
sample siu_dmu_out_sample_this (sio_dmu_this_cmd)
{
  state RDD             ( 6'b10_1010 );

  cov_weight = 1;
}

. $j = 5;
. for ($i=0; $i<6; $i++)
. {
    sample siu_dmu_out_sample_${i}_clk_last (sio_dmu_last_cmd)
    {
      state RDD_last    ( 6'b10_1010 ) if (sio_dmu_back_to_back==${j});

      cov_weight = 0;
.     $j++;
    }
. }

. for ($i=0; $i<6; $i++)
. {
    cross dmusiu_intf_outb_cmd_${i}_clk_cross (siu_dmu_out_sample_${i}_clk_last, siu_dmu_out_sample_this)
    {
      cov_weight = 1;
    }
.}

// make sure all bits of the dmc tag field are toggled.
sample dmusiu_intf_dmuid_out_sample ( dmu_id_out[15:0] )
{
. &toggle( 16 );

  cov_weight = 1;
}
#endif
