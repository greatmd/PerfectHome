// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: siu_niu_sii_slidingwindow_sample.vrhpal
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#inc "siu_cov_inc.pal";

#define RDDno 8'b1_0010_100
#define RDDnb 8'b1_0010_101
#define WRIno 8'b1_0000_100
#define WRInb 8'b1_0000_100
#define WRIpo 8'b1_0100_100
#define WRIpb 8'b1_0100_101

sample siu_niu_cmd_sample ({curr_niu_req, curr_niu_cmd})
{
. for ($b=1; $b<11; $b++)
. {
  wildcard trans t_RDDno_RDDno_${b} (RDDno -> 8'b0xxxxxxx[.$b.] -> RDDno);
  wildcard trans t_RDDno_RDDnb_${b} (RDDno -> 8'b0xxxxxxx[.$b.] -> RDDnb);
  wildcard trans t_RDDno_WRIno_${b} (RDDno -> 8'b0xxxxxxx[.$b.] -> WRIno);
  wildcard trans t_RDDno_WRInb_${b} (RDDno -> 8'b0xxxxxxx[.$b.] -> WRInb);
  wildcard trans t_RDDno_WRIpo_${b} (RDDno -> 8'b0xxxxxxx[.$b.] -> WRIpo);
  wildcard trans t_RDDno_WRIpb_${b} (RDDno -> 8'b0xxxxxxx[.$b.] -> WRIpb);

  wildcard trans t_RDDnb_RDDno_${b} (RDDnb -> 8'b0xxxxxxx[.$b.] -> RDDno);
  wildcard trans t_RDDnb_RDDnb_${b} (RDDnb -> 8'b0xxxxxxx[.$b.] -> RDDnb);
  wildcard trans t_RDDnb_WRIno_${b} (RDDnb -> 8'b0xxxxxxx[.$b.] -> WRIno);
  wildcard trans t_RDDnb_WRInb_${b} (RDDnb -> 8'b0xxxxxxx[.$b.] -> WRInb);
  wildcard trans t_RDDnb_WRIpo_${b} (RDDnb -> 8'b0xxxxxxx[.$b.] -> WRIpo);
  wildcard trans t_RDDnb_WRIpb_${b} (RDDnb -> 8'b0xxxxxxx[.$b.] -> WRIpb);

. }


. for ($b = 4; $b < 11; $b++)
. {
  wildcard trans t_WRIno_RDDno_${b} (WRIno -> 8'b0xxxxxxx[.$b.] -> RDDno);
  wildcard trans t_WRIno_RDDnb_${b} (WRIno -> 8'b0xxxxxxx[.$b.] -> RDDnb);
  wildcard trans t_WRIno_WRIno_${b} (WRIno -> 8'b0xxxxxxx[.$b.] -> WRIno);
  wildcard trans t_WRIno_WRInb_${b} (WRIno -> 8'b0xxxxxxx[.$b.] -> WRInb);
  wildcard trans t_WRIno_WRIpo_${b} (WRIno -> 8'b0xxxxxxx[.$b.] -> WRIpo);
  wildcard trans t_WRIno_WRIpb_${b} (WRIno -> 8'b0xxxxxxx[.$b.] -> WRIpb);

  wildcard trans t_WRInb_RDDno_${b} (WRInb -> 8'b0xxxxxxx[.$b.] -> RDDno);
  wildcard trans t_WRInb_RDDnb_${b} (WRInb -> 8'b0xxxxxxx[.$b.] -> RDDnb);
  wildcard trans t_WRInb_WRIno_${b} (WRInb -> 8'b0xxxxxxx[.$b.] -> WRIno);
  wildcard trans t_WRInb_WRInb_${b} (WRInb -> 8'b0xxxxxxx[.$b.] -> WRInb);
  wildcard trans t_WRInb_WRIpo_${b} (WRInb -> 8'b0xxxxxxx[.$b.] -> WRIpo);
  wildcard trans t_WRInb_WRIpb_${b} (WRInb -> 8'b0xxxxxxx[.$b.] -> WRIpb);

  wildcard trans t_WRIpo_RDDno_${b} (WRIpo -> 8'b0xxxxxxx[.$b.] -> RDDno);
  wildcard trans t_WRIpo_RDDnb_${b} (WRIpo -> 8'b0xxxxxxx[.$b.] -> RDDnb);
  wildcard trans t_WRIpo_WRIno_${b} (WRIpo -> 8'b0xxxxxxx[.$b.] -> WRIno);
  wildcard trans t_WRIpo_WRInb_${b} (WRIpo -> 8'b0xxxxxxx[.$b.] -> WRInb);
  wildcard trans t_WRIpo_WRIpo_${b} (WRIpo -> 8'b0xxxxxxx[.$b.] -> WRIpo);
  wildcard trans t_WRIpo_WRIpb_${b} (WRIpo -> 8'b0xxxxxxx[.$b.] -> WRIpb);

  wildcard trans t_WRIpb_RDDno_${b} (WRIpb -> 8'b0xxxxxxx[.$b.] -> RDDno);
  wildcard trans t_WRIpb_RDDnb_${b} (WRIpb -> 8'b0xxxxxxx[.$b.] -> RDDnb);
  wildcard trans t_WRIpb_WRIno_${b} (WRIpb -> 8'b0xxxxxxx[.$b.] -> WRIno);
  wildcard trans t_WRIpb_WRInb_${b} (WRIpb -> 8'b0xxxxxxx[.$b.] -> WRInb);
  wildcard trans t_WRIpb_WRIpo_${b} (WRIpb -> 8'b0xxxxxxx[.$b.] -> WRIpo);
  wildcard trans t_WRIpb_WRIpb_${b} (WRIpb -> 8'b0xxxxxxx[.$b.] -> WRIpb);

. }


}

