// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: siu_niucmd_sample.vrhpal
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#inc "siu_cov_inc.pal";

#ifndef SIU_INTF_COV
sample siu_niucmd_sample_this (this_niu_cmd)
{
           state RDD_ord    	( 7'b0010_100 );
           state RDD_byp        ( 7'b0010_101 );
           state WRI_npt_ord    ( 7'b0000_100 );
           state WRI_npt_byp    ( 7'b0000_101 );
           state WRI_pst_ord    ( 7'b0100_100 );
           state WRI_pst_byp    ( 7'b0100_101 );

           cov_weight = 0;
}

. $j = 5;
. for ($i=1; $i<11; $i++)
. {
    sample siu_niucmd_sample_${i}_clk_last (last_niu_cmd)
    {
      state RDD_ord_last_${i}_clk        ( 7'b0010_100 ) if (niu_back_to_back == ${i});
      state RDD_byp_last_${i}_clk        ( 7'b0010_101 ) if (niu_back_to_back == ${i});
      state WRI_npt_ord_last_${i}_clk    ( 7'b0000_100 ) if (niu_back_to_back == ${j});
      state WRI_npt_byp_last_${i}_clk    ( 7'b0000_101 ) if (niu_back_to_back == ${j});
      state WRI_pst_ord_last_${i}_clk    ( 7'b0100_100 ) if (niu_back_to_back == ${j});
      state WRI_pst_byp_last_${i}_clk    ( 7'b0100_101 ) if (niu_back_to_back == ${j});
.     $j++;
      cov_weight = 0;
    }
.}

. for ($i=1; $i<11; $i++)
. {
    cross niusiu_intf_inb_cmd_${i}_clk_cross (siu_niucmd_sample_${i}_clk_last, siu_niucmd_sample_this)
    {
      cov_weight = 1;
    }
.}


// make sure all bits of the dmc tag field are toggled.
sample niusiu_intf_inb_id_sample ( niu_id[15:0] ) 
{
. &toggle( 16 );

  cov_weight = 1;
}
#else
// FC
sample siu_niucmd_sample_this (this_niu_cmd)
{
           state RDD_byp        ( 7'b0010_101 );
           state WRI_npt_ord    ( 7'b0000_100 );
           state WRI_pst_byp    ( 7'b0100_101 );

           cov_weight = 1;
}

. $j = 5;
. for ($i=1; $i<6; $i++)
. {
    sample siu_niucmd_sample_${i}_clk_last (last_niu_cmd)
    {
      state RDD_byp_last_${i}_clk        ( 7'b0010_101 ) if (niu_back_to_back == ${i});
      state WRI_npt_ord_last_${i}_clk    ( 7'b0000_100 ) if (niu_back_to_back == ${j});
      state WRI_pst_byp_last_${i}_clk    ( 7'b0100_101 ) if (niu_back_to_back == ${j});
.     $j++;
      cov_weight = 0;
    }
.}

. for ($i=1; $i<6; $i++)
. {
    cross niusiu_intf_inb_cmd_${i}_clk_cross (siu_niucmd_sample_${i}_clk_last, siu_niucmd_sample_this)
    {
      cov_weight = 1;
    }
.}

// make sure all bits of the dmc tag field are toggled.
sample niusiu_intf_inb_id_sample ( niu_id[15:0] )
{
. &toggle( 16 );

  cov_weight = 1;
}

#endif
