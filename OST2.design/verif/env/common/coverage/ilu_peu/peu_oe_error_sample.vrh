// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: peu_oe_error_sample.vrh
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
	  sample peu_oe_eip ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[0],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[32] })  
		{  
 		  state peu_oe_eip_s10 (2'b10);  
 		  state peu_oe_eip_s11 (2'b11);  
 		  state peu_oe_eip_s01 (2'b01);  
 		  trans peu_oe_eip_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_erp ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[1],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[33] })  
		{  
 		  state peu_oe_erp_s10 (2'b10);  
 		  state peu_oe_erp_s11 (2'b11);  
 		  state peu_oe_erp_s01 (2'b01);  
 		  trans peu_oe_erp_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_epe ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[2],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[34] })  
		{  
 		  state peu_oe_epe_s10 (2'b10);  
 		  state peu_oe_epe_s11 (2'b11);  
 		  state peu_oe_epe_s01 (2'b01);  
 		  trans peu_oe_epe_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_emp ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[3],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[35] })  
		{  
 		  state peu_oe_emp_s10 (2'b10);  
 		  state peu_oe_emp_s11 (2'b11);  
 		  state peu_oe_emp_s01 (2'b01);  
 		  trans peu_oe_emp_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_ero ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[4],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[36] })  
		{  
 		  state peu_oe_ero_s10 (2'b10);  
 		  state peu_oe_ero_s11 (2'b11);  
 		  state peu_oe_ero_s01 (2'b01);  
 		  trans peu_oe_ero_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_eru ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[5],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[37] })  
		{  
 		  state peu_oe_eru_s10 (2'b10);  
 		  state peu_oe_eru_s11 (2'b11);  
 		  state peu_oe_eru_s01 (2'b01);  
 		  trans peu_oe_eru_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_lup ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[8],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[40] })  
		{  
 		  state peu_oe_lup_s10 (2'b10);  
 		  state peu_oe_lup_s11 (2'b11);  
 		  state peu_oe_lup_s01 (2'b01);  
 		  trans peu_oe_lup_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_ldn ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[9],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[41] })  
		{  
 		  state peu_oe_ldn_s10 (2'b10);  
 		  state peu_oe_ldn_s11 (2'b11);  
 		  state peu_oe_ldn_s01 (2'b01);  
 		  trans peu_oe_ldn_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_lrs ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[10],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[42] })  
		{  
 		  state peu_oe_lrs_s10 (2'b10);  
 		  state peu_oe_lrs_s11 (2'b11);  
 		  state peu_oe_lrs_s01 (2'b01);  
 		  trans peu_oe_lrs_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_lin ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[11],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[43] })  
		{  
 		  state peu_oe_lin_s10 (2'b10);  
 		  state peu_oe_lin_s11 (2'b11);  
 		  state peu_oe_lin_s01 (2'b01);  
 		  trans peu_oe_lin_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_ehp ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[12],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[44] })  
		{  
 		  state peu_oe_ehp_s10 (2'b10);  
 		  state peu_oe_ehp_s11 (2'b11);  
 		  state peu_oe_ehp_s01 (2'b01);  
 		  trans peu_oe_ehp_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_edp ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[13],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[45] })  
		{  
 		  state peu_oe_edp_s10 (2'b10);  
 		  state peu_oe_edp_s11 (2'b11);  
 		  state peu_oe_edp_s01 (2'b01);  
 		  trans peu_oe_edp_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_hp ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[14],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[46] })  
		{  
 		  state peu_oe_hp_s10 (2'b10);  
 		  state peu_oe_hp_s11 (2'b11);  
 		  state peu_oe_hp_s01 (2'b01);  
 		  trans peu_oe_hp_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_crs ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[15],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[47] })  
		{  
 		  state peu_oe_crs_s10 (2'b10);  
 		  state peu_oe_crs_s11 (2'b11);  
 		  state peu_oe_crs_s01 (2'b01);  
 		  trans peu_oe_crs_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_ruc ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[16],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[48] })  
		{  
 		  state peu_oe_ruc_s10 (2'b10);  
 		  state peu_oe_ruc_s11 (2'b11);  
 		  state peu_oe_ruc_s01 (2'b01);  
 		  trans peu_oe_ruc_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_wuc ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[17],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[49] })  
		{  
 		  state peu_oe_wuc_s10 (2'b10);  
 		  state peu_oe_wuc_s11 (2'b11);  
 		  state peu_oe_wuc_s01 (2'b01);  
 		  trans peu_oe_wuc_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_mrc ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[18],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[50] })  
		{  
 		  state peu_oe_mrc_s10 (2'b10);  
 		  state peu_oe_mrc_s11 (2'b11);  
 		  state peu_oe_mrc_s01 (2'b01);  
 		  trans peu_oe_mrc_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_lwc ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[19],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[51] })  
		{  
 		  state peu_oe_lwc_s10 (2'b10);  
 		  state peu_oe_lwc_s11 (2'b11);  
 		  state peu_oe_lwc_s01 (2'b01);  
 		  trans peu_oe_lwc_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_nfp ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[20],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[52] })  
		{  
 		  state peu_oe_nfp_s10 (2'b10);  
 		  state peu_oe_nfp_s11 (2'b11);  
 		  state peu_oe_nfp_s01 (2'b01);  
 		  trans peu_oe_nfp_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_cto ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[21],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[53] })  
		{  
 		  state peu_oe_cto_s10 (2'b10);  
 		  state peu_oe_cto_s11 (2'b11);  
 		  state peu_oe_cto_s01 (2'b01);  
 		  trans peu_oe_cto_t10_to_t11 ("s10" -> "s11"); 
 		} 
 	  sample peu_oe_mfc ( { peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[22],  
	         peu_registers_coverage_ifc.peu_oe_err_csrbus_read_data[54] })  
		{  
 		  state peu_oe_mfc_s10 (2'b10);  
 		  state peu_oe_mfc_s11 (2'b11);  
 		  state peu_oe_mfc_s01 (2'b01);  
 		  trans peu_oe_mfc_t10_to_t11 ("s10" -> "s11"); 
 		} 
 
