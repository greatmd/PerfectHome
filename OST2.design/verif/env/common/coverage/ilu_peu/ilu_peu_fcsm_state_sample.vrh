// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ilu_peu_fcsm_state_sample.vrh
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#define   IDLE                  4'h0
#define   FC1_P                 4'h1
#define   FC1_NP                4'h2
#define   FC1_CPL               4'h3
#define   FC2_P                 4'h4
#define   FC2_NP                4'h5
#define   FC2_CPL               4'h6


sample ilu_peu_coverage_fcsm_state_coverage_group.fc_state 

{
        state s_IDLE                (IDLE);
        state s_FC1_P               (FC1_P);
        state s_FC1_NP              (FC1_NP);
        state s_FC1_CPL             (FC1_CPL);
        state s_FC2_P               (FC2_P);
        state s_FC2_NP              (FC2_NP);
        state s_FC2_CPL             (FC2_CPL);

        trans    t_IDLE_FC1_P_01         (IDLE      ->  FC1_P);
        trans    t_FC1_P_FC1_NP_02       (FC1_P     ->  FC1_NP);
//        trans    t_FC1_P_FC1_P_03        (FC1_P     ->  FC1_P);
        trans    t_FC1_NP_FC1_CPL_04     (FC1_NP    ->  FC1_CPL);
//        trans    t_FC1_NP_FC1_NP_05      (FC1_NP    ->  FC1_NP);
        trans    t_FC1_CPL_FC2_P_06      (FC1_CPL   ->  FC2_P);
        trans    t_FC1_CPL_FC1_P_07      (FC1_CPL   ->  FC1_P);
//        trans    t_FC1_CPL_FC2_CPL_08    (FC1_CPL   ->  FC2_CPL);
        trans    t_FC2_P_FC2_NP_09       (FC2_P     ->  FC2_NP);
//        trans    t_FC2_P_FC2_P_10        (FC2_P     ->  FC2_P);
        trans    t_FC2_NP_FC2_CPL_11     (FC2_NP    ->  FC2_CPL);
//        trans    t_FC2_NP_FC2_NP_12      (FC2_NP    ->  FC2_NP);
        trans    t_FC2_CPL_IDLE_13       (FC2_CPL   ->  IDLE);
        trans    t_FC2_CPL_FC2_P_14      (FC2_CPL   ->  FC2_P);
//        trans    t_FC2_CPL_FC2_CPL_15    (FC2_CPL   ->  FC2_CPL);

}
