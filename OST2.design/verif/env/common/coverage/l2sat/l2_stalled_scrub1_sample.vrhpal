// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: l2_stalled_scrub1_sample.vrhpal
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
wildcard trans TagScrub_17({       1'b1, 17'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_16({ 1'bx, 1'b1, 16'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_15({ 2'bx, 1'b1, 15'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_14({ 3'bx, 1'b1, 14'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_13({ 4'bx, 1'b1, 13'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_12({ 5'bx, 1'b1, 12'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_11({ 6'bx, 1'b1, 11'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_10({ 7'bx, 1'b1, 10'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_09({ 8'bx, 1'b1,  9'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_08({ 9'bx, 1'b1,  8'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_07({10'bx, 1'b1,  7'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_06({11'bx, 1'b1,  6'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_05({12'bx, 1'b1,  5'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_04({13'bx, 1'b1,  4'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_03({14'bx, 1'b1,  3'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_02({15'bx, 1'b1,  2'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_01({16'bx, 1'b1,  1'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_00({17'bx, 1'b1,        3'bx} -> {18'bx, 3'b101});

// Data scrub                {1 hot stall bits}
wildcard trans DataScrub_17({       1'b1, 17'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_16({ 1'bx, 1'b1, 16'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_15({ 2'bx, 1'b1, 15'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_14({ 3'bx, 1'b1, 14'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_13({ 4'bx, 1'b1, 13'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_12({ 5'bx, 1'b1, 12'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_11({ 6'bx, 1'b1, 11'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_10({ 7'bx, 1'b1, 10'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_09({ 8'bx, 1'b1,  9'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_08({ 9'bx, 1'b1,  8'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_07({10'bx, 1'b1,  7'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_06({11'bx, 1'b1,  6'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_05({12'bx, 1'b1,  5'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_04({13'bx, 1'b1,  4'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_03({14'bx, 1'b1,  3'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_02({15'bx, 1'b1,  2'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_01({16'bx, 1'b1,  1'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_00({17'bx, 1'b1,        3'bx} -> {18'bx, 3'b111});
