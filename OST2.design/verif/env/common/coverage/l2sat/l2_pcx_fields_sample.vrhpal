// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: l2_pcx_fields_sample.vrhpal
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
wildcard state LOAD_vld_0  ( {1'b1, 1'b0, LOAD_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_nc_0   ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_nc_1   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_0( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h0, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_1( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h1, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_2( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h2, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_3( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h3, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_4( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h4, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_5( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h5, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_6( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h6, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_cpuid_7( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h7, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_0  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h0, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_1  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h1, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_2  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h2, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_3  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h3, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_4  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h4, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_5  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h5, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_6  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h6, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_tid_7  ( {1'b1, 1'b1, LOAD_RQ, 1'bx, 3'bx, 3'h7, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state LOAD_l1way_0( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h0, 8'bx, 40'bx} );
wildcard state LOAD_l1way_1( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h1, 8'bx, 40'bx} );
wildcard state LOAD_l1way_2( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h2, 8'bx, 40'bx} );
wildcard state LOAD_l1way_3( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h3, 8'bx, 40'bx} );

// PREFETCH                             vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state PREFETCH_vld_0  ( {1'b1, 1'b0, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_0( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h0, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_1( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h1, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_2( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h2, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_3( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h3, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_4( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h4, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_5( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h5, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_6( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h6, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_cpuid_7( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h7, 3'bx, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_0  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h0, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_1  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h1, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_2  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h2, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_3  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h3, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_4  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h4, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_5  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h5, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_6  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h6, 3'b010, 2'bx, 8'bx, 40'bx} );
wildcard state PREFETCH_tid_7  ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h7, 3'b010, 2'bx, 8'bx, 40'bx} );

// DIAG_LOAD                              vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state DIAG_LOAD_vld_0   ( {1'b1, 1'b0, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_0 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h0, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_1 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h1, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_2 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h2, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_3 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h3, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_4 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h4, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_5 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h5, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_6 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h6, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_cpuid_7 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'h7, 3'bx, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_0   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h0, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_1   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h1, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_2   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h2, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_3   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h3, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_4   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h4, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_5   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h5, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_6   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h6, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_tid_7   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'h7, 3'b000, 2'bx, 8'bx, 3'h5, 37'bx} );
wildcard state DIAG_LOAD_addr_a0 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha0, 32'bx} );
wildcard state DIAG_LOAD_addr_a1 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha1, 32'bx} );
wildcard state DIAG_LOAD_addr_a2 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha2, 32'bx} );
wildcard state DIAG_LOAD_addr_a3 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha3, 32'bx} );
wildcard state DIAG_LOAD_addr_a4 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha4, 32'bx} );
wildcard state DIAG_LOAD_addr_a5 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha5, 32'bx} );
wildcard state DIAG_LOAD_addr_a6 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha6, 32'bx} );
wildcard state DIAG_LOAD_addr_a7 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha7, 32'bx} );
wildcard state DIAG_LOAD_addr_a8 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha8, 32'bx} );
wildcard state DIAG_LOAD_addr_a9 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'ha9, 32'bx} );
wildcard state DIAG_LOAD_addr_aa ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'haa, 32'bx} );
wildcard state DIAG_LOAD_addr_ab ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hab, 32'bx} );
wildcard state DIAG_LOAD_addr_ac ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hac, 32'bx} );
wildcard state DIAG_LOAD_addr_ad ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'had, 32'bx} );
wildcard state DIAG_LOAD_addr_ae ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hae, 32'bx} );
wildcard state DIAG_LOAD_addr_af ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'haf, 32'bx} );
wildcard state DIAG_LOAD_addr_b0 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb0, 32'bx} );
wildcard state DIAG_LOAD_addr_b1 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb1, 32'bx} );
wildcard state DIAG_LOAD_addr_b2 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb2, 32'bx} );
wildcard state DIAG_LOAD_addr_b3 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb3, 32'bx} );
wildcard state DIAG_LOAD_addr_b4 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb4, 32'bx} );
wildcard state DIAG_LOAD_addr_b5 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb5, 32'bx} );
wildcard state DIAG_LOAD_addr_b6 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb6, 32'bx} );
wildcard state DIAG_LOAD_addr_b7 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb7, 32'bx} );
wildcard state DIAG_LOAD_addr_b8 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb8, 32'bx} );
wildcard state DIAG_LOAD_addr_b9 ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hb9, 32'bx} );
wildcard state DIAG_LOAD_addr_ba ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hba, 32'bx} );
wildcard state DIAG_LOAD_addr_bb ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hbb, 32'bx} );
wildcard state DIAG_LOAD_addr_bc ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hbc, 32'bx} );
wildcard state DIAG_LOAD_addr_bd ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hbd, 32'bx} );
wildcard state DIAG_LOAD_addr_be ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hbe, 32'bx} );
wildcard state DIAG_LOAD_addr_bf ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'hbf, 32'bx} );
//                                        vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state DIAG_LOAD_way_0   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h0,18'bx} );
wildcard state DIAG_LOAD_way_1   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h1,18'bx} );
wildcard state DIAG_LOAD_way_2   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h2,18'bx} );
wildcard state DIAG_LOAD_way_3   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h3,18'bx} );
wildcard state DIAG_LOAD_way_4   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h4,18'bx} );
wildcard state DIAG_LOAD_way_5   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h5,18'bx} );
wildcard state DIAG_LOAD_way_6   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h6,18'bx} );
wildcard state DIAG_LOAD_way_7   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h7,18'bx} );
wildcard state DIAG_LOAD_way_8   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h8,18'bx} );
wildcard state DIAG_LOAD_way_9   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'h9,18'bx} );
wildcard state DIAG_LOAD_way_a   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'ha,18'bx} );
wildcard state DIAG_LOAD_way_b   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'hb,18'bx} );
wildcard state DIAG_LOAD_way_c   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'hc,18'bx} );
wildcard state DIAG_LOAD_way_d   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'hd,18'bx} );
wildcard state DIAG_LOAD_way_e   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'he,18'bx} );
wildcard state DIAG_LOAD_way_f   ( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x0xxx,10'bx,4'hf,18'bx} );
wildcard state DIAG_LOAD_addr52_0( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b000,3'bx} );
wildcard state DIAG_LOAD_addr52_1( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b000,3'bx} );
wildcard state DIAG_LOAD_addr52_2( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b001,3'bx} );
wildcard state DIAG_LOAD_addr52_3( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b001,3'bx} );
wildcard state DIAG_LOAD_addr52_4( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b010,3'bx} );
wildcard state DIAG_LOAD_addr52_5( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b010,3'bx} );
wildcard state DIAG_LOAD_addr52_6( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b011,3'bx} );
wildcard state DIAG_LOAD_addr52_7( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b011,3'bx} );
wildcard state DIAG_LOAD_addr52_8( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b100,3'bx} );
wildcard state DIAG_LOAD_addr52_9( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b100,3'bx} );
wildcard state DIAG_LOAD_addr52_a( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b101,3'bx} );
wildcard state DIAG_LOAD_addr52_b( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b101,3'bx} );
wildcard state DIAG_LOAD_addr52_c( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b110,3'bx} );
wildcard state DIAG_LOAD_addr52_d( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b110,3'bx} );
wildcard state DIAG_LOAD_addr52_e( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b111,3'bx} );
wildcard state DIAG_LOAD_addr52_f( {1'b1, 1'b1, LOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b111,3'bx} );

// DCACHE_INV                             vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state DCACHE_INV_vld_0  ( {1'b1, 1'b0, LOAD_RQ, 1'b0, 3'bx, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_0( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h0, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_1( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h1, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_2( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h2, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_3( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h3, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_4( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h4, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_5( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h5, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_6( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h6, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_cpuid_7( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'h7, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_0  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h0, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_1  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h1, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_2  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h2, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_3  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h3, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_4  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h4, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_5  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h5, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_6  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h6, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state DCACHE_INV_tid_7  ( {1'b1, 1'b1, LOAD_RQ, 1'b0, 3'bx, 3'h7, 3'b100, 2'bx, 8'bx, 40'bx} );

// IMISS                             vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state IMISS_vld_0  ( {1'b1, 1'b0, IMISS_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_nc_0   ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_nc_1   ( {1'b1, 1'b1, IMISS_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_0( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h0, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_1( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h1, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_2( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h2, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_3( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h3, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_4( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h4, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_5( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h5, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_6( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h6, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_cpuid_7( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h7, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_0  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h0, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_1  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h1, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_2  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h2, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_3  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h3, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_4  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h4, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_5  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h5, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_6  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h6, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_tid_7  ( {1'b1, 1'b1, IMISS_RQ, 1'bx, 3'bx, 3'h7, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state IMISS_l1way_0( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h0, 8'bx, 40'bx} );
wildcard state IMISS_l1way_1( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h1, 8'bx, 40'bx} );
wildcard state IMISS_l1way_2( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h2, 8'bx, 40'bx} );
wildcard state IMISS_l1way_3( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b000, 2'h3, 8'bx, 40'bx} );
wildcard state IMISS_l1way_4( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b001, 2'h0, 8'bx, 40'bx} );
wildcard state IMISS_l1way_5( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b001, 2'h1, 8'bx, 40'bx} );
wildcard state IMISS_l1way_6( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b001, 2'h2, 8'bx, 40'bx} );
wildcard state IMISS_l1way_7( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b001, 2'h3, 8'bx, 40'bx} );

// ICACHE_INV                             vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state ICACHE_INV_vld_0  ( {1'b1, 1'b0, IMISS_RQ, 1'b0, 3'bx, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_0( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h0, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_1( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h1, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_2( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h2, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_3( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h3, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_4( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h4, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_5( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h5, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_6( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h6, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_cpuid_7( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'h7, 3'bx, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_0  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h0, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_1  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h1, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_2  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h2, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_3  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h3, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_4  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h4, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_5  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h5, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_6  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h6, 3'b100, 2'bx, 8'bx, 40'bx} );
wildcard state ICACHE_INV_tid_7  ( {1'b1, 1'b1, IMISS_RQ, 1'b0, 3'bx, 3'h7, 3'b100, 2'bx, 8'bx, 40'bx} );

// STORE                             vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state STORE_vld_0  ( {1'b1, 1'b0, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_0( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h0, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_1( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h1, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_2( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h2, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_3( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h3, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_4( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h4, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_5( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h5, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_6( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h6, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_cpuid_7( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h7, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_0  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h0, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_1  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h1, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_2  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h2, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_3  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h3, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_4  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h4, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_5  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h5, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_6  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h6, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_tid_7  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h7, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state STORE_8B_0   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hff, 37'bx, 3'bxxx} );
wildcard state STORE_4B_0   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h0f, 37'bx, 3'bxxx} );
wildcard state STORE_4B_4   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hf0, 37'bx, 3'bxxx} );
wildcard state STORE_2B_0   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h03, 37'bx, 3'bxxx} );
wildcard state STORE_2B_2   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h0c, 37'bx, 3'bxxx} );
wildcard state STORE_2B_4   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h30, 37'bx, 3'bxxx} );
wildcard state STORE_2B_6   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hc0, 37'bx, 3'bxxx} );
wildcard state STORE_1B_0   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h01, 37'bx, 3'bxxx} );
wildcard state STORE_1B_1   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h02, 37'bx, 3'bxxx} );
wildcard state STORE_1B_2   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h04, 37'bx, 3'bxxx} );
wildcard state STORE_1B_3   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h08, 37'bx, 3'bxxx} );
wildcard state STORE_1B_4   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h10, 37'bx, 3'bxxx} );
wildcard state STORE_1B_5   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h20, 37'bx, 3'bxxx} );
wildcard state STORE_1B_6   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h40, 37'bx, 3'bxxx} );
wildcard state STORE_1B_7   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'h80, 37'bx, 3'bxxx} );
//review augment with all other valid STORE cases (size,alignment)?

// BLKSTORE                             vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state BLKSTORE_vld_0  ( {1'b1, 1'b0, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_0( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h0, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_1( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h1, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_2( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h2, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_3( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h3, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_4( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h4, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_5( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h5, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_6( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h6, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_cpuid_7( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h7, 3'bx, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_0  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h0, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_1  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h1, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_2  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h2, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_3  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h3, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_4  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h4, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_5  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h5, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_6  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h6, 3'b011, 2'bx, 8'hx, 40'bx} );
wildcard state BLKSTORE_tid_7  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h7, 3'b011, 2'bx, 8'hx, 40'bx} );
// review BLKSTORE not valid anymore?

// BLKINITST                             vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state BLKINITST_vld_0  ( {1'b1, 1'b0, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_0( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h0, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_1( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h1, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_2( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h2, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_3( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h3, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_4( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h4, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_5( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h5, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_6( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h6, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_cpuid_7( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h7, 3'bx, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_0  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h0, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_1  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h1, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_2  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h2, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_3  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h3, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_4  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h4, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_5  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h5, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_6  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h6, 3'b001, 2'bx, 8'hx, 40'bx} );
wildcard state BLKINITST_tid_7  ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h7, 3'b001, 2'bx, 8'hx, 40'bx} );

// DIAG_STORE                              vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state DIAG_STORE_vld_0   ( {1'b1, 1'b0, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_0 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h0, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_1 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h1, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_2 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h2, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_3 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h3, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_4 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h4, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_5 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h5, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_6 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h6, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_cpuid_7 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'h7, 3'bx, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_0   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h0, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_1   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h1, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_2   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h2, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_3   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h3, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_4   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h4, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_5   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h5, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_6   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h6, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_tid_7   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'h7, 3'b000, 2'bx, 8'hx, 3'h5, 37'bx} );
wildcard state DIAG_STORE_addr_a0 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha0, 32'bx} );
wildcard state DIAG_STORE_addr_a1 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha1, 32'bx} );
wildcard state DIAG_STORE_addr_a2 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha2, 32'bx} );
wildcard state DIAG_STORE_addr_a3 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha3, 32'bx} );
wildcard state DIAG_STORE_addr_a4 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha4, 32'bx} );
wildcard state DIAG_STORE_addr_a5 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha5, 32'bx} );
wildcard state DIAG_STORE_addr_a6 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha6, 32'bx} );
wildcard state DIAG_STORE_addr_a7 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha7, 32'bx} );
wildcard state DIAG_STORE_addr_a8 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha8, 32'bx} );
wildcard state DIAG_STORE_addr_a9 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'ha9, 32'bx} );
wildcard state DIAG_STORE_addr_aa ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'haa, 32'bx} );
wildcard state DIAG_STORE_addr_ab ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hab, 32'bx} );
wildcard state DIAG_STORE_addr_ac ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hac, 32'bx} );
wildcard state DIAG_STORE_addr_ad ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'had, 32'bx} );
wildcard state DIAG_STORE_addr_ae ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hae, 32'bx} );
wildcard state DIAG_STORE_addr_af ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'haf, 32'bx} );
wildcard state DIAG_STORE_addr_b0 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb0, 32'bx} );
wildcard state DIAG_STORE_addr_b1 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb1, 32'bx} );
wildcard state DIAG_STORE_addr_b2 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb2, 32'bx} );
wildcard state DIAG_STORE_addr_b3 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb3, 32'bx} );
wildcard state DIAG_STORE_addr_b4 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb4, 32'bx} );
wildcard state DIAG_STORE_addr_b5 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb5, 32'bx} );
wildcard state DIAG_STORE_addr_b6 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb6, 32'bx} );
wildcard state DIAG_STORE_addr_b7 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb7, 32'bx} );
wildcard state DIAG_STORE_addr_b8 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb8, 32'bx} );
wildcard state DIAG_STORE_addr_b9 ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hb9, 32'bx} );
wildcard state DIAG_STORE_addr_ba ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hba, 32'bx} );
wildcard state DIAG_STORE_addr_bb ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hbb, 32'bx} );
wildcard state DIAG_STORE_addr_bc ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hbc, 32'bx} );
wildcard state DIAG_STORE_addr_bd ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hbd, 32'bx} );
wildcard state DIAG_STORE_addr_be ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hbe, 32'bx} );
wildcard state DIAG_STORE_addr_bf ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'hbf, 32'bx} );
//                                         vld   reqtype   nc    cpu   thr   bits    l1way size  addr
wildcard state DIAG_STORE_way_0   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h0,18'bx} );
wildcard state DIAG_STORE_way_1   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h1,18'bx} );
wildcard state DIAG_STORE_way_2   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h2,18'bx} );
wildcard state DIAG_STORE_way_3   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h3,18'bx} );
wildcard state DIAG_STORE_way_4   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h4,18'bx} );
wildcard state DIAG_STORE_way_5   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h5,18'bx} );
wildcard state DIAG_STORE_way_6   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h6,18'bx} );
wildcard state DIAG_STORE_way_7   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h7,18'bx} );
wildcard state DIAG_STORE_way_8   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h8,18'bx} );
wildcard state DIAG_STORE_way_9   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'h9,18'bx} );
wildcard state DIAG_STORE_way_a   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'ha,18'bx} );
wildcard state DIAG_STORE_way_b   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'hb,18'bx} );
wildcard state DIAG_STORE_way_c   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'hc,18'bx} );
wildcard state DIAG_STORE_way_d   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'hd,18'bx} );
wildcard state DIAG_STORE_way_e   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'he,18'bx} );
wildcard state DIAG_STORE_way_f   ( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x0xxx,10'bx,4'hf,18'bx} );
wildcard state DIAG_STORE_addr52_0( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b000,3'bx} );
wildcard state DIAG_STORE_addr52_1( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b000,3'bx} );
wildcard state DIAG_STORE_addr52_2( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b001,3'bx} );
wildcard state DIAG_STORE_addr52_3( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b001,3'bx} );
wildcard state DIAG_STORE_addr52_4( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b010,3'bx} );
wildcard state DIAG_STORE_addr52_5( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b010,3'bx} );
wildcard state DIAG_STORE_addr52_6( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b011,3'bx} );
wildcard state DIAG_STORE_addr52_7( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b011,3'bx} );
wildcard state DIAG_STORE_addr52_8( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b100,3'bx} );
wildcard state DIAG_STORE_addr52_9( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b100,3'bx} );
wildcard state DIAG_STORE_addr52_a( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b101,3'bx} );
wildcard state DIAG_STORE_addr52_b( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b101,3'bx} );
wildcard state DIAG_STORE_addr52_c( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b110,3'bx} );
wildcard state DIAG_STORE_addr52_d( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b110,3'bx} );
wildcard state DIAG_STORE_addr52_e( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b0,16'bx,3'b111,3'bx} );
wildcard state DIAG_STORE_addr52_f( {1'b1, 1'b1, STORE_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bx, 8'hx, 8'b101x00xx,9'bx,1'b1,16'bx,3'b111,3'bx} );

// CAS1                             vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state CAS1_vld_0  ( {1'b1, 1'b0, CAS1_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_0( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h0, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_1( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h1, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_2( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h2, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_3( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h3, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_4( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h4, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_5( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h5, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_6( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h6, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_cpuid_7( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'h7, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_0  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h0, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_1  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h1, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_2  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h2, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_3  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h3, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_4  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h4, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_5  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h5, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_6  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h6, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_tid_7  ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'h7, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS1_8B_0   ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'hff, 37'bx, 3'hx} );
wildcard state CAS1_4B_0   ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h0f, 37'bx, 3'hx} );
wildcard state CAS1_4B_4   ( {1'b1, 1'b1, CAS1_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'hf0, 37'bx, 3'hx} );

// CAS2                           vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state CAS2_vld_0( {1'b1, 1'b0, CAS2_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state CAS2_vld_1( {1'b1, 1'b1, CAS2_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );

// SWAP                             vld   reqtype  nc    cpu   thr   bits    l1way size  addr
wildcard state SWAP_vld_0  ( {1'b1, 1'b0, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_0( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h0, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_1( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h1, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_2( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h2, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_3( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h3, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_4( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h4, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_5( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h5, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_6( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h6, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_cpuid_7( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'h7, 3'bx, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_0  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h0, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_1  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h1, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_2  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h2, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_3  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h3, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_4  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h4, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_5  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h5, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_6  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h6, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_tid_7  ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'h7, 3'b000, 2'bx, 8'bx, 40'bx} );
wildcard state SWAP_4B_0   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h0f, 37'bx, 3'bxxx} );
wildcard state SWAP_4B_4   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'hf0, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_0   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h01, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_1   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h02, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_2   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h04, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_3   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h08, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_4   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h10, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_5   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h20, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_6   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h40, 37'bx, 3'bxxx} );
wildcard state SWAP_1B_7   ( {1'b1, 1'b1, SWAP_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'h80, 37'bx, 3'bxxx} );

// STRLOAD                             vld   reqtype     nc    cpu   thr   bits    l1way size    addr
wildcard state STRLOAD_vld_0  ( {1'b1, 1'b0, STRLOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_0( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h0, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_1( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h1, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_2( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h2, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_3( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h3, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_4( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h4, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_5( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h5, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_6( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h6, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_cpuid_7( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'h7, 3'bx, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_0  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h0, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_1  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h1, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_2  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h2, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_3  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h3, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_4  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h4, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_5  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h5, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_6  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h6, 3'b000, 2'bx, 8'bxxx, 40'bx} );
wildcard state STRLOAD_tid_7  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'h7, 3'b000, 2'bx, 8'bxxx, 40'bx} );
//wildcard state STRLOAD_async_0( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'b0xx, 40'bx} );
//wildcard state STRLOAD_async_1( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'b1xx, 40'bx} );
//wildcard state STRLOAD_buf_0  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx0x, 40'bx} );
//wildcard state STRLOAD_buf_1  ( {1'b1, 1'b1, STRLOAD_RQ, 1'b1, 3'bx, 3'bx, 3'b000, 2'bx, 8'bx1x, 40'bx} );
// review?

// STRST                             vld   reqtype   nc    cpu   thr   bits    l1way  size  addr
wildcard state STRST_vld_0  ( {1'b1, 1'b0, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_0( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h0, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_1( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h1, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_2( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h2, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_3( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h3, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_4( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h4, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_5( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h5, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_6( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h6, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_cpuid_7( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'h7, 3'bx, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_0  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h0, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_1  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h1, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_2  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h2, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_3  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h3, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_4  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h4, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_5  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h5, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_6  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h6, 3'b000, 2'bxx, 8'bx, 40'bx} );
wildcard state STRST_tid_7  ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'h7, 3'b000, 2'bxx, 8'bx, 40'bx} );
//wildcard state STRST_async_0( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'b0x, 8'bx, 40'bx} );
//wildcard state STRST_async_1( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'b1x, 8'bx, 40'bx} );
//                                   vld   reqtype   nc    cpu   thr   bits    l1way  size  addr
wildcard state STRST_8B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'hff, 37'bx, 3'bxxx} );
wildcard state STRST_7B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'hfe, 37'bx, 3'bxxx} );
wildcard state STRST_7B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h7f, 37'bx, 3'bxxx} );
wildcard state STRST_6B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'hfc, 37'bx, 3'bxxx} );
wildcard state STRST_6B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h7e, 37'bx, 3'bxxx} );
wildcard state STRST_6B_2   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h3f, 37'bx, 3'bxxx} );
wildcard state STRST_5B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'hf8, 37'bx, 3'bxxx} );
wildcard state STRST_5B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h7c, 37'bx, 3'bxxx} );
wildcard state STRST_5B_2   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h3e, 37'bx, 3'bxxx} );
wildcard state STRST_5B_3   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h1f, 37'bx, 3'bxxx} );
wildcard state STRST_4B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'hf0, 37'bx, 3'bxxx} );
wildcard state STRST_4B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h78, 37'bx, 3'bxxx} );
wildcard state STRST_4B_2   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h3c, 37'bx, 3'bxxx} );
wildcard state STRST_4B_3   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h1e, 37'bx, 3'bxxx} );
wildcard state STRST_4B_4   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h0f, 37'bx, 3'bxxx} );
wildcard state STRST_3B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'he0, 37'bx, 3'bxxx} );
wildcard state STRST_3B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h70, 37'bx, 3'bxxx} );
wildcard state STRST_3B_2   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h38, 37'bx, 3'bxxx} );
wildcard state STRST_3B_3   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h1c, 37'bx, 3'bxxx} );
wildcard state STRST_3B_4   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h0e, 37'bx, 3'bxxx} );
wildcard state STRST_3B_5   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h07, 37'bx, 3'bxxx} );
wildcard state STRST_2B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'hc0, 37'bx, 3'bxxx} );
wildcard state STRST_2B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h60, 37'bx, 3'bxxx} );
wildcard state STRST_2B_2   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h30, 37'bx, 3'bxxx} );
wildcard state STRST_2B_3   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h18, 37'bx, 3'bxxx} );
wildcard state STRST_2B_4   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h0c, 37'bx, 3'bxxx} );
wildcard state STRST_2B_5   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h06, 37'bx, 3'bxxx} );
wildcard state STRST_2B_6   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h03, 37'bx, 3'bxxx} );
wildcard state STRST_1B_0   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h80, 37'bx, 3'bxxx} );
wildcard state STRST_1B_1   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h40, 37'bx, 3'bxxx} );
wildcard state STRST_1B_2   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h20, 37'bx, 3'bxxx} );
wildcard state STRST_1B_3   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h10, 37'bx, 3'bxxx} );
wildcard state STRST_1B_4   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h08, 37'bx, 3'bxxx} );
wildcard state STRST_1B_5   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h04, 37'bx, 3'bxxx} );
wildcard state STRST_1B_6   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h02, 37'bx, 3'bxxx} );
wildcard state STRST_1B_7   ( {1'b1, 1'b1, STRST_RQ, 1'bx, 3'bx, 3'bx, 3'b000, 2'bxx, 8'h01, 37'bx, 3'bxxx} );

// review add prefetchice and mmuld
