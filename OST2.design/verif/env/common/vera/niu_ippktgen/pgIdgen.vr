// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: pgIdgen.vr
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>
#include <ListMacros.vrh>
#define  TIME {get_time(HI), get_time(LO)}

class CpgIdgen {
     bit[15:0] packet_id[4];
   
      task new() {
      integer i,j;
      for(i=0;i<4;i++) {
        packet_id[i] = 0;
      }
     }

     function bit[47:0] getMacSA( integer dma_num,integer mac_id) {
       bit[15:0] id;
       bit[1:0] m;
       bit[5:0] d;
       bit[23:0] r;

       id = packet_id[mac_id]++;
       m = mac_id;
       d = dma_num;
       r = random();
       getMacSA = {r,d,m,id};
     }
}


