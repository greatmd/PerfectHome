// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ccxDevBaseBFM.vrh
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef INC__TMP_CCXDEVBASEBFM_VRH
#define INC__TMP_CCXDEVBASEBFM_VRH

typedef class BasePkt ;

extern virtual class CcxDevBaseBFM {

  protected reg ccxOnly; // only testing ccx
  protected reg [63:0] lineHash[];
  protected integer myPort;
  protected string name;
  protected BasePkt expectedSig [];
  //protected reg [145:0] userRespSig [];
  protected reg passive;
  protected integer outstandingReqs;
  protected integer outBox;
  protected integer bypassBox;
  protected integer outBoxCnt;
  protected integer bypassBoxCnt;
  protected integer boxLock;
  protected reg flagUnexpected;
  protected integer stallStart;
  protected integer stallStop;
  
  task new (
    integer instatnce,
    reg passiveIn = 0,
    string nameIn
  );
  task send (
    BasePkt pktHndl,
    integer fastResp = 0
  );
  function reg dataEqual (
    reg [63:0] data1,
    reg [63:0] data2,
    reg [7:0] size
  );
//   protected task serviceSends (
//     reg type
//   );
  protected task serviceSends2 (
    reg type
  );
  virtual task recv (
    BasePkt pktHndl
  );
  virtual task cancelRecv (
    BasePkt pktHndl
  );
  protected function integer manyHot(reg [63:0] vec);
  protected function integer whichHot(reg [63:0] vec, reg check=0);
  protected function integer ordering(BasePkt rspPkt, string text);    
}

#endif
