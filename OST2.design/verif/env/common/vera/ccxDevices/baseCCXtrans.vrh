// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: baseCCXtrans.vrh
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef INC__TMP_BASECCXTRANS_VRH
#define INC__TMP_BASECCXTRANS_VRH

typedef class StandardDisplay ;

extern class BaseCCXtrans { 

  protected StandardDisplay dbg;
  protected ccxPort anyMemPort;
  protected ccxPort anySpcPort;
  protected bit l2BFMs;

//   protected rand bit valid;
//   protected rand bit [4:0] rqtyp;
//   protected rand bit nc;
//   protected rand bit [2:0] cpuId;
//   protected rand bit [2:0] tid;
//   protected rand bit inv;
//   protected rand bit pf;
//   protected rand bit l1wayBis;
//   protected rand bit [1:0] l1wayMMUid;
//   protected rand bit [7:0] size;
//   protected rand bit [39:0] addr;
//   protected rand bit [63:0] data;

  task new (
    StandardDisplay dbgHndl,
    bit l2BFMs
  );
  task sendIntr (
    bit [5:0] tid,
    bit [1:0] type,
    bit [5:0] vect,
    integer sendPort = 16
  );
  task bogusEvict(reg [7:0] targets, reg [7:0] sendPorts,
                  reg [39:0] evictPA = 40'h0);
  task ifillPair(integer target, reg [7:0] sendPorts,
                 reg [127:0] data0 = 128'h0,
                 reg [127:0] data1 = 128'h0);

task spcCheck(string msg);
  task pickCore(var integer num, var reg [7:0] mask);

}

#endif
