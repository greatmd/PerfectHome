// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: sparcBenchUtils_if.vrh
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef SPARCBENCHUTILS_IF
#define SPARCBENCHUTILS_IF


interface sparcBenchUtils_if {
  input        clk      CLOCK    hdl_node "tb_top.cpu.cmp_gclk_c3_spc0";
  input  [63:0]  th_check_enable  NSAMPLE #-0   hdl_node "tb_top.verif_args.th_check_enable";

#ifdef SPC_BENCH
  // FC will not have this wire
  input  [63:0]  core_running_status  NSAMPLE #-0   hdl_node "tb_top.cmp_core_running_status";
#else
  // cpu.sv users will be OK with this
  input  [63:0]  core_running_status  NSAMPLE #-0   hdl_node "{tb_top.cpu.spc7_ncu_core_running_status[7:0],tb_top.cpu.spc6_ncu_core_running_status[7:0],tb_top.cpu.spc5_ncu_core_running_status[7:0],tb_top.cpu.spc4_ncu_core_running_status[7:0],tb_top.cpu.spc3_ncu_core_running_status[7:0],tb_top.cpu.spc2_ncu_core_running_status[7:0],tb_top.cpu.spc1_ncu_core_running_status[7:0],tb_top.cpu.spc0_ncu_core_running_status[7:0]}";
#endif

  input [31:0] core_cycle_cnt  NSAMPLE #-0   hdl_node "tb_top.core_cycle_cnt";
  
}

#endif
