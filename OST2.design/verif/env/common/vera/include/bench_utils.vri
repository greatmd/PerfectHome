// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: bench_utils.vri
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef INC__TMP_BENCH_UTILS_VRI
#define INC__TMP_BENCH_UTILS_VRI

#include <vera_defines.vrh>

#define KILLSIM 49
#define PRINTFULL 100
#define PRINTDEBUG 50
#define PRINTINFO 20
#define PRINTSTAT 10
#define PRINTWARN  5
#define PRINTALWAYS 0


extern class DBG { 
  integer verbosity;
  integer errorCount;
  integer HoldNew;
  integer startTime;
  task new (
    integer verb = 20
  );
  task dispmon (
    integer FILE,
    integer level,
    string context,
    string value
  );
  task errorLog (
    integer level,
    string message
  );
  virtual task dumpFailing (
  );
  task startTimer (
  );
  virtual task dumpstats (
  );
}

extern task timeout_monitor (var DBG dbg);
extern task good_end_handler (var DBG dbg, string scope, string message);
extern task error_handler (var DBG dbg, string scope, string message);
extern function bit[7:0] get_thread_enables (string thrstr);
extern function bit file_exists (string filename, string mode);



#endif
