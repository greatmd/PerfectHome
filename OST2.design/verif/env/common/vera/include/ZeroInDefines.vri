// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ZeroInDefines.vri
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef ZERO_IN_DEFINES_VRI
#define ZERO_IN_DEFINES_VRI

enum zin_status =
  ZIN_STATUS_SUCCESS            = 0,
  ZIN_STATUS_INCORRECT_CHECKER_IDENTIFIER = 1,
  ZIN_STATUS_NOT_READY_FOR_ZIN_CALLS = 2,
  ZIN_STATUS_ILLEGAL_NULL_PARAMS = 3,
  ZIN_STATUS_NO_CHECKERS_OF_GIVEN_TYPE = 4,
  ZIN_STATUS_NO_CHECKER_OF_GIVEN_NAME = 5,
  ZIN_STATUS_NO_INFO_PORT_WITH_GIVEN_NAME = 6,
  ZIN_STATUS_UNSUPPORTED_INFO_TYPE = 7,
  ZIN_STATUS_INCORRECT_DB_NAME = 8,
  ZIN_STATUS_CORRUPTED_DB = 9,
  ZIN_STATUS_INCORRECT_DB_HANDLE = 10,
  ZIN_STATUS_ILLEGAL_VALUES_FOR_CACTION = 11,
  ZIN_STATUS_UNKNOWN;

enum zin_checker_action =
  ZIN_CHECKER_ACTION_NONE = 0,
  ZIN_CHECKER_ACTION_STOP = 1,
  ZIN_CHECKER_ACTION_FINISH = 2;

#define ZIN_NO_SEVERITY (-1)

//typedef unsigned long zin_db_handle;
// Will handle unsigned long as bit[63:0]

extern "C" function string
  zin_get_status_str(integer zstat);

extern "C" function integer
  zin_checker_info(string checker_type,
                   string checker_name,
                   string port_name,
                   var integer low_val,
                   var integer high_val);

extern "C" function integer
  zin_checker_turn_on(string checker_type,
                      string checker_name,
                      string module_name,
                      integer severity);

extern "C" function integer
  zin_checker_turn_off(string checker_type,
                       string checker_name,
                       string module_name,
                       integer severity);

extern "C" function integer
  zin_checker_firing_count(string checker_type,
                           string checker_name,
                           string checker_check,
                           string module_name,
                           integer severity,
                           var integer firing_count);

extern "C" function integer
  zin_checker_firing_modifier(string firing_modifier);

extern "C" function integer
  zin_checker_firing_action(integer severity,
                            integer caction,
                            integer firing_limit);
// Will handle unsigned long as bit[63:0]
extern "C" function integer
  zin_database_open(string db_name,
                    var bit [63:0] db_handle);

// Will handle unsigned long as bit[63:0]
extern "C" function integer
  zin_database_close(bit [63:0] db_handle);

// Will handle unsigned long as bit[63:0]
extern "C" function integer
  zin_database_checker_info(bit[63:0] db_handle,
                            string checker_type,
                            string checker_name,
                            string port_name,
                            var integer low_value,
                            var integer high_value);

// Will handle unsigned long as bit[63:0]
extern "C" function integer
  zin_database_checker_firings(bit[63:0] db_handle,
                               string checker_type,
                               string checker_name,
                               string check_name,
                               string module_name,
                               integer severity,
                               var integer firing_count);


#endif
