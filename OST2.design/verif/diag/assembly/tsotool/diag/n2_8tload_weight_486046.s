/*
* ========== Copyright Header Begin ==========================================
* 
* OpenSPARC T2 Processor File: n2_8tload_weight_486046.s
* Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
* 4150 Network Circle, Santa Clara, California 95054, U.S.A.
*
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; version 2 of the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*
* For the avoidance of doubt, and except that if any non-GPL license 
* choice is available it will apply instead, Sun elects to use only 
* the General Public License version 2 (GPLv2) at this time for any 
* software where a choice of GPL license versions is made 
* available with the language indicating that GPLv2 or any later version 
* may be used, or where a choice of which version of the GPL is applied is 
* otherwise unspecified. 
*
* Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
* CA 95054 USA or visit www.sun.com if you need additional information or 
* have any questions. 
*
* 
* ========== Copyright Header End ============================================
*/
#define N_CPUS  8
#define REGION_MAPPED_SIZE_RTL 8192
#define REGION_SIZE_RTL (128 * 1024)
#define RESULTS_BUF_SIZE_PER_CPU_RTL 1024
#define PRIVATE_DATA_AREA_PER_CPU_RTL 64

#define ALIGN_PAGE_8K .align 8192
#define ALIGN_PAGE_64K .align 65536
#define ALIGN_PAGE_512K .align 524288
#define ALIGN_PAGE_4M .align 4194304
#define USER_PAGE_CUSTOM_MAP

SECTION .MY_HYP_SEC TEXT_VA = 0x1100150000
attr_text {
        Name=.MY_HYP_SEC,
        hypervisor
	}
.text
.global intr0x60_custom_trap
intr0x60_custom_trap:
	ldxa	[%g0] 0x72, %g2;
	ldxa	[%g0] 0x74, %g1;	
	retry;

.global intr0x190_custom_trap
intr0x190_custom_trap:

.global intr0x190_custom_trap
intr0x190_custom_trap:

#ifdef SJM
! programming the JBI - not quite rrugho
!=====================
!setx 0x0000000006040012, %g1, %g2
!setx 0x8503000010, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000100, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000000, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000400, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000108, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000101, %g1, %g2
!setx 0x9800000008, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000408, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000110, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000202, %g1, %g2
!setx 0x9800000010, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000410, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000118, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000303, %g1, %g2
!setx 0x9800000018, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000418, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000120, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000404, %g1, %g2
!setx 0x9800000020, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000420, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000128, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000505, %g1, %g2
!setx 0x9800000028, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000428, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000130, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000606, %g1, %g2
!setx 0x9800000030, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000430, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000138, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000707, %g1, %g2
!setx 0x9800000038, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000438, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000140, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000808, %g1, %g2
!setx 0x9800000040, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000440, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000148, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000909, %g1, %g2
!setx 0x9800000048, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000448, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000150, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000a0a, %g1, %g2
!setx 0x9800000050, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000450, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000158, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000b0b, %g1, %g2
!setx 0x9800000058, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000458, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000160, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000c0c, %g1, %g2
!setx 0x9800000060, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000460, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000168, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000d0d, %g1, %g2
!setx 0x9800000068, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000468, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000170, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000e0e, %g1, %g2
!setx 0x9800000070, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000470, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000178, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000f0f, %g1, %g2
!setx 0x9800000078, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000478, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x000000000000007f, %g1, %g2
!setx 0x8503000008, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000001010, %g1, %g2
!setx 0x9800000080, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000480, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000001111, %g1, %g2
!setx 0x9800000088, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000488, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000c00, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000e20, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000e28, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000e38, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000008, %g1, %g2
!setx 0x8503000018, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000828, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x8503000028, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000001, %g1, %g2
!setx 0x8503000020, %g1, %g3
!stx %g2, [%g3]
!!=====================

/***********************************************************************
  Disable L2 Cache Visibility Port
 ***********************************************************************/

setx 0x0000000000000000, %g1, %g2
setx 0x9800001800, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001820, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001828, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001830, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001838, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001840, %g1, %g3
stx %g2, [%g3]
!=====================

/***********************************************************************
  Disable IOBridge Visibility Ports
 ***********************************************************************/

setx 0x0000000000000000, %g1, %g2
setx 0x9800001000, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002000, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002008, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002100, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002140, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002160, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002180, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x98000021a0, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002148, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002168, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002188, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x98000021a8, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002150, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002170, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002190, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x98000021b0, %g1, %g3
stx %g2, [%g3]
!=====================

/***********************************************************************
 Configure jbi controller
 ***********************************************************************/

setx 0x03fb303e00000001, %g1, %g2
setx 0x8000000000, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x000000007033fe0f, %g1, %g2
setx 0x8000000008, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000003fc0000000, %g1, %g2
setx 0x80000100a0, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x00000000fe0003ff, %g1, %g2
setx 0x8000004100, %g1, %g3
stx %g2, [%g3]
!=====================

/***********************************************************************
 IOSYNC cycles to start sjm
 ***********************************************************************/

setx 0xdeadbeefdeadbeef, %g1, %g2
setx 0xcf00beef00, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0xdeadbeefdeadbeef, %g1, %g2
setx 0xef00beef00, %g1, %g3
stx %g2, [%g3]

!=============================
done;

#else
#ifdef  DC_ON_OFF
	
	and	%i0, 0x1, %i0
	brz	%i0, on
	nop

        mov     0xd, %i0
	ba	finish_dc_on_off
        stxa    %l0, [%g0] 0x45         /* turn D-cache off */
on:        
        mov     0xf, %i0
        stxa    %i0, [%g0] 0x45         /* turn D-cache back on */

finish_dc_on_off:
	done

#else
	stxa	%i0, [%g0] 0x73;	
	done;
#endif
#endif
!============================================================================

#define ENABLE_T0_Fp_exception_ieee_754_0x21
#define ENABLE_T0_Fp_exception_other_0x22
#define ENABLE_T0_Fp_disabled_0x20
#define ENABLE_T0_Illegal_instruction_0x10
#define ENABLE_T1_Illegal_instruction_0x10
#define ENABLE_HT0_Illegal_instruction_0x10
#define ENABLE_HT1_Illegal_instruction_0x10
#define ENABLE_T0_Clean_Window_0x24

#define H_T0_Trap_Instruction_0
#define My_T0_Trap_Instruction_0	\
	ta      0x90;			\
	done;

#define H_HT0_HTrap_Instruction_0 intr0x190_custom_trap
#ifdef SJM
#define My_HT0_HTrap_Instruction_0 \
	setx intr0x190_custom_trap, %g1, %g2; \
	jmp %g2; nop
#else
#define My_HT0_HTrap_Instruction_0      \
	stxa    %i0, [%g0] 0x73;        \
	done;
#endif

#define H_HT0_Interrupt_0x60 intr0x60_custom_trap
#define My_HT0_Interrupt_0x60   \
        ldxa    [%g0] 0x72, %g2;        \
        ldxa    [%g0] 0x74, %g1;        \
        retry;
#define H_HT0_Trap_Instruction_5
#define My_HT0_Trap_Instruction_5   \
        ldxa [%g0 + %g0]0x45, %g1;     \
		membar #Sync;  \
        xor  %g1, 19, %g1;   \
        stxa %g1, [%g0 + %g0]0x45;  \
        done;

#define THREAD_COUNT 8
#define THREAD_STRIDE 1
#define SKIP_TRAPCHECK
#include "hboot.s"


!try later:
!	stxa    %l6, [$8] (0x22 | ($2 & 0x9)) ! ASI is randomly set
!===========
define(BST_INIT, `
	add     $6, ($7 & 0xfff0), $8	! 4-byte align the offset
	stxa    %l6, [$8] 0x22		! ASI is randomly set
')

!try later:
!ldda    [$8] (0x22 | ($2 & 0x9)), %l6 ! ASI is randomly set
!===========
define(BLD_INIT, `
        add     $6, ($7 & 0xfff0), $8 	! 4-byte align the offset
        ldda    [$8] 0x22, %l6 		! ASI is randomly set
')

define(CHECK_PROC_ID,`
check_cpu_id: 

	wr	%g0, 0x4, %fprs         /* make sure fef is 1 */
	mov 	THREAD_STRIDE, %l2
	th_fork(thread,%l0)

thread_0:
#ifdef SJM
	ta 	0x30
#endif
	mov 	0, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
	
thread_1:
	mov 	1, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_2:
	mov 	2, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_3:
	mov 	3, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_4:
	mov 	4, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_5:
	mov 	5, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_6:
	mov 	6, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_7:
	mov 	7, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_8:
	mov 	8, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_9:
	mov 	9, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_10:
	mov 	10, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_11:
	mov 	11, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_12:
	mov 	12, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_13:
	mov 	13, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_14:
	mov 	14, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_15:
	mov 	15, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_16:
	mov 	16, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_17:
	mov 	17, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_18:
	mov 	18, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_19:
	mov 	19, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_20:
	mov 	20, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_21:
	mov 	21, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_22:
	mov 	22, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_23:
	mov 	23, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_24:
	mov 	24, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_25:
	mov 	25, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_26:
	mov 	26, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
	
thread_27:
	mov 	27, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_28:
	mov 	28, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_29:
	mov 	29, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_30:
	mov 	30, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_31:
	mov 	31, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop

thread_32:
    mov     32, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_33:
    mov     33, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_34:
    mov     34, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_35:
    mov     35, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_36:
    mov     36, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_37:
    mov     37, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_38:
    mov     38, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_39:
    mov     39, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_40:
    mov     40, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_41:
    mov     41, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_42:
    mov     42, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_43:
    mov     43, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_44:
    mov     44, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_45:
    mov     45, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_46:
    mov     46, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_47:
    mov     47, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_48:
    mov     48, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_49:
    mov     49, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_50:
    mov     50, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_51:
    mov     51, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_52:
    mov     52, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_53:
    mov     53, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_54:
    mov     54, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_55:
    mov     55, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_56:
    mov     56, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_57:
    mov     57, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_58:
    mov     58, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_59:
    mov     59, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_60:
    mov     60, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_61:
    mov     61, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_62:
    mov     62, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_63:
    mov     63, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

entry_point:
#ifdef RTGPRIV
	ta	T_CHANGE_PRIV
#endif
	
')
! --- Common Macro Definitions ---
!
! macros will be instantiated with these arguments
! macro_name(P#, rand#, my_cpu#, PA_val, VA_val, VA_reg, VA_offset, \
!            tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3)
!
! P# - Pid, just in case one needs unique number
! rand# - random number
! my_cpu# - CPU id
! PA_val - shared memory physisal address value
! VA_val - shared memory virtual address value
! VA_reg - register containing VA region base address
! VA_offset - VA_reg + VA_offset will give correct VA address value
! tmp_reg0-tmp_reg3 - integer registers for arbitrary use within the macro
!                     tmp_reg0 & tmp_reg1 are even-odd register pair
!
! VA_val may be incorrect since VA will be determined at compile time by assembler
! and may not available at diag generation time, but VA_reg+VA_offset is valid
!
! ex. SAMPLE(1, 1249, 0, 0x43400100, 0x100, %i1, 0x100, %l6, %l7, %o5, %l3)
!
! Sample macro 1:
!  load unsigned byte from the given shared addr into tmp_reg1
!  the given shared addr is 4-byte aligned and we will randomly
!  pick one byte from the 4 bytes.
! 
! define(SAMPLE, `
!        ldub   [$6+$7+($2 mod 4)], $8
! ')
!
! Can also use C-like macro definition format.
!
! Sample macro 2:
!   issue an "ldda" instruction to the randomly picked shared location
!   (aligned it to 16-byte boundary first) with a random ASI value among
!   0x22, 0x23, 0x2a, and 0x2b (utilizing the provided "rand" value).
!
! #define BLD_INIT(Pid, rand, my_cpu, PA_val, \
!                 VA_val, VA_reg, VA_offset, \
!                 tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
!   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
!   ldda [tmp_reg2] (0x22 | (rand & 0x9)), tmp_reg0;
!
! ---

! Macro NOPTRAIN
! Train of NOPs

#define NOPTRAIN(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
		nop;\
		nop;\
		nop;\
		nop;


! Macro STTRAIN4
! Train of total 4 of UW stores.
! Note: doesn't use shared addresses

#define STTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 5120, tmp_reg1; \
        add %i0, tmp_reg1, tmp_reg1; \
        set rand, tmp_reg2; \
        stw tmp_reg2, [tmp_reg1]; \
        stw tmp_reg2, [tmp_reg1+4]; \
        stw tmp_reg2, [tmp_reg1+8]; \
        stw tmp_reg2, [tmp_reg1+16];

! Macro STTRAIN8
! Train of total 8 of UW stores 

#define STTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 5120, tmp_reg1; \
        add %i0, tmp_reg1, tmp_reg1; \
        set rand, tmp_reg2; \
        add tmp_reg2, rand % 4096, tmp_reg3; \
        stw tmp_reg2, [tmp_reg1]; \
        stw tmp_reg2, [tmp_reg1+4]; \
        stw tmp_reg2, [tmp_reg1+8]; \
        stw tmp_reg2, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1+4]; \
        stw tmp_reg3, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1]; \
        stw tmp_reg3, [tmp_reg1+8];
 
! Macro LDTRAIN4
! Train of total 4 of UW Loads
! Note the values of those loads inside the macro will not be analized,
! even though the accesses are [possibly] made to the shared locations

#define LDTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        ld [%i0], tmp_reg1; \
        ld [%i1+4], tmp_reg1; \
        ld [%i2+8], tmp_reg1; \
        ld [%i3+12], tmp_reg1;

! Macro LDTRAIN8

#define LDTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        ld [%i3], tmp_reg1; \
        ld [%i2+4], tmp_reg1; \
        ld [%i1+8], tmp_reg2; \
        ld [%i0+12], tmp_reg2; \
        ld [%i3+4], tmp_reg3; \
        ld [%i2], tmp_reg3; \
        ld [%i1+12], tmp_reg4; \
        ld [%i0+8], tmp_reg4;

! Macro PREFETCHTRAIN4

#define PREFETCHTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        prefetch [%i0+4], 0; \
        prefetch [%i1+12], 0; \
        prefetch [%i2+8], 0; \
        prefetch [%i3], 0;

! Macro PREFETCHTRAIN8

#define PREFETCHTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        prefetch [%i3], 0; \
        prefetch [%i2+4], 0; \
        prefetch [%i1+8], 0; \
        prefetch [%i0+12], 0; \
        prefetch [%i3+4], 1; \
        prefetch [%i2], 1; \
        prefetch [%i1+12], 1; \
        prefetch [%i0+8], 1;

! Macro CASTRAIN4
! This is an interesting macro that will probably create the write congessions
! access to the shared locations (offsets from bases have to be adjusted)
! the values of the locations are not changed, so it should not affect analysis

#define CASTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 128, tmp_reg1;\
        add %i0, tmp_reg1, tmp_reg1;\
        set 256, tmp_reg2;\
        add %i1, tmp_reg2, tmp_reg2;\
        ld [tmp_reg1], tmp_reg3;\
        ld [tmp_reg2], tmp_reg4;\
        cas [tmp_reg1], tmp_reg3, tmp_reg3;\
        cas [tmp_reg1], tmp_reg3, tmp_reg3;\
        cas [tmp_reg2], tmp_reg4, tmp_reg4;\
        cas [tmp_reg2], tmp_reg4, tmp_reg4;

! CASTRAIN8
! yet another flavor of cas train theme that actually always use shared locations
! given by the specified instance arguments for the first 4 cases
! and then follows then with another 4 to a randomized offset

#define CASTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
  add VA_reg, VA_offset, tmp_reg1;\
  add VA_reg, (rand&0x0ffc), tmp_reg2;\
  ld [tmp_reg1], tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  ld  [tmp_reg2], tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;

! Macro ST_BR_ANLD_CAS
! this is meant to reproduce NG6025
! the scenario is the anulled load in the delay slot of the branch is 
! not wiped completely, which creates false RAW hazard, and the following cas
! is getting screwed
! WARNING: there is a store to the %i0+128, which can potentially be a shared 
! location. When using this macro, make sure that the vicinity of offset 128 in
! region 0 is not used

#define ST_BR_ANLD_CAS(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 128, tmp_reg1;\
        add %i0, tmp_reg1, tmp_reg1;\
        set rand, tmp_reg3;\
        stw tmp_reg3, [tmp_reg1];\
        ba,a 1;\
        cas [tmp_reg1], tmp_reg3, tmp_reg4;

#define ASI_BLOCK(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
        setx 0x060, tmp_reg1, tmp_reg2; \
        stxa %g0, [tmp_reg2] 0x38;

! Macro SELF_MODIFY
! do a read-unmodify-write at address pc + random[0..0x80]
! this is targetted to catch bugs due to sharing/modification
! of data between D$ and I$. (e.g. Niagara1, Bug #6372)
! 1. 0x80 chosen arbitrarily, is another number better
! 2. should we include an iflush ?
! 3. WT.MACRO.SELF_MODIFY should be given a small non-0 weight by default
! 4. Possible variation: a macro which only does a load
!    from the instruction stream instead of a load-store. 
!    (Niagara1 bug #6372 did not involve stores to instruction
!    stream, just sharing of unmodified data between I$ and D$.)
! 5. this macro needs text segment to be writable. On system runs,
!    this is achieved by using a special map file for the linker.
! - sgh, 25 may 04

#define SELF_MODIFY(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
	rd    %pc, tmp_reg0; \
	ld    [ tmp_reg0 + (rand & 0x7c)], tmp_reg1; \
	st    tmp_reg1, [ tmp_reg0 + (rand & 0x7c)] 

#define ASI_BLOCK(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
        setx 0x060, tmp_reg1, tmp_reg2; \
        stxa %g0, [tmp_reg2] 0x38;


#define ASI_BLOCK_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
        setx 0x8559e06ff33bad10, tmp_reg1, tmp_reg2; \
        stxa %g0, [tmp_reg2] 0x80;
	
#define PREFETCH_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg1, tmp_reg2; \
        prefetch [tmp_reg2], 0; \
        prefetch [tmp_reg2+4], 1; \
        prefetch [tmp_reg2+8], 2; \
        prefetch [tmp_reg2+12], 3; \
        prefetch [tmp_reg2+4], 4; \
        prefetch [tmp_reg2], 5; \
        prefetch [tmp_reg2+12], 6; \
        prefetch [tmp_reg2+8], 7;

#define LOAD_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg1, tmp_reg2; \
        ld [tmp_reg2], tmp_reg1; \
        ld [tmp_reg2+4], tmp_reg1; \
        ld [tmp_reg2+8], tmp_reg1; \
        ld [tmp_reg2+12], tmp_reg1;



#define STORE_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg2, tmp_reg1; \
        set rand, tmp_reg2; \
        add tmp_reg2, rand % 4096, tmp_reg3; \
        stw tmp_reg2, [tmp_reg1]; \
        stw tmp_reg2, [tmp_reg1+4]; \
        stw tmp_reg2, [tmp_reg1+8]; \
        stw tmp_reg2, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1+4]; \
        stw tmp_reg3, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1]; \
        stw tmp_reg3, [tmp_reg1+8];	

#define CAS_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg3, tmp_reg1; \
        setx 0x8559e06ff33bad10, tmp_reg3, tmp_reg2; \
        add tmp_reg2, rand % 4096, tmp_reg3; \
        cas [tmp_reg1], tmp_reg3, tmp_reg3;\
        cas [tmp_reg2], tmp_reg4, tmp_reg4;

#define IDC_FLIP(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        ta 0xb5; \
		ta T_CHANGE_NONHPRIV;

! this macro produce ldda/stda to 
! ASI_BLOCK_AS_IF_USER_PRIMARY            0x16
! ASI_BLOCK_AS_IF_USER_SECONDARY          0x17
! ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE     0x1e
! ASI_BLOCK_AS_IF_USER_SECONDARY_LITTLE   0x1f
!! hardcode for now since illegal asi not working in RS
#define BLD_16(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x16, tmp_reg0;
#define BLD_17(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x17, tmp_reg0;
#define BLD_1e(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x1e, tmp_reg0;
#define BLD_1f(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x1f, tmp_reg0;

#define BST_16(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x16;
#define BST_17(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x17;
#define BST_1e(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x1e;
#define BST_1f(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x1f;

#define BLD_INIT_2(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ldda [tmp_reg3] (0x27 | (rand & 0xf)), tmp_reg0;
#define BST_INIT_2(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   stda tmp_reg0, [tmp_reg3] (0x27 | (rand & 0xf));
#define BLD_INIT_E(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ldda [tmp_reg3] (0xe2 | (rand & 0xb)), tmp_reg0;
#define BST_INIT_E(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   stda tmp_reg0, [tmp_reg3] (0xe2 | (rand & 0xb));
#define PREFETCHA(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   prefetcha [tmp_reg3](rand & 0x1f), (0x0 | ((rand >> 5) & 0x1f));
#define STBYTE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        add  VA_reg, (VA_offset & 0xff00), tmp_reg1; \
        set rand, tmp_reg2; \
        stb tmp_reg2, [tmp_reg1+(rand & 0x5f)];
#define LDBYTE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        add  VA_reg, (VA_offset & 0xff00), tmp_reg1; \
        ldub [tmp_reg1+(rand & 0x5f)], tmp_reg2;
#define STBYTE1(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        add  VA_reg, (VA_offset & 0xff00), tmp_reg1;\
		set 5200, tmp_reg2; \
		add tmp_reg2, tmp_reg1, tmp_reg1; \
		set rand, tmp_reg2; \
		stb tmp_reg2, [tmp_reg1+(rand & 0x5f)];
define(EN_INTERRUPTS,`
nop
')

define(DIS_INTERRUPTS,`
nop
')

define(CHECK_DISPATCH_STATUS,`
nop
')

define(CHECK_RECEIVE_STATUS,`
nop
')

define(WRITE_INTR_DATA_REGS,`
nop
')

define(INTR_SET_DISPATCH_VECTOR,`
add      %g0, $3, $4
sllx     $4, 8,  $5      ! DEST ID
add      %g0, $2, $4      ! VECTOR NUMBER
or       $5, $4, $5
mov      %i0, $4
mov      $5, %i0
ta       0x30
mov      $4, %i0
')

define(DSPCH_INTERRUPT,`
nop
')

#define REGION0_ALIAS3_O 0x0
#define REGION1_ALIAS3_O 0x20000
#define REGION2_ALIAS3_O 0x40000
#define REGION3_ALIAS3_O 0x60000
#define REGION4_ALIAS3_O 0x80000
#define REGION5_ALIAS3_O 0xa0000
#define REGION6_ALIAS3_O 0xc0000
#define REGION7_ALIAS3_O 0xe0000
#define REPLACEMENT0_ALIAS3_O 0x100000
#define REGION0_ALIAS2_O 0x200000
#define REGION1_ALIAS2_O 0x220000
#define REGION2_ALIAS2_O 0x240000
#define REGION3_ALIAS2_O 0x260000
#define REGION4_ALIAS2_O 0x280000
#define REGION5_ALIAS2_O 0x2a0000
#define REGION6_ALIAS2_O 0x2c0000
#define REGION7_ALIAS2_O 0x2e0000
#define REPLACEMENT0_ALIAS2_O 0x300000
#define REGION0_ALIAS1_O 0x400000
#define REGION1_ALIAS1_O 0x420000
#define REGION2_ALIAS1_O 0x440000
#define REGION3_ALIAS1_O 0x460000
#define REGION4_ALIAS1_O 0x480000
#define REGION5_ALIAS1_O 0x4a0000
#define REGION6_ALIAS1_O 0x4c0000
#define REGION7_ALIAS1_O 0x4e0000
#define REPLACEMENT0_ALIAS1_O 0x500000
#define REGION0_ALIAS0_O 0x600000
#define REGION1_ALIAS0_O 0x620000
#define REGION2_ALIAS0_O 0x640000
#define REGION3_ALIAS0_O 0x660000
#define REGION4_ALIAS0_O 0x680000
#define REGION5_ALIAS0_O 0x6a0000
#define REGION6_ALIAS0_O 0x6c0000
#define REGION7_ALIAS0_O 0x6e0000
#define REPLACEMENT0_ALIAS0_O 0x700000


#define USER_PAGE_CUSTOM_MAP
SECTION .MAIN TEXT_VA=0x1000000
attr_text {
	Name = .MAIN,
	VA=0x1000000,
	RA=0x130000000,
	PA=ra2pa(0x130000000,0),
part_0_ctx_nonzero_tsb_config_1,
 TTE_EP=1,
	TTE_G=1,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=0
	}

attr_text {
	Name = .MAIN,
	VA=0x1000000,
	RA=0x130000000,
	PA=ra2pa(0x130000000,0),
part_0_ctx_nonzero_tsb_config_0,
 TTE_EP=1,
	TTE_G=1,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

SECTION tsotool_unshared_data DATA_VA=0x21400000
attr_data {
	Name = tsotool_unshared_data,
	VA=0x21400000,
	RA=0x21400000,
	PA=ra2pa(0x21400000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=1,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region0_alias3_4 DATA_VA=0x6000000
attr_data {
	Name = region0_alias3_4,
	VA=0x6000000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias3_4 DATA_VA=0x6020000
attr_data {
	Name = region1_alias3_4,
	VA=0x6020000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias3_4 DATA_VA=0x6040000
attr_data {
	Name = region2_alias3_4,
	VA=0x6040000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias3_4 DATA_VA=0x6060000
attr_data {
	Name = region3_alias3_4,
	VA=0x6060000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias3_4 DATA_VA=0x6080000
attr_data {
	Name = region4_alias3_4,
	VA=0x6080000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias3_4 DATA_VA=0x60a0000
attr_data {
	Name = region5_alias3_4,
	VA=0x60a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias3_4 DATA_VA=0x60c0000
attr_data {
	Name = region6_alias3_4,
	VA=0x60c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias3_4 DATA_VA=0x60e0000
attr_data {
	Name = region7_alias3_4,
	VA=0x60e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias3_4 DATA_VA=0x6100000
attr_data {
	Name = replacement0_alias3_4,
	VA=0x6100000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias3_4 DATA_VA=0x6120000
attr_data {
	Name = replacement1_alias3_4,
	VA=0x6120000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias3_4 DATA_VA=0x6140000
attr_data {
	Name = replacement2_alias3_4,
	VA=0x6140000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias3_4 DATA_VA=0x6160000
attr_data {
	Name = replacement3_alias3_4,
	VA=0x6160000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias3_4 DATA_VA=0x6180000
attr_data {
	Name = replacement4_alias3_4,
	VA=0x6180000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias3_4 DATA_VA=0x61a0000
attr_data {
	Name = replacement5_alias3_4,
	VA=0x61a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias3_4 DATA_VA=0x61c0000
attr_data {
	Name = replacement6_alias3_4,
	VA=0x61c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias3_4 DATA_VA=0x61e0000
attr_data {
	Name = replacement7_alias3_4,
	VA=0x61e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias2_4 DATA_VA=0x6200000
attr_data {
	Name = region0_alias2_4,
	VA=0x6200000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias2_4 DATA_VA=0x6220000
attr_data {
	Name = region1_alias2_4,
	VA=0x6220000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias2_4 DATA_VA=0x6240000
attr_data {
	Name = region2_alias2_4,
	VA=0x6240000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias2_4 DATA_VA=0x6260000
attr_data {
	Name = region3_alias2_4,
	VA=0x6260000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias2_4 DATA_VA=0x6280000
attr_data {
	Name = region4_alias2_4,
	VA=0x6280000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias2_4 DATA_VA=0x62a0000
attr_data {
	Name = region5_alias2_4,
	VA=0x62a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias2_4 DATA_VA=0x62c0000
attr_data {
	Name = region6_alias2_4,
	VA=0x62c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias2_4 DATA_VA=0x62e0000
attr_data {
	Name = region7_alias2_4,
	VA=0x62e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias2_4 DATA_VA=0x6300000
attr_data {
	Name = replacement0_alias2_4,
	VA=0x6300000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias2_4 DATA_VA=0x6320000
attr_data {
	Name = replacement1_alias2_4,
	VA=0x6320000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias2_4 DATA_VA=0x6340000
attr_data {
	Name = replacement2_alias2_4,
	VA=0x6340000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias2_4 DATA_VA=0x6360000
attr_data {
	Name = replacement3_alias2_4,
	VA=0x6360000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias2_4 DATA_VA=0x6380000
attr_data {
	Name = replacement4_alias2_4,
	VA=0x6380000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias2_4 DATA_VA=0x63a0000
attr_data {
	Name = replacement5_alias2_4,
	VA=0x63a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias2_4 DATA_VA=0x63c0000
attr_data {
	Name = replacement6_alias2_4,
	VA=0x63c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias2_4 DATA_VA=0x63e0000
attr_data {
	Name = replacement7_alias2_4,
	VA=0x63e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias1_4 DATA_VA=0x6400000
attr_data {
	Name = region0_alias1_4,
	VA=0x6400000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias1_4 DATA_VA=0x6420000
attr_data {
	Name = region1_alias1_4,
	VA=0x6420000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias1_4 DATA_VA=0x6440000
attr_data {
	Name = region2_alias1_4,
	VA=0x6440000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias1_4 DATA_VA=0x6460000
attr_data {
	Name = region3_alias1_4,
	VA=0x6460000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias1_4 DATA_VA=0x6480000
attr_data {
	Name = region4_alias1_4,
	VA=0x6480000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias1_4 DATA_VA=0x64a0000
attr_data {
	Name = region5_alias1_4,
	VA=0x64a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias1_4 DATA_VA=0x64c0000
attr_data {
	Name = region6_alias1_4,
	VA=0x64c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias1_4 DATA_VA=0x64e0000
attr_data {
	Name = region7_alias1_4,
	VA=0x64e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias1_4 DATA_VA=0x6500000
attr_data {
	Name = replacement0_alias1_4,
	VA=0x6500000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias1_4 DATA_VA=0x6520000
attr_data {
	Name = replacement1_alias1_4,
	VA=0x6520000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias1_4 DATA_VA=0x6540000
attr_data {
	Name = replacement2_alias1_4,
	VA=0x6540000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias1_4 DATA_VA=0x6560000
attr_data {
	Name = replacement3_alias1_4,
	VA=0x6560000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias1_4 DATA_VA=0x6580000
attr_data {
	Name = replacement4_alias1_4,
	VA=0x6580000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias1_4 DATA_VA=0x65a0000
attr_data {
	Name = replacement5_alias1_4,
	VA=0x65a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias1_4 DATA_VA=0x65c0000
attr_data {
	Name = replacement6_alias1_4,
	VA=0x65c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias1_4 DATA_VA=0x65e0000
attr_data {
	Name = replacement7_alias1_4,
	VA=0x65e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias0 DATA_VA=0x6600000
attr_data {
	Name = region0_alias0,
	VA=0x6600000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region1_alias0 DATA_VA=0x6620000
attr_data {
	Name = region1_alias0,
	VA=0x6620000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region2_alias0 DATA_VA=0x6640000
attr_data {
	Name = region2_alias0,
	VA=0x6640000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region3_alias0 DATA_VA=0x6660000
attr_data {
	Name = region3_alias0,
	VA=0x6660000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region4_alias0 DATA_VA=0x6680000
attr_data {
	Name = region4_alias0,
	VA=0x6680000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region5_alias0 DATA_VA=0x66a0000
attr_data {
	Name = region5_alias0,
	VA=0x66a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region6_alias0 DATA_VA=0x66c0000
attr_data {
	Name = region6_alias0,
	VA=0x66c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region7_alias0 DATA_VA=0x66e0000
attr_data {
	Name = region7_alias0,
	VA=0x66e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement0_alias0 DATA_VA=0x6700000
attr_data {
	Name = replacement0_alias0,
	VA=0x6700000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement1_alias0 DATA_VA=0x6720000
attr_data {
	Name = replacement1_alias0,
	VA=0x6720000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement2_alias0 DATA_VA=0x6740000
attr_data {
	Name = replacement2_alias0,
	VA=0x6740000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement3_alias0 DATA_VA=0x6760000
attr_data {
	Name = replacement3_alias0,
	VA=0x6760000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement4_alias0 DATA_VA=0x6780000
attr_data {
	Name = replacement4_alias0,
	VA=0x6780000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement5_alias0 DATA_VA=0x67a0000
attr_data {
	Name = replacement5_alias0,
	VA=0x67a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement6_alias0 DATA_VA=0x67c0000
attr_data {
	Name = replacement6_alias0,
	VA=0x67c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement7_alias0 DATA_VA=0x67e0000
attr_data {
	Name = replacement7_alias0,
	VA=0x67e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION non_fault_area_4 DATA_VA=0x0
attr_data {
	Name = non_fault_area_4,
	VA=0x0,
	RA=0x47002000,
	PA=ra2pa(0x47002000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=1,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=1,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias3_0 DATA_VA=0x6000000
attr_data {
	Name = region0_alias3_0,
	VA=0x6000000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias3_0 DATA_VA=0x6020000
attr_data {
	Name = region1_alias3_0,
	VA=0x6020000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias3_0 DATA_VA=0x6040000
attr_data {
	Name = region2_alias3_0,
	VA=0x6040000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias3_0 DATA_VA=0x6060000
attr_data {
	Name = region3_alias3_0,
	VA=0x6060000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias3_0 DATA_VA=0x6080000
attr_data {
	Name = region4_alias3_0,
	VA=0x6080000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias3_0 DATA_VA=0x60a0000
attr_data {
	Name = region5_alias3_0,
	VA=0x60a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias3_0 DATA_VA=0x60c0000
attr_data {
	Name = region6_alias3_0,
	VA=0x60c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias3_0 DATA_VA=0x60e0000
attr_data {
	Name = region7_alias3_0,
	VA=0x60e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias3_0 DATA_VA=0x6100000
attr_data {
	Name = replacement0_alias3_0,
	VA=0x6100000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias3_0 DATA_VA=0x6120000
attr_data {
	Name = replacement1_alias3_0,
	VA=0x6120000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias3_0 DATA_VA=0x6140000
attr_data {
	Name = replacement2_alias3_0,
	VA=0x6140000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias3_0 DATA_VA=0x6160000
attr_data {
	Name = replacement3_alias3_0,
	VA=0x6160000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias3_0 DATA_VA=0x6180000
attr_data {
	Name = replacement4_alias3_0,
	VA=0x6180000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias3_0 DATA_VA=0x61a0000
attr_data {
	Name = replacement5_alias3_0,
	VA=0x61a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias3_0 DATA_VA=0x61c0000
attr_data {
	Name = replacement6_alias3_0,
	VA=0x61c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias3_0 DATA_VA=0x61e0000
attr_data {
	Name = replacement7_alias3_0,
	VA=0x61e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias2_0 DATA_VA=0x6200000
attr_data {
	Name = region0_alias2_0,
	VA=0x6200000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias2_0 DATA_VA=0x6220000
attr_data {
	Name = region1_alias2_0,
	VA=0x6220000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias2_0 DATA_VA=0x6240000
attr_data {
	Name = region2_alias2_0,
	VA=0x6240000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias2_0 DATA_VA=0x6260000
attr_data {
	Name = region3_alias2_0,
	VA=0x6260000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias2_0 DATA_VA=0x6280000
attr_data {
	Name = region4_alias2_0,
	VA=0x6280000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias2_0 DATA_VA=0x62a0000
attr_data {
	Name = region5_alias2_0,
	VA=0x62a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias2_0 DATA_VA=0x62c0000
attr_data {
	Name = region6_alias2_0,
	VA=0x62c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias2_0 DATA_VA=0x62e0000
attr_data {
	Name = region7_alias2_0,
	VA=0x62e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias2_0 DATA_VA=0x6300000
attr_data {
	Name = replacement0_alias2_0,
	VA=0x6300000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias2_0 DATA_VA=0x6320000
attr_data {
	Name = replacement1_alias2_0,
	VA=0x6320000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias2_0 DATA_VA=0x6340000
attr_data {
	Name = replacement2_alias2_0,
	VA=0x6340000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias2_0 DATA_VA=0x6360000
attr_data {
	Name = replacement3_alias2_0,
	VA=0x6360000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias2_0 DATA_VA=0x6380000
attr_data {
	Name = replacement4_alias2_0,
	VA=0x6380000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias2_0 DATA_VA=0x63a0000
attr_data {
	Name = replacement5_alias2_0,
	VA=0x63a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias2_0 DATA_VA=0x63c0000
attr_data {
	Name = replacement6_alias2_0,
	VA=0x63c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias2_0 DATA_VA=0x63e0000
attr_data {
	Name = replacement7_alias2_0,
	VA=0x63e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias1_0 DATA_VA=0x6400000
attr_data {
	Name = region0_alias1_0,
	VA=0x6400000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias1_0 DATA_VA=0x6420000
attr_data {
	Name = region1_alias1_0,
	VA=0x6420000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias1_0 DATA_VA=0x6440000
attr_data {
	Name = region2_alias1_0,
	VA=0x6440000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias1_0 DATA_VA=0x6460000
attr_data {
	Name = region3_alias1_0,
	VA=0x6460000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias1_0 DATA_VA=0x6480000
attr_data {
	Name = region4_alias1_0,
	VA=0x6480000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias1_0 DATA_VA=0x64a0000
attr_data {
	Name = region5_alias1_0,
	VA=0x64a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias1_0 DATA_VA=0x64c0000
attr_data {
	Name = region6_alias1_0,
	VA=0x64c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias1_0 DATA_VA=0x64e0000
attr_data {
	Name = region7_alias1_0,
	VA=0x64e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias1_0 DATA_VA=0x6500000
attr_data {
	Name = replacement0_alias1_0,
	VA=0x6500000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias1_0 DATA_VA=0x6520000
attr_data {
	Name = replacement1_alias1_0,
	VA=0x6520000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias1_0 DATA_VA=0x6540000
attr_data {
	Name = replacement2_alias1_0,
	VA=0x6540000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias1_0 DATA_VA=0x6560000
attr_data {
	Name = replacement3_alias1_0,
	VA=0x6560000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias1_0 DATA_VA=0x6580000
attr_data {
	Name = replacement4_alias1_0,
	VA=0x6580000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias1_0 DATA_VA=0x65a0000
attr_data {
	Name = replacement5_alias1_0,
	VA=0x65a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias1_0 DATA_VA=0x65c0000
attr_data {
	Name = replacement6_alias1_0,
	VA=0x65c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias1_0 DATA_VA=0x65e0000
attr_data {
	Name = replacement7_alias1_0,
	VA=0x65e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias0_0 DATA_VA=0x6600000
attr_data {
	Name = region0_alias0_0,
	VA=0x6600000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias0_0 DATA_VA=0x6620000
attr_data {
	Name = region1_alias0_0,
	VA=0x6620000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias0_0 DATA_VA=0x6640000
attr_data {
	Name = region2_alias0_0,
	VA=0x6640000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias0_0 DATA_VA=0x6660000
attr_data {
	Name = region3_alias0_0,
	VA=0x6660000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias0_0 DATA_VA=0x6680000
attr_data {
	Name = region4_alias0_0,
	VA=0x6680000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias0_0 DATA_VA=0x66a0000
attr_data {
	Name = region5_alias0_0,
	VA=0x66a0000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias0_0 DATA_VA=0x66c0000
attr_data {
	Name = region6_alias0_0,
	VA=0x66c0000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias0_0 DATA_VA=0x66e0000
attr_data {
	Name = region7_alias0_0,
	VA=0x66e0000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias0_0 DATA_VA=0x6700000
attr_data {
	Name = replacement0_alias0_0,
	VA=0x6700000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias0_0 DATA_VA=0x6720000
attr_data {
	Name = replacement1_alias0_0,
	VA=0x6720000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias0_0 DATA_VA=0x6740000
attr_data {
	Name = replacement2_alias0_0,
	VA=0x6740000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias0_0 DATA_VA=0x6760000
attr_data {
	Name = replacement3_alias0_0,
	VA=0x6760000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias0_0 DATA_VA=0x6780000
attr_data {
	Name = replacement4_alias0_0,
	VA=0x6780000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias0_0 DATA_VA=0x67a0000
attr_data {
	Name = replacement5_alias0_0,
	VA=0x67a0000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias0_0 DATA_VA=0x67c0000
attr_data {
	Name = replacement6_alias0_0,
	VA=0x67c0000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias0_0 DATA_VA=0x67e0000
attr_data {
	Name = replacement7_alias0_0,
	VA=0x67e0000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024


!------------------------------------------------------------------------

SECTION tsotool_unshared_data
.global tsotool_unshared_data_start
.global res_buf_fp_p_0
.global res_buf_int_p_0
.global private_data_p0
.global stack_top_p0:
.global res_buf_fp_p_1
.global res_buf_int_p_1
.global private_data_p1
.global stack_top_p1:
.global res_buf_fp_p_2
.global res_buf_int_p_2
.global private_data_p2
.global stack_top_p2:
.global res_buf_fp_p_3
.global res_buf_int_p_3
.global private_data_p3
.global stack_top_p3:
.global res_buf_fp_p_4
.global res_buf_int_p_4
.global private_data_p4
.global stack_top_p4:
.global res_buf_fp_p_5
.global res_buf_int_p_5
.global private_data_p5
.global stack_top_p5:
.global res_buf_fp_p_6
.global res_buf_int_p_6
.global private_data_p6
.global stack_top_p6:
.global res_buf_fp_p_7
.global res_buf_int_p_7
.global private_data_p7
.global stack_top_p7:
.data
ALIGN_PAGE_512K
tsotool_unshared_data_start:
!-- label names of res_buf must match with extract_loads_m64.pl --
.align 64 ! for self bcopy()
res_buf_fp_p_0:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_0:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_1:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_1:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_2:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_2:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_3:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_3:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_4:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_4:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_5:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_5:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_6:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_6:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_7:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_7:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
private_data_p0:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p1:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p2:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p3:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p4:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p5:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p6:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p7:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
stack_top_p0:
	.skip 2048
stack_top_p1:
	.skip 2048
stack_top_p2:
	.skip 2048
stack_top_p3:
	.skip 2048
stack_top_p4:
	.skip 2048
stack_top_p5:
	.skip 2048
stack_top_p6:
	.skip 2048
stack_top_p7:
	.skip 2048
tsotool_unshared_data_end:
ALIGN_PAGE_512K
! to prevent VAs from running over from this section into shared regions

!------------------------------------------------------------------------

.seg "data"
! 8 shared memory regions, 3 alias(es) each (Alias 0 is normal VA)


SECTION region0_alias0
.global REGION0_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION0_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION0_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region1_alias0
.global REGION1_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION1_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION1_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region2_alias0
.global REGION2_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION2_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION2_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region3_alias0
.global REGION3_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION3_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION3_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region4_alias0
.global REGION4_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION4_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION4_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region5_alias0
.global REGION5_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION5_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION5_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region6_alias0
.global REGION6_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION6_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION6_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region7_alias0
.global REGION7_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION7_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION7_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement0_alias0
.global REPLACEMENT0_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT0_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT0_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement1_alias0
.global REPLACEMENT1_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT1_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT1_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement2_alias0
.global REPLACEMENT2_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT2_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT2_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement3_alias0
.global REPLACEMENT3_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT3_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT3_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement4_alias0
.global REPLACEMENT4_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT4_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT4_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement5_alias0
.global REPLACEMENT5_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT5_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT5_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement6_alias0
.global REPLACEMENT6_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT6_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT6_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement7_alias0
.global REPLACEMENT7_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT7_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT7_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL

.seg "text"
ALIGN_PAGE_8K
local_trap_handlers_start:

.align 64
extern_interrupt_handler:
stxa  %g0, [%g0]ASI_INTR_RECEIVE
retry

local_trap_handlers_end:

SECTION .MAIN
.global main
.global  tsotool_text_start
.text
ALIGN_PAGE_64K
user_text_start:
ba main
nop
user_text_end:

ALIGN_PAGE_64K
tsotool_text_start:
main:
	mov     0, %o0
	mov     0, %o1
	CHECK_PROC_ID
! at this point, g1 should have CPU id (0, 1, 2, ...)
	set     REGION0_ALIAS0_START, %o0	! shared address 0
	set     REGION1_ALIAS0_START, %o1	! shared address 1
	cmp     %g1, 0x7
	be      setup_p7
	nop
	cmp     %g1, 0x6
	be      setup_p6
	nop
	cmp     %g1, 0x5
	be      setup_p5
	nop
	cmp     %g1, 0x4
	be      setup_p4
	nop
	cmp     %g1, 0x3
	be      setup_p3
	nop
	cmp     %g1, 0x2
	be      setup_p2
	nop
	cmp     %g1, 0x1
	be      setup_p1
	nop
	cmp     %g1, 0x0
	be      setup_p0
	nop
	EXIT_BAD   ! Should never reach here
	nop

setup_p0:
	setx    stack_top_p0, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_0, %g1, %o4
	setx    private_data_p0, %g1, %o5
	setx    func0, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p1:
	setx    stack_top_p1, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_1, %g1, %o4
	setx    private_data_p1, %g1, %o5
	setx    func1, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p2:
	setx    stack_top_p2, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_2, %g1, %o4
	setx    private_data_p2, %g1, %o5
	setx    func2, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p3:
	setx    stack_top_p3, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_3, %g1, %o4
	setx    private_data_p3, %g1, %o5
	setx    func3, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p4:
	setx    stack_top_p4, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_4, %g1, %o4
	setx    private_data_p4, %g1, %o5
	setx    func4, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p5:
	setx    stack_top_p5, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_5, %g1, %o4
	setx    private_data_p5, %g1, %o5
	setx    func5, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p6:
	setx    stack_top_p6, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_6, %g1, %o4
	setx    private_data_p6, %g1, %o5
	setx    func6, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p7:
	setx    stack_top_p7, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_7, %g1, %o4
	setx    private_data_p7, %g1, %o5
	setx    func7, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop
#define    NO_REAL_CPUS_MINUS_1    7

!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func0:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l6
or    %l6, %lo(0xdeadbee0), %l6
stw   %l6, [%i5]
sethi %hi(0xdeadbee1), %l6
or    %l6, %lo(0xdeadbee1), %l6
stw   %l6, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x00deade1), %l6
or    %l6, %lo(0x00deade1), %l6
stw %l6, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x1), %l4
or    %l4, %lo(0x1), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x3f800001), %l6
or    %l6, %lo(0x3f800001), %l6
stw %l6, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x34000000), %l6
or    %l6, %lo(0x34000000), %l6
stw %l6, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0xf44^4
sethi %hi(0xf44), %l0
or    %l0, %lo(0xf44), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES0: ! Test instruction sequence for CPU 0 begins

P1: !_LD [11] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_0:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_0
nop

P3: !_BSTC [11] (maybe <- 0x3f800001) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_1:
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4: !_BSTC [4] (maybe <- 0x3f800003) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_0_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_1
nop

P5: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_2:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 17

P6: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_2
nop

P7: !_BLD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_3:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P8: !_CASX [3] (maybe <- 0x1) (Int) (Loop exit)
add %i1, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_3
nop

P9: !_QWLD [10] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_4:
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_4
nop

P10: !_LD [5] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_5:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET10
nop
RET10:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P11: !_ST [15] (maybe <- 0x3f800005) (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_5
nop

P12: !_BLD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_6:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P13: !_LD [6] (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_0_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_6
nop

P14: !_SWAP [12] (maybe <- 0x2) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_7:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P15: !_LD [13] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_7
nop

P16: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_8:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P17: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_8
nop

P18: !_LD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_9:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P19: !_BST [11] (maybe <- 0x3f800006) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_9
nop

P20: !_FLUSHI [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_10:
flush %g0 
loop_exit_0_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_10
nop

P21: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_11:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P22: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_11
nop

P23: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_12:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_12
nop

P24: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_13:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_13
nop

P25: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_14:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P26: !_LD [0] (FP)
ld [%i0 + 4], %f0
! 1 addresses covered

P27: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_14
nop

P28: !_DWST [3] (maybe <- 0x3f800008) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_15:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 8]

P29: !_QWST [4] (maybe <- 0x3f800009) (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_0_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_15
nop

P30: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_16:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P31: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_16
nop

P32: !_PREFETCH [3] (Int) (Loop entry) (Loop exit) (Branch target of P553)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_17:
prefetch [%i1 + 12], 22
loop_exit_0_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_17
nop
ba P33
nop

TARGET553:
ba RET553
nop


P33: !_DWST [11] (maybe <- 0x3f80000b) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_18:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]

P34: !_SWAP [8] (maybe <- 0x3) (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P35: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_18
nop

P36: !_REPLACEMENT [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_19:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P37: !_BLD [5] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_19
nop

P38: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_20:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 1

P39: !_LD [14] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_20
nop

P40: !_DWST [4] (maybe <- 0x4) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_21:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 0]
add   %l4, 1, %l4

P41: !_REPLACEMENT [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_0_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_21
nop

P42: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_22:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P43: !_CASX [1] (maybe <- 0x5) (Int)
add %i0, 8, %l6
ldx [%l6], %o5
! move %o5(upper) -> %o0(lower)
srlx %o5, 32, %l3
or %l3, %o0, %o0
! move %o5(lower) -> %o1(upper)
sllx %o5, 32, %o1
mov  %o5, %l3
mov %l4, %o5
casx [%l6], %l3, %o5
! move %o5(upper) -> %o1(lower)
srlx %o5, 32, %l3
or %l3, %o1, %o1
! move %o5(lower) -> %o2(upper)
sllx %o5, 32, %o2
add  %l4, 1, %l4

P44: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_0_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_22
nop

P45: !_QWST [13] (maybe <- 0x3f80000c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_23:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P46: !_ST [3] (maybe <- 0x6) (Int) (Loop exit)
stw   %l4, [%i1 + 12 ]
add   %l4, 1, %l4
loop_exit_0_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_23
nop

P47: !_BLD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_24:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P48: !_DWLD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P49: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_24
nop

P50: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_25:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_25
nop

P51: !_DWST [10] (maybe <- 0x3f80000e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_26:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_0_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_26
nop

P52: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_27:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P53: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_27
nop

P54: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_28:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P55: !_PREFETCH [13] (Int) (NF) (Faults)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 18

P56: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_28
nop

P57: !_CAS [3] (maybe <- 0x7) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_29:
add %i1, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_29
nop

P58: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_30:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 22

P59: !_BSTC [15] (maybe <- 0x3f80000f) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_30
nop

P60: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_31:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P61: !_PREFETCH [7] (Int) (Faults)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 22

P62: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_31
nop

P63: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_32:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P64: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_32
nop

P65: !_LD [1] (Int) (Loop entry) (Branch target of P346)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_33:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P66
nop

TARGET346:
ba RET346
nop


P66: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_33
nop

P67: !_CASX [0] (maybe <- 0x8) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_34:
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i0], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_34
nop

P68: !_QWLD [1] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_35:
wr %g0, 0x82, %asi
ldqa  [%i0 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P69: !_PREFETCH [14] (Int) (Faults) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_35
nop

P70: !_PREFETCH [7] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_36:
prefetch [%g0], 0

P71: !_LD [14] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_36
nop

P72: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_37:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_0_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_37
nop

P73: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_38:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P74: !_ST [4] (maybe <- 0x9) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4

P75: !_LD [14] (Int) (Loop exit) (Branch target of P403)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_38
nop
ba P76
nop

TARGET403:
ba RET403
nop


P76: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_39:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P77: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_39
nop

P78: !_ST [1] (maybe <- 0x3f800011) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_40:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 12 ]
loop_exit_0_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_40
nop

P79: !_QWLD [4] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_41:
wr %g0, 0x82, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_41
nop

P80: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_42:
prefetch [%i0 + 4], 23
loop_exit_0_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_42
nop

P81: !_DWST [0] (maybe <- 0x3f800012) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_43:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 0]

P82: !_LD [14] (FP) (Loop exit) (Branch target of P290)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_43
nop
ba P83
nop

TARGET290:
ba RET290
nop


P83: !_BSTC [5] (maybe <- 0x3f800013) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_44:
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_44
nop

P84: !_LD [11] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_45:
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P85: !_DWST [15] (maybe <- 0x3f800015) (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_45
nop

P86: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_46:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 3

P87: !_BSTC [6] (maybe <- 0x3f800016) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_0_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_46
nop

P88: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_47:
prefetch [%i1 + 12], 2

P89: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 22
loop_exit_0_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_47
nop

P90: !_LD [5] (FP) (Loop entry) (Loop exit) (Branch target of P229)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_48:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_48
nop
ba P91
nop

TARGET229:
ba RET229
nop


P91: !_CAS [5] (maybe <- 0xa) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_49:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P92: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_49
nop

P93: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_50:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 4

P94: !_LD [11] (Int) (Branch target of P600)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P95
nop

TARGET600:
ba RET600
nop


P95: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_50
nop

P96: !_BST [7] (maybe <- 0x3f800018) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_51:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P97: !_QWLD [1] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_51
nop

P98: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_52:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P99: !_FLUSH [0] (Int)
! Unsupported instruction

P100: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_52
nop

P101: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_53:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P102: !_FLUSH [8] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_53
nop

P103: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_54:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P104: !_REPLACEMENT [12] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P105: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_54
nop

P106: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_55:
prefetch [%i1 + 12], 22

P107: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_55
nop

P108: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_56:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 4
loop_exit_0_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_56
nop

P109: !_ST [15] (maybe <- 0xb) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_57:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

P110: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_57
nop

P111: !_LD [0] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_58:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET111
nop
RET111:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P112: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_58
nop

P113: !_SWAP [14] (maybe <- 0xc) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_59:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P114: !_PREFETCH [0] (Int) (Faults)
prefetch [%g0], 4

P115: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_59
nop

P116: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_60:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P117: !_LD [3] (Int) (Loop exit) (CBR)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET117
nop
RET117:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_60
nop

P118: !_REPLACEMENT [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_61:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P119: !_LD [7] (FP) (Loop exit) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET119
nop
RET119:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_61
nop

P120: !_LD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_62:
ld [%i0 + 4], %f0
! 1 addresses covered

P121: !_LD [13] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P122: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_62
nop

P123: !_LD [10] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_63:
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered

P124: !_PREFETCH [14] (Int) (Faults) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_63
nop

P125: !_PREFETCH [11] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_64:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 20
loop_exit_0_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_64
nop

P126: !_LD [10] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_65:
wr %g0, 0x88, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P127: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_65
nop

P128: !_LD [2] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_66:
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 2 

sethi %hi(0x200000), %l3
sub   %i1, %l3, %i1
wr %g0, 0x88, %asi
lduwa [%i1 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P129: !_LD [6] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5

sethi %hi(0x200000), %l6
add   %i1, %l6, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_0_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_66
nop

P130: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_67:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P131: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_67
nop

P132: !_SWAP [5] (maybe <- 0xd) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_68:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P133: !_LD [14] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_68
nop

P134: !_LD [6] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_69:
wr %g0, 0x88, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P135: !_LD [8] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET135
nop
RET135:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P136: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_69
nop

P137: !_BST [5] (maybe <- 0x3f80001a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_70:
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_70
nop

P138: !_BSTC [11] (maybe <- 0x3f80001c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_71:
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P139: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P140: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_71
nop

P141: !_PREFETCH [0] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_72:
wr %g0, 0x88, %asi
prefetcha [%i0 + 4] %asi, 21

P142: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P143: !_LD [15] (Int) (Loop exit) (Branch target of P383)
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_72
nop
ba P144
nop

TARGET383:
ba RET383
nop


P144: !_ST [8] (maybe <- 0x3f80001e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_73:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P145: !_DWLD [3] (Int) (CBR)
ldx [%i1 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET145
nop
RET145:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P146: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_73
nop

P147: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_74:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P148: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_74
nop

P149: !_BSTC [12] (maybe <- 0x3f80001f) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_75:
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET149
nop
RET149:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P150: !_PREFETCH [6] (Int) (Faults) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_0_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_75
nop

P151: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_76:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 4
loop_exit_0_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_76
nop

P152: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_77:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 21

P153: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P154: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_77
nop

P155: !_FLUSH [13] (Int) (Loop entry) (Loop exit) (Branch target of P342)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_78:
! Unsupported instruction
loop_exit_0_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_78
nop
ba P156
nop

TARGET342:
ba RET342
nop


P156: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_79:
prefetch [%i1 + 12], 0

P157: !_REPLACEMENT [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_0_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_79
nop

P158: !_QWLD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_80:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P159: !_BST [11] (maybe <- 0x3f800021) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_80
nop

P160: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_81:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P161: !_PREFETCH [4] (Int) (NF) (Faults)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 17

P162: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_81
nop

P163: !_CASX [12] (maybe <- 0xe) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_82:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_82
nop

P164: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_83:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P165: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_83
nop

P166: !_REPLACEMENT [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_84:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_0_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_84
nop

P167: !_QWLD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_85:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P168: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 25
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_85
nop

P169: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_86:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_86
nop

P170: !_LD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_87:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P171: !_BSTC [6] (maybe <- 0x3f800023) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_87
nop

P172: !_DWST [5] (maybe <- 0xf) (Int) (Loop entry) (Branch target of P476)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_88:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4
ba P173
nop

TARGET476:
ba RET476
nop


P173: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_88
nop

P174: !_PREFETCH [8] (Int) (Loop entry) (Loop exit) (Branch target of P135)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_89:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
loop_exit_0_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_89
nop
ba P175
nop

TARGET135:
ba RET135
nop


P175: !_PREFETCH [3] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_90:
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 1

P176: !_BST [15] (maybe <- 0x3f800025) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_90
nop

P177: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_91:
prefetch [%i1 + 4], 1
loop_exit_0_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_91
nop

P178: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_92:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P179: !_PREFETCH [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 19

P180: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_92
nop

P181: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_93:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 0

P182: !_BST [5] (maybe <- 0x3f800027) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_93
nop

P183: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_94:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P184: !_PREFETCH [14] (Int) (Faults) (Loop exit) (LE)
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_94
nop

P185: !_DWST [9] (maybe <- 0x10) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_95:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_0_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_95
nop

P186: !_BLD [9] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_96:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET186
nop
RET186:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P187: !_LD [9] (Int) (NF)
wr %g0, 0x82, %asi
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P188: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_96
nop

P189: !_PREFETCH [13] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_97:
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 30

P190: !_CASX [1] (maybe <- 0x11) (Int) (Loop exit) (Branch target of P278)
add %i0, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_97
nop
ba P191
nop

TARGET278:
ba RET278
nop


P191: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_98:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P192: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_98
nop

P193: !_ST [9] (maybe <- 0x12) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_99:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4
loop_exit_0_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_99
nop

P194: !_ST [13] (maybe <- 0x3f800029) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_100:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]

P195: !_PREFETCH [1] (Int) (Faults) (Loop exit)
prefetch [%i0 + 12], 21
loop_exit_0_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_100
nop

P196: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_101:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_101
nop

P197: !_BST [0] (maybe <- 0x3f80002a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_102:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_0_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_102
nop

P198: !_LD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_103:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P199: !_SWAP [0] (maybe <- 0x13) (Int)
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P200: !_LD [14] (Int) (Loop exit) (Branch target of P284)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_103
nop
ba P201
nop

TARGET284:
ba RET284
nop


P201: !_CASX [5] (maybe <- 0x14) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_104:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_104
nop

P202: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_105:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P203: !_REPLACEMENT [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P204: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_105
nop

P205: !_PREFETCH [9] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_106:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 26

P206: !_CASX [6] (maybe <- 0x15) (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i3], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_106
nop

P207: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_107:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P208: !_PREFETCH [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P209: !_LD [9] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_107
nop

P210: !_ST [4] (maybe <- 0x16) (Int) (Loop entry) (Branch target of P186)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_108:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
ba P211
nop

TARGET186:
ba RET186
nop


P211: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_108
nop

P212: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_109:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 20

P213: !_LD [6] (Int)
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P214: !_LD [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_109
nop

P215: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_110:
membar #StoreLoad
loop_exit_0_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_110
nop

P216: !_BLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_111:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P217: !_DWLD [15] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f2
! 1 addresses covered
fmovs %f3, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_0_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_111
nop

P218: !_SWAP [0] (maybe <- 0x17) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_112:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P219: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_112
nop

P220: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_113:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 3
loop_exit_0_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_113
nop

P221: !_LD [1] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_114:
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P222: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_114
nop

P223: !_LD [15] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_115:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET223
nop
RET223:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P224: !_PREFETCH [6] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 20

P225: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_115
nop

P226: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_116:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P227: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_116
nop

P228: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_117:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P229: !_LD [14] (Int) (Loop exit) (CBR) (Branch target of P355)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET229
nop
RET229:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_117
nop
ba P230
nop

TARGET355:
ba RET355
nop


P230: !_LD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_118:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P231: !_BST [10] (maybe <- 0x3f80002c) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_118
nop

P232: !_LD [9] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_119:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P233: !_LD [15] (FP)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P234: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i3 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_119
nop

P235: !_BSTC [5] (maybe <- 0x3f80002e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_120:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_0_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_120
nop

P236: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_121:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P237: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_121
nop

P238: !_BST [11] (maybe <- 0x3f800030) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_122:
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P239: !_REPLACEMENT [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_0_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_122
nop

P240: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_123:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_0_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_123
nop

P241: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_124:
prefetch [%i0 + 12], 23
loop_exit_0_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_124
nop

P242: !_PREFETCH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_125:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22
loop_exit_0_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_125
nop

P243: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_126:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_126
nop

P244: !_BSTC [11] (maybe <- 0x3f800032) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_127:
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P245: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P246: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_127
nop

P247: !_BLD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_128:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P248: !_CASX [1] (maybe <- 0x18) (Int) (Loop exit)
add %i0, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_128
nop

P249: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_129:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_129
nop

P250: !_REPLACEMENT [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_130:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_0_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_130
nop

P251: !_SWAP [6] (maybe <- 0x19) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_131:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P252: !_LD [3] (FP)
ld [%i1 + 12], %f0
! 1 addresses covered

P253: !_LD [6] (Int) (Loop exit)
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_131
nop

P254: !_LD [7] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_132:
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P255: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P256: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_132
nop

P257: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_133:
prefetch [%i1 + 12], 1
loop_exit_0_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_133
nop

P258: !_QWST [15] (maybe <- 0x3f800034) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_134:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_0_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_134
nop

P259: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_135:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 22
loop_exit_0_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_135
nop

P260: !_PREFETCH [10] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_136:
prefetch [%g0], 31
loop_exit_0_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_136
nop

P261: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_137:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P262: !_PREFETCH [13] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 4

P263: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_137
nop

P264: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_138:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P265: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P266: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_138
nop

P267: !_DWST [3] (maybe <- 0x1a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_139:
mov %l4, %l6 
stx %l6, [%i1 + 8]
add   %l4, 1, %l4
loop_exit_0_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_139
nop

P268: !_DWLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_140:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_140
nop

P269: !_BST [3] (maybe <- 0x3f800036) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_141:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_0_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_141
nop

P270: !_BST [7] (maybe <- 0x3f800038) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_142:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_142
nop

P271: !_QWST [12] (maybe <- 0x3f80003a) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_143:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P272: !_BSTC [7] (maybe <- 0x3f80003c) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_143
nop

P273: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_144:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P274: !_ST [15] (maybe <- 0x1b) (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_144
nop

P275: !_QWLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_145:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_145
nop

P276: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_146:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P277: !_PREFETCH [3] (Int)
prefetch [%i1 + 12], 22

P278: !_LD [9] (Int) (Loop exit) (CBR)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET278
nop
RET278:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_146
nop

P279: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_147:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P280: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_147
nop

P281: !_LD [9] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_148:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET281
nop
RET281:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_148
nop

P282: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_149:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_149
nop

P283: !_CAS [7] (maybe <- 0x1c) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_150:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_150
nop

P284: !_LD [1] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_151:
ld [%i0 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET284
nop
RET284:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P285: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P286: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_151
nop

P287: !_LD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_152:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P288: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P289: !_LD [4] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_152
nop

P290: !_LD [7] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_153:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET290
nop
RET290:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P291: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_153
nop

P292: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_154:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P293: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_154
nop

P294: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_155:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P295: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_155
nop

P296: !_SWAP [10] (maybe <- 0x1d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_156:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P297: !_QWST [15] (maybe <- 0x3f80003e) (FP) (Branch target of P111)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
ba P298
nop

TARGET111:
ba RET111
nop


P298: !_LD [3] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_156
nop

P299: !_LD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_157:
ld [%i0 + 4], %f0
! 1 addresses covered

P300: !_LD [10] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_157
nop

P301: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_158:
prefetch [%i0 + 12], 3
loop_exit_0_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_158
nop

P302: !_QWLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_159:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_159
nop

P303: !_REPLACEMENT [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_160:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_0_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_160
nop

P304: !_REPLACEMENT [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_161:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P305: !_SWAP [7] (maybe <- 0x1e) (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P306: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_161
nop

P307: !_LD [10] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_162:
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P308: !_PREFETCH [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 31

P309: !_LD [14] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_162
nop

P310: !_SWAP [10] (maybe <- 0x1f) (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_163:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET310
nop
RET310:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P311: !_LD [0] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
lduwa [%i0 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_163
nop

P312: !_QWST [13] (maybe <- 0x3f800040) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_164:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_0_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_164
nop

P313: !_SWAP [14] (maybe <- 0x20) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_165:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P314: !_LD [14] (FP)
ld [%i3 + 4], %f0
! 1 addresses covered

P315: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_165
nop

P316: !_CAS [9] (maybe <- 0x21) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_166:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P317: !_BLD [0] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_166
nop

P318: !_LD [1] (FP) (NF) (Loop entry) (Branch target of P334)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_167:
wr %g0, 0x82, %asi
lda    [%i0 + 12] %asi, %f0
! 1 addresses covered
ba P319
nop

TARGET334:
ba RET334
nop


P319: !_DWST [6] (maybe <- 0x3f800042) (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_167
nop

P320: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_168:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_168
nop

P321: !_PREFETCH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_169:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_0_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_169
nop

P322: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_170:
prefetch [%i0 + 4], 0
loop_exit_0_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_170
nop

P323: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_171:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P324: !_LD [9] (Int) (Loop exit) (Branch target of P223)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_171
nop
ba P325
nop

TARGET223:
ba RET223
nop


P325: !_BSTC [8] (maybe <- 0x3f800043) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_172:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P326: !_CASX [12] (maybe <- 0x22) (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_172
nop

P327: !_QWST [3] (maybe <- 0x3f800045) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_173:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_0_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_173
nop

P328: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_174:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_174
nop

P329: !_PREFETCH [13] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_175:
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 26

P330: !_REPLACEMENT [12] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_0_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_175
nop

P331: !_QWST [8] (maybe <- 0x3f800047) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_176:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_0_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_176
nop

P332: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_177:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P333: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_177
nop

P334: !_LD [12] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_178:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET334
nop
RET334:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P335: !_DWLD [5] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldxa [%i2 + 8] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P336: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_178
nop

P337: !_BLD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_179:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_179
nop

P338: !_QWST [14] (maybe <- 0x3f800049) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_180:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P339: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 3
loop_exit_0_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_180
nop

P340: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_181:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P341: !_BSTC [0] (maybe <- 0x3f80004b) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P342: !_LD [12] (Int) (Loop exit) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET342
nop
RET342:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_181
nop

P343: !_PREFETCH [8] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_182:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 0

P344: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P345: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_182
nop

P346: !_LD [5] (FP) (Loop entry) (CBR) (Branch target of P281)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_183:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET346
nop
RET346:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P347
nop

TARGET281:
ba RET281
nop


P347: !_PREFETCH [9] (Int) (Faults) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_183
nop

P348: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_184:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P349: !_LD [15] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_184
nop

P350: !_BSTC [10] (maybe <- 0x3f80004d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_185:
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P351: !_BST [2] (maybe <- 0x3f80004f) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_0_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_185
nop

P352: !_CASX [1] (maybe <- 0x23) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_186:
add %i0, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_186
nop

P353: !_BLD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_187:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P354: !_CASX [4] (maybe <- 0x24) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_187
nop

P355: !_PREFETCH [3] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_188:
prefetch [%i1 + 12], 22

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET355
nop
RET355:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_0_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_188
nop

P356: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_189:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P357: !_LD [6] (Int) (Branch target of P117)
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P358
nop

TARGET117:
ba RET117
nop


P358: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_189
nop

P359: !_CAS [3] (maybe <- 0x25) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_190:
add %i1, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_190
nop

P360: !_CASX [7] (maybe <- 0x26) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_191:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P361: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_191
nop

P362: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_192:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_192
nop

P363: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_193:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P364: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_193
nop

P365: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_194:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P366: !_FLUSH [8] (Int)
! Unsupported instruction

P367: !_LD [2] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_194
nop

P368: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_195:
ld [%i1 + 12], %f0
! 1 addresses covered

P369: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P370: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_195
nop

P371: !_SWAP [0] (maybe <- 0x27) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_196:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P372: !_PREFETCH [11] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 1

P373: !_LD [10] (Int) (Loop exit)
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_196
nop

P374: !_LD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_197:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P375: !_PREFETCH [8] (Int) (NF) (Loop exit) (Branch target of P10)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 19
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_197
nop
ba P376
nop

TARGET10:
ba RET10
nop


P376: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_198:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_0_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_198
nop

P377: !_BLD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_199:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P378: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_199
nop

P379: !_BST [12] (maybe <- 0x3f800051) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_200:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_200
nop

P380: !_QWLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_201:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_201
nop

P381: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_202:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_202
nop

P382: !_DWLD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_203:
ldx [%i1 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P383: !_LD [6] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET383
nop
RET383:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_203
nop

P384: !_PREFETCH [10] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_204:
prefetch [%g0], 17
loop_exit_0_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_204
nop

P385: !_BST [1] (maybe <- 0x3f800053) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_205:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_0_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_205
nop

P386: !_LD [8] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_206:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P387: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_206
nop

P388: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_207:
prefetch [%i0 + 4], 1
loop_exit_0_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_207
nop

P389: !_PREFETCH [7] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_208:
prefetch [%g0], 19

P390: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_0_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_208
nop

P391: !_BSTC [0] (maybe <- 0x3f800055) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_209:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P392: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_209
nop

P393: !_DWLD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_210:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P394: !_PREFETCH [5] (Int) (Faults)
prefetch [%g0], 4

P395: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_210
nop

P396: !_PREFETCH [13] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_211:
prefetch [%g0], 2

P397: !_PREFETCH [0] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 21
loop_exit_0_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_211
nop

P398: !_BLD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_212:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P399: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P400: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_212
nop

P401: !_BLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_213:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_213
nop

P402: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_214:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_214
nop

P403: !_DWST [13] (maybe <- 0x3f800057) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_215:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET403
nop
RET403:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P404: !_LD [12] (FP) (Loop exit)
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_215
nop

P405: !_CASX [6] (maybe <- 0x28) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_216:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P406: !_QWLD [11] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_216
nop

P407: !_LD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_217:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P408: !_PREFETCH [9] (Int) (Faults) (Loop exit) (LE)
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_217
nop

P409: !_LD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_218:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P410: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P411: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_218
nop

P412: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_219:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P413: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_219
nop

P414: !_LD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_220:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P415: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P416: !_LD [8] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_220
nop

P417: !_FLUSH [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_221:
! Unsupported instruction

P418: !_QWLD [6] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_221
nop

P419: !_LD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_222:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P420: !_DWST [13] (maybe <- 0x3f800058) (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_222
nop

P421: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_223:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_223
nop

P422: !_DWLD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_224:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P423: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_224
nop

P424: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_225:
prefetch [%i1 + 12], 2
loop_exit_0_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_225
nop

P425: !_PREFETCH [11] (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_226:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 3
loop_exit_0_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_226
nop

P426: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_227:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21

P427: !_DWST [9] (maybe <- 0x29) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_0_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_227
nop

P428: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_228:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P429: !_REPLACEMENT [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]

P430: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_228
nop

P431: !_FLUSH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_229:
! Unsupported instruction
loop_exit_0_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_229
nop

P432: !_FLUSH [12] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_230:
! Unsupported instruction

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET432
nop
RET432:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_0_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_230
nop

P433: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_231:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P434: !_LD [10] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET434
nop
RET434:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_231
nop

P435: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_232:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P436: !_PREFETCH [0] (Int)
prefetch [%i0 + 4], 22

P437: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_232
nop

P438: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_233:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_233
nop

P439: !_LD [1] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_234:
ld [%i0 + 12], %f0
! 1 addresses covered

P440: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_234
nop

P441: !_CASX [7] (maybe <- 0x2a) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_235:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET441
nop
RET441:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P442: !_LD [3] (FP) (Loop exit)
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_235
nop

P443: !_REPLACEMENT [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_236:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P444: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 0
loop_exit_0_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_236
nop

P445: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_237:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P446: !_LD [2] (Int) (Loop exit) (Branch target of P432)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_237
nop
ba P447
nop

TARGET432:
ba RET432
nop


P447: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_238:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_238
nop

P448: !_PREFETCH [10] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_239:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 21

P449: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
loop_exit_0_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_239
nop

P450: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_240:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P451: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P452: !_LD [11] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_240
nop

P453: !_SWAP [0] (maybe <- 0x2b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_241:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P454: !_LD [15] (FP) (NF) (Branch target of P588)
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
ba P455
nop

TARGET588:
ba RET588
nop


P455: !_LD [4] (Int) (Loop exit) (Branch target of P546)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_241
nop
ba P456
nop

TARGET546:
ba RET546
nop


P456: !_FLUSH [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_242:
! Unsupported instruction

P457: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P458: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_242
nop

P459: !_ST [0] (maybe <- 0x2c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_243:
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4

P460: !_LD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_243
nop

P461: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_244:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 2
loop_exit_0_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_244
nop

P462: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_245:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22
loop_exit_0_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_245
nop

P463: !_BST [2] (maybe <- 0x3f800059) (FP) (Loop entry) (Loop exit) (Branch target of P149)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_246:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_0_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_246
nop
ba P464
nop

TARGET149:
ba RET149
nop


P464: !_BLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_247:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P465: !_BST [9] (maybe <- 0x3f80005b) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_247
nop

P466: !_ST [14] (maybe <- 0x3f80005d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_248:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P467: !_QWST [13] (maybe <- 0x3f80005e) (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_0_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_248
nop

P468: !_SWAP [1] (maybe <- 0x2d) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_249:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P469: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_249
nop

P470: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_250:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 31

P471: !_CASX [5] (maybe <- 0x2e) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_250
nop

P472: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_251:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23

P473: !_DWLD [5] (FP) (Loop exit)
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_251
nop

P474: !_DWLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_252:
ldd [%i1 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P475: !_SWAP [14] (maybe <- 0x2f) (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P476: !_LD [0] (Int) (Loop exit) (CBR)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET476
nop
RET476:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_252
nop

P477: !_PREFETCH [10] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_253:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 20

P478: !_BST [6] (maybe <- 0x3f800060) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_253
nop

P479: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_254:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P480: !_PREFETCH [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 23

P481: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_254
nop

P482: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_255:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P483: !_BSTC [15] (maybe <- 0x3f800062) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P484: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_255
nop

P485: !_CASX [8] (maybe <- 0x30) (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_256:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET485
nop
RET485:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_256
nop

P486: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_257:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P487: !_LD [8] (Int) (Loop exit) (Branch target of P561)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_257
nop
ba P488
nop

TARGET561:
ba RET561
nop


P488: !_FLUSH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_258:
! Unsupported instruction
loop_exit_0_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_258
nop

P489: !_ST [10] (maybe <- 0x31) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_259:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_0_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_259
nop

P490: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_260:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 28
loop_exit_0_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_260
nop

P491: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_261:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_261
nop

P492: !_BSTC [10] (maybe <- 0x3f800064) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_262:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P493: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_0_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_262
nop

P494: !_BSTC [12] (maybe <- 0x3f800066) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_263:
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P495: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_263
nop

P496: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_264:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P497: !_LD [7] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_264
nop

P498: !_FLUSH [11] (Int) (Loop entry) (Loop exit) (Branch target of P441)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_265:
! Unsupported instruction
loop_exit_0_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_265
nop
ba P499
nop

TARGET441:
ba RET441
nop


P499: !_CAS [0] (maybe <- 0x32) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_266:
add %i0, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_266
nop

P500: !_DWST [11] (maybe <- 0x33) (Int) (Loop entry) (Loop exit) (Branch target of P119)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_267:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_0_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_267
nop
ba P501
nop

TARGET119:
ba RET119
nop


P501: !_CASX [7] (maybe <- 0x34) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_268:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_268
nop

P502: !_QWST [15] (maybe <- 0x3f800068) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_269:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P503: !_PREFETCH [6] (Int) (Faults) (Loop exit)
prefetch [%g0], 27
loop_exit_0_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_269
nop

P504: !_LD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_270:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P505: !_LD [1] (Int)
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P506: !_LD [9] (Int) (Loop exit)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_270
nop

P507: !_QWLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_271:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_271
nop

P508: !_PREFETCH [14] (Int) (Loop entry) (Loop exit) (Branch target of P512)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_272:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 4
loop_exit_0_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_272
nop
ba P509
nop

TARGET512:
ba RET512
nop


P509: !_BLD [9] (FP) (Loop entry) (Branch target of P145)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_273:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
ba P510
nop

TARGET145:
ba RET145
nop


P510: !_CAS [15] (maybe <- 0x35) (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_273
nop

P511: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_274:
prefetch [%i1 + 4], 4
loop_exit_0_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_274
nop

P512: !_FLUSHI [1] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_275:
flush %g0 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET512
nop
RET512:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_0_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_275
nop

P513: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_276:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P514: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_276
nop

P515: !_BLD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_277:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P516: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_0_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_277
nop

P517: !_LD [7] (Int) (Loop entry) (LE) (Branch target of P565)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_278:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P518
nop

TARGET565:
ba RET565
nop


P518: !_LD [14] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_278
nop

P519: !_CAS [11] (maybe <- 0x36) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_279:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_279
nop

P520: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit) (Branch target of P542)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_280:
prefetch [%g0], 1
loop_exit_0_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_280
nop
ba P521
nop

TARGET542:
ba RET542
nop


P521: !_CAS [15] (maybe <- 0x37) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_281:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P522: !_BLD [1] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_281
nop

P523: !_DWLD [5] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_282:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda    [%i3 + 8] %asi, %f0
! 1 addresses covered
fmovs %f1, %f0

P524: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_282
nop

P525: !_FLUSH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_283:
! Unsupported instruction
loop_exit_0_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_283
nop

P526: !_QWLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_284:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_284
nop

P527: !_LD [0] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_285:
wr %g0, 0x88, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P528: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_285
nop

P529: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_286:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P530: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_286
nop

P531: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_287:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 31
loop_exit_0_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_287
nop

P532: !_BSTC [7] (maybe <- 0x3f80006a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_288:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_288
nop

P533: !_DWLD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_289:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_289
nop

P534: !_PREFETCH [13] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_290:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 24
loop_exit_0_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_290
nop

P535: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_291:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 16
loop_exit_0_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_291
nop

P536: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_292:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P537: !_CASX [2] (maybe <- 0x38) (Int) (LE)
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
sllx %l7, 32, %l7
wr %g0, 0x88, %asi
ldxa [%i1] %asi, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
! move %o5(upper) -> %o1(upper)
or %o5, %g0, %o1
mov  %o5, %l3
mov  %l7, %o5
casxa [%i1] %asi, %l3, %o5
! move %o5(lower) -> %o1(lower)
srlx %o1, 32, %o1
sllx %o1, 32, %o1
srl %o5, 0, %l3
or %l3, %o1, %o1
! move %o5(upper) -> %o2(upper)
or %o5, %g0, %o2
add  %l4, 1, %l4

P538: !_LD [5] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o2(lower)
srlx %o2, 32, %o2
sllx %o2, 32, %o2
or %l6, %o2, %o2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET538
nop
RET538:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_0_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_292
nop

P539: !_ST [1] (maybe <- 0x39) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_293:
stw   %l4, [%i0 + 12 ]
add   %l4, 1, %l4

P540: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P541: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_293
nop

P542: !_LD [12] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_294:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET542
nop
RET542:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P543: !_BLD [3] (FP) (Loop exit) (Branch target of P434)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_0_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_294
nop
ba P544
nop

TARGET434:
ba RET434
nop


P544: !_PREFETCH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_295:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 2
loop_exit_0_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_295
nop

P545: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_296:
prefetch [%i1 + 12], 21

P546: !_PREFETCH [0] (Int) (NF) (Faults) (Loop exit) (CBR)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 30

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET546
nop
RET546:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_0_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_296
nop

P547: !_PREFETCH [4] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_297:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 20
loop_exit_0_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_297
nop

P548: !_BSTC [15] (maybe <- 0x3f80006c) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_298:
wr %g0, 0xe0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P549: !_LD [15] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_298
nop

P550: !_REPLACEMENT [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_299:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P551: !_LD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P552: !_LD [10] (Int) (Loop exit)
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_299
nop

P553: !_LD [12] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_300:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET553
nop
RET553:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P554: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_300
nop

P555: !_QWST [2] (maybe <- 0x3f80006e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_301:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_0_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_301
nop

P556: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_302:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3

P557: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P558: !_LD [6] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_302
nop

P559: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_303:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22
loop_exit_0_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_303
nop

P560: !_BLD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_304:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P561: !_LD [0] (Int) (CBR)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET561
nop
RET561:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P562: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_304
nop

P563: !_ST [7] (maybe <- 0x3a) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_305:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4

P564: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_305
nop

P565: !_LD [13] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_306:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET565
nop
RET565:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P566: !_BSTC [3] (maybe <- 0x3f800070) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_306
nop

P567: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_307:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P568: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_307
nop

P569: !_LD [3] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_308:
wr %g0, 0x82, %asi
lda    [%i1 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_308
nop

P570: !_PREFETCH [10] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_309:
prefetch [%g0], 3

P571: !_BSTC [8] (maybe <- 0x3f800072) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_309
nop

P572: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_310:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P573: !_SWAP [2] (maybe <- 0x3b) (Int) (Loop exit)
mov %l4, %o5
swap  [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_310
nop

P574: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_311:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P575: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_311
nop

P576: !_REPLACEMENT [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_312:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P577: !_BST [15] (maybe <- 0x3f800074) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_0_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_312
nop

P578: !_LD [13] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_313:
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P579: !_PREFETCH [4] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_313
nop

P580: !_FLUSH [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_314:
! Unsupported instruction

P581: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P582: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_314
nop

P583: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_315:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 23

P584: !_PREFETCH [0] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 1
loop_exit_0_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_315
nop

P585: !_FLUSH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_316:
! Unsupported instruction
loop_exit_0_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_316
nop

P586: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_317:
ld [%i1 + 12], %f0
! 1 addresses covered

P587: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 21
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_317
nop

P588: !_LD [1] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_318:
ld [%i0 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET588
nop
RET588:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_318
nop

P589: !_CAS [10] (maybe <- 0x3c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_319:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P590: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_319
nop

P591: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_320:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P592: !_LD [13] (FP) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P593: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_320
nop

P594: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_321:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21

P595: !_CASX [4] (maybe <- 0x3d) (Int) (Loop exit)
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_0_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_321
nop

P596: !_ST [13] (maybe <- 0x3f800076) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_322:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]

P597: !_LD [13] (Int) (Branch target of P485)
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P598
nop

TARGET485:
ba RET485
nop


P598: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_322
nop

P599: !_SWAP [9] (maybe <- 0x3e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_323:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P600: !_BLD [4] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET600
nop
RET600:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P601: !_LD [2] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_323
nop

P602: !_BLD [10] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_324:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P603: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_324
nop

P604: !_PREFETCH [9] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_325:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23
loop_exit_0_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_325
nop

P605: !_PREFETCH [0] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_326:
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 29
loop_exit_0_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_326
nop

P606: !_SWAP [0] (maybe <- 0x3f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_327:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P607: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_327
nop

P608: !_PREFETCH [14] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_328:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 18
loop_exit_0_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_328
nop

P609: !_QWST [6] (maybe <- 0x3f800077) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_329:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P610: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_329
nop

P611: !_PREFETCH [5] (Int) (Faults) (Loop entry) (Branch target of P310)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_330:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20
ba P612
nop

TARGET310:
ba RET310
nop


P612: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 1
loop_exit_0_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_330
nop

P613: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_331:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 25

P614: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P615: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_331
nop

P616: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_332:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 31

P617: !_BST [6] (maybe <- 0x3f800079) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_0_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_332
nop

P618: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_333:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 18
loop_exit_0_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_333
nop

P619: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_334:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21

P620: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_334
nop

P621: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_335:
membar #StoreLoad

P622: !_FLUSH [1] (Int) (Loop exit) (Branch target of P538)
! Unsupported instruction
loop_exit_0_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_335
nop
ba P623
nop

TARGET538:
ba RET538
nop


P623: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_336:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P624: !_BLD [0] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_0_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_336
nop

P625: !_FLUSHI [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_337:
flush %g0 

P626: !_PREFETCH [13] (Int) (Faults) (Loop exit)
prefetch [%g0], 2
loop_exit_0_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_337
nop

P627: !_PREFETCH [3] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_338:
prefetch [%i1 + 12], 20
loop_exit_0_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_338
nop

P628: !_QWST [2] (maybe <- 0x3f80007b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_339:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_0_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_339
nop

P629: !_BSTC [10] (maybe <- 0x3f80007d) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_340:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P630: !_LD [12] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P631: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_340
nop

P632: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_341:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P633: !_CAS [15] (maybe <- 0x40) (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_341
nop

P634: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_342:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P635: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_342
nop

P636: !_SWAP [4] (maybe <- 0x41) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_343:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P637: !_LD [10] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P638: !_LD [6] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_343
nop

P639: !_DWLD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_344:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P640: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_344
nop

P641: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_345:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P642: !_PREFETCH [8] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 1
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_345
nop

P643: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_346:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P644: !_DWLD [9] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P645: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_346
nop

P646: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_347:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P647: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_347
nop

P648: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_348:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P649: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_348
nop

P650: !_DWST [14] (maybe <- 0x3f80007f) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_349:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

P651: !_BLD [12] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_0_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_349
nop

P652: !_DWLD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_350:
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P653: !_REPLACEMENT [10] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_350
nop

P654: !_CASX [8] (maybe <- 0x42) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_351:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P655: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P656: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o2(lower)
or %l7, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_0_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_351
nop

P657: !_DWLD [6] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_352:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldxa [%i2 + 0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P658: !_BSTC [10] (maybe <- 0x3f800080) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P659: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_352
nop

P660: !_FLUSH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_353:
! Unsupported instruction
loop_exit_0_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_353
nop

P661: !_DWLD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_354:
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P662: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_354
nop

P663: !_DWST [15] (maybe <- 0x3f800082) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_355:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]

P664: !_REPLACEMENT [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_0_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_355
nop

P665: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_356:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P666: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_0_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_356
nop

P667: !_FLUSH [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_357:
! Unsupported instruction

P668: !_PREFETCH [7] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 27
loop_exit_0_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_357
nop

P669: !_FLUSH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_0_358:
! Unsupported instruction
loop_exit_0_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_358
nop

P670: !_MEMBAR (Int)
membar #StoreLoad

END_NODES0: ! Test instruction sequence for CPU 0 ends
sethi %hi(0xdead0e0f), %l3
or    %l3, %lo(0xdead0e0f), %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
stw %l3, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func1:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %o5
or    %o5, %lo(0xdeadbee0), %o5
stw   %o5, [%i5]
sethi %hi(0xdeadbee1), %o5
or    %o5, %lo(0xdeadbee1), %o5
stw   %o5, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x01deade1), %o5
or    %o5, %lo(0x01deade1), %o5
stw %o5, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x800001), %l4
or    %l4, %lo(0x800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x40000001), %o5
or    %o5, %lo(0x40000001), %o5
stw %o5, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x34800000), %o5
or    %o5, %lo(0x34800000), %o5
stw %o5, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x1556^4
sethi %hi(0x1556), %l0
or    %l0, %lo(0x1556), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES1: ! Test instruction sequence for CPU 1 begins

P671: !_DWST [7] (maybe <- 0x800001) (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_0:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %o5
srl %o5, 8, %o5
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %o5, %l7
srl %l7, 16, %o5
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %o5, %l7
sllx %l7, 32, %l7 
stxa %l7, [%i2 + 8 ] %asi
add   %l4, 1, %l4

P672: !_BST [8] (maybe <- 0x40000001) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_0
nop

P673: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_1:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_1
nop

P674: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_2:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P675: !_LD [4] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET675
nop
RET675:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_2
nop

P676: !_LD [2] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_3:
ld [%i1 + 4], %f0
! 1 addresses covered

P677: !_LD [14] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P678: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_3
nop

P679: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_4:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P680: !_PREFETCH [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4

P681: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_4
nop

P682: !_SWAP [1] (maybe <- 0x800002) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_5:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P683: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_5
nop

P684: !_BLD [5] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_6:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET684
nop
RET684:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P685: !_PREFETCH [4] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_6
nop

P686: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_7:
prefetch [%i0 + 4], 23
loop_exit_1_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_7
nop

P687: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_8:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_8
nop

P688: !_BSTC [12] (maybe <- 0x40000003) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_9:
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P689: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 18
loop_exit_1_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_9
nop

P690: !_DWST [9] (maybe <- 0x800003) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_10:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4

P691: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_1_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_10
nop

P692: !_BST [4] (maybe <- 0x40000005) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_11:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_11
nop

P693: !_LD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_12:
ld [%i0 + 4], %f0
! 1 addresses covered

P694: !_BLD [10] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_12
nop

P695: !_FLUSH [11] (Int) (Loop entry) (Loop exit) (Branch target of P1081)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_13:
! Unsupported instruction
loop_exit_1_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_13
nop
ba P696
nop

TARGET1081:
ba RET1081
nop


P696: !_BLD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_14:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P697: !_REPLACEMENT [13] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_14
nop

P698: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_15:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P699: !_LD [5] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_15
nop

P700: !_QWLD [15] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_16:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_16
nop

P701: !_FLUSH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_17:
! Unsupported instruction
loop_exit_1_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_17
nop

P702: !_QWLD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_18:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P703: !_LD [1] (Int)
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P704: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_18
nop

P705: !_SWAP [6] (maybe <- 0x800004) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_19:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P706: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_19
nop

P707: !_DWST [3] (maybe <- 0x800005) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_20:
mov %l4, %o5 
stx %o5, [%i1 + 8]
add   %l4, 1, %l4
loop_exit_1_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_20
nop

P708: !_BLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_21:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P709: !_PREFETCH [0] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 21
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_21
nop

P710: !_QWLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_22:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_22
nop

P711: !_LD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_23:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P712: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P713: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_23
nop

P714: !_FLUSH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_24:
! Unsupported instruction
loop_exit_1_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_24
nop

P715: !_BST [2] (maybe <- 0x40000007) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_25:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_1_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_25
nop

P716: !_LD [0] (Int) (Loop entry) (Branch target of P983)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_26:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P717
nop

TARGET983:
ba RET983
nop


P717: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_26
nop

P718: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_27:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4

P719: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 23
loop_exit_1_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_27
nop

P720: !_DWLD [14] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_28:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda    [%i2 + 0] %asi, %f0
! 1 addresses covered
fmovs %f1, %f0

P721: !_LD [14] (Int) (LE) (CBR)
wr %g0, 0x88, %asi
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET721
nop
RET721:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P722: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_28
nop

P723: !_PREFETCH [5] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_29:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 2
loop_exit_1_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_29
nop

P724: !_DWLD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_30:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P725: !_LD [0] (Int) (NF) (Loop exit) (Branch target of P928)
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_30
nop
ba P726
nop

TARGET928:
ba RET928
nop


P726: !_LD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_31:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P727: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_31
nop

P728: !_DWST [3] (maybe <- 0x40000009) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_32:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 8]
loop_exit_1_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_32
nop

P729: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_33:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4

P730: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_33
nop

P731: !_QWLD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_34:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_34
nop

P732: !_BSTC [10] (maybe <- 0x4000000a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_35:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_35
nop

P733: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_36:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 22

P734: !_LD [10] (FP) (Loop exit) (Branch target of P1255)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_36
nop
ba P735
nop

TARGET1255:
ba RET1255
nop


P735: !_PREFETCH [11] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_37:
prefetch [%g0], 2

P736: !_SWAP [4] (maybe <- 0x800006) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P737: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_37
nop

P738: !_BSTC [15] (maybe <- 0x4000000c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_38:
wr %g0, 0xe0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_38
nop

P739: !_CASX [13] (maybe <- 0x800007) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_39:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P740: !_PREFETCH [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i2 + 4] %asi, 21
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_39
nop

P741: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_40:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_40
nop

P742: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_41:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 4

P743: !_DWLD [1] (Int)
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P744: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_41
nop

P745: !_QWST [8] (maybe <- 0x4000000e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_42:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_1_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_42
nop

P746: !_PREFETCH [2] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_43:
prefetch [%i1 + 4], 21

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET746
nop
RET746:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P747: !_DWLD [12] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P748: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_43
nop

P749: !_PREFETCH [5] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_44:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 20

P750: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_44
nop

P751: !_BST [13] (maybe <- 0x40000010) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_45:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P752: !_PREFETCH [7] (Int) (Faults) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22
loop_exit_1_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_45
nop

P753: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_46:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P754: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_46
nop

P755: !_QWLD [14] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_47:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_47
nop

P756: !_BSTC [3] (maybe <- 0x40000012) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_48:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P757: !_FLUSH [5] (Int) (Loop exit)
! Unsupported instruction
loop_exit_1_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_48
nop

P758: !_BSTC [7] (maybe <- 0x40000014) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_49:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_49
nop

P759: !_DWST [2] (maybe <- 0x800008) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_50:
mov %l4, %l3 
stx %l3, [%i1 + 0]
add   %l4, 1, %l4

P760: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_50
nop

P761: !_LD [6] (Int) (Loop entry) (Branch target of P1162)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_51:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P762
nop

TARGET1162:
ba RET1162
nop


P762: !_LD [7] (Int) (Loop exit) (LE) (CBR)
wr %g0, 0x88, %asi
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET762
nop
RET762:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_51
nop

P763: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_52:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P764: !_LD [10] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET764
nop
RET764:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P765: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i2 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_52
nop

P766: !_QWST [1] (maybe <- 0x40000016) (FP) (Loop entry) (Branch target of P870)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_53:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
ba P767
nop

TARGET870:
ba RET870
nop


P767: !_DWST [2] (maybe <- 0x40000018) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]
loop_exit_1_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_53
nop

P768: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_54:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P769: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P770: !_LD [4] (Int) (Loop exit)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_54
nop

P771: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_55:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P772: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_55
nop

P773: !_QWLD [10] (FP) (Loop entry) (Loop exit) (Branch target of P978)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_56:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_56
nop
ba P774
nop

TARGET978:
ba RET978
nop


P774: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_57:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 0
loop_exit_1_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_57
nop

P775: !_FLUSH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_58:
! Unsupported instruction

P776: !_DWST [12] (maybe <- 0x40000019) (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_1_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_58
nop

P777: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_59:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P778: !_LD [4] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_59
nop

P779: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_60:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P780: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_60
nop

P781: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_61:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P782: !_REPLACEMENT [1] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_61
nop

P783: !_BLD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_62:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P784: !_LD [3] (FP) (Loop exit)
ld [%i1 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_62
nop

P785: !_BLD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_63:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P786: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P787: !_LD [3] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_63
nop

P788: !_LD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_64:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P789: !_LD [4] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_64
nop

P790: !_REPLACEMENT [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_65:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_1_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_65
nop

P791: !_PREFETCH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_66:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 2
loop_exit_1_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_66
nop

P792: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_67:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_67
nop

P793: !_LD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_68:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P794: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_68
nop

P795: !_LD [5] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_69:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P796: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_69
nop

P797: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_70:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_70
nop

P798: !_DWST [13] (maybe <- 0x4000001a) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_71:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

P799: !_QWLD [3] (FP) (Loop exit)
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_71
nop

P800: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_72:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P801: !_DWST [0] (maybe <- 0x4000001b) (FP)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 0]

P802: !_LD [2] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_72
nop

P803: !_MEMBAR (Int) (Loop entry) (Loop exit) (Branch target of P1023)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_73:
membar #StoreLoad
loop_exit_1_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_73
nop
ba P804
nop

TARGET1023:
ba RET1023
nop


P804: !_CASX [4] (maybe <- 0x800009) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_74:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_74
nop

P805: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_75:
membar #StoreLoad

P806: !_PREFETCH [14] (Int) (Loop exit) (Branch target of P1040)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 28
loop_exit_1_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_75
nop
ba P807
nop

TARGET1040:
ba RET1040
nop


P807: !_LD [1] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_76:
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P808: !_PREFETCH [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 21

P809: !_LD [8] (Int) (NF) (Faults) (Loop exit) (Branch target of P1101)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_76
nop
ba P810
nop

TARGET1101:
ba RET1101
nop


P810: !_ST [11] (maybe <- 0x4000001c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_77:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P811: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_77
nop

P812: !_CAS [1] (maybe <- 0x80000a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_78:
add %i0, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P813: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_78
nop

P814: !_CAS [3] (maybe <- 0x80000b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_79:
add %i1, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P815: !_LD [2] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
lda    [%i1 + 4] %asi, %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_79
nop

P816: !_BLD [1] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_80:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P817: !_CASX [4] (maybe <- 0x80000c) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_80
nop

P818: !_BSTC [12] (maybe <- 0x4000001d) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_81:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_81
nop

P819: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_82:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_82
nop

P820: !_CASX [12] (maybe <- 0x80000d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_83:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_83
nop

P821: !_REPLACEMENT [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_84:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_1_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_84
nop

P822: !_DWST [15] (maybe <- 0x80000e) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_85:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_1_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_85
nop

P823: !_BLD [6] (FP) (Loop entry) (Loop exit) (Branch target of P1179)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_86:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_86
nop
ba P824
nop

TARGET1179:
ba RET1179
nop


P824: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_87:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P825: !_FLUSH [9] (Int) (Loop exit) (Branch target of P863)
! Unsupported instruction
loop_exit_1_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_87
nop
ba P826
nop

TARGET863:
ba RET863
nop


P826: !_DWLD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_88:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P827: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_88
nop

P828: !_BSTC [0] (maybe <- 0x4000001f) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_89:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P829: !_BST [7] (maybe <- 0x40000021) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_89
nop

P830: !_LD [0] (FP) (Loop entry) (Branch target of P1261)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_90:
ld [%i0 + 4], %f0
! 1 addresses covered
ba P831
nop

TARGET1261:
ba RET1261
nop


P831: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P832: !_LD [0] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_90
nop

P833: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_91:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_91
nop

P834: !_ST [15] (maybe <- 0x40000023) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_92:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P835: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P836: !_LD [14] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_92
nop

P837: !_CASX [7] (maybe <- 0x80000f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_93:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_93
nop

P838: !_DWLD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_94:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P839: !_ST [12] (maybe <- 0x800010) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P840: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_94
nop

P841: !_LD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_95:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P842: !_PREFETCH [7] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 24

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET842
nop
RET842:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_95
nop

P843: !_REPLACEMENT [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_96:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P844: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 23
loop_exit_1_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_96
nop

P845: !_REPLACEMENT [15] (Int) (Loop entry) (Branch target of P1055)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_97:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
ba P846
nop

TARGET1055:
ba RET1055
nop


P846: !_BSTC [11] (maybe <- 0x40000024) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_97
nop

P847: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_98:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P848: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P849: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_98
nop

P850: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_99:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 4
loop_exit_1_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_99
nop

P851: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_100:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P852: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_100
nop

P853: !_CASX [15] (maybe <- 0x800011) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_101:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P854: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_101
nop

P855: !_SWAP [6] (maybe <- 0x800012) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_102:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P856: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_102
nop

P857: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_103:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_103
nop

P858: !_QWLD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_104:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P859: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_104
nop

P860: !_PREFETCH [6] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_105:
prefetch [%g0], 2

P861: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_105
nop

P862: !_LD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_106:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P863: !_LD [5] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET863
nop
RET863:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_106
nop

P864: !_DWST [13] (maybe <- 0x800013) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_107:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_1_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_107
nop

P865: !_PREFETCH [14] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_108:
prefetch [%g0], 17
loop_exit_1_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_108
nop

P866: !_SWAP [8] (maybe <- 0x800014) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_109:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET866
nop
RET866:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P867: !_CASX [6] (maybe <- 0x800015) (Int) (Branch target of P1050)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %l6
! move %l6(upper) -> %o0(lower)
srlx %l6, 32, %l7
or %l7, %o0, %o0
! move %l6(lower) -> %o1(upper)
sllx %l6, 32, %o1
mov  %l6, %l7
mov %l4, %l6
casx [%i2], %l7, %l6
! move %l6(upper) -> %o1(lower)
srlx %l6, 32, %l7
or %l7, %o1, %o1
! move %l6(lower) -> %o2(upper)
sllx %l6, 32, %o2
add  %l4, 1, %l4
ba P868
nop

TARGET1050:
ba RET1050
nop


P868: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_1_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_109
nop

P869: !_QWST [13] (maybe <- 0x40000026) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_110:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P870: !_BSTC [2] (maybe <- 0x40000028) (FP) (Loop exit) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET870
nop
RET870:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_1_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_110
nop

P871: !_LD [10] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_111:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P872: !_REPLACEMENT [12] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_111
nop

P873: !_QWST [0] (maybe <- 0x4000002a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_112:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_1_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_112
nop

P874: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_113:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P875: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_113
nop

P876: !_LD [12] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_114:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P877: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_114
nop

P878: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_115:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 1

P879: !_SWAP [2] (maybe <- 0x800016) (Int)
mov %l4, %o0
swap  [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P880: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_115
nop

P881: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_116:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P882: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_116
nop

P883: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_117:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P884: !_LD [3] (FP) (Loop exit)
ld [%i1 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_117
nop

P885: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_118:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P886: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P887: !_LD [13] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_118
nop

P888: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_119:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P889: !_PREFETCH [2] (Int)
prefetch [%i1 + 4], 4

P890: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_119
nop

P891: !_FLUSH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_120:
! Unsupported instruction
loop_exit_1_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_120
nop

P892: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_121:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 0

P893: !_DWLD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P894: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_121
nop

P895: !_BSTC [0] (maybe <- 0x4000002c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_122:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P896: !_BSTC [10] (maybe <- 0x4000002e) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_122
nop

P897: !_LD [12] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_123:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P898: !_LD [12] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_123
nop

P899: !_PREFETCH [14] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_124:
prefetch [%g0], 2

P900: !_ST [8] (maybe <- 0x800017) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_1_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_124
nop

P901: !_PREFETCH [15] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_125:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 19

P902: !_BST [3] (maybe <- 0x40000030) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_1_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_125
nop

P903: !_SWAP [7] (maybe <- 0x800018) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_126:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P904: !_PREFETCH [7] (Int) (Branch target of P1249)
prefetch [%i2 + 12], 21
ba P905
nop

TARGET1249:
ba RET1249
nop


P905: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_126
nop

P906: !_BSTC [5] (maybe <- 0x40000032) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_127:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_127
nop

P907: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_128:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_128
nop

P908: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_129:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_129
nop

P909: !_DWST [14] (maybe <- 0x800019) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_130:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %l7 
stx %l7, [%i3 + 0]
add   %l4, 1, %l4
loop_exit_1_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_130
nop

P910: !_REPLACEMENT [4] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_131:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET910
nop
RET910:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_1_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_131
nop

P911: !_LD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_132:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P912: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_132
nop

P913: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_133:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P914: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_133
nop

P915: !_DWLD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_134:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P916: !_CAS [7] (maybe <- 0x80001a) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_134
nop

P917: !_LD [10] (Int) (Loop entry) (Branch target of P721)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_135:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P918
nop

TARGET721:
ba RET721
nop


P918: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_135
nop

P919: !_LD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_136:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P920: !_LD [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P921: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_136
nop

P922: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_137:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P923: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_137
nop

P924: !_LD [15] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_138:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P925: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_138
nop

P926: !_LD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_139:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P927: !_DWST [4] (maybe <- 0x80001b) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 0]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_139
nop

P928: !_BLD [4] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_140:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET928
nop
RET928:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_140
nop

P929: !_PREFETCH [8] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_141:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 22
loop_exit_1_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_141
nop

P930: !_SWAP [4] (maybe <- 0x80001c) (Int) (Loop entry) (Branch target of P1076)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_142:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P931
nop

TARGET1076:
ba RET1076
nop


P931: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_142
nop

P932: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_143:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P933: !_PREFETCH [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 2

P934: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_143
nop

P935: !_BST [3] (maybe <- 0x40000034) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_144:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P936: !_DWLD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_144
nop

P937: !_BLD [10] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_145:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P938: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_145
nop

P939: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_146:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_146
nop

P940: !_QWST [10] (maybe <- 0x40000036) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_147:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P941: !_LD [9] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET941
nop
RET941:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_147
nop

P942: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_148:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_148
nop

P943: !_PREFETCH [1] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_149:
wr %g0, 0x82, %asi
prefetcha [%i0 + 12] %asi, 22
loop_exit_1_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_149
nop

P944: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_150:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2
loop_exit_1_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_150
nop

P945: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_151:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P946: !_LD [1] (FP) (NF)
wr %g0, 0x82, %asi
lda    [%i0 + 12] %asi, %f0
! 1 addresses covered

P947: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_151
nop

P948: !_CAS [6] (maybe <- 0x80001d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_152:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_152
nop

P949: !_DWST [6] (maybe <- 0x80001e) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_153:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 0]
add   %l4, 1, %l4
loop_exit_1_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_153
nop

P950: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_154:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 23

P951: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P952: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_154
nop

P953: !_PREFETCH [5] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_155:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 1

P954: !_LD [5] (FP) (Loop exit)
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_155
nop

P955: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_156:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P956: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_156
nop

P957: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_157:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P958: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_157
nop

P959: !_CASX [13] (maybe <- 0x80001f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_158:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_158
nop

P960: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_159:
prefetch [%i1 + 4], 3
loop_exit_1_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_159
nop

P961: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_160:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P962: !_LD [9] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P963: !_LD [7] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_160
nop

P964: !_BST [2] (maybe <- 0x40000038) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_161:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_1_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_161
nop

P965: !_FLUSH [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_162:
! Unsupported instruction

P966: !_FLUSH [5] (Int) (Loop exit)
! Unsupported instruction
loop_exit_1_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_162
nop

P967: !_DWST [2] (maybe <- 0x4000003a) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_163:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]

P968: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+12], %l7
st %l7, [%i3+12]
add %i3, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_1_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_163
nop

P969: !_LD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_164:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P970: !_BST [3] (maybe <- 0x4000003b) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_164
nop

P971: !_CASX [1] (maybe <- 0x800020) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_165:
add %i0, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P972: !_CAS [8] (maybe <- 0x800021) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l6
lduw [%l6], %o2
mov %o2, %l3
! move %l3(lower) -> %o2(upper)
sllx %l3, 32, %o2
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o2(lower)
srl %o5, 0, %l3
or %l3, %o2, %o2
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_1_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_165
nop

P973: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_166:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P974: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_166
nop

P975: !_SWAP [5] (maybe <- 0x800022) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_167:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P976: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_167
nop

P977: !_BSTC [12] (maybe <- 0x4000003d) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_168:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P978: !_PREFETCH [6] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET978
nop
RET978:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_1_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_168
nop

P979: !_PREFETCH [8] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_169:
prefetch [%g0], 3
loop_exit_1_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_169
nop

P980: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_170:
prefetch [%g0], 0
loop_exit_1_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_170
nop

P981: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_171:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P982: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P983: !_LD [10] (Int) (Loop exit) (CBR)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET983
nop
RET983:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_171
nop

P984: !_FLUSHI [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_172:
flush %g0 

P985: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_172
nop

P986: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_173:
ld [%i0 + 12], %f0
! 1 addresses covered

P987: !_CASX [14] (maybe <- 0x800023) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_173
nop

P988: !_BST [4] (maybe <- 0x4000003f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_174:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_174
nop

P989: !_BST [12] (maybe <- 0x40000041) (FP) (Loop entry) (Branch target of P675)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_175:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
ba P990
nop

TARGET675:
ba RET675
nop


P990: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_1_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_175
nop

P991: !_DWST [10] (maybe <- 0x40000043) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_176:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]

P992: !_PREFETCH [11] (Int) (Loop exit)
prefetch [%i3 + 12], 23
loop_exit_1_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_176
nop

P993: !_PREFETCH [11] (Int) (NF) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_177:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET993
nop
RET993:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_1_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_177
nop

P994: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_178:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_178
nop

P995: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_179:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22

P996: !_FLUSH [11] (Int) (Loop exit)
! Unsupported instruction
loop_exit_1_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_179
nop

P997: !_DWST [6] (maybe <- 0x40000044) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_180:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]

P998: !_LD [7] (Int)
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P999: !_LD [5] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_180
nop

P1000: !_FLUSH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_181:
! Unsupported instruction

P1001: !_BSTC [8] (maybe <- 0x40000045) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_181
nop

P1002: !_LD [10] (FP) (Loop entry) (Loop exit) (Branch target of P842)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_182:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_182
nop
ba P1003
nop

TARGET842:
ba RET842
nop


P1003: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_183:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1004: !_LD [15] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_183
nop

P1005: !_BST [4] (maybe <- 0x40000047) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_184:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_184
nop

P1006: !_PREFETCH [15] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_185:
prefetch [%g0], 0
loop_exit_1_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_185
nop

P1007: !_QWST [6] (maybe <- 0x40000049) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_186:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_1_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_186
nop

P1008: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_187:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_187
nop

P1009: !_DWST [9] (maybe <- 0x4000004b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_188:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
loop_exit_1_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_188
nop

P1010: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_189:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1011: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1012: !_LD [6] (Int) (Loop exit)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_189
nop

P1013: !_BLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_190:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_190
nop

P1014: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_191:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 23

P1015: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_191
nop

P1016: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_192:
ld [%i1 + 12], %f0
! 1 addresses covered

P1017: !_LD [10] (Int) (LE) (Branch target of P910)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1018
nop

TARGET910:
ba RET910
nop


P1018: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_192
nop

P1019: !_BLD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_193:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_193
nop

P1020: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_194:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1021: !_LD [10] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1021
nop
RET1021:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_194
nop

P1022: !_SWAP [3] (maybe <- 0x800024) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_195:
mov %l4, %o0
swap  [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1023: !_LD [8] (Int) (NF) (Faults) (Loop exit) (CBR)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1023
nop
RET1023:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_195
nop

P1024: !_DWST [5] (maybe <- 0x800025) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_196:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 8]
add   %l4, 1, %l4

P1025: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_196
nop

P1026: !_CAS [2] (maybe <- 0x800026) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_197:
add %i1, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P1027: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P1028: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_197
nop

P1029: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_198:
prefetch [%i0 + 12], 21
loop_exit_1_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_198
nop

P1030: !_LD [1] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_199:
ld [%i0 + 12], %f0
! 1 addresses covered

P1031: !_FLUSHI [14] (Int) (Loop exit)
flush %g0 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_199
nop

P1032: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_200:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1033: !_LD [12] (FP) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered

P1034: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_200
nop

P1035: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_201:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1036: !_LD [13] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P1037: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_201
nop

P1038: !_CAS [14] (maybe <- 0x800027) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_202:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P1039: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_202
nop

P1040: !_LD [12] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_203:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1040
nop
RET1040:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1041: !_SWAP [1] (maybe <- 0x800028) (Int) (Loop exit)
mov %l4, %l3
swap  [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_203
nop

P1042: !_BLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_204:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_204
nop

P1043: !_LD [10] (FP) (Loop entry) (Branch target of P684)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_205:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
ba P1044
nop

TARGET684:
ba RET684
nop


P1044: !_REPLACEMENT [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_205
nop

P1045: !_LD [9] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_206:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P1046: !_LD [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1047: !_LD [15] (Int) (Loop exit)
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_206
nop

P1048: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_207:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1049: !_LD [4] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_207
nop

P1050: !_ST [4] (maybe <- 0x4000004c) (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_208:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1050
nop
RET1050:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1051: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1052: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_208
nop

P1053: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_209:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 2
loop_exit_1_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_209
nop

P1054: !_BSTC [15] (maybe <- 0x4000004d) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_210:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_210
nop

P1055: !_DWLD [3] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_211:
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1055
nop
RET1055:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1056: !_QWLD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_211
nop

P1057: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_212:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1058: !_LD [10] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1058
nop
RET1058:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_212
nop

P1059: !_BST [5] (maybe <- 0x4000004f) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_213:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1060: !_QWLD [3] (FP) (Loop exit)
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_213
nop

P1061: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_214:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1062: !_QWLD [11] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1063: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_214
nop

P1064: !_CASX [10] (maybe <- 0x800029) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_215:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_215
nop

P1065: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_216:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_216
nop

P1066: !_CAS [8] (maybe <- 0x80002a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_217:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_217
nop

P1067: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_218:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3

P1068: !_BST [8] (maybe <- 0x40000051) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_218
nop

P1069: !_PREFETCH [11] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_219:
prefetch [%g0], 16
loop_exit_1_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_219
nop

P1070: !_FLUSH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_220:
! Unsupported instruction
loop_exit_1_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_220
nop

P1071: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_221:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21

P1072: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 3
loop_exit_1_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_221
nop

P1073: !_DWLD [6] (FP) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_222:
wr %g0, 0x82, %asi
ldda    [%g0] %asi, %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_222
nop

P1074: !_CASX [0] (maybe <- 0x80002b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_223:
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i0], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1075: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_223
nop

P1076: !_BSTC [11] (maybe <- 0x40000053) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_224:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1076
nop
RET1076:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1077: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
loop_exit_1_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_224
nop

P1078: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_225:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1079: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_225
nop

P1080: !_DWLD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_226:
ldx [%i1 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1081: !_LD [11] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1081
nop
RET1081:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_226
nop

P1082: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_227:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1083: !_CAS [6] (maybe <- 0x80002c) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_227
nop

P1084: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_228:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1085: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_228
nop

P1086: !_PREFETCH [12] (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_229:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 21
loop_exit_1_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_229
nop

P1087: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_230:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1088: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_230
nop

P1089: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_231:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1090: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_231
nop

P1091: !_QWLD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_232:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_232
nop

P1092: !_FLUSH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_233:
! Unsupported instruction
loop_exit_1_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_233
nop

P1093: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_234:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_234
nop

P1094: !_CAS [12] (maybe <- 0x80002d) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_235:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l6
lduwa [%l6] %asi, %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l7, %o5
casa [%l6] %asi, %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_235
nop

P1095: !_QWLD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_236:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_236
nop

P1096: !_QWLD [2] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_237:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1097: !_BST [13] (maybe <- 0x40000055) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_237
nop

P1098: !_CAS [12] (maybe <- 0x80002e) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_238:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_238
nop

P1099: !_BSTC [14] (maybe <- 0x40000057) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_239:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_239
nop

P1100: !_LD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_240:
ld [%i1 + 4], %f0
! 1 addresses covered

P1101: !_PREFETCH [9] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 17

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1101
nop
RET1101:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_240
nop

P1102: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit) (Branch target of P1058)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_241:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_1_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_241
nop
ba P1103
nop

TARGET1058:
ba RET1058
nop


P1103: !_SWAP [12] (maybe <- 0x80002f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_242:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1104: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_242
nop

P1105: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_243:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_243
nop

P1106: !_CAS [2] (maybe <- 0x800030) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_244:
add %i1, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_244
nop

P1107: !_QWST [10] (maybe <- 0x40000059) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_245:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P1108: !_BSTC [13] (maybe <- 0x4000005b) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_245
nop

P1109: !_BLD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_246:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1110: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1111: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_246
nop

P1112: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_247:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_247
nop

P1113: !_CAS [7] (maybe <- 0x800031) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_248:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P1114: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P1115: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_248
nop

P1116: !_LD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_249:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1117: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 3
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_249
nop

P1118: !_DWST [2] (maybe <- 0x800032) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_250:
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 2 

sethi %hi(0x200000), %l3
sub   %i1, %l3, %i1
mov %l4, %l6 
stx %l6, [%i1 + 0]
add   %l4, 1, %l4

sethi %hi(0x200000), %l3
add   %i1, %l3, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_1_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_250
nop

P1119: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_251:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 28

P1120: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_251
nop

P1121: !_LD [1] (FP) (Loop entry) (Loop exit) (Branch target of P764)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_252:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_252
nop
ba P1122
nop

TARGET764:
ba RET764
nop


P1122: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_253:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1123: !_LD [4] (Int) (Loop exit)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_253
nop

P1124: !_BSTC [12] (maybe <- 0x4000005d) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_254:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1125: !_BSTC [8] (maybe <- 0x4000005f) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_1_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_254
nop

P1126: !_CASX [2] (maybe <- 0x800033) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_255:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i1], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1127: !_BSTC [10] (maybe <- 0x40000061) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_255
nop

P1128: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_256:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1129: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_256
nop

P1130: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_257:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 1

P1131: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1132: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_257
nop

P1133: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_258:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1134: !_PREFETCH [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0

P1135: !_LD [2] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_258
nop

P1136: !_PREFETCH [7] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_259:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 24

P1137: !_PREFETCH [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 2
loop_exit_1_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_259
nop

P1138: !_FLUSH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_260:
! Unsupported instruction
loop_exit_1_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_260
nop

P1139: !_SWAP [7] (maybe <- 0x800034) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_261:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1139
nop
RET1139:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1140: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_261
nop

P1141: !_LD [5] (FP) (Loop entry) (Loop exit) (Branch target of P993)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_262:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_262
nop
ba P1142
nop

TARGET993:
ba RET993
nop


P1142: !_SWAP [9] (maybe <- 0x800035) (Int) (Loop entry) (Branch target of P1223)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_263:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P1143
nop

TARGET1223:
ba RET1223
nop


P1143: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_263
nop

P1144: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_264:
ld [%i1 + 12], %f0
! 1 addresses covered

P1145: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_264
nop

P1146: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_265:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_265
nop

P1147: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_266:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_266
nop

P1148: !_DWLD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_267:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1149: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_267
nop

P1150: !_BSTC [14] (maybe <- 0x40000063) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_268:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_268
nop

P1151: !_CASX [0] (maybe <- 0x800036) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_269:
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i0], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_269
nop

P1152: !_ST [11] (maybe <- 0x800037) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_270:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4
loop_exit_1_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_270
nop

P1153: !_BSTC [6] (maybe <- 0x40000065) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_271:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_271
nop

P1154: !_CASX [12] (maybe <- 0x800038) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_272:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1155: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_272
nop

P1156: !_DWLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_273:
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_273
nop

P1157: !_DWST [11] (maybe <- 0x800039) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_274:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 8]
add   %l4, 1, %l4

P1158: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1159: !_LD [11] (Int) (Loop exit)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_274
nop

P1160: !_BLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_275:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_275
nop

P1161: !_FLUSH [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_276:
! Unsupported instruction

P1162: !_LD [13] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1162
nop
RET1162:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1163: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_276
nop

P1164: !_BSTC [13] (maybe <- 0x40000067) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_277:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_277
nop

P1165: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_278:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_1_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_278
nop

P1166: !_PREFETCH [5] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_279:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 21
loop_exit_1_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_279
nop

P1167: !_BLD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_280:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1168: !_LD [8] (FP) (Loop exit)
ld [%i3 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_280
nop

P1169: !_LD [15] (FP) (Loop entry) (Branch target of P941)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_281:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
ba P1170
nop

TARGET941:
ba RET941
nop


P1170: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_281
nop

P1171: !_DWST [2] (maybe <- 0x40000069) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_282:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]
loop_exit_1_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_282
nop

P1172: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_283:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1173: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_283
nop

P1174: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_284:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 16
loop_exit_1_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_284
nop

P1175: !_CAS [15] (maybe <- 0x80003a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_285:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P1176: !_ST [6] (maybe <- 0x80003b) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_285
nop

P1177: !_BLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_286:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_286
nop

P1178: !_QWLD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_287:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1179: !_BST [4] (maybe <- 0x4000006a) (FP) (Loop exit) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1179
nop
RET1179:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_287
nop

P1180: !_SWAP [13] (maybe <- 0x80003c) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_288:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1181: !_LD [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_288
nop

P1182: !_DWLD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_289:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P1183: !_PREFETCH [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i3 + 12] %asi, 4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_289
nop

P1184: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_290:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1185: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_290
nop

P1186: !_QWST [0] (maybe <- 0x4000006c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_291:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_1_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_291
nop

P1187: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_292:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_292
nop

P1188: !_DWST [3] (maybe <- 0x80003d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_293:
mov %l4, %l7 
stx %l7, [%i1 + 8]
add   %l4, 1, %l4

P1189: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1190: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_293
nop

P1191: !_DWST [9] (maybe <- 0x4000006e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_294:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_1_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_294
nop

P1192: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_295:
prefetch [%i0 + 12], 18
loop_exit_1_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_295
nop

P1193: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_296:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1194: !_PREFETCH [10] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 3

P1195: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_296
nop

P1196: !_LD [7] (FP) (NF) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_297:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1196
nop
RET1196:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_297
nop

P1197: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_298:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 0

P1198: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_298
nop

P1199: !_REPLACEMENT [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_299:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_1_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_299
nop

P1200: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_300:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1201: !_BSTC [5] (maybe <- 0x4000006f) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1202: !_LD [4] (Int) (Loop exit)
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_300
nop

P1203: !_BSTC [9] (maybe <- 0x40000071) (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_301:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1203
nop
RET1203:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1204: !_DWLD [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1205: !_LD [8] (Int) (Loop exit)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_301
nop

P1206: !_LD [11] (FP) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_302:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_302
nop

P1207: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_303:
prefetch [%i1 + 12], 22
loop_exit_1_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_303
nop

P1208: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_304:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2

P1209: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1210: !_LD [3] (Int) (Loop exit) (Branch target of P746)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_304
nop
ba P1211
nop

TARGET746:
ba RET746
nop


P1211: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_305:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_305
nop

P1212: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_306:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_306
nop

P1213: !_DWST [13] (maybe <- 0x80003e) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_307:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_1_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_307
nop

P1214: !_CASX [13] (maybe <- 0x80003f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_308:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_308
nop

P1215: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_309:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22
loop_exit_1_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_309
nop

P1216: !_PREFETCH [6] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_310:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 23

P1217: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 1
loop_exit_1_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_310
nop

P1218: !_QWLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_311:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_311
nop

P1219: !_PREFETCH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_312:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
loop_exit_1_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_312
nop

P1220: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_313:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_1_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_313
nop

P1221: !_REPLACEMENT [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_314:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_1_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_314
nop

P1222: !_QWLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_315:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_315
nop

P1223: !_LD [13] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_316:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1223
nop
RET1223:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1224: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_316
nop

P1225: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_317:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1226: !_REPLACEMENT [1] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_317
nop

P1227: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_318:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1228: !_PREFETCH [11] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 2

P1229: !_LD [13] (Int) (Loop exit)
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_318
nop

P1230: !_BSTC [5] (maybe <- 0x40000073) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_319:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1231: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 4
loop_exit_1_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_319
nop

P1232: !_QWST [14] (maybe <- 0x40000075) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_320:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P1233: !_BLD [3] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_320
nop

P1234: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_321:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1235: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_321
nop

P1236: !_ST [9] (maybe <- 0x800040) (Int) (Loop entry) (Branch target of P1021)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_322:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
ba P1237
nop

TARGET1021:
ba RET1021
nop


P1237: !_REPLACEMENT [2] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_1_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_322
nop

P1238: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_323:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1239: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_323
nop

P1240: !_QWST [0] (maybe <- 0x40000077) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_324:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_1_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_324
nop

P1241: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_325:
membar #StoreLoad
loop_exit_1_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_325
nop

P1242: !_CASX [11] (maybe <- 0x800041) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_326:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_326
nop

P1243: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_327:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_327
nop

P1244: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_328:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_328
nop

P1245: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_329:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_329
nop

P1246: !_ST [1] (maybe <- 0x800042) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_330:
stw   %l4, [%i0 + 12 ]
add   %l4, 1, %l4

P1247: !_QWLD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_330
nop

P1248: !_LD [7] (Int) (Loop entry) (Branch target of P1196)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_331:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1249
nop

TARGET1196:
ba RET1196
nop


P1249: !_LD [14] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1249
nop
RET1249:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_331
nop

P1250: !_QWST [1] (maybe <- 0x40000079) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_332:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_1_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_332
nop

P1251: !_DWST [13] (maybe <- 0x4000007b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_333:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
loop_exit_1_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_333
nop

P1252: !_PREFETCH [0] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_334:
prefetch [%g0], 3

P1253: !_FLUSHI [13] (Int) (Loop exit)
flush %g0 
loop_exit_1_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_334
nop

P1254: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_335:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1255: !_BSTC [3] (maybe <- 0x4000007c) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1255
nop
RET1255:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1256: !_LD [13] (Int) (Loop exit)
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_335
nop

P1257: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_336:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 22

P1258: !_BLD [12] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_336
nop

P1259: !_BST [1] (maybe <- 0x4000007e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_337:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_1_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_337
nop

P1260: !_FLUSH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_338:
! Unsupported instruction
loop_exit_1_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_338
nop

P1261: !_QWST [4] (maybe <- 0x40000080) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_339:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1261
nop
RET1261:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1262: !_CASX [15] (maybe <- 0x800043) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_339
nop

P1263: !_QWST [0] (maybe <- 0x40000082) (FP) (Loop entry) (Branch target of P1139)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_340:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
ba P1264
nop

TARGET1139:
ba RET1139
nop


P1264: !_PREFETCH [1] (Int) (Loop exit)
prefetch [%i0 + 12], 0
loop_exit_1_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_340
nop

P1265: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_341:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1266: !_LD [9] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_341
nop

P1267: !_ST [12] (maybe <- 0x40000084) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_342:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_1_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_342
nop

P1268: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_343:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 20

P1269: !_CAS [11] (maybe <- 0x800044) (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_343
nop

P1270: !_DWST [8] (maybe <- 0x40000085) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_344:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_1_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_344
nop

P1271: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_345:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_345
nop

P1272: !_SWAP [6] (maybe <- 0x800045) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_346:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1273: !_DWST [2] (maybe <- 0x40000086) (FP)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]

P1274: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_346
nop

P1275: !_LD [5] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_347:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1276: !_LD [6] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1277: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_347
nop

P1278: !_QWST [11] (maybe <- 0x40000087) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_348:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P1279: !_LD [15] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1280: !_LD [1] (Int) (Loop exit) (Branch target of P1203)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_348
nop
ba P1281
nop

TARGET1203:
ba RET1203
nop


P1281: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_349:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3
loop_exit_1_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_349
nop

P1282: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_350:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_350
nop

P1283: !_CASX [12] (maybe <- 0x800046) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_351:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_351
nop

P1284: !_CASX [7] (maybe <- 0x800047) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_352:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_352
nop

P1285: !_DWLD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_353:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P1286: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_353
nop

P1287: !_BSTC [5] (maybe <- 0x40000089) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_354:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1288: !_PREFETCH [4] (Int) (Faults) (Loop exit)
prefetch [%g0], 2
loop_exit_1_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_354
nop

P1289: !_CAS [15] (maybe <- 0x800048) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_355:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P1290: !_SWAP [7] (maybe <- 0x800049) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o1
swap  [%i3 + 12], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P1291: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_355
nop

P1292: !_CASX [11] (maybe <- 0x80004a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_356:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_356
nop

P1293: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_357:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1294: !_ST [10] (maybe <- 0x4000008b) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

P1295: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_357
nop

P1296: !_LD [15] (FP) (Loop entry) (Loop exit) (Branch target of P866)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_358:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_358
nop
ba P1297
nop

TARGET866:
ba RET866
nop


P1297: !_SWAP [12] (maybe <- 0x80004b) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_359:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1298: !_LD [10] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1299: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_359:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_359
nop

P1300: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_360:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_1_360:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_360
nop

P1301: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_361:
membar #StoreLoad

P1302: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_361:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_361
nop

P1303: !_REPLACEMENT [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_362:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_1_362:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_362
nop

P1304: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_363:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 3
loop_exit_1_363:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_363
nop

P1305: !_PREFETCH [6] (Int) (Faults) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_364:
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 3

P1306: !_REPLACEMENT [6] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_1_364:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_364
nop

P1307: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_365:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 2

P1308: !_PREFETCH [3] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 2
loop_exit_1_365:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_365
nop

P1309: !_PREFETCH [10] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_366:
prefetch [%g0], 16

P1310: !_BSTC [13] (maybe <- 0x4000008c) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_1_366:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_366
nop

P1311: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_367:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1312: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_367:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_367
nop

P1313: !_PREFETCH [11] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_368:
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 21
loop_exit_1_368:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_368
nop

P1314: !_ST [4] (maybe <- 0x4000008e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_369:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

P1315: !_CASX [11] (maybe <- 0x80004c) (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_1_369:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_369
nop

P1316: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_370:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1317: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_370:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_370
nop

P1318: !_LD [5] (Int) (NF) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_371:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1319: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_371:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_371
nop

P1320: !_DWLD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_372:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1321: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_372:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_372
nop

P1322: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_373:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 23
loop_exit_1_373:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_373
nop

P1323: !_DWST [5] (maybe <- 0x80004d) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_374:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4

P1324: !_PREFETCH [8] (Int) (Faults) (Loop exit)
prefetch [%g0], 30
loop_exit_1_374:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_374
nop

P1325: !_QWLD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_375:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1326: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_1_375:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_375
nop

P1327: !_DWST [1] (maybe <- 0x80004e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_376:
mov %l4, %l3 
stx %l3, [%i0 + 8]
add   %l4, 1, %l4

P1328: !_PREFETCH [12] (Int) (Faults) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_1_376:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_376
nop

P1329: !_FLUSH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_377:
! Unsupported instruction
loop_exit_1_377:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_377
nop

P1330: !_REPLACEMENT [15] (Int) (Loop entry) (Branch target of P762)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_378:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
ba P1331
nop

TARGET762:
ba RET762
nop


P1331: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1332: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_378:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_378
nop

P1333: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_379:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1334: !_SWAP [10] (maybe <- 0x80004f) (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %l6
swap  [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_379:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_379
nop

P1335: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_380:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1336: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_380:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_380
nop

P1337: !_FLUSH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_381:
! Unsupported instruction
loop_exit_1_381:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_381
nop

P1338: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_382:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_1_382:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_382
nop

P1339: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_383:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1340: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_1_383:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_383
nop

P1341: !_QWLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_1_384:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1342: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_1_384:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_384
nop

P1343: !_ST [14] (maybe <- 0x4000008f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_1_385:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_1_385:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_385
nop

P1344: !_MEMBAR (Int)
membar #StoreLoad

END_NODES1: ! Test instruction sequence for CPU 1 ends
sethi %hi(0xdead0e0f), %l3
or    %l3, %lo(0xdead0e0f), %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
stw %l3, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func2:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %o5
or    %o5, %lo(0xdeadbee0), %o5
stw   %o5, [%i5]
sethi %hi(0xdeadbee1), %o5
or    %o5, %lo(0xdeadbee1), %o5
stw   %o5, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x02deade1), %o5
or    %o5, %lo(0x02deade1), %o5
stw %o5, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x1000001), %l4
or    %l4, %lo(0x1000001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x40800001), %o5
or    %o5, %lo(0x40800001), %o5
stw %o5, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x35000000), %o5
or    %o5, %lo(0x35000000), %o5
stw %o5, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x5f06^4
sethi %hi(0x5f06), %l0
or    %l0, %lo(0x5f06), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES2: ! Test instruction sequence for CPU 2 begins

P1345: !_SWAP [14] (maybe <- 0x1000001) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_0:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1346: !_BSTC [9] (maybe <- 0x40800001) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1347: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_0
nop

P1348: !_BLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_1:
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_1
nop

P1349: !_SWAP [5] (maybe <- 0x1000002) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_2:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1350: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_2
nop

P1351: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_3:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_3
nop

P1352: !_BST [9] (maybe <- 0x40800003) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_4:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1353: !_BSTC [14] (maybe <- 0x40800005) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_4
nop

P1354: !_QWLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_5:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_5
nop

P1355: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_6:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_6
nop

P1356: !_PREFETCH [15] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_7:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 2
loop_exit_2_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_7
nop

P1357: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_8:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P1358: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 23
loop_exit_2_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_8
nop

P1359: !_FLUSH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_9:
! Unsupported instruction
loop_exit_2_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_9
nop

P1360: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_10:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1361: !_FLUSH [4] (Int)
! Unsupported instruction

P1362: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_10
nop

P1363: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_11:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1364: !_LD [1] (FP)
ld [%i0 + 12], %f0
! 1 addresses covered

P1365: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_11
nop

P1366: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_12:
prefetch [%i1 + 4], 4
loop_exit_2_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_12
nop

P1367: !_DWST [8] (maybe <- 0x1000003) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_13:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 0]
add   %l4, 1, %l4
loop_exit_2_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_13
nop

P1368: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_14:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1369: !_LD [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_14
nop

P1370: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_15:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_15
nop

P1371: !_SWAP [15] (maybe <- 0x1000004) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_16:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1372: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_16
nop

P1373: !_LD [1] (Int) (Loop entry) (Branch target of P1671)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_17:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1374
nop

TARGET1671:
ba RET1671
nop


P1374: !_PREFETCH [3] (Int)
prefetch [%i1 + 12], 23

P1375: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_17
nop

P1376: !_LD [14] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_18:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered

P1377: !_PREFETCH [13] (Int) (NF) (Faults) (Loop exit) (CBR)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1377
nop
RET1377:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_18
nop

P1378: !_LD [1] (Int) (Loop entry) (Branch target of P1940)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_19:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1379
nop

TARGET1940:
ba RET1940
nop


P1379: !_QWLD [4] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1380: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_19
nop

P1381: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_20:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_20
nop

P1382: !_DWST [11] (maybe <- 0x1000005) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_21:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %l7 
stx %l7, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_2_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_21
nop

P1383: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_22:
prefetch [%i1 + 12], 4

P1384: !_QWLD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_22
nop

P1385: !_BLD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_23:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1386: !_DWLD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1387: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_23
nop

P1388: !_LD [8] (FP) (Loop entry) (Loop exit) (Branch target of P1906)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_24:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_24
nop
ba P1389
nop

TARGET1906:
ba RET1906
nop


P1389: !_CASX [4] (maybe <- 0x1000006) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_25:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i3], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_25
nop

P1390: !_FLUSH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_26:
! Unsupported instruction

P1391: !_REPLACEMENT [7] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_2_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_26
nop

P1392: !_PREFETCH [11] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_27:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 18

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1392
nop
RET1392:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1393: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_27
nop

P1394: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_28:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_28
nop

P1395: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_29:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1396: !_LD [0] (FP)
ld [%i0 + 4], %f0
! 1 addresses covered

P1397: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_29
nop

P1398: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_30:
prefetch [%i0 + 12], 29

P1399: !_BSTC [7] (maybe <- 0x40800007) (FP) (Loop exit) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1399
nop
RET1399:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_30
nop

P1400: !_PREFETCH [6] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_31:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22
loop_exit_2_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_31
nop

P1401: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_32:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_32
nop

P1402: !_QWLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_33:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_33
nop

P1403: !_BSTC [4] (maybe <- 0x40800009) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_34:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_34
nop

P1404: !_QWST [10] (maybe <- 0x4080000b) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_35:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1404
nop
RET1404:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1405: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1406: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_35
nop

P1407: !_BST [15] (maybe <- 0x4080000d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_36:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1408: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_36
nop

P1409: !_QWLD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_37:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1410: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_2_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_37
nop

P1411: !_CASX [13] (maybe <- 0x1000007) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_38:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1412: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_38
nop

P1413: !_PREFETCH [10] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_39:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 22

P1414: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 24
loop_exit_2_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_39
nop

P1415: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_40:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1416: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_40
nop

P1417: !_LD [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_41:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1418: !_LD [2] (Int) (Loop exit) (Branch target of P1978)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_41
nop
ba P1419
nop

TARGET1978:
ba RET1978
nop


P1419: !_BLD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_42:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1420: !_QWLD [4] (FP) (NF) (Loop exit) (CBR) (Branch target of P1977)
wr %g0, 0x82, %asi
ldqa  [%i2 + 0] %asi, %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1420
nop
RET1420:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_2_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_42
nop
ba P1421
nop

TARGET1977:
ba RET1977
nop


P1421: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_43:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1422: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_43
nop

P1423: !_LD [7] (FP) (NF) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_44:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1423
nop
RET1423:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1424: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1425: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_44
nop

P1426: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_45:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 3
loop_exit_2_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_45
nop

P1427: !_DWST [1] (maybe <- 0x1000008) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_46:
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %l4, %l7, %l3
srl %l3, 8, %l3
sll %l4, 8, %o5
and %o5, %l7, %o5
or %o5, %l3, %o5
srl %o5, 16, %l3
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l3, %o5
sllx %o5, 32, %o5 
stxa %o5, [%i0 + 8 ] %asi
add   %l4, 1, %l4
loop_exit_2_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_46
nop

P1428: !_PREFETCH [5] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_47:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_2_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_47
nop

P1429: !_FLUSH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_48:
! Unsupported instruction
loop_exit_2_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_48
nop

P1430: !_DWLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_49:
ldd [%i0 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_49
nop

P1431: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_50:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1432: !_REPLACEMENT [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_50
nop

P1433: !_QWST [2] (maybe <- 0x4080000f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_51:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_2_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_51
nop

P1434: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_52:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1435: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_52
nop

P1436: !_QWLD [1] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_53:
wr %g0, 0x82, %asi
ldqa  [%i0 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1437: !_QWLD [2] (FP) (Loop exit)
ldq   [%i1 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_2_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_53
nop

P1438: !_BST [11] (maybe <- 0x40800011) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_54:
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1439: !_PREFETCH [10] (Int) (Loop exit)
prefetch [%i3 + 4], 22
loop_exit_2_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_54
nop

P1440: !_DWST [9] (maybe <- 0x1000009) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_55:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %l4, %o5, %l6
srl %l6, 8, %l6
sll %l4, 8, %l3
and %l3, %o5, %l3
or %l3, %l6, %l3
srl %l3, 16, %l6
sll %l3, 16, %l3
srl %l3, 0, %l3
or %l3, %l6, %l3
sllx %l3, 32, %l3 
stxa %l3, [%i2 + 8 ] %asi
add   %l4, 1, %l4
loop_exit_2_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_55
nop

P1441: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_56:
membar #StoreLoad

P1442: !_LD [13] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1442
nop
RET1442:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_56
nop

P1443: !_DWST [14] (maybe <- 0x40800013) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_57:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_2_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_57
nop

P1444: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_58:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1445: !_QWLD [4] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1446: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_58
nop

P1447: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_59:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1448: !_ST [12] (maybe <- 0x100000a) (Int)
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4

P1449: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_59
nop

P1450: !_LD [3] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_60:
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1451: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1452: !_LD [11] (Int) (Loop exit) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1452
nop
RET1452:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_60
nop

P1453: !_BLD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_61:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_61
nop

P1454: !_QWLD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_62:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_62
nop

P1455: !_LD [4] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_63:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1456: !_PREFETCH [2] (Int)
prefetch [%i1 + 4], 20

P1457: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_63
nop

P1458: !_QWST [15] (maybe <- 0x40800014) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_64:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P1459: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_64
nop

P1460: !_CAS [7] (maybe <- 0x100000b) (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_65:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %l4, %o5, %l7
srl %l7, 8, %l7
sll %l4, 8, %l3
and %l3, %o5, %l3
or %l3, %l7, %l3
srl %l3, 16, %l7
sll %l3, 16, %l3
srl %l3, 0, %l3
or %l3, %l7, %l3
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduwa [%o5] %asi, %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l3, %l6
casa [%o5] %asi, %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P1461: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_65
nop

P1462: !_BST [11] (maybe <- 0x40800016) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_66:
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1463: !_QWLD [3] (FP) (Loop exit)
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_66
nop

P1464: !_QWLD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_67:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_67
nop

P1465: !_BST [9] (maybe <- 0x40800018) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_68:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1466: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1467: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_68
nop

P1468: !_BST [13] (maybe <- 0x4080001a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_69:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_69
nop

P1469: !_BLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_70:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_70
nop

P1470: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_71:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_71
nop

P1471: !_SWAP [7] (maybe <- 0x100000c) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_72:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1472: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_72
nop

P1473: !_BST [2] (maybe <- 0x4080001c) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_73:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1473
nop
RET1473:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_73
nop

P1474: !_CASX [11] (maybe <- 0x100000d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_74:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_74
nop

P1475: !_LD [2] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_75:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1475
nop
RET1475:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1476: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_75
nop

P1477: !_ST [14] (maybe <- 0x100000e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_76:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P1478: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_76
nop

P1479: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_77:
prefetch [%i0 + 4], 20

P1480: !_FLUSH [6] (Int) (Loop exit)
! Unsupported instruction
loop_exit_2_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_77
nop

P1481: !_BST [2] (maybe <- 0x4080001e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_78:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_2_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_78
nop

P1482: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_79:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22

P1483: !_BSTC [6] (maybe <- 0x40800020) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_79
nop

P1484: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_80:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_80
nop

P1485: !_QWST [4] (maybe <- 0x40800022) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_81:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_2_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_81
nop

P1486: !_QWST [14] (maybe <- 0x40800024) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_82:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_2_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_82
nop

P1487: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_83:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_83
nop

P1488: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_84:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P1489: !_PREFETCH [10] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_84
nop

P1490: !_SWAP [0] (maybe <- 0x100000f) (Int) (Loop entry) (Branch target of P1452)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_85:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P1491
nop

TARGET1452:
ba RET1452
nop


P1491: !_LD [8] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_85
nop

P1492: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_86:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1493: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_86
nop

P1494: !_PREFETCH [4] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_87:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1494
nop
RET1494:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1495: !_PREFETCH [1] (Int) (Loop exit)
prefetch [%i0 + 12], 1
loop_exit_2_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_87
nop

P1496: !_LD [9] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_88:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1496
nop
RET1496:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1497: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_88
nop

P1498: !_ST [11] (maybe <- 0x40800026) (FP) (Loop entry) (Branch target of P1377)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_89:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]
ba P1499
nop

TARGET1377:
ba RET1377
nop


P1499: !_PREFETCH [11] (Int) (Loop exit)
prefetch [%i2 + 12], 23
loop_exit_2_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_89
nop

P1500: !_CASX [8] (maybe <- 0x1000010) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_90:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i3], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1501: !_PREFETCH [9] (Int) (Loop exit)
prefetch [%i3 + 12], 31
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_90
nop

P1502: !_FLUSH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_91:
! Unsupported instruction

P1503: !_LD [12] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1503
nop
RET1503:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1504: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_91
nop

P1505: !_LD [3] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_92:
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1506: !_CAS [2] (maybe <- 0x1000011) (Int) (Branch target of P1560)
add %i1, 4, %l7
lduw [%l7], %l3
mov %l3, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
mov %l4, %o1
cas [%l7], %l6, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4
ba P1507
nop

TARGET1560:
ba RET1560
nop


P1507: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_92
nop

P1508: !_BST [6] (maybe <- 0x40800027) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_93:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1509: !_SWAP [5] (maybe <- 0x1000012) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1510: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_93
nop

P1511: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_94:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_94
nop

P1512: !_DWLD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_95:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1513: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_95
nop

P1514: !_ST [8] (maybe <- 0x40800029) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_96:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_2_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_96
nop

P1515: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_97:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1516: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_97
nop

P1517: !_REPLACEMENT [10] (Int) (Loop entry) (Loop exit) (Branch target of P1580)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_98:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_2_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_98
nop
ba P1518
nop

TARGET1580:
ba RET1580
nop


P1518: !_DWST [0] (maybe <- 0x1000013) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_99:
mov %l4, %l3 
stx %l3, [%i0 + 0]
add   %l4, 1, %l4
loop_exit_2_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_99
nop

P1519: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_100:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_100
nop

P1520: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_101:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0

P1521: !_LD [6] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1521
nop
RET1521:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_101
nop

P1522: !_LD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_102:
ld [%i1 + 4], %f0
! 1 addresses covered

P1523: !_BSTC [13] (maybe <- 0x4080002a) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_102
nop

P1524: !_PREFETCH [8] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_103:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 3

P1525: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1526: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_103
nop

P1527: !_QWLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_104:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_104
nop

P1528: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_105:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1529: !_REPLACEMENT [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P1530: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_105
nop

P1531: !_DWST [8] (maybe <- 0x1000014) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_106:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 0]
add   %l4, 1, %l4

P1532: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_106
nop

P1533: !_DWST [8] (maybe <- 0x4080002c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_107:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_2_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_107
nop

P1534: !_QWLD [15] (FP) (Loop entry) (Branch target of P1442)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_108:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
ba P1535
nop

TARGET1442:
ba RET1442
nop


P1535: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1536: !_LD [14] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_108
nop

P1537: !_CASX [5] (maybe <- 0x1000015) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_109:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1538: !_QWLD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_109
nop

P1539: !_CAS [0] (maybe <- 0x1000016) (Int) (Loop entry) (LE) (Branch target of P1781)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_110:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
wr %g0, 0x88, %asi
add %i0, 4, %l6
lduwa [%l6] %asi, %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l7, %o5
casa [%l6] %asi, %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
ba P1540
nop

TARGET1781:
ba RET1781
nop


P1540: !_DWST [4] (maybe <- 0x1000017) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 0]
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_110
nop

P1541: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_111:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 19
loop_exit_2_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_111
nop

P1542: !_LD [7] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_112:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1543: !_LD [3] (Int) (Loop exit) (Branch target of P1496)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_112
nop
ba P1544
nop

TARGET1496:
ba RET1496
nop


P1544: !_DWLD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_113:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1545: !_DWLD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l3
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_113
nop

P1546: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_114:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 20

P1547: !_PREFETCH [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 1
loop_exit_2_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_114
nop

P1548: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_115:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 17
loop_exit_2_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_115
nop

P1549: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_116:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_116
nop

P1550: !_ST [11] (maybe <- 0x4080002d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_117:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]

P1551: !_LD [4] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1552: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_117
nop

P1553: !_LD [15] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_118:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P1554: !_LD [1] (Int)
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1555: !_LD [9] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1555
nop
RET1555:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_118
nop

P1556: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_119:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1557: !_CAS [4] (maybe <- 0x1000018) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %o5
lduw [%o5], %l6
mov %l6, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
mov %l4, %o1
cas [%o5], %l7, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P1558: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_119
nop

P1559: !_BLD [7] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_120:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1559
nop
RET1559:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1560: !_DWLD [9] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1560
nop
RET1560:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1561: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_120
nop

P1562: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_121:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1563: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_121
nop

P1564: !_BST [2] (maybe <- 0x4080002e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_122:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_2_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_122
nop

P1565: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_123:
prefetch [%i0 + 12], 16

P1566: !_LD [11] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1567: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_123
nop

P1568: !_CAS [0] (maybe <- 0x1000019) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_124:
add %i0, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_124
nop

P1569: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_125:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_125
nop

P1570: !_LD [11] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_126:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1570
nop
RET1570:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1571: !_DWST [7] (maybe <- 0x40800030) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]

P1572: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_126
nop

P1573: !_ST [9] (maybe <- 0x100001a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_127:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4

P1574: !_BLD [5] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_127
nop

P1575: !_ST [1] (maybe <- 0x40800031) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_128:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 12 ]
loop_exit_2_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_128
nop

P1576: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_129:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_2_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_129
nop

P1577: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_130:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1578: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_130
nop

P1579: !_SWAP [11] (maybe <- 0x100001b) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_131:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1580: !_LD [4] (Int) (Loop exit) (LE) (CBR)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1580
nop
RET1580:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_131
nop

P1581: !_ST [4] (maybe <- 0x40800032) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_132:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P1582: !_DWST [5] (maybe <- 0x40800033) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
loop_exit_2_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_132
nop

P1583: !_BLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_133:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1584: !_PREFETCH [2] (Int) (Loop exit) (Branch target of P1696)
prefetch [%i1 + 4], 2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_133
nop
ba P1585
nop

TARGET1696:
ba RET1696
nop


P1585: !_BSTC [6] (maybe <- 0x40800034) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_134:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_134
nop

P1586: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_135:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 28

P1587: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1588: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_135
nop

P1589: !_LD [7] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_136:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1589
nop
RET1589:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1590: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_136
nop

P1591: !_LD [0] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_137:
wr %g0, 0x88, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1592: !_LD [14] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_137
nop

P1593: !_REPLACEMENT [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_138:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_2_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_138
nop

P1594: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_139:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_139
nop

P1595: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_140:
prefetch [%i0 + 12], 21
loop_exit_2_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_140
nop

P1596: !_SWAP [12] (maybe <- 0x100001c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_141:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1597: !_LD [5] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P1598: !_LD [13] (Int) (Loop exit)
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_141
nop

P1599: !_BST [4] (maybe <- 0x40800036) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_142:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_142
nop

P1600: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_143:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 4

P1601: !_PREFETCH [11] (Int) (Faults) (Loop exit) (Branch target of P1625)
prefetch [%g0], 4
loop_exit_2_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_143
nop
ba P1602
nop

TARGET1625:
ba RET1625
nop


P1602: !_DWLD [9] (FP) (Loop entry) (Loop exit) (Branch target of P1503)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_144:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_144
nop
ba P1603
nop

TARGET1503:
ba RET1503
nop


P1603: !_LD [11] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_145:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1603
nop
RET1603:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_145
nop

P1604: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_146:
prefetch [%i0 + 12], 22

P1605: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_146
nop

P1606: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_147:
prefetch [%i1 + 4], 20

P1607: !_FLUSH [7] (Int) (Loop exit)
! Unsupported instruction
loop_exit_2_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_147
nop

P1608: !_CASX [8] (maybe <- 0x100001d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_148:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_148
nop

P1609: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_149:
prefetch [%i1 + 4], 2

P1610: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 19
loop_exit_2_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_149
nop

P1611: !_LD [13] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_150:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1612: !_LD [12] (Int) (Loop exit) (Branch target of P1473)
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_150
nop
ba P1613
nop

TARGET1473:
ba RET1473
nop


P1613: !_SWAP [11] (maybe <- 0x100001e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_151:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1614: !_DWLD [7] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P1615: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_151
nop

P1616: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_152:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1617: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_152
nop

P1618: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_153:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_153
nop

P1619: !_DWST [14] (maybe <- 0x40800038) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_154:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_2_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_154
nop

P1620: !_BSTC [11] (maybe <- 0x40800039) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_155:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_155
nop

P1621: !_LD [5] (Int) (Loop entry) (Branch target of P1897)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_156:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1622
nop

TARGET1897:
ba RET1897
nop


P1622: !_LD [12] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1623: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_156
nop

P1624: !_ST [15] (maybe <- 0x100001f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_157:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4

P1625: !_LD [4] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1625
nop
RET1625:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_157
nop

P1626: !_REPLACEMENT [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_158:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_2_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_158
nop

P1627: !_LD [2] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_159:
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1628: !_LD [13] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P1629: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_159
nop

P1630: !_CASX [13] (maybe <- 0x1000020) (Int) (Loop entry) (Loop exit) (Branch target of P1494)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_160:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_160
nop
ba P1631
nop

TARGET1494:
ba RET1494
nop


P1631: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_161:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1632: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_161
nop

P1633: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_162:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_162
nop

P1634: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_163:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 21

P1635: !_PREFETCH [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 2
loop_exit_2_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_163
nop

P1636: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_164:
membar #StoreLoad
loop_exit_2_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_164
nop

P1637: !_FLUSH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_165:
! Unsupported instruction
loop_exit_2_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_165
nop

P1638: !_FLUSH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_166:
! Unsupported instruction

P1639: !_BLD [2] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_166
nop

P1640: !_FLUSHI [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_167:
flush %g0 
loop_exit_2_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_167
nop

P1641: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_168:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 20
loop_exit_2_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_168
nop

P1642: !_QWLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_169:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_169
nop

P1643: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_170:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1644: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_170
nop

P1645: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_171:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1646: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_171
nop

P1647: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_172:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1648: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_2_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_172
nop

P1649: !_BST [5] (maybe <- 0x4080003b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_173:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1650: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1651: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_173
nop

P1652: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_174:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1653: !_LD [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_174
nop

P1654: !_ST [1] (maybe <- 0x4080003d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_175:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 12 ]

P1655: !_QWST [12] (maybe <- 0x4080003e) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_2_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_175
nop

P1656: !_DWST [9] (maybe <- 0x40800040) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_176:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
loop_exit_2_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_176
nop

P1657: !_FLUSH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_177:
! Unsupported instruction

P1658: !_DWST [1] (maybe <- 0x1000021) (Int) (Loop exit)
mov %l4, %l3 
stx %l3, [%i0 + 8]
add   %l4, 1, %l4
loop_exit_2_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_177
nop

P1659: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_178:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1660: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_178
nop

P1661: !_LD [4] (FP) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_179:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_179
nop

P1662: !_PREFETCH [14] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_180:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 2
loop_exit_2_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_180
nop

P1663: !_PREFETCH [15] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_181:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23

P1664: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_181
nop

P1665: !_BLD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_182:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_182
nop

P1666: !_ST [12] (maybe <- 0x40800041) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_183:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_2_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_183
nop

P1667: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_184:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1668: !_CAS [12] (maybe <- 0x1000022) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_184
nop

P1669: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_185:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_185
nop

P1670: !_BLD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_186:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_186
nop

P1671: !_DWST [8] (maybe <- 0x40800042) (FP) (Loop entry) (CBR) (Branch target of P1555)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_187:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1671
nop
RET1671:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1672
nop

TARGET1555:
ba RET1555
nop


P1672: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 23
loop_exit_2_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_187
nop

P1673: !_QWST [0] (maybe <- 0x40800043) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_188:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]

P1674: !_FLUSH [13] (Int) (Loop exit)
! Unsupported instruction
loop_exit_2_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_188
nop

P1675: !_PREFETCH [2] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_189:
wr %g0, 0x88, %asi
prefetcha [%i1 + 4] %asi, 24

P1676: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1677: !_LD [1] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_189
nop

P1678: !_LD [8] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_190:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1679: !_REPLACEMENT [3] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]

P1680: !_LD [9] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_190
nop

P1681: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_191:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
loop_exit_2_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_191
nop

P1682: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_192:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_192
nop

P1683: !_PREFETCH [3] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_193:
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 23
loop_exit_2_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_193
nop

P1684: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_194:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1685: !_BST [11] (maybe <- 0x40800045) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_194
nop

P1686: !_LD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_195:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1687: !_CASX [0] (maybe <- 0x1000023) (Int) (Loop exit)
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i0], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_195
nop

P1688: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_196:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1689: !_LD [12] (FP) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered

P1690: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_196
nop

P1691: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_197:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1692: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_197
nop

P1693: !_ST [7] (maybe <- 0x40800047) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_198:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P1694: !_CAS [2] (maybe <- 0x1000024) (Int) (Loop exit) (CBR)
add %i1, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1694
nop
RET1694:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_198
nop

P1695: !_REPLACEMENT [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_199:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P1696: !_PREFETCH [14] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1696
nop
RET1696:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_199
nop

P1697: !_LD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_200:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1698: !_DWST [2] (maybe <- 0x1000025) (Int) (Loop exit)
mov %l4, %o5 
stx %o5, [%i1 + 0]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_200
nop

P1699: !_LD [13] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_201:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1700: !_CASX [5] (maybe <- 0x1000026) (Int) (LE)
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %l4, %l7, %l6
srl %l6, 8, %l6
sll %l4, 8, %o5
and %o5, %l7, %o5
or %o5, %l6, %o5
srl %o5, 16, %l6
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l6, %o5
sllx %o5, 32, %o5
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldxa [%l7] %asi, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
! move %l3(upper) -> %o1(upper)
or %l3, %g0, %o1
mov  %l3, %l6
mov  %o5, %l3
casxa [%l7] %asi, %l6, %l3
! move %l3(lower) -> %o1(lower)
srlx %o1, 32, %o1
sllx %o1, 32, %o1
srl %l3, 0, %l6
or %l6, %o1, %o1
! move %l3(upper) -> %o2(upper)
or %l3, %g0, %o2
add  %l4, 1, %l4

P1701: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o2(lower)
srlx %o2, 32, %o2
sllx %o2, 32, %o2
or %l7, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_2_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_201
nop

P1702: !_LD [7] (Int) (Loop entry) (Branch target of P1801)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_202:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1703
nop

TARGET1801:
ba RET1801
nop


P1703: !_LD [4] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_202
nop

P1704: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_203:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1705: !_PREFETCH [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 17

P1706: !_LD [8] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_203
nop

P1707: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_204:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_204
nop

P1708: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_205:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1709: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_205
nop

P1710: !_LD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_206:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P1711: !_BSTC [7] (maybe <- 0x40800048) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_206
nop

P1712: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_207:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 16

P1713: !_PREFETCH [7] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 31
loop_exit_2_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_207
nop

P1714: !_LD [0] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_208:
wr %g0, 0x82, %asi
lda    [%i0 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_208
nop

P1715: !_QWLD [10] (FP) (Loop entry) (Loop exit) (Branch target of P1983)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_209:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_209
nop
ba P1716
nop

TARGET1983:
ba RET1983
nop


P1716: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_210:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_210
nop

P1717: !_FLUSH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_211:
! Unsupported instruction
loop_exit_2_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_211
nop

P1718: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_212:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1719: !_PREFETCH [15] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 29

P1720: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_212
nop

P1721: !_PREFETCH [15] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_213:
prefetch [%g0], 1
loop_exit_2_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_213
nop

P1722: !_PREFETCH [15] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_214:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 23

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1722
nop
RET1722:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_214
nop

P1723: !_BSTC [13] (maybe <- 0x4080004a) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_215:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1724: !_QWST [2] (maybe <- 0x4080004c) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_2_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_215
nop

P1725: !_QWST [4] (maybe <- 0x4080004e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_216:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P1726: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1727: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_216
nop

P1728: !_REPLACEMENT [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_217:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_2_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_217
nop

P1729: !_QWST [11] (maybe <- 0x40800050) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_218:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P1730: !_CASX [9] (maybe <- 0x1000027) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_218
nop

P1731: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_219:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 2

P1732: !_LD [11] (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1733: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_219
nop

P1734: !_ST [7] (maybe <- 0x40800052) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_220:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P1735: !_DWLD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_220
nop

P1736: !_QWST [3] (maybe <- 0x40800053) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_221:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]

P1737: !_DWST [11] (maybe <- 0x40800055) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_2_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_221
nop

P1738: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_222:
prefetch [%i1 + 4], 0

P1739: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 17
loop_exit_2_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_222
nop

P1740: !_FLUSH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_223:
! Unsupported instruction
loop_exit_2_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_223
nop

P1741: !_PREFETCH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_224:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 1
loop_exit_2_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_224
nop

P1742: !_CASX [7] (maybe <- 0x1000028) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_225:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_225
nop

P1743: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_226:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1744: !_BSTC [13] (maybe <- 0x40800056) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1745: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_226
nop

P1746: !_DWST [5] (maybe <- 0x1000029) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_227:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4

P1747: !_ST [4] (maybe <- 0x100002a) (Int) (Loop exit)
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_2_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_227
nop

P1748: !_SWAP [2] (maybe <- 0x100002b) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_228:
mov %l4, %o0
swap  [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1749: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_228
nop

P1750: !_LD [9] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_229:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1751: !_PREFETCH [0] (Int)
prefetch [%i0 + 4], 1

P1752: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_229
nop

P1753: !_DWST [5] (maybe <- 0x100002c) (Int) (Loop entry) (Loop exit) (Branch target of P1782)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_230:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_2_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_230
nop
ba P1754
nop

TARGET1782:
ba RET1782
nop


P1754: !_PREFETCH [5] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_231:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 0
loop_exit_2_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_231
nop

P1755: !_ST [9] (maybe <- 0x100002d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_232:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

P1756: !_PREFETCH [2] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 4
loop_exit_2_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_232
nop

P1757: !_PREFETCH [1] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_233:
wr %g0, 0x82, %asi
prefetcha [%i0 + 12] %asi, 2
loop_exit_2_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_233
nop

P1758: !_LD [6] (Int) (Loop entry) (Branch target of P1420)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_234:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1759
nop

TARGET1420:
ba RET1420
nop


P1759: !_SWAP [14] (maybe <- 0x100002e) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6
swap  [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_234
nop

P1760: !_LD [15] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_235:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P1761: !_FLUSH [7] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_235
nop

P1762: !_QWST [5] (maybe <- 0x40800058) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_236:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_2_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_236
nop

P1763: !_BLD [10] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_237:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1763
nop
RET1763:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_237
nop

P1764: !_BSTC [7] (maybe <- 0x4080005a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_238:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_238
nop

P1765: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_239:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_2_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_239
nop

P1766: !_QWLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_240:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_240
nop

P1767: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_241:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23

P1768: !_LD [14] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_241
nop

P1769: !_BLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_242:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_242
nop

P1770: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_243:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1771: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_243
nop

P1772: !_PREFETCH [13] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_244:
prefetch [%g0], 16

P1773: !_BSTC [0] (maybe <- 0x4080005c) (FP) (Loop exit) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1773
nop
RET1773:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_244
nop

P1774: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_245:
ld [%i1 + 12], %f0
! 1 addresses covered

P1775: !_LD [3] (FP) (Loop exit)
ld [%i1 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_245
nop

P1776: !_BLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_246:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_246
nop

P1777: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_247:
ld [%i1 + 12], %f0
! 1 addresses covered

P1778: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_247
nop

P1779: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_248:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22
loop_exit_2_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_248
nop

P1780: !_FLUSH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_249:
! Unsupported instruction

P1781: !_CAS [11] (maybe <- 0x100002f) (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1781
nop
RET1781:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_249
nop

P1782: !_LD [6] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_250:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1782
nop
RET1782:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1783: !_REPLACEMENT [3] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]

P1784: !_LD [14] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_250
nop

P1785: !_QWST [12] (maybe <- 0x4080005e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_251:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P1786: !_BST [7] (maybe <- 0x40800060) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_251
nop

P1787: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_252:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1788: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1789: !_LD [15] (Int) (Loop exit)
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_252
nop

P1790: !_LD [1] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_253:
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1791: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_253
nop

P1792: !_BST [4] (maybe <- 0x40800062) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_254:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1793: !_QWST [1] (maybe <- 0x40800064) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_2_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_254
nop

P1794: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_255:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_255
nop

P1795: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_256:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1796: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_256
nop

P1797: !_BLD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_257:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_257
nop

P1798: !_BSTC [8] (maybe <- 0x40800066) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_258:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1799: !_BSTC [9] (maybe <- 0x40800068) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_258
nop

P1800: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_259:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_259
nop

P1801: !_CAS [1] (maybe <- 0x1000030) (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_260:
add %i0, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1801
nop
RET1801:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_260
nop

P1802: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_261:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 30
loop_exit_2_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_261
nop

P1803: !_BST [11] (maybe <- 0x4080006a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_262:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_262
nop

P1804: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_263:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1805: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_263
nop

P1806: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_264:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1807: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_264
nop

P1808: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_265:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_265
nop

P1809: !_REPLACEMENT [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_266:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_2_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_266
nop

P1810: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_267:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P1811: !_PREFETCH [1] (Int) (Loop exit)
prefetch [%i0 + 12], 22
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_267
nop

P1812: !_LD [13] (Int) (Loop entry) (Branch target of P1570)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_268:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P1813
nop

TARGET1570:
ba RET1570
nop


P1813: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_268
nop

P1814: !_DWLD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_269:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1815: !_ST [3] (maybe <- 0x1000031) (Int)
stw   %l4, [%i1 + 12 ]
add   %l4, 1, %l4

P1816: !_LD [5] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1816
nop
RET1816:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_269
nop

P1817: !_BST [6] (maybe <- 0x4080006c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_270:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_270
nop

P1818: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_271:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_2_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_271
nop

P1819: !_QWLD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_272:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_272
nop

P1820: !_LD [9] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_273:
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1821: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_273
nop

P1822: !_QWST [9] (maybe <- 0x4080006e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_274:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_2_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_274
nop

P1823: !_QWST [2] (maybe <- 0x40800070) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_275:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_2_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_275
nop

P1824: !_PREFETCH [15] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_276:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 1

P1825: !_BSTC [0] (maybe <- 0x40800072) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_2_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_276
nop

P1826: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_277:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_277
nop

P1827: !_BLD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_278:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1828: !_BLD [12] (FP) (Loop exit) (Branch target of P1844)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_2_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_278
nop
ba P1829
nop

TARGET1844:
ba RET1844
nop


P1829: !_LD [4] (Int) (Loop entry) (CBR) (Branch target of P1603)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_279:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1829
nop
RET1829:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1830
nop

TARGET1603:
ba RET1603
nop


P1830: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1831: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_279
nop

P1832: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_280:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1833: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_280
nop

P1834: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_281:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_281
nop

P1835: !_CASX [11] (maybe <- 0x1000032) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_282:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_282
nop

P1836: !_FLUSH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_283:
! Unsupported instruction

P1837: !_LD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1838: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_283
nop

P1839: !_BLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_284:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1840: !_REPLACEMENT [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_284
nop

P1841: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_285:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_285
nop

P1842: !_FLUSH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_286:
! Unsupported instruction

P1843: !_FLUSH [6] (Int) (Loop exit)
! Unsupported instruction
loop_exit_2_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_286
nop

P1844: !_BST [10] (maybe <- 0x40800074) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_287:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1844
nop
RET1844:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_287
nop

P1845: !_BST [11] (maybe <- 0x40800076) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_288:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_288
nop

P1846: !_BLD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_289:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_289
nop

P1847: !_PREFETCH [12] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_290:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 22

P1848: !_PREFETCH [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 31
loop_exit_2_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_290
nop

P1849: !_QWST [3] (maybe <- 0x40800078) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_291:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]

P1850: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_2_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_291
nop

P1851: !_LD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_292:
ld [%i1 + 4], %f0
! 1 addresses covered

P1852: !_BSTC [12] (maybe <- 0x4080007a) (FP) (Loop exit) (Branch target of P1938)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_292
nop
ba P1853
nop

TARGET1938:
ba RET1938
nop


P1853: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_293:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1854: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_293
nop

P1855: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_294:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1856: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_294
nop

P1857: !_DWLD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_295:
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1858: !_LD [8] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1859: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_295
nop

P1860: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_296:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_296
nop

P1861: !_PREFETCH [9] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_297:
wr %g0, 0x82, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 24
loop_exit_2_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_297
nop

P1862: !_QWLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_298:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_298
nop

P1863: !_DWLD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_299:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1864: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_299
nop

P1865: !_LD [8] (FP) (NF) (Loop entry) (Loop exit) (Branch target of P1399)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_300:
wr %g0, 0x82, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_300
nop
ba P1866
nop

TARGET1399:
ba RET1399
nop


P1866: !_BLD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_301:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_301
nop

P1867: !_PREFETCH [15] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_302:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 21
loop_exit_2_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_302
nop

P1868: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_303:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_303
nop

P1869: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_304:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1870: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_304
nop

P1871: !_BSTC [9] (maybe <- 0x4080007c) (FP) (Loop entry) (Loop exit) (Branch target of P1521)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_305:
wr %g0, 0xe0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_305
nop
ba P1872
nop

TARGET1521:
ba RET1521
nop


P1872: !_LD [0] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_306:
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1873: !_SWAP [3] (maybe <- 0x1000033) (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
mov %l4, %o5
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %o5, %l6, %l7
srl %l7, 8, %l7
sll %o5, 8, %o5
and %o5, %l6, %o5
or %o5, %l7, %o5
srl %o5, 16, %l7
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l7, %o5
swapa  [%i1 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_306
nop

P1874: !_LD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_307:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1875: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_307
nop

P1876: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_308:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_308
nop

P1877: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_309:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_309
nop

P1878: !_LD [5] (FP) (Loop entry) (Loop exit) (Branch target of P1829)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_310:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_310
nop
ba P1879
nop

TARGET1829:
ba RET1829
nop


P1879: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_311:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_311
nop

P1880: !_BLD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_312:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1881: !_PREFETCH [12] (Int) (Faults) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_312
nop

P1882: !_SWAP [6] (maybe <- 0x1000034) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_313:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1883: !_DWST [3] (maybe <- 0x4080007e) (FP)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 8]

P1884: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_313
nop

P1885: !_LD [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_314:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1886: !_LD [9] (Int) (Loop exit) (Branch target of P1423)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_314
nop
ba P1887
nop

TARGET1423:
ba RET1423
nop


P1887: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_315:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_315
nop

P1888: !_BSTC [5] (maybe <- 0x4080007f) (FP) (Loop entry) (Loop exit) (Branch target of P1392)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_316:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_316
nop
ba P1889
nop

TARGET1392:
ba RET1392
nop


P1889: !_PREFETCH [4] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_317:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23

P1890: !_DWLD [3] (FP) (Loop exit)
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_317
nop

P1891: !_DWLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_318:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P1892: !_LD [14] (Int)
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1893: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_318
nop

P1894: !_LD [11] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_319:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_319
nop

P1895: !_ST [12] (maybe <- 0x40800081) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_320:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P1896: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
loop_exit_2_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_320
nop

P1897: !_QWST [11] (maybe <- 0x40800082) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_321:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1897
nop
RET1897:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_321
nop

P1898: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_322:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_2_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_322
nop

P1899: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_323:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_323
nop

P1900: !_CASX [4] (maybe <- 0x1000035) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_324:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P1901: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_324
nop

P1902: !_FLUSH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_325:
! Unsupported instruction
loop_exit_2_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_325
nop

P1903: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_326:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1904: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_326
nop

P1905: !_CASX [8] (maybe <- 0x1000036) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_327:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i2], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_327
nop

P1906: !_QWLD [14] (FP) (Loop entry) (Loop exit) (CBR) (Branch target of P1921)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_328:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1906
nop
RET1906:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_328
nop
ba P1907
nop

TARGET1921:
ba RET1921
nop


P1907: !_FLUSH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_329:
! Unsupported instruction
loop_exit_2_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_329
nop

P1908: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_330:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23

P1909: !_BST [10] (maybe <- 0x40800084) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_330
nop

P1910: !_QWLD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_331:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_331
nop

P1911: !_DWLD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_332:
ldx [%i1 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1912: !_BSTC [3] (maybe <- 0x40800086) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P1913: !_LD [7] (Int) (Loop exit) (Branch target of P1722)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_332
nop
ba P1914
nop

TARGET1722:
ba RET1722
nop


P1914: !_BSTC [11] (maybe <- 0x40800088) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_333:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_333
nop

P1915: !_QWLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_334:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_334
nop

P1916: !_DWLD [1] (FP) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_335:
wr %g0, 0x82, %asi
ldda    [%g0] %asi, %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_335
nop

P1917: !_LD [11] (FP) (Loop entry) (Branch target of P1589)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_336:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
ba P1918
nop

TARGET1589:
ba RET1589
nop


P1918: !_PREFETCH [3] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 19
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_336
nop

P1919: !_BST [8] (maybe <- 0x4080008a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_337:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_337
nop

P1920: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_338:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1921: !_CASX [1] (maybe <- 0x1000037) (Int) (CBR) (Branch target of P1816)
add %i0, 8, %l7
ldx [%l7], %l3
! move %l3(upper) -> %o0(lower)
srlx %l3, 32, %l6
or %l6, %o0, %o0
! move %l3(lower) -> %o1(upper)
sllx %l3, 32, %o1
mov  %l3, %l6
mov %l4, %l3
casx [%l7], %l6, %l3
! move %l3(upper) -> %o1(lower)
srlx %l3, 32, %l6
or %l6, %o1, %o1
! move %l3(lower) -> %o2(upper)
sllx %l3, 32, %o2
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1921
nop
RET1921:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1922
nop

TARGET1816:
ba RET1816
nop


P1922: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_2_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_338
nop

P1923: !_BLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_339:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_339
nop

P1924: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_340:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1925: !_CAS [0] (maybe <- 0x1000038) (Int)
add %i0, 4, %l6
lduw [%l6], %o5
mov %o5, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
mov %l4, %o1
cas [%l6], %l3, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P1926: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_340
nop

P1927: !_FLUSH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_341:
! Unsupported instruction
loop_exit_2_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_341
nop

P1928: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_342:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1929: !_CAS [12] (maybe <- 0x1000039) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %o5
lduw [%o5], %l6
mov %l6, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
mov %l4, %o1
cas [%o5], %l7, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P1930: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_342
nop

P1931: !_CASX [6] (maybe <- 0x100003a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_343:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i3], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_343
nop

P1932: !_BST [1] (maybe <- 0x4080008c) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_344:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P1933: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_2_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_344
nop

P1934: !_ST [12] (maybe <- 0x100003b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_345:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P1935: !_PREFETCH [15] (Int) (NF) (Loop exit) (Branch target of P1475)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 20
loop_exit_2_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_345
nop
ba P1936
nop

TARGET1475:
ba RET1475
nop


P1936: !_SWAP [15] (maybe <- 0x100003c) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_346:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1937: !_PREFETCH [5] (Int) (NF) (Faults)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 3

P1938: !_LD [0] (Int) (Loop exit) (CBR)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1938
nop
RET1938:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_346
nop

P1939: !_BST [8] (maybe <- 0x4080008e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_347:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1940: !_REPLACEMENT [6] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1940
nop
RET1940:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_2_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_347
nop

P1941: !_BST [2] (maybe <- 0x40800090) (FP) (Loop entry) (Branch target of P1559)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_348:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
ba P1942
nop

TARGET1559:
ba RET1559
nop


P1942: !_DWST [11] (maybe <- 0x40800092) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
loop_exit_2_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_348
nop

P1943: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_349:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1944: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_349
nop

P1945: !_PREFETCH [10] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_350:
prefetch [%g0], 2
loop_exit_2_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_350
nop

P1946: !_QWLD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_351:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P1947: !_QWLD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_2_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_351
nop

P1948: !_PREFETCH [11] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_352:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 4

P1949: !_LD [6] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_352
nop

P1950: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_353:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P1951: !_SWAP [9] (maybe <- 0x100003d) (Int)
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P1952: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_353
nop

P1953: !_QWLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_354:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_354
nop

P1954: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_355:
membar #StoreLoad

P1955: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 2
loop_exit_2_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_355
nop

P1956: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_356:
prefetch [%i1 + 12], 21
loop_exit_2_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_356
nop

P1957: !_BST [9] (maybe <- 0x40800093) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_357:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P1958: !_ST [6] (maybe <- 0x100003e) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_2_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_357
nop

P1959: !_QWST [15] (maybe <- 0x40800095) (FP) (Loop entry) (Branch target of P1763)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_358:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
ba P1960
nop

TARGET1763:
ba RET1763
nop


P1960: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_358
nop

P1961: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_359:
prefetch [%i0 + 12], 0
loop_exit_2_359:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_359
nop

P1962: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_360:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P1963: !_PREFETCH [9] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 21
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_360:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_360
nop

P1964: !_LD [14] (Int) (NF) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_361:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1965: !_PREFETCH [9] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 0

P1966: !_LD [9] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_361:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_361
nop

P1967: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_362:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1968: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_362:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_362
nop

P1969: !_ST [12] (maybe <- 0x40800097) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_363:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_2_363:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_363
nop

P1970: !_BSTC [8] (maybe <- 0x40800098) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_364:
wr %g0, 0xe0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P1971: !_PREFETCH [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 4
loop_exit_2_364:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_364
nop

P1972: !_PREFETCH [2] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_365:
prefetch [%g0], 0

P1973: !_BSTC [15] (maybe <- 0x4080009a) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_2_365:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_365
nop

P1974: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_366:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1975: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_366:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_366
nop

P1976: !_CASX [10] (maybe <- 0x100003f) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_367:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %l4, %l7, %l6
srl %l6, 8, %l6
sll %l4, 8, %o5
and %o5, %l7, %o5
or %o5, %l6, %o5
srl %o5, 16, %l6
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l6, %o5
sllx %o5, 32, %o5
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldxa [%i2] %asi, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
! move %l3(upper) -> %o0(lower)
srlx %l3, 32, %l6
or %l6, %o0, %o0
mov  %l3, %l6
mov  %o5, %l3
casxa [%i2] %asi, %l6, %l3
! move %l3(lower) -> %o1(upper)
sllx %l3, 32, %o1
! move %l3(upper) -> %o1(lower)
srlx %l3, 32, %l6
or %l6, %o1, %o1
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_2_367:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_367
nop

P1977: !_SWAP [13] (maybe <- 0x1000040) (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_368:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1977
nop
RET1977:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1978: !_LD [15] (Int) (Loop exit) (LE) (CBR)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1978
nop
RET1978:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_368:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_368
nop

P1979: !_REPLACEMENT [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_369:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_2_369:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_369
nop

P1980: !_PREFETCH [11] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_370:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 0

P1981: !_QWLD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_370:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_370
nop

P1982: !_FLUSH [11] (Int) (Loop entry) (Branch target of P1694)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_371:
! Unsupported instruction
ba P1983
nop

TARGET1694:
ba RET1694
nop


P1983: !_LD [8] (Int) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1983
nop
RET1983:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1984: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_371:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_371
nop

P1985: !_LD [15] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_372:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1986: !_LD [10] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1987: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_372:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_372
nop

P1988: !_DWST [7] (maybe <- 0x1000041) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_373:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4

P1989: !_PREFETCH [12] (Int) (Faults) (Loop exit) (LE)
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 4
loop_exit_2_373:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_373
nop

P1990: !_DWST [7] (maybe <- 0x4080009c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_374:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_2_374:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_374
nop

P1991: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_375:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3

P1992: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1993: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_375:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_375
nop

P1994: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_376:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_2_376:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_376
nop

P1995: !_QWLD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_377:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_377:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_377
nop

P1996: !_LD [3] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_378:
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1997: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_378:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_378
nop

P1998: !_REPLACEMENT [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_379:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P1999: !_QWST [6] (maybe <- 0x4080009d) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_2_379:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_379
nop

P2000: !_ST [7] (maybe <- 0x1000042) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_380:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4
loop_exit_2_380:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_380
nop

P2001: !_LD [15] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_381:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2002: !_ST [12] (maybe <- 0x1000043) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P2003: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_381:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_381
nop

P2004: !_BST [8] (maybe <- 0x4080009f) (FP) (Loop entry) (Loop exit) (Branch target of P1773)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_382:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_2_382:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_382
nop
ba P2005
nop

TARGET1773:
ba RET1773
nop


P2005: !_ST [14] (maybe <- 0x408000a1) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_383:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_2_383:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_383
nop

P2006: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_384:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2007: !_PREFETCH [0] (Int)
prefetch [%i0 + 4], 21

P2008: !_LD [6] (Int) (Loop exit) (Branch target of P1404)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_384:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_384
nop
ba P2009
nop

TARGET1404:
ba RET1404
nop


P2009: !_DWST [14] (maybe <- 0x408000a2) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_385:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]

P2010: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2011: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_385:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_385
nop

P2012: !_DWST [1] (maybe <- 0x1000044) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_386:
mov %l4, %l7 
stx %l7, [%i0 + 8]
add   %l4, 1, %l4

P2013: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_386:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_386
nop

P2014: !_BSTC [13] (maybe <- 0x408000a3) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_387:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2015: !_SWAP [10] (maybe <- 0x1000045) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2016: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_387:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_387
nop

P2017: !_CAS [8] (maybe <- 0x1000046) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_388:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_2_388:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_388
nop

P2018: !_LD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_389:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2019: !_LD [13] (FP) (Loop exit)
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_2_389:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_389
nop

P2020: !_DWST [7] (maybe <- 0x1000047) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_390:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_2_390:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_390
nop

P2021: !_SWAP [0] (maybe <- 0x1000048) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_2_391:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2022: !_LD [12] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2023: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_2_391:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_391
nop

P2024: !_MEMBAR (Int)
membar #StoreLoad

END_NODES2: ! Test instruction sequence for CPU 2 ends
sethi %hi(0xdead0e0f), %o5
or    %o5, %lo(0xdead0e0f), %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
stw %o5, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func3:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l7
or    %l7, %lo(0xdeadbee0), %l7
stw   %l7, [%i5]
sethi %hi(0xdeadbee1), %l7
or    %l7, %lo(0xdeadbee1), %l7
stw   %l7, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x03deade1), %l7
or    %l7, %lo(0x03deade1), %l7
stw %l7, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x1800001), %l4
or    %l4, %lo(0x1800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x41000001), %l7
or    %l7, %lo(0x41000001), %l7
stw %l7, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x35800000), %l7
or    %l7, %lo(0x35800000), %l7
stw %l7, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x3406^4
sethi %hi(0x3406), %l0
or    %l0, %lo(0x3406), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES3: ! Test instruction sequence for CPU 3 begins

P2025: !_ST [4] (maybe <- 0x41000001) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_0:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_3_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_0
nop

P2026: !_BSTC [3] (maybe <- 0x41000002) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_1:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P2027: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2028: !_LD [13] (Int) (NF) (Faults) (Loop exit) (LE)
wr %g0, 0x8a, %asi
lduwa [%g0] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_1
nop

P2029: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_2:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 1
loop_exit_3_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_2
nop

P2030: !_SWAP [7] (maybe <- 0x1800001) (Int) (Loop entry) (Branch target of P2151)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_3:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P2031
nop

TARGET2151:
ba RET2151
nop


P2031: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_3
nop

P2032: !_BST [9] (maybe <- 0x41000004) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_4:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_3_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_4
nop

P2033: !_FLUSH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_5:
! Unsupported instruction
loop_exit_3_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_5
nop

P2034: !_LD [12] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_6:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2034
nop
RET2034:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2035: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_6
nop

P2036: !_DWST [15] (maybe <- 0x1800002) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_7:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l7 
stx %l7, [%i3 + 8]
add   %l4, 1, %l4

P2037: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2038: !_LD [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_7
nop

P2039: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_8:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2040: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_8
nop

P2041: !_CASX [4] (maybe <- 0x1800003) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_9:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_9
nop

P2042: !_CAS [1] (maybe <- 0x1800004) (Int) (Loop entry) (Loop exit) (Branch target of P2461)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_10:
add %i0, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_10
nop
ba P2043
nop

TARGET2461:
ba RET2461
nop


P2043: !_QWLD [2] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_11:
wr %g0, 0x82, %asi
ldqa  [%i1 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2044: !_LD [4] (FP) (Loop exit) (Branch target of P2492)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_3_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_11
nop
ba P2045
nop

TARGET2492:
ba RET2492
nop


P2045: !_QWLD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_12:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_12
nop

P2046: !_CAS [10] (maybe <- 0x1800005) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_13:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_13
nop

P2047: !_CAS [6] (maybe <- 0x1800006) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_14:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_14
nop

P2048: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_15:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 3

P2049: !_BSTC [10] (maybe <- 0x41000006) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_3_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_15
nop

P2050: !_PREFETCH [10] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_16:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P2051: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2052: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_16
nop

P2053: !_DWLD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_17:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2054: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_17
nop

P2055: !_PREFETCH [14] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_18:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 26

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2055
nop
RET2055:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_3_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_18
nop

P2056: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_19:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2057: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_19
nop

P2058: !_BST [3] (maybe <- 0x41000008) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_20:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P2059: !_LD [6] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2060: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_20
nop

P2061: !_BSTC [1] (maybe <- 0x4100000a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_21:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_3_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_21
nop

P2062: !_LD [8] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_22:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2062
nop
RET2062:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2063: !_LD [1] (Int) (NF) (Loop exit) (LE) (CBR)
wr %g0, 0x8a, %asi
lduwa [%i0 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2063
nop
RET2063:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_22
nop

P2064: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_23:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2065: !_BST [6] (maybe <- 0x4100000c) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2066: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_23
nop

P2067: !_BLD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_24:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_24
nop

P2068: !_PREFETCH [14] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_25:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P2069: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2070: !_LD [4] (Int) (Loop exit)
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_25
nop

P2071: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_26:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4
loop_exit_3_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_26
nop

P2072: !_CASX [14] (maybe <- 0x1800007) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_27:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_27
nop

P2073: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_28:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 0
loop_exit_3_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_28
nop

P2074: !_SWAP [4] (maybe <- 0x1800008) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_29:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2075: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_29
nop

P2076: !_CASX [8] (maybe <- 0x1800009) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_30:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i3], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2077: !_DWLD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_30
nop

P2078: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_31:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 16
loop_exit_3_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_31
nop

P2079: !_LD [8] (FP) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_32:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered

P2080: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_32
nop

P2081: !_PREFETCH [2] (Int) (NF) (Loop entry) (Branch target of P2620)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_33:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 3
ba P2082
nop

TARGET2620:
ba RET2620
nop


P2082: !_PREFETCH [2] (Int) (Faults) (Loop exit)
prefetch [%g0], 1
loop_exit_3_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_33
nop

P2083: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_34:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2084: !_LD [12] (FP)
ld [%i2 + 4], %f0
! 1 addresses covered

P2085: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_34
nop

P2086: !_ST [0] (maybe <- 0x4100000e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_35:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]
loop_exit_3_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_35
nop

P2087: !_PREFETCH [10] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_36:
prefetch [%g0], 4
loop_exit_3_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_36
nop

P2088: !_LD [7] (Int) (Loop entry) (LE) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_37:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2088
nop
RET2088:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2089: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_37
nop

P2090: !_LD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_38:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2091: !_LD [15] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_38
nop

P2092: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_39:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2093: !_LD [12] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_39
nop

P2094: !_LD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_40:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2095: !_LD [9] (FP) (Loop exit) (Branch target of P2062)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_40
nop
ba P2096
nop

TARGET2062:
ba RET2062
nop


P2096: !_SWAP [15] (maybe <- 0x180000a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_41:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2097: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_41
nop

P2098: !_BLD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_42:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2099: !_DWST [5] (maybe <- 0x4100000f) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_42
nop

P2100: !_CAS [5] (maybe <- 0x180000b) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_43:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_43
nop

P2101: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_44:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 20
loop_exit_3_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_44
nop

P2102: !_QWLD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_45:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_45
nop

P2103: !_PREFETCH [1] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_46:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 31

P2104: !_CASX [11] (maybe <- 0x180000c) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_46
nop

P2105: !_QWST [9] (maybe <- 0x41000010) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_47:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_3_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_47
nop

P2106: !_QWST [3] (maybe <- 0x41000012) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_48:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]

P2107: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_48
nop

P2108: !_CAS [2] (maybe <- 0x180000d) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_49:
add %i1, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P2109: !_CASX [5] (maybe <- 0x180000e) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %o5
ldx [%o5], %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
mov  %o1, %l7
mov %l4, %o2
casx [%o5], %l7, %o2
! move %o2(upper) -> %o2(upper)
! move %o2(lower) -> %o2(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_3_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_49
nop

P2110: !_PREFETCH [2] (Int) (NF) (Faults) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_50:
wr %g0, 0x8a, %asi
prefetcha [%g0] %asi, 31
loop_exit_3_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_50
nop

P2111: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_51:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_51
nop

P2112: !_BLD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_52:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2113: !_PREFETCH [5] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_52
nop

P2114: !_LD [4] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_53:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2115: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_53
nop

P2116: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_54:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2117: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_54
nop

P2118: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_55:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2119: !_LD [8] (Int) (Loop exit)
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_55
nop

P2120: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_56:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 16

P2121: !_PREFETCH [13] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 18
loop_exit_3_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_56
nop

P2122: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_57:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2123: !_PREFETCH [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 16

P2124: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_57
nop

P2125: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_58:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 2
loop_exit_3_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_58
nop

P2126: !_LD [4] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_59:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2127: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_59
nop

P2128: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_60:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2129: !_LD [12] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2129
nop
RET2129:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_60
nop

P2130: !_LD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_61:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2131: !_PREFETCH [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_61
nop

P2132: !_PREFETCH [11] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_62:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23

P2133: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2134: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_62
nop

P2135: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_63:
prefetch [%i1 + 4], 20
loop_exit_3_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_63
nop

P2136: !_PREFETCH [6] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_64:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 23
loop_exit_3_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_64
nop

P2137: !_ST [14] (maybe <- 0x41000014) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_65:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_3_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_65
nop

P2138: !_QWST [11] (maybe <- 0x41000015) (FP) (Loop entry) (Branch target of P2335)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_66:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
ba P2139
nop

TARGET2335:
ba RET2335
nop


P2139: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_3_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_66
nop

P2140: !_DWLD [8] (Int) (NF) (Loop entry) (Branch target of P2055)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_67:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldxa [%i2 + 0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2141
nop

TARGET2055:
ba RET2055
nop


P2141: !_MEMBAR (Int)
membar #StoreLoad

P2142: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_67
nop

P2143: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_68:
prefetch [%i1 + 12], 21

P2144: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2145: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_68
nop

P2146: !_DWST [2] (maybe <- 0x180000f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_69:
mov %l4, %l6 
stx %l6, [%i1 + 0]
add   %l4, 1, %l4

P2147: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2148: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_69
nop

P2149: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_70:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_70
nop

P2150: !_QWLD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_71:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2151: !_PREFETCH [15] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2151
nop
RET2151:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_71
nop

P2152: !_FLUSH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_72:
! Unsupported instruction
loop_exit_3_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_72
nop

P2153: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_73:
prefetch [%i1 + 4], 1
loop_exit_3_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_73
nop

P2154: !_PREFETCH [5] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_74:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 2

P2155: !_BST [5] (maybe <- 0x41000017) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_3_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_74
nop

P2156: !_FLUSH [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_75:
! Unsupported instruction

P2157: !_CASX [4] (maybe <- 0x1800010) (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_75
nop

P2158: !_CASX [11] (maybe <- 0x1800011) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_76:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2159: !_LD [6] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_76
nop

P2160: !_PREFETCH [9] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_77:
prefetch [%g0], 19

P2161: !_BSTC [7] (maybe <- 0x41000019) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_3_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_77
nop

P2162: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_78:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 3

P2163: !_DWST [2] (maybe <- 0x4100001b) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]
loop_exit_3_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_78
nop

P2164: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_79:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2165: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_79
nop

P2166: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_80:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2167: !_LD [10] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2168: !_LD [4] (Int) (Loop exit)
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_80
nop

P2169: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_81:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_81
nop

P2170: !_LD [15] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_82:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P2171: !_LD [5] (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_82
nop

P2172: !_SWAP [4] (maybe <- 0x1800012) (Int) (Loop entry) (Branch target of P2381)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_83:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P2173
nop

TARGET2381:
ba RET2381
nop


P2173: !_LD [10] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_83
nop

P2174: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_84:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 29
loop_exit_3_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_84
nop

P2175: !_QWST [0] (maybe <- 0x4100001c) (FP) (Loop entry) (Branch target of P2192)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_85:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
ba P2176
nop

TARGET2192:
ba RET2192
nop


P2176: !_DWLD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_85
nop

P2177: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_86:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2178: !_PREFETCH [2] (Int)
prefetch [%i1 + 4], 21

P2179: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_86
nop

P2180: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_87:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2181: !_BSTC [9] (maybe <- 0x4100001e) (FP) (Loop exit) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2181
nop
RET2181:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_87
nop

P2182: !_BLD [15] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_88:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2183: !_CASX [14] (maybe <- 0x1800013) (Int) (Loop exit)
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_88
nop

P2184: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_89:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_89
nop

P2185: !_LD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_90:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2186: !_BSTC [5] (maybe <- 0x41000020) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2187: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_90
nop

P2188: !_SWAP [8] (maybe <- 0x1800014) (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_91:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2188
nop
RET2188:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2189: !_LD [5] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_91
nop

P2190: !_PREFETCH [11] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_92:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 20

P2191: !_CAS [1] (maybe <- 0x1800015) (Int) (Loop exit)
add %i0, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_92
nop

P2192: !_PREFETCH [6] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_93:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 29

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2192
nop
RET2192:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2193: !_CAS [13] (maybe <- 0x1800016) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_93
nop

P2194: !_PREFETCH [2] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_94:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 2

P2195: !_DWLD [11] (Int) (NF) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldxa [%i3 + 8] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2195
nop
RET2195:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2196: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_94
nop

P2197: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_95:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2198: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_95
nop

P2199: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_96:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2200: !_CASX [9] (maybe <- 0x1800017) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %l7
! move %l7(upper) -> %o0(lower)
srlx %l7, 32, %o5
or %o5, %o0, %o0
! move %l7(lower) -> %o1(upper)
sllx %l7, 32, %o1
mov  %l7, %o5
mov %l4, %l7
casx [%l3], %o5, %l7
! move %l7(upper) -> %o1(lower)
srlx %l7, 32, %o5
or %o5, %o1, %o1
! move %l7(lower) -> %o2(upper)
sllx %l7, 32, %o2
add  %l4, 1, %l4

P2201: !_LD [6] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_3_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_96
nop

P2202: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_97:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 23
loop_exit_3_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_97
nop

P2203: !_PREFETCH [6] (Int) (Faults) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_98:
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 0

P2204: !_DWST [12] (maybe <- 0x41000022) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_3_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_98
nop

P2205: !_LD [1] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_99:
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2206: !_PREFETCH [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 4

P2207: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_99
nop

P2208: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_100:
prefetch [%i1 + 12], 16
loop_exit_3_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_100
nop

P2209: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_101:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2210: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P2211: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_101
nop

P2212: !_CASX [5] (maybe <- 0x1800018) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_102:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2213: !_SWAP [13] (maybe <- 0x1800019) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o2
swap  [%i2 + 12], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
add   %l4, 1, %l4

P2214: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_3_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_102
nop

P2215: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_103:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21

P2216: !_LD [14] (Int) (Branch target of P2530)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2217
nop

TARGET2530:
ba RET2530
nop


P2217: !_LD [12] (Int) (Loop exit)
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_103
nop

P2218: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_104:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_104
nop

P2219: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_105:
prefetch [%i1 + 12], 24

P2220: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
loop_exit_3_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_105
nop

P2221: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_106:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2222: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_106
nop

P2223: !_DWST [3] (maybe <- 0x180001a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_107:
mov %l4, %l3 
stx %l3, [%i1 + 8]
add   %l4, 1, %l4

P2224: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2225: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_107
nop

P2226: !_BSTC [6] (maybe <- 0x41000023) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_108:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2227: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2228: !_LD [12] (Int) (Loop exit)
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_108
nop

P2229: !_CASX [3] (maybe <- 0x180001b) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_109:
add %i1, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_109
nop

P2230: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_110:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_3_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_110
nop

P2231: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_111:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_111
nop

P2232: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_112:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2233: !_CASX [6] (maybe <- 0x180001c) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_112
nop

P2234: !_BST [3] (maybe <- 0x41000025) (FP) (Loop entry) (Branch target of P2315)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_113:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
ba P2235
nop

TARGET2315:
ba RET2315
nop


P2235: !_BSTC [1] (maybe <- 0x41000027) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_3_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_113
nop

P2236: !_CASX [7] (maybe <- 0x180001d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_114:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_114
nop

P2237: !_ST [10] (maybe <- 0x180001e) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_115:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l7
srl %l7, 8, %l7
sll %l4, 8, %l3
and %l3, %l6, %l3
or %l3, %l7, %l3
srl %l3, 16, %l7
sll %l3, 16, %l3
srl %l3, 0, %l3
or %l3, %l7, %l3
stwa   %l3, [%i3 + 4] %asi
add   %l4, 1, %l4
loop_exit_3_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_115
nop

P2238: !_REPLACEMENT [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_116:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P2239: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2240: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_116
nop

P2241: !_CAS [0] (maybe <- 0x180001f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_117:
add %i0, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

P2242: !_SWAP [4] (maybe <- 0x1800020) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o1
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %o1, %l3, %l6
srl %l6, 8, %l6
sll %o1, 8, %o1
and %o1, %l3, %o1
or %o1, %l6, %o1
srl %o1, 16, %l6
sll %o1, 16, %o1
srl %o1, 0, %o1
or %o1, %l6, %o1
swapa  [%i2 + 4] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P2243: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_117
nop

P2244: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_118:
prefetch [%i0 + 4], 3

P2245: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 4
loop_exit_3_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_118
nop

P2246: !_BSTC [9] (maybe <- 0x41000029) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_119:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2247: !_QWST [12] (maybe <- 0x4100002b) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_3_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_119
nop

P2248: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_120:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2249: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_120
nop

P2250: !_SWAP [7] (maybe <- 0x1800021) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_121:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2251: !_LD [2] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
lduwa [%i1 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_121
nop

P2252: !_BST [2] (maybe <- 0x4100002d) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_122:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_3_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_122
nop

P2253: !_LD [13] (Int) (Loop entry) (Branch target of P2429)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_123:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2254
nop

TARGET2429:
ba RET2429
nop


P2254: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_123
nop

P2255: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_124:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2256: !_LD [2] (Int) (Loop exit) (CBR)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2256
nop
RET2256:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_124
nop

P2257: !_BST [1] (maybe <- 0x4100002f) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_125:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P2258: !_QWST [6] (maybe <- 0x41000031) (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2258
nop
RET2258:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_3_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_125
nop

P2259: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_126:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2260: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_126
nop

P2261: !_DWST [1] (maybe <- 0x1800022) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_127:
mov %l4, %l6 
stx %l6, [%i0 + 8]
add   %l4, 1, %l4

P2262: !_BST [13] (maybe <- 0x41000033) (FP) (Loop exit) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2262
nop
RET2262:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_3_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_127
nop

P2263: !_DWST [6] (maybe <- 0x41000035) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_128:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_3_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_128
nop

P2264: !_CASX [2] (maybe <- 0x1800023) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_129:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i1], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2265: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_129
nop

P2266: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_130:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_130
nop

P2267: !_LD [11] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_131:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2268: !_REPLACEMENT [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_131
nop

P2269: !_PREFETCH [3] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_132:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 2
loop_exit_3_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_132
nop

P2270: !_BSTC [12] (maybe <- 0x41000036) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_133:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2271: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2272: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_133
nop

P2273: !_DWST [1] (maybe <- 0x1800024) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_134:
mov %l4, %l3 
stx %l3, [%i0 + 8]
add   %l4, 1, %l4
loop_exit_3_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_134
nop

P2274: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_135:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4

P2275: !_CAS [12] (maybe <- 0x1800025) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_135
nop

P2276: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_136:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2277: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_136
nop

P2278: !_PREFETCH [3] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_137:
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 20
loop_exit_3_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_137
nop

P2279: !_DWST [13] (maybe <- 0x41000038) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_138:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

P2280: !_PREFETCH [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 22
loop_exit_3_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_138
nop

P2281: !_DWST [15] (maybe <- 0x1800026) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_139:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_3_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_139
nop

P2282: !_PREFETCH [1] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_140:
prefetch [%i0 + 12], 22

P2283: !_ST [9] (maybe <- 0x1800027) (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2283
nop
RET2283:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_3_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_140
nop

P2284: !_LD [3] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_141:
ld [%i1 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2284
nop
RET2284:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2285: !_CASX [12] (maybe <- 0x1800028) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_141
nop

P2286: !_REPLACEMENT [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_142:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P2287: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_3_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_142
nop

P2288: !_BLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_143:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_143
nop

P2289: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_144:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2290: !_LD [0] (FP)
ld [%i0 + 4], %f0
! 1 addresses covered

P2291: !_LD [6] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_144
nop

P2292: !_DWLD [7] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_145:
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldxa [%i3 + 8] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2293: !_CAS [12] (maybe <- 0x1800029) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %o5
lduw [%o5], %l6
mov %l6, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
mov %l4, %o1
cas [%o5], %l7, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P2294: !_LD [7] (Int) (Loop exit)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_145
nop

P2295: !_LD [2] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_146:
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2296: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_146
nop

P2297: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_147:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2298: !_BLD [1] (FP)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2299: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_147
nop

P2300: !_FLUSHI [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_148:
flush %g0 

P2301: !_DWLD [7] (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_148
nop

P2302: !_ST [11] (maybe <- 0x41000039) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_149:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]

P2303: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_3_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_149
nop

P2304: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_150:
prefetch [%i1 + 12], 24

P2305: !_DWLD [7] (FP) (Loop exit) (Branch target of P2452)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_150
nop
ba P2306
nop

TARGET2452:
ba RET2452
nop


P2306: !_PREFETCH [5] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_151:
wr %g0, 0x82, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 20
loop_exit_3_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_151
nop

P2307: !_QWST [14] (maybe <- 0x4100003a) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_152:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P2308: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_3_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_152
nop

P2309: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_153:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_153
nop

P2310: !_PREFETCH [10] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_154:
prefetch [%g0], 2

P2311: !_LD [14] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2312: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_154
nop

P2313: !_LD [11] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_155:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2313
nop
RET2313:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2314: !_LD [13] (FP) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P2315: !_LD [6] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2315
nop
RET2315:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_155
nop

P2316: !_DWST [6] (maybe <- 0x4100003c) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_156:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

P2317: !_QWLD [14] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_156
nop

P2318: !_BLD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_157:
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_157
nop

P2319: !_LD [15] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_158:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P2320: !_LD [2] (Int) (Branch target of P2654)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2321
nop

TARGET2654:
ba RET2654
nop


P2321: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_158
nop

P2322: !_DWLD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_159:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_159
nop

P2323: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_160:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_160
nop

P2324: !_CASX [2] (maybe <- 0x180002a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_161:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i1], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_161
nop

P2325: !_FLUSH [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_162:
! Unsupported instruction

P2326: !_LD [0] (Int) (Branch target of P2181)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2327
nop

TARGET2181:
ba RET2181
nop


P2327: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_162
nop

P2328: !_BLD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_163:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2329: !_CASX [1] (maybe <- 0x180002b) (Int) (Loop exit)
add %i0, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_163
nop

P2330: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_164:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_164
nop

P2331: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_165:
membar #StoreLoad

P2332: !_LD [1] (Int)
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2333: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_165
nop

P2334: !_QWST [11] (maybe <- 0x4100003d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_166:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P2335: !_SWAP [5] (maybe <- 0x180002c) (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2335
nop
RET2335:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2336: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_166
nop

P2337: !_LD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_167:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2338: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_167
nop

P2339: !_LD [7] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_168:
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2340: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_168
nop

P2341: !_BLD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_169:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_169
nop

P2342: !_PREFETCH [10] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_170:
prefetch [%g0], 1
loop_exit_3_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_170
nop

P2343: !_LD [11] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_171:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2344: !_PREFETCH [1] (Int)
prefetch [%i0 + 12], 3

P2345: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_171
nop

P2346: !_REPLACEMENT [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_172:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_3_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_172
nop

P2347: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_173:
ld [%i0 + 12], %f0
! 1 addresses covered

P2348: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_173
nop

P2349: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_174:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2350: !_CAS [15] (maybe <- 0x180002d) (Int)
add %i2, 12, %l7
lduw [%l7], %l3
mov %l3, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
mov %l4, %o1
cas [%l7], %l6, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P2351: !_LD [9] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_174
nop

P2352: !_SWAP [13] (maybe <- 0x180002e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_175:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2353: !_CAS [7] (maybe <- 0x180002f) (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %l7
mov %l7, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
mov %l4, %o1
cas [%l3], %o5, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P2354: !_LD [10] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_175
nop

P2355: !_DWLD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_176:
ldd [%i0 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P2356: !_CASX [4] (maybe <- 0x1800030) (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_176
nop

P2357: !_LD [0] (Int) (Loop entry) (Branch target of P2421)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_177:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2358
nop

TARGET2421:
ba RET2421
nop


P2358: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_177
nop

P2359: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_178:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2360: !_LD [6] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_178
nop

P2361: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_179:
prefetch [%i1 + 12], 26

P2362: !_PREFETCH [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21
loop_exit_3_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_179
nop

P2363: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_180:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_180
nop

P2364: !_LD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_181:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2365: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_181
nop

P2366: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_182:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 20

P2367: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_182
nop

P2368: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_183:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2369: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_183
nop

P2370: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_184:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2371: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_184
nop

P2372: !_ST [4] (maybe <- 0x1800031) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_185:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_3_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_185
nop

P2373: !_QWST [6] (maybe <- 0x4100003f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_186:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_3_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_186
nop

P2374: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_187:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_187
nop

P2375: !_BLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_188:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_188
nop

P2376: !_LD [0] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_189:
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2377: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_189
nop

P2378: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_190:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_190
nop

P2379: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_191:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2380: !_REPLACEMENT [0] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P2381: !_LD [11] (Int) (NF) (Faults) (Loop exit) (CBR)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2381
nop
RET2381:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_191
nop

P2382: !_BLD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_192:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2383: !_REPLACEMENT [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_192
nop

P2384: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit) (Branch target of P2579)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_193:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_3_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_193
nop
ba P2385
nop

TARGET2579:
ba RET2579
nop


P2385: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_194:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2386: !_FLUSH [15] (Int) (Loop exit) (Branch target of P2262)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_194
nop
ba P2387
nop

TARGET2262:
ba RET2262
nop


P2387: !_PREFETCH [5] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_195:
wr %g0, 0x82, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 4
loop_exit_3_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_195
nop

P2388: !_CASX [4] (maybe <- 0x1800032) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_196:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i2], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2389: !_PREFETCH [7] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 22
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_196
nop

P2390: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_197:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_3_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_197
nop

P2391: !_FLUSH [1] (Int) (Loop entry) (Loop exit) (Branch target of P2418)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_198:
! Unsupported instruction
loop_exit_3_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_198
nop
ba P2392
nop

TARGET2418:
ba RET2418
nop


P2392: !_FLUSH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_199:
! Unsupported instruction
loop_exit_3_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_199
nop

P2393: !_QWST [3] (maybe <- 0x41000041) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_200:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_3_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_200
nop

P2394: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_201:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2395: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_201
nop

P2396: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_202:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_202
nop

P2397: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_203:
prefetch [%i0 + 12], 20

P2398: !_DWST [6] (maybe <- 0x41000043) (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_3_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_203
nop

P2399: !_REPLACEMENT [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_204:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P2400: !_ST [14] (maybe <- 0x1800033) (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_3_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_204
nop

P2401: !_LD [4] (Int) (Loop entry) (Branch target of P2088)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_205:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2402
nop

TARGET2088:
ba RET2088
nop


P2402: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_205
nop

P2403: !_LD [7] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_206:
wr %g0, 0x88, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2404: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_206
nop

P2405: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_207:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1

P2406: !_BSTC [5] (maybe <- 0x41000044) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_3_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_207
nop

P2407: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_208:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_208
nop

P2408: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_209:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 0
loop_exit_3_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_209
nop

P2409: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_210:
ld [%i1 + 12], %f0
! 1 addresses covered

P2410: !_PREFETCH [13] (Int) (Faults) (Loop exit)
prefetch [%g0], 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_210
nop

P2411: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_211:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_211
nop

P2412: !_DWST [2] (maybe <- 0x1800034) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_212:
mov %l4, %l7 
stx %l7, [%i1 + 0]
add   %l4, 1, %l4
loop_exit_3_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_212
nop

P2413: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_213:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3
loop_exit_3_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_213
nop

P2414: !_QWLD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_214:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_214
nop

P2415: !_CASX [9] (maybe <- 0x1800035) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_215:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
sllx %l7, 32, %l7
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldxa [%l6] %asi, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
! move %o5(upper) -> %o0(lower)
srlx %o5, 32, %l3
or %l3, %o0, %o0
mov  %o5, %l3
mov  %l7, %o5
casxa [%l6] %asi, %l3, %o5
! move %o5(lower) -> %o1(upper)
sllx %o5, 32, %o1
! move %o5(upper) -> %o1(lower)
srlx %o5, 32, %l3
or %l3, %o1, %o1
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_215
nop

P2416: !_DWST [11] (maybe <- 0x1800036) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_216:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4

P2417: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2418: !_LD [1] (Int) (Loop exit) (CBR)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2418
nop
RET2418:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_216
nop

P2419: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_217:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2420: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_217
nop

P2421: !_BST [9] (maybe <- 0x41000046) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_218:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2421
nop
RET2421:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2422: !_BST [11] (maybe <- 0x41000048) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_3_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_218
nop

P2423: !_QWST [8] (maybe <- 0x4100004a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_219:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_3_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_219
nop

P2424: !_BSTC [13] (maybe <- 0x4100004c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_220:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2425: !_DWLD [13] (Int)
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2426: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_220
nop

P2427: !_PREFETCH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_221:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 1
loop_exit_3_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_221
nop

P2428: !_REPLACEMENT [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_222:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_3_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_222
nop

P2429: !_BLD [2] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_223:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2429
nop
RET2429:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_223
nop

P2430: !_CASX [11] (maybe <- 0x1800037) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_224:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2431: !_PREFETCH [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_224
nop

P2432: !_LD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_225:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2433: !_REPLACEMENT [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_225
nop

P2434: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_226:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3
loop_exit_3_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_226
nop

P2435: !_LD [12] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_227:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_227
nop

P2436: !_DWST [6] (maybe <- 0x4100004e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_228:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_3_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_228
nop

P2437: !_LD [10] (Int) (Loop entry) (Branch target of P2034)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_229:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2438
nop

TARGET2034:
ba RET2034
nop


P2438: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_229
nop

P2439: !_QWST [1] (maybe <- 0x4100004f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_230:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_3_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_230
nop

P2440: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_231:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_231
nop

P2441: !_LD [0] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_232:
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2442: !_PREFETCH [2] (Int)
prefetch [%i1 + 4], 0

P2443: !_LD [12] (Int) (Loop exit) (Branch target of P2572)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_232
nop
ba P2444
nop

TARGET2572:
ba RET2572
nop


P2444: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_233:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_233
nop

P2445: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_234:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2446: !_LD [8] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2447: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_234
nop

P2448: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_235:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3

P2449: !_FLUSHI [10] (Int) (Loop exit)
flush %g0 
loop_exit_3_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_235
nop

P2450: !_PREFETCH [9] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_236:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 20
loop_exit_3_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_236
nop

P2451: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_237:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2452: !_LD [4] (FP) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2452
nop
RET2452:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2453: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_237
nop

P2454: !_DWLD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_238:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_238
nop

P2455: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_239:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2456: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_239
nop

P2457: !_DWST [9] (maybe <- 0x41000051) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_240:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

P2458: !_SWAP [3] (maybe <- 0x1800038) (Int)
mov %l4, %o0
swap  [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2459: !_LD [12] (Int) (Loop exit) (Branch target of P2313)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_240
nop
ba P2460
nop

TARGET2313:
ba RET2313
nop


P2460: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_241:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 19

P2461: !_ST [3] (maybe <- 0x41000052) (FP) (Loop exit) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 12 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2461
nop
RET2461:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_3_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_241
nop

P2462: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_242:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2463: !_CAS [8] (maybe <- 0x1800039) (Int)
add %i2, 4, %l6
lduw [%l6], %o5
mov %o5, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
mov %l4, %o1
cas [%l6], %l3, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P2464: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_242
nop

P2465: !_ST [4] (maybe <- 0x180003a) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_243:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4

P2466: !_LD [3] (FP) (Loop exit)
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_243
nop

P2467: !_DWST [6] (maybe <- 0x180003b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_244:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 0]
add   %l4, 1, %l4

P2468: !_QWLD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_244
nop

P2469: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_245:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2470: !_BSTC [11] (maybe <- 0x41000053) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_245
nop

P2471: !_DWST [14] (maybe <- 0x180003c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_246:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 0]
add   %l4, 1, %l4

P2472: !_LD [2] (FP) (Loop exit) (Branch target of P2558)
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 2 

sethi %hi(0x200000), %l7
sub   %i1, %l7, %i1
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

sethi %hi(0x200000), %o5
add   %i1, %o5, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_3_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_246
nop
ba P2473
nop

TARGET2558:
ba RET2558
nop


P2473: !_REPLACEMENT [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_247:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P2474: !_PREFETCH [3] (Int) (Faults) (Loop exit)
prefetch [%g0], 3
loop_exit_3_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_247
nop

P2475: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_248:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_248
nop

P2476: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_249:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 2
loop_exit_3_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_249
nop

P2477: !_FLUSH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_250:
! Unsupported instruction
loop_exit_3_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_250
nop

P2478: !_QWLD [14] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_251:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldqa  [%i2 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_251
nop

P2479: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_252:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2480: !_BLD [6] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_3_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_252
nop

P2481: !_REPLACEMENT [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_253:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
loop_exit_3_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_253
nop

P2482: !_LD [14] (Int) (NF) (Loop entry) (Branch target of P2188)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_254:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2483
nop

TARGET2188:
ba RET2188
nop


P2483: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_254
nop

P2484: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_255:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_255
nop

P2485: !_BST [11] (maybe <- 0x41000055) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_256:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2486: !_PREFETCH [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i3 + 12] %asi, 3
loop_exit_3_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_256
nop

P2487: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_257:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_3_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_257
nop

P2488: !_DWLD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_258:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2489: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_258
nop

P2490: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_259:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2491: !_LD [4] (Int) (Loop exit) (Branch target of P2591)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_259
nop
ba P2492
nop

TARGET2591:
ba RET2591
nop


P2492: !_DWLD [7] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_260:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2492
nop
RET2492:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2493: !_CASX [4] (maybe <- 0x180003d) (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_260
nop

P2494: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_261:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2495: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_261
nop

P2496: !_DWLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_262:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_262
nop

P2497: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_263:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
loop_exit_3_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_263
nop

P2498: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_264:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 22

P2499: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 21
loop_exit_3_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_264
nop

P2500: !_BLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_265:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_265
nop

P2501: !_CAS [13] (maybe <- 0x180003e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_266:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P2502: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_266
nop

P2503: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_267:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2504: !_LD [8] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_267
nop

P2505: !_BLD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_268:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_268
nop

P2506: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_269:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_269
nop

P2507: !_ST [13] (maybe <- 0x180003f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_270:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

P2508: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_270
nop

P2509: !_LD [13] (FP) (Loop entry) (Branch target of P2283)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_271:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
ba P2510
nop

TARGET2283:
ba RET2283
nop


P2510: !_BST [0] (maybe <- 0x41000057) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_271
nop

P2511: !_LD [3] (FP) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_272:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered

P2512: !_CAS [12] (maybe <- 0x1800040) (Int) (Loop exit) (LE)
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %o5
srl %o5, 8, %o5
sll %l4, 8, %l6
and %l6, %l3, %l6
or %l6, %o5, %l6
srl %l6, 16, %o5
sll %l6, 16, %l6
srl %l6, 0, %l6
or %l6, %o5, %l6
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l3
lduwa [%l3] %asi, %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l6, %l7
casa [%l3] %asi, %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_272
nop

P2513: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_273:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2514: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_273
nop

P2515: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_274:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2516: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_274
nop

P2517: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_275:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2518: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_275
nop

P2519: !_CAS [2] (maybe <- 0x1800041) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_276:
add %i1, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_276
nop

P2520: !_CAS [13] (maybe <- 0x1800042) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_277:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_277
nop

P2521: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_278:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_278
nop

P2522: !_BSTC [6] (maybe <- 0x41000059) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_279:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_3_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_279
nop

P2523: !_LD [10] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_280:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2524: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_280
nop

P2525: !_LD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_281:
ld [%i0 + 4], %f0
! 1 addresses covered

P2526: !_CAS [6] (maybe <- 0x1800043) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_281
nop

P2527: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_282:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_282
nop

P2528: !_LD [10] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_283:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2529: !_BST [9] (maybe <- 0x4100005b) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_283
nop

P2530: !_CAS [4] (maybe <- 0x1800044) (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_284:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2530
nop
RET2530:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2531: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_284
nop

P2532: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_285:
prefetch [%i1 + 4], 28

P2533: !_CAS [9] (maybe <- 0x1800045) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_285
nop

P2534: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_286:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2535: !_BST [12] (maybe <- 0x4100005d) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_286
nop

P2536: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_287:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2537: !_REPLACEMENT [9] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P2538: !_LD [2] (Int) (Loop exit) (Branch target of P2284)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_287
nop
ba P2539
nop

TARGET2284:
ba RET2284
nop


P2539: !_REPLACEMENT [15] (Int) (Loop entry) (Loop exit) (Branch target of P2668)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_288:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_3_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_288
nop
ba P2540
nop

TARGET2668:
ba RET2668
nop


P2540: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_289:
prefetch [%i0 + 12], 3

P2541: !_DWLD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2542: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_289
nop

P2543: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_290:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 23
loop_exit_3_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_290
nop

P2544: !_FLUSH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_291:
! Unsupported instruction

P2545: !_LD [8] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_291
nop

P2546: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_292:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_3_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_292
nop

P2547: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_293:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2548: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_293
nop

P2549: !_LD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_294:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2550: !_PREFETCH [6] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_294
nop

P2551: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_295:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1

P2552: !_PREFETCH [5] (Int) (Faults) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 20
loop_exit_3_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_295
nop

P2553: !_BST [15] (maybe <- 0x4100005f) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_296:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2554: !_PREFETCH [14] (Int) (Loop exit)
prefetch [%i2 + 4], 1
loop_exit_3_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_296
nop

P2555: !_SWAP [2] (maybe <- 0x1800046) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_297:
mov %l4, %o0
swap  [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2556: !_DWST [1] (maybe <- 0x41000061) (FP)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 8]

P2557: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_297
nop

P2558: !_LD [3] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_298:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2558
nop
RET2558:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2559: !_QWST [2] (maybe <- 0x41000062) (FP)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]

P2560: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_298
nop

P2561: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_299:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 3
loop_exit_3_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_299
nop

P2562: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_300:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2563: !_LD [11] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2564: !_LD [13] (Int) (NF) (Loop exit) (LE)
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_300
nop

P2565: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_301:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2566: !_BSTC [5] (maybe <- 0x41000064) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_301
nop

P2567: !_PREFETCH [11] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_302:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23

P2568: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_302
nop

P2569: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_303:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2570: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_303
nop

P2571: !_BST [15] (maybe <- 0x41000066) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_304:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_3_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_304
nop

P2572: !_BLD [9] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_305:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2572
nop
RET2572:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2573: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_3_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_305
nop

P2574: !_CAS [1] (maybe <- 0x1800047) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_306:
add %i0, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_306
nop

P2575: !_BST [9] (maybe <- 0x41000068) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_307:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_3_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_307
nop

P2576: !_QWST [14] (maybe <- 0x4100006a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_308:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_3_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_308
nop

P2577: !_REPLACEMENT [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_309:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_3_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_309
nop

P2578: !_PREFETCH [13] (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_310:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23
loop_exit_3_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_310
nop

P2579: !_DWST [2] (maybe <- 0x1800048) (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_311:
mov %l4, %l6 
stx %l6, [%i1 + 0]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2579
nop
RET2579:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_3_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_311
nop

P2580: !_REPLACEMENT [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_312:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_3_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_312
nop

P2581: !_BST [1] (maybe <- 0x4100006c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_313:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_3_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_313
nop

P2582: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_314:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_314
nop

P2583: !_CAS [15] (maybe <- 0x1800049) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_315:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P2584: !_DWLD [5] (Int) (Branch target of P2063)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
ba P2585
nop

TARGET2063:
ba RET2063
nop


P2585: !_LD [5] (Int) (Loop exit)
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_315
nop

P2586: !_CASX [15] (maybe <- 0x180004a) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_316:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2587: !_BST [4] (maybe <- 0x4100006e) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_316
nop

P2588: !_LD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_317:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2589: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_317
nop

P2590: !_LD [5] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_318:
wr %g0, 0x82, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_318
nop

P2591: !_BLD [11] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_319:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2591
nop
RET2591:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2592: !_DWST [9] (maybe <- 0x41000070) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_319
nop

P2593: !_LD [13] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_320:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P2594: !_DWST [15] (maybe <- 0x180004b) (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 8]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_320
nop

P2595: !_CAS [12] (maybe <- 0x180004c) (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_321:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %o5
srl %o5, 8, %o5
sll %l4, 8, %l6
and %l6, %l3, %l6
or %l6, %o5, %l6
srl %l6, 16, %o5
sll %l6, 16, %l6
srl %l6, 0, %l6
or %l6, %o5, %l6
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l3
lduwa [%l3] %asi, %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l6, %l7
casa [%l3] %asi, %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P2596: !_CASX [14] (maybe <- 0x180004d) (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
mov  %o1, %o5
mov %l4, %o2
casx [%i2], %o5, %o2
! move %o2(upper) -> %o2(upper)
! move %o2(lower) -> %o2(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_3_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_321
nop

P2597: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_322:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2598: !_LD [13] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2599: !_LD [13] (Int) (Loop exit) (Branch target of P2258)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_322
nop
ba P2600
nop

TARGET2258:
ba RET2258
nop


P2600: !_LD [5] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_323:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2601: !_LD [4] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_323
nop

P2602: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_324:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2603: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_324
nop

P2604: !_CASX [13] (maybe <- 0x180004e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_325:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2605: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2606: !_LD [9] (Int) (Loop exit)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_3_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_325
nop

P2607: !_LD [15] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_326:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_326
nop

P2608: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_327:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 0
loop_exit_3_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_327
nop

P2609: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_328:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2610: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_328
nop

P2611: !_BSTC [12] (maybe <- 0x41000071) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_329:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2612: !_CAS [1] (maybe <- 0x180004f) (Int) (Loop exit)
add %i0, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_329
nop

P2613: !_QWLD [3] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_330:
wr %g0, 0x82, %asi
ldqa  [%i1 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2614: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_330
nop

P2615: !_LD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_331:
ld [%i1 + 4], %f0
! 1 addresses covered

P2616: !_FLUSH [12] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_331
nop

P2617: !_BST [4] (maybe <- 0x41000073) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_332:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2618: !_PREFETCH [10] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 4
loop_exit_3_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_332
nop

P2619: !_CAS [0] (maybe <- 0x1800050) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_333:
add %i0, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_333
nop

P2620: !_LD [12] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_334:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2620
nop
RET2620:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2621: !_LD [5] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2622: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_334
nop

P2623: !_DWLD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_335:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P2624: !_REPLACEMENT [1] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_335
nop

P2625: !_CAS [11] (maybe <- 0x1800051) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_336:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_336
nop

P2626: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_337:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_337
nop

P2627: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_338:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2628: !_QWST [10] (maybe <- 0x41000075) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P2629: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_338
nop

P2630: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_339:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_339
nop

P2631: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_340:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2632: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_340
nop

P2633: !_DWLD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_341:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2634: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_341
nop

P2635: !_DWLD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_342:
ldx [%i0 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2636: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_342
nop

P2637: !_REPLACEMENT [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_343:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P2638: !_DWST [1] (maybe <- 0x41000077) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 8]
loop_exit_3_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_343
nop

P2639: !_CAS [9] (maybe <- 0x1800052) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_344:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_344
nop

P2640: !_CASX [10] (maybe <- 0x1800053) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_345:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2641: !_BSTC [10] (maybe <- 0x41000078) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_3_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_345
nop

P2642: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_346:
prefetch [%i0 + 12], 21
loop_exit_3_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_346
nop

P2643: !_CASX [2] (maybe <- 0x1800054) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_347:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i1], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2644: !_CAS [4] (maybe <- 0x1800055) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l6
lduw [%l6], %o2
mov %o2, %l3
! move %l3(lower) -> %o2(upper)
sllx %l3, 32, %o2
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o2(lower)
srl %o5, 0, %l3
or %l3, %o2, %o2
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_3_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_347
nop

P2645: !_FLUSH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_348:
! Unsupported instruction
loop_exit_3_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_348
nop

P2646: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_349:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_349
nop

P2647: !_PREFETCH [1] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_350:
prefetch [%i0 + 12], 20

P2648: !_LD [14] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_350
nop

P2649: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_351:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2650: !_REPLACEMENT [2] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P2651: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_351
nop

P2652: !_LD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_352:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2653: !_CAS [13] (maybe <- 0x1800056) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_352
nop

P2654: !_DWLD [12] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_353:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2654
nop
RET2654:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_353
nop

P2655: !_PREFETCH [14] (Int) (Loop entry) (Branch target of P2195)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_354:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 22
ba P2656
nop

TARGET2195:
ba RET2195
nop


P2656: !_ST [12] (maybe <- 0x1800057) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_3_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_354
nop

P2657: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_355:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_355
nop

P2658: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_356:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2659: !_LD [2] (Int) (Loop exit) (Branch target of P2129)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_356
nop
ba P2660
nop

TARGET2129:
ba RET2129
nop


P2660: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_357:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2661: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_3_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_357
nop

P2662: !_DWLD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_3_358:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2663: !_LD [8] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2664: !_LD [4] (Int) (Loop exit) (Branch target of P2256)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_3_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_358
nop
ba P2665
nop

TARGET2256:
ba RET2256
nop


P2665: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_359:
prefetch [%i1 + 12], 20

P2666: !_PREFETCH [11] (Int) (NF) (Loop exit) (LE)
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 20
loop_exit_3_359:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_359
nop

P2667: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_360:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 21

P2668: !_QWLD [15] (FP) (Loop exit) (CBR)
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2668
nop
RET2668:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_3_360:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_360
nop

P2669: !_MEMBAR (Int)
membar #StoreLoad

END_NODES3: ! Test instruction sequence for CPU 3 ends
sethi %hi(0xdead0e0f), %o5
or    %o5, %lo(0xdead0e0f), %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
stw %o5, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func4:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l7
or    %l7, %lo(0xdeadbee0), %l7
stw   %l7, [%i5]
sethi %hi(0xdeadbee1), %l7
or    %l7, %lo(0xdeadbee1), %l7
stw   %l7, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x04deade1), %l7
or    %l7, %lo(0x04deade1), %l7
stw %l7, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x2000001), %l4
or    %l4, %lo(0x2000001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x41800001), %l7
or    %l7, %lo(0x41800001), %l7
stw %l7, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x36000000), %l7
or    %l7, %lo(0x36000000), %l7
stw %l7, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x2a99^4
sethi %hi(0x2a99), %l0
or    %l0, %lo(0x2a99), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES4: ! Test instruction sequence for CPU 4 begins

P2670: !_LD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_0:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2671: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_0
nop

P2672: !_PREFETCH [7] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_1:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23

P2673: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 1
loop_exit_4_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_1
nop

P2674: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_2:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2675: !_BST [5] (maybe <- 0x41800001) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_2
nop

P2676: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_3:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2677: !_LD [15] (FP)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2678: !_LD [4] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2678
nop
RET2678:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_3
nop

P2679: !_LD [4] (FP) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_4:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered

P2680: !_QWLD [0] (FP) (Loop exit)
ldq   [%i0 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_4_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_4
nop

P2681: !_SWAP [6] (maybe <- 0x2000001) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_5:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2682: !_DWST [4] (maybe <- 0x2000002) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 0]
add   %l4, 1, %l4

P2683: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_5
nop

P2684: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_6:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2685: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_6
nop

P2686: !_SWAP [0] (maybe <- 0x2000003) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_7:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2687: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_7
nop

P2688: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_8:
prefetch [%i0 + 4], 22

P2689: !_CAS [11] (maybe <- 0x2000004) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_8
nop

P2690: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_9:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2691: !_LD [13] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_9
nop

P2692: !_LD [3] (Int) (Loop entry) (CBR) (Branch target of P2907)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_10:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2692
nop
RET2692:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2693
nop

TARGET2907:
ba RET2907
nop


P2693: !_LD [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_10
nop

P2694: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_11:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_11
nop

P2695: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_12:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2696: !_DWLD [6] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2696
nop
RET2696:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2697: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_12
nop

P2698: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_13:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 26

P2699: !_LD [15] (Int) (Branch target of P2758)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2700
nop

TARGET2758:
ba RET2758
nop


P2700: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_13
nop

P2701: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_14:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
loop_exit_4_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_14
nop

P2702: !_QWST [10] (maybe <- 0x41800003) (FP) (Loop entry) (Loop exit) (Branch target of P2955)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_15:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_4_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_15
nop
ba P2703
nop

TARGET2955:
ba RET2955
nop


P2703: !_CASX [13] (maybe <- 0x2000005) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_16:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2704: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2705: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_4_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_16
nop

P2706: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_17:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2707: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_17
nop

P2708: !_SWAP [13] (maybe <- 0x2000006) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_18:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2709: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_18
nop

P2710: !_QWLD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_19:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2711: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2712: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_19
nop

P2713: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_20:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2714: !_DWLD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l3
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_20
nop

P2715: !_BLD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_21:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_21
nop

P2716: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_22:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22

P2717: !_BLD [1] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_22
nop

P2718: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_23:
prefetch [%g0], 4
loop_exit_4_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_23
nop

P2719: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_24:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2720: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_24
nop

P2721: !_BLD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_25:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2722: !_LD [3] (Int) (NF)
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2723: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_25
nop

P2724: !_PREFETCH [9] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_26:
prefetch [%g0], 16
loop_exit_4_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_26
nop

P2725: !_PREFETCH [5] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_27:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 4

P2726: !_LD [12] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_27
nop

P2727: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_28:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_28
nop

P2728: !_REPLACEMENT [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_29:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P2729: !_CAS [0] (maybe <- 0x2000007) (Int) (Loop exit)
add %i0, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_29
nop

P2730: !_FLUSH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_30:
! Unsupported instruction

P2731: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22
loop_exit_4_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_30
nop

P2732: !_PREFETCH [0] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_31:
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 4

P2733: !_PREFETCH [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_4_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_31
nop

P2734: !_LD [6] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_32:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2735: !_FLUSH [7] (Int)
! Unsupported instruction

P2736: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_32
nop

P2737: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_33:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2738: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_33
nop

P2739: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_34:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 3
loop_exit_4_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_34
nop

P2740: !_ST [13] (maybe <- 0x2000008) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_35:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4
loop_exit_4_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_35
nop

P2741: !_LD [15] (Int) (Loop entry) (Branch target of P3284)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_36:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2742
nop

TARGET3284:
ba RET3284
nop


P2742: !_BSTC [3] (maybe <- 0x41800005) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P2743: !_LD [14] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_36
nop

P2744: !_DWLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_37:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_37
nop

P2745: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_38:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 28
loop_exit_4_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_38
nop

P2746: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_39:
ld [%i1 + 12], %f0
! 1 addresses covered

P2747: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_39
nop

P2748: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_40:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2749: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_40
nop

P2750: !_QWST [13] (maybe <- 0x41800007) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_41:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_4_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_41
nop

P2751: !_ST [0] (maybe <- 0x2000009) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_42:
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4

P2752: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_4_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_42
nop

P2753: !_LD [15] (FP) (Loop entry) (Branch target of P3040)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_43:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
ba P2754
nop

TARGET3040:
ba RET3040
nop


P2754: !_DWLD [3] (Int)
ldx [%i1 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2755: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_43
nop

P2756: !_REPLACEMENT [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_44:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_4_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_44
nop

P2757: !_QWLD [14] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_45:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldqa  [%i2 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2758: !_BSTC [8] (maybe <- 0x41800009) (FP) (Loop exit) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2758
nop
RET2758:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_45
nop

P2759: !_BSTC [0] (maybe <- 0x4180000b) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_46:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P2760: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2761: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_46
nop

P2762: !_LD [11] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_47:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P2763: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2764: !_LD [6] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_47
nop

P2765: !_BLD [0] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_48:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2765
nop
RET2765:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_48
nop

P2766: !_QWLD [10] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_49:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldqa  [%i2 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2767: !_BLD [7] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_4_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_49
nop

P2768: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_50:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2769: !_FLUSH [7] (Int)
! Unsupported instruction

P2770: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_50
nop

P2771: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_51:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 18
loop_exit_4_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_51
nop

P2772: !_FLUSH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_52:
! Unsupported instruction
loop_exit_4_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_52
nop

P2773: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_53:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2774: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_53
nop

P2775: !_BLD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_54:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2776: !_SWAP [9] (maybe <- 0x200000a) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %o0, %l7, %o5
srl %o5, 8, %o5
sll %o0, 8, %o0
and %o0, %l7, %o0
or %o0, %o5, %o0
srl %o0, 16, %o5
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %o5, %o0
swapa  [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2777: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_54
nop

P2778: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_55:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2779: !_LD [2] (FP)
ld [%i1 + 4], %f0
! 1 addresses covered

P2780: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_55
nop

P2781: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_56:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2782: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_56
nop

P2783: !_BST [12] (maybe <- 0x4180000d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_57:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2784: !_CAS [6] (maybe <- 0x200000b) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_57
nop

P2785: !_QWST [1] (maybe <- 0x4180000f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_58:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_4_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_58
nop

P2786: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_59:
ld [%i1 + 12], %f0
! 1 addresses covered

P2787: !_LD [15] (Int) (NF) (Faults)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2788: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_59
nop

P2789: !_PREFETCH [14] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_60:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 22
loop_exit_4_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_60
nop

P2790: !_LD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_61:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2791: !_CAS [2] (maybe <- 0x200000c) (Int) (Loop exit)
add %i1, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_61
nop

P2792: !_DWLD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_62:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P2793: !_CAS [10] (maybe <- 0x200000d) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_62
nop

P2794: !_REPLACEMENT [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_63:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P2795: !_DWLD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_63
nop

P2796: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_64:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2797: !_LD [8] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_64
nop

P2798: !_DWST [14] (maybe <- 0x200000e) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_65:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 0]
add   %l4, 1, %l4
loop_exit_4_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_65
nop

P2799: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_66:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21
loop_exit_4_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_66
nop

P2800: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_67:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_4_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_67
nop

P2801: !_LD [14] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_68:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2801
nop
RET2801:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2802: !_LD [8] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_68
nop

P2803: !_LD [15] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_69:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2803
nop
RET2803:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2804: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_69
nop

P2805: !_BSTC [8] (maybe <- 0x41800011) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_70:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2806: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_70
nop

P2807: !_DWLD [15] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_71:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P2808: !_BLD [14] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_4_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_71
nop

P2809: !_REPLACEMENT [7] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_72:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2809
nop
RET2809:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2810: !_ST [7] (maybe <- 0x41800013) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]
loop_exit_4_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_72
nop

P2811: !_ST [15] (maybe <- 0x200000f) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_73:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2811
nop
RET2811:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2812: !_LD [12] (FP) (Loop exit) (Branch target of P2765)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_73
nop
ba P2813
nop

TARGET2765:
ba RET2765
nop


P2813: !_CASX [12] (maybe <- 0x2000010) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_74:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2814: !_BLD [11] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_74
nop

P2815: !_BLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_75:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_75
nop

P2816: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_76:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2817: !_QWST [15] (maybe <- 0x41800014) (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_76
nop

P2818: !_CAS [11] (maybe <- 0x2000011) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_77:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_77
nop

P2819: !_LD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_78:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2820: !_LD [5] (Int)
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2821: !_LD [12] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2821
nop
RET2821:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_78
nop

P2822: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_79:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2823: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_79
nop

P2824: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_80:
prefetch [%i1 + 12], 28

P2825: !_BSTC [1] (maybe <- 0x41800016) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_4_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_80
nop

P2826: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_81:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_4_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_81
nop

P2827: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_82:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2828: !_LD [11] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2829: !_LD [11] (Int) (Loop exit)
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_82
nop

P2830: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_83:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_83
nop

P2831: !_BST [1] (maybe <- 0x41800018) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_84:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_4_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_84
nop

P2832: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_85:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 18
loop_exit_4_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_85
nop

P2833: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_86:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2834: !_PREFETCH [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4

P2835: !_LD [12] (Int) (Loop exit) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2835
nop
RET2835:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_86
nop

P2836: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_87:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2837: !_PREFETCH [8] (Int) (Faults)
prefetch [%g0], 4

P2838: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_87
nop

P2839: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_88:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2840: !_LD [13] (Int) (Loop exit)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_88
nop

P2841: !_LD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_89:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P2842: !_PREFETCH [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 17
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_89
nop

P2843: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_90:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2844: !_LD [1] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_90
nop

P2845: !_BLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_91:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2846: !_DWLD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f2
! 1 addresses covered
fmovs %f3, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_4_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_91
nop

P2847: !_PREFETCH [13] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_92:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 22
loop_exit_4_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_92
nop

P2848: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_93:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_93
nop

P2849: !_LD [10] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_94:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered

P2850: !_BLD [5] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_4_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_94
nop

P2851: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_95:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2852: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2853: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_95
nop

P2854: !_BST [14] (maybe <- 0x4180001a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_96:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_4_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_96
nop

P2855: !_PREFETCH [12] (Int) (Faults) (Loop entry) (Branch target of P2821)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_97:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 20
ba P2856
nop

TARGET2821:
ba RET2821
nop


P2856: !_LD [13] (FP) (Loop exit)
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_97
nop

P2857: !_DWLD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_98:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2858: !_QWLD [9] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2859: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_98
nop

P2860: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_99:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2861: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_99
nop

P2862: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_100:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_4_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_100
nop

P2863: !_BSTC [8] (maybe <- 0x4180001c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_101:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_4_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_101
nop

P2864: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_102:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_102
nop

P2865: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_103:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2866: !_LD [12] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2867: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_103
nop

P2868: !_LD [14] (Int) (Loop entry) (Branch target of P2692)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_104:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2869
nop

TARGET2692:
ba RET2692
nop


P2869: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_104
nop

P2870: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_105:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2871: !_LD [9] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P2872: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_105
nop

P2873: !_QWLD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_106:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2874: !_PREFETCH [15] (Int) (NF) (Faults) (Loop exit) (Branch target of P3331)
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 22
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_106
nop
ba P2875
nop

TARGET3331:
ba RET3331
nop


P2875: !_ST [2] (maybe <- 0x4180001e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_107:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 4 ]
loop_exit_4_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_107
nop

P2876: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_108:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_108
nop

P2877: !_BST [4] (maybe <- 0x4180001f) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_109:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2878: !_PREFETCH [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2
loop_exit_4_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_109
nop

P2879: !_LD [5] (Int) (Loop entry) (Branch target of P2995)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_110:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2880
nop

TARGET2995:
ba RET2995
nop


P2880: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_110
nop

P2881: !_BLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_111:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_111
nop

P2882: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_112:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2883: !_DWLD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l7
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_112
nop

P2884: !_LD [2] (Int) (Loop entry) (Branch target of P3175)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_113:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P2885
nop

TARGET3175:
ba RET3175
nop


P2885: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_113
nop

P2886: !_BSTC [0] (maybe <- 0x41800021) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_114:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_4_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_114
nop

P2887: !_BSTC [15] (maybe <- 0x41800023) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_115:
wr %g0, 0xe0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P2888: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 22
loop_exit_4_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_115
nop

P2889: !_PREFETCH [8] (Int) (Loop entry) (Loop exit) (Branch target of P2678)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_116:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 3
loop_exit_4_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_116
nop
ba P2890
nop

TARGET2678:
ba RET2678
nop


P2890: !_CASX [7] (maybe <- 0x2000012) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_117:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_117
nop

P2891: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_118:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_118
nop

P2892: !_CASX [15] (maybe <- 0x2000013) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_119:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P2893: !_DWST [13] (maybe <- 0x2000014) (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_119
nop

P2894: !_PREFETCH [3] (Int) (NF) (Faults) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_120:
wr %g0, 0x8a, %asi
prefetcha [%g0] %asi, 3

P2895: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_4_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_120
nop

P2896: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_121:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 18

P2897: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2898: !_LD [8] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_121
nop

P2899: !_DWLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_122:
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_122
nop

P2900: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_123:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2901: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_123
nop

P2902: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_124:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_124
nop

P2903: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_125:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 18

P2904: !_LD [13] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2905: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_125
nop

P2906: !_BST [0] (maybe <- 0x41800025) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_126:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_4_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_126
nop

P2907: !_PREFETCH [2] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_127:
prefetch [%i1 + 4], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2907
nop
RET2907:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_4_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_127
nop

P2908: !_PREFETCH [14] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_128:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2908
nop
RET2908:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_4_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_128
nop

P2909: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_129:
prefetch [%i1 + 12], 4

P2910: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_129
nop

P2911: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_130:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 26
loop_exit_4_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_130
nop

P2912: !_FLUSH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_131:
! Unsupported instruction
loop_exit_4_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_131
nop

P2913: !_QWST [1] (maybe <- 0x41800027) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_132:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2913
nop
RET2913:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_4_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_132
nop

P2914: !_QWST [5] (maybe <- 0x41800029) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_133:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P2915: !_QWLD [0] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_133
nop

P2916: !_BST [14] (maybe <- 0x4180002b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_134:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P2917: !_BST [1] (maybe <- 0x4180002d) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_4_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_134
nop

P2918: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_135:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 17

P2919: !_CASX [5] (maybe <- 0x2000015) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_135
nop

P2920: !_BSTC [11] (maybe <- 0x4180002f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_136:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_4_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_136
nop

P2921: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_137:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2922: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_137
nop

P2923: !_DWLD [11] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_138:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldxa [%i3 + 8] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2924: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_138
nop

P2925: !_BST [14] (maybe <- 0x41800031) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_139:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_4_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_139
nop

P2926: !_QWST [1] (maybe <- 0x41800033) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_140:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_4_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_140
nop

P2927: !_SWAP [13] (maybe <- 0x2000016) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_141:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2928: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_141
nop

P2929: !_QWST [6] (maybe <- 0x41800035) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_142:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P2930: !_PREFETCH [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 16
loop_exit_4_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_142
nop

P2931: !_BLD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_143:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2932: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2933: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_143
nop

P2934: !_SWAP [12] (maybe <- 0x2000017) (Int) (Loop entry) (Branch target of P2801)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_144:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P2935
nop

TARGET2801:
ba RET2801
nop


P2935: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_144
nop

P2936: !_LD [3] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_145:
wr %g0, 0x82, %asi
lda    [%i1 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_145
nop

P2937: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_146:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4

P2938: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2939: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_146
nop

P2940: !_QWST [6] (maybe <- 0x41800037) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_147:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P2941: !_BSTC [11] (maybe <- 0x41800039) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_4_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_147
nop

P2942: !_FLUSH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_148:
! Unsupported instruction
loop_exit_4_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_148
nop

P2943: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_149:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2944: !_PREFETCH [12] (Int) (Branch target of P2908)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 2
ba P2945
nop

TARGET2908:
ba RET2908
nop


P2945: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_149
nop

P2946: !_PREFETCH [7] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_150:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22
loop_exit_4_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_150
nop

P2947: !_DWLD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_151:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P2948: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_151
nop

P2949: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_152:
prefetch [%i1 + 12], 20

P2950: !_BST [13] (maybe <- 0x4180003b) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_4_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_152
nop

P2951: !_DWST [1] (maybe <- 0x2000018) (Int) (Loop entry) (Branch target of P3350)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_153:
mov %l4, %l3 
stx %l3, [%i0 + 8]
add   %l4, 1, %l4
ba P2952
nop

TARGET3350:
ba RET3350
nop


P2952: !_ST [0] (maybe <- 0x2000019) (Int) (Loop exit)
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4
loop_exit_4_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_153
nop

P2953: !_PREFETCH [3] (Int) (Loop entry) (Branch target of P3034)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_154:
prefetch [%i1 + 12], 0
ba P2954
nop

TARGET3034:
ba RET3034
nop


P2954: !_FLUSH [15] (Int) (Loop exit) (Branch target of P2696)
! Unsupported instruction
loop_exit_4_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_154
nop
ba P2955
nop

TARGET2696:
ba RET2696
nop


P2955: !_LD [6] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_155:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2955
nop
RET2955:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2956: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_155
nop

P2957: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_156:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 3

P2958: !_QWST [15] (maybe <- 0x4180003d) (FP) (Loop exit) (Branch target of P2992)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_4_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_156
nop
ba P2959
nop

TARGET2992:
ba RET2992
nop


P2959: !_ST [13] (maybe <- 0x4180003f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_157:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]
loop_exit_4_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_157
nop

P2960: !_PREFETCH [9] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_158:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 23
loop_exit_4_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_158
nop

P2961: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_159:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2962: !_DWST [0] (maybe <- 0x41800040) (FP)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 0]

P2963: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_159
nop

P2964: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_160:
prefetch [%i0 + 12], 20

P2965: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 3
loop_exit_4_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_160
nop

P2966: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_161:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_4_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_161
nop

P2967: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_162:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2968: !_LD [14] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P2969: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_162
nop

P2970: !_ST [2] (maybe <- 0x41800041) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_163:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 4 ]
loop_exit_4_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_163
nop

P2971: !_ST [6] (maybe <- 0x41800042) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_164:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_4_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_164
nop

P2972: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_165:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2973: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_165
nop

P2974: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_166:
prefetch [%i0 + 4], 1
loop_exit_4_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_166
nop

P2975: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_167:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_4_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_167
nop

P2976: !_QWST [4] (maybe <- 0x41800043) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_168:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P2977: !_PREFETCH [5] (Int) (Loop exit)
prefetch [%i2 + 12], 30
loop_exit_4_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_168
nop

P2978: !_CASX [9] (maybe <- 0x200001a) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_169:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
sllx %l7, 32, %l7
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldxa [%l6] %asi, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
! move %o5(upper) -> %o0(lower)
srlx %o5, 32, %l3
or %l3, %o0, %o0
mov  %o5, %l3
mov  %l7, %o5
casxa [%l6] %asi, %l3, %o5
! move %o5(lower) -> %o1(upper)
sllx %o5, 32, %o1
! move %o5(upper) -> %o1(lower)
srlx %o5, 32, %l3
or %l3, %o1, %o1
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_169
nop

P2979: !_CASX [11] (maybe <- 0x200001b) (Int) (Loop entry) (Branch target of P2996)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_170:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
ba P2980
nop

TARGET2996:
ba RET2996
nop


P2980: !_LD [1] (Int)
lduw [%i0 + 12], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2981: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_4_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_170
nop

P2982: !_LD [4] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_171:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P2983: !_BST [1] (maybe <- 0x41800045) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_171
nop

P2984: !_DWST [1] (maybe <- 0x41800047) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_172:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 8]
loop_exit_4_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_172
nop

P2985: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_173:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2986: !_PREFETCH [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 19

P2987: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_173
nop

P2988: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_174:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_174
nop

P2989: !_QWLD [11] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_175:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P2990: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2991: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_175
nop

P2992: !_LD [12] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_176:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2992
nop
RET2992:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_176
nop

P2993: !_DWLD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_177:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2994: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_177
nop

P2995: !_ST [8] (maybe <- 0x200001c) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_178:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2995
nop
RET2995:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2996: !_LD [15] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2996
nop
RET2996:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_178
nop

P2997: !_FLUSH [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_179:
! Unsupported instruction

P2998: !_SWAP [11] (maybe <- 0x200001d) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P2999: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_179
nop

P3000: !_DWST [2] (maybe <- 0x41800048) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_180:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]
loop_exit_4_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_180
nop

P3001: !_CAS [11] (maybe <- 0x200001e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_181:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P3002: !_ST [3] (maybe <- 0x41800049) (FP) (Loop exit)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 12 ]
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_181
nop

P3003: !_CASX [6] (maybe <- 0x200001f) (Int) (Loop entry) (Branch target of P3044)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_182:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
ba P3004
nop

TARGET3044:
ba RET3044
nop


P3004: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P3005: !_LD [7] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_4_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_182
nop

P3006: !_QWLD [13] (FP) (Loop entry) (Branch target of P3075)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_183:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
ba P3007
nop

TARGET3075:
ba RET3075
nop


P3007: !_PREFETCH [9] (Int) (Faults) (Loop exit)
prefetch [%g0], 2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_183
nop

P3008: !_FLUSH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_184:
! Unsupported instruction

P3009: !_BLD [14] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_184
nop

P3010: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_185:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3011: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_185
nop

P3012: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_186:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3013: !_DWST [1] (maybe <- 0x4180004a) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 8]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_186
nop

P3014: !_QWST [6] (maybe <- 0x4180004b) (FP) (Loop entry) (Branch target of P2811)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_187:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
ba P3015
nop

TARGET2811:
ba RET2811
nop


P3015: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 27
loop_exit_4_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_187
nop

P3016: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_188:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3017: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_188
nop

P3018: !_CASX [11] (maybe <- 0x2000020) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_189:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_189
nop

P3019: !_DWLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_190:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_190
nop

P3020: !_PREFETCH [2] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_191:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 19

P3021: !_QWLD [1] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_191
nop

P3022: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_192:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_192
nop

P3023: !_DWLD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_193:
ldx [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3024: !_LD [0] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
lduwa [%i0 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_193
nop

P3025: !_BLD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_194:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3026: !_BSTC [13] (maybe <- 0x4180004d) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_194
nop

P3027: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_195:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3028: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_195
nop

P3029: !_BSTC [5] (maybe <- 0x4180004f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_196:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_4_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_196
nop

P3030: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_197:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_197
nop

P3031: !_LD [3] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_198:
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3032: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_198
nop

P3033: !_DWLD [2] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_199:
ldd [%i1 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P3034: !_BST [0] (maybe <- 0x41800051) (FP) (Loop exit) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3034
nop
RET3034:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_199
nop

P3035: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_200:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3036: !_LD [1] (FP) (NF)
wr %g0, 0x82, %asi
lda    [%i0 + 12] %asi, %f0
! 1 addresses covered

P3037: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_200
nop

P3038: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_201:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 4

P3039: !_BST [2] (maybe <- 0x41800053) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_4_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_201
nop

P3040: !_LD [12] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_202:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3040
nop
RET3040:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3041: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3042: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_202
nop

P3043: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_203:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_203
nop

P3044: !_DWST [1] (maybe <- 0x41800055) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_204:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 8]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3044
nop
RET3044:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_4_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_204
nop

P3045: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_205:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3046: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_205
nop

P3047: !_LD [1] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_206:
wr %g0, 0x82, %asi
lda    [%i0 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_206
nop

P3048: !_REPLACEMENT [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_207:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_4_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_207
nop

P3049: !_FLUSH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_208:
! Unsupported instruction
loop_exit_4_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_208
nop

P3050: !_ST [10] (maybe <- 0x41800056) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_209:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P3051: !_BST [15] (maybe <- 0x41800057) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_4_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_209
nop

P3052: !_SWAP [5] (maybe <- 0x2000021) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_210:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3053: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_210
nop

P3054: !_CASX [13] (maybe <- 0x2000022) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_211:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3055: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_211
nop

P3056: !_ST [13] (maybe <- 0x2000023) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_212:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
loop_exit_4_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_212
nop

P3057: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_213:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3058: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_213
nop

P3059: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_214:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_214
nop

P3060: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_215:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_215
nop

P3061: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_216:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_216
nop

P3062: !_DWST [9] (maybe <- 0x2000024) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_217:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %l7 
stx %l7, [%i3 + 8]
add   %l4, 1, %l4

P3063: !_QWST [12] (maybe <- 0x41800059) (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_4_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_217
nop

P3064: !_CASX [15] (maybe <- 0x2000025) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_218:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3065: !_CAS [2] (maybe <- 0x2000026) (Int) (Loop exit)
add %i1, 4, %l7
lduw [%l7], %o2
mov %o2, %l6
! move %l6(lower) -> %o2(upper)
sllx %l6, 32, %o2
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o2(lower)
srl %l3, 0, %l6
or %l6, %o2, %o2
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_4_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_218
nop

P3066: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_219:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_219
nop

P3067: !_BLD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_220:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3068: !_FLUSH [7] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_220
nop

P3069: !_BST [8] (maybe <- 0x4180005b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_221:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P3070: !_BLD [1] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_221
nop

P3071: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_222:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2

P3072: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_222
nop

P3073: !_PREFETCH [9] (Int) (Faults) (Loop entry) (Loop exit) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_223:
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 16
loop_exit_4_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_223
nop

P3074: !_CAS [15] (maybe <- 0x2000027) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_224:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_224
nop

P3075: !_DWLD [4] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_225:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3075
nop
RET3075:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_225
nop

P3076: !_LD [14] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_226:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered

P3077: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_226
nop

P3078: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_227:
ld [%i1 + 12], %f0
! 1 addresses covered

P3079: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 22
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_227
nop

P3080: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_228:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3081: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_228
nop

P3082: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_229:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3083: !_LD [9] (FP) (Loop exit)
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_229
nop

P3084: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_230:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P3085: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_230
nop

P3086: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_231:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4

P3087: !_QWLD [3] (FP) (Loop exit)
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_231
nop

P3088: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_232:
ld [%i1 + 12], %f0
! 1 addresses covered

P3089: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3090: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_232
nop

P3091: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_233:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_4_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_233
nop

P3092: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_234:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3093: !_SWAP [7] (maybe <- 0x2000028) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6
swap  [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_234
nop

P3094: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_235:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3095: !_QWLD [5] (FP)
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3096: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_235
nop

P3097: !_CASX [10] (maybe <- 0x2000029) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_236:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i3], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_236
nop

P3098: !_FLUSH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_237:
! Unsupported instruction
loop_exit_4_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_237
nop

P3099: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_238:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_238
nop

P3100: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_239:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3101: !_QWLD [12] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3102: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_239
nop

P3103: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_240:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P3104: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_240
nop

P3105: !_REPLACEMENT [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_241:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]

P3106: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_241
nop

P3107: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_242:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_4_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_242
nop

P3108: !_QWLD [5] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_243:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldqa  [%i2 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_243
nop

P3109: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_244:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 18
loop_exit_4_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_244
nop

P3110: !_SWAP [4] (maybe <- 0x200002a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_245:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3111: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_245
nop

P3112: !_ST [13] (maybe <- 0x200002b) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_246:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
loop_exit_4_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_246
nop

P3113: !_PREFETCH [9] (Int) (NF) (Loop entry) (Loop exit) (Branch target of P2913)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_247:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 1
loop_exit_4_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_247
nop
ba P3114
nop

TARGET2913:
ba RET2913
nop


P3114: !_REPLACEMENT [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_248:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3115: !_QWLD [0] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
ldqa  [%i0 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_248
nop

P3116: !_ST [10] (maybe <- 0x200002c) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_249:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P3117: !_LD [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3118: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_249
nop

P3119: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_250:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 26
loop_exit_4_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_250
nop

P3120: !_LD [1] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_251:
wr %g0, 0x88, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3121: !_PREFETCH [11] (Int) (Faults) (LE)
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 4

P3122: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_251
nop

P3123: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_252:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3124: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_252
nop

P3125: !_BST [13] (maybe <- 0x4180005d) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_253:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3126: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1
loop_exit_4_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_253
nop

P3127: !_REPLACEMENT [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_254:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_4_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_254
nop

P3128: !_LD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_255:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P3129: !_FLUSH [5] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_255
nop

P3130: !_PREFETCH [8] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_256:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 3
loop_exit_4_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_256
nop

P3131: !_BSTC [6] (maybe <- 0x4180005f) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_257:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P3132: !_LD [13] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3133: !_LD [6] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_257
nop

P3134: !_FLUSH [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_258:
! Unsupported instruction

P3135: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_258
nop

P3136: !_FLUSH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_259:
! Unsupported instruction

P3137: !_BSTC [10] (maybe <- 0x41800061) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_4_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_259
nop

P3138: !_PREFETCH [13] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_260:
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 20

P3139: !_QWLD [1] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_260
nop

P3140: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_261:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3141: !_LD [12] (Int) (Loop exit) (LE) (Branch target of P3341)
wr %g0, 0x88, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_261
nop
ba P3142
nop

TARGET3341:
ba RET3341
nop


P3142: !_BST [12] (maybe <- 0x41800063) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_262:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3143: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_262
nop

P3144: !_SWAP [8] (maybe <- 0x200002d) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_263:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3145: !_PREFETCH [0] (Int)
prefetch [%i0 + 4], 21

P3146: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_263
nop

P3147: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_264:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_264
nop

P3148: !_ST [14] (maybe <- 0x41800065) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_265:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_4_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_265
nop

P3149: !_ST [9] (maybe <- 0x41800066) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_266:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]
loop_exit_4_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_266
nop

P3150: !_BLD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_267:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3151: !_PREFETCH [3] (Int) (Faults) (Loop exit)
prefetch [%i1 + 12], 22
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_267
nop

P3152: !_FLUSH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_268:
! Unsupported instruction
loop_exit_4_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_268
nop

P3153: !_BLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_269:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_269
nop

P3154: !_LD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_270:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3155: !_LD [5] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_270
nop

P3156: !_BST [15] (maybe <- 0x41800067) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_271:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3157: !_LD [7] (Int) (Branch target of P3180)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3158
nop

TARGET3180:
ba RET3180
nop


P3158: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_271
nop

P3159: !_QWST [4] (maybe <- 0x41800069) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_272:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P3160: !_LD [6] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_272
nop

P3161: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_273:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3162: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_273
nop

P3163: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_274:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_274
nop

P3164: !_QWST [1] (maybe <- 0x4180006b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_275:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]

P3165: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 1
loop_exit_4_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_275
nop

P3166: !_LD [7] (Int) (NF) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_276:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3167: !_LD [5] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_276
nop

P3168: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_277:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3169: !_FLUSH [5] (Int)
! Unsupported instruction

P3170: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_277
nop

P3171: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_278:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_278
nop

P3172: !_SWAP [0] (maybe <- 0x200002e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_279:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3173: !_BST [6] (maybe <- 0x4180006d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P3174: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_279
nop

P3175: !_LD [9] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_280:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3175
nop
RET3175:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3176: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_280
nop

P3177: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_281:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_281
nop

P3178: !_QWST [12] (maybe <- 0x4180006f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_282:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_4_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_282
nop

P3179: !_CAS [2] (maybe <- 0x200002f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_283:
add %i1, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

P3180: !_LD [5] (FP) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3180
nop
RET3180:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_283
nop

P3181: !_REPLACEMENT [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_284:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P3182: !_LD [12] (Int) (NF) (Faults) (Branch target of P3320)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3183
nop

TARGET3320:
ba RET3320
nop


P3183: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_284
nop

P3184: !_CAS [7] (maybe <- 0x2000030) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_285:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P3185: !_BST [6] (maybe <- 0x41800071) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_285
nop

P3186: !_LD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_286:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P3187: !_LD [6] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3188: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_286
nop

P3189: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_287:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3190: !_CASX [5] (maybe <- 0x2000031) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %o5
ldx [%o5], %l6
! move %l6(upper) -> %o0(lower)
srlx %l6, 32, %l7
or %l7, %o0, %o0
! move %l6(lower) -> %o1(upper)
sllx %l6, 32, %o1
mov  %l6, %l7
mov %l4, %l6
casx [%o5], %l7, %l6
! move %l6(upper) -> %o1(lower)
srlx %l6, 32, %l7
or %l7, %o1, %o1
! move %l6(lower) -> %o2(upper)
sllx %l6, 32, %o2
add  %l4, 1, %l4

P3191: !_LD [5] (Int) (Loop exit)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_4_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_287
nop

P3192: !_CAS [13] (maybe <- 0x2000032) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_288:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_288
nop

P3193: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_289:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3194: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_289
nop

P3195: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_290:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 2
loop_exit_4_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_290
nop

P3196: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_291:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_291
nop

P3197: !_QWLD [4] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_292:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3197
nop
RET3197:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_292
nop

P3198: !_REPLACEMENT [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_293:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_4_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_293
nop

P3199: !_PREFETCH [6] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_294:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 0

P3200: !_DWST [4] (maybe <- 0x41800073) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_4_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_294
nop

P3201: !_SWAP [12] (maybe <- 0x2000033) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_295:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3202: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_295
nop

P3203: !_REPLACEMENT [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_296:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P3204: !_SWAP [15] (maybe <- 0x2000034) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %o0, %l3, %l6
srl %l6, 8, %l6
sll %o0, 8, %o0
and %o0, %l3, %o0
or %o0, %l6, %o0
srl %o0, 16, %l6
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %l6, %o0
swapa  [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3205: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_296
nop

P3206: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_297:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_297
nop

P3207: !_PREFETCH [4] (Int) (Faults) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_298:
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 28
loop_exit_4_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_298
nop

P3208: !_REPLACEMENT [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_299:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+12], %l7
st %l7, [%i3+12]
add %i3, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]

P3209: !_LD [9] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3210: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_299
nop

P3211: !_LD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_300:
ld [%i0 + 4], %f0
! 1 addresses covered

P3212: !_QWLD [3] (FP) (Loop exit)
ldq   [%i1 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_4_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_300
nop

P3213: !_DWLD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_301:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3214: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_301
nop

P3215: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_302:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3216: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_302
nop

P3217: !_PREFETCH [8] (Int) (Loop entry) (Branch target of P3197)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_303:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 1
ba P3218
nop

TARGET3197:
ba RET3197
nop


P3218: !_DWLD [13] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_303
nop

P3219: !_PREFETCH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_304:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_4_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_304
nop

P3220: !_BSTC [4] (maybe <- 0x41800074) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_305:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3221: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3222: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_305
nop

P3223: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_306:
prefetch [%i1 + 4], 28

P3224: !_BLD [15] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_306
nop

P3225: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_307:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 28

P3226: !_FLUSH [2] (Int) (Loop exit)
! Unsupported instruction
loop_exit_4_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_307
nop

P3227: !_QWLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_308:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3228: !_BLD [13] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_4_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_308
nop

P3229: !_LD [9] (FP) (Loop entry) (Loop exit) (Branch target of P3259)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_309:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_309
nop
ba P3230
nop

TARGET3259:
ba RET3259
nop


P3230: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_310:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3231: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_310
nop

P3232: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_311:
prefetch [%i0 + 12], 22
loop_exit_4_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_311
nop

P3233: !_ST [10] (maybe <- 0x2000035) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_312:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P3234: !_BST [6] (maybe <- 0x41800076) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_4_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_312
nop

P3235: !_CAS [2] (maybe <- 0x2000036) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_313:
add %i1, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_313
nop

P3236: !_ST [13] (maybe <- 0x2000037) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_314:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 12 ]
add   %l4, 1, %l4

P3237: !_PREFETCH [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_4_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_314
nop

P3238: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_315:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_315
nop

P3239: !_ST [6] (maybe <- 0x41800078) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_316:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P3240: !_CASX [1] (maybe <- 0x2000038) (Int) (Loop exit)
add %i0, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_316
nop

P3241: !_DWLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_317:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_317
nop

P3242: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_318:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_318
nop

P3243: !_SWAP [3] (maybe <- 0x2000039) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_319:
mov %l4, %o0
swap  [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3244: !_MEMBAR (Int)
membar #StoreLoad

P3245: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_319
nop

P3246: !_FLUSHI [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_320:
flush %g0 
loop_exit_4_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_320
nop

P3247: !_PREFETCH [14] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_321:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 22
loop_exit_4_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_321
nop

P3248: !_BSTC [15] (maybe <- 0x41800079) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_322:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3249: !_BSTC [1] (maybe <- 0x4180007b) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_4_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_322
nop

P3250: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_323:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3251: !_ST [15] (maybe <- 0x200003a) (Int)
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

P3252: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_323
nop

P3253: !_QWLD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_324:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_324
nop

P3254: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_325:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3255: !_LD [3] (FP)
ld [%i1 + 12], %f0
! 1 addresses covered

P3256: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_325
nop

P3257: !_PREFETCH [2] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_326:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 23

P3258: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3259: !_LD [13] (Int) (Loop exit) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3259
nop
RET3259:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_326
nop

P3260: !_CAS [8] (maybe <- 0x200003b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_327:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P3261: !_QWLD [3] (FP) (Loop exit)
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_327
nop

P3262: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_328:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3263: !_BLD [13] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i3 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_4_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_328
nop

P3264: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_329:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_329
nop

P3265: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_330:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3266: !_DWLD [4] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3267: !_LD [4] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_330
nop

P3268: !_DWLD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_331:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P3269: !_DWLD [13] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3270: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_331
nop

P3271: !_DWLD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_332:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3272: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_332
nop

P3273: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_333:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_333
nop

P3274: !_PREFETCH [6] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_334:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 22

P3275: !_LD [7] (Int)
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3276: !_LD [6] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_334
nop

P3277: !_CAS [15] (maybe <- 0x200003c) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_335:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P3278: !_LD [8] (Int) (Branch target of P2809)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
ba P3279
nop

TARGET2809:
ba RET2809
nop


P3279: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_335
nop

P3280: !_PREFETCH [12] (Int) (Loop entry) (Loop exit) (Branch target of P3304)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_336:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_4_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_336
nop
ba P3281
nop

TARGET3304:
ba RET3304
nop


P3281: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_337:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_337
nop

P3282: !_PREFETCH [2] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_338:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 2

P3283: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3284: !_LD [3] (Int) (Loop exit) (CBR)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3284
nop
RET3284:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_338
nop

P3285: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_339:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 4

P3286: !_LD [11] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_339
nop

P3287: !_PREFETCH [14] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_340:
prefetch [%g0], 17

P3288: !_LD [5] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3289: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_340
nop

P3290: !_FLUSH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_341:
! Unsupported instruction
loop_exit_4_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_341
nop

P3291: !_PREFETCH [7] (Int) (Loop entry) (Branch target of P2835)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_342:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 24
ba P3292
nop

TARGET2835:
ba RET2835
nop


P3292: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_342
nop

P3293: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_343:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3294: !_DWLD [5] (Int) (Loop exit)
ldx [%i3 + 8], %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %l6
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_343
nop

P3295: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_344:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3296: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_344
nop

P3297: !_QWST [13] (maybe <- 0x4180007d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_345:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P3298: !_FLUSH [0] (Int) (Loop exit)
! Unsupported instruction
loop_exit_4_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_345
nop

P3299: !_PREFETCH [11] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_346:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 26

P3300: !_BLD [14] (FP) (Loop exit) (Branch target of P2803)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_346
nop
ba P3301
nop

TARGET2803:
ba RET2803
nop


P3301: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_347:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_347
nop

P3302: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_348:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3303: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_348
nop

P3304: !_LD [11] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_349:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3304
nop
RET3304:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3305: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_349
nop

P3306: !_LD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_350:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3307: !_QWST [3] (maybe <- 0x4180007f) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_350
nop

P3308: !_PREFETCH [15] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_351:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 17

P3309: !_BLD [5] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_351
nop

P3310: !_SWAP [12] (maybe <- 0x200003d) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_352:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3311: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_352
nop

P3312: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_353:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_353
nop

P3313: !_CASX [15] (maybe <- 0x200003e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_354:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3314: !_BSTC [13] (maybe <- 0x41800081) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_354
nop

P3315: !_CAS [11] (maybe <- 0x200003f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_355:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_355
nop

P3316: !_QWLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_356:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_356
nop

P3317: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_357:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_357
nop

P3318: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_358:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3319: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_358
nop

P3320: !_BSTC [14] (maybe <- 0x41800083) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_359:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3320
nop
RET3320:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3321: !_PREFETCH [11] (Int) (Faults) (Loop exit)
prefetch [%g0], 26
loop_exit_4_359:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_359
nop

P3322: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_360:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3323: !_LD [0] (FP)
ld [%i0 + 4], %f0
! 1 addresses covered

P3324: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_360:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_360
nop

P3325: !_DWLD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_361:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3326: !_CASX [5] (maybe <- 0x2000040) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %l7
! move %l7(upper) -> %o0(lower)
srlx %l7, 32, %o5
or %o5, %o0, %o0
! move %l7(lower) -> %o1(upper)
sllx %l7, 32, %o1
mov  %l7, %o5
mov %l4, %l7
casx [%l3], %o5, %l7
! move %l7(upper) -> %o1(lower)
srlx %l7, 32, %o5
or %o5, %o1, %o1
! move %l7(lower) -> %o2(upper)
sllx %l7, 32, %o2
add  %l4, 1, %l4

P3327: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_4_361:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_361
nop

P3328: !_QWST [5] (maybe <- 0x41800085) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_362:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_4_362:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_362
nop

P3329: !_PREFETCH [2] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_363:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 19
loop_exit_4_363:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_363
nop

P3330: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_364:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3331: !_FLUSH [12] (Int) (CBR)
! Unsupported instruction

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3331
nop
RET3331:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3332: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_364:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_364
nop

P3333: !_LD [11] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_365:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_365:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_365
nop

P3334: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_366:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3335: !_LD [5] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_366:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_366
nop

P3336: !_REPLACEMENT [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_367:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_4_367:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_367
nop

P3337: !_BLD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_368:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3338: !_BST [5] (maybe <- 0x41800087) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_4_368:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_368
nop

P3339: !_SWAP [6] (maybe <- 0x2000041) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_369:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3340: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_369:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_369
nop

P3341: !_DWLD [10] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_370:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3341
nop
RET3341:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3342: !_SWAP [6] (maybe <- 0x2000042) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3343: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_370:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_370
nop

P3344: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_371:
prefetch [%i0 + 12], 4

P3345: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_371:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_371
nop

P3346: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_372:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3347: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_372:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_372
nop

P3348: !_BST [3] (maybe <- 0x41800089) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_373:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P3349: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3350: !_LD [2] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3350
nop
RET3350:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_4_373:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_373
nop

P3351: !_DWST [15] (maybe <- 0x4180008b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_374:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

P3352: !_PREFETCH [15] (Int) (Loop exit)
prefetch [%i3 + 12], 1
loop_exit_4_374:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_374
nop

P3353: !_CASX [11] (maybe <- 0x2000043) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_375:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %o5
srl %o5, 8, %o5
sll %l4, 8, %l6
and %l6, %l3, %l6
or %l6, %o5, %l6
srl %l6, 16, %o5
sll %l6, 16, %l6
srl %l6, 0, %l6
or %l6, %o5, %l6
sllx %l6, 32, %l6
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldxa [%l3] %asi, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
! move %l7(upper) -> %o0(lower)
srlx %l7, 32, %o5
or %o5, %o0, %o0
mov  %l7, %o5
mov  %l6, %l7
casxa [%l3] %asi, %o5, %l7
! move %l7(lower) -> %o1(upper)
sllx %l7, 32, %o1
! move %l7(upper) -> %o1(lower)
srlx %l7, 32, %o5
or %o5, %o1, %o1
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_4_375:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_375
nop

P3354: !_ST [12] (maybe <- 0x4180008c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_376:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_4_376:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_376
nop

P3355: !_LD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_4_377:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3356: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 18
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_377:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_377
nop

P3357: !_MEMBAR (Int)
membar #StoreLoad

END_NODES4: ! Test instruction sequence for CPU 4 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func5:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x05deade1), %l3
or    %l3, %lo(0x05deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x2800001), %l4
or    %l4, %lo(0x2800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x42000001), %l3
or    %l3, %lo(0x42000001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x36800000), %l3
or    %l3, %lo(0x36800000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x4ff2^4
sethi %hi(0x4ff2), %l0
or    %l0, %lo(0x4ff2), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES5: ! Test instruction sequence for CPU 5 begins

P3358: !_CAS [12] (maybe <- 0x2800001) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_0:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_0
nop

P3359: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_1:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_5_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_1
nop

P3360: !_QWLD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_2:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3361: !_CASX [11] (maybe <- 0x2800002) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_2
nop

P3362: !_FLUSH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_3:
! Unsupported instruction

P3363: !_BST [15] (maybe <- 0x42000001) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_3
nop

P3364: !_PREFETCH [13] (Int) (NF) (Loop entry) (Branch target of P3917)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_4:
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 2
ba P3365
nop

TARGET3917:
ba RET3917
nop


P3365: !_DWLD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_4
nop

P3366: !_CAS [1] (maybe <- 0x2800003) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_5:
add %i0, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P3367: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_5
nop

P3368: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_6:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3369: !_QWST [14] (maybe <- 0x42000003) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P3370: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_6
nop

P3371: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_7:
prefetch [%i1 + 4], 1
loop_exit_5_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_7
nop

P3372: !_PREFETCH [2] (Int) (NF) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_8:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3372
nop
RET3372:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_8
nop

P3373: !_CASX [9] (maybe <- 0x2800004) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_9:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3374: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_9
nop

P3375: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_10:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_10
nop

P3376: !_FLUSH [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_11:
! Unsupported instruction

P3377: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_11
nop

P3378: !_ST [15] (maybe <- 0x2800005) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_12:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
loop_exit_5_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_12
nop

P3379: !_LD [9] (FP) (Loop entry) (Loop exit) (Branch target of P3960)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_13:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_13
nop
ba P3380
nop

TARGET3960:
ba RET3960
nop


P3380: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_14:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_5_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_14
nop

P3381: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_15:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3

P3382: !_ST [2] (maybe <- 0x2800006) (Int) (Loop exit) (CBR)
stw   %l4, [%i1 + 4 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3382
nop
RET3382:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_15
nop

P3383: !_BLD [10] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_16:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3384: !_PREFETCH [10] (Int) (Loop exit)
prefetch [%i2 + 4], 22
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_16
nop

P3385: !_QWLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_17:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3386: !_DWST [3] (maybe <- 0x2800007) (Int) (Loop exit)
mov %l4, %o5 
stx %o5, [%i1 + 8]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_17
nop

P3387: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_18:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 16
loop_exit_5_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_18
nop

P3388: !_QWLD [1] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_19:
wr %g0, 0x82, %asi
ldqa  [%i0 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3389: !_DWST [7] (maybe <- 0x2800008) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 8]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_19
nop

P3390: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_20:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3391: !_LD [4] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_20
nop

P3392: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_21:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3393: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_21
nop

P3394: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_22:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4

P3395: !_FLUSH [0] (Int) (Loop exit)
! Unsupported instruction
loop_exit_5_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_22
nop

P3396: !_BSTC [15] (maybe <- 0x42000005) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_23:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3397: !_LD [3] (Int) (LE)
wr %g0, 0x88, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3398: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_23
nop

P3399: !_CAS [6] (maybe <- 0x2800009) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_24:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P3400: !_PREFETCH [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i3 + 12] %asi, 2
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_24
nop

P3401: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_25:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3402: !_LD [5] (Int) (Loop exit)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_25
nop

P3403: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_26:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3404: !_PREFETCH [10] (Int) (NF) (Faults) (LE)
wr %g0, 0x8a, %asi
prefetcha [%g0] %asi, 2

P3405: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_26
nop

P3406: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_27:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3407: !_FLUSH [13] (Int)
! Unsupported instruction

P3408: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_27
nop

P3409: !_BLD [1] (FP) (Loop entry) (Loop exit) (Branch target of P3442)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_28:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_28
nop
ba P3410
nop

TARGET3442:
ba RET3442
nop


P3410: !_FLUSH [6] (Int) (Loop entry) (Branch target of P3612)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_29:
! Unsupported instruction
ba P3411
nop

TARGET3612:
ba RET3612
nop


P3411: !_DWST [15] (maybe <- 0x42000007) (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3411
nop
RET3411:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_29
nop

P3412: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_30:
prefetch [%i0 + 4], 22

P3413: !_PREFETCH [0] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 19
loop_exit_5_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_30
nop

P3414: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_31:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22
loop_exit_5_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_31
nop

P3415: !_CASX [9] (maybe <- 0x280000a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_32:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_32
nop

P3416: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_33:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3417: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_33
nop

P3418: !_ST [4] (maybe <- 0x280000b) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_34:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_5_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_34
nop

P3419: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_35:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3420: !_REPLACEMENT [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_35
nop

P3421: !_FLUSH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_36:
! Unsupported instruction
loop_exit_5_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_36
nop

P3422: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_37:
prefetch [%i0 + 4], 23

P3423: !_BST [7] (maybe <- 0x42000008) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_5_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_37
nop

P3424: !_BSTC [4] (maybe <- 0x4200000a) (FP) (Loop entry) (Loop exit) (Branch target of P3682)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_38:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_38
nop
ba P3425
nop

TARGET3682:
ba RET3682
nop


P3425: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_39:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_5_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_39
nop

P3426: !_DWLD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_40:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3427: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_40
nop

P3428: !_DWST [9] (maybe <- 0x4200000c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_41:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]

P3429: !_ST [8] (maybe <- 0x280000c) (Int) (Loop exit)
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_5_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_41
nop

P3430: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_42:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_42
nop

P3431: !_LD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_43:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_43
nop

P3432: !_DWST [9] (maybe <- 0x4200000d) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_44:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

P3433: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
loop_exit_5_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_44
nop

P3434: !_REPLACEMENT [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_45:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P3435: !_SWAP [1] (maybe <- 0x280000d) (Int)
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3436: !_LD [12] (Int) (Loop exit) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3436
nop
RET3436:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_45
nop

P3437: !_QWLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_46:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_46
nop

P3438: !_CAS [10] (maybe <- 0x280000e) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_47:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_47
nop

P3439: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_48:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3440: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_48
nop

P3441: !_CASX [2] (maybe <- 0x280000f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_49:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i1], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_49
nop

P3442: !_LD [8] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_50:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3442
nop
RET3442:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3443: !_LD [7] (Int) (NF) (Faults) (Loop exit) (CBR)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3443
nop
RET3443:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_50
nop

P3444: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_51:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3445: !_ST [12] (maybe <- 0x2800010) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P3446: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_51
nop

P3447: !_LD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_52:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3448: !_CASX [13] (maybe <- 0x2800011) (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_52
nop

P3449: !_BSTC [6] (maybe <- 0x4200000e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_53:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3450: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_53
nop

P3451: !_ST [8] (maybe <- 0x2800012) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_54:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4

P3452: !_REPLACEMENT [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_5_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_54
nop

P3453: !_QWLD [5] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_55:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldqa  [%i2 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_55
nop

P3454: !_BLD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_56:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_56
nop

P3455: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_57:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3456: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_57
nop

P3457: !_QWLD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_58:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3458: !_LD [14] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_5_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_58
nop

P3459: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_59:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3460: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_59
nop

P3461: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_60:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3462: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_60
nop

P3463: !_REPLACEMENT [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_61:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+12], %l7
st %l7, [%i3+12]
add %i3, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]

P3464: !_CASX [10] (maybe <- 0x2800013) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_61
nop

P3465: !_SWAP [7] (maybe <- 0x2800014) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_62:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3466: !_DWST [8] (maybe <- 0x2800015) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 0]
add   %l4, 1, %l4

P3467: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_62
nop

P3468: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_63:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3469: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_63
nop

P3470: !_SWAP [12] (maybe <- 0x2800016) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_64:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3471: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_64
nop

P3472: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_65:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
loop_exit_5_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_65
nop

P3473: !_FLUSH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_66:
! Unsupported instruction
loop_exit_5_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_66
nop

P3474: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_67:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3475: !_CAS [6] (maybe <- 0x2800017) (Int) (Loop exit)
add %i3, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_67
nop

P3476: !_PREFETCH [8] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_68:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3476
nop
RET3476:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_68
nop

P3477: !_SWAP [14] (maybe <- 0x2800018) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_69:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3478: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_69
nop

P3479: !_PREFETCH [10] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_70:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 24

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3479
nop
RET3479:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3480: !_CASX [9] (maybe <- 0x2800019) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_70
nop

P3481: !_BLD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_71:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3482: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3483: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_71
nop

P3484: !_BLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_72:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3485: !_PREFETCH [2] (Int) (Loop exit)
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 2 

sethi %hi(0x200000), %l7
sub   %i1, %l7, %i1
prefetch [%i1 + 4], 28
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--

sethi %hi(0x200000), %o5
add   %i1, %o5, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_5_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_72
nop

P3486: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_73:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3487: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_73
nop

P3488: !_BST [9] (maybe <- 0x42000010) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_74:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P3489: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 23
loop_exit_5_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_74
nop

P3490: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_75:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 1
loop_exit_5_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_75
nop

P3491: !_BSTC [13] (maybe <- 0x42000012) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_76:
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_76
nop

P3492: !_LD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_77:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3493: !_LD [4] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
lda    [%i3 + 4] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_77
nop

P3494: !_SWAP [10] (maybe <- 0x280001a) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_78:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3495: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_78
nop

P3496: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_79:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_79
nop

P3497: !_CASX [10] (maybe <- 0x280001b) (Int) (Loop entry) (Loop exit) (Branch target of P3541)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_80:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i2], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_80
nop
ba P3498
nop

TARGET3541:
ba RET3541
nop


P3498: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_81:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3499: !_LD [8] (FP) (Branch target of P3794)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
ba P3500
nop

TARGET3794:
ba RET3794
nop


P3500: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_81
nop

P3501: !_LD [10] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_82:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3502: !_LD [12] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3502
nop
RET3502:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_82
nop

P3503: !_LD [12] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_83:
wr %g0, 0x82, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_83
nop

P3504: !_FLUSH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_84:
! Unsupported instruction

P3505: !_LD [1] (Int)
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3506: !_LD [15] (Int) (Loop exit) (Branch target of P4000)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_84
nop
ba P3507
nop

TARGET4000:
ba RET4000
nop


P3507: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_85:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3508: !_LD [10] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P3509: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_85
nop

P3510: !_LD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_86:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3511: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 22
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_86
nop

P3512: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_87:
ld [%i0 + 12], %f0
! 1 addresses covered

P3513: !_LD [3] (FP) (Loop exit)
ld [%i1 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_87
nop

P3514: !_BLD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_88:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3515: !_PREFETCH [15] (Int) (NF) (Faults) (Loop exit) (LE)
wr %g0, 0x8a, %asi
prefetcha [%g0] %asi, 4
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_88
nop

P3516: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_89:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0

P3517: !_PREFETCH [6] (Int) (Faults) (Loop exit)
prefetch [%g0], 16
loop_exit_5_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_89
nop

P3518: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_90:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_90
nop

P3519: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_91:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_91
nop

P3520: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_92:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3521: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_92
nop

P3522: !_CASX [6] (maybe <- 0x280001c) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_93:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_93
nop

P3523: !_CASX [7] (maybe <- 0x280001d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_94:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3524: !_LD [13] (FP) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_94
nop

P3525: !_QWST [9] (maybe <- 0x42000014) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_95:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P3526: !_CASX [13] (maybe <- 0x280001e) (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_95
nop

P3527: !_DWST [10] (maybe <- 0x42000016) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_96:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_5_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_96
nop

P3528: !_CASX [0] (maybe <- 0x280001f) (Int) (Loop entry) (Loop exit) (Branch target of P3605)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_97:
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i0], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_97
nop
ba P3529
nop

TARGET3605:
ba RET3605
nop


P3529: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_98:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3530: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_98
nop

P3531: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_99:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_5_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_99
nop

P3532: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_100:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_5_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_100
nop

P3533: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit) (Branch target of P3954)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_101:
prefetch [%i0 + 12], 21
loop_exit_5_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_101
nop
ba P3534
nop

TARGET3954:
ba RET3954
nop


P3534: !_DWST [15] (maybe <- 0x42000017) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_102:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_5_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_102
nop

P3535: !_LD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_103:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3536: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_103
nop

P3537: !_BLD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_104:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3538: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_5_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_104
nop

P3539: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_105:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3540: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_105
nop

P3541: !_DWLD [1] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_106:
ldd [%i0 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3541
nop
RET3541:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_106
nop

P3542: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_107:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 22
loop_exit_5_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_107
nop

P3543: !_BLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_108:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_108
nop

P3544: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_109:
prefetch [%i1 + 12], 21

P3545: !_BLD [11] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_109
nop

P3546: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_110:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23

P3547: !_BSTC [14] (maybe <- 0x42000018) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_5_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_110
nop

P3548: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_111:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3549: !_LD [8] (FP) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3549
nop
RET3549:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3550: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_111
nop

P3551: !_DWST [5] (maybe <- 0x4200001a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_112:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_5_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_112
nop

P3552: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_113:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_113
nop

P3553: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_114:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_114
nop

P3554: !_LD [4] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_115:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3555: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_115
nop

P3556: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_116:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_116
nop

P3557: !_LD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_117:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P3558: !_LD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_117
nop

P3559: !_BLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_118:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3560: !_LD [10] (Int) (Branch target of P3765)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3561
nop

TARGET3765:
ba RET3765
nop


P3561: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_118
nop

P3562: !_SWAP [15] (maybe <- 0x2800020) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_119:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3563: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_119
nop

P3564: !_ST [1] (maybe <- 0x4200001b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_120:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 12 ]

P3565: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_120
nop

P3566: !_BST [15] (maybe <- 0x4200001c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_121:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_121
nop

P3567: !_PREFETCH [5] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_122:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21

P3568: !_LD [8] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3569: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_122
nop

P3570: !_PREFETCH [7] (Int) (Loop entry) (Loop exit) (LE) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_123:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3570
nop
RET3570:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_123
nop

P3571: !_FLUSH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_124:
! Unsupported instruction

P3572: !_CAS [7] (maybe <- 0x2800021) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_124
nop

P3573: !_BST [13] (maybe <- 0x4200001e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_125:
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P3574: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 29
loop_exit_5_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_125
nop

P3575: !_CAS [4] (maybe <- 0x2800022) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_126:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P3576: !_LD [0] (Int)
lduw [%i0 + 4], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P3577: !_LD [3] (Int) (Loop exit) (Branch target of P3744)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_126
nop
ba P3578
nop

TARGET3744:
ba RET3744
nop


P3578: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_127:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3579: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_127
nop

P3580: !_PREFETCH [12] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_128:
wr %g0, 0x88, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 1

P3581: !_PREFETCH [1] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
prefetcha [%i0 + 12] %asi, 21
loop_exit_5_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_128
nop

P3582: !_PREFETCH [11] (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_129:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23
loop_exit_5_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_129
nop

P3583: !_DWST [12] (maybe <- 0x42000020) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_130:
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

P3584: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_130
nop

P3585: !_LD [5] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_131:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3585
nop
RET3585:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3586: !_CAS [14] (maybe <- 0x2800023) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l7
lduw [%l7], %l3
mov %l3, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
mov %l4, %o1
cas [%l7], %l6, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P3587: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_131
nop

P3588: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_132:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3589: !_LD [8] (Int) (NF) (Loop exit) (LE)
wr %g0, 0x8a, %asi
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_132
nop

P3590: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_133:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3591: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_133
nop

P3592: !_PREFETCH [3] (Int) (Loop entry) (Branch target of P3602)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_134:
prefetch [%i1 + 12], 22
ba P3593
nop

TARGET3602:
ba RET3602
nop


P3593: !_ST [6] (maybe <- 0x42000021) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_5_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_134
nop

P3594: !_FLUSH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_135:
! Unsupported instruction

P3595: !_LD [14] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_135
nop

P3596: !_ST [5] (maybe <- 0x42000022) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_136:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P3597: !_LD [0] (FP) (Loop exit)
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_136
nop

P3598: !_LD [2] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_137:
ld [%i1 + 4], %f0
! 1 addresses covered

P3599: !_REPLACEMENT [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_137
nop

P3600: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_138:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3601: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_138
nop

P3602: !_MEMBAR (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_139:
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3602
nop
RET3602:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3603: !_BLD [9] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_139
nop

P3604: !_DWST [2] (maybe <- 0x42000023) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_140:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]
loop_exit_5_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_140
nop

P3605: !_CASX [4] (maybe <- 0x2800024) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_141:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i2], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3605
nop
RET3605:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3606: !_QWST [1] (maybe <- 0x42000024) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_141
nop

P3607: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_142:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3

P3608: !_PREFETCH [7] (Int) (Loop exit)
prefetch [%i3 + 12], 0
loop_exit_5_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_142
nop

P3609: !_DWLD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_143:
ldx [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3610: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_143
nop

P3611: !_PREFETCH [4] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_144:
prefetch [%g0], 26
loop_exit_5_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_144
nop

P3612: !_PREFETCH [10] (Int) (NF) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_145:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 18

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3612
nop
RET3612:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_145
nop

P3613: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_146:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_146
nop

P3614: !_BSTC [10] (maybe <- 0x42000026) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_147:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_147
nop

P3615: !_BST [15] (maybe <- 0x42000028) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_148:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_5_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_148
nop

P3616: !_CASX [2] (maybe <- 0x2800025) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_149:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i1], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3617: !_PREFETCH [1] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i0 + 12] %asi, 20
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_149
nop

P3618: !_SWAP [4] (maybe <- 0x2800026) (Int) (Loop entry) (Branch target of P3685)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_150:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P3619
nop

TARGET3685:
ba RET3685
nop


P3619: !_BLD [1] (FP)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3620: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_150
nop

P3621: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_151:
ld [%i0 + 12], %f0
! 1 addresses covered

P3622: !_LD [9] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3623: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_151
nop

P3624: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_152:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3625: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_152
nop

P3626: !_DWLD [8] (Int) (Loop entry) (Branch target of P3549)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_153:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3627
nop

TARGET3549:
ba RET3549
nop


P3627: !_LD [8] (FP)
ld [%i2 + 4], %f0
! 1 addresses covered

P3628: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_153
nop

P3629: !_PREFETCH [1] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_154:
prefetch [%g0], 2
loop_exit_5_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_154
nop

P3630: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_155:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2
loop_exit_5_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_155
nop

P3631: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_156:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
loop_exit_5_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_156
nop

P3632: !_CAS [2] (maybe <- 0x2800027) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_157:
add %i1, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_157
nop

P3633: !_SWAP [13] (maybe <- 0x2800028) (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_158:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3633
nop
RET3633:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3634: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_158
nop

P3635: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_159:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2

P3636: !_FLUSH [15] (Int) (Loop exit)
! Unsupported instruction
loop_exit_5_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_159
nop

P3637: !_BLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_160:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_160
nop

P3638: !_BLD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_161:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_161
nop

P3639: !_ST [8] (maybe <- 0x4200002a) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_162:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_5_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_162
nop

P3640: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_163:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3641: !_LD [5] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_163
nop

P3642: !_PREFETCH [8] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_164:
prefetch [%g0], 4

P3643: !_PREFETCH [2] (Int) (Loop exit)
prefetch [%i1 + 4], 23
loop_exit_5_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_164
nop

P3644: !_CASX [3] (maybe <- 0x2800029) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_165:
add %i1, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3645: !_SWAP [1] (maybe <- 0x280002a) (Int)
mov %l4, %o2
swap  [%i0 + 12], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
add   %l4, 1, %l4

P3646: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_5_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_165
nop

P3647: !_LD [15] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_166:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3648: !_LD [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3649: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_166
nop

P3650: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_167:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3651: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_167
nop

P3652: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_168:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3653: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_168
nop

P3654: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_169:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_169
nop

P3655: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_170:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3656: !_DWLD [3] (FP)
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P3657: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_170
nop

P3658: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_171:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3
loop_exit_5_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_171
nop

P3659: !_QWST [2] (maybe <- 0x4200002b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_172:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]

P3660: !_ST [8] (maybe <- 0x4200002d) (FP) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
loop_exit_5_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_172
nop

P3661: !_QWST [9] (maybe <- 0x4200002e) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_173:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P3662: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3663: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_173
nop

P3664: !_PREFETCH [0] (Int) (Faults) (Loop entry) (LE) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_174:
wr %g0, 0x88, %asi
prefetcha [%i0 + 4] %asi, 20

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3664
nop
RET3664:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3665: !_FLUSH [5] (Int) (Loop exit)
! Unsupported instruction
loop_exit_5_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_174
nop

P3666: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_175:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 1
loop_exit_5_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_175
nop

P3667: !_LD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_176:
ld [%i0 + 4], %f0
! 1 addresses covered

P3668: !_REPLACEMENT [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_176
nop

P3669: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_177:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_177
nop

P3670: !_BLD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_178:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3671: !_ST [15] (maybe <- 0x42000030) (FP) (Loop exit)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_178
nop

P3672: !_LD [15] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_179:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3673: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_179
nop

P3674: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_180:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_180
nop

P3675: !_FLUSH [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_181:
! Unsupported instruction

P3676: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_181
nop

P3677: !_LD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_182:
ld [%i0 + 4], %f0
! 1 addresses covered

P3678: !_PREFETCH [5] (Int) (Faults) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_182
nop

P3679: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_183:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P3680: !_FLUSH [14] (Int) (Loop exit) (Branch target of P3854)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_183
nop
ba P3681
nop

TARGET3854:
ba RET3854
nop


P3681: !_PREFETCH [6] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_184:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 20
loop_exit_5_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_184
nop

P3682: !_CAS [7] (maybe <- 0x280002b) (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_185:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3682
nop
RET3682:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_185
nop

P3683: !_CAS [1] (maybe <- 0x280002c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_186:
add %i0, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

P3684: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_186
nop

P3685: !_REPLACEMENT [14] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_187:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3685
nop
RET3685:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_187
nop

P3686: !_DWST [6] (maybe <- 0x280002d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_188:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %l7 
stx %l7, [%i2 + 0]
add   %l4, 1, %l4
loop_exit_5_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_188
nop

P3687: !_LD [11] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_189:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3688: !_LD [4] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_189
nop

P3689: !_REPLACEMENT [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_190:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P3690: !_CASX [12] (maybe <- 0x280002e) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i2], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_190
nop

P3691: !_SWAP [13] (maybe <- 0x280002f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_191:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3692: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_191
nop

P3693: !_PREFETCH [1] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_192:
prefetch [%g0], 1

P3694: !_SWAP [5] (maybe <- 0x2800030) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3695: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_192
nop

P3696: !_BLD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_193:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3697: !_DWST [14] (maybe <- 0x2800031) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o5 
stx %o5, [%i2 + 0]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_193
nop

P3698: !_REPLACEMENT [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_194:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3699: !_CASX [0] (maybe <- 0x2800032) (Int) (Loop exit)
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i0], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_194
nop

P3700: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_195:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3701: !_PREFETCH [5] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3701
nop
RET3701:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3702: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_195
nop

P3703: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_196:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3704: !_SWAP [13] (maybe <- 0x2800033) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3705: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_196
nop

P3706: !_QWST [15] (maybe <- 0x42000031) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_197:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_5_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_197
nop

P3707: !_DWLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_198:
ldd [%i1 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_198
nop

P3708: !_PREFETCH [13] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_199:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 21
loop_exit_5_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_199
nop

P3709: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_200:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P3710: !_QWLD [0] (FP) (Loop exit)
ldq   [%i0 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_5_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_200
nop

P3711: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_201:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3712: !_QWLD [8] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3713: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_201
nop

P3714: !_QWST [15] (maybe <- 0x42000033) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_202:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3714
nop
RET3714:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_202
nop

P3715: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_203:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20

P3716: !_CAS [10] (maybe <- 0x2800034) (Int) (Loop exit) (LE)
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l6
lduwa [%l6] %asi, %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l7, %o5
casa [%l6] %asi, %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_203
nop

P3717: !_PREFETCH [6] (Int) (Loop entry) (Loop exit) (Branch target of P3964)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_204:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 2
loop_exit_5_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_204
nop
ba P3718
nop

TARGET3964:
ba RET3964
nop


P3718: !_DWST [6] (maybe <- 0x2800035) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_205:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %l7 
stx %l7, [%i2 + 0]
add   %l4, 1, %l4
loop_exit_5_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_205
nop

P3719: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_206:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_206
nop

P3720: !_SWAP [13] (maybe <- 0x2800036) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_207:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3721: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_207
nop

P3722: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_208:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3723: !_LD [11] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_208
nop

P3724: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_209:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3725: !_QWST [10] (maybe <- 0x42000035) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P3726: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_209
nop

P3727: !_BSTC [0] (maybe <- 0x42000037) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_210:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_5_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_210
nop

P3728: !_BST [0] (maybe <- 0x42000039) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_211:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_5_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_211
nop

P3729: !_QWST [10] (maybe <- 0x4200003b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_212:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_5_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_212
nop

P3730: !_LD [4] (FP) (Loop entry) (Loop exit) (Branch target of P3664)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_213:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_213
nop
ba P3731
nop

TARGET3664:
ba RET3664
nop


P3731: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_214:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 3
loop_exit_5_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_214
nop

P3732: !_CAS [9] (maybe <- 0x2800037) (Int) (Loop entry) (Loop exit) (Branch target of P3714)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_215:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_215
nop
ba P3733
nop

TARGET3714:
ba RET3714
nop


P3733: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_216:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_216
nop

P3734: !_BST [8] (maybe <- 0x4200003d) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_217:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P3735: !_QWLD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_217
nop

P3736: !_QWLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_218:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_218
nop

P3737: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_219:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0

P3738: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 2
loop_exit_5_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_219
nop

P3739: !_SWAP [5] (maybe <- 0x2800038) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_220:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3740: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_220
nop

P3741: !_ST [2] (maybe <- 0x2800039) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_221:
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 2 

sethi %hi(0x200000), %l7
sub   %i1, %l7, %i1
stw   %l4, [%i1 + 4 ]
add   %l4, 1, %l4

P3742: !_DWLD [2] (FP) (Loop exit)
ldd [%i1 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

sethi %hi(0x200000), %l7
add   %i1, %l7, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_5_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_221
nop

P3743: !_PREFETCH [4] (Int) (NF) (Loop entry) (Loop exit) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_222:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 20
loop_exit_5_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_222
nop

P3744: !_LD [4] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_223:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3744
nop
RET3744:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_223
nop

P3745: !_LD [1] (FP) (Loop entry) (Loop exit) (Branch target of P3476)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_224:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_224
nop
ba P3746
nop

TARGET3476:
ba RET3476
nop


P3746: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_225:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P3747: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3748: !_LD [12] (Int) (Loop exit)
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_225
nop

P3749: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_226:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3750: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_226
nop

P3751: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_227:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_227
nop

P3752: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_228:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3753: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_228
nop

P3754: !_LD [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_229:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3755: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_229
nop

P3756: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_230:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3757: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_230
nop

P3758: !_DWLD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_231:
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3759: !_LD [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_231
nop

P3760: !_DWLD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_232:
ldx [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3761: !_PREFETCH [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3

P3762: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_232
nop

P3763: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_233:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_233
nop

P3764: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_234:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_234
nop

P3765: !_DWST [4] (maybe <- 0x4200003f) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_235:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3765
nop
RET3765:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_235
nop

P3766: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_236:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_236
nop

P3767: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_237:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P3768: !_LD [8] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3769: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_237
nop

P3770: !_CASX [12] (maybe <- 0x280003a) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_238:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3771: !_PREFETCH [3] (Int) (Faults) (Loop exit)
prefetch [%i1 + 12], 23
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_238
nop

P3772: !_PREFETCH [7] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_239:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 22

P3773: !_DWLD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3774: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_239
nop

P3775: !_DWST [14] (maybe <- 0x42000040) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_240:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

P3776: !_PREFETCH [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 4
loop_exit_5_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_240
nop

P3777: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_241:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3778: !_DWLD [8] (FP)
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P3779: !_LD [8] (Int) (Loop exit)
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_241
nop

P3780: !_SWAP [3] (maybe <- 0x280003b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_242:
mov %l4, %o0
swap  [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3781: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_242
nop

P3782: !_CAS [10] (maybe <- 0x280003c) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_243:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_243
nop

P3783: !_QWLD [6] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_244:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3784: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3785: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_244
nop

P3786: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_245:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3787: !_LD [7] (Int) (Loop exit) (Branch target of P3926)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_245
nop
ba P3788
nop

TARGET3926:
ba RET3926
nop


P3788: !_BST [13] (maybe <- 0x42000041) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_246:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3789: !_ST [0] (maybe <- 0x42000043) (FP) (Loop exit)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]
loop_exit_5_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_246
nop

P3790: !_QWST [11] (maybe <- 0x42000044) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_247:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_5_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_247
nop

P3791: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_248:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3792: !_BST [10] (maybe <- 0x42000046) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_248
nop

P3793: !_REPLACEMENT [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_249:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_5_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_249
nop

P3794: !_LD [14] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_250:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3794
nop
RET3794:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_250
nop

P3795: !_BSTC [2] (maybe <- 0x42000048) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_251:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P3796: !_FLUSHI [9] (Int) (Loop exit)
flush %g0 
loop_exit_5_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_251
nop

P3797: !_CASX [6] (maybe <- 0x280003d) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_252:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i3], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3798: !_LD [11] (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P3799: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_5_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_252
nop

P3800: !_QWLD [15] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_253:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3801: !_FLUSH [10] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_253
nop

P3802: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_254:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3803: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_254
nop

P3804: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_255:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23
loop_exit_5_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_255
nop

P3805: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_256:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3806: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_256
nop

P3807: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_257:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3808: !_DWST [10] (maybe <- 0x4200004a) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_257
nop

P3809: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_258:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_258
nop

P3810: !_DWLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_259:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P3811: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_259
nop

P3812: !_LD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_260:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3813: !_LD [6] (FP) (Loop exit)
ld [%i3 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_260
nop

P3814: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_261:
prefetch [%i1 + 12], 22

P3815: !_ST [13] (maybe <- 0x4200004b) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]
loop_exit_5_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_261
nop

P3816: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_262:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3817: !_LD [9] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3818: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_262
nop

P3819: !_FLUSH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_263:
! Unsupported instruction
loop_exit_5_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_263
nop

P3820: !_LD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_264:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P3821: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_264
nop

P3822: !_BST [15] (maybe <- 0x4200004c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_265:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_5_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_265
nop

P3823: !_FLUSH [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_266:
! Unsupported instruction

P3824: !_PREFETCH [11] (Int) (Faults) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 21
loop_exit_5_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_266
nop

P3825: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_267:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P3826: !_LD [10] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3827: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_267
nop

P3828: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_268:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1

P3829: !_DWLD [8] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3830: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_268
nop

P3831: !_LD [7] (FP) (Loop entry) (Branch target of P3958)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_269:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
ba P3832
nop

TARGET3958:
ba RET3958
nop


P3832: !_PREFETCH [1] (Int) (Faults) (Loop exit)
prefetch [%i0 + 12], 21
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_269
nop

P3833: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_270:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3834: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_270
nop

P3835: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_271:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_271
nop

P3836: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_272:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_272
nop

P3837: !_PREFETCH [6] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_273:
prefetch [%g0], 1
loop_exit_5_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_273
nop

P3838: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_274:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3839: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_274
nop

P3840: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_275:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P3841: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3842: !_LD [10] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_275
nop

P3843: !_LD [2] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_276:
ld [%i1 + 4], %f0
! 1 addresses covered

P3844: !_REPLACEMENT [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_276
nop

P3845: !_PREFETCH [11] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_277:
wr %g0, 0x88, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 21

P3846: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_277
nop

P3847: !_BST [15] (maybe <- 0x4200004e) (FP) (Loop entry) (Branch target of P3633)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_278:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
ba P3848
nop

TARGET3633:
ba RET3633
nop


P3848: !_LD [11] (Int) (Branch target of P3372)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3849
nop

TARGET3372:
ba RET3372
nop


P3849: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_278
nop

P3850: !_QWLD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_279:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3851: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3852: !_LD [13] (Int) (Loop exit)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_279
nop

P3853: !_FLUSH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_280:
! Unsupported instruction
loop_exit_5_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_280
nop

P3854: !_CASX [2] (maybe <- 0x280003e) (Int) (Loop entry) (Loop exit) (CBR) (Branch target of P3411)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_281:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i1], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3854
nop
RET3854:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_281
nop
ba P3855
nop

TARGET3411:
ba RET3411
nop


P3855: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_282:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3856: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_282
nop

P3857: !_CAS [15] (maybe <- 0x280003f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_283:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_283
nop

P3858: !_BLD [15] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_284:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_284
nop

P3859: !_CASX [5] (maybe <- 0x2800040) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_285:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_285
nop

P3860: !_PREFETCH [8] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_286:
wr %g0, 0x82, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 21

P3861: !_SWAP [12] (maybe <- 0x2800041) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3862: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_286
nop

P3863: !_LD [3] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_287:
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3864: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_287
nop

P3865: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_288:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_288
nop

P3866: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_289:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_289
nop

P3867: !_ST [11] (maybe <- 0x42000050) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_290:
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]

P3868: !_QWLD [1] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_290
nop

P3869: !_ST [10] (maybe <- 0x2800042) (Int) (Loop entry) (Branch target of P4012)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_291:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
ba P3870
nop

TARGET4012:
ba RET4012
nop


P3870: !_PREFETCH [5] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 4
loop_exit_5_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_291
nop

P3871: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_292:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3872: !_PREFETCH [7] (Int) (Faults)
prefetch [%g0], 2

P3873: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_292
nop

P3874: !_QWST [15] (maybe <- 0x42000051) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_293:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_5_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_293
nop

P3875: !_QWST [12] (maybe <- 0x42000053) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_294:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P3876: !_BSTC [0] (maybe <- 0x42000055) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_5_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_294
nop

P3877: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_295:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3878: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_295
nop

P3879: !_FLUSH [1] (Int) (Loop entry) (Branch target of P3701)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_296:
! Unsupported instruction
ba P3880
nop

TARGET3701:
ba RET3701
nop


P3880: !_BLD [4] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_296
nop

P3881: !_REPLACEMENT [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_297:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+12], %l7
st %l7, [%i3+12]
add %i3, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]

P3882: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3883: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_297
nop

P3884: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_298:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3885: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_298
nop

P3886: !_ST [7] (maybe <- 0x2800043) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_299:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
loop_exit_5_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_299
nop

P3887: !_LD [7] (Int) (Loop entry) (Branch target of P3479)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_300:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3888
nop

TARGET3479:
ba RET3479
nop


P3888: !_REPLACEMENT [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P3889: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_300
nop

P3890: !_CASX [8] (maybe <- 0x2800044) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_301:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P3891: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_301
nop

P3892: !_SWAP [1] (maybe <- 0x2800045) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_302:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3893: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_302
nop

P3894: !_SWAP [3] (maybe <- 0x2800046) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_303:
mov %l4, %o0
swap  [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3895: !_REPLACEMENT [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3896: !_LD [6] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_303
nop

P3897: !_BSTC [9] (maybe <- 0x42000057) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_304:
wr %g0, 0xe0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_304
nop

P3898: !_DWST [0] (maybe <- 0x42000059) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_305:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 0]
loop_exit_5_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_305
nop

P3899: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_306:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3900: !_LD [5] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3901: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_306
nop

P3902: !_SWAP [13] (maybe <- 0x2800047) (Int) (Loop entry) (LE) (Branch target of P3585)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_307:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %o0, %l7, %o5
srl %o5, 8, %o5
sll %o0, 8, %o0
and %o0, %l7, %o0
or %o0, %o5, %o0
srl %o0, 16, %o5
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %o5, %o0
swapa  [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P3903
nop

TARGET3585:
ba RET3585
nop


P3903: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3904: !_LD [11] (Int) (Loop exit)
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_307
nop

P3905: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_308:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3906: !_LD [4] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_308
nop

P3907: !_BST [11] (maybe <- 0x4200005a) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_309:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3908: !_LD [11] (FP) (Loop exit)
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_309
nop

P3909: !_PREFETCH [4] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_310:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 22
loop_exit_5_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_310
nop

P3910: !_FLUSH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_311:
! Unsupported instruction
loop_exit_5_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_311
nop

P3911: !_QWLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_312:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3912: !_BLD [3] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f32
membar #Sync 
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_5_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_312
nop

P3913: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_313:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3914: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_313
nop

P3915: !_PREFETCH [5] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_314:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 28
loop_exit_5_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_314
nop

P3916: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_315:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3917: !_LD [11] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3917
nop
RET3917:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_315
nop

P3918: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_316:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3919: !_PREFETCH [14] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 2

P3920: !_LD [7] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_316
nop

P3921: !_DWST [5] (maybe <- 0x2800048) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_317:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_5_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_317
nop

P3922: !_CASX [12] (maybe <- 0x2800049) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_318:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i3], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_318
nop

P3923: !_ST [14] (maybe <- 0x280004a) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_319:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_5_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_319
nop

P3924: !_CASX [15] (maybe <- 0x280004b) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_320:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_320
nop

P3925: !_BST [12] (maybe <- 0x4200005c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_321:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_321
nop

P3926: !_MEMBAR (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_322:
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3926
nop
RET3926:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3927: !_LD [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3928: !_LD [14] (Int) (Loop exit) (Branch target of P3502)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_322
nop
ba P3929
nop

TARGET3502:
ba RET3502
nop


P3929: !_LD [6] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_323:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered

P3930: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_323
nop

P3931: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_324:
prefetch [%i1 + 4], 3

P3932: !_CAS [1] (maybe <- 0x280004c) (Int) (Loop exit)
add %i0, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_324
nop

P3933: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_325:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3934: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_325
nop

P3935: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_326:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3936: !_LD [10] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_326
nop

P3937: !_QWST [6] (maybe <- 0x4200005e) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_327:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P3938: !_BST [9] (maybe <- 0x42000060) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_327
nop

P3939: !_CAS [8] (maybe <- 0x280004d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_328:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_328
nop

P3940: !_PREFETCH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_329:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
loop_exit_5_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_329
nop

P3941: !_SWAP [15] (maybe <- 0x280004e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_330:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3942: !_LD [12] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_330
nop

P3943: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_331:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3944: !_LD [11] (FP) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P3945: !_LD [10] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_331
nop

P3946: !_REPLACEMENT [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_332:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_5_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_332
nop

P3947: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_333:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P3948: !_QWLD [2] (FP) (Loop exit)
ldq   [%i1 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f19, %f3
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_5_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_333
nop

P3949: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_334:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3950: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_334
nop

P3951: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_335:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 1
loop_exit_5_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_335
nop

P3952: !_REPLACEMENT [3] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_336:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]

P3953: !_CAS [4] (maybe <- 0x280004f) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_336
nop

P3954: !_QWST [7] (maybe <- 0x42000062) (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_337:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3954
nop
RET3954:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3955: !_DWST [1] (maybe <- 0x42000064) (FP) (Loop exit) (Branch target of P3436)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i0 + 8]
loop_exit_5_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_337
nop
ba P3956
nop

TARGET3436:
ba RET3436
nop


P3956: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_338:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3957: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_338
nop

P3958: !_PREFETCH [7] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_339:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3958
nop
RET3958:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_339
nop

P3959: !_LD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_340:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3960: !_LD [1] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3960
nop
RET3960:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_340
nop

P3961: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_341:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_341
nop

P3962: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_342:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_342
nop

P3963: !_FLUSH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_343:
! Unsupported instruction

P3964: !_BSTC [1] (maybe <- 0x42000065) (FP) (Loop exit) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3964
nop
RET3964:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_5_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_343
nop

P3965: !_SWAP [4] (maybe <- 0x2800050) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_344:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P3966: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_344
nop

P3967: !_REPLACEMENT [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_345:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P3968: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_345
nop

P3969: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_346:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3970: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_346
nop

P3971: !_PREFETCH [7] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_347:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 19
loop_exit_5_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_347
nop

P3972: !_CAS [3] (maybe <- 0x2800051) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_348:
add %i1, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P3973: !_DWLD [3] (Int)
ldx [%i1 + 8], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P3974: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_5_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_348
nop

P3975: !_DWLD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_349:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3976: !_LD [5] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P3977: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_349
nop

P3978: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_350:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3979: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_350
nop

P3980: !_BSTC [12] (maybe <- 0x42000067) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_351:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_5_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_351
nop

P3981: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_352:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3982: !_ST [7] (maybe <- 0x2800052) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4

P3983: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_352
nop

P3984: !_BST [9] (maybe <- 0x42000069) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_353:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P3985: !_QWLD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_353
nop

P3986: !_LD [6] (FP) (Loop entry) (Loop exit) (Branch target of P3570)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_354:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_354
nop
ba P3987
nop

TARGET3570:
ba RET3570
nop


P3987: !_QWLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_355:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_5_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_355
nop

P3988: !_ST [1] (maybe <- 0x4200006b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_356:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 12 ]
loop_exit_5_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_356
nop

P3989: !_PREFETCH [14] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_357:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 23

P3990: !_BST [14] (maybe <- 0x4200006c) (FP) (Loop exit)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_5_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_357
nop

P3991: !_LD [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_358:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3992: !_LD [0] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_358
nop

P3993: !_BSTC [11] (maybe <- 0x4200006e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_359:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_5_359:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_359
nop

P3994: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_360:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3995: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_360:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_360
nop

P3996: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_361:
ld [%i0 + 12], %f0
! 1 addresses covered

P3997: !_QWST [6] (maybe <- 0x42000070) (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_361:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_361
nop

P3998: !_LD [4] (Int) (Loop entry) (Branch target of P3382)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_362:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3999
nop

TARGET3382:
ba RET3382
nop


P3999: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_362:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_362
nop

P4000: !_FLUSH [5] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_363:
! Unsupported instruction

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4000
nop
RET4000:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4001: !_LD [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4002: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_363:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_363
nop

P4003: !_LD [9] (FP) (Loop entry) (Branch target of P3443)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_364:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
ba P4004
nop

TARGET3443:
ba RET3443
nop


P4004: !_LD [7] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4005: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_5_364:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_364
nop

P4006: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_365:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4007: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_365:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_365
nop

P4008: !_CAS [10] (maybe <- 0x2800053) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_366:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_366:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_366
nop

P4009: !_FLUSH [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_5_367:
! Unsupported instruction

P4010: !_DWST [9] (maybe <- 0x42000072) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_5_367:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_367
nop

P4011: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_368:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1

P4012: !_LD [14] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4012
nop
RET4012:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4013: !_LD [9] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_368:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_368
nop

P4014: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_369:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4015: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_5_369:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_369
nop

P4016: !_MEMBAR (Int)
membar #StoreLoad

END_NODES5: ! Test instruction sequence for CPU 5 ends
sethi %hi(0xdead0e0f), %l7
or    %l7, %lo(0xdead0e0f), %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
stw %l7, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func6:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l6
or    %l6, %lo(0xdeadbee0), %l6
stw   %l6, [%i5]
sethi %hi(0xdeadbee1), %l6
or    %l6, %lo(0xdeadbee1), %l6
stw   %l6, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x06deade1), %l6
or    %l6, %lo(0x06deade1), %l6
stw %l6, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x3000001), %l4
or    %l4, %lo(0x3000001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x42800001), %l6
or    %l6, %lo(0x42800001), %l6
stw %l6, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x37000000), %l6
or    %l6, %lo(0x37000000), %l6
stw %l6, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x4af6^4
sethi %hi(0x4af6), %l0
or    %l0, %lo(0x4af6), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES6: ! Test instruction sequence for CPU 6 begins

P4017: !_PREFETCH [10] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_0:
prefetch [%g0], 30
loop_exit_6_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_0
nop

P4018: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_1:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4019: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_1
nop

P4020: !_SWAP [12] (maybe <- 0x3000001) (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_2:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %o0, %l6, %l7
srl %l7, 8, %l7
sll %o0, 8, %o0
and %o0, %l6, %o0
or %o0, %l7, %o0
srl %o0, 16, %l7
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %l7, %o0
swapa  [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4021: !_PREFETCH [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 17

P4022: !_LD [12] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_2
nop

P4023: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_3:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4024: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_3
nop

P4025: !_BSTC [8] (maybe <- 0x42800001) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_4:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_6_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_4
nop

P4026: !_BST [2] (maybe <- 0x42800003) (FP) (Loop entry) (Loop exit) (Branch target of P4228)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_5:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_6_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_5
nop
ba P4027
nop

TARGET4228:
ba RET4228
nop


P4027: !_CAS [3] (maybe <- 0x3000002) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_6:
add %i1, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

P4028: !_SWAP [10] (maybe <- 0x3000003) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o1
swap  [%i2 + 4], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P4029: !_LD [4] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_6
nop

P4030: !_BST [13] (maybe <- 0x42800005) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_7:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P4031: !_LD [1] (FP) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_7
nop

P4032: !_BLD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_8:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4033: !_SWAP [8] (maybe <- 0x3000004) (Int)
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4034: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_8
nop

P4035: !_PREFETCH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_9:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 2
loop_exit_6_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_9
nop

P4036: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_10:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0

P4037: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_10
nop

P4038: !_CASX [12] (maybe <- 0x3000005) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_11:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i2], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_11
nop

P4039: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_12:
prefetch [%i1 + 12], 26
loop_exit_6_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_12
nop

P4040: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_13:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23

P4041: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_13
nop

P4042: !_QWLD [13] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_14:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4042
nop
RET4042:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_14
nop

P4043: !_SWAP [9] (maybe <- 0x3000006) (Int) (Loop entry) (Branch target of P4255)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_15:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P4044
nop

TARGET4255:
ba RET4255
nop


P4044: !_BSTC [4] (maybe <- 0x42800007) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4045: !_LD [4] (Int) (Loop exit) (CBR) (Branch target of P4235)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4045
nop
RET4045:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_15
nop
ba P4046
nop

TARGET4235:
ba RET4235
nop


P4046: !_LD [1] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_16:
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4047: !_DWLD [14] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P4048: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_16
nop

P4049: !_DWLD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_17:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4050: !_PREFETCH [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23

P4051: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_17
nop

P4052: !_SWAP [1] (maybe <- 0x3000007) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_18:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4053: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_18
nop

P4054: !_CASX [13] (maybe <- 0x3000008) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_19:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4055: !_PREFETCH [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_19
nop

P4056: !_PREFETCH [13] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_20:
prefetch [%g0], 3

P4057: !_REPLACEMENT [1] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_6_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_20
nop

P4058: !_REPLACEMENT [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_21:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_6_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_21
nop

P4059: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_22:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_22
nop

P4060: !_PREFETCH [15] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_23:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 4

P4061: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 2
loop_exit_6_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_23
nop

P4062: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_24:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4063: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_24
nop

P4064: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_25:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_6_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_25
nop

P4065: !_QWLD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_26:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_26
nop

P4066: !_BLD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_27:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4067: !_LD [10] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4068: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_27
nop

P4069: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_28:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 22

P4070: !_LD [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4071: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_28
nop

P4072: !_BSTC [8] (maybe <- 0x42800009) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_29:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_6_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_29
nop

P4073: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_30:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_30
nop

P4074: !_QWST [13] (maybe <- 0x4280000b) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_31:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P4075: !_LD [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4076: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_31
nop

P4077: !_QWLD [7] (FP) (Loop entry) (Loop exit) (Branch target of P4684)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_32:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_32
nop
ba P4078
nop

TARGET4684:
ba RET4684
nop


P4078: !_ST [11] (maybe <- 0x3000009) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_33:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
loop_exit_6_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_33
nop

P4079: !_BLD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_34:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4080: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 22
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_34
nop

P4081: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_35:
prefetch [%i1 + 4], 28
loop_exit_6_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_35
nop

P4082: !_QWST [11] (maybe <- 0x4280000d) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_36:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P4083: !_BLD [0] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_36
nop

P4084: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_37:
prefetch [%i1 + 12], 3

P4085: !_BST [6] (maybe <- 0x4280000f) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_6_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_37
nop

P4086: !_PREFETCH [7] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_38:
prefetch [%g0], 2

P4087: !_BLD [5] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_38
nop

P4088: !_LD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_39:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_39
nop

P4089: !_REPLACEMENT [9] (Int) (Loop entry) (Loop exit) (Branch target of P4470)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_40:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_6_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_40
nop
ba P4090
nop

TARGET4470:
ba RET4470
nop


P4090: !_SWAP [5] (maybe <- 0x300000a) (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_41:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %o0, %o5, %l3
srl %l3, 8, %l3
sll %o0, 8, %o0
and %o0, %o5, %o0
or %o0, %l3, %o0
srl %o0, 16, %l3
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %l3, %o0
swapa  [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4091: !_QWLD [3] (FP) (Branch target of P4569)
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
ba P4092
nop

TARGET4569:
ba RET4569
nop


P4092: !_LD [6] (Int) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4092
nop
RET4092:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_41
nop

P4093: !_BLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_42:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_42
nop

P4094: !_CASX [5] (maybe <- 0x300000b) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_43:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_43
nop

P4095: !_BST [6] (maybe <- 0x42800011) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_44:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4096: !_REPLACEMENT [4] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_6_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_44
nop

P4097: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_45:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4098: !_CASX [12] (maybe <- 0x300000c) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %l3
! move %l3(upper) -> %o0(lower)
srlx %l3, 32, %l6
or %l6, %o0, %o0
! move %l3(lower) -> %o1(upper)
sllx %l3, 32, %o1
mov  %l3, %l6
mov %l4, %l3
casx [%i3], %l6, %l3
! move %l3(upper) -> %o1(lower)
srlx %l3, 32, %l6
or %l6, %o1, %o1
! move %l3(lower) -> %o2(upper)
sllx %l3, 32, %o2
add  %l4, 1, %l4

P4099: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o2(lower)
or %l7, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_6_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_45
nop

P4100: !_CAS [15] (maybe <- 0x300000d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_46:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

P4101: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P4102: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_46
nop

P4103: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_47:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4104: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4105: !_LD [3] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_47
nop

P4106: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_48:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 29
loop_exit_6_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_48
nop

P4107: !_SWAP [14] (maybe <- 0x300000e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_49:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4108: !_PREFETCH [11] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 26

P4109: !_LD [10] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_49
nop

P4110: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_50:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_6_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_50
nop

P4111: !_FLUSH [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_51:
! Unsupported instruction

P4112: !_QWST [1] (maybe <- 0x42800013) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_6_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_51
nop

P4113: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_52:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 2
loop_exit_6_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_52
nop

P4114: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_53:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_53
nop

P4115: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_54:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4116: !_BLD [1] (FP)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4117: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_54
nop

P4118: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_55:
prefetch [%i0 + 12], 1

P4119: !_LD [5] (Int) (NF) (Faults)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4120: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_55
nop

P4121: !_BLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_56:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4122: !_DWLD [7] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4123: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_56
nop

P4124: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_57:
membar #StoreLoad
loop_exit_6_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_57
nop

P4125: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_58:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4126: !_LD [15] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_58
nop

P4127: !_QWLD [10] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_59:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4127
nop
RET4127:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_59
nop

P4128: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_60:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4129: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_60
nop

P4130: !_PREFETCH [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_61:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20

P4131: !_SWAP [12] (maybe <- 0x300000f) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4132: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_61
nop

P4133: !_LD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_62:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4134: !_PREFETCH [5] (Int) (Faults) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 21
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_62
nop

P4135: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_63:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 16

P4136: !_PREFETCH [1] (Int) (Loop exit)
prefetch [%i0 + 12], 2
loop_exit_6_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_63
nop

P4137: !_DWLD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_64:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4138: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_64
nop

P4139: !_CASX [15] (maybe <- 0x3000010) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_65:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4140: !_DWLD [0] (Int)
ldx [%i0 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P4141: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_6_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_65
nop

P4142: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_66:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_66
nop

P4143: !_SWAP [11] (maybe <- 0x3000011) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_67:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4144: !_CAS [9] (maybe <- 0x3000012) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %l7
mov %l7, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
mov %l4, %o1
cas [%l3], %o5, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
add   %l4, 1, %l4

P4145: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_67
nop

P4146: !_FLUSH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_68:
! Unsupported instruction
loop_exit_6_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_68
nop

P4147: !_LD [3] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_69:
wr %g0, 0x82, %asi
lda    [%i1 + 12] %asi, %f0
! 1 addresses covered

P4148: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_69
nop

P4149: !_BST [4] (maybe <- 0x42800015) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_70:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_70
nop

P4150: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_71:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+12], %l7
st %l7, [%i3+12]
add %i3, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_6_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_71
nop

P4151: !_PREFETCH [11] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_72:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 21

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4151
nop
RET4151:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4152: !_BSTC [1] (maybe <- 0x42800017) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_6_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_72
nop

P4153: !_DWST [5] (maybe <- 0x3000013) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_73:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_6_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_73
nop

P4154: !_LD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_74:
ld [%i0 + 4], %f0
! 1 addresses covered

P4155: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_74
nop

P4156: !_REPLACEMENT [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_75:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_6_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_75
nop

P4157: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_76:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4158: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_76
nop

P4159: !_QWLD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_77:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_77
nop

P4160: !_SWAP [0] (maybe <- 0x3000014) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_78:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4161: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_78
nop

P4162: !_PREFETCH [5] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_79:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 17
loop_exit_6_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_79
nop

P4163: !_QWST [1] (maybe <- 0x42800019) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_80:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_6_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_80
nop

P4164: !_CASX [8] (maybe <- 0x3000015) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_81:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i2], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4165: !_LD [9] (FP) (Loop exit)
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_81
nop

P4166: !_LD [2] (Int) (Loop entry) (Branch target of P4622)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_82:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4167
nop

TARGET4622:
ba RET4622
nop


P4167: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_82
nop

P4168: !_DWLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_83:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldd [%i2 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_83
nop

P4169: !_DWLD [15] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_84:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

P4170: !_PREFETCH [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_84
nop

P4171: !_REPLACEMENT [3] (Int) (Loop entry) (Loop exit) (Branch target of P4092)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_85:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_6_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_85
nop
ba P4172
nop

TARGET4092:
ba RET4092
nop


P4172: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_86:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4173: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_86
nop

P4174: !_PREFETCH [14] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_87:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 21
loop_exit_6_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_87
nop

P4175: !_PREFETCH [8] (Int) (Faults) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_88:
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 1

P4176: !_PREFETCH [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_6_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_88
nop

P4177: !_DWST [8] (maybe <- 0x3000016) (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_89:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %l7 
stx %l7, [%i2 + 0]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4177
nop
RET4177:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_6_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_89
nop

P4178: !_LD [3] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_90:
wr %g0, 0x82, %asi
lda    [%i1 + 12] %asi, %f0
! 1 addresses covered

P4179: !_DWLD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4180: !_LD [13] (Int) (Loop exit) (Branch target of P4042)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_90
nop
ba P4181
nop

TARGET4042:
ba RET4042
nop


P4181: !_QWLD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_91:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4182: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4183: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_91
nop

P4184: !_QWLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_92:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4185: !_BST [15] (maybe <- 0x4280001b) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_92
nop

P4186: !_QWLD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_93:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4187: !_CASX [9] (maybe <- 0x3000017) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_93
nop

P4188: !_CASX [12] (maybe <- 0x3000018) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_94:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i3], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4189: !_LD [6] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P4190: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_6_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_94
nop

P4191: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_95:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4192: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_95
nop

P4193: !_BLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_96:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4194: !_REPLACEMENT [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_96
nop

P4195: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_97:
prefetch [%i0 + 4], 22

P4196: !_QWST [0] (maybe <- 0x4280001d) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]
loop_exit_6_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_97
nop

P4197: !_LD [6] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_98:
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4198: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_98
nop

P4199: !_BSTC [15] (maybe <- 0x4280001f) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_99:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4200: !_QWLD [1] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_99
nop

P4201: !_CASX [4] (maybe <- 0x3000019) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_100:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_100
nop

P4202: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_101:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 4

P4203: !_CAS [1] (maybe <- 0x300001a) (Int) (Loop exit)
add %i0, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_101
nop

P4204: !_LD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_102:
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_102
nop

P4205: !_PREFETCH [14] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_103:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22

P4206: !_BST [8] (maybe <- 0x42800021) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_6_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_103
nop

P4207: !_DWLD [13] (Int) (Loop entry) (Branch target of P4633)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_104:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4208
nop

TARGET4633:
ba RET4633
nop


P4208: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_104
nop

P4209: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_105:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_6_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_105
nop

P4210: !_SWAP [8] (maybe <- 0x300001b) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_106:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4211: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_106
nop

P4212: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_107:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4213: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_107
nop

P4214: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_108:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 21
loop_exit_6_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_108
nop

P4215: !_QWST [9] (maybe <- 0x42800023) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_109:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P4216: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22
loop_exit_6_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_109
nop

P4217: !_FLUSH [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_110:
! Unsupported instruction

P4218: !_LD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4219: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_110
nop

P4220: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_111:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_111
nop

P4221: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_112:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4222: !_LD [14] (FP) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_112
nop

P4223: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_113:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4224: !_LD [2] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
lda    [%i1 + 4] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_113
nop

P4225: !_QWST [3] (maybe <- 0x42800025) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_114:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_6_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_114
nop

P4226: !_LD [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_115:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4227: !_QWST [4] (maybe <- 0x42800027) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P4228: !_LD [12] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4228
nop
RET4228:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_115
nop

P4229: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_116:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4230: !_PREFETCH [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4

P4231: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_116
nop

P4232: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_117:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4233: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_117
nop

P4234: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_118:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4235: !_CASX [7] (maybe <- 0x300001c) (Int) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %l7
! move %l7(upper) -> %o0(lower)
srlx %l7, 32, %o5
or %o5, %o0, %o0
! move %l7(lower) -> %o1(upper)
sllx %l7, 32, %o1
mov  %l7, %o5
mov %l4, %l7
casx [%l3], %o5, %l7
! move %l7(upper) -> %o1(lower)
srlx %l7, 32, %o5
or %o5, %o1, %o1
! move %l7(lower) -> %o2(upper)
sllx %l7, 32, %o2
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4235
nop
RET4235:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4236: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_6_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_118
nop

P4237: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_119:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_119
nop

P4238: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_120:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4239: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_120
nop

P4240: !_PREFETCH [12] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_121:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 4

P4241: !_PREFETCH [1] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
prefetcha [%i0 + 12] %asi, 20
loop_exit_6_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_121
nop

P4242: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_122:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4243: !_ST [12] (maybe <- 0x300001d) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l7
srl %l7, 8, %l7
sll %l4, 8, %l3
and %l3, %l6, %l3
or %l3, %l7, %l3
srl %l3, 16, %l7
sll %l3, 16, %l3
srl %l3, 0, %l3
or %l3, %l7, %l3
stwa   %l3, [%i3 + 4] %asi
add   %l4, 1, %l4

P4244: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_122
nop

P4245: !_DWST [10] (maybe <- 0x42800029) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_123:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

P4246: !_MEMBAR (Int) (Loop exit)
membar #StoreLoad
loop_exit_6_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_123
nop

P4247: !_BST [14] (maybe <- 0x4280002a) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_124:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4248: !_PREFETCH [9] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 3
loop_exit_6_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_124
nop

P4249: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_125:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_6_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_125
nop

P4250: !_LD [0] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_126:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4250
nop
RET4250:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4251: !_PREFETCH [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22

P4252: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_126
nop

P4253: !_DWLD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_127:
ldx [%i0 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4254: !_LD [9] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4255: !_LD [10] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4255
nop
RET4255:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_127
nop

P4256: !_BLD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_128:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_128
nop

P4257: !_DWLD [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_129:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4258: !_LD [9] (Int) (Loop exit)
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_129
nop

P4259: !_CAS [11] (maybe <- 0x300001e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_130:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4

P4260: !_PREFETCH [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 23
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_130
nop

P4261: !_CAS [12] (maybe <- 0x300001f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_131:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P4262: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P4263: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_131
nop

P4264: !_PREFETCH [0] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_132:
prefetch [%g0], 19

P4265: !_SWAP [8] (maybe <- 0x3000020) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4266: !_LD [8] (Int) (Loop exit)
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_132
nop

P4267: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_133:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_133
nop

P4268: !_LD [15] (Int) (Loop entry) (Branch target of P4491)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_134:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4269
nop

TARGET4491:
ba RET4491
nop


P4269: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_134
nop

P4270: !_CAS [15] (maybe <- 0x3000021) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_135:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_135
nop

P4271: !_ST [6] (maybe <- 0x3000022) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_136:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_6_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_136
nop

P4272: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_137:
prefetch [%i0 + 12], 20

P4273: !_LD [0] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
lda    [%i0 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_137
nop

P4274: !_CASX [13] (maybe <- 0x3000023) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_138:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_138
nop

P4275: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_139:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0

P4276: !_FLUSH [1] (Int) (Loop exit)
! Unsupported instruction
loop_exit_6_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_139
nop

P4277: !_BLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_140:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_140
nop

P4278: !_LD [8] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_141:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered

P4279: !_REPLACEMENT [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_141
nop

P4280: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_142:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_142
nop

P4281: !_LD [9] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_143:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_143
nop

P4282: !_DWST [10] (maybe <- 0x3000024) (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_144:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %l4, %l7, %l3
srl %l3, 8, %l3
sll %l4, 8, %o5
and %o5, %l7, %o5
or %o5, %l3, %o5
srl %o5, 16, %l3
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l3, %o5
sllx %o5, 32, %o5 
stxa %o5, [%i3 + 0 ] %asi
add   %l4, 1, %l4

P4283: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_144
nop

P4284: !_ST [6] (maybe <- 0x3000025) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_145:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_6_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_145
nop

P4285: !_BST [3] (maybe <- 0x4280002c) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_146:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 

P4286: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4287: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_146
nop

P4288: !_DWST [1] (maybe <- 0x3000026) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_147:
mov %l4, %l7 
stx %l7, [%i0 + 8]
add   %l4, 1, %l4

P4289: !_CAS [10] (maybe <- 0x3000027) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_147
nop

P4290: !_LD [0] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_148:
ld [%i0 + 4], %f0
! 1 addresses covered

P4291: !_PREFETCH [3] (Int) (Faults) (Loop exit)
prefetch [%g0], 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_148
nop

P4292: !_REPLACEMENT [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_149:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_6_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_149
nop

P4293: !_REPLACEMENT [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_150:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
loop_exit_6_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_150
nop

P4294: !_BST [15] (maybe <- 0x4280002e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_151:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_151
nop

P4295: !_BLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_152:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_152
nop

P4296: !_DWST [9] (maybe <- 0x3000028) (Int) (Loop entry) (Loop exit) (Branch target of P4151)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_153:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %l3 
stx %l3, [%i2 + 8]
add   %l4, 1, %l4
loop_exit_6_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_153
nop
ba P4297
nop

TARGET4151:
ba RET4151
nop


P4297: !_CASX [8] (maybe <- 0x3000029) (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_154:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
sllx %l7, 32, %l7
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldxa [%i3] %asi, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
! move %o5(upper) -> %o0(lower)
srlx %o5, 32, %l3
or %l3, %o0, %o0
mov  %o5, %l3
mov  %l7, %o5
casxa [%i3] %asi, %l3, %o5
! move %o5(lower) -> %o1(upper)
sllx %o5, 32, %o1
! move %o5(upper) -> %o1(lower)
srlx %o5, 32, %l3
or %l3, %o1, %o1
add  %l4, 1, %l4

P4298: !_LD [8] (Int)
lduw [%i3 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P4299: !_LD [10] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_6_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_154
nop

P4300: !_LD [7] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_155:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4300
nop
RET4300:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4301: !_PREFETCH [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4

P4302: !_LD [6] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_155
nop

P4303: !_BST [12] (maybe <- 0x42800030) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_156:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4304: !_SWAP [6] (maybe <- 0x300002a) (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4305: !_LD [7] (Int) (Loop exit) (Branch target of P4307)
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_156
nop
ba P4306
nop

TARGET4307:
ba RET4307
nop


P4306: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_157:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_157
nop

P4307: !_DWST [11] (maybe <- 0x300002b) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_158:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4307
nop
RET4307:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4308: !_PREFETCH [11] (Int) (Loop exit)
prefetch [%i2 + 12], 23
loop_exit_6_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_158
nop

P4309: !_REPLACEMENT [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_159:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_6_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_159
nop

P4310: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_160:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4311: !_DWLD [0] (Int) (Loop exit)
ldx [%i0 + 0], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l3
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_160
nop

P4312: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_161:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4313: !_LD [8] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4313
nop
RET4313:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_161
nop

P4314: !_SWAP [9] (maybe <- 0x300002c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_162:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4315: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_162
nop

P4316: !_FLUSH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_163:
! Unsupported instruction

P4317: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_163
nop

P4318: !_CAS [3] (maybe <- 0x300002d) (Int) (Loop entry) (Loop exit) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_164:
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %l6, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
wr %g0, 0x88, %asi
add %i1, 12, %l6
lduwa [%l6] %asi, %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l7, %o5
casa [%l6] %asi, %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_164
nop

P4319: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_165:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4320: !_LD [10] (FP)
ld [%i3 + 4], %f0
! 1 addresses covered

P4321: !_LD [6] (Int) (Loop exit) (Branch target of P4658)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_165
nop
ba P4322
nop

TARGET4658:
ba RET4658
nop


P4322: !_BLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_166:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_166
nop

P4323: !_PREFETCH [15] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_167:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
loop_exit_6_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_167
nop

P4324: !_PREFETCH [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_168:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 18
loop_exit_6_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_168
nop

P4325: !_CASX [0] (maybe <- 0x300002e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_169:
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i0], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4326: !_BSTC [13] (maybe <- 0x42800032) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_169
nop

P4327: !_CASX [7] (maybe <- 0x300002f) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_170:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_170
nop

P4328: !_ST [8] (maybe <- 0x42800034) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_171:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_6_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_171
nop

P4329: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_172:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4330: !_LD [10] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_172
nop

P4331: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_173:
prefetch [%i0 + 4], 20
loop_exit_6_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_173
nop

P4332: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_174:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4333: !_PREFETCH [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_174
nop

P4334: !_FLUSH [8] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_175:
! Unsupported instruction
loop_exit_6_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_175
nop

P4335: !_CAS [5] (maybe <- 0x3000030) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_176:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P4336: !_ST [14] (maybe <- 0x42800035) (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_176
nop

P4337: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_177:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21
loop_exit_6_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_177
nop

P4338: !_QWLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_178:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_178
nop

P4339: !_LD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_179:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4340: !_DWST [0] (maybe <- 0x3000031) (Int) (Loop exit)
mov %l4, %l6 
stx %l6, [%i0 + 0]
add   %l4, 1, %l4
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_179
nop

P4341: !_BLD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_180:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4342: !_ST [0] (maybe <- 0x42800036) (FP) (Loop exit)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_180
nop

P4343: !_CAS [4] (maybe <- 0x3000032) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_181:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P4344: !_DWST [11] (maybe <- 0x42800037) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_181
nop

P4345: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_182:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 16

P4346: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 20
loop_exit_6_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_182
nop

P4347: !_CAS [0] (maybe <- 0x3000033) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_183:
add %i0, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_183
nop

P4348: !_LD [11] (FP) (Loop entry) (Loop exit) (Branch target of P4531)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_184:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_184
nop
ba P4349
nop

TARGET4531:
ba RET4531
nop


P4349: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_185:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4350: !_BST [11] (maybe <- 0x42800038) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4351: !_LD [10] (Int) (Loop exit)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_185
nop

P4352: !_LD [0] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_186:
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4353: !_BST [0] (maybe <- 0x4280003a) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P4354: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_186
nop

P4355: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_187:
prefetch [%i1 + 12], 22
loop_exit_6_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_187
nop

P4356: !_QWST [11] (maybe <- 0x4280003c) (FP) (Loop entry) (Branch target of P4369)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_188:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
ba P4357
nop

TARGET4369:
ba RET4369
nop


P4357: !_CAS [2] (maybe <- 0x3000034) (Int) (Loop exit)
add %i1, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_188
nop

P4358: !_ST [5] (maybe <- 0x4280003e) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_189:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P4359: !_LD [5] (FP) (Loop exit)
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_189
nop

P4360: !_MEMBAR (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_190:
membar #StoreLoad

P4361: !_CASX [6] (maybe <- 0x3000035) (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i2], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_190
nop

P4362: !_QWLD [15] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_191:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4363: !_BSTC [4] (maybe <- 0x4280003f) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_191
nop

P4364: !_PREFETCH [8] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_192:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P4365: !_REPLACEMENT [0] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_6_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_192
nop

P4366: !_LD [12] (FP) (Loop entry) (Branch target of P4300)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_193:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
ba P4367
nop

TARGET4300:
ba RET4300
nop


P4367: !_DWLD [0] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
ldda    [%i0 + 0] %asi, %f18
! 1 addresses covered
fmovs %f19, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_193
nop

P4368: !_LD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_194:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4369: !_QWLD [11] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4369
nop
RET4369:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_6_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_194
nop

P4370: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_195:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4371: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_195
nop

P4372: !_PREFETCH [2] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_196:
wr %g0, 0x82, %asi
prefetcha [%i1 + 4] %asi, 2
loop_exit_6_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_196
nop

P4373: !_ST [12] (maybe <- 0x42800041) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_197:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P4374: !_BSTC [12] (maybe <- 0x42800042) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_197
nop

P4375: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_198:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4376: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_198
nop

P4377: !_PREFETCH [14] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_199:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 1
loop_exit_6_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_199
nop

P4378: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_200:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 22

P4379: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_6_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_200
nop

P4380: !_LD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_201:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4381: !_LD [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4382: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_201
nop

P4383: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_202:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_202
nop

P4384: !_QWLD [11] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_203:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4385: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_6_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_203
nop

P4386: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_204:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 2

P4387: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4388: !_LD [2] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_204
nop

P4389: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_205:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_6_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_205
nop

P4390: !_BLD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_206:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4391: !_LD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4392: !_LD [0] (Int) (Loop exit) (Branch target of P4497)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_206
nop
ba P4393
nop

TARGET4497:
ba RET4497
nop


P4393: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_207:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 25
loop_exit_6_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_207
nop

P4394: !_LD [1] (Int) (Loop entry) (Branch target of P4313)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_208:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4395
nop

TARGET4313:
ba RET4313
nop


P4395: !_PREFETCH [4] (Int) (NF) (Faults)
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 1

P4396: !_LD [1] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_208
nop

P4397: !_PREFETCH [1] (Int) (NF) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_209:
wr %g0, 0x82, %asi
prefetcha [%i0 + 12] %asi, 0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4397
nop
RET4397:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

loop_exit_6_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_209
nop

P4398: !_DWLD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_210:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4399: !_LD [14] (Int) (Loop exit)
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_210
nop

P4400: !_SWAP [4] (maybe <- 0x3000036) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_211:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4401: !_REPLACEMENT [11] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P4402: !_LD [5] (Int) (Loop exit)
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_211
nop

P4403: !_CASX [8] (maybe <- 0x3000037) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_212:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4404: !_LD [5] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4404
nop
RET4404:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_212
nop

P4405: !_LD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_213:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4406: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4407: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_213
nop

P4408: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_214:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
loop_exit_6_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_214
nop

P4409: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_215:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4410: !_PREFETCH [15] (Int) (Faults)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 23

P4411: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_215
nop

P4412: !_LD [1] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_216:
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4413: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_216
nop

P4414: !_BLD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_217:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4415: !_LD [8] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_6_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_217
nop

P4416: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_218:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 20
loop_exit_6_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_218
nop

P4417: !_QWLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_219:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_219
nop

P4418: !_ST [2] (maybe <- 0x3000038) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_220:
stw   %l4, [%i1 + 4 ]
add   %l4, 1, %l4
loop_exit_6_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_220
nop

P4419: !_FLUSH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_221:
! Unsupported instruction

P4420: !_FLUSH [7] (Int) (Loop exit)
! Unsupported instruction
loop_exit_6_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_221
nop

P4421: !_QWST [7] (maybe <- 0x42800044) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_222:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_6_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_222
nop

P4422: !_DWST [3] (maybe <- 0x42800046) (FP) (Loop entry) (Loop exit) (Branch target of P4572)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_223:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 8]
loop_exit_6_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_223
nop
ba P4423
nop

TARGET4572:
ba RET4572
nop


P4423: !_CAS [9] (maybe <- 0x3000039) (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_224:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4423
nop
RET4423:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4424: !_CAS [0] (maybe <- 0x300003a) (Int) (Loop exit)
add %i0, 4, %l3
lduw [%l3], %o1
mov %o1, %o5
! move %o5(lower) -> %o1(upper)
sllx %o5, 32, %o1
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o1(lower)
srl %l7, 0, %o5
or %o5, %o1, %o1
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_224
nop

P4425: !_LD [2] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_225:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4426: !_SWAP [6] (maybe <- 0x300003b) (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %l3
swap  [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_225
nop

P4427: !_QWLD [10] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_226:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4428: !_BSTC [1] (maybe <- 0x42800047) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_226
nop

P4429: !_CASX [1] (maybe <- 0x300003c) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_227:
add %i0, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_227
nop

P4430: !_ST [15] (maybe <- 0x300003d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_228:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
loop_exit_6_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_228
nop

P4431: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_229:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_229
nop

P4432: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_230:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P4433: !_LD [13] (FP) (Loop exit) (Branch target of P4598)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_230
nop
ba P4434
nop

TARGET4598:
ba RET4598
nop


P4434: !_LD [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_231:
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4435: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_231
nop

P4436: !_LD [5] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_232:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_232
nop

P4437: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_233:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4438: !_FLUSH [0] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_233
nop

P4439: !_PREFETCH [5] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_234:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 20

P4440: !_MEMBAR (Int) (Loop exit) (Branch target of P4250)
membar #StoreLoad
loop_exit_6_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_234
nop
ba P4441
nop

TARGET4250:
ba RET4250
nop


P4441: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_235:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 1

P4442: !_BSTC [10] (maybe <- 0x42800049) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_235
nop

P4443: !_FLUSHI [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_236:
flush %g0 
loop_exit_6_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_236
nop

P4444: !_CAS [11] (maybe <- 0x300003e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_237:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P4445: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_237
nop

P4446: !_SWAP [9] (maybe <- 0x300003f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_238:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4447: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_238
nop

P4448: !_PREFETCH [15] (Int) (Loop entry) (Loop exit) (Branch target of P4456)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_239:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 21
loop_exit_6_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_239
nop
ba P4449
nop

TARGET4456:
ba RET4456
nop


P4449: !_CAS [2] (maybe <- 0x3000040) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_240:
add %i1, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P4450: !_DWST [0] (maybe <- 0x3000041) (Int) (Loop exit)
mov %l4, %l7 
stx %l7, [%i0 + 0]
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_240
nop

P4451: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_241:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4452: !_LD [15] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_241
nop

P4453: !_CASX [3] (maybe <- 0x3000042) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_242:
add %i1, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4454: !_LD [11] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_242
nop

P4455: !_BLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_243:
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_243
nop

P4456: !_CAS [14] (maybe <- 0x3000043) (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_244:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
add %i2, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4456
nop
RET4456:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_244
nop

P4457: !_BST [0] (maybe <- 0x4280004b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_245:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P4458: !_DWLD [2] (FP) (Loop exit)
ldd [%i1 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_245
nop

P4459: !_REPLACEMENT [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_246:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

P4460: !_CASX [13] (maybe <- 0x3000044) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_246
nop

P4461: !_BLD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_247:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_247
nop

P4462: !_PREFETCH [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_248:
prefetch [%i0 + 4], 4
loop_exit_6_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_248
nop

P4463: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_249:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4464: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_249
nop

P4465: !_BLD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_250:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4466: !_BST [15] (maybe <- 0x4280004d) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_250
nop

P4467: !_LD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_251:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4468: !_LD [4] (FP) (Loop exit)
ld [%i3 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_251
nop

P4469: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_252:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4470: !_LD [5] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4470
nop
RET4470:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4471: !_LD [3] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
lduwa [%i1 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_252
nop

P4472: !_QWST [0] (maybe <- 0x4280004f) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_253:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i0 + 0]

P4473: !_LD [3] (Int) (Branch target of P4540)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4474
nop

TARGET4540:
ba RET4540
nop


P4474: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_253
nop

P4475: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_254:
ld [%i0 + 12], %f0
! 1 addresses covered

P4476: !_DWST [6] (maybe <- 0x42800051) (FP) (Loop exit) (Branch target of P4127)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_254
nop
ba P4477
nop

TARGET4127:
ba RET4127
nop


P4477: !_REPLACEMENT [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_255:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+12], %l3
st %l3, [%i2+12]
add %i2, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P4478: !_LD [11] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_255
nop

P4479: !_LD [9] (Int) (Loop entry) (Branch target of P4577)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_256:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4480
nop

TARGET4577:
ba RET4577
nop


P4480: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_256
nop

P4481: !_QWLD [0] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_257:
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4482: !_BST [14] (maybe <- 0x42800052) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_257
nop

P4483: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_258:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4484: !_LD [3] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_258
nop

P4485: !_LD [6] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_259:
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4486: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i2 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_259
nop

P4487: !_QWLD [9] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_260:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_260
nop

P4488: !_FLUSHI [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_261:
flush %g0 
loop_exit_6_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_261
nop

P4489: !_BST [8] (maybe <- 0x42800054) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_262:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_262
nop

P4490: !_PREFETCH [9] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_263:
prefetch [%g0], 1

P4491: !_BLD [8] (FP) (Loop exit) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4491
nop
RET4491:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_263
nop

P4492: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_264:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4493: !_QWST [9] (maybe <- 0x42800056) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P4494: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_264
nop

P4495: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_265:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_265
nop

P4496: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_266:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4497: !_LD [4] (FP) (NF) (Loop exit) (CBR)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f1
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4497
nop
RET4497:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_266
nop

P4498: !_FLUSH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_267:
! Unsupported instruction
loop_exit_6_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_267
nop

P4499: !_QWST [6] (maybe <- 0x42800058) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_268:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_6_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_268
nop

P4500: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_269:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 2

P4501: !_LD [15] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4502: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_269
nop

P4503: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_270:
membar #StoreLoad
loop_exit_6_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_270
nop

P4504: !_FLUSH [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_271:
! Unsupported instruction

P4505: !_BLD [3] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_271
nop

P4506: !_LD [0] (Int) (Loop entry) (Branch target of P4659)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_272:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4507
nop

TARGET4659:
ba RET4659
nop


P4507: !_PREFETCH [2] (Int) (LE)
wr %g0, 0x88, %asi
prefetcha [%i1 + 4] %asi, 4

P4508: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_272
nop

P4509: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_273:
membar #StoreLoad
loop_exit_6_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_273
nop

P4510: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_274:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4511: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_274
nop

P4512: !_QWST [15] (maybe <- 0x4280005a) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_275:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P4513: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 26
loop_exit_6_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_275
nop

P4514: !_CAS [8] (maybe <- 0x3000045) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_276:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P4515: !_PREFETCH [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 22
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_276
nop

P4516: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_277:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_277
nop

P4517: !_BSTC [5] (maybe <- 0x4280005c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_278:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_278
nop

P4518: !_LD [8] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_279:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P4519: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_279
nop

P4520: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_280:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4521: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_280
nop

P4522: !_DWST [14] (maybe <- 0x4280005e) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_281:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]

P4523: !_BSTC [8] (maybe <- 0x4280005f) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_281
nop

P4524: !_BST [9] (maybe <- 0x42800061) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_282:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_6_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_282
nop

P4525: !_DWST [2] (maybe <- 0x42800063) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_283:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]

P4526: !_REPLACEMENT [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_6_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_283
nop

P4527: !_BST [6] (maybe <- 0x42800064) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_284:
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4528: !_SWAP [13] (maybe <- 0x3000046) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4529: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_284
nop

P4530: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_285:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4531: !_PREFETCH [0] (Int) (CBR)
prefetch [%i0 + 4], 0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4531
nop
RET4531:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4532: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_285
nop

P4533: !_BLD [2] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_286:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_286
nop

P4534: !_PREFETCH [1] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_287:
prefetch [%g0], 4

P4535: !_BSTC [3] (maybe <- 0x42800066) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_6_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_287
nop

P4536: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_288:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 0

P4537: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 22
loop_exit_6_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_288
nop

P4538: !_LD [0] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_289:
wr %g0, 0x82, %asi
lda    [%i0 + 4] %asi, %f0
! 1 addresses covered

P4539: !_PREFETCH [14] (Int) (Faults) (Loop exit)
prefetch [%g0], 3
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_289
nop

P4540: !_LD [4] (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_290:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4540
nop
RET4540:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_290
nop

P4541: !_DWLD [15] (Int) (Loop entry) (Branch target of P4610)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_291:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4542
nop

TARGET4610:
ba RET4610
nop


P4542: !_REPLACEMENT [3] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]

P4543: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_291
nop

P4544: !_CAS [5] (maybe <- 0x3000047) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_292:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P4545: !_PREFETCH [7] (Int) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 3
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_292
nop

P4546: !_SWAP [12] (maybe <- 0x3000048) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_293:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4547: !_LD [13] (FP) (NF)
wr %g0, 0x82, %asi
lda    [%i2 + 12] %asi, %f0
! 1 addresses covered

P4548: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_293
nop

P4549: !_FLUSH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_294:
! Unsupported instruction

P4550: !_PREFETCH [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_6_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_294
nop

P4551: !_QWLD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_295:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4552: !_FLUSH [6] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_295
nop

P4553: !_LD [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_296:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4554: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_296
nop

P4555: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_297:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_6_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_297
nop

P4556: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_298:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2

P4557: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4558: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_298
nop

P4559: !_LD [13] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_299:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4560: !_FLUSH [12] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_299
nop

P4561: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_300:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4562: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_300
nop

P4563: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_301:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P4564: !_QWLD [6] (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_6_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_301
nop

P4565: !_LD [5] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_302:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4566: !_LD [7] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4567: !_LD [9] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_302
nop

P4568: !_ST [4] (maybe <- 0x42800068) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_303:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_6_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_303
nop

P4569: !_LD [13] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_304:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4569
nop
RET4569:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4570: !_FLUSH [1] (Int) (Loop exit) (CBR)
! Unsupported instruction

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4570
nop
RET4570:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_304
nop

P4571: !_ST [6] (maybe <- 0x42800069) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_305:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
loop_exit_6_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_305
nop

P4572: !_PREFETCH [6] (Int) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_306:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 22

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4572
nop
RET4572:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

loop_exit_6_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_306
nop

P4573: !_QWST [11] (maybe <- 0x4280006a) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_307:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P4574: !_DWLD [0] (FP) (Loop exit)
ldd [%i0 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_307
nop

P4575: !_PREFETCH [3] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_308:
prefetch [%i1 + 12], 23

P4576: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 4
loop_exit_6_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_308
nop

P4577: !_PREFETCH [6] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_309:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4577
nop
RET4577:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4578: !_CASX [11] (maybe <- 0x3000049) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_309
nop

P4579: !_BSTC [11] (maybe <- 0x4280006c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_310:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_6_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_310
nop

P4580: !_LD [13] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_311:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P4581: !_LD [6] (FP) (Loop exit)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_311
nop

P4582: !_QWST [12] (maybe <- 0x4280006e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_312:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_6_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_312
nop

P4583: !_ST [7] (maybe <- 0x300004a) (Int) (Loop entry) (Branch target of P4045)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_313:
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 12 ]
add   %l4, 1, %l4
ba P4584
nop

TARGET4045:
ba RET4045
nop


P4584: !_CASX [7] (maybe <- 0x300004b) (Int) (Loop exit)
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_313
nop

P4585: !_QWST [2] (maybe <- 0x42800070) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_314:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]

P4586: !_BSTC [0] (maybe <- 0x42800072) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_6_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_314
nop

P4587: !_BST [9] (maybe <- 0x42800074) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_315:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4588: !_FLUSHI [5] (Int) (Loop exit)
flush %g0 
loop_exit_6_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_315
nop

P4589: !_PREFETCH [3] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_316:
wr %g0, 0x88, %asi
prefetcha [%i1 + 12] %asi, 22

P4590: !_BLD [13] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_316
nop

P4591: !_REPLACEMENT [6] (Int) (Loop entry) (Branch target of P4397)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_317:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
ba P4592
nop

TARGET4397:
ba RET4397
nop


P4592: !_QWST [6] (maybe <- 0x42800076) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_6_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_317
nop

P4593: !_ST [2] (maybe <- 0x42800078) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_318:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 4 ]

P4594: !_LD [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4595: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_318
nop

P4596: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_319:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4597: !_PREFETCH [1] (Int) (Loop exit)
prefetch [%i0 + 12], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_319
nop

P4598: !_BLD [1] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_320:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4598
nop
RET4598:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4599: !_PREFETCH [3] (Int) (Faults) (Loop exit)
prefetch [%i1 + 12], 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_320
nop

P4600: !_SWAP [8] (maybe <- 0x300004c) (Int) (Loop entry) (Branch target of P4177)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_321:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P4601
nop

TARGET4177:
ba RET4177
nop


P4601: !_LD [12] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_321
nop

P4602: !_LD [11] (FP) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_322:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_322
nop

P4603: !_SWAP [0] (maybe <- 0x300004d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_323:
mov %l4, %o0
swap  [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4604: !_DWST [0] (maybe <- 0x300004e) (Int)
mov %l4, %o5 
stx %o5, [%i0 + 0]
add   %l4, 1, %l4

P4605: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_323
nop

P4606: !_LD [6] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_324:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4607: !_PREFETCH [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 2
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_324
nop

P4608: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_325:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4609: !_LD [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4610: !_LD [8] (Int) (Loop exit) (CBR)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4610
nop
RET4610:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_325
nop

P4611: !_DWLD [9] (Int) (NF) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_326:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldxa [%i2 + 8] %asi, %l6
! move %l6(upper) -> %o0(upper)
or %l6, %g0, %o0

P4612: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
srlx %o0, 32, %o0
sllx %o0, 32, %o0
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_326
nop

P4613: !_PREFETCH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_327:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0
loop_exit_6_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_327
nop

P4614: !_DWLD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_328:
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4615: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_328
nop

P4616: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_329:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 23

P4617: !_LD [4] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_329
nop

P4618: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_330:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 3
loop_exit_6_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_330
nop

P4619: !_LD [12] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_331:
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4620: !_LD [5] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_331
nop

P4621: !_QWST [4] (maybe <- 0x42800079) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_332:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P4622: !_LD [5] (FP) (Loop exit) (CBR)
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4622
nop
RET4622:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_332
nop

P4623: !_FLUSH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_333:
! Unsupported instruction

P4624: !_LD [14] (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4625: !_LD [8] (Int) (Loop exit) (Branch target of P4404)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_333
nop
ba P4626
nop

TARGET4404:
ba RET4404
nop


P4626: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_334:
prefetch [%i1 + 12], 18
loop_exit_6_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_334
nop

P4627: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_335:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4628: !_FLUSH [2] (Int) (Loop exit) (Branch target of P4570)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_335
nop
ba P4629
nop

TARGET4570:
ba RET4570
nop


P4629: !_PREFETCH [7] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_336:
prefetch [%g0], 19
loop_exit_6_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_336
nop

P4630: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_337:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4631: !_BST [12] (maybe <- 0x4280007b) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4632: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_337
nop

P4633: !_DWLD [9] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_338:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4633
nop
RET4633:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4634: !_DWLD [8] (Int)
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4635: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_338
nop

P4636: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_339:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_339
nop

P4637: !_BST [2] (maybe <- 0x4280007d) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_340:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_6_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_340
nop

P4638: !_FLUSH [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_341:
! Unsupported instruction

P4639: !_PREFETCH [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_6_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_341
nop

P4640: !_SWAP [14] (maybe <- 0x300004f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_342:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4641: !_LD [11] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_342
nop

P4642: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_343:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4643: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_343
nop

P4644: !_DWST [8] (maybe <- 0x4280007f) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_344:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_6_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_344
nop

P4645: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_345:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 2

P4646: !_BSTC [13] (maybe <- 0x42800080) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_6_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_345
nop

P4647: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_346:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23

P4648: !_LD [7] (Int)
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4649: !_LD [7] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_346
nop

P4650: !_CASX [8] (maybe <- 0x3000050) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_347:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P4651: !_BSTC [12] (maybe <- 0x42800082) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_6_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_347
nop

P4652: !_BLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_348:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4653: !_PREFETCH [14] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 20
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_348
nop

P4654: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_349:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_6_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_349
nop

P4655: !_PREFETCH [6] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_350:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 0
loop_exit_6_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_350
nop

P4656: !_QWLD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_351:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4657: !_BSTC [2] (maybe <- 0x42800084) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_351
nop

P4658: !_LD [9] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_352:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4658
nop
RET4658:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4659: !_DWLD [9] (FP) (Loop exit) (CBR)
ldd [%i2 + 8], %f18
! 1 addresses covered
fmovs %f19, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4659
nop
RET4659:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_352
nop

P4660: !_ST [11] (maybe <- 0x42800086) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_353:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]
loop_exit_6_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_353
nop

P4661: !_QWST [4] (maybe <- 0x42800087) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_354:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_6_354:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_354
nop

P4662: !_CAS [12] (maybe <- 0x3000051) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_355:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P4663: !_PREFETCH [7] (Int) (Loop exit) (Branch target of P4423)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 2
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_355:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_355
nop
ba P4664
nop

TARGET4423:
ba RET4423
nop


P4664: !_BSTC [5] (maybe <- 0x42800089) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_356:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4665: !_LD [1] (Int)
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4666: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_356:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_356
nop

P4667: !_CAS [7] (maybe <- 0x3000052) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_357:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_357:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_357
nop

P4668: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_358:
prefetch [%i0 + 4], 23

P4669: !_PREFETCH [14] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 21
loop_exit_6_358:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_358
nop

P4670: !_LD [10] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_359:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P4671: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_359:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_359
nop

P4672: !_LD [2] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_360:
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4673: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_360:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_360
nop

P4674: !_LD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_361:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4675: !_QWLD [4] (FP) (Loop exit)
ldq   [%i2 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_6_361:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_361
nop

P4676: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_362:
ld [%i1 + 12], %f0
! 1 addresses covered

P4677: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_6_362:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_362
nop

P4678: !_LD [5] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_363:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4679: !_LD [1] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
lduwa [%i0 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_363:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_363
nop

P4680: !_ST [3] (maybe <- 0x4280008b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_364:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 12 ]
loop_exit_6_364:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_364
nop

P4681: !_REPLACEMENT [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_365:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P4682: !_SWAP [14] (maybe <- 0x3000053) (Int)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4683: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_365:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_365
nop

P4684: !_LD [2] (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_366:
ld [%i1 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4684
nop
RET4684:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4685: !_ST [13] (maybe <- 0x4280008c) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_6_366:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_366
nop

P4686: !_LD [15] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_6_367:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4687: !_PREFETCH [14] (Int)
prefetch [%i3 + 4], 0

P4688: !_LD [14] (Int) (Loop exit)
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_6_367:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_367
nop

P4689: !_QWST [13] (maybe <- 0x4280008d) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_368:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_6_368:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_368
nop

P4690: !_MEMBAR (Int)
membar #StoreLoad

END_NODES6: ! Test instruction sequence for CPU 6 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func7:
! 1000 (dynamic) instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x07deade1), %l3
or    %l3, %lo(0x07deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x3800001), %l4
or    %l4, %lo(0x3800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x43000001), %l3
or    %l3, %lo(0x43000001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x37800000), %l3
or    %l3, %lo(0x37800000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x5a55^4
sethi %hi(0x5a55), %l0
or    %l0, %lo(0x5a55), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES7: ! Test instruction sequence for CPU 7 begins

P4691: !_QWST [9] (maybe <- 0x43000001) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_0:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_7_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_0
nop

P4692: !_PREFETCH [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_1:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 12], 28

P4693: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4694: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_1
nop

P4695: !_ST [12] (maybe <- 0x43000003) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_2:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

P4696: !_ST [15] (maybe <- 0x43000004) (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]
loop_exit_7_2:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_2
nop

P4697: !_LD [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_3:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4698: !_LD [12] (Int) (Loop exit)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_3:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_3
nop

P4699: !_LD [5] (FP) (Loop entry) (Loop exit) (CBR) (Branch target of P5040)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_4:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4699
nop
RET4699:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_4:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_4
nop
ba P4700
nop

TARGET5040:
ba RET5040
nop


P4700: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_5:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_5:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_5
nop

P4701: !_LD [11] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_6:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4702: !_SWAP [14] (maybe <- 0x3800001) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %o0, %l7, %o5
srl %o5, 8, %o5
sll %o0, 8, %o0
and %o0, %l7, %o0
or %o0, %o5, %o0
srl %o0, 16, %o5
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %o5, %o0
swapa  [%i3 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4703: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_6:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_6
nop

P4704: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_7:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 22

P4705: !_BST [4] (maybe <- 0x43000005) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_7_7:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_7
nop

P4706: !_CAS [6] (maybe <- 0x3800002) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_8:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_8:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_8
nop

P4707: !_CAS [0] (maybe <- 0x3800003) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_9:
add %i0, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P4708: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_9:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_9
nop

P4709: !_DWLD [4] (Int) (NF) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_10:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldxa [%i3 + 0] %asi, %o5
! move %o5(upper) -> %o0(upper)
or %o5, %g0, %o0

P4710: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
srlx %o0, 32, %o0
sllx %o0, 32, %o0
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_10:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_10
nop

P4711: !_BST [10] (maybe <- 0x43000007) (FP) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_11:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4711
nop
RET4711:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4712: !_BLD [5] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_11:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_11
nop

P4713: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_12:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_12:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_12
nop

P4714: !_PREFETCH [14] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_13:
prefetch [%g0], 4

P4715: !_ST [7] (maybe <- 0x43000009) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]
loop_exit_7_13:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_13
nop

P4716: !_LD [11] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_14:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4717: !_DWLD [13] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 8], %f18
! 1 addresses covered
fmovs %f19, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_14:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_14
nop

P4718: !_REPLACEMENT [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_15:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P4719: !_PREFETCH [13] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 20
loop_exit_7_15:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_15
nop

P4720: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_16:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4721: !_DWLD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l3
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_16:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_16
nop

P4722: !_ST [11] (maybe <- 0x4300000a) (FP) (Loop entry) (Loop exit) (Branch target of P4746)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_17:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]
loop_exit_7_17:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_17
nop
ba P4723
nop

TARGET4746:
ba RET4746
nop


P4723: !_ST [3] (maybe <- 0x4300000b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_18:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 12 ]
loop_exit_7_18:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_18
nop

P4724: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_19:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 21

P4725: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_19:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_19
nop

P4726: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_20:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23
loop_exit_7_20:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_20
nop

P4727: !_LD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_21:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4728: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_21:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_21
nop

P4729: !_QWST [9] (maybe <- 0x4300000c) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_22:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]
loop_exit_7_22:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_22
nop

P4730: !_PREFETCH [13] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_23:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 22

P4731: !_BLD [6] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_23:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_23
nop

P4732: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_24:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4733: !_LD [8] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4734: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_24:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_24
nop

P4735: !_CAS [11] (maybe <- 0x3800004) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_25:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l6
lduw [%l6], %o0
mov %o0, %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
mov %l4, %o5
cas [%l6], %l3, %o5
! move %o5(lower) -> %o0(lower)
srl %o5, 0, %l3
or %l3, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_25:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_25
nop

P4736: !_REPLACEMENT [13] (Int) (Loop entry) (Loop exit) (Branch target of P5306)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_26:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_7_26:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_26
nop
ba P4737
nop

TARGET5306:
ba RET5306
nop


P4737: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_27:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_7_27:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_27
nop

P4738: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_28:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4739: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_28:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_28
nop

P4740: !_PREFETCH [15] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_29:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 23
loop_exit_7_29:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_29
nop

P4741: !_QWLD [2] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_30:
ldq   [%i1 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4742: !_DWLD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4743: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_30:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_30
nop

P4744: !_LD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_31:
ld [%i1 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_31:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_31
nop

P4745: !_LD [11] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_32:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4745
nop
RET4745:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4746: !_PREFETCH [3] (Int) (Loop exit) (CBR)
prefetch [%i1 + 12], 20

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4746
nop
RET4746:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_32:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_32
nop

P4747: !_PREFETCH [15] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_33:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 20

P4748: !_DWLD [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4749: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_33:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_33
nop

P4750: !_QWLD [5] (FP) (Loop entry) (Loop exit) (Branch target of P5216)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_34:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_34:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_34
nop
ba P4751
nop

TARGET5216:
ba RET5216
nop


P4751: !_BLD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_35:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4752: !_REPLACEMENT [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+12], %l6
st %l6, [%i3+12]
add %i3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_35:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_35
nop

P4753: !_LD [7] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_36:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4753
nop
RET4753:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4754: !_BSTC [4] (maybe <- 0x4300000e) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_36:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_36
nop

P4755: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_37:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4756: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_37:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_37
nop

P4757: !_DWST [14] (maybe <- 0x43000010) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_38:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_7_38:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_38
nop

P4758: !_DWST [12] (maybe <- 0x43000011) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_39:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]
loop_exit_7_39:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_39
nop

P4759: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_40:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4760: !_LD [8] (Int) (Loop exit) (Branch target of P4987)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_40:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_40
nop
ba P4761
nop

TARGET4987:
ba RET4987
nop


P4761: !_PREFETCH [9] (Int) (Faults) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_41:
prefetch [%g0], 17

P4762: !_LD [10] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_41:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_41
nop

P4763: !_QWLD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_42:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4764: !_LD [1] (FP) (Loop exit)
ld [%i0 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_7_42:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_42
nop

P4765: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_43:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 23

P4766: !_BLD [2] (FP) (Loop exit)
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_43:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_43
nop

P4767: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_44:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4768: !_LD [2] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i1 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_44:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_44
nop

P4769: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_45:
prefetch [%i1 + 12], 3
loop_exit_7_45:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_45
nop

P4770: !_PREFETCH [12] (Int) (Loop entry) (Loop exit) (Branch target of P4915)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_46:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_7_46:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_46
nop
ba P4771
nop

TARGET4915:
ba RET4915
nop


P4771: !_LD [7] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_47:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4772: !_QWST [12] (maybe <- 0x43000012) (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_47:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_47
nop

P4773: !_ST [2] (maybe <- 0x43000014) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_48:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 4 ]
loop_exit_7_48:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_48
nop

P4774: !_LD [0] (FP) (NF) (Loop entry) (Branch target of P5120)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_49:
wr %g0, 0x82, %asi
lda    [%i0 + 4] %asi, %f0
! 1 addresses covered
ba P4775
nop

TARGET5120:
ba RET5120
nop


P4775: !_PREFETCH [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 31
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_49:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_49
nop

P4776: !_ST [6] (maybe <- 0x43000015) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_50:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P4777: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4778: !_LD [6] (Int) (Loop exit)
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_50:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_50
nop

P4779: !_DWLD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_51:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_51:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_51
nop

P4780: !_DWST [13] (maybe <- 0x3800005) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_52:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
mov %l4, %o5 
stx %o5, [%i3 + 8]
add   %l4, 1, %l4

P4781: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_52:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_52
nop

P4782: !_PREFETCH [14] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_53:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 26

P4783: !_QWST [3] (maybe <- 0x43000016) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_7_53:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_53
nop

P4784: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_54:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_54:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_54
nop

P4785: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_55:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4786: !_PREFETCH [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 19

P4787: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_55:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_55
nop

P4788: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_56:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4789: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_56:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_56
nop

P4790: !_REPLACEMENT [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_57:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_7_57:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_57
nop

P4791: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_58:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P4792: !_PREFETCH [14] (Int) (Loop exit)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_7_58:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_58
nop

P4793: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_59:
membar #StoreLoad
loop_exit_7_59:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_59
nop

P4794: !_PREFETCH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_60:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 1

P4795: !_PREFETCH [14] (Int) (Faults) (Loop exit)
prefetch [%g0], 28
loop_exit_7_60:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_60
nop

P4796: !_SWAP [3] (maybe <- 0x3800006) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_61:
mov %l4, %o0
swap  [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4797: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_61:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_61
nop

P4798: !_SWAP [15] (maybe <- 0x3800007) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_62:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4799: !_LD [15] (Int) (Loop exit) (CBR)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4799
nop
RET4799:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_62:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_62
nop

P4800: !_LD [15] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_63:
wr %g0, 0x82, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4801: !_BSTC [13] (maybe <- 0x43000018) (FP) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4801
nop
RET4801:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4802: !_LD [15] (Int) (Loop exit)
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_63:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_63
nop

P4803: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_64:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P4804: !_LD [11] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4804
nop
RET4804:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_64:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_64
nop

P4805: !_DWST [8] (maybe <- 0x4300001a) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_65:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]

P4806: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4
loop_exit_7_65:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_65
nop

P4807: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_66:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_66:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_66
nop

P4808: !_QWLD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_67:
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4809: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4810: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_67:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_67
nop

P4811: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_68:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 17

P4812: !_PREFETCH [1] (Int) (Loop exit)
prefetch [%i0 + 12], 20
loop_exit_7_68:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_68
nop

P4813: !_DWLD [3] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_69:
wr %g0, 0x82, %asi
ldda    [%i1 + 8] %asi, %f0
! 1 addresses covered
fmovs %f1, %f0

P4814: !_CASX [0] (maybe <- 0x3800008) (Int) (Loop exit) (Branch target of P5167)
ldx [%i0], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i0], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_69:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_69
nop
ba P4815
nop

TARGET5167:
ba RET5167
nop


P4815: !_FLUSH [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_70:
! Unsupported instruction

P4816: !_REPLACEMENT [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
loop_exit_7_70:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_70
nop

P4817: !_MEMBAR (Int) (Loop entry) (Loop exit) (Branch target of P5129)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_71:
membar #StoreLoad
loop_exit_7_71:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_71
nop
ba P4818
nop

TARGET5129:
ba RET5129
nop


P4818: !_LD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_72:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P4819: !_CASX [5] (maybe <- 0x3800009) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_72:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_72
nop

P4820: !_REPLACEMENT [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_73:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+12], %l7
st %l7, [%i3+12]
add %i3, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
loop_exit_7_73:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_73
nop

P4821: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_74:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 24

P4822: !_REPLACEMENT [14] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_7_74:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_74
nop

P4823: !_LD [12] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_75:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_75:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_75
nop

P4824: !_LD [13] (Int) (Loop entry) (Branch target of P4801)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_76:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4825
nop

TARGET4801:
ba RET4801
nop


P4825: !_PREFETCH [15] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 22

P4826: !_LD [13] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i3 + 12] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_76:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_76
nop

P4827: !_SWAP [1] (maybe <- 0x380000a) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_77:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4828: !_BSTC [9] (maybe <- 0x4300001b) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4829: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_77:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_77
nop

P4830: !_LD [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_78:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4831: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_78:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_78
nop

P4832: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_79:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4833: !_BST [5] (maybe <- 0x4300001d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P4834: !_LD [8] (Int) (Loop exit)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_79:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_79
nop

P4835: !_BST [13] (maybe <- 0x4300001f) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_80:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P4836: !_CAS [0] (maybe <- 0x380000b) (Int) (Loop exit)
add %i0, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_80:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_80
nop

P4837: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_81:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4838: !_LD [0] (FP)
ld [%i0 + 4], %f0
! 1 addresses covered

P4839: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_81:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_81
nop

P4840: !_LD [9] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_82:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered

P4841: !_LD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_82:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_82
nop

P4842: !_LD [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_83:
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4843: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_83:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_83
nop

P4844: !_ST [14] (maybe <- 0x380000c) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_84:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_7_84:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_84
nop

P4845: !_BSTC [1] (maybe <- 0x43000021) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_85:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P4846: !_PREFETCH [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1
loop_exit_7_85:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_85
nop

P4847: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_86:
prefetch [%i1 + 4], 23
loop_exit_7_86:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_86
nop

P4848: !_DWST [2] (maybe <- 0x43000023) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_87:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 0]

P4849: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 23
loop_exit_7_87:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_87
nop

P4850: !_REPLACEMENT [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_88:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_7_88:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_88
nop

P4851: !_CASX [11] (maybe <- 0x380000d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_89:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_89:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_89
nop

P4852: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_90:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4853: !_PREFETCH [15] (Int)
prefetch [%i3 + 12], 18

P4854: !_LD [10] (Int) (Loop exit) (Branch target of P4745)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_90:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_90
nop
ba P4855
nop

TARGET4745:
ba RET4745
nop


P4855: !_DWST [1] (maybe <- 0x380000e) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_91:
mov %l4, %l7 
stx %l7, [%i0 + 8]
add   %l4, 1, %l4

P4856: !_BST [10] (maybe <- 0x43000024) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_7_91:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_91
nop

P4857: !_LD [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_92:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4858: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_92:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_92
nop

P4859: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_93:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4860: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_93:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_93
nop

P4861: !_LD [4] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_94:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered

P4862: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_94:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_94
nop

P4863: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_95:
ld [%i1 + 12], %f0
! 1 addresses covered

P4864: !_PREFETCH [4] (Int) (Faults) (Loop exit)
prefetch [%g0], 3
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_95:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_95
nop

P4865: !_REPLACEMENT [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_96:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P4866: !_LD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_96:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_96
nop

P4867: !_SWAP [2] (maybe <- 0x380000f) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_97:
mov %l4, %o0
swap  [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4868: !_CASX [4] (maybe <- 0x3800010) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o5
! move %o5(upper) -> %o0(lower)
srlx %o5, 32, %l3
or %l3, %o0, %o0
! move %o5(lower) -> %o1(upper)
sllx %o5, 32, %o1
mov  %o5, %l3
mov %l4, %o5
casx [%i2], %l3, %o5
! move %o5(upper) -> %o1(lower)
srlx %o5, 32, %l3
or %l3, %o1, %o1
! move %o5(lower) -> %o2(upper)
sllx %o5, 32, %o2
add  %l4, 1, %l4

P4869: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_7_97:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_97
nop

P4870: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_98:
prefetch [%i1 + 4], 1
loop_exit_7_98:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_98
nop

P4871: !_PREFETCH [12] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_99:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 0
loop_exit_7_99:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_99
nop

P4872: !_PREFETCH [12] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_100:
prefetch [%g0], 19

P4873: !_REPLACEMENT [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_7_100:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_100
nop

P4874: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_101:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 0

P4875: !_PREFETCH [5] (Int) (NF) (Loop exit) (LE)
wr %g0, 0x8a, %asi
prefetcha [%i2 + 12] %asi, 22
loop_exit_7_101:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_101
nop

P4876: !_QWST [9] (maybe <- 0x43000026) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_102:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P4877: !_LD [15] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_102:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_102
nop

P4878: !_PREFETCH [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_103:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23

P4879: !_REPLACEMENT [6] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_7_103:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_103
nop

P4880: !_PREFETCH [0] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_104:
prefetch [%i0 + 4], 2

P4881: !_LD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4882: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_104:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_104
nop

P4883: !_DWST [3] (maybe <- 0x43000028) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_105:
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 8]
loop_exit_7_105:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_105
nop

P4884: !_BST [4] (maybe <- 0x43000029) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_106:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_7_106:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_106
nop

P4885: !_LD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_107:
ld [%i0 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_107:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_107
nop

P4886: !_LD [2] (Int) (Loop entry) (Branch target of P5078)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_108:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4887
nop

TARGET5078:
ba RET5078
nop


P4887: !_REPLACEMENT [6] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P4888: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_108:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_108
nop

P4889: !_LD [12] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_109:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P4890: !_PREFETCH [11] (Int) (Faults) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 21
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_109:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_109
nop

P4891: !_BLD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_110:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4892: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4893: !_LD [3] (Int) (Loop exit) (CBR)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4893
nop
RET4893:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_110:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_110
nop

P4894: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_111:
ld [%i0 + 12], %f0
! 1 addresses covered

P4895: !_CASX [1] (maybe <- 0x3800011) (Int) (Loop exit)
add %i0, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_111:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_111
nop

P4896: !_BLD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_112:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_112:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_112
nop

P4897: !_CASX [2] (maybe <- 0x3800012) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_113:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%i1], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_113:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_113
nop

P4898: !_PREFETCH [13] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_114:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 3

P4899: !_PREFETCH [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 22
loop_exit_7_114:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_114
nop

P4900: !_PREFETCH [13] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_115:
prefetch [%g0], 4

P4901: !_LD [13] (Int) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4902: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_115:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_115
nop

P4903: !_PREFETCH [4] (Int) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_116:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 1
loop_exit_7_116:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_116
nop

P4904: !_PREFETCH [8] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_117:
prefetch [%g0], 17
loop_exit_7_117:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_117
nop

P4905: !_REPLACEMENT [0] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_118:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P4906: !_LD [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4907: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_118:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_118
nop

P4908: !_DWLD [5] (FP) (Loop entry) (Branch target of P4941)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_119:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
ba P4909
nop

TARGET4941:
ba RET4941
nop


P4909: !_REPLACEMENT [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_119:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_119
nop

P4910: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_120:
prefetch [%i1 + 4], 31
loop_exit_7_120:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_120
nop

P4911: !_QWLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_121:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4912: !_FLUSH [8] (Int) (Loop exit)
! Unsupported instruction
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_121:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_121
nop

P4913: !_PREFETCH [6] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_122:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 27
loop_exit_7_122:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_122
nop

P4914: !_DWST [11] (maybe <- 0x4300002b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_123:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]

P4915: !_LD [15] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4915
nop
RET4915:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4916: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_123:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_123
nop

P4917: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_124:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4918: !_DWLD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %l6
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_124:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_124
nop

P4919: !_DWST [15] (maybe <- 0x3800013) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_125:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_7_125:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_125
nop

P4920: !_QWST [4] (maybe <- 0x4300002c) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_126:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P4921: !_QWLD [7] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_126:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_126
nop

P4922: !_PREFETCH [11] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_127:
wr %g0, 0x82, %asi
prefetcha [%g0] %asi, 4

P4923: !_FLUSH [8] (Int) (Loop exit)
! Unsupported instruction
loop_exit_7_127:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_127
nop

P4924: !_LD [15] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_128:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4924
nop
RET4924:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4925: !_LD [3] (FP)
ld [%i1 + 12], %f0
! 1 addresses covered

P4926: !_LD [8] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_128:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_128
nop

P4927: !_CASX [9] (maybe <- 0x3800014) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_129:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_129:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_129
nop

P4928: !_PREFETCH [12] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_130:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 4

P4929: !_LD [12] (Int)
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4930: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_130:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_130
nop

P4931: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_131:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4932: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_131:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_131
nop

P4933: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_132:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_132:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_132
nop

P4934: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_133:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4935: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_133:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_133
nop

P4936: !_ST [2] (maybe <- 0x3800015) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_134:
stw   %l4, [%i1 + 4 ]
add   %l4, 1, %l4

P4937: !_CAS [2] (maybe <- 0x3800016) (Int) (Loop exit) (LE)
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %o5
srl %o5, 8, %o5
sll %l4, 8, %l6
and %l6, %l3, %l6
or %l6, %o5, %l6
srl %l6, 16, %o5
sll %l6, 16, %l6
srl %l6, 0, %l6
or %l6, %o5, %l6
wr %g0, 0x88, %asi
add %i1, 4, %l3
lduwa [%l3] %asi, %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l6, %l7
casa [%l3] %asi, %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_134:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_134
nop

P4938: !_LD [7] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_135:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P4939: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_135:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_135
nop

P4940: !_LD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_136:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4941: !_LD [8] (Int) (Loop exit) (LE) (CBR)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4941
nop
RET4941:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_136:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_136
nop

P4942: !_BLD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_137:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_137:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_137
nop

P4943: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_138:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4
loop_exit_7_138:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_138
nop

P4944: !_LD [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_139:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4945: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_139:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_139
nop

P4946: !_LD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_140:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_140:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_140
nop

P4947: !_LD [1] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_141:
ld [%i0 + 12], %f0
! 1 addresses covered

P4948: !_QWLD [15] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f32
! 2 addresses covered
fmovd %f32, %f18
fmovs %f19, %f1
fmovd %f34, %f18
fmovs %f19, %f2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4948
nop
RET4948:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_7_141:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_141
nop

P4949: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_142:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_142:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_142
nop

P4950: !_DWST [11] (maybe <- 0x4300002e) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_143:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 8]
loop_exit_7_143:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_143
nop

P4951: !_BLD [14] (FP) (Loop entry) (Loop exit) (Branch target of P5299)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_144:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_144:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_144
nop
ba P4952
nop

TARGET5299:
ba RET5299
nop


P4952: !_LD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_145:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_145:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_145
nop

P4953: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_146:
membar #StoreLoad
loop_exit_7_146:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_146
nop

P4954: !_REPLACEMENT [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_147:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
loop_exit_7_147:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_147
nop

P4955: !_LD [15] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_148:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4956: !_LD [2] (FP)
ld [%i1 + 4], %f0
! 1 addresses covered

P4957: !_LD [7] (Int) (Loop exit) (Branch target of P4924)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_148:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_148
nop
ba P4958
nop

TARGET4924:
ba RET4924
nop


P4958: !_FLUSH [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_149:
! Unsupported instruction

P4959: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4960: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_149:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_149
nop

P4961: !_LD [9] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_150:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4962: !_ST [13] (maybe <- 0x4300002f) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 12 ]

P4963: !_LD [1] (Int) (Loop exit)
lduw [%i0 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_150:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_150
nop

P4964: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_151:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4965: !_PREFETCH [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 1

P4966: !_LD [6] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_151:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_151
nop

P4967: !_REPLACEMENT [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_152:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+12], %o5
st %o5, [%i3+12]
add %i3, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]

P4968: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4969: !_LD [13] (Int) (Loop exit)
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_152:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_152
nop

P4970: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_153:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4971: !_PREFETCH [7] (Int)
prefetch [%i3 + 12], 28

P4972: !_LD [7] (Int) (Loop exit)
lduw [%i3 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_153:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_153
nop

P4973: !_QWLD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_154:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P4974: !_SWAP [13] (maybe <- 0x3800017) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %o0
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %o0, %l7, %o5
srl %o5, 8, %o5
sll %o0, 8, %o0
and %o0, %l7, %o0
or %o0, %o5, %o0
srl %o0, 16, %o5
sll %o0, 16, %o0
srl %o0, 0, %o0
or %o0, %o5, %o0
swapa  [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4975: !_LD [3] (Int) (Loop exit) (CBR)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4975
nop
RET4975:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_154:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_154
nop

P4976: !_ST [6] (maybe <- 0x43000030) (FP) (Loop entry) (Branch target of P5115)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_155:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
ba P4977
nop

TARGET5115:
ba RET5115
nop


P4977: !_LD [2] (FP) (Loop exit)
ld [%i1 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_155:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_155
nop

P4978: !_PREFETCH [4] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_156:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4978
nop
RET4978:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4979: !_BSTC [0] (maybe <- 0x43000031) (FP) (Loop exit)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 
loop_exit_7_156:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_156
nop

P4980: !_REPLACEMENT [6] (Int) (Loop entry) (Branch target of P4699)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_157:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
ba P4981
nop

TARGET4699:
ba RET4699
nop


P4981: !_BSTC [6] (maybe <- 0x43000033) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_7_157:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_157
nop

P4982: !_CASX [7] (maybe <- 0x3800018) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_158:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_158:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_158
nop

P4983: !_FLUSH [13] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_159:
! Unsupported instruction
loop_exit_7_159:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_159
nop

P4984: !_PREFETCH [2] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_160:
prefetch [%i1 + 4], 20
loop_exit_7_160:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_160
nop

P4985: !_PREFETCH [7] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_161:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4
loop_exit_7_161:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_161
nop

P4986: !_DWLD [13] (Int) (Loop entry) (LE)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_162:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldxa [%i2 + 8] %asi, %l7
! move %l7(upper) -> %o0(upper)
or %l7, %g0, %o0

P4987: !_LD [10] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
srlx %o0, 32, %o0
sllx %o0, 32, %o0
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4987
nop
RET4987:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_162:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_162
nop

P4988: !_PREFETCH [6] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_163:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 2
loop_exit_7_163:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_163
nop

P4989: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_164:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4990: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_164:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_164
nop

P4991: !_PREFETCH [13] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_165:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 20
loop_exit_7_165:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_165
nop

P4992: !_LD [5] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_166:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4993: !_LD [10] (Int) (Loop exit) (Branch target of P5143)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_166:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_166
nop
ba P4994
nop

TARGET5143:
ba RET5143
nop


P4994: !_LD [1] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_167:
wr %g0, 0x82, %asi
lda    [%i0 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_167:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_167
nop

P4995: !_LD [8] (FP) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_168:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4995
nop
RET4995:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4996: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4997: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_168:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_168
nop

P4998: !_SWAP [8] (maybe <- 0x3800019) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_169:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P4999: !_FLUSH [8] (Int)
! Unsupported instruction

P5000: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_169:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_169
nop

P5001: !_BLD [1] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_170:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5002: !_LD [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5003: !_LD [13] (Int) (Loop exit) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_170:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_170
nop

P5004: !_LD [12] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_171:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5004
nop
RET5004:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P5005: !_QWLD [6] (FP) (NF)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5006: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_171:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_171
nop

P5007: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_172:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5008: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_172:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_172
nop

P5009: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_173:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_173:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_173
nop

P5010: !_BLD [7] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_174:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_174:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_174
nop

P5011: !_PREFETCH [3] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_175:
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 29

P5012: !_PREFETCH [5] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_7_175:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_175
nop

P5013: !_PREFETCH [13] (Int) (Loop entry) (Loop exit) (Branch target of P4978)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_176:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 2
loop_exit_7_176:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_176
nop
ba P5014
nop

TARGET4978:
ba RET4978
nop


P5014: !_BST [2] (maybe <- 0x43000035) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_177:
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i1 + 0 ] %asi
membar #Sync 
loop_exit_7_177:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_177
nop

P5015: !_PREFETCH [4] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_178:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P5016: !_QWLD [13] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldqa  [%i3 + 0] %asi, %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_178:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_178
nop

P5017: !_LD [12] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_179:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_179:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_179
nop

P5018: !_PREFETCH [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_180:
prefetch [%i0 + 12], 22

P5019: !_CASX [8] (maybe <- 0x380001a) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_180:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_180
nop

P5020: !_QWLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_181:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_181:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_181
nop

P5021: !_QWLD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_182:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_182:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_182
nop

P5022: !_PREFETCH [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_183:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 0

P5023: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
loop_exit_7_183:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_183
nop

P5024: !_QWST [8] (maybe <- 0x43000037) (FP) (Loop entry) (Loop exit) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_184:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5024
nop
RET5024:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

loop_exit_7_184:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_184
nop

P5025: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_185:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5026: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_185:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_185
nop

P5027: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_186:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P5028: !_SWAP [2] (maybe <- 0x380001b) (Int)
mov %l4, %o0
swap  [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5029: !_LD [14] (Int) (NF) (Faults) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_186:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_186
nop

P5030: !_DWLD [1] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_187:
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5031: !_LD [13] (Int) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5031
nop
RET5031:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_187:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_187
nop

P5032: !_FLUSH [12] (Int) (Loop entry) (Loop exit) (Branch target of P4711)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_188:
! Unsupported instruction
loop_exit_7_188:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_188
nop
ba P5033
nop

TARGET4711:
ba RET4711
nop


P5033: !_LD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_189:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_189:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_189
nop

P5034: !_DWLD [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_190:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5035: !_PREFETCH [9] (Int)
prefetch [%i2 + 12], 1

P5036: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_190:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_190
nop

P5037: !_LD [3] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_191:
ld [%i1 + 12], %f0
! 1 addresses covered

P5038: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5039: !_LD [15] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_191:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_191
nop

P5040: !_LD [13] (Int) (NF) (Loop entry) (LE) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_192:
wr %g0, 0x8a, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5040
nop
RET5040:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5041: !_LD [13] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_192:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_192
nop

P5042: !_PREFETCH [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_193:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 4

P5043: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_193:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_193
nop

P5044: !_PREFETCH [3] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_194:
prefetch [%g0], 16

P5045: !_PREFETCH [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 21
loop_exit_7_194:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_194
nop

P5046: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_195:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5047: !_QWST [12] (maybe <- 0x43000039) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

P5048: !_LD [12] (Int) (Loop exit)
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_195:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_195
nop

P5049: !_CASX [15] (maybe <- 0x380001c) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_196:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_196:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_196
nop

P5050: !_PREFETCH [4] (Int) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_197:
prefetch [%g0], 30

P5051: !_LD [12] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_197:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_197
nop

P5052: !_BLD [4] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_198:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5053: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5054: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_198:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_198
nop

P5055: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_199:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_199:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_199
nop

P5056: !_PREFETCH [15] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_200:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 4
loop_exit_7_200:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_200
nop

P5057: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_201:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_201:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_201
nop

P5058: !_LD [4] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_202:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_202:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_202
nop

P5059: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_203:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 0
loop_exit_7_203:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_203
nop

P5060: !_CASX [1] (maybe <- 0x380001d) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_204:
add %i0, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_204:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_204
nop

P5061: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_205:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5062: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_205:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_205
nop

P5063: !_PREFETCH [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_206:
prefetch [%i1 + 4], 31

P5064: !_LD [5] (FP) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 12] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_206:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_206
nop

P5065: !_REPLACEMENT [0] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_207:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
loop_exit_7_207:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_207
nop

P5066: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_208:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 24
loop_exit_7_208:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_208
nop

P5067: !_CASX [12] (maybe <- 0x380001e) (Int) (Loop entry) (Loop exit) (Branch target of P5256)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_209:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i2], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_209:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_209
nop
ba P5068
nop

TARGET5256:
ba RET5256
nop


P5068: !_LD [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_210:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5069: !_CASX [13] (maybe <- 0x380001f) (Int)
add %i3, 8, %l3
ldx [%l3], %l7
! move %l7(upper) -> %o0(lower)
srlx %l7, 32, %o5
or %o5, %o0, %o0
! move %l7(lower) -> %o1(upper)
sllx %l7, 32, %o1
mov  %l7, %o5
mov %l4, %l7
casx [%l3], %o5, %l7
! move %l7(upper) -> %o1(lower)
srlx %l7, 32, %o5
or %o5, %o1, %o1
! move %l7(lower) -> %o2(upper)
sllx %l7, 32, %o2
add  %l4, 1, %l4

P5070: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_7_210:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_210
nop

P5071: !_REPLACEMENT [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_211:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P5072: !_ST [8] (maybe <- 0x3800020) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS2_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
loop_exit_7_211:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_211
nop

P5073: !_DWLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_212:
ldd [%i1 + 8], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_212:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_212
nop

P5074: !_DWLD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_213:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5075: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_213:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_213
nop

P5076: !_QWST [13] (maybe <- 0x4300003b) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_214:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i3 + 0]

P5077: !_LD [12] (FP) (Loop exit)
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_214:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_214
nop

P5078: !_LD [11] (Int) (Loop entry) (CBR) (Branch target of P5295)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_215:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5078
nop
RET5078:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P5079
nop

TARGET5295:
ba RET5295
nop


P5079: !_SWAP [7] (maybe <- 0x3800021) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6
swap  [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_215:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_215
nop

P5080: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_216:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5081: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_216:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_216
nop

P5082: !_FLUSH [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_217:
! Unsupported instruction

P5083: !_PREFETCH [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 18
loop_exit_7_217:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_217
nop

P5084: !_LD [15] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_218:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5085: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_218:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_218
nop

P5086: !_LD [4] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_219:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5087: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_219:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_219
nop

P5088: !_LD [14] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_220:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P5089: !_BST [11] (maybe <- 0x4300003d) (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_220:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_220
nop

P5090: !_DWST [6] (maybe <- 0x4300003f) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_221:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i3 + 0]

P5091: !_PREFETCH [7] (Int) (Loop exit)
prefetch [%i3 + 12], 0
loop_exit_7_221:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_221
nop

P5092: !_QWLD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_222:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5093: !_PREFETCH [3] (Int) (Loop exit)
prefetch [%i1 + 12], 1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_222:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_222
nop

P5094: !_DWST [9] (maybe <- 0x3800022) (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_223:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l3 
stx %l3, [%i3 + 8]
add   %l4, 1, %l4
loop_exit_7_223:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_223
nop

P5095: !_BST [14] (maybe <- 0x43000040) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_224:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_7_224:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_224
nop

P5096: !_REPLACEMENT [4] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_225:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
loop_exit_7_225:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_225
nop

P5097: !_SWAP [14] (maybe <- 0x3800023) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_226:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5098: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_226:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_226
nop

P5099: !_ST [3] (maybe <- 0x43000042) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_227:
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 12 ]
loop_exit_7_227:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_227
nop

P5100: !_LD [10] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_228:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5101: !_QWST [8] (maybe <- 0x43000043) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5101
nop
RET5101:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P5102: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_228:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_228
nop

P5103: !_LD [12] (FP) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_229:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered

P5104: !_PREFETCH [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 1
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_229:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_229
nop

P5105: !_PREFETCH [1] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_230:
prefetch [%i0 + 12], 20
loop_exit_7_230:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_230
nop

P5106: !_CAS [10] (maybe <- 0x3800024) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_231:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 4, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P5107: !_PREFETCH [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 23
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_231:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_231
nop

P5108: !_LD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_232:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P5109: !_BSTC [8] (maybe <- 0x43000045) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_232:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_232
nop

P5110: !_REPLACEMENT [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_233:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l7
ld [%i3+12], %l3
st %l3, [%i3+12]
add %i3, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]
add %o5, %l7, %o5
ld [%o5+12], %l3
st %l3, [%o5+12]

P5111: !_DWLD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5112: !_LD [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_233:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_233
nop

P5113: !_PREFETCH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_234:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 20
loop_exit_7_234:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_234
nop

P5114: !_REPLACEMENT [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_235:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P5115: !_LD [11] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5115
nop
RET5115:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5116: !_LD [8] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_235:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_235
nop

P5117: !_LD [8] (FP) (NF) (Loop entry) (Loop exit) (Branch target of P4753)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_236:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_236:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_236
nop
ba P5118
nop

TARGET4753:
ba RET4753
nop


P5118: !_LD [14] (FP) (NF) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_237:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_237:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_237
nop

P5119: !_LD [3] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_238:
ld [%i1 + 12], %f0
! 1 addresses covered

P5120: !_LD [12] (FP) (Loop exit) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5120
nop
RET5120:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_238:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_238
nop

P5121: !_LD [2] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_239:
ld [%i1 + 4], %f0
! 1 addresses covered

P5122: !_REPLACEMENT [6] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS3_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_239:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_239
nop

P5123: !_BSTC [5] (maybe <- 0x43000047) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_240:
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_7_240:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_240
nop

P5124: !_LD [8] (Int) (Loop entry) (Branch target of P5207)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_241:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P5125
nop

TARGET5207:
ba RET5207
nop


P5125: !_LD [12] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P5126: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_241:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_241
nop

P5127: !_LD [2] (FP) (NF) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_242:
wr %g0, 0x82, %asi
lda    [%g0] %asi, %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_242:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_242
nop

P5128: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_243:
sethi %hi(REGION0_ALIAS0_O-REGION4_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P5129: !_DWLD [1] (Int) (CBR)
ldx [%i0 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5129
nop
RET5129:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5130: !_LD [8] (Int) (Loop exit)
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_243:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_243
nop

P5131: !_BST [7] (maybe <- 0x43000049) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_244:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P5132: !_LD [6] (Int)
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5133: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_244:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_244
nop

P5134: !_CASX [11] (maybe <- 0x3800025) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_245:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
add %i2, 8, %l6
ldx [%l6], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%l6], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P5135: !_DWLD [6] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldd [%i3 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_245:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_245
nop

P5136: !_DWST [7] (maybe <- 0x4300004b) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_246:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 8]
loop_exit_7_246:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_246
nop

P5137: !_DWST [4] (maybe <- 0x3800026) (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_247:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
mov %l4, %l6 
stx %l6, [%i3 + 0]
add   %l4, 1, %l4
loop_exit_7_247:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_247
nop

P5138: !_LD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_248:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_248:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_248
nop

P5139: !_PREFETCH [7] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_249:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 23

P5140: !_FLUSH [15] (Int) (Loop exit)
! Unsupported instruction
loop_exit_7_249:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_249
nop

P5141: !_BSTC [0] (maybe <- 0x4300004c) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_250:
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i0 + 0 ] %asi
membar #Sync 

P5142: !_LD [3] (Int)
lduw [%i1 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5143: !_LD [8] (Int) (Loop exit) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5143
nop
RET5143:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_250:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_250
nop

P5144: !_PREFETCH [5] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_251:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 24
loop_exit_7_251:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_251
nop

P5145: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_252:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5146: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_252:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_252
nop

P5147: !_PREFETCH [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_253:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 21

P5148: !_FLUSH [7] (Int) (Loop exit)
! Unsupported instruction
loop_exit_7_253:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_253
nop

P5149: !_PREFETCH [8] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_254:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 4], 0

P5150: !_FLUSH [0] (Int) (Loop exit)
! Unsupported instruction
loop_exit_7_254:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_254
nop

P5151: !_BLD [3] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_255:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i1 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_255:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_255
nop

P5152: !_DWLD [11] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_256:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5153: !_PREFETCH [3] (Int)
prefetch [%i1 + 12], 16

P5154: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_256:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_256
nop

P5155: !_DWLD [6] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_257:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldd [%i2 + 0], %f0
! 1 addresses covered
fmovs %f1, %f0

P5156: !_LD [5] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_257:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_257
nop

P5157: !_PREFETCH [13] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_258:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 12] %asi, 4

P5158: !_LD [2] (Int)
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5159: !_LD [9] (Int) (Loop exit) (Branch target of P4804)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_258:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_258
nop
ba P5160
nop

TARGET4804:
ba RET4804
nop


P5160: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_259:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_259:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_259
nop

P5161: !_LD [3] (FP) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_260:
wr %g0, 0x82, %asi
lda    [%i1 + 12] %asi, %f0
! 1 addresses covered

P5162: !_DWLD [15] (Int) (Branch target of P4948)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P5163
nop

TARGET4948:
ba RET4948
nop


P5163: !_LD [7] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_260:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_260
nop

P5164: !_LD [7] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_261:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5165: !_LD [3] (FP) (NF)
wr %g0, 0x82, %asi
lda    [%i1 + 12] %asi, %f0
! 1 addresses covered

P5166: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_261:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_261
nop

P5167: !_CASX [2] (maybe <- 0x3800027) (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_262:
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l3
mov %l4, %o1
casx [%i1], %l3, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5167
nop
RET5167:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5168: !_SWAP [2] (maybe <- 0x3800028) (Int) (Branch target of P4995)
mov %l4, %o2
swap  [%i1 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
add   %l4, 1, %l4
ba P5169
nop

TARGET4995:
ba RET4995
nop


P5169: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
loop_exit_7_262:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_262
nop

P5170: !_QWLD [15] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_263:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5171: !_LD [0] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5172: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_263:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_263
nop

P5173: !_BST [6] (maybe <- 0x4300004e) (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_264:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P5174: !_CAS [13] (maybe <- 0x3800029) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_264:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_264
nop

P5175: !_LD [11] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_265:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_265:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_265
nop

P5176: !_PREFETCH [13] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_266:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 12] %asi, 4

P5177: !_QWST [3] (maybe <- 0x43000050) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
loop_exit_7_266:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_266
nop

P5178: !_DWST [11] (maybe <- 0x380002a) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_267:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %l6 
stx %l6, [%i2 + 8]
add   %l4, 1, %l4

P5179: !_LD [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5180: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_267:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_267
nop

P5181: !_CASX [1] (maybe <- 0x380002b) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_268:
add %i0, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

P5182: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_268:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_268
nop

P5183: !_PREFETCH [15] (Int) (Faults) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_269:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 20
loop_exit_7_269:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_269
nop

P5184: !_PREFETCH [6] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_270:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 19

P5185: !_BLD [11] (FP) (Loop exit)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
membar #Sync 
ldda [%i3 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_270:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_270
nop

P5186: !_LD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_271:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5187: !_LD [11] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_271:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_271
nop

P5188: !_FLUSH [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_272:
! Unsupported instruction

P5189: !_REPLACEMENT [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS2_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l6
ld [%i2+12], %o5
st %o5, [%i2+12]
add %i2, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
add %l7, %l6, %l7
ld [%l7+12], %o5
st %o5, [%l7+12]
loop_exit_7_272:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_272
nop

P5190: !_LD [8] (Int) (Loop entry) (Branch target of P5101)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_273:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P5191
nop

TARGET5101:
ba RET5101
nop


P5191: !_LD [8] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_273:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_273
nop

P5192: !_QWLD [12] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_274:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5193: !_LD [9] (FP) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f2
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovs %f2, %f30
!--
loop_exit_7_274:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_274
nop

P5194: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_275:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P5195: !_CASX [6] (maybe <- 0x380002c) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldx [%i3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%i3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_275:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_275
nop

P5196: !_SWAP [8] (maybe <- 0x380002d) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_276:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5197: !_PREFETCH [14] (Int) (Faults)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 20

P5198: !_LD [9] (Int) (Loop exit)
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_276:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_276
nop

P5199: !_PREFETCH [11] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_277:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 12], 4
loop_exit_7_277:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_277
nop

P5200: !_CAS [11] (maybe <- 0x380002e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_278:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P5201: !_PREFETCH [15] (Int) (Faults) (Loop exit) (LE)
wr %g0, 0x88, %asi
prefetcha [%g0] %asi, 3
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_278:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_278
nop

P5202: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_279:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_279:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_279
nop

P5203: !_SWAP [1] (maybe <- 0x380002f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_280:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5204: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_280:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_280
nop

P5205: !_LD [1] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_281:
lduw [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5206: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_281:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_281
nop

P5207: !_LD [4] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_282:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5207
nop
RET5207:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P5208: !_LD [1] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
lduwa [%i0 + 12] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_282:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_282
nop

P5209: !_PREFETCH [0] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_283:
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 0

P5210: !_SWAP [7] (maybe <- 0x3800030) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5211: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_283:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_283
nop

P5212: !_LD [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_284:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5213: !_PREFETCH [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 31

P5214: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_284:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_284
nop

P5215: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_285:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_285:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_285
nop

P5216: !_REPLACEMENT [13] (Int) (Loop entry) (CBR)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_286:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+12], %l6
st %l6, [%i2+12]
add %i2, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]
add %l3, %o5, %l3
ld [%l3+12], %l6
st %l6, [%l3+12]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5216
nop
RET5216:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5217: !_CASX [9] (maybe <- 0x3800031) (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
add %i3, 8, %l3
ldx [%l3], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %o5
mov %l4, %o1
casx [%l3], %o5, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
loop_exit_7_286:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_286
nop

P5218: !_LD [10] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_287:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_287:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_287
nop

P5219: !_PREFETCH [3] (Int) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_288:
prefetch [%i1 + 12], 19
loop_exit_7_288:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_288
nop

P5220: !_CAS [2] (maybe <- 0x3800032) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_289:
add %i1, 4, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P5221: !_PREFETCH [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 1
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_289:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_289
nop

P5222: !_FLUSH [10] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_290:
! Unsupported instruction
loop_exit_7_290:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_290
nop

P5223: !_BLD [8] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_291:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_291:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_291
nop

P5224: !_SWAP [9] (maybe <- 0x3800033) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_292:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
mov %l4, %o0
swap  [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5225: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_292:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_292
nop

P5226: !_QWLD [13] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_293:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_293:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_293
nop

P5227: !_LD [10] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_294:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5228: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_294:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_294
nop

P5229: !_PREFETCH [12] (Int) (Loop entry) (LE)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_295:
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 0

P5230: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_295:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_295
nop

P5231: !_LD [14] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_296:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5232: !_PREFETCH [14] (Int) (Faults)
prefetch [%i2 + 4], 20

P5233: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_296:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_296
nop

P5234: !_LD [0] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_297:
wr %g0, 0x82, %asi
lduwa [%i0 + 4] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5235: !_LD [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_297:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_297
nop

P5236: !_FLUSH [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_298:
! Unsupported instruction

P5237: !_ST [6] (maybe <- 0x3800034) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
loop_exit_7_298:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_298
nop

P5238: !_PREFETCH [6] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_299:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 3

P5239: !_QWLD [0] (FP) (Loop exit)
ldq   [%i0 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_299:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_299
nop

P5240: !_LD [6] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_300:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_300:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_300
nop

P5241: !_BLD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_301:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
membar #Sync 
ldda [%i2 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5242: !_CASX [5] (maybe <- 0x3800035) (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 8, %o5
ldx [%o5], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l7
mov %l4, %o1
casx [%o5], %l7, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_301:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_301
nop

P5243: !_SWAP [13] (maybe <- 0x3800036) (Int) (Loop entry) (Branch target of P4799)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_302:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4
ba P5244
nop

TARGET4799:
ba RET4799
nop


P5244: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_302:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_302
nop

P5245: !_LD [15] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_303:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5246: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_303:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_303
nop

P5247: !_LD [4] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_304:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5248: !_BSTC [11] (maybe <- 0x43000052) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 

P5249: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_304:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_304
nop

P5250: !_PREFETCH [3] (Int) (NF) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_305:
wr %g0, 0x82, %asi
prefetcha [%i1 + 12] %asi, 1

P5251: !_LD [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5252: !_LD [13] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_305:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_305
nop

P5253: !_DWST [3] (maybe <- 0x3800037) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_306:
mov %l4, %o5 
stx %o5, [%i1 + 8]
add   %l4, 1, %l4

P5254: !_BSTC [4] (maybe <- 0x43000054) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 
loop_exit_7_306:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_306
nop

P5255: !_CAS [5] (maybe <- 0x3800038) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_307:
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
add %i3, 12, %o5
lduw [%o5], %o0
mov %o0, %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
mov %l4, %l6
cas [%o5], %l7, %l6
! move %l6(lower) -> %o0(lower)
srl %l6, 0, %l7
or %l7, %o0, %o0
add   %l4, 1, %l4

P5256: !_LD [9] (FP) (Loop exit) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5256
nop
RET5256:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_307:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_307
nop

P5257: !_FLUSH [9] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_308:
! Unsupported instruction
loop_exit_7_308:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_308
nop

P5258: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_309:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5259: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_309:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_309
nop

P5260: !_DWLD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_310:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
ldx [%i2 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5261: !_PREFETCH [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 31

P5262: !_LD [4] (Int) (NF) (Loop exit)
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_310:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_310
nop

P5263: !_LD [5] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_311:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 12] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5264: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_311:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_311
nop

P5265: !_PREFETCH [0] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_312:
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 3

P5266: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_312:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_312
nop

P5267: !_PREFETCH [0] (Int) (NF) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_313:
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 31

P5268: !_QWLD [5] (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_313:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_313
nop

P5269: !_PREFETCH [14] (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_314:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 4], 3
loop_exit_7_314:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_314
nop

P5270: !_LD [8] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_315:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5271: !_LD [8] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_315:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_315
nop

P5272: !_LD [8] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_316:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

P5273: !_LD [4] (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_316:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_316
nop

P5274: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_317:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5275: !_LD [8] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P5276: !_LD [12] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_317:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_317
nop

P5277: !_LD [8] (Int) (Loop entry) (Branch target of P4975)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_318:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P5278
nop

TARGET4975:
ba RET4975
nop


P5278: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_318:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_318
nop

P5279: !_SWAP [13] (maybe <- 0x3800039) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_319:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5280: !_ST [5] (maybe <- 0x43000056) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 12 ]

P5281: !_LD [4] (Int) (NF) (Loop exit) (Branch target of P4893)
wr %g0, 0x82, %asi
lduwa [%i3 + 4] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_319:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_319
nop
ba P5282
nop

TARGET4893:
ba RET4893
nop


P5282: !_QWLD [5] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_320:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldq   [%i2 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5283: !_CASX [1] (maybe <- 0x380003a) (Int) (Loop exit)
add %i0, 8, %l7
ldx [%l7], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%l7], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_320:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_320
nop

P5284: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_321:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5285: !_PREFETCH [0] (Int)
prefetch [%i0 + 4], 28

P5286: !_LD [10] (Int) (NF) (Loop exit) (Branch target of P5024)
wr %g0, 0x82, %asi
lduwa [%i3 + 4] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_321:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_321
nop
ba P5287
nop

TARGET5024:
ba RET5024
nop


P5287: !_REPLACEMENT [12] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_322:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P5288: !_LD [8] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5289: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_322:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_322
nop

P5290: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_323:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P5291: !_QWST [2] (maybe <- 0x43000057) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i1 + 0]
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_323:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_323
nop

P5292: !_QWLD [14] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_324:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_324:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_324
nop

P5293: !_REPLACEMENT [12] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_325:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P5294: !_BSTC [12] (maybe <- 0x43000059) (FP) (Loop exit)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_7_325:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_325
nop

P5295: !_PREFETCH [2] (Int) (Loop entry) (CBR)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_326:
prefetch [%i1 + 4], 3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5295
nop
RET5295:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P5296: !_LD [4] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5297: !_LD [4] (Int) (Loop exit)
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_326:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_326
nop

P5298: !_QWLD [14] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_327:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldq   [%i3 + 0], %f0
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1

P5299: !_CASX [2] (maybe <- 0x380003b) (Int) (Loop exit) (CBR)
ldx [%i1], %o0
! move %o0(upper) -> %o0(upper)
! move %o0(lower) -> %o0(lower)
mov  %o0, %l6
mov %l4, %o1
casx [%i1], %l6, %o1
! move %o1(upper) -> %o1(upper)
! move %o1(lower) -> %o1(lower)
add  %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5299
nop
RET5299:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_327:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_327
nop

P5300: !_CAS [14] (maybe <- 0x380003c) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_328:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
add %i2, 4, %l3
lduw [%l3], %o0
mov %o0, %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
mov %l4, %l7
cas [%l3], %o5, %l7
! move %l7(lower) -> %o0(lower)
srl %l7, 0, %o5
or %o5, %o0, %o0
add   %l4, 1, %l4

P5301: !_PREFETCH [14] (Int) (Loop exit)
prefetch [%i2 + 4], 2
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_328:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_328
nop

P5302: !_LD [9] (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_329:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P5303: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5304: !_LD [9] (Int) (Loop exit)
lduw [%i3 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_329:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_329
nop

P5305: !_LD [10] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_330:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5306: !_LD [5] (Int) (Loop exit) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5306
nop
RET5306:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_330:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_330
nop

P5307: !_LD [13] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_331:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5308: !_FLUSH [3] (Int)
! Unsupported instruction

P5309: !_LD [2] (Int) (Loop exit)
lduw [%i1 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_331:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_331
nop

P5310: !_LD [2] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_332:
lduw [%i1 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5311: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_332:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_332
nop

P5312: !_LD [5] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_333:
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5313: !_LD [10] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_333:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_333
nop

P5314: !_PREFETCH [0] (Int) (NF) (Loop entry) (Branch target of P5031)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_334:
wr %g0, 0x82, %asi
prefetcha [%i0 + 4] %asi, 2
ba P5315
nop

TARGET5031:
ba RET5031
nop


P5315: !_SWAP [6] (maybe <- 0x380003d) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
mov %l4, %o0
swap  [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5316: !_LD [5] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_334:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_334
nop

P5317: !_BST [9] (maybe <- 0x4300005b) (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_335:
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i2 + 0 ] %asi
membar #Sync 

P5318: !_PREFETCH [7] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 12], 16
loop_exit_7_335:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_335
nop

P5319: !_BLD [0] (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_336:
wr %g0, 0xf0, %asi
membar #Sync 
ldda [%i0 + 0] %asi, %f0
membar #Sync 
! 2 addresses covered
fmovs %f1, %f0
fmovs %f3, %f1
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_336:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_336
nop

P5320: !_SWAP [1] (maybe <- 0x380003e) (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_337:
mov %l4, %o0
swap  [%i0 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
add   %l4, 1, %l4

P5321: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_337:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_337
nop

P5322: !_LD [13] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_338:
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS3_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 12], %f0
! 1 addresses covered

P5323: !_LD [13] (FP) (Loop exit)
ld [%i3 + 12], %f1
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
!--
loop_exit_7_338:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_338
nop

P5324: !_QWST [8] (maybe <- 0x4300005d) (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_339:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f23 
fmovs  %f16, %f23
fadds  %f16, %f17, %f16
stq %f20, [%i2 + 0]
loop_exit_7_339:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_339
nop

P5325: !_ST [8] (maybe <- 0x380003f) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_340:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P5326: !_DWST [4] (maybe <- 0x4300005f) (FP) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i2 + 0]
loop_exit_7_340:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_340
nop

P5327: !_LD [6] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_341:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5328: !_LD [9] (Int) (Loop exit)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 12], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_341:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_341
nop

P5329: !_BST [10] (maybe <- 0x43000060) (FP) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_342:
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f35 
fmovd %f20, %f32
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
fmovd %f20, %f34
membar #Sync 
stda %f32, [%i3 + 0 ] %asi
membar #Sync 
loop_exit_7_342:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_342
nop

P5330: !_CAS [15] (maybe <- 0x3800040) (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_343:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i2
sub %i0, %i2, %i2
add %i2, 12, %l7
lduw [%l7], %o0
mov %o0, %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
mov %l4, %l3
cas [%l7], %l6, %l3
! move %l3(lower) -> %o0(lower)
srl %l3, 0, %l6
or %l6, %o0, %o0
add   %l4, 1, %l4

P5331: !_DWST [3] (maybe <- 0x43000062) (FP) (Loop exit)
! preparing store val #0, next val will be in f21 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
std %f20, [%i1 + 8]
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_343:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_343
nop

P5332: !_MEMBAR (Int) (Loop entry) (Loop exit)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_344:
membar #StoreLoad
loop_exit_7_344:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_344
nop

P5333: !_DWLD [9] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_345:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldx [%i3 + 8], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5334: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x20000), %l3
ld [%i2+12], %l7
st %l7, [%i2+12]
add %i2, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]
add %l6, %l3, %l6
ld [%l6+12], %l7
st %l7, [%l6+12]

P5335: !_LD [0] (Int) (Loop exit)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_345:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_345
nop

P5336: !_LD [13] (Int) (NF) (Faults) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_346:
wr %g0, 0x82, %asi
lduwa [%g0] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5337: !_LD [15] (Int) (Loop exit)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 12], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_346:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_346
nop

P5338: !_PREFETCH [6] (Int) (NF) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_347:
wr %g0, 0x82, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS3_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 4] %asi, 26
loop_exit_7_347:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_347
nop

P5339: !_LD [14] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_348:
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS2_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5340: !_LD [3] (Int) (Loop exit)
lduw [%i1 + 12], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_348:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_348
nop

P5341: !_LD [11] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_349:
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS3_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5342: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_349:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_349
nop

P5343: !_LD [9] (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_7_350:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 12], %f0
! 1 addresses covered

P5344: !_PREFETCH [0] (Int) (Loop exit)
prefetch [%i0 + 4], 23
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_350:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_350
nop

P5345: !_LD [1] (FP) (Loop entry) (Loop exit)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_351:
ld [%i0 + 12], %f0
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_7_351:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_351
nop

P5346: !_LD [9] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_352:
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 12], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P5347: !_LD [4] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
loop_exit_7_352:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_352
nop

P5348: !_REPLACEMENT [6] (Int) (Loop entry) (Loop exit) (Branch target of P5004)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_353:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x20000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
loop_exit_7_353:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_353
nop
ba P5349
nop

TARGET5004:
ba RET5004
nop


P5349: !_MEMBAR (Int)
membar #StoreLoad

END_NODES7: ! Test instruction sequence for CPU 7 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
tsotool_text_end:


!#0 N1 P1 LD 11 -1 FP BE Pri
!#0 N2 P2 LD 4 -1 FP BE Pri
!#0 N3 P1 LD 11 -1 FP BE Pri
!#0 N4 P2 LD 4 -1 FP BE Pri
!#0 N5 P3 BSTC 10 0x3f800001 FP BE Pri
!#0 N6 P3 BSTC 11 0x3f800002 FP BE Pri
!#0 N7 P4 BSTC 4 0x3f800003 FP BE Pri
!#0 N8 P4 BSTC 5 0x3f800004 FP BE Pri
!#0 N9 P3 BSTC 10 0x3f800005 FP BE Pri
!#0 N10 P3 BSTC 11 0x3f800006 FP BE Pri
!#0 N11 P4 BSTC 4 0x3f800007 FP BE Pri
!#0 N12 P4 BSTC 5 0x3f800008 FP BE Pri
!#0 N14 P6 LD 15 -1 FP BE Pri
!#0 N15 P7 BLD 0 -1 FP BE Pri
!#0 N16 P7 BLD 1 -1 FP BE Pri
!#0 N17 P8 DWLD 3 -1,0x0 Int BE Pri
!#0 N18 P8 CASX 3 -1,0x0 N17 0x1 Int BE Pri
!#0 N19 P9 QWLD 10 -1 NF FP BE Pri
!#0 N20 P9 QWLD 11 -1 NF FP BE Pri
!#0 N21 P9 QWLD 10 -1 NF FP BE Pri
!#0 N22 P9 QWLD 11 -1 NF FP BE Pri
!#0 N23 P10 LD 5 -1 FP BE Pri
!#0 N24 P11 ST 15 0x3f800009 FP BE Pri
!#0 N25 P12 BLD 12 -1 FP BE Pri
!#0 N26 P12 BLD 13 -1 FP BE Pri
!#0 N27 P13 LD 6 -1 FP BE Pri
!#0 N28 P12 BLD 12 -1 FP BE Pri
!#0 N29 P12 BLD 13 -1 FP BE Pri
!#0 N30 P13 LD 6 -1 FP BE Pri
!#0 N31 P14 SWAP 12 0xffffffff 0x2 Int BE Pri
!#0 N32 P15 LD 13 -1 Int BE Pri
!#0 N33 P14 SWAP 12 0xffffffff 0x3 Int BE Pri
!#0 N34 P15 LD 13 -1 Int BE Pri
!#0 N35 P16 LD 0 -1 Int BE Pri
!#0 N36 P17 LD 10 -1 Int BE Pri
!#0 N37 P18 LD 4 -1 FP BE Pri
!#0 N38 P19 BST 10 0x3f80000a FP BE Pri
!#0 N39 P19 BST 11 0x3f80000b FP BE Pri
!#0 N40 P18 LD 4 -1 FP BE Pri
!#0 N41 P19 BST 10 0x3f80000c FP BE Pri
!#0 N42 P19 BST 11 0x3f80000d FP BE Pri
!#0 N45 P21 LD 12 -1 FP BE Pri
!#0 N46 P22 LD 8 -1 FP BE Pri
!#0 N47 P23 LD 0 -1 FP BE Pri
!#0 N48 P23 LD 0 -1 FP BE Pri
!#0 N49 P24 LD 14 -1 FP BE Pri
!#0 N50 P25 LD 3 -1 Int BE Pri
!#0 N51 P26 LD 0 -1 FP BE Pri
!#0 N52 P27 LD 12 -1 Int BE Pri
!#0 N53 P28 DWST 3 0x3f80000e FP BE Pri
!#0 N54 P29 QWST 4 0x3f80000f FP BE Pri
!#0 N55 P29 QWST 5 0x3f800010 FP BE Pri
!#0 N56 P28 DWST 3 0x3f800011 FP BE Pri
!#0 N57 P29 QWST 4 0x3f800012 FP BE Pri
!#0 N58 P29 QWST 5 0x3f800013 FP BE Pri
!#0 N59 P30 LD 3 -1 Int BE Pri
!#0 N60 P31 LD 5 -1 Int BE Pri
!#0 N61 P30 LD 3 -1 Int BE Pri
!#0 N62 P31 LD 5 -1 Int BE Pri
!#0 N64 P33 DWST 11 0x3f800014 FP BE Pri
!#0 N65 P34 SWAP 8 0xffffffff 0x4 Int BE Pri
!#0 N66 P35 LD 6 -1 Int BE Pri
!#0 N67 P33 DWST 11 0x3f800015 FP BE Pri
!#0 N68 P34 SWAP 8 0xffffffff 0x5 Int BE Pri
!#0 N69 P35 LD 6 -1 Int BE Pri
!#0 N71 P37 BLD 4 -1 FP BE Pri
!#0 N72 P37 BLD 5 -1 FP BE Pri
!#0 N74 P37 BLD 4 -1 FP BE Pri
!#0 N75 P37 BLD 5 -1 FP BE Pri
!#0 N77 P39 LD 14 -1 FP BE Pri
!#0 N79 P39 LD 14 -1 FP BE Pri
!#0 N80 P40 DWST 4 0x6 Int BE Pri
!#0 N82 P42 LD 13 -1 Int BE Pri
!#0 N83 P43 DWLD 1 -1,0x0 Int BE Pri
!#0 N84 P43 CASX 1 -1,0x0 N83 0x7 Int BE Pri
!#0 N85 P44 LD 7 -1 NF Int BE Pri
!#0 N86 P42 LD 13 -1 Int BE Pri
!#0 N87 P43 DWLD 1 -1,0x0 Int BE Pri
!#0 N88 P43 CASX 1 -1,0x0 N87 0x8 Int BE Pri
!#0 N89 P44 LD 7 -1 NF Int BE Pri
!#0 N90 P45 QWST 12 0x3f800016 FP BE Pri
!#0 N91 P45 QWST 13 0x3f800017 FP BE Pri
!#0 N92 P46 ST 3 0x9 Int BE Pri
!#0 N93 P47 BLD 12 -1 FP BE Pri
!#0 N94 P47 BLD 13 -1 FP BE Pri
!#0 N95 P48 DWLD 15 -1 Int BE Pri
!#0 N96 P49 LD 0 -1 Int BE Pri
!#0 N97 P50 LD 8 -1 FP BE Pri
!#0 N98 P51 DWST 10 0x3f800018 FP BE Pri
!#0 N99 P52 LD 4 -1 Int BE Pri
!#0 N100 P53 LD 3 -1 Int BE Pri
!#0 N101 P54 LD 4 -1 Int BE Pri
!#0 N103 P56 LD 8 -1 Int BE Pri
!#0 N104 P54 LD 4 -1 Int BE Pri
!#0 N106 P56 LD 8 -1 Int BE Pri
!#0 N107 P57 LD 3 -1 Int BE Pri
!#0 N108 P57 CAS 3 -1 N107 0xa Int BE Pri
!#0 N110 P59 BSTC 14 0x3f800019 FP BE Pri
!#0 N111 P59 BSTC 15 0x3f80001a FP BE Pri
!#0 N113 P59 BSTC 14 0x3f80001b FP BE Pri
!#0 N114 P59 BSTC 15 0x3f80001c FP BE Pri
!#0 N115 P60 LD 5 -1 Int BE Pri
!#0 N117 P62 LD 0 -1 Int BE Pri
!#0 N118 P60 LD 5 -1 Int BE Pri
!#0 N120 P62 LD 0 -1 Int BE Pri
!#0 N121 P63 LD 10 -1 Int BE Pri
!#0 N122 P64 LD 9 -1 Int BE Pri
!#0 N123 P63 LD 10 -1 Int BE Pri
!#0 N124 P64 LD 9 -1 Int BE Pri
!#0 N125 P65 LD 1 -1 Int BE Pri
!#0 N126 P66 LD 10 -1 Int BE Pri
!#0 N127 P65 LD 1 -1 Int BE Pri
!#0 N128 P66 LD 10 -1 Int BE Pri
!#0 N129 P67 DWLD 0 -1,0x0 Int BE Pri
!#0 N130 P67 CASX 0 -1,0x0 N129 0xb Int BE Pri
!#0 N131 P68 QWLD 0 -1 NF FP BE Pri
!#0 N132 P68 QWLD 1 -1 NF FP BE Pri
!#0 N134 P68 QWLD 0 -1 NF FP BE Pri
!#0 N135 P68 QWLD 1 -1 NF FP BE Pri
!#0 N138 P71 LD 14 -1 FP BE Pri
!#0 N140 P71 LD 14 -1 FP BE Pri
!#0 N143 P73 LD 1 -1 Int BE Pri
!#0 N144 P74 ST 4 0xc Int BE Pri
!#0 N145 P75 LD 14 -1 Int BE Pri
!#0 N146 P73 LD 1 -1 Int BE Pri
!#0 N147 P74 ST 4 0xd Int BE Pri
!#0 N148 P75 LD 14 -1 Int BE Pri
!#0 N149 P76 LD 0 -1 Int BE Pri
!#0 N150 P77 LD 10 -1 Int BE Pri
!#0 N151 P76 LD 0 -1 Int BE Pri
!#0 N152 P77 LD 10 -1 Int BE Pri
!#0 N153 P78 ST 1 0x3f80001d FP BE Pri
!#0 N154 P79 QWLD 4 -1 NF FP BE Pri
!#0 N155 P79 QWLD 5 -1 NF FP BE Pri
!#0 N156 P79 QWLD 4 -1 NF FP BE Pri
!#0 N157 P79 QWLD 5 -1 NF FP BE Pri
!#0 N159 P81 DWST 0 0x3f80001e FP BE Pri
!#0 N160 P82 LD 14 -1 FP BE Pri
!#0 N161 P81 DWST 0 0x3f80001f FP BE Pri
!#0 N162 P82 LD 14 -1 FP BE Pri
!#0 N163 P83 BSTC 4 0x3f800020 FP BE Pri
!#0 N164 P83 BSTC 5 0x3f800021 FP BE Pri
!#0 N165 P84 LD 11 -1 NF FP BE Pri
!#0 N166 P85 DWST 15 0x3f800022 FP BE Pri
!#0 N168 P87 BSTC 6 0x3f800023 FP BE Pri
!#0 N169 P87 BSTC 7 0x3f800024 FP BE Pri
!#0 N171 P87 BSTC 6 0x3f800025 FP BE Pri
!#0 N172 P87 BSTC 7 0x3f800026 FP BE Pri
!#0 N175 P90 LD 5 -1 FP BE Pri
!#0 N176 P91 LD 5 -1 Int BE Pri
!#0 N177 P91 CAS 5 -1 N176 0xe Int BE Pri
!#0 N178 P92 LD 11 -1 FP BE Pri
!#0 N180 P94 LD 11 -1 Int BE Pri
!#0 N181 P95 LD 6 -1 Int BE Pri
!#0 N182 P96 BST 6 0x3f800027 FP BE Pri
!#0 N183 P96 BST 7 0x3f800028 FP BE Pri
!#0 N184 P97 QWLD 0 -1 FP BE Pri
!#0 N185 P97 QWLD 1 -1 FP BE Pri
!#0 N186 P98 LD 14 -1 Int BE Pri
!#0 N188 P100 LD 3 -1 Int BE Pri
!#0 N189 P98 LD 14 -1 Int BE Pri
!#0 N191 P100 LD 3 -1 Int BE Pri
!#0 N192 P101 LD 9 -1 FP BE Pri
!#0 N194 P103 LD 13 -1 Int BE Pri
!#0 N196 P105 LD 5 -1 Int BE Pri
!#0 N197 P103 LD 13 -1 Int BE Pri
!#0 N199 P105 LD 5 -1 Int BE Pri
!#0 N201 P107 LD 7 -1 FP BE Pri
!#0 N204 P109 ST 15 0xf Int BE Pri
!#0 N205 P110 LD 8 -1 FP BE Pri
!#0 N206 P109 ST 15 0x10 Int BE Pri
!#0 N207 P110 LD 8 -1 FP BE Pri
!#0 N208 P111 LD 0 -1 Int BE Pri
!#0 N209 P112 LD 5 -1 Int BE Pri
!#0 N210 P113 SWAP 14 0xffffffff 0x11 Int BE Pri
!#0 N212 P115 LD 11 -1 Int BE Pri
!#0 N213 P113 SWAP 14 0xffffffff 0x12 Int BE Pri
!#0 N215 P115 LD 11 -1 Int BE Pri
!#0 N216 P116 LD 2 -1 Int BE Pri
!#0 N217 P117 LD 3 -1 Int BE Pri
!#0 N218 P116 LD 2 -1 Int BE Pri
!#0 N219 P117 LD 3 -1 Int BE Pri
!#0 N221 P119 LD 7 -1 FP BE Pri
!#0 N222 P120 LD 0 -1 FP BE Pri
!#0 N223 P121 LD 13 -1 Int BE Pri
!#0 N224 P122 LD 0 -1 Int BE Pri
!#0 N225 P120 LD 0 -1 FP BE Pri
!#0 N226 P121 LD 13 -1 Int BE Pri
!#0 N227 P122 LD 0 -1 Int BE Pri
!#0 N228 P123 LD 10 -1 NF FP BE Pri
!#0 N232 P126 LD 10 -1 Int LE Pri
!#0 N233 P127 LD 2 -1 Int BE Pri
!#0 N234 P128 LD 2 -1 Int LE Pri
!#0 N235 P129 LD 6 -1 Int LE Pri
!#0 N236 P130 LD 12 -1 Int BE Pri
!#0 N237 P131 LD 1 -1 Int BE Pri
!#0 N238 P130 LD 12 -1 Int BE Pri
!#0 N239 P131 LD 1 -1 Int BE Pri
!#0 N240 P132 SWAP 5 0xffffffff 0x13 Int BE Pri
!#0 N241 P133 LD 14 -1 NF Int BE Pri
!#0 N242 P134 LD 6 -1 Int LE Pri
!#0 N243 P135 LD 8 -1 FP BE Pri
!#0 N244 P136 LD 4 -1 Int BE Pri
!#0 N245 P134 LD 6 -1 Int LE Pri
!#0 N246 P135 LD 8 -1 FP BE Pri
!#0 N247 P136 LD 4 -1 Int BE Pri
!#0 N248 P137 BST 4 0x3f800029 FP BE Pri
!#0 N249 P137 BST 5 0x3f80002a FP BE Pri
!#0 N250 P138 BSTC 10 0x3f80002b FP BE Pri
!#0 N251 P138 BSTC 11 0x3f80002c FP BE Pri
!#0 N252 P139 LD 9 -1 Int BE Pri
!#0 N253 P140 LD 12 -1 Int BE Pri
!#0 N255 P142 LD 15 -1 Int BE Pri
!#0 N256 P143 LD 15 -1 Int BE Pri
!#0 N258 P142 LD 15 -1 Int BE Pri
!#0 N259 P143 LD 15 -1 Int BE Pri
!#0 N260 P144 ST 8 0x3f80002d FP BE Pri
!#0 N261 P145 DWLD 3 -1 Int BE Pri
!#0 N262 P146 LD 1 -1 Int BE Pri
!#0 N263 P144 ST 8 0x3f80002e FP BE Pri
!#0 N264 P145 DWLD 3 -1 Int BE Pri
!#0 N265 P146 LD 1 -1 Int BE Pri
!#0 N266 P147 LD 12 -1 Int BE Pri
!#0 N267 P148 LD 9 -1 Int BE Pri
!#0 N268 P149 BSTC 12 0x3f80002f FP BE Pri
!#0 N269 P149 BSTC 13 0x3f800030 FP BE Pri
!#0 N273 P153 LD 9 -1 Int BE Pri
!#0 N274 P154 LD 3 -1 Int BE Pri
!#0 N279 P158 QWLD 6 -1 FP BE Pri
!#0 N280 P158 QWLD 7 -1 FP BE Pri
!#0 N281 P159 BST 10 0x3f800031 FP BE Pri
!#0 N282 P159 BST 11 0x3f800032 FP BE Pri
!#0 N283 P160 LD 1 -1 Int BE Pri
!#0 N285 P162 LD 8 -1 Int BE Pri
!#0 N286 P163 DWLD 12 -1,0x0 Int BE Pri
!#0 N287 P163 CASX 12 -1,0x0 N286 0x14 Int BE Pri
!#0 N288 P164 LD 15 -1 Int BE Pri
!#0 N289 P165 LD 6 -1 Int BE Pri
!#0 N292 P167 QWLD 4 -1 FP BE Pri
!#0 N293 P167 QWLD 5 -1 FP BE Pri
!#0 N295 P169 LD 10 -1 FP BE Pri
!#0 N296 P170 LD 15 -1 FP BE Pri
!#0 N297 P171 BSTC 6 0x3f800033 FP BE Pri
!#0 N298 P171 BSTC 7 0x3f800034 FP BE Pri
!#0 N299 P170 LD 15 -1 FP BE Pri
!#0 N300 P171 BSTC 6 0x3f800035 FP BE Pri
!#0 N301 P171 BSTC 7 0x3f800036 FP BE Pri
!#0 N302 P172 DWST 5 0x15 Int BE Pri
!#0 N303 P173 LD 11 -1 FP BE Pri
!#0 N304 P172 DWST 5 0x16 Int BE Pri
!#0 N305 P173 LD 11 -1 FP BE Pri
!#0 N308 P176 BST 14 0x3f800037 FP BE Pri
!#0 N309 P176 BST 15 0x3f800038 FP BE Pri
!#0 N311 P176 BST 14 0x3f800039 FP BE Pri
!#0 N312 P176 BST 15 0x3f80003a FP BE Pri
!#0 N315 P178 LD 13 -1 Int BE Pri
!#0 N317 P180 LD 1 -1 Int BE Pri
!#0 N318 P178 LD 13 -1 Int BE Pri
!#0 N320 P180 LD 1 -1 Int BE Pri
!#0 N322 P182 BST 4 0x3f80003b FP BE Pri
!#0 N323 P182 BST 5 0x3f80003c FP BE Pri
!#0 N324 P183 LD 9 -1 FP BE Pri
!#0 N326 P185 DWST 9 0x17 Int BE Pri
!#0 N327 P185 DWST 9 0x18 Int BE Pri
!#0 N328 P186 BLD 8 -1 FP BE Pri
!#0 N329 P186 BLD 9 -1 FP BE Pri
!#0 N330 P187 LD 9 -1 NF Int BE Pri
!#0 N331 P188 LD 0 -1 Int BE Pri
!#0 N333 P190 DWLD 1 -1,0x0 Int BE Pri
!#0 N334 P190 CASX 1 -1,0x0 N333 0x19 Int BE Pri
!#0 N335 P191 LD 1 -1 Int BE Pri
!#0 N336 P192 LD 5 -1 Int BE Pri
!#0 N337 P193 ST 9 0x1a Int BE Pri
!#0 N338 P193 ST 9 0x1b Int BE Pri
!#0 N339 P194 ST 13 0x3f80003d FP BE Pri
!#0 N341 P194 ST 13 0x3f80003e FP BE Pri
!#0 N343 P196 LD 0 -1 FP BE Pri
!#0 N344 P196 LD 0 -1 FP BE Pri
!#0 N345 P197 BST 0 0x3f80003f FP BE Pri
!#0 N346 P197 BST 1 0x3f800040 FP BE Pri
!#0 N347 P198 LD 13 -1 FP BE Pri
!#0 N348 P199 SWAP 0 0xffffffff 0x1c Int BE Pri
!#0 N349 P200 LD 14 -1 Int BE Pri
!#0 N350 P198 LD 13 -1 FP BE Pri
!#0 N351 P199 SWAP 0 0xffffffff 0x1d Int BE Pri
!#0 N352 P200 LD 14 -1 Int BE Pri
!#0 N353 P201 DWLD 5 -1,0x0 Int BE Pri
!#0 N354 P201 CASX 5 -1,0x0 N353 0x1e Int BE Pri
!#0 N355 P202 LD 10 -1 Int BE Pri
!#0 N357 P204 LD 1 -1 Int BE Pri
!#0 N359 P206 DWLD 6 -1,0x0 Int BE Pri
!#0 N360 P206 CASX 6 -1,0x0 N359 0x1f Int BE Pri
!#0 N362 P206 DWLD 6 -1,0x0 Int BE Pri
!#0 N363 P206 CASX 6 -1,0x0 N362 0x20 Int BE Pri
!#0 N364 P207 LD 2 -1 Int BE Pri
!#0 N366 P209 LD 9 -1 NF Int BE Pri
!#0 N367 P207 LD 2 -1 Int BE Pri
!#0 N369 P209 LD 9 -1 NF Int BE Pri
!#0 N370 P210 ST 4 0x21 Int BE Pri
!#0 N371 P211 LD 10 -1 FP BE Pri
!#0 N372 P210 ST 4 0x22 Int BE Pri
!#0 N373 P211 LD 10 -1 FP BE Pri
!#0 N375 P213 LD 6 -1 Int BE Pri
!#0 N376 P214 LD 12 -1 NF Int BE Pri
!#0 N377 P215 MEMBAR
!#0 N378 P215 MEMBAR
!#0 N379 P216 BLD 8 -1 FP BE Pri
!#0 N380 P216 BLD 9 -1 FP BE Pri
!#0 N381 P217 DWLD 15 -1 FP BE Pri
!#0 N382 P216 BLD 8 -1 FP BE Pri
!#0 N383 P216 BLD 9 -1 FP BE Pri
!#0 N384 P217 DWLD 15 -1 FP BE Pri
!#0 N385 P218 SWAP 0 0xffffffff 0x23 Int BE Pri
!#0 N386 P219 LD 15 -1 Int BE Pri
!#0 N388 P221 LD 1 -1 NF Int BE Pri
!#0 N389 P222 LD 15 -1 Int BE Pri
!#0 N390 P223 LD 15 -1 Int BE Pri
!#0 N392 P225 LD 10 -1 Int BE Pri
!#0 N393 P223 LD 15 -1 Int BE Pri
!#0 N395 P225 LD 10 -1 Int BE Pri
!#0 N396 P226 LD 2 -1 Int BE Pri
!#0 N397 P227 LD 0 -1 Int BE Pri
!#0 N398 P228 LD 8 -1 Int BE Pri
!#0 N399 P229 LD 14 -1 Int BE Pri
!#0 N400 P228 LD 8 -1 Int BE Pri
!#0 N401 P229 LD 14 -1 Int BE Pri
!#0 N402 P230 LD 12 -1 FP BE Pri
!#0 N403 P231 BST 10 0x3f800041 FP BE Pri
!#0 N404 P231 BST 11 0x3f800042 FP BE Pri
!#0 N405 P230 LD 12 -1 FP BE Pri
!#0 N406 P231 BST 10 0x3f800043 FP BE Pri
!#0 N407 P231 BST 11 0x3f800044 FP BE Pri
!#0 N408 P232 LD 9 -1 NF Int BE Pri
!#0 N409 P233 LD 15 -1 FP BE Pri
!#0 N410 P234 LD 15 -1 NF Int BE Pri
!#0 N411 P232 LD 9 -1 NF Int BE Pri
!#0 N412 P233 LD 15 -1 FP BE Pri
!#0 N413 P234 LD 15 -1 NF Int BE Pri
!#0 N414 P235 BSTC 4 0x3f800045 FP BE Pri
!#0 N415 P235 BSTC 5 0x3f800046 FP BE Pri
!#0 N416 P235 BSTC 4 0x3f800047 FP BE Pri
!#0 N417 P235 BSTC 5 0x3f800048 FP BE Pri
!#0 N418 P236 LD 4 -1 Int BE Pri
!#0 N419 P237 LD 6 -1 Int BE Pri
!#0 N420 P236 LD 4 -1 Int BE Pri
!#0 N421 P237 LD 6 -1 Int BE Pri
!#0 N422 P238 BST 10 0x3f800049 FP BE Pri
!#0 N423 P238 BST 11 0x3f80004a FP BE Pri
!#0 N425 P238 BST 10 0x3f80004b FP BE Pri
!#0 N426 P238 BST 11 0x3f80004c FP BE Pri
!#0 N434 P243 LD 1 -1 FP BE Pri
!#0 N435 P244 BSTC 10 0x3f80004d FP BE Pri
!#0 N436 P244 BSTC 11 0x3f80004e FP BE Pri
!#0 N437 P245 LD 3 -1 Int BE Pri
!#0 N438 P246 LD 13 -1 Int BE Pri
!#0 N439 P244 BSTC 10 0x3f80004f FP BE Pri
!#0 N440 P244 BSTC 11 0x3f800050 FP BE Pri
!#0 N441 P245 LD 3 -1 Int BE Pri
!#0 N442 P246 LD 13 -1 Int BE Pri
!#0 N443 P247 BLD 6 -1 FP BE Pri
!#0 N444 P247 BLD 7 -1 FP BE Pri
!#0 N445 P248 DWLD 1 -1,0x0 Int BE Pri
!#0 N446 P248 CASX 1 -1,0x0 N445 0x24 Int BE Pri
!#0 N447 P249 LD 3 -1 FP BE Pri
!#0 N450 P251 SWAP 6 0xffffffff 0x25 Int BE Pri
!#0 N451 P252 LD 3 -1 FP BE Pri
!#0 N452 P253 LD 6 -1 Int BE Pri
!#0 N453 P251 SWAP 6 0xffffffff 0x26 Int BE Pri
!#0 N454 P252 LD 3 -1 FP BE Pri
!#0 N455 P253 LD 6 -1 Int BE Pri
!#0 N456 P254 LD 7 -1 NF Int BE Pri
!#0 N457 P255 BLD 14 -1 FP BE Pri
!#0 N458 P255 BLD 15 -1 FP BE Pri
!#0 N459 P256 LD 8 -1 Int BE Pri
!#0 N460 P254 LD 7 -1 NF Int BE Pri
!#0 N461 P255 BLD 14 -1 FP BE Pri
!#0 N462 P255 BLD 15 -1 FP BE Pri
!#0 N463 P256 LD 8 -1 Int BE Pri
!#0 N466 P258 QWST 14 0x3f800051 FP BE Pri
!#0 N467 P258 QWST 15 0x3f800052 FP BE Pri
!#0 N468 P258 QWST 14 0x3f800053 FP BE Pri
!#0 N469 P258 QWST 15 0x3f800054 FP BE Pri
!#0 N473 P261 LD 15 -1 Int BE Pri
!#0 N475 P263 LD 4 -1 Int BE Pri
!#0 N476 P261 LD 15 -1 Int BE Pri
!#0 N478 P263 LD 4 -1 Int BE Pri
!#0 N479 P264 LD 6 -1 FP BE Pri
!#0 N480 P265 LD 0 -1 Int BE Pri
!#0 N481 P266 LD 14 -1 Int BE Pri
!#0 N482 P267 DWST 3 0x27 Int BE Pri
!#0 N483 P268 DWLD 4 -1 FP BE Pri
!#0 N484 P268 DWLD 4 -1 FP BE Pri
!#0 N485 P269 BST 2 0x3f800055 FP BE Pri
!#0 N486 P269 BST 3 0x3f800056 FP BE Pri
!#0 N487 P269 BST 2 0x3f800057 FP BE Pri
!#0 N488 P269 BST 3 0x3f800058 FP BE Pri
!#0 N489 P270 BST 6 0x3f800059 FP BE Pri
!#0 N490 P270 BST 7 0x3f80005a FP BE Pri
!#0 N491 P270 BST 6 0x3f80005b FP BE Pri
!#0 N492 P270 BST 7 0x3f80005c FP BE Pri
!#0 N493 P271 QWST 12 0x3f80005d FP BE Pri
!#0 N494 P271 QWST 13 0x3f80005e FP BE Pri
!#0 N495 P272 BSTC 6 0x3f80005f FP BE Pri
!#0 N496 P272 BSTC 7 0x3f800060 FP BE Pri
!#0 N497 P273 LD 6 -1 FP BE Pri
!#0 N498 P274 ST 15 0x28 Int BE Pri
!#0 N499 P275 QWLD 0 -1 FP BE Pri
!#0 N500 P275 QWLD 1 -1 FP BE Pri
!#0 N501 P276 LD 8 -1 Int BE Pri
!#0 N503 P278 LD 9 -1 Int BE Pri
!#0 N504 P276 LD 8 -1 Int BE Pri
!#0 N506 P278 LD 9 -1 Int BE Pri
!#0 N507 P279 LD 6 -1 Int BE Pri
!#0 N508 P280 LD 1 -1 Int BE Pri
!#0 N509 P281 LD 9 -1 FP BE Pri
!#0 N510 P281 LD 9 -1 FP BE Pri
!#0 N511 P282 LD 0 -1 FP BE Pri
!#0 N512 P283 LD 7 -1 Int BE Pri
!#0 N513 P283 CAS 7 -1 N512 0x29 Int BE Pri
!#0 N514 P284 LD 1 -1 FP BE Pri
!#0 N515 P285 LD 5 -1 Int BE Pri
!#0 N516 P286 LD 1 -1 Int BE Pri
!#0 N517 P284 LD 1 -1 FP BE Pri
!#0 N518 P285 LD 5 -1 Int BE Pri
!#0 N519 P286 LD 1 -1 Int BE Pri
!#0 N520 P287 LD 15 -1 FP BE Pri
!#0 N521 P288 LD 8 -1 Int BE Pri
!#0 N522 P289 LD 4 -1 Int LE Pri
!#0 N523 P287 LD 15 -1 FP BE Pri
!#0 N524 P288 LD 8 -1 Int BE Pri
!#0 N525 P289 LD 4 -1 Int LE Pri
!#0 N526 P290 LD 7 -1 FP BE Pri
!#0 N528 P290 LD 7 -1 FP BE Pri
!#0 N530 P292 LD 7 -1 Int BE Pri
!#0 N531 P293 LD 0 -1 Int BE Pri
!#0 N532 P292 LD 7 -1 Int BE Pri
!#0 N533 P293 LD 0 -1 Int BE Pri
!#0 N534 P294 LD 12 -1 Int BE Pri
!#0 N535 P295 LD 5 -1 Int BE Pri
!#0 N536 P296 SWAP 10 0xffffffff 0x2a Int BE Pri
!#0 N537 P297 QWST 14 0x3f800061 FP BE Pri
!#0 N538 P297 QWST 15 0x3f800062 FP BE Pri
!#0 N539 P298 LD 3 -1 NF Int BE Pri
!#0 N540 P296 SWAP 10 0xffffffff 0x2b Int BE Pri
!#0 N541 P297 QWST 14 0x3f800063 FP BE Pri
!#0 N542 P297 QWST 15 0x3f800064 FP BE Pri
!#0 N543 P298 LD 3 -1 NF Int BE Pri
!#0 N544 P299 LD 0 -1 FP BE Pri
!#0 N545 P300 LD 10 -1 NF FP BE Pri
!#0 N546 P299 LD 0 -1 FP BE Pri
!#0 N547 P300 LD 10 -1 NF FP BE Pri
!#0 N549 P302 QWLD 10 -1 FP BE Pri
!#0 N550 P302 QWLD 11 -1 FP BE Pri
!#0 N551 P302 QWLD 10 -1 FP BE Pri
!#0 N552 P302 QWLD 11 -1 FP BE Pri
!#0 N556 P305 SWAP 7 0xffffffff 0x2c Int BE Pri
!#0 N557 P306 LD 4 -1 Int BE Pri
!#0 N559 P305 SWAP 7 0xffffffff 0x2d Int BE Pri
!#0 N560 P306 LD 4 -1 Int BE Pri
!#0 N561 P307 LD 10 -1 NF Int BE Pri
!#0 N563 P309 LD 14 -1 Int BE Pri
!#0 N564 P310 SWAP 10 0xffffffff 0x2e Int BE Pri
!#0 N565 P311 LD 0 -1 Int LE Pri
!#0 N566 P310 SWAP 10 0xffffffff 0x2f Int BE Pri
!#0 N567 P311 LD 0 -1 Int LE Pri
!#0 N568 P312 QWST 12 0x3f800065 FP BE Pri
!#0 N569 P312 QWST 13 0x3f800066 FP BE Pri
!#0 N570 P313 SWAP 14 0xffffffff 0x30 Int BE Pri
!#0 N571 P314 LD 14 -1 FP BE Pri
!#0 N572 P315 LD 3 -1 Int BE Pri
!#0 N573 P316 LD 9 -1 Int BE Pri
!#0 N574 P316 CAS 9 -1 N573 0x31 Int BE Pri
!#0 N575 P317 BLD 0 -1 FP BE Pri
!#0 N576 P317 BLD 1 -1 FP BE Pri
!#0 N577 P318 LD 1 -1 NF FP BE Pri
!#0 N578 P319 DWST 6 0x3f800067 FP BE Pri
!#0 N579 P318 LD 1 -1 NF FP BE Pri
!#0 N580 P319 DWST 6 0x3f800068 FP BE Pri
!#0 N581 P320 LD 6 -1 FP BE Pri
!#0 N582 P320 LD 6 -1 FP BE Pri
!#0 N585 P323 LD 9 -1 Int BE Pri
!#0 N586 P324 LD 9 -1 Int BE Pri
!#0 N587 P325 BSTC 8 0x3f800069 FP BE Pri
!#0 N588 P325 BSTC 9 0x3f80006a FP BE Pri
!#0 N589 P326 DWLD 12 -1,0x0 Int BE Pri
!#0 N590 P326 CASX 12 -1,0x0 N589 0x32 Int BE Pri
!#0 N591 P325 BSTC 8 0x3f80006b FP BE Pri
!#0 N592 P325 BSTC 9 0x3f80006c FP BE Pri
!#0 N593 P326 DWLD 12 -1,0x0 Int BE Pri
!#0 N594 P326 CASX 12 -1,0x0 N593 0x33 Int BE Pri
!#0 N595 P327 QWST 2 0x3f80006d FP BE Pri
!#0 N596 P327 QWST 3 0x3f80006e FP BE Pri
!#0 N597 P327 QWST 2 0x3f80006f FP BE Pri
!#0 N598 P327 QWST 3 0x3f800070 FP BE Pri
!#0 N599 P328 LD 6 -1 FP BE Pri
!#0 N600 P328 LD 6 -1 FP BE Pri
!#0 N605 P331 QWST 8 0x3f800071 FP BE Pri
!#0 N606 P331 QWST 9 0x3f800072 FP BE Pri
!#0 N607 P332 LD 15 -1 Int BE Pri
!#0 N608 P333 LD 4 -1 Int BE Pri
!#0 N609 P334 LD 12 -1 FP BE Pri
!#0 N610 P335 DWLD 5 -1 NF Int BE Pri
!#0 N611 P336 LD 6 -1 Int BE Pri
!#0 N612 P334 LD 12 -1 FP BE Pri
!#0 N613 P335 DWLD 5 -1 NF Int BE Pri
!#0 N614 P336 LD 6 -1 Int BE Pri
!#0 N615 P337 BLD 12 -1 FP BE Pri
!#0 N616 P337 BLD 13 -1 FP BE Pri
!#0 N617 P337 BLD 12 -1 FP BE Pri
!#0 N618 P337 BLD 13 -1 FP BE Pri
!#0 N619 P338 QWST 14 0x3f800073 FP BE Pri
!#0 N620 P338 QWST 15 0x3f800074 FP BE Pri
!#0 N622 P338 QWST 14 0x3f800075 FP BE Pri
!#0 N623 P338 QWST 15 0x3f800076 FP BE Pri
!#0 N625 P340 LD 3 -1 Int BE Pri
!#0 N626 P341 BSTC 0 0x3f800077 FP BE Pri
!#0 N627 P341 BSTC 1 0x3f800078 FP BE Pri
!#0 N628 P342 LD 12 -1 Int BE Pri
!#0 N629 P340 LD 3 -1 Int BE Pri
!#0 N630 P341 BSTC 0 0x3f800079 FP BE Pri
!#0 N631 P341 BSTC 1 0x3f80007a FP BE Pri
!#0 N632 P342 LD 12 -1 Int BE Pri
!#0 N634 P344 LD 6 -1 Int BE Pri
!#0 N635 P345 LD 3 -1 Int BE Pri
!#0 N636 P346 LD 5 -1 FP BE Pri
!#0 N638 P348 LD 5 -1 Int BE Pri
!#0 N639 P349 LD 15 -1 Int LE Pri
!#0 N640 P350 BSTC 10 0x3f80007b FP BE Pri
!#0 N641 P350 BSTC 11 0x3f80007c FP BE Pri
!#0 N642 P351 BST 2 0x3f80007d FP BE Pri
!#0 N643 P351 BST 3 0x3f80007e FP BE Pri
!#0 N644 P350 BSTC 10 0x3f80007f FP BE Pri
!#0 N645 P350 BSTC 11 0x3f800080 FP BE Pri
!#0 N646 P351 BST 2 0x3f800081 FP BE Pri
!#0 N647 P351 BST 3 0x3f800082 FP BE Pri
!#0 N648 P352 DWLD 1 -1,0x0 Int BE Pri
!#0 N649 P352 CASX 1 -1,0x0 N648 0x34 Int BE Pri
!#0 N650 P352 DWLD 1 -1,0x0 Int BE Pri
!#0 N651 P352 CASX 1 -1,0x0 N650 0x35 Int BE Pri
!#0 N652 P353 BLD 12 -1 FP BE Pri
!#0 N653 P353 BLD 13 -1 FP BE Pri
!#0 N654 P354 DWLD 4 -1,0x0 Int BE Pri
!#0 N655 P354 CASX 4 -1,0x0 N654 0x36 Int BE Pri
!#0 N658 P356 LD 7 -1 FP BE Pri
!#0 N659 P357 LD 6 -1 Int BE Pri
!#0 N660 P358 LD 15 -1 Int BE Pri
!#0 N661 P359 LD 3 -1 Int BE Pri
!#0 N662 P359 CAS 3 -1 N661 0x37 Int BE Pri
!#0 N663 P360 DWLD 7 -1,0x0 Int BE Pri
!#0 N664 P360 CASX 7 -1,0x0 N663 0x38 Int BE Pri
!#0 N666 P360 DWLD 7 -1,0x0 Int BE Pri
!#0 N667 P360 CASX 7 -1,0x0 N666 0x39 Int BE Pri
!#0 N669 P362 LD 3 -1 FP BE Pri
!#0 N670 P363 LD 4 -1 Int BE Pri
!#0 N671 P364 LD 14 -1 Int BE Pri
!#0 N672 P365 LD 3 -1 Int BE Pri
!#0 N674 P367 LD 2 -1 NF Int BE Pri
!#0 N675 P365 LD 3 -1 Int BE Pri
!#0 N677 P367 LD 2 -1 NF Int BE Pri
!#0 N678 P368 LD 3 -1 FP BE Pri
!#0 N679 P369 LD 8 -1 Int BE Pri
!#0 N680 P370 LD 12 -1 Int BE Pri
!#0 N681 P371 SWAP 0 0xffffffff 0x3a Int BE Pri
!#0 N683 P373 LD 10 -1 Int BE Pri
!#0 N684 P374 LD 14 -1 FP BE Pri
!#0 N686 P374 LD 14 -1 FP BE Pri
!#0 N690 P377 BLD 0 -1 FP BE Pri
!#0 N691 P377 BLD 1 -1 FP BE Pri
!#0 N693 P377 BLD 0 -1 FP BE Pri
!#0 N694 P377 BLD 1 -1 FP BE Pri
!#0 N696 P379 BST 12 0x3f800083 FP BE Pri
!#0 N697 P379 BST 13 0x3f800084 FP BE Pri
!#0 N698 P379 BST 12 0x3f800085 FP BE Pri
!#0 N699 P379 BST 13 0x3f800086 FP BE Pri
!#0 N700 P380 QWLD 14 -1 FP BE Pri
!#0 N701 P380 QWLD 15 -1 FP BE Pri
!#0 N702 P381 LD 14 -1 FP BE Pri
!#0 N703 P381 LD 14 -1 FP BE Pri
!#0 N704 P382 DWLD 3 -1 Int BE Pri
!#0 N705 P383 LD 6 -1 Int BE Pri
!#0 N707 P385 BST 0 0x3f800087 FP BE Pri
!#0 N708 P385 BST 1 0x3f800088 FP BE Pri
!#0 N709 P385 BST 0 0x3f800089 FP BE Pri
!#0 N710 P385 BST 1 0x3f80008a FP BE Pri
!#0 N711 P386 LD 8 -1 Int LE Pri
!#0 N712 P387 LD 13 -1 Int BE Pri
!#0 N717 P391 BSTC 0 0x3f80008b FP BE Pri
!#0 N718 P391 BSTC 1 0x3f80008c FP BE Pri
!#0 N719 P392 LD 1 -1 FP BE Pri
!#0 N720 P391 BSTC 0 0x3f80008d FP BE Pri
!#0 N721 P391 BSTC 1 0x3f80008e FP BE Pri
!#0 N722 P392 LD 1 -1 FP BE Pri
!#0 N723 P393 DWLD 6 -1 Int BE Pri
!#0 N725 P395 LD 0 -1 Int BE Pri
!#0 N730 P398 BLD 4 -1 FP BE Pri
!#0 N731 P398 BLD 5 -1 FP BE Pri
!#0 N732 P399 LD 15 -1 Int BE Pri
!#0 N733 P400 LD 11 -1 Int BE Pri
!#0 N734 P398 BLD 4 -1 FP BE Pri
!#0 N735 P398 BLD 5 -1 FP BE Pri
!#0 N736 P399 LD 15 -1 Int BE Pri
!#0 N737 P400 LD 11 -1 Int BE Pri
!#0 N738 P401 BLD 2 -1 FP BE Pri
!#0 N739 P401 BLD 3 -1 FP BE Pri
!#0 N740 P402 LD 6 -1 FP BE Pri
!#0 N741 P402 LD 6 -1 FP BE Pri
!#0 N742 P403 DWST 13 0x3f80008f FP BE Pri
!#0 N743 P404 LD 12 -1 FP BE Pri
!#0 N744 P405 DWLD 6 -1,0x0 Int BE Pri
!#0 N745 P405 CASX 6 -1,0x0 N744 0x3b Int BE Pri
!#0 N746 P406 QWLD 10 -1 NF FP BE Pri
!#0 N747 P406 QWLD 11 -1 NF FP BE Pri
!#0 N748 P405 DWLD 6 -1,0x0 Int BE Pri
!#0 N749 P405 CASX 6 -1,0x0 N748 0x3c Int BE Pri
!#0 N750 P406 QWLD 10 -1 NF FP BE Pri
!#0 N751 P406 QWLD 11 -1 NF FP BE Pri
!#0 N752 P407 LD 10 -1 FP BE Pri
!#0 N754 P407 LD 10 -1 FP BE Pri
!#0 N756 P409 LD 14 -1 FP BE Pri
!#0 N757 P410 LD 5 -1 Int BE Pri
!#0 N758 P411 LD 1 -1 Int BE Pri
!#0 N759 P409 LD 14 -1 FP BE Pri
!#0 N760 P410 LD 5 -1 Int BE Pri
!#0 N761 P411 LD 1 -1 Int BE Pri
!#0 N762 P412 LD 11 -1 Int BE Pri
!#0 N763 P413 LD 4 -1 Int BE Pri
!#0 N764 P414 LD 15 -1 FP BE Pri
!#0 N765 P415 LD 8 -1 Int BE Pri
!#0 N766 P416 LD 8 -1 Int BE Pri
!#0 N767 P414 LD 15 -1 FP BE Pri
!#0 N768 P415 LD 8 -1 Int BE Pri
!#0 N769 P416 LD 8 -1 Int BE Pri
!#0 N771 P418 QWLD 6 -1 FP BE Pri
!#0 N772 P418 QWLD 7 -1 FP BE Pri
!#0 N774 P418 QWLD 6 -1 FP BE Pri
!#0 N775 P418 QWLD 7 -1 FP BE Pri
!#0 N776 P419 LD 5 -1 FP BE Pri
!#0 N777 P420 DWST 13 0x3f800090 FP BE Pri
!#0 N778 P421 LD 15 -1 FP BE Pri
!#0 N779 P421 LD 15 -1 FP BE Pri
!#0 N780 P422 DWLD 7 -1 Int BE Pri
!#0 N781 P423 LD 3 -1 Int BE Pri
!#0 N787 P427 DWST 9 0x3d Int BE Pri
!#0 N788 P428 LD 8 -1 Int BE Pri
!#0 N790 P430 LD 4 -1 Int BE Pri
!#0 N791 P428 LD 8 -1 Int BE Pri
!#0 N793 P430 LD 4 -1 Int BE Pri
!#0 N797 P433 LD 5 -1 Int BE Pri
!#0 N798 P434 LD 10 -1 Int BE Pri
!#0 N799 P433 LD 5 -1 Int BE Pri
!#0 N800 P434 LD 10 -1 Int BE Pri
!#0 N801 P435 LD 11 -1 Int BE Pri
!#0 N803 P437 LD 6 -1 Int BE Pri
!#0 N804 P438 LD 7 -1 FP BE Pri
!#0 N805 P439 LD 1 -1 FP BE Pri
!#0 N806 P440 LD 12 -1 FP BE Pri
!#0 N807 P439 LD 1 -1 FP BE Pri
!#0 N808 P440 LD 12 -1 FP BE Pri
!#0 N809 P441 DWLD 7 -1,0x0 Int BE Pri
!#0 N810 P441 CASX 7 -1,0x0 N809 0x3e Int BE Pri
!#0 N811 P442 LD 3 -1 FP BE Pri
!#0 N814 P445 LD 14 -1 Int BE Pri
!#0 N815 P446 LD 2 -1 Int BE Pri
!#0 N816 P445 LD 14 -1 Int BE Pri
!#0 N817 P446 LD 2 -1 Int BE Pri
!#0 N818 P447 LD 1 -1 FP BE Pri
!#0 N820 P449 MEMBAR
!#0 N821 P450 LD 13 -1 FP BE Pri
!#0 N822 P451 LD 3 -1 Int BE Pri
!#0 N823 P452 LD 11 -1 NF Fault Int BE Pri
!#0 N824 P453 SWAP 0 0xffffffff 0x3f Int BE Pri
!#0 N825 P454 LD 15 -1 NF FP BE Pri
!#0 N826 P455 LD 4 -1 Int BE Pri
!#0 N827 P453 SWAP 0 0xffffffff 0x40 Int BE Pri
!#0 N828 P454 LD 15 -1 NF FP BE Pri
!#0 N829 P455 LD 4 -1 Int BE Pri
!#0 N831 P457 LD 15 -1 Int BE Pri
!#0 N832 P458 LD 0 -1 Int BE Pri
!#0 N833 P459 ST 0 0x41 Int BE Pri
!#0 N834 P460 LD 5 -1 FP BE Pri
!#0 N835 P459 ST 0 0x42 Int BE Pri
!#0 N836 P460 LD 5 -1 FP BE Pri
!#0 N840 P463 BST 2 0x3f800091 FP BE Pri
!#0 N841 P463 BST 3 0x3f800092 FP BE Pri
!#0 N842 P464 BLD 2 -1 FP BE Pri
!#0 N843 P464 BLD 3 -1 FP BE Pri
!#0 N844 P465 BST 8 0x3f800093 FP BE Pri
!#0 N845 P465 BST 9 0x3f800094 FP BE Pri
!#0 N846 P466 ST 14 0x3f800095 FP BE Pri
!#0 N847 P467 QWST 12 0x3f800096 FP BE Pri
!#0 N848 P467 QWST 13 0x3f800097 FP BE Pri
!#0 N849 P466 ST 14 0x3f800098 FP BE Pri
!#0 N850 P467 QWST 12 0x3f800099 FP BE Pri
!#0 N851 P467 QWST 13 0x3f80009a FP BE Pri
!#0 N852 P468 SWAP 1 0xffffffff 0x43 Int BE Pri
!#0 N853 P469 LD 3 -1 Int BE Pri
!#0 N855 P471 DWLD 5 -1,0x0 Int BE Pri
!#0 N856 P471 CASX 5 -1,0x0 N855 0x44 Int BE Pri
!#0 N858 P473 DWLD 5 -1 FP BE Pri
!#0 N859 P474 DWLD 2 -1 FP BE Pri
!#0 N860 P475 SWAP 14 0xffffffff 0x45 Int BE Pri
!#0 N861 P476 LD 0 -1 Int BE Pri
!#0 N863 P478 BST 6 0x3f80009b FP BE Pri
!#0 N864 P478 BST 7 0x3f80009c FP BE Pri
!#0 N866 P478 BST 6 0x3f80009d FP BE Pri
!#0 N867 P478 BST 7 0x3f80009e FP BE Pri
!#0 N868 P479 LD 2 -1 Int BE Pri
!#0 N870 P481 LD 7 -1 Int BE Pri
!#0 N871 P482 LD 11 -1 Int BE Pri
!#0 N872 P483 BSTC 14 0x3f80009f FP BE Pri
!#0 N873 P483 BSTC 15 0x3f8000a0 FP BE Pri
!#0 N874 P484 LD 9 -1 Int BE Pri
!#0 N875 P482 LD 11 -1 Int BE Pri
!#0 N876 P483 BSTC 14 0x3f8000a1 FP BE Pri
!#0 N877 P483 BSTC 15 0x3f8000a2 FP BE Pri
!#0 N878 P484 LD 9 -1 Int BE Pri
!#0 N879 P485 DWLD 8 -1,0x0 Int BE Pri
!#0 N880 P485 CASX 8 -1,0x0 N879 0x46 Int BE Pri
!#0 N881 P485 DWLD 8 -1,0x0 Int BE Pri
!#0 N882 P485 CASX 8 -1,0x0 N881 0x47 Int BE Pri
!#0 N883 P486 LD 1 -1 Int BE Pri
!#0 N884 P487 LD 8 -1 Int BE Pri
!#0 N886 P489 ST 10 0x48 Int BE Pri
!#0 N887 P489 ST 10 0x49 Int BE Pri
!#0 N889 P491 LD 6 -1 FP BE Pri
!#0 N890 P492 BSTC 10 0x3f8000a3 FP BE Pri
!#0 N891 P492 BSTC 11 0x3f8000a4 FP BE Pri
!#0 N893 P492 BSTC 10 0x3f8000a5 FP BE Pri
!#0 N894 P492 BSTC 11 0x3f8000a6 FP BE Pri
!#0 N896 P494 BSTC 12 0x3f8000a7 FP BE Pri
!#0 N897 P494 BSTC 13 0x3f8000a8 FP BE Pri
!#0 N898 P495 LD 11 -1 FP BE Pri
!#0 N899 P494 BSTC 12 0x3f8000a9 FP BE Pri
!#0 N900 P494 BSTC 13 0x3f8000aa FP BE Pri
!#0 N901 P495 LD 11 -1 FP BE Pri
!#0 N902 P496 LD 1 -1 Int BE Pri
!#0 N903 P497 LD 7 -1 Int LE Pri
!#0 N906 P499 LD 0 -1 Int BE Pri
!#0 N907 P499 CAS 0 -1 N906 0x4a Int BE Pri
!#0 N908 P500 DWST 11 0x4b Int BE Pri
!#0 N909 P500 DWST 11 0x4c Int BE Pri
!#0 N910 P501 DWLD 7 -1,0x0 Int BE Pri
!#0 N911 P501 CASX 7 -1,0x0 N910 0x4d Int BE Pri
!#0 N912 P501 DWLD 7 -1,0x0 Int BE Pri
!#0 N913 P501 CASX 7 -1,0x0 N912 0x4e Int BE Pri
!#0 N914 P502 QWST 14 0x3f8000ab FP BE Pri
!#0 N915 P502 QWST 15 0x3f8000ac FP BE Pri
!#0 N917 P504 LD 8 -1 FP BE Pri
!#0 N918 P505 LD 1 -1 Int BE Pri
!#0 N919 P506 LD 9 -1 Int BE Pri
!#0 N920 P507 QWLD 2 -1 FP BE Pri
!#0 N921 P507 QWLD 3 -1 FP BE Pri
!#0 N924 P509 BLD 8 -1 FP BE Pri
!#0 N925 P509 BLD 9 -1 FP BE Pri
!#0 N926 P510 LD 15 -1 Int BE Pri
!#0 N927 P510 CAS 15 -1 N926 0x4f Int BE Pri
!#0 N928 P509 BLD 8 -1 FP BE Pri
!#0 N929 P509 BLD 9 -1 FP BE Pri
!#0 N930 P510 LD 15 -1 Int BE Pri
!#0 N931 P510 CAS 15 -1 N930 0x50 Int BE Pri
!#0 N935 P513 LD 0 -1 Int BE Pri
!#0 N936 P514 LD 4 -1 Int BE Pri
!#0 N937 P515 BLD 12 -1 FP BE Pri
!#0 N938 P515 BLD 13 -1 FP BE Pri
!#0 N939 P516 LD 9 -1 FP BE Pri
!#0 N940 P517 LD 7 -1 Int LE Pri
!#0 N941 P518 LD 14 -1 Int LE Pri
!#0 N942 P519 LD 11 -1 Int BE Pri
!#0 N943 P519 CAS 11 -1 N942 0x51 Int BE Pri
!#0 N945 P521 LD 15 -1 Int BE Pri
!#0 N946 P521 CAS 15 -1 N945 0x52 Int BE Pri
!#0 N947 P522 BLD 0 -1 FP BE Pri
!#0 N948 P522 BLD 1 -1 FP BE Pri
!#0 N949 P521 LD 15 -1 Int BE Pri
!#0 N950 P521 CAS 15 -1 N949 0x53 Int BE Pri
!#0 N951 P522 BLD 0 -1 FP BE Pri
!#0 N952 P522 BLD 1 -1 FP BE Pri
!#0 N953 P523 DWLD 5 -1 NF FP BE Pri
!#0 N955 P523 DWLD 5 -1 NF FP BE Pri
!#0 N959 P526 QWLD 10 -1 FP BE Pri
!#0 N960 P526 QWLD 11 -1 FP BE Pri
!#0 N961 P527 LD 0 -1 Int LE Pri
!#0 N962 P528 LD 8 -1 Int BE Pri
!#0 N963 P529 LD 3 -1 Int BE Pri
!#0 N964 P530 LD 9 -1 Int BE Pri
!#0 N965 P529 LD 3 -1 Int BE Pri
!#0 N966 P530 LD 9 -1 Int BE Pri
!#0 N968 P532 BSTC 6 0x3f8000ad FP BE Pri
!#0 N969 P532 BSTC 7 0x3f8000ae FP BE Pri
!#0 N970 P533 DWLD 12 -1 FP BE Pri
!#0 N973 P536 LD 2 -1 Int BE Pri
!#0 N974 P537 DWLD 2 -1,0x0 Int LE Pri
!#0 N975 P537 CASX 2 -1,0x0 N974 0x54 Int LE Pri
!#0 N976 P538 LD 5 -1 Int BE Pri
!#0 N977 P539 ST 1 0x55 Int BE Pri
!#0 N978 P540 LD 4 -1 Int BE Pri
!#0 N979 P541 LD 3 -1 Int BE Pri
!#0 N980 P542 LD 12 -1 FP BE Pri
!#0 N981 P543 BLD 2 -1 FP BE Pri
!#0 N982 P543 BLD 3 -1 FP BE Pri
!#0 N990 P548 BSTC 14 0x3f8000af FP BE Pri
!#0 N991 P548 BSTC 15 0x3f8000b0 FP BE Pri
!#0 N992 P549 LD 15 -1 NF FP BE Pri
!#0 N993 P548 BSTC 14 0x3f8000b1 FP BE Pri
!#0 N994 P548 BSTC 15 0x3f8000b2 FP BE Pri
!#0 N995 P549 LD 15 -1 NF FP BE Pri
!#0 N997 P551 LD 11 -1 Int BE Pri
!#0 N998 P552 LD 10 -1 Int BE Pri
!#0 N999 P553 LD 12 -1 FP BE Pri
!#0 N1000 P554 LD 9 -1 FP BE Pri
!#0 N1001 P555 QWST 2 0x3f8000b3 FP BE Pri
!#0 N1002 P555 QWST 3 0x3f8000b4 FP BE Pri
!#0 N1003 P555 QWST 2 0x3f8000b5 FP BE Pri
!#0 N1004 P555 QWST 3 0x3f8000b6 FP BE Pri
!#0 N1006 P557 LD 15 -1 Int BE Pri
!#0 N1007 P558 LD 6 -1 Int BE Pri
!#0 N1009 P557 LD 15 -1 Int BE Pri
!#0 N1010 P558 LD 6 -1 Int BE Pri
!#0 N1012 P560 BLD 6 -1 FP BE Pri
!#0 N1013 P560 BLD 7 -1 FP BE Pri
!#0 N1014 P561 LD 0 -1 Int BE Pri
!#0 N1015 P562 LD 10 -1 Int BE Pri
!#0 N1016 P560 BLD 6 -1 FP BE Pri
!#0 N1017 P560 BLD 7 -1 FP BE Pri
!#0 N1018 P561 LD 0 -1 Int BE Pri
!#0 N1019 P562 LD 10 -1 Int BE Pri
!#0 N1020 P563 ST 7 0x56 Int BE Pri
!#0 N1021 P564 LD 1 -1 FP BE Pri
!#0 N1022 P565 LD 13 -1 FP BE Pri
!#0 N1023 P566 BSTC 2 0x3f8000b7 FP BE Pri
!#0 N1024 P566 BSTC 3 0x3f8000b8 FP BE Pri
!#0 N1025 P567 LD 13 -1 Int BE Pri
!#0 N1026 P568 LD 14 -1 Int BE Pri
!#0 N1027 P567 LD 13 -1 Int BE Pri
!#0 N1028 P568 LD 14 -1 Int BE Pri
!#0 N1029 P569 LD 3 -1 NF FP BE Pri
!#0 N1030 P569 LD 3 -1 NF FP BE Pri
!#0 N1032 P571 BSTC 8 0x3f8000b9 FP BE Pri
!#0 N1033 P571 BSTC 9 0x3f8000ba FP BE Pri
!#0 N1035 P571 BSTC 8 0x3f8000bb FP BE Pri
!#0 N1036 P571 BSTC 9 0x3f8000bc FP BE Pri
!#0 N1037 P572 LD 2 -1 Int BE Pri
!#0 N1038 P573 SWAP 2 0xffffffff 0x57 Int BE Pri
!#0 N1039 P572 LD 2 -1 Int BE Pri
!#0 N1040 P573 SWAP 2 0xffffffff 0x58 Int BE Pri
!#0 N1041 P574 LD 3 -1 Int BE Pri
!#0 N1042 P575 LD 14 -1 Int BE Pri
!#0 N1044 P577 BST 14 0x3f8000bd FP BE Pri
!#0 N1045 P577 BST 15 0x3f8000be FP BE Pri
!#0 N1046 P578 LD 13 -1 NF FP BE Pri
!#0 N1048 P578 LD 13 -1 NF FP BE Pri
!#0 N1051 P581 LD 6 -1 Int BE Pri
!#0 N1052 P582 LD 5 -1 Int BE Pri
!#0 N1054 P581 LD 6 -1 Int BE Pri
!#0 N1055 P582 LD 5 -1 Int BE Pri
!#0 N1059 P586 LD 3 -1 FP BE Pri
!#0 N1061 P588 LD 1 -1 FP BE Pri
!#0 N1062 P589 LD 10 -1 Int BE Pri
!#0 N1063 P589 CAS 10 -1 N1062 0x59 Int BE Pri
!#0 N1064 P590 LD 12 -1 FP BE Pri
!#0 N1065 P589 LD 10 -1 Int BE Pri
!#0 N1066 P589 CAS 10 -1 N1065 0x5a Int BE Pri
!#0 N1067 P590 LD 12 -1 FP BE Pri
!#0 N1068 P591 LD 7 -1 Int BE Pri
!#0 N1069 P592 LD 13 -1 NF FP BE Pri
!#0 N1070 P593 LD 3 -1 Int BE Pri
!#0 N1072 P595 DWLD 4 -1,0x0 Int BE Pri
!#0 N1073 P595 CASX 4 -1,0x0 N1072 0x5b Int BE Pri
!#0 N1074 P596 ST 13 0x3f8000bf FP BE Pri
!#0 N1075 P597 LD 13 -1 Int BE Pri
!#0 N1076 P598 LD 2 -1 Int BE Pri
!#0 N1077 P596 ST 13 0x3f8000c0 FP BE Pri
!#0 N1078 P597 LD 13 -1 Int BE Pri
!#0 N1079 P598 LD 2 -1 Int BE Pri
!#0 N1080 P599 SWAP 9 0xffffffff 0x5c Int BE Pri
!#0 N1081 P600 BLD 4 -1 FP BE Pri
!#0 N1082 P600 BLD 5 -1 FP BE Pri
!#0 N1083 P601 LD 2 -1 NF Int BE Pri
!#0 N1084 P602 BLD 10 -1 FP BE Pri
!#0 N1085 P602 BLD 11 -1 FP BE Pri
!#0 N1090 P606 SWAP 0 0xffffffff 0x5d Int BE Pri
!#0 N1091 P607 LD 12 -1 Int BE Pri
!#0 N1092 P606 SWAP 0 0xffffffff 0x5e Int BE Pri
!#0 N1093 P607 LD 12 -1 Int BE Pri
!#0 N1096 P609 QWST 6 0x3f8000c1 FP BE Pri
!#0 N1097 P609 QWST 7 0x3f8000c2 FP BE Pri
!#0 N1098 P610 LD 2 -1 FP BE Pri
!#0 N1102 P614 LD 0 -1 Int BE Pri
!#0 N1103 P615 LD 12 -1 Int BE Pri
!#0 N1105 P614 LD 0 -1 Int BE Pri
!#0 N1106 P615 LD 12 -1 Int BE Pri
!#0 N1108 P617 BST 6 0x3f8000c3 FP BE Pri
!#0 N1109 P617 BST 7 0x3f8000c4 FP BE Pri
!#0 N1113 P620 LD 1 -1 FP BE Pri
!#0 N1114 P621 MEMBAR
!#0 N1116 P621 MEMBAR
!#0 N1118 P623 LD 9 -1 FP BE Pri
!#0 N1119 P624 BLD 0 -1 FP BE Pri
!#0 N1120 P624 BLD 1 -1 FP BE Pri
!#0 N1124 P628 QWST 2 0x3f8000c5 FP BE Pri
!#0 N1125 P628 QWST 3 0x3f8000c6 FP BE Pri
!#0 N1126 P629 BSTC 10 0x3f8000c7 FP BE Pri
!#0 N1127 P629 BSTC 11 0x3f8000c8 FP BE Pri
!#0 N1128 P630 LD 12 -1 Int BE Pri
!#0 N1129 P631 LD 5 -1 Int BE Pri
!#0 N1131 P633 LD 15 -1 Int BE Pri
!#0 N1132 P633 CAS 15 -1 N1131 0x5f Int BE Pri
!#0 N1133 P634 LD 6 -1 Int BE Pri
!#0 N1134 P635 LD 12 -1 Int BE Pri
!#0 N1135 P634 LD 6 -1 Int BE Pri
!#0 N1136 P635 LD 12 -1 Int BE Pri
!#0 N1137 P636 SWAP 4 0xffffffff 0x60 Int BE Pri
!#0 N1138 P637 LD 10 -1 FP BE Pri
!#0 N1139 P638 LD 6 -1 Int LE Pri
!#0 N1140 P636 SWAP 4 0xffffffff 0x61 Int BE Pri
!#0 N1141 P637 LD 10 -1 FP BE Pri
!#0 N1142 P638 LD 6 -1 Int LE Pri
!#0 N1143 P639 DWLD 7 -1 Int BE Pri
!#0 N1144 P640 LD 5 -1 Int BE Pri
!#0 N1145 P641 LD 9 -1 FP BE Pri
!#0 N1147 P643 LD 10 -1 Int BE Pri
!#0 N1148 P644 DWLD 9 -1 FP BE Pri
!#0 N1149 P645 LD 6 -1 Int BE Pri
!#0 N1150 P643 LD 10 -1 Int BE Pri
!#0 N1151 P644 DWLD 9 -1 FP BE Pri
!#0 N1152 P645 LD 6 -1 Int BE Pri
!#0 N1153 P646 LD 14 -1 Int BE Pri
!#0 N1154 P647 LD 4 -1 Int BE Pri
!#0 N1155 P646 LD 14 -1 Int BE Pri
!#0 N1156 P647 LD 4 -1 Int BE Pri
!#0 N1157 P648 LD 5 -1 Int BE Pri
!#0 N1158 P649 LD 1 -1 Int BE Pri
!#0 N1159 P648 LD 5 -1 Int BE Pri
!#0 N1160 P649 LD 1 -1 Int BE Pri
!#0 N1161 P650 DWST 14 0x3f8000c9 FP BE Pri
!#0 N1162 P651 BLD 12 -1 FP BE Pri
!#0 N1163 P651 BLD 13 -1 FP BE Pri
!#0 N1164 P652 DWLD 3 -1 FP BE Pri
!#0 N1166 P654 DWLD 8 -1,0x0 Int BE Pri
!#0 N1167 P654 CASX 8 -1,0x0 N1166 0x62 Int BE Pri
!#0 N1168 P655 LD 7 -1 Int BE Pri
!#0 N1169 P656 LD 15 -1 Int BE Pri
!#0 N1170 P657 DWLD 6 -1 NF Int BE Pri
!#0 N1171 P658 BSTC 10 0x3f8000ca FP BE Pri
!#0 N1172 P658 BSTC 11 0x3f8000cb FP BE Pri
!#0 N1173 P659 LD 13 -1 Int BE Pri
!#0 N1175 P661 DWLD 1 -1 Int BE Pri
!#0 N1176 P662 LD 10 -1 Int BE Pri
!#0 N1177 P663 DWST 15 0x3f8000cc FP BE Pri
!#0 N1179 P663 DWST 15 0x3f8000cd FP BE Pri
!#0 N1181 P665 LD 7 -1 Int BE Pri
!#0 N1182 P666 LD 0 -1 Int BE Pri
!#0 N1186 P670 MEMBAR
!#1 N1187 P671 DWST 7 0x800001 Int LE Pri
!#1 N1188 P672 BST 8 0x40000001 FP BE Pri
!#1 N1189 P672 BST 9 0x40000002 FP BE Pri
!#1 N1190 P673 LD 3 -1 FP BE Pri
!#1 N1191 P673 LD 3 -1 FP BE Pri
!#1 N1192 P674 LD 12 -1 Int BE Pri
!#1 N1193 P675 LD 4 -1 Int BE Pri
!#1 N1194 P676 LD 2 -1 FP BE Pri
!#1 N1195 P677 LD 14 -1 Int BE Pri
!#1 N1196 P678 LD 11 -1 Int BE Pri
!#1 N1197 P676 LD 2 -1 FP BE Pri
!#1 N1198 P677 LD 14 -1 Int BE Pri
!#1 N1199 P678 LD 11 -1 Int BE Pri
!#1 N1200 P679 LD 13 -1 Int BE Pri
!#1 N1202 P681 LD 0 -1 Int BE Pri
!#1 N1203 P679 LD 13 -1 Int BE Pri
!#1 N1205 P681 LD 0 -1 Int BE Pri
!#1 N1206 P682 SWAP 1 0xffffffff 0x800002 Int BE Pri
!#1 N1207 P683 LD 1 -1 Int BE Pri
!#1 N1208 P684 BLD 4 -1 FP BE Pri
!#1 N1209 P684 BLD 5 -1 FP BE Pri
!#1 N1211 P684 BLD 4 -1 FP BE Pri
!#1 N1212 P684 BLD 5 -1 FP BE Pri
!#1 N1215 P687 LD 0 -1 FP BE Pri
!#1 N1216 P687 LD 0 -1 FP BE Pri
!#1 N1217 P688 BSTC 12 0x40000003 FP BE Pri
!#1 N1218 P688 BSTC 13 0x40000004 FP BE Pri
!#1 N1220 P690 DWST 9 0x800003 Int BE Pri
!#1 N1222 P692 BST 4 0x40000005 FP BE Pri
!#1 N1223 P692 BST 5 0x40000006 FP BE Pri
!#1 N1224 P693 LD 0 -1 FP BE Pri
!#1 N1225 P694 BLD 10 -1 FP BE Pri
!#1 N1226 P694 BLD 11 -1 FP BE Pri
!#1 N1229 P696 BLD 6 -1 FP BE Pri
!#1 N1230 P696 BLD 7 -1 FP BE Pri
!#1 N1232 P698 LD 4 -1 Int BE Pri
!#1 N1233 P699 LD 5 -1 Int BE Pri
!#1 N1234 P700 QWLD 14 -1 NF FP BE Pri
!#1 N1235 P700 QWLD 15 -1 NF FP BE Pri
!#1 N1237 P702 QWLD 2 -1 FP BE Pri
!#1 N1238 P702 QWLD 3 -1 FP BE Pri
!#1 N1239 P703 LD 1 -1 Int BE Pri
!#1 N1240 P704 LD 14 -1 Int BE Pri
!#1 N1241 P702 QWLD 2 -1 FP BE Pri
!#1 N1242 P702 QWLD 3 -1 FP BE Pri
!#1 N1243 P703 LD 1 -1 Int BE Pri
!#1 N1244 P704 LD 14 -1 Int BE Pri
!#1 N1245 P705 SWAP 6 0xffffffff 0x800004 Int BE Pri
!#1 N1246 P706 LD 5 -1 Int BE Pri
!#1 N1247 P707 DWST 3 0x800005 Int BE Pri
!#1 N1248 P707 DWST 3 0x800006 Int BE Pri
!#1 N1249 P708 BLD 8 -1 FP BE Pri
!#1 N1250 P708 BLD 9 -1 FP BE Pri
!#1 N1252 P708 BLD 8 -1 FP BE Pri
!#1 N1253 P708 BLD 9 -1 FP BE Pri
!#1 N1255 P710 QWLD 14 -1 FP BE Pri
!#1 N1256 P710 QWLD 15 -1 FP BE Pri
!#1 N1257 P711 LD 4 -1 FP BE Pri
!#1 N1258 P712 LD 8 -1 Int BE Pri
!#1 N1259 P713 LD 2 -1 Int BE Pri
!#1 N1261 P715 BST 2 0x40000007 FP BE Pri
!#1 N1262 P715 BST 3 0x40000008 FP BE Pri
!#1 N1263 P715 BST 2 0x40000009 FP BE Pri
!#1 N1264 P715 BST 3 0x4000000a FP BE Pri
!#1 N1265 P716 LD 0 -1 Int BE Pri
!#1 N1266 P717 LD 15 -1 Int BE Pri
!#1 N1269 P720 DWLD 14 -1 NF FP BE Pri
!#1 N1270 P721 LD 14 -1 Int LE Pri
!#1 N1271 P722 LD 0 -1 Int BE Pri
!#1 N1272 P720 DWLD 14 -1 NF FP BE Pri
!#1 N1273 P721 LD 14 -1 Int LE Pri
!#1 N1274 P722 LD 0 -1 Int BE Pri
!#1 N1276 P724 DWLD 5 -1 Int BE Pri
!#1 N1277 P725 LD 0 -1 NF Int BE Pri
!#1 N1278 P726 LD 10 -1 FP BE Pri
!#1 N1279 P727 LD 4 -1 FP BE Pri
!#1 N1280 P726 LD 10 -1 FP BE Pri
!#1 N1281 P727 LD 4 -1 FP BE Pri
!#1 N1282 P728 DWST 3 0x4000000b FP BE Pri
!#1 N1284 P730 LD 9 -1 FP BE Pri
!#1 N1286 P730 LD 9 -1 FP BE Pri
!#1 N1287 P731 QWLD 0 -1 FP BE Pri
!#1 N1288 P731 QWLD 1 -1 FP BE Pri
!#1 N1289 P732 BSTC 10 0x4000000c FP BE Pri
!#1 N1290 P732 BSTC 11 0x4000000d FP BE Pri
!#1 N1292 P734 LD 10 -1 FP BE Pri
!#1 N1294 P734 LD 10 -1 FP BE Pri
!#1 N1296 P736 SWAP 4 0xffffffff 0x800007 Int BE Pri
!#1 N1297 P737 LD 7 -1 Int BE Pri
!#1 N1298 P738 BSTC 14 0x4000000e FP BE Pri
!#1 N1299 P738 BSTC 15 0x4000000f FP BE Pri
!#1 N1300 P738 BSTC 14 0x40000010 FP BE Pri
!#1 N1301 P738 BSTC 15 0x40000011 FP BE Pri
!#1 N1302 P739 DWLD 13 -1,0x0 Int BE Pri
!#1 N1303 P739 CASX 13 -1,0x0 N1302 0x800008 Int BE Pri
!#1 N1305 P739 DWLD 13 -1,0x0 Int BE Pri
!#1 N1306 P739 CASX 13 -1,0x0 N1305 0x800009 Int BE Pri
!#1 N1308 P741 LD 2 -1 FP BE Pri
!#1 N1310 P743 DWLD 1 -1 Int BE Pri
!#1 N1311 P744 LD 8 -1 Int BE Pri
!#1 N1312 P745 QWST 8 0x40000012 FP BE Pri
!#1 N1313 P745 QWST 9 0x40000013 FP BE Pri
!#1 N1314 P745 QWST 8 0x40000014 FP BE Pri
!#1 N1315 P745 QWST 9 0x40000015 FP BE Pri
!#1 N1317 P747 DWLD 12 -1 Int BE Pri
!#1 N1318 P748 LD 6 -1 Int BE Pri
!#1 N1320 P747 DWLD 12 -1 Int BE Pri
!#1 N1321 P748 LD 6 -1 Int BE Pri
!#1 N1323 P750 LD 2 -1 FP BE Pri
!#1 N1325 P750 LD 2 -1 FP BE Pri
!#1 N1326 P751 BST 12 0x40000016 FP BE Pri
!#1 N1327 P751 BST 13 0x40000017 FP BE Pri
!#1 N1329 P753 LD 6 -1 Int BE Pri
!#1 N1330 P754 LD 15 -1 Int BE Pri
!#1 N1331 P755 QWLD 14 -1 NF FP BE Pri
!#1 N1332 P755 QWLD 15 -1 NF FP BE Pri
!#1 N1333 P755 QWLD 14 -1 NF FP BE Pri
!#1 N1334 P755 QWLD 15 -1 NF FP BE Pri
!#1 N1335 P756 BSTC 2 0x40000018 FP BE Pri
!#1 N1336 P756 BSTC 3 0x40000019 FP BE Pri
!#1 N1338 P758 BSTC 6 0x4000001a FP BE Pri
!#1 N1339 P758 BSTC 7 0x4000001b FP BE Pri
!#1 N1340 P759 DWST 2 0x80000a Int BE Pri
!#1 N1341 P760 LD 0 -1 FP BE Pri
!#1 N1342 P759 DWST 2 0x80000b Int BE Pri
!#1 N1343 P760 LD 0 -1 FP BE Pri
!#1 N1344 P761 LD 6 -1 Int BE Pri
!#1 N1345 P762 LD 7 -1 Int LE Pri
!#1 N1346 P763 LD 15 -1 Int BE Pri
!#1 N1347 P764 LD 10 -1 FP BE Pri
!#1 N1348 P765 LD 15 -1 NF Int BE Pri
!#1 N1349 P763 LD 15 -1 Int BE Pri
!#1 N1350 P764 LD 10 -1 FP BE Pri
!#1 N1351 P765 LD 15 -1 NF Int BE Pri
!#1 N1352 P766 QWST 0 0x4000001c FP BE Pri
!#1 N1353 P766 QWST 1 0x4000001d FP BE Pri
!#1 N1354 P767 DWST 2 0x4000001e FP BE Pri
!#1 N1355 P766 QWST 0 0x4000001f FP BE Pri
!#1 N1356 P766 QWST 1 0x40000020 FP BE Pri
!#1 N1357 P767 DWST 2 0x40000021 FP BE Pri
!#1 N1358 P768 LD 6 -1 Int BE Pri
!#1 N1359 P769 BLD 4 -1 FP BE Pri
!#1 N1360 P769 BLD 5 -1 FP BE Pri
!#1 N1361 P770 LD 4 -1 Int BE Pri
!#1 N1362 P768 LD 6 -1 Int BE Pri
!#1 N1363 P769 BLD 4 -1 FP BE Pri
!#1 N1364 P769 BLD 5 -1 FP BE Pri
!#1 N1365 P770 LD 4 -1 Int BE Pri
!#1 N1366 P771 LD 12 -1 Int BE Pri
!#1 N1367 P772 LD 10 -1 Int BE Pri
!#1 N1368 P771 LD 12 -1 Int BE Pri
!#1 N1369 P772 LD 10 -1 Int BE Pri
!#1 N1370 P773 QWLD 10 -1 FP BE Pri
!#1 N1371 P773 QWLD 11 -1 FP BE Pri
!#1 N1375 P776 DWST 12 0x40000022 FP BE Pri
!#1 N1376 P777 LD 6 -1 Int BE Pri
!#1 N1377 P778 LD 4 -1 Int LE Pri
!#1 N1378 P779 LD 6 -1 Int BE Pri
!#1 N1379 P780 LD 0 -1 Int BE Pri
!#1 N1380 P781 LD 14 -1 FP BE Pri
!#1 N1382 P783 BLD 4 -1 FP BE Pri
!#1 N1383 P783 BLD 5 -1 FP BE Pri
!#1 N1384 P784 LD 3 -1 FP BE Pri
!#1 N1385 P783 BLD 4 -1 FP BE Pri
!#1 N1386 P783 BLD 5 -1 FP BE Pri
!#1 N1387 P784 LD 3 -1 FP BE Pri
!#1 N1388 P785 BLD 2 -1 FP BE Pri
!#1 N1389 P785 BLD 3 -1 FP BE Pri
!#1 N1390 P786 LD 6 -1 Int BE Pri
!#1 N1391 P787 LD 3 -1 NF Int BE Pri
!#1 N1392 P788 LD 12 -1 FP BE Pri
!#1 N1393 P789 LD 4 -1 NF FP BE Pri
!#1 N1394 P788 LD 12 -1 FP BE Pri
!#1 N1395 P789 LD 4 -1 NF FP BE Pri
!#1 N1399 P792 LD 9 -1 FP BE Pri
!#1 N1400 P793 LD 7 -1 FP BE Pri
!#1 N1401 P794 LD 2 -1 FP BE Pri
!#1 N1402 P793 LD 7 -1 FP BE Pri
!#1 N1403 P794 LD 2 -1 FP BE Pri
!#1 N1404 P795 LD 5 -1 NF Int BE Pri
!#1 N1405 P796 LD 10 -1 Int BE Pri
!#1 N1406 P795 LD 5 -1 NF Int BE Pri
!#1 N1407 P796 LD 10 -1 Int BE Pri
!#1 N1408 P797 LD 13 -1 FP BE Pri
!#1 N1409 P797 LD 13 -1 FP BE Pri
!#1 N1410 P798 DWST 13 0x40000023 FP BE Pri
!#1 N1411 P799 QWLD 2 -1 FP BE Pri
!#1 N1412 P799 QWLD 3 -1 FP BE Pri
!#1 N1413 P800 LD 0 -1 Int BE Pri
!#1 N1414 P801 DWST 0 0x40000024 FP BE Pri
!#1 N1415 P802 LD 2 -1 NF Fault Int BE Pri
!#1 N1416 P800 LD 0 -1 Int BE Pri
!#1 N1417 P801 DWST 0 0x40000025 FP BE Pri
!#1 N1418 P802 LD 2 -1 NF Fault Int BE Pri
!#1 N1419 P803 MEMBAR
!#1 N1420 P803 MEMBAR
!#1 N1421 P804 DWLD 4 -1,0x0 Int BE Pri
!#1 N1422 P804 CASX 4 -1,0x0 N1421 0x80000c Int BE Pri
!#1 N1423 P805 MEMBAR
!#1 N1425 P805 MEMBAR
!#1 N1427 P807 LD 1 -1 NF Int BE Pri
!#1 N1429 P809 LD 8 -1 NF Fault Int BE Pri
!#1 N1430 P810 ST 11 0x40000026 FP BE Pri
!#1 N1431 P811 LD 2 -1 FP BE Pri
!#1 N1432 P812 LD 1 -1 Int BE Pri
!#1 N1433 P812 CAS 1 -1 N1432 0x80000d Int BE Pri
!#1 N1434 P813 LD 0 -1 FP BE Pri
!#1 N1435 P812 LD 1 -1 Int BE Pri
!#1 N1436 P812 CAS 1 -1 N1435 0x80000e Int BE Pri
!#1 N1437 P813 LD 0 -1 FP BE Pri
!#1 N1438 P814 LD 3 -1 Int BE Pri
!#1 N1439 P814 CAS 3 -1 N1438 0x80000f Int BE Pri
!#1 N1440 P815 LD 2 -1 NF FP BE Pri
!#1 N1441 P814 LD 3 -1 Int BE Pri
!#1 N1442 P814 CAS 3 -1 N1441 0x800010 Int BE Pri
!#1 N1443 P815 LD 2 -1 NF FP BE Pri
!#1 N1444 P816 BLD 0 -1 FP BE Pri
!#1 N1445 P816 BLD 1 -1 FP BE Pri
!#1 N1446 P817 DWLD 4 -1,0x0 Int BE Pri
!#1 N1447 P817 CASX 4 -1,0x0 N1446 0x800011 Int BE Pri
!#1 N1448 P816 BLD 0 -1 FP BE Pri
!#1 N1449 P816 BLD 1 -1 FP BE Pri
!#1 N1450 P817 DWLD 4 -1,0x0 Int BE Pri
!#1 N1451 P817 CASX 4 -1,0x0 N1450 0x800012 Int BE Pri
!#1 N1452 P818 BSTC 12 0x40000027 FP BE Pri
!#1 N1453 P818 BSTC 13 0x40000028 FP BE Pri
!#1 N1454 P818 BSTC 12 0x40000029 FP BE Pri
!#1 N1455 P818 BSTC 13 0x4000002a FP BE Pri
!#1 N1456 P819 LD 5 -1 FP BE Pri
!#1 N1457 P819 LD 5 -1 FP BE Pri
!#1 N1458 P820 DWLD 12 -1,0x0 Int BE Pri
!#1 N1459 P820 CASX 12 -1,0x0 N1458 0x800013 Int BE Pri
!#1 N1462 P822 DWST 15 0x800014 Int BE Pri
!#1 N1463 P823 BLD 6 -1 FP BE Pri
!#1 N1464 P823 BLD 7 -1 FP BE Pri
!#1 N1465 P823 BLD 6 -1 FP BE Pri
!#1 N1466 P823 BLD 7 -1 FP BE Pri
!#1 N1469 P826 DWLD 9 -1 Int BE Pri
!#1 N1470 P827 LD 1 -1 Int BE Pri
!#1 N1471 P828 BSTC 0 0x4000002b FP BE Pri
!#1 N1472 P828 BSTC 1 0x4000002c FP BE Pri
!#1 N1473 P829 BST 6 0x4000002d FP BE Pri
!#1 N1474 P829 BST 7 0x4000002e FP BE Pri
!#1 N1475 P828 BSTC 0 0x4000002f FP BE Pri
!#1 N1476 P828 BSTC 1 0x40000030 FP BE Pri
!#1 N1477 P829 BST 6 0x40000031 FP BE Pri
!#1 N1478 P829 BST 7 0x40000032 FP BE Pri
!#1 N1479 P830 LD 0 -1 FP BE Pri
!#1 N1480 P831 LD 8 -1 Int BE Pri
!#1 N1481 P832 LD 0 -1 NF Int BE Pri
!#1 N1482 P830 LD 0 -1 FP BE Pri
!#1 N1483 P831 LD 8 -1 Int BE Pri
!#1 N1484 P832 LD 0 -1 NF Int BE Pri
!#1 N1485 P833 LD 2 -1 FP BE Pri
!#1 N1486 P834 ST 15 0x40000033 FP BE Pri
!#1 N1487 P835 LD 4 -1 Int BE Pri
!#1 N1488 P836 LD 14 -1 Int BE Pri
!#1 N1489 P837 DWLD 7 -1,0x0 Int BE Pri
!#1 N1490 P837 CASX 7 -1,0x0 N1489 0x800015 Int BE Pri
!#1 N1491 P837 DWLD 7 -1,0x0 Int BE Pri
!#1 N1492 P837 CASX 7 -1,0x0 N1491 0x800016 Int BE Pri
!#1 N1493 P838 DWLD 4 -1 Int BE Pri
!#1 N1494 P839 ST 12 0x800017 Int BE Pri
!#1 N1495 P840 LD 10 -1 Int BE Pri
!#1 N1496 P838 DWLD 4 -1 Int BE Pri
!#1 N1497 P839 ST 12 0x800018 Int BE Pri
!#1 N1498 P840 LD 10 -1 Int BE Pri
!#1 N1499 P841 LD 10 -1 FP BE Pri
!#1 N1501 P841 LD 10 -1 FP BE Pri
!#1 N1508 P846 BSTC 10 0x40000034 FP BE Pri
!#1 N1509 P846 BSTC 11 0x40000035 FP BE Pri
!#1 N1511 P846 BSTC 10 0x40000036 FP BE Pri
!#1 N1512 P846 BSTC 11 0x40000037 FP BE Pri
!#1 N1513 P847 LD 6 -1 FP BE Pri
!#1 N1514 P848 LD 5 -1 Int BE Pri
!#1 N1515 P849 LD 15 -1 Int BE Pri
!#1 N1518 P851 LD 5 -1 Int BE Pri
!#1 N1519 P852 LD 9 -1 Int BE Pri
!#1 N1520 P851 LD 5 -1 Int BE Pri
!#1 N1521 P852 LD 9 -1 Int BE Pri
!#1 N1522 P853 DWLD 15 -1,0x0 Int BE Pri
!#1 N1523 P853 CASX 15 -1,0x0 N1522 0x800019 Int BE Pri
!#1 N1524 P854 LD 13 -1 FP BE Pri
!#1 N1525 P855 SWAP 6 0xffffffff 0x80001a Int BE Pri
!#1 N1526 P856 LD 12 -1 Int BE Pri
!#1 N1527 P855 SWAP 6 0xffffffff 0x80001b Int BE Pri
!#1 N1528 P856 LD 12 -1 Int BE Pri
!#1 N1529 P857 LD 9 -1 FP BE Pri
!#1 N1530 P857 LD 9 -1 FP BE Pri
!#1 N1531 P858 QWLD 4 -1 FP BE Pri
!#1 N1532 P858 QWLD 5 -1 FP BE Pri
!#1 N1533 P859 LD 10 -1 FP BE Pri
!#1 N1535 P861 LD 12 -1 FP BE Pri
!#1 N1537 P861 LD 12 -1 FP BE Pri
!#1 N1538 P862 LD 14 -1 Int BE Pri
!#1 N1539 P863 LD 5 -1 Int BE Pri
!#1 N1540 P864 DWST 13 0x80001c Int BE Pri
!#1 N1543 P866 SWAP 8 0xffffffff 0x80001d Int BE Pri
!#1 N1544 P867 DWLD 6 -1,0x0 Int BE Pri
!#1 N1545 P867 CASX 6 -1,0x0 N1544 0x80001e Int BE Pri
!#1 N1546 P868 LD 10 -1 Int BE Pri
!#1 N1547 P869 QWST 12 0x40000038 FP BE Pri
!#1 N1548 P869 QWST 13 0x40000039 FP BE Pri
!#1 N1549 P870 BSTC 2 0x4000003a FP BE Pri
!#1 N1550 P870 BSTC 3 0x4000003b FP BE Pri
!#1 N1551 P869 QWST 12 0x4000003c FP BE Pri
!#1 N1552 P869 QWST 13 0x4000003d FP BE Pri
!#1 N1553 P870 BSTC 2 0x4000003e FP BE Pri
!#1 N1554 P870 BSTC 3 0x4000003f FP BE Pri
!#1 N1555 P871 LD 10 -1 FP BE Pri
!#1 N1557 P873 QWST 0 0x40000040 FP BE Pri
!#1 N1558 P873 QWST 1 0x40000041 FP BE Pri
!#1 N1559 P873 QWST 0 0x40000042 FP BE Pri
!#1 N1560 P873 QWST 1 0x40000043 FP BE Pri
!#1 N1561 P874 LD 1 -1 Int BE Pri
!#1 N1562 P875 LD 10 -1 Int BE Pri
!#1 N1563 P874 LD 1 -1 Int BE Pri
!#1 N1564 P875 LD 10 -1 Int BE Pri
!#1 N1565 P876 LD 12 -1 Int LE Pri
!#1 N1566 P877 LD 1 -1 Int BE Pri
!#1 N1568 P879 SWAP 2 0xffffffff 0x80001f Int BE Pri
!#1 N1569 P880 LD 7 -1 Int BE Pri
!#1 N1570 P881 LD 13 -1 Int BE Pri
!#1 N1571 P882 LD 14 -1 Int BE Pri
!#1 N1572 P881 LD 13 -1 Int BE Pri
!#1 N1573 P882 LD 14 -1 Int BE Pri
!#1 N1574 P883 LD 9 -1 FP BE Pri
!#1 N1575 P884 LD 3 -1 FP BE Pri
!#1 N1576 P885 LD 13 -1 Int BE Pri
!#1 N1578 P887 LD 13 -1 Int BE Pri
!#1 N1579 P885 LD 13 -1 Int BE Pri
!#1 N1581 P887 LD 13 -1 Int BE Pri
!#1 N1582 P888 LD 11 -1 Int BE Pri
!#1 N1584 P890 LD 13 -1 Int BE Pri
!#1 N1588 P893 DWLD 8 -1 Int BE Pri
!#1 N1589 P894 LD 12 -1 Int BE Pri
!#1 N1591 P893 DWLD 8 -1 Int BE Pri
!#1 N1592 P894 LD 12 -1 Int BE Pri
!#1 N1593 P895 BSTC 0 0x40000044 FP BE Pri
!#1 N1594 P895 BSTC 1 0x40000045 FP BE Pri
!#1 N1595 P896 BSTC 10 0x40000046 FP BE Pri
!#1 N1596 P896 BSTC 11 0x40000047 FP BE Pri
!#1 N1597 P897 LD 12 -1 NF Int BE Pri
!#1 N1598 P898 LD 12 -1 Int BE Pri
!#1 N1600 P900 ST 8 0x800020 Int BE Pri
!#1 N1602 P900 ST 8 0x800021 Int BE Pri
!#1 N1604 P902 BST 2 0x40000048 FP BE Pri
!#1 N1605 P902 BST 3 0x40000049 FP BE Pri
!#1 N1607 P902 BST 2 0x4000004a FP BE Pri
!#1 N1608 P902 BST 3 0x4000004b FP BE Pri
!#1 N1609 P903 SWAP 7 0xffffffff 0x800022 Int BE Pri
!#1 N1611 P905 LD 8 -1 Int BE Pri
!#1 N1612 P903 SWAP 7 0xffffffff 0x800023 Int BE Pri
!#1 N1614 P905 LD 8 -1 Int BE Pri
!#1 N1615 P906 BSTC 4 0x4000004c FP BE Pri
!#1 N1616 P906 BSTC 5 0x4000004d FP BE Pri
!#1 N1617 P907 LD 3 -1 FP BE Pri
!#1 N1618 P907 LD 3 -1 FP BE Pri
!#1 N1619 P908 LD 1 -1 FP BE Pri
!#1 N1620 P908 LD 1 -1 FP BE Pri
!#1 N1621 P909 DWST 14 0x800024 Int BE Pri
!#1 N1624 P911 LD 13 -1 FP BE Pri
!#1 N1625 P912 LD 8 -1 FP BE Pri
!#1 N1626 P911 LD 13 -1 FP BE Pri
!#1 N1627 P912 LD 8 -1 FP BE Pri
!#1 N1628 P913 LD 9 -1 Int BE Pri
!#1 N1629 P914 LD 13 -1 Int BE Pri
!#1 N1630 P915 DWLD 4 -1 FP BE Pri
!#1 N1631 P916 LD 7 -1 Int BE Pri
!#1 N1632 P916 CAS 7 -1 N1631 0x800025 Int BE Pri
!#1 N1633 P915 DWLD 4 -1 FP BE Pri
!#1 N1634 P916 LD 7 -1 Int BE Pri
!#1 N1635 P916 CAS 7 -1 N1634 0x800026 Int BE Pri
!#1 N1636 P917 LD 10 -1 Int BE Pri
!#1 N1637 P918 LD 6 -1 Int BE Pri
!#1 N1638 P917 LD 10 -1 Int BE Pri
!#1 N1639 P918 LD 6 -1 Int BE Pri
!#1 N1640 P919 LD 5 -1 FP BE Pri
!#1 N1641 P920 LD 10 -1 Int BE Pri
!#1 N1642 P921 LD 13 -1 Int BE Pri
!#1 N1643 P922 LD 0 -1 Int BE Pri
!#1 N1644 P923 LD 2 -1 Int BE Pri
!#1 N1645 P924 LD 15 -1 Int LE Pri
!#1 N1646 P925 LD 4 -1 Int BE Pri
!#1 N1647 P926 LD 7 -1 FP BE Pri
!#1 N1648 P927 DWST 4 0x800027 Int BE Pri
!#1 N1649 P926 LD 7 -1 FP BE Pri
!#1 N1650 P927 DWST 4 0x800028 Int BE Pri
!#1 N1651 P928 BLD 4 -1 FP BE Pri
!#1 N1652 P928 BLD 5 -1 FP BE Pri
!#1 N1654 P930 SWAP 4 0xffffffff 0x800029 Int BE Pri
!#1 N1655 P931 LD 6 -1 Int BE Pri
!#1 N1656 P932 LD 0 -1 Int BE Pri
!#1 N1658 P934 LD 13 -1 Int BE Pri
!#1 N1659 P932 LD 0 -1 Int BE Pri
!#1 N1661 P934 LD 13 -1 Int BE Pri
!#1 N1662 P935 BST 2 0x4000004e FP BE Pri
!#1 N1663 P935 BST 3 0x4000004f FP BE Pri
!#1 N1664 P936 DWLD 8 -1 FP BE Pri
!#1 N1665 P937 BLD 10 -1 FP BE Pri
!#1 N1666 P937 BLD 11 -1 FP BE Pri
!#1 N1667 P938 LD 13 -1 FP BE Pri
!#1 N1668 P939 LD 8 -1 FP BE Pri
!#1 N1669 P940 QWST 10 0x40000050 FP BE Pri
!#1 N1670 P940 QWST 11 0x40000051 FP BE Pri
!#1 N1671 P941 LD 9 -1 FP BE Pri
!#1 N1672 P940 QWST 10 0x40000052 FP BE Pri
!#1 N1673 P940 QWST 11 0x40000053 FP BE Pri
!#1 N1674 P941 LD 9 -1 FP BE Pri
!#1 N1675 P942 LD 14 -1 FP BE Pri
!#1 N1679 P945 LD 1 -1 Int BE Pri
!#1 N1680 P946 LD 1 -1 NF FP BE Pri
!#1 N1681 P947 LD 14 -1 Int BE Pri
!#1 N1682 P948 LD 6 -1 Int BE Pri
!#1 N1683 P948 CAS 6 -1 N1682 0x80002a Int BE Pri
!#1 N1684 P948 LD 6 -1 Int BE Pri
!#1 N1685 P948 CAS 6 -1 N1684 0x80002b Int BE Pri
!#1 N1686 P949 DWST 6 0x80002c Int BE Pri
!#1 N1687 P949 DWST 6 0x80002d Int BE Pri
!#1 N1689 P951 LD 2 -1 Int BE Pri
!#1 N1690 P952 LD 3 -1 Int BE Pri
!#1 N1692 P951 LD 2 -1 Int BE Pri
!#1 N1693 P952 LD 3 -1 Int BE Pri
!#1 N1695 P954 LD 5 -1 FP BE Pri
!#1 N1696 P955 LD 0 -1 Int BE Pri
!#1 N1697 P956 LD 12 -1 Int BE Pri
!#1 N1698 P955 LD 0 -1 Int BE Pri
!#1 N1699 P956 LD 12 -1 Int BE Pri
!#1 N1700 P957 LD 11 -1 Int BE Pri
!#1 N1701 P958 LD 1 -1 Int BE Pri
!#1 N1702 P959 DWLD 13 -1,0x0 Int BE Pri
!#1 N1703 P959 CASX 13 -1,0x0 N1702 0x80002e Int BE Pri
!#1 N1705 P961 LD 5 -1 Int BE Pri
!#1 N1706 P962 LD 9 -1 FP BE Pri
!#1 N1707 P963 LD 7 -1 Int LE Pri
!#1 N1708 P964 BST 2 0x40000054 FP BE Pri
!#1 N1709 P964 BST 3 0x40000055 FP BE Pri
!#1 N1714 P967 DWST 2 0x40000056 FP BE Pri
!#1 N1716 P967 DWST 2 0x40000057 FP BE Pri
!#1 N1718 P969 LD 7 -1 FP BE Pri
!#1 N1719 P970 BST 2 0x40000058 FP BE Pri
!#1 N1720 P970 BST 3 0x40000059 FP BE Pri
!#1 N1721 P969 LD 7 -1 FP BE Pri
!#1 N1722 P970 BST 2 0x4000005a FP BE Pri
!#1 N1723 P970 BST 3 0x4000005b FP BE Pri
!#1 N1724 P971 DWLD 1 -1,0x0 Int BE Pri
!#1 N1725 P971 CASX 1 -1,0x0 N1724 0x80002f Int BE Pri
!#1 N1726 P972 LD 8 -1 Int BE Pri
!#1 N1727 P972 CAS 8 -1 N1726 0x800030 Int BE Pri
!#1 N1728 P971 DWLD 1 -1,0x0 Int BE Pri
!#1 N1729 P971 CASX 1 -1,0x0 N1728 0x800031 Int BE Pri
!#1 N1730 P972 LD 8 -1 Int BE Pri
!#1 N1731 P972 CAS 8 -1 N1730 0x800032 Int BE Pri
!#1 N1732 P973 LD 12 -1 Int BE Pri
!#1 N1733 P974 LD 4 -1 Int BE Pri
!#1 N1734 P975 SWAP 5 0xffffffff 0x800033 Int BE Pri
!#1 N1735 P976 LD 10 -1 Int BE Pri
!#1 N1736 P975 SWAP 5 0xffffffff 0x800034 Int BE Pri
!#1 N1737 P976 LD 10 -1 Int BE Pri
!#1 N1738 P977 BSTC 12 0x4000005c FP BE Pri
!#1 N1739 P977 BSTC 13 0x4000005d FP BE Pri
!#1 N1744 P981 LD 6 -1 Int BE Pri
!#1 N1745 P982 BLD 10 -1 FP BE Pri
!#1 N1746 P982 BLD 11 -1 FP BE Pri
!#1 N1747 P983 LD 10 -1 Int BE Pri
!#1 N1749 P985 LD 15 -1 FP BE Pri
!#1 N1750 P986 LD 1 -1 FP BE Pri
!#1 N1751 P987 DWLD 14 -1,0x0 Int BE Pri
!#1 N1752 P987 CASX 14 -1,0x0 N1751 0x800035 Int BE Pri
!#1 N1753 P988 BST 4 0x4000005e FP BE Pri
!#1 N1754 P988 BST 5 0x4000005f FP BE Pri
!#1 N1755 P989 BST 12 0x40000060 FP BE Pri
!#1 N1756 P989 BST 13 0x40000061 FP BE Pri
!#1 N1758 P991 DWST 10 0x40000062 FP BE Pri
!#1 N1762 P994 LD 10 -1 FP BE Pri
!#1 N1763 P994 LD 10 -1 FP BE Pri
!#1 N1766 P997 DWST 6 0x40000063 FP BE Pri
!#1 N1767 P998 LD 7 -1 Int BE Pri
!#1 N1768 P999 LD 5 -1 NF Int BE Pri
!#1 N1770 P1001 BSTC 8 0x40000064 FP BE Pri
!#1 N1771 P1001 BSTC 9 0x40000065 FP BE Pri
!#1 N1773 P1001 BSTC 8 0x40000066 FP BE Pri
!#1 N1774 P1001 BSTC 9 0x40000067 FP BE Pri
!#1 N1775 P1002 LD 10 -1 FP BE Pri
!#1 N1776 P1002 LD 10 -1 FP BE Pri
!#1 N1777 P1003 LD 4 -1 Int BE Pri
!#1 N1778 P1004 LD 15 -1 Int LE Pri
!#1 N1779 P1003 LD 4 -1 Int BE Pri
!#1 N1780 P1004 LD 15 -1 Int LE Pri
!#1 N1781 P1005 BST 4 0x40000068 FP BE Pri
!#1 N1782 P1005 BST 5 0x40000069 FP BE Pri
!#1 N1783 P1005 BST 4 0x4000006a FP BE Pri
!#1 N1784 P1005 BST 5 0x4000006b FP BE Pri
!#1 N1787 P1007 QWST 6 0x4000006c FP BE Pri
!#1 N1788 P1007 QWST 7 0x4000006d FP BE Pri
!#1 N1789 P1008 LD 15 -1 FP BE Pri
!#1 N1790 P1008 LD 15 -1 FP BE Pri
!#1 N1791 P1009 DWST 9 0x4000006e FP BE Pri
!#1 N1792 P1010 LD 6 -1 FP BE Pri
!#1 N1793 P1011 LD 9 -1 Int BE Pri
!#1 N1794 P1012 LD 6 -1 Int BE Pri
!#1 N1795 P1013 BLD 14 -1 FP BE Pri
!#1 N1796 P1013 BLD 15 -1 FP BE Pri
!#1 N1798 P1015 LD 10 -1 FP BE Pri
!#1 N1799 P1016 LD 3 -1 FP BE Pri
!#1 N1800 P1017 LD 10 -1 Int LE Pri
!#1 N1801 P1018 LD 15 -1 Int BE Pri
!#1 N1802 P1019 BLD 12 -1 FP BE Pri
!#1 N1803 P1019 BLD 13 -1 FP BE Pri
!#1 N1804 P1020 LD 7 -1 Int BE Pri
!#1 N1805 P1021 LD 10 -1 Int BE Pri
!#1 N1806 P1022 SWAP 3 0xffffffff 0x800036 Int BE Pri
!#1 N1807 P1023 LD 8 -1 NF Fault Int BE Pri
!#1 N1808 P1024 DWST 5 0x800037 Int BE Pri
!#1 N1809 P1025 LD 0 -1 FP BE Pri
!#1 N1810 P1026 LD 2 -1 Int BE Pri
!#1 N1811 P1026 CAS 2 -1 N1810 0x800038 Int BE Pri
!#1 N1812 P1027 LD 15 -1 Int BE Pri
!#1 N1813 P1028 LD 8 -1 Int BE Pri
!#1 N1815 P1030 LD 1 -1 FP BE Pri
!#1 N1817 P1030 LD 1 -1 FP BE Pri
!#1 N1819 P1032 LD 9 -1 Int BE Pri
!#1 N1820 P1033 LD 12 -1 NF FP BE Pri
!#1 N1821 P1034 LD 6 -1 Int BE Pri
!#1 N1822 P1032 LD 9 -1 Int BE Pri
!#1 N1823 P1033 LD 12 -1 NF FP BE Pri
!#1 N1824 P1034 LD 6 -1 Int BE Pri
!#1 N1825 P1035 LD 14 -1 Int BE Pri
!#1 N1826 P1036 LD 13 -1 FP BE Pri
!#1 N1827 P1037 LD 1 -1 Int BE Pri
!#1 N1828 P1035 LD 14 -1 Int BE Pri
!#1 N1829 P1036 LD 13 -1 FP BE Pri
!#1 N1830 P1037 LD 1 -1 Int BE Pri
!#1 N1831 P1038 LD 14 -1 Int BE Pri
!#1 N1832 P1038 CAS 14 -1 N1831 0x800039 Int BE Pri
!#1 N1834 P1040 LD 12 -1 Int BE Pri
!#1 N1835 P1041 SWAP 1 0xffffffff 0x80003a Int BE Pri
!#1 N1836 P1040 LD 12 -1 Int BE Pri
!#1 N1837 P1041 SWAP 1 0xffffffff 0x80003b Int BE Pri
!#1 N1838 P1042 BLD 0 -1 FP BE Pri
!#1 N1839 P1042 BLD 1 -1 FP BE Pri
!#1 N1840 P1043 LD 10 -1 FP BE Pri
!#1 N1842 P1045 LD 9 -1 NF FP BE Pri
!#1 N1843 P1046 LD 14 -1 Int BE Pri
!#1 N1844 P1047 LD 15 -1 Int BE Pri
!#1 N1845 P1048 LD 5 -1 Int BE Pri
!#1 N1846 P1049 LD 4 -1 NF Fault Int BE Pri
!#1 N1847 P1050 ST 4 0x4000006f FP BE Pri
!#1 N1848 P1051 LD 7 -1 Int BE Pri
!#1 N1849 P1052 LD 15 -1 Int BE Pri
!#1 N1850 P1050 ST 4 0x40000070 FP BE Pri
!#1 N1851 P1051 LD 7 -1 Int BE Pri
!#1 N1852 P1052 LD 15 -1 Int BE Pri
!#1 N1854 P1054 BSTC 14 0x40000071 FP BE Pri
!#1 N1855 P1054 BSTC 15 0x40000072 FP BE Pri
!#1 N1856 P1055 DWLD 3 -1 FP BE Pri
!#1 N1857 P1056 QWLD 8 -1 FP BE Pri
!#1 N1858 P1056 QWLD 9 -1 FP BE Pri
!#1 N1859 P1055 DWLD 3 -1 FP BE Pri
!#1 N1860 P1056 QWLD 8 -1 FP BE Pri
!#1 N1861 P1056 QWLD 9 -1 FP BE Pri
!#1 N1862 P1057 LD 2 -1 Int BE Pri
!#1 N1863 P1058 LD 10 -1 Int BE Pri
!#1 N1864 P1059 BST 4 0x40000073 FP BE Pri
!#1 N1865 P1059 BST 5 0x40000074 FP BE Pri
!#1 N1866 P1060 QWLD 2 -1 FP BE Pri
!#1 N1867 P1060 QWLD 3 -1 FP BE Pri
!#1 N1868 P1061 LD 6 -1 Int BE Pri
!#1 N1869 P1062 QWLD 10 -1 FP BE Pri
!#1 N1870 P1062 QWLD 11 -1 FP BE Pri
!#1 N1871 P1063 LD 9 -1 Int BE Pri
!#1 N1872 P1061 LD 6 -1 Int BE Pri
!#1 N1873 P1062 QWLD 10 -1 FP BE Pri
!#1 N1874 P1062 QWLD 11 -1 FP BE Pri
!#1 N1875 P1063 LD 9 -1 Int BE Pri
!#1 N1876 P1064 DWLD 10 -1,0x0 Int BE Pri
!#1 N1877 P1064 CASX 10 -1,0x0 N1876 0x80003c Int BE Pri
!#1 N1878 P1064 DWLD 10 -1,0x0 Int BE Pri
!#1 N1879 P1064 CASX 10 -1,0x0 N1878 0x80003d Int BE Pri
!#1 N1880 P1065 LD 7 -1 FP BE Pri
!#1 N1881 P1066 LD 8 -1 Int BE Pri
!#1 N1882 P1066 CAS 8 -1 N1881 0x80003e Int BE Pri
!#1 N1884 P1068 BST 8 0x40000075 FP BE Pri
!#1 N1885 P1068 BST 9 0x40000076 FP BE Pri
!#1 N1887 P1068 BST 8 0x40000077 FP BE Pri
!#1 N1888 P1068 BST 9 0x40000078 FP BE Pri
!#1 N1897 P1073 DWLD 6 -1 NF Fault FP BE Pri
!#1 N1898 P1074 DWLD 0 -1,0x0 Int BE Pri
!#1 N1899 P1074 CASX 0 -1,0x0 N1898 0x80003f Int BE Pri
!#1 N1901 P1074 DWLD 0 -1,0x0 Int BE Pri
!#1 N1902 P1074 CASX 0 -1,0x0 N1901 0x800040 Int BE Pri
!#1 N1904 P1076 BSTC 10 0x40000079 FP BE Pri
!#1 N1905 P1076 BSTC 11 0x4000007a FP BE Pri
!#1 N1906 P1077 MEMBAR
!#1 N1907 P1078 LD 15 -1 Int BE Pri
!#1 N1908 P1079 LD 13 -1 Int BE Pri
!#1 N1909 P1078 LD 15 -1 Int BE Pri
!#1 N1910 P1079 LD 13 -1 Int BE Pri
!#1 N1911 P1080 DWLD 3 -1 Int BE Pri
!#1 N1912 P1081 LD 11 -1 Int BE Pri
!#1 N1913 P1080 DWLD 3 -1 Int BE Pri
!#1 N1914 P1081 LD 11 -1 Int BE Pri
!#1 N1915 P1082 LD 14 -1 FP BE Pri
!#1 N1916 P1083 LD 6 -1 Int BE Pri
!#1 N1917 P1083 CAS 6 -1 N1916 0x800041 Int BE Pri
!#1 N1918 P1084 LD 1 -1 Int BE Pri
!#1 N1919 P1085 LD 9 -1 Int BE Pri
!#1 N1920 P1084 LD 1 -1 Int BE Pri
!#1 N1921 P1085 LD 9 -1 Int BE Pri
!#1 N1924 P1087 LD 6 -1 Int BE Pri
!#1 N1925 P1088 LD 12 -1 Int BE Pri
!#1 N1926 P1089 LD 3 -1 Int BE Pri
!#1 N1927 P1090 LD 11 -1 Int BE Pri
!#1 N1928 P1091 QWLD 14 -1 FP BE Pri
!#1 N1929 P1091 QWLD 15 -1 FP BE Pri
!#1 N1930 P1091 QWLD 14 -1 FP BE Pri
!#1 N1931 P1091 QWLD 15 -1 FP BE Pri
!#1 N1933 P1093 LD 11 -1 FP BE Pri
!#1 N1934 P1093 LD 11 -1 FP BE Pri
!#1 N1935 P1094 LD 12 -1 Int LE Pri
!#1 N1936 P1094 CAS 12 -1 N1935 0x800042 Int LE Pri
!#1 N1937 P1095 QWLD 10 -1 FP BE Pri
!#1 N1938 P1095 QWLD 11 -1 FP BE Pri
!#1 N1939 P1096 QWLD 2 -1 FP BE Pri
!#1 N1940 P1096 QWLD 3 -1 FP BE Pri
!#1 N1941 P1097 BST 12 0x4000007b FP BE Pri
!#1 N1942 P1097 BST 13 0x4000007c FP BE Pri
!#1 N1943 P1096 QWLD 2 -1 FP BE Pri
!#1 N1944 P1096 QWLD 3 -1 FP BE Pri
!#1 N1945 P1097 BST 12 0x4000007d FP BE Pri
!#1 N1946 P1097 BST 13 0x4000007e FP BE Pri
!#1 N1947 P1098 LD 12 -1 Int BE Pri
!#1 N1948 P1098 CAS 12 -1 N1947 0x800043 Int BE Pri
!#1 N1949 P1099 BSTC 14 0x4000007f FP BE Pri
!#1 N1950 P1099 BSTC 15 0x40000080 FP BE Pri
!#1 N1951 P1100 LD 2 -1 FP BE Pri
!#1 N1955 P1103 SWAP 12 0xffffffff 0x800044 Int BE Pri
!#1 N1956 P1104 LD 11 -1 Int BE Pri
!#1 N1957 P1105 LD 9 -1 FP BE Pri
!#1 N1958 P1105 LD 9 -1 FP BE Pri
!#1 N1959 P1106 LD 2 -1 Int BE Pri
!#1 N1960 P1106 CAS 2 -1 N1959 0x800045 Int BE Pri
!#1 N1961 P1106 LD 2 -1 Int BE Pri
!#1 N1962 P1106 CAS 2 -1 N1961 0x800046 Int BE Pri
!#1 N1963 P1107 QWST 10 0x40000081 FP BE Pri
!#1 N1964 P1107 QWST 11 0x40000082 FP BE Pri
!#1 N1965 P1108 BSTC 12 0x40000083 FP BE Pri
!#1 N1966 P1108 BSTC 13 0x40000084 FP BE Pri
!#1 N1967 P1107 QWST 10 0x40000085 FP BE Pri
!#1 N1968 P1107 QWST 11 0x40000086 FP BE Pri
!#1 N1969 P1108 BSTC 12 0x40000087 FP BE Pri
!#1 N1970 P1108 BSTC 13 0x40000088 FP BE Pri
!#1 N1971 P1109 BLD 6 -1 FP BE Pri
!#1 N1972 P1109 BLD 7 -1 FP BE Pri
!#1 N1973 P1110 LD 12 -1 Int BE Pri
!#1 N1974 P1111 LD 15 -1 NF Int BE Pri
!#1 N1975 P1109 BLD 6 -1 FP BE Pri
!#1 N1976 P1109 BLD 7 -1 FP BE Pri
!#1 N1977 P1110 LD 12 -1 Int BE Pri
!#1 N1978 P1111 LD 15 -1 NF Int BE Pri
!#1 N1979 P1112 LD 11 -1 FP BE Pri
!#1 N1980 P1112 LD 11 -1 FP BE Pri
!#1 N1981 P1113 LD 7 -1 Int BE Pri
!#1 N1982 P1113 CAS 7 -1 N1981 0x800047 Int BE Pri
!#1 N1983 P1114 LD 15 -1 Int BE Pri
!#1 N1984 P1115 LD 13 -1 Int BE Pri
!#1 N1985 P1116 LD 12 -1 FP BE Pri
!#1 N1987 P1116 LD 12 -1 FP BE Pri
!#1 N1989 P1118 DWST 2 0x800048 Int BE Pri
!#1 N1991 P1120 LD 9 -1 FP BE Pri
!#1 N1992 P1121 LD 1 -1 FP BE Pri
!#1 N1993 P1122 LD 5 -1 Int BE Pri
!#1 N1994 P1123 LD 4 -1 Int BE Pri
!#1 N1995 P1124 BSTC 12 0x40000089 FP BE Pri
!#1 N1996 P1124 BSTC 13 0x4000008a FP BE Pri
!#1 N1997 P1125 BSTC 8 0x4000008b FP BE Pri
!#1 N1998 P1125 BSTC 9 0x4000008c FP BE Pri
!#1 N1999 P1126 DWLD 2 -1,0x0 Int BE Pri
!#1 N2000 P1126 CASX 2 -1,0x0 N1999 0x800049 Int BE Pri
!#1 N2001 P1127 BSTC 10 0x4000008d FP BE Pri
!#1 N2002 P1127 BSTC 11 0x4000008e FP BE Pri
!#1 N2003 P1126 DWLD 2 -1,0x0 Int BE Pri
!#1 N2004 P1126 CASX 2 -1,0x0 N2003 0x80004a Int BE Pri
!#1 N2005 P1127 BSTC 10 0x4000008f FP BE Pri
!#1 N2006 P1127 BSTC 11 0x40000090 FP BE Pri
!#1 N2007 P1128 LD 3 -1 Int BE Pri
!#1 N2008 P1129 LD 1 -1 Int BE Pri
!#1 N2010 P1131 LD 4 -1 Int BE Pri
!#1 N2011 P1132 LD 9 -1 Int BE Pri
!#1 N2013 P1131 LD 4 -1 Int BE Pri
!#1 N2014 P1132 LD 9 -1 Int BE Pri
!#1 N2015 P1133 LD 10 -1 Int BE Pri
!#1 N2017 P1135 LD 2 -1 NF Int BE Pri
!#1 N2023 P1139 SWAP 7 0xffffffff 0x80004b Int BE Pri
!#1 N2024 P1140 LD 12 -1 Int BE Pri
!#1 N2025 P1141 LD 5 -1 FP BE Pri
!#1 N2026 P1141 LD 5 -1 FP BE Pri
!#1 N2027 P1142 SWAP 9 0xffffffff 0x80004c Int BE Pri
!#1 N2028 P1143 LD 14 -1 Int BE Pri
!#1 N2029 P1142 SWAP 9 0xffffffff 0x80004d Int BE Pri
!#1 N2030 P1143 LD 14 -1 Int BE Pri
!#1 N2031 P1144 LD 3 -1 FP BE Pri
!#1 N2032 P1145 LD 0 -1 FP BE Pri
!#1 N2033 P1144 LD 3 -1 FP BE Pri
!#1 N2034 P1145 LD 0 -1 FP BE Pri
!#1 N2035 P1146 LD 11 -1 FP BE Pri
!#1 N2036 P1146 LD 11 -1 FP BE Pri
!#1 N2037 P1147 LD 1 -1 FP BE Pri
!#1 N2038 P1147 LD 1 -1 FP BE Pri
!#1 N2039 P1148 DWLD 5 -1 Int BE Pri
!#1 N2040 P1149 LD 0 -1 Int BE Pri
!#1 N2041 P1150 BSTC 14 0x40000091 FP BE Pri
!#1 N2042 P1150 BSTC 15 0x40000092 FP BE Pri
!#1 N2043 P1150 BSTC 14 0x40000093 FP BE Pri
!#1 N2044 P1150 BSTC 15 0x40000094 FP BE Pri
!#1 N2045 P1151 DWLD 0 -1,0x0 Int BE Pri
!#1 N2046 P1151 CASX 0 -1,0x0 N2045 0x80004e Int BE Pri
!#1 N2047 P1152 ST 11 0x80004f Int BE Pri
!#1 N2048 P1153 BSTC 6 0x40000095 FP BE Pri
!#1 N2049 P1153 BSTC 7 0x40000096 FP BE Pri
!#1 N2050 P1154 DWLD 12 -1,0x0 Int BE Pri
!#1 N2051 P1154 CASX 12 -1,0x0 N2050 0x800050 Int BE Pri
!#1 N2052 P1155 LD 9 -1 FP BE Pri
!#1 N2053 P1154 DWLD 12 -1,0x0 Int BE Pri
!#1 N2054 P1154 CASX 12 -1,0x0 N2053 0x800051 Int BE Pri
!#1 N2055 P1155 LD 9 -1 FP BE Pri
!#1 N2056 P1156 DWLD 3 -1 FP BE Pri
!#1 N2057 P1156 DWLD 3 -1 FP BE Pri
!#1 N2058 P1157 DWST 11 0x800052 Int BE Pri
!#1 N2059 P1158 LD 7 -1 Int BE Pri
!#1 N2060 P1159 LD 11 -1 Int BE Pri
!#1 N2061 P1160 BLD 2 -1 FP BE Pri
!#1 N2062 P1160 BLD 3 -1 FP BE Pri
!#1 N2064 P1162 LD 13 -1 Int BE Pri
!#1 N2065 P1163 LD 2 -1 Int BE Pri
!#1 N2067 P1162 LD 13 -1 Int BE Pri
!#1 N2068 P1163 LD 2 -1 Int BE Pri
!#1 N2069 P1164 BSTC 12 0x40000097 FP BE Pri
!#1 N2070 P1164 BSTC 13 0x40000098 FP BE Pri
!#1 N2074 P1167 BLD 8 -1 FP BE Pri
!#1 N2075 P1167 BLD 9 -1 FP BE Pri
!#1 N2076 P1168 LD 8 -1 FP BE Pri
!#1 N2077 P1167 BLD 8 -1 FP BE Pri
!#1 N2078 P1167 BLD 9 -1 FP BE Pri
!#1 N2079 P1168 LD 8 -1 FP BE Pri
!#1 N2080 P1169 LD 15 -1 FP BE Pri
!#1 N2081 P1170 LD 1 -1 FP BE Pri
!#1 N2082 P1171 DWST 2 0x40000099 FP BE Pri
!#1 N2083 P1171 DWST 2 0x4000009a FP BE Pri
!#1 N2084 P1172 LD 15 -1 Int BE Pri
!#1 N2085 P1173 LD 1 -1 Int BE Pri
!#1 N2086 P1172 LD 15 -1 Int BE Pri
!#1 N2087 P1173 LD 1 -1 Int BE Pri
!#1 N2089 P1175 LD 15 -1 Int BE Pri
!#1 N2090 P1175 CAS 15 -1 N2089 0x800053 Int BE Pri
!#1 N2091 P1176 ST 6 0x800054 Int BE Pri
!#1 N2092 P1175 LD 15 -1 Int BE Pri
!#1 N2093 P1175 CAS 15 -1 N2092 0x800055 Int BE Pri
!#1 N2094 P1176 ST 6 0x800056 Int BE Pri
!#1 N2095 P1177 BLD 4 -1 FP BE Pri
!#1 N2096 P1177 BLD 5 -1 FP BE Pri
!#1 N2097 P1177 BLD 4 -1 FP BE Pri
!#1 N2098 P1177 BLD 5 -1 FP BE Pri
!#1 N2099 P1178 QWLD 4 -1 FP BE Pri
!#1 N2100 P1178 QWLD 5 -1 FP BE Pri
!#1 N2101 P1179 BST 4 0x4000009b FP BE Pri
!#1 N2102 P1179 BST 5 0x4000009c FP BE Pri
!#1 N2103 P1180 SWAP 13 0xffffffff 0x800057 Int BE Pri
!#1 N2104 P1181 LD 11 -1 NF Int BE Pri
!#1 N2105 P1182 DWLD 11 -1 FP BE Pri
!#1 N2107 P1184 LD 6 -1 Int BE Pri
!#1 N2108 P1185 LD 3 -1 Int BE Pri
!#1 N2109 P1184 LD 6 -1 Int BE Pri
!#1 N2110 P1185 LD 3 -1 Int BE Pri
!#1 N2111 P1186 QWST 0 0x4000009d FP BE Pri
!#1 N2112 P1186 QWST 1 0x4000009e FP BE Pri
!#1 N2113 P1187 LD 2 -1 FP BE Pri
!#1 N2114 P1188 DWST 3 0x800058 Int BE Pri
!#1 N2115 P1189 LD 7 -1 Int BE Pri
!#1 N2116 P1190 LD 14 -1 Int BE Pri
!#1 N2117 P1188 DWST 3 0x800059 Int BE Pri
!#1 N2118 P1189 LD 7 -1 Int BE Pri
!#1 N2119 P1190 LD 14 -1 Int BE Pri
!#1 N2120 P1191 DWST 9 0x4000009f FP BE Pri
!#1 N2122 P1193 LD 5 -1 Int BE Pri
!#1 N2124 P1195 LD 12 -1 Int BE Pri
!#1 N2125 P1193 LD 5 -1 Int BE Pri
!#1 N2127 P1195 LD 12 -1 Int BE Pri
!#1 N2128 P1196 LD 7 -1 NF FP BE Pri
!#1 N2129 P1196 LD 7 -1 NF FP BE Pri
!#1 N2131 P1198 LD 13 -1 FP BE Pri
!#1 N2134 P1200 LD 6 -1 Int BE Pri
!#1 N2135 P1201 BSTC 4 0x400000a0 FP BE Pri
!#1 N2136 P1201 BSTC 5 0x400000a1 FP BE Pri
!#1 N2137 P1202 LD 4 -1 Int BE Pri
!#1 N2138 P1200 LD 6 -1 Int BE Pri
!#1 N2139 P1201 BSTC 4 0x400000a2 FP BE Pri
!#1 N2140 P1201 BSTC 5 0x400000a3 FP BE Pri
!#1 N2141 P1202 LD 4 -1 Int BE Pri
!#1 N2142 P1203 BSTC 8 0x400000a4 FP BE Pri
!#1 N2143 P1203 BSTC 9 0x400000a5 FP BE Pri
!#1 N2144 P1204 DWLD 14 -1 Int BE Pri
!#1 N2145 P1205 LD 8 -1 Int BE Pri
!#1 N2146 P1203 BSTC 8 0x400000a6 FP BE Pri
!#1 N2147 P1203 BSTC 9 0x400000a7 FP BE Pri
!#1 N2148 P1204 DWLD 14 -1 Int BE Pri
!#1 N2149 P1205 LD 8 -1 Int BE Pri
!#1 N2150 P1206 LD 11 -1 NF Fault FP BE Pri
!#1 N2151 P1206 LD 11 -1 NF Fault FP BE Pri
!#1 N2155 P1209 LD 2 -1 Int BE Pri
!#1 N2156 P1210 LD 3 -1 Int BE Pri
!#1 N2157 P1211 LD 6 -1 FP BE Pri
!#1 N2158 P1212 LD 11 -1 FP BE Pri
!#1 N2159 P1213 DWST 13 0x80005a Int BE Pri
!#1 N2160 P1214 DWLD 13 -1,0x0 Int BE Pri
!#1 N2161 P1214 CASX 13 -1,0x0 N2160 0x80005b Int BE Pri
!#1 N2162 P1214 DWLD 13 -1,0x0 Int BE Pri
!#1 N2163 P1214 CASX 13 -1,0x0 N2162 0x80005c Int BE Pri
!#1 N2169 P1218 QWLD 2 -1 FP BE Pri
!#1 N2170 P1218 QWLD 3 -1 FP BE Pri
!#1 N2176 P1222 QWLD 2 -1 FP BE Pri
!#1 N2177 P1222 QWLD 3 -1 FP BE Pri
!#1 N2178 P1222 QWLD 2 -1 FP BE Pri
!#1 N2179 P1222 QWLD 3 -1 FP BE Pri
!#1 N2180 P1223 LD 13 -1 Int BE Pri
!#1 N2181 P1224 LD 5 -1 Int BE Pri
!#1 N2182 P1223 LD 13 -1 Int BE Pri
!#1 N2183 P1224 LD 5 -1 Int BE Pri
!#1 N2184 P1225 LD 12 -1 FP BE Pri
!#1 N2186 P1227 LD 13 -1 Int BE Pri
!#1 N2188 P1229 LD 13 -1 Int BE Pri
!#1 N2189 P1227 LD 13 -1 Int BE Pri
!#1 N2191 P1229 LD 13 -1 Int BE Pri
!#1 N2192 P1230 BSTC 4 0x400000a8 FP BE Pri
!#1 N2193 P1230 BSTC 5 0x400000a9 FP BE Pri
!#1 N2195 P1232 QWST 14 0x400000aa FP BE Pri
!#1 N2196 P1232 QWST 15 0x400000ab FP BE Pri
!#1 N2197 P1233 BLD 2 -1 FP BE Pri
!#1 N2198 P1233 BLD 3 -1 FP BE Pri
!#1 N2199 P1232 QWST 14 0x400000ac FP BE Pri
!#1 N2200 P1232 QWST 15 0x400000ad FP BE Pri
!#1 N2201 P1233 BLD 2 -1 FP BE Pri
!#1 N2202 P1233 BLD 3 -1 FP BE Pri
!#1 N2203 P1234 LD 1 -1 Int BE Pri
!#1 N2204 P1235 LD 9 -1 Int BE Pri
!#1 N2205 P1236 ST 9 0x80005d Int BE Pri
!#1 N2207 P1236 ST 9 0x80005e Int BE Pri
!#1 N2209 P1238 LD 0 -1 Int BE Pri
!#1 N2210 P1239 LD 13 -1 Int BE Pri
!#1 N2211 P1238 LD 0 -1 Int BE Pri
!#1 N2212 P1239 LD 13 -1 Int BE Pri
!#1 N2213 P1240 QWST 0 0x400000ae FP BE Pri
!#1 N2214 P1240 QWST 1 0x400000af FP BE Pri
!#1 N2215 P1240 QWST 0 0x400000b0 FP BE Pri
!#1 N2216 P1240 QWST 1 0x400000b1 FP BE Pri
!#1 N2217 P1241 MEMBAR
!#1 N2218 P1242 DWLD 11 -1,0x0 Int BE Pri
!#1 N2219 P1242 CASX 11 -1,0x0 N2218 0x80005f Int BE Pri
!#1 N2220 P1243 LD 14 -1 FP BE Pri
!#1 N2221 P1244 LD 9 -1 FP BE Pri
!#1 N2222 P1244 LD 9 -1 FP BE Pri
!#1 N2223 P1245 LD 4 -1 FP BE Pri
!#1 N2224 P1245 LD 4 -1 FP BE Pri
!#1 N2225 P1246 ST 1 0x800060 Int BE Pri
!#1 N2226 P1247 QWLD 4 -1 FP BE Pri
!#1 N2227 P1247 QWLD 5 -1 FP BE Pri
!#1 N2228 P1246 ST 1 0x800061 Int BE Pri
!#1 N2229 P1247 QWLD 4 -1 FP BE Pri
!#1 N2230 P1247 QWLD 5 -1 FP BE Pri
!#1 N2231 P1248 LD 7 -1 Int BE Pri
!#1 N2232 P1249 LD 14 -1 Int BE Pri
!#1 N2233 P1248 LD 7 -1 Int BE Pri
!#1 N2234 P1249 LD 14 -1 Int BE Pri
!#1 N2235 P1250 QWST 0 0x400000b2 FP BE Pri
!#1 N2236 P1250 QWST 1 0x400000b3 FP BE Pri
!#1 N2237 P1250 QWST 0 0x400000b4 FP BE Pri
!#1 N2238 P1250 QWST 1 0x400000b5 FP BE Pri
!#1 N2239 P1251 DWST 13 0x400000b6 FP BE Pri
!#1 N2244 P1254 LD 13 -1 Int BE Pri
!#1 N2245 P1255 BSTC 2 0x400000b7 FP BE Pri
!#1 N2246 P1255 BSTC 3 0x400000b8 FP BE Pri
!#1 N2247 P1256 LD 13 -1 Int BE Pri
!#1 N2249 P1258 BLD 12 -1 FP BE Pri
!#1 N2250 P1258 BLD 13 -1 FP BE Pri
!#1 N2251 P1259 BST 0 0x400000b9 FP BE Pri
!#1 N2252 P1259 BST 1 0x400000ba FP BE Pri
!#1 N2255 P1261 QWST 4 0x400000bb FP BE Pri
!#1 N2256 P1261 QWST 5 0x400000bc FP BE Pri
!#1 N2257 P1262 DWLD 15 -1,0x0 Int BE Pri
!#1 N2258 P1262 CASX 15 -1,0x0 N2257 0x800062 Int BE Pri
!#1 N2259 P1263 QWST 0 0x400000bd FP BE Pri
!#1 N2260 P1263 QWST 1 0x400000be FP BE Pri
!#1 N2262 P1263 QWST 0 0x400000bf FP BE Pri
!#1 N2263 P1263 QWST 1 0x400000c0 FP BE Pri
!#1 N2265 P1265 LD 4 -1 Int BE Pri
!#1 N2266 P1266 LD 9 -1 NF Int BE Pri
!#1 N2267 P1267 ST 12 0x400000c1 FP BE Pri
!#1 N2269 P1269 LD 11 -1 Int BE Pri
!#1 N2270 P1269 CAS 11 -1 N2269 0x800063 Int BE Pri
!#1 N2271 P1270 DWST 8 0x400000c2 FP BE Pri
!#1 N2272 P1270 DWST 8 0x400000c3 FP BE Pri
!#1 N2273 P1271 LD 1 -1 FP BE Pri
!#1 N2274 P1272 SWAP 6 0xffffffff 0x800064 Int BE Pri
!#1 N2275 P1273 DWST 2 0x400000c4 FP BE Pri
!#1 N2276 P1274 LD 0 -1 Int BE Pri
!#1 N2277 P1275 LD 5 -1 NF Int BE Pri
!#1 N2278 P1276 LD 6 -1 FP BE Pri
!#1 N2279 P1277 LD 12 -1 Int BE Pri
!#1 N2280 P1275 LD 5 -1 NF Int BE Pri
!#1 N2281 P1276 LD 6 -1 FP BE Pri
!#1 N2282 P1277 LD 12 -1 Int BE Pri
!#1 N2283 P1278 QWST 10 0x400000c5 FP BE Pri
!#1 N2284 P1278 QWST 11 0x400000c6 FP BE Pri
!#1 N2285 P1279 LD 15 -1 NF Int BE Pri
!#1 N2286 P1280 LD 1 -1 Int BE Pri
!#1 N2287 P1278 QWST 10 0x400000c7 FP BE Pri
!#1 N2288 P1278 QWST 11 0x400000c8 FP BE Pri
!#1 N2289 P1279 LD 15 -1 NF Int BE Pri
!#1 N2290 P1280 LD 1 -1 Int BE Pri
!#1 N2292 P1282 LD 4 -1 FP BE Pri
!#1 N2293 P1282 LD 4 -1 FP BE Pri
!#1 N2294 P1283 DWLD 12 -1,0x0 Int BE Pri
!#1 N2295 P1283 CASX 12 -1,0x0 N2294 0x800065 Int BE Pri
!#1 N2296 P1283 DWLD 12 -1,0x0 Int BE Pri
!#1 N2297 P1283 CASX 12 -1,0x0 N2296 0x800066 Int BE Pri
!#1 N2298 P1284 DWLD 7 -1,0x0 Int BE Pri
!#1 N2299 P1284 CASX 7 -1,0x0 N2298 0x800067 Int BE Pri
!#1 N2300 P1285 DWLD 4 -1 FP BE Pri
!#1 N2301 P1286 MEMBAR
!#1 N2302 P1287 BSTC 4 0x400000c9 FP BE Pri
!#1 N2303 P1287 BSTC 5 0x400000ca FP BE Pri
!#1 N2305 P1289 LD 15 -1 Int BE Pri
!#1 N2306 P1289 CAS 15 -1 N2305 0x800068 Int BE Pri
!#1 N2307 P1290 SWAP 7 0xffffffff 0x800069 Int BE Pri
!#1 N2308 P1291 LD 9 -1 Int BE Pri
!#1 N2309 P1292 DWLD 11 -1,0x0 Int BE Pri
!#1 N2310 P1292 CASX 11 -1,0x0 N2309 0x80006a Int BE Pri
!#1 N2311 P1292 DWLD 11 -1,0x0 Int BE Pri
!#1 N2312 P1292 CASX 11 -1,0x0 N2311 0x80006b Int BE Pri
!#1 N2313 P1293 LD 5 -1 Int BE Pri
!#1 N2314 P1294 ST 10 0x400000cb FP BE Pri
!#1 N2315 P1295 LD 13 -1 Int BE Pri
!#1 N2316 P1296 LD 15 -1 FP BE Pri
!#1 N2317 P1296 LD 15 -1 FP BE Pri
!#1 N2318 P1297 SWAP 12 0xffffffff 0x80006c Int BE Pri
!#1 N2319 P1298 LD 10 -1 FP BE Pri
!#1 N2320 P1299 LD 1 -1 Int BE Pri
!#1 N2323 P1301 MEMBAR
!#1 N2324 P1302 LD 4 -1 FP BE Pri
!#1 N2325 P1301 MEMBAR
!#1 N2326 P1302 LD 4 -1 FP BE Pri
!#1 N2336 P1310 BSTC 12 0x400000cc FP BE Pri
!#1 N2337 P1310 BSTC 13 0x400000cd FP BE Pri
!#1 N2339 P1310 BSTC 12 0x400000ce FP BE Pri
!#1 N2340 P1310 BSTC 13 0x400000cf FP BE Pri
!#1 N2341 P1311 LD 0 -1 Int BE Pri
!#1 N2342 P1312 LD 13 -1 Int BE Pri
!#1 N2344 P1314 ST 4 0x400000d0 FP BE Pri
!#1 N2345 P1315 DWLD 11 -1,0x0 Int BE Pri
!#1 N2346 P1315 CASX 11 -1,0x0 N2345 0x80006d Int BE Pri
!#1 N2347 P1314 ST 4 0x400000d1 FP BE Pri
!#1 N2348 P1315 DWLD 11 -1,0x0 Int BE Pri
!#1 N2349 P1315 CASX 11 -1,0x0 N2348 0x80006e Int BE Pri
!#1 N2350 P1316 LD 15 -1 Int BE Pri
!#1 N2351 P1317 LD 9 -1 Int BE Pri
!#1 N2352 P1316 LD 15 -1 Int BE Pri
!#1 N2353 P1317 LD 9 -1 Int BE Pri
!#1 N2354 P1318 LD 5 -1 NF Int LE Pri
!#1 N2355 P1319 LD 1 -1 Int BE Pri
!#1 N2356 P1318 LD 5 -1 NF Int LE Pri
!#1 N2357 P1319 LD 1 -1 Int BE Pri
!#1 N2358 P1320 DWLD 14 -1 Int BE Pri
!#1 N2359 P1321 LD 0 -1 Int BE Pri
!#1 N2361 P1323 DWST 5 0x80006f Int BE Pri
!#1 N2363 P1325 QWLD 4 -1 FP BE Pri
!#1 N2364 P1325 QWLD 5 -1 FP BE Pri
!#1 N2366 P1325 QWLD 4 -1 FP BE Pri
!#1 N2367 P1325 QWLD 5 -1 FP BE Pri
!#1 N2369 P1327 DWST 1 0x800070 Int BE Pri
!#1 N2374 P1331 LD 13 -1 Int BE Pri
!#1 N2375 P1332 LD 6 -1 Int BE Pri
!#1 N2377 P1331 LD 13 -1 Int BE Pri
!#1 N2378 P1332 LD 6 -1 Int BE Pri
!#1 N2379 P1333 LD 12 -1 Int BE Pri
!#1 N2380 P1334 SWAP 10 0xffffffff 0x800071 Int BE Pri
!#1 N2381 P1335 LD 3 -1 Int BE Pri
!#1 N2382 P1336 LD 0 -1 Int BE Pri
!#1 N2383 P1335 LD 3 -1 Int BE Pri
!#1 N2384 P1336 LD 0 -1 Int BE Pri
!#1 N2386 P1338 LD 8 -1 FP BE Pri
!#1 N2387 P1339 LD 13 -1 Int BE Pri
!#1 N2388 P1340 LD 15 -1 Int BE Pri
!#1 N2389 P1341 QWLD 8 -1 FP BE Pri
!#1 N2390 P1341 QWLD 9 -1 FP BE Pri
!#1 N2391 P1342 LD 11 -1 FP BE Pri
!#1 N2392 P1341 QWLD 8 -1 FP BE Pri
!#1 N2393 P1341 QWLD 9 -1 FP BE Pri
!#1 N2394 P1342 LD 11 -1 FP BE Pri
!#1 N2395 P1343 ST 14 0x400000d2 FP BE Pri
!#1 N2396 P1344 MEMBAR
!#2 N2397 P1345 SWAP 14 0xffffffff 0x1000001 Int BE Pri
!#2 N2398 P1346 BSTC 8 0x40800001 FP BE Pri
!#2 N2399 P1346 BSTC 9 0x40800002 FP BE Pri
!#2 N2400 P1347 LD 2 -1 Int BE Pri
!#2 N2401 P1345 SWAP 14 0xffffffff 0x1000002 Int BE Pri
!#2 N2402 P1346 BSTC 8 0x40800003 FP BE Pri
!#2 N2403 P1346 BSTC 9 0x40800004 FP BE Pri
!#2 N2404 P1347 LD 2 -1 Int BE Pri
!#2 N2405 P1348 BLD 10 -1 FP BE Pri
!#2 N2406 P1348 BLD 11 -1 FP BE Pri
!#2 N2407 P1348 BLD 10 -1 FP BE Pri
!#2 N2408 P1348 BLD 11 -1 FP BE Pri
!#2 N2409 P1349 SWAP 5 0xffffffff 0x1000003 Int BE Pri
!#2 N2410 P1350 LD 8 -1 Int BE Pri
!#2 N2411 P1351 LD 4 -1 FP BE Pri
!#2 N2412 P1352 BST 8 0x40800005 FP BE Pri
!#2 N2413 P1352 BST 9 0x40800006 FP BE Pri
!#2 N2414 P1353 BSTC 14 0x40800007 FP BE Pri
!#2 N2415 P1353 BSTC 15 0x40800008 FP BE Pri
!#2 N2416 P1354 QWLD 0 -1 FP BE Pri
!#2 N2417 P1354 QWLD 1 -1 FP BE Pri
!#2 N2418 P1355 LD 12 -1 FP BE Pri
!#2 N2423 P1360 LD 9 -1 Int BE Pri
!#2 N2425 P1362 LD 14 -1 Int BE Pri
!#2 N2426 P1363 LD 13 -1 Int BE Pri
!#2 N2427 P1364 LD 1 -1 FP BE Pri
!#2 N2428 P1365 LD 1 -1 Int BE Pri
!#2 N2429 P1363 LD 13 -1 Int BE Pri
!#2 N2430 P1364 LD 1 -1 FP BE Pri
!#2 N2431 P1365 LD 1 -1 Int BE Pri
!#2 N2433 P1367 DWST 8 0x1000004 Int BE Pri
!#2 N2434 P1368 LD 9 -1 Int BE Pri
!#2 N2435 P1369 LD 11 -1 NF Int BE Pri
!#2 N2436 P1368 LD 9 -1 Int BE Pri
!#2 N2437 P1369 LD 11 -1 NF Int BE Pri
!#2 N2438 P1370 LD 0 -1 FP BE Pri
!#2 N2439 P1370 LD 0 -1 FP BE Pri
!#2 N2440 P1371 SWAP 15 0xffffffff 0x1000005 Int BE Pri
!#2 N2441 P1372 LD 12 -1 Int BE Pri
!#2 N2442 P1373 LD 1 -1 Int BE Pri
!#2 N2444 P1375 LD 6 -1 Int BE Pri
!#2 N2445 P1376 LD 14 -1 NF FP BE Pri
!#2 N2447 P1376 LD 14 -1 NF FP BE Pri
!#2 N2449 P1378 LD 1 -1 Int BE Pri
!#2 N2450 P1379 QWLD 4 -1 FP BE Pri
!#2 N2451 P1379 QWLD 5 -1 FP BE Pri
!#2 N2452 P1380 LD 12 -1 Int BE Pri
!#2 N2453 P1378 LD 1 -1 Int BE Pri
!#2 N2454 P1379 QWLD 4 -1 FP BE Pri
!#2 N2455 P1379 QWLD 5 -1 FP BE Pri
!#2 N2456 P1380 LD 12 -1 Int BE Pri
!#2 N2457 P1381 LD 2 -1 FP BE Pri
!#2 N2458 P1382 DWST 11 0x1000006 Int BE Pri
!#2 N2460 P1384 QWLD 6 -1 FP BE Pri
!#2 N2461 P1384 QWLD 7 -1 FP BE Pri
!#2 N2462 P1385 BLD 0 -1 FP BE Pri
!#2 N2463 P1385 BLD 1 -1 FP BE Pri
!#2 N2464 P1386 DWLD 4 -1 Int BE Pri
!#2 N2465 P1387 LD 14 -1 Int BE Pri
!#2 N2466 P1388 LD 8 -1 FP BE Pri
!#2 N2467 P1389 DWLD 4 -1,0x0 Int BE Pri
!#2 N2468 P1389 CASX 4 -1,0x0 N2467 0x1000007 Int BE Pri
!#2 N2472 P1393 LD 15 -1 FP BE Pri
!#2 N2473 P1394 LD 8 -1 FP BE Pri
!#2 N2474 P1394 LD 8 -1 FP BE Pri
!#2 N2475 P1395 LD 12 -1 Int BE Pri
!#2 N2476 P1396 LD 0 -1 FP BE Pri
!#2 N2477 P1397 LD 15 -1 Int BE Pri
!#2 N2478 P1395 LD 12 -1 Int BE Pri
!#2 N2479 P1396 LD 0 -1 FP BE Pri
!#2 N2480 P1397 LD 15 -1 Int BE Pri
!#2 N2482 P1399 BSTC 6 0x40800009 FP BE Pri
!#2 N2483 P1399 BSTC 7 0x4080000a FP BE Pri
!#2 N2486 P1401 LD 9 -1 FP BE Pri
!#2 N2487 P1402 QWLD 14 -1 FP BE Pri
!#2 N2488 P1402 QWLD 15 -1 FP BE Pri
!#2 N2489 P1403 BSTC 4 0x4080000b FP BE Pri
!#2 N2490 P1403 BSTC 5 0x4080000c FP BE Pri
!#2 N2491 P1404 QWST 10 0x4080000d FP BE Pri
!#2 N2492 P1404 QWST 11 0x4080000e FP BE Pri
!#2 N2493 P1405 LD 6 -1 Int BE Pri
!#2 N2494 P1406 LD 12 -1 Int BE Pri
!#2 N2495 P1407 BST 14 0x4080000f FP BE Pri
!#2 N2496 P1407 BST 15 0x40800010 FP BE Pri
!#2 N2497 P1408 LD 1 -1 FP BE Pri
!#2 N2498 P1407 BST 14 0x40800011 FP BE Pri
!#2 N2499 P1407 BST 15 0x40800012 FP BE Pri
!#2 N2500 P1408 LD 1 -1 FP BE Pri
!#2 N2501 P1409 QWLD 0 -1 FP BE Pri
!#2 N2502 P1409 QWLD 1 -1 FP BE Pri
!#2 N2503 P1410 LD 7 -1 FP BE Pri
!#2 N2504 P1409 QWLD 0 -1 FP BE Pri
!#2 N2505 P1409 QWLD 1 -1 FP BE Pri
!#2 N2506 P1410 LD 7 -1 FP BE Pri
!#2 N2507 P1411 DWLD 13 -1,0x0 Int BE Pri
!#2 N2508 P1411 CASX 13 -1,0x0 N2507 0x1000008 Int BE Pri
!#2 N2509 P1412 LD 0 -1 FP BE Pri
!#2 N2510 P1411 DWLD 13 -1,0x0 Int BE Pri
!#2 N2511 P1411 CASX 13 -1,0x0 N2510 0x1000009 Int BE Pri
!#2 N2512 P1412 LD 0 -1 FP BE Pri
!#2 N2515 P1415 LD 15 -1 Int BE Pri
!#2 N2516 P1416 LD 2 -1 Int BE Pri
!#2 N2517 P1417 LD 8 -1 Int BE Pri
!#2 N2518 P1418 LD 2 -1 Int BE Pri
!#2 N2519 P1419 BLD 4 -1 FP BE Pri
!#2 N2520 P1419 BLD 5 -1 FP BE Pri
!#2 N2521 P1420 QWLD 4 -1 NF FP BE Pri
!#2 N2522 P1420 QWLD 5 -1 NF FP BE Pri
!#2 N2523 P1421 LD 6 -1 FP BE Pri
!#2 N2525 P1423 LD 7 -1 NF FP BE Pri
!#2 N2526 P1424 LD 13 -1 Int BE Pri
!#2 N2527 P1425 LD 11 -1 Int BE Pri
!#2 N2530 P1427 DWST 1 0x100000a Int LE Pri
!#2 N2534 P1430 DWLD 1 -1 FP BE Pri
!#2 N2535 P1430 DWLD 1 -1 FP BE Pri
!#2 N2536 P1431 LD 6 -1 FP BE Pri
!#2 N2538 P1433 QWST 2 0x40800013 FP BE Pri
!#2 N2539 P1433 QWST 3 0x40800014 FP BE Pri
!#2 N2540 P1434 LD 13 -1 Int BE Pri
!#2 N2541 P1435 LD 1 -1 Int BE Pri
!#2 N2542 P1434 LD 13 -1 Int BE Pri
!#2 N2543 P1435 LD 1 -1 Int BE Pri
!#2 N2544 P1436 QWLD 0 -1 NF FP BE Pri
!#2 N2545 P1436 QWLD 1 -1 NF FP BE Pri
!#2 N2546 P1437 QWLD 2 -1 FP BE Pri
!#2 N2547 P1437 QWLD 3 -1 FP BE Pri
!#2 N2548 P1436 QWLD 0 -1 NF FP BE Pri
!#2 N2549 P1436 QWLD 1 -1 NF FP BE Pri
!#2 N2550 P1437 QWLD 2 -1 FP BE Pri
!#2 N2551 P1437 QWLD 3 -1 FP BE Pri
!#2 N2552 P1438 BST 10 0x40800015 FP BE Pri
!#2 N2553 P1438 BST 11 0x40800016 FP BE Pri
!#2 N2555 P1438 BST 10 0x40800017 FP BE Pri
!#2 N2556 P1438 BST 11 0x40800018 FP BE Pri
!#2 N2558 P1440 DWST 9 0x100000b Int LE Pri
!#2 N2559 P1440 DWST 9 0x100000c Int LE Pri
!#2 N2560 P1441 MEMBAR
!#2 N2561 P1442 LD 13 -1 FP BE Pri
!#2 N2562 P1441 MEMBAR
!#2 N2563 P1442 LD 13 -1 FP BE Pri
!#2 N2564 P1443 DWST 14 0x40800019 FP BE Pri
!#2 N2565 P1444 LD 3 -1 Int BE Pri
!#2 N2566 P1445 QWLD 4 -1 FP BE Pri
!#2 N2567 P1445 QWLD 5 -1 FP BE Pri
!#2 N2568 P1446 LD 2 -1 Int BE Pri
!#2 N2569 P1447 LD 13 -1 Int BE Pri
!#2 N2570 P1448 ST 12 0x100000d Int BE Pri
!#2 N2571 P1449 LD 6 -1 Int BE Pri
!#2 N2572 P1450 LD 3 -1 NF Int BE Pri
!#2 N2574 P1452 LD 11 -1 Int BE Pri
!#2 N2575 P1453 BLD 14 -1 FP BE Pri
!#2 N2576 P1453 BLD 15 -1 FP BE Pri
!#2 N2577 P1454 QWLD 8 -1 FP BE Pri
!#2 N2578 P1454 QWLD 9 -1 FP BE Pri
!#2 N2579 P1455 LD 4 -1 NF Int BE Pri
!#2 N2581 P1457 LD 2 -1 Int BE Pri
!#2 N2582 P1455 LD 4 -1 NF Int BE Pri
!#2 N2584 P1457 LD 2 -1 Int BE Pri
!#2 N2585 P1458 QWST 14 0x4080001a FP BE Pri
!#2 N2586 P1458 QWST 15 0x4080001b FP BE Pri
!#2 N2587 P1459 LD 13 -1 FP BE Pri
!#2 N2588 P1458 QWST 14 0x4080001c FP BE Pri
!#2 N2589 P1458 QWST 15 0x4080001d FP BE Pri
!#2 N2590 P1459 LD 13 -1 FP BE Pri
!#2 N2591 P1460 LD 7 -1 Int LE Pri
!#2 N2592 P1460 CAS 7 -1 N2591 0x100000e Int LE Pri
!#2 N2593 P1461 LD 8 -1 FP BE Pri
!#2 N2594 P1462 BST 10 0x4080001e FP BE Pri
!#2 N2595 P1462 BST 11 0x4080001f FP BE Pri
!#2 N2596 P1463 QWLD 2 -1 FP BE Pri
!#2 N2597 P1463 QWLD 3 -1 FP BE Pri
!#2 N2598 P1464 QWLD 8 -1 FP BE Pri
!#2 N2599 P1464 QWLD 9 -1 FP BE Pri
!#2 N2600 P1464 QWLD 8 -1 FP BE Pri
!#2 N2601 P1464 QWLD 9 -1 FP BE Pri
!#2 N2602 P1465 BST 8 0x40800020 FP BE Pri
!#2 N2603 P1465 BST 9 0x40800021 FP BE Pri
!#2 N2604 P1466 LD 0 -1 Int BE Pri
!#2 N2605 P1467 LD 0 -1 Int BE Pri
!#2 N2606 P1465 BST 8 0x40800022 FP BE Pri
!#2 N2607 P1465 BST 9 0x40800023 FP BE Pri
!#2 N2608 P1466 LD 0 -1 Int BE Pri
!#2 N2609 P1467 LD 0 -1 Int BE Pri
!#2 N2610 P1468 BST 12 0x40800024 FP BE Pri
!#2 N2611 P1468 BST 13 0x40800025 FP BE Pri
!#2 N2612 P1468 BST 12 0x40800026 FP BE Pri
!#2 N2613 P1468 BST 13 0x40800027 FP BE Pri
!#2 N2614 P1469 BLD 2 -1 FP BE Pri
!#2 N2615 P1469 BLD 3 -1 FP BE Pri
!#2 N2616 P1469 BLD 2 -1 FP BE Pri
!#2 N2617 P1469 BLD 3 -1 FP BE Pri
!#2 N2618 P1470 LD 2 -1 FP BE Pri
!#2 N2619 P1471 SWAP 7 0xffffffff 0x100000f Int BE Pri
!#2 N2620 P1472 LD 9 -1 Int BE Pri
!#2 N2621 P1473 BST 2 0x40800028 FP BE Pri
!#2 N2622 P1473 BST 3 0x40800029 FP BE Pri
!#2 N2623 P1473 BST 2 0x4080002a FP BE Pri
!#2 N2624 P1473 BST 3 0x4080002b FP BE Pri
!#2 N2625 P1474 DWLD 11 -1,0x0 Int BE Pri
!#2 N2626 P1474 CASX 11 -1,0x0 N2625 0x1000010 Int BE Pri
!#2 N2627 P1474 DWLD 11 -1,0x0 Int BE Pri
!#2 N2628 P1474 CASX 11 -1,0x0 N2627 0x1000011 Int BE Pri
!#2 N2629 P1475 LD 2 -1 Int BE Pri
!#2 N2630 P1476 LD 4 -1 Int BE Pri
!#2 N2631 P1477 ST 14 0x1000012 Int BE Pri
!#2 N2632 P1478 LD 1 -1 FP BE Pri
!#2 N2637 P1481 BST 2 0x4080002c FP BE Pri
!#2 N2638 P1481 BST 3 0x4080002d FP BE Pri
!#2 N2639 P1481 BST 2 0x4080002e FP BE Pri
!#2 N2640 P1481 BST 3 0x4080002f FP BE Pri
!#2 N2642 P1483 BSTC 6 0x40800030 FP BE Pri
!#2 N2643 P1483 BSTC 7 0x40800031 FP BE Pri
!#2 N2645 P1483 BSTC 6 0x40800032 FP BE Pri
!#2 N2646 P1483 BSTC 7 0x40800033 FP BE Pri
!#2 N2647 P1484 LD 14 -1 FP BE Pri
!#2 N2648 P1485 QWST 4 0x40800034 FP BE Pri
!#2 N2649 P1485 QWST 5 0x40800035 FP BE Pri
!#2 N2650 P1485 QWST 4 0x40800036 FP BE Pri
!#2 N2651 P1485 QWST 5 0x40800037 FP BE Pri
!#2 N2652 P1486 QWST 14 0x40800038 FP BE Pri
!#2 N2653 P1486 QWST 15 0x40800039 FP BE Pri
!#2 N2654 P1487 LD 13 -1 FP BE Pri
!#2 N2655 P1487 LD 13 -1 FP BE Pri
!#2 N2656 P1488 LD 13 -1 FP BE Pri
!#2 N2658 P1490 SWAP 0 0xffffffff 0x1000013 Int BE Pri
!#2 N2659 P1491 LD 8 -1 NF Int BE Pri
!#2 N2660 P1492 LD 8 -1 Int BE Pri
!#2 N2661 P1493 LD 12 -1 Int BE Pri
!#2 N2662 P1492 LD 8 -1 Int BE Pri
!#2 N2663 P1493 LD 12 -1 Int BE Pri
!#2 N2666 P1496 LD 9 -1 Int BE Pri
!#2 N2667 P1497 LD 10 -1 Int BE Pri
!#2 N2668 P1498 ST 11 0x4080003a FP BE Pri
!#2 N2670 P1498 ST 11 0x4080003b FP BE Pri
!#2 N2672 P1500 DWLD 8 -1,0x0 Int BE Pri
!#2 N2673 P1500 CASX 8 -1,0x0 N2672 0x1000014 Int BE Pri
!#2 N2676 P1503 LD 12 -1 Int BE Pri
!#2 N2677 P1504 LD 15 -1 Int BE Pri
!#2 N2678 P1505 LD 3 -1 NF Int BE Pri
!#2 N2679 P1506 LD 2 -1 Int BE Pri
!#2 N2680 P1506 CAS 2 -1 N2679 0x1000015 Int BE Pri
!#2 N2681 P1507 LD 5 -1 Int BE Pri
!#2 N2682 P1505 LD 3 -1 NF Int BE Pri
!#2 N2683 P1506 LD 2 -1 Int BE Pri
!#2 N2684 P1506 CAS 2 -1 N2683 0x1000016 Int BE Pri
!#2 N2685 P1507 LD 5 -1 Int BE Pri
!#2 N2686 P1508 BST 6 0x4080003c FP BE Pri
!#2 N2687 P1508 BST 7 0x4080003d FP BE Pri
!#2 N2688 P1509 SWAP 5 0xffffffff 0x1000017 Int BE Pri
!#2 N2689 P1510 LD 15 -1 Int BE Pri
!#2 N2690 P1508 BST 6 0x4080003e FP BE Pri
!#2 N2691 P1508 BST 7 0x4080003f FP BE Pri
!#2 N2692 P1509 SWAP 5 0xffffffff 0x1000018 Int BE Pri
!#2 N2693 P1510 LD 15 -1 Int BE Pri
!#2 N2694 P1511 LD 13 -1 FP BE Pri
!#2 N2695 P1511 LD 13 -1 FP BE Pri
!#2 N2696 P1512 DWLD 9 -1 Int BE Pri
!#2 N2697 P1513 LD 1 -1 Int BE Pri
!#2 N2698 P1514 ST 8 0x40800040 FP BE Pri
!#2 N2699 P1515 LD 9 -1 Int BE Pri
!#2 N2700 P1516 LD 1 -1 Int BE Pri
!#2 N2703 P1518 DWST 0 0x1000019 Int BE Pri
!#2 N2704 P1518 DWST 0 0x100001a Int BE Pri
!#2 N2705 P1519 LD 15 -1 FP BE Pri
!#2 N2707 P1521 LD 6 -1 FP BE Pri
!#2 N2708 P1522 LD 2 -1 FP BE Pri
!#2 N2709 P1523 BSTC 12 0x40800041 FP BE Pri
!#2 N2710 P1523 BSTC 13 0x40800042 FP BE Pri
!#2 N2712 P1525 LD 6 -1 Int BE Pri
!#2 N2713 P1526 LD 12 -1 Int BE Pri
!#2 N2714 P1527 QWLD 10 -1 FP BE Pri
!#2 N2715 P1527 QWLD 11 -1 FP BE Pri
!#2 N2716 P1528 LD 1 -1 Int BE Pri
!#2 N2718 P1530 LD 6 -1 Int BE Pri
!#2 N2719 P1531 DWST 8 0x100001b Int BE Pri
!#2 N2720 P1532 LD 4 -1 FP BE Pri
!#2 N2721 P1531 DWST 8 0x100001c Int BE Pri
!#2 N2722 P1532 LD 4 -1 FP BE Pri
!#2 N2723 P1533 DWST 8 0x40800043 FP BE Pri
!#2 N2724 P1534 QWLD 14 -1 FP BE Pri
!#2 N2725 P1534 QWLD 15 -1 FP BE Pri
!#2 N2726 P1535 LD 6 -1 Int BE Pri
!#2 N2727 P1536 LD 14 -1 NF Int BE Pri
!#2 N2728 P1537 DWLD 5 -1,0x0 Int BE Pri
!#2 N2729 P1537 CASX 5 -1,0x0 N2728 0x100001d Int BE Pri
!#2 N2730 P1538 QWLD 6 -1 FP BE Pri
!#2 N2731 P1538 QWLD 7 -1 FP BE Pri
!#2 N2732 P1537 DWLD 5 -1,0x0 Int BE Pri
!#2 N2733 P1537 CASX 5 -1,0x0 N2732 0x100001e Int BE Pri
!#2 N2734 P1538 QWLD 6 -1 FP BE Pri
!#2 N2735 P1538 QWLD 7 -1 FP BE Pri
!#2 N2736 P1539 LD 0 -1 Int LE Pri
!#2 N2737 P1539 CAS 0 -1 N2736 0x100001f Int LE Pri
!#2 N2738 P1540 DWST 4 0x1000020 Int BE Pri
!#2 N2741 P1542 LD 7 -1 Int LE Pri
!#2 N2742 P1543 LD 3 -1 Int BE Pri
!#2 N2743 P1544 DWLD 5 -1 Int BE Pri
!#2 N2744 P1545 DWLD 12 -1 Int BE Pri
!#2 N2745 P1544 DWLD 5 -1 Int BE Pri
!#2 N2746 P1545 DWLD 12 -1 Int BE Pri
!#2 N2753 P1549 LD 4 -1 FP BE Pri
!#2 N2754 P1550 ST 11 0x40800044 FP BE Pri
!#2 N2755 P1551 LD 4 -1 NF Int BE Pri
!#2 N2756 P1552 LD 6 -1 Int BE Pri
!#2 N2757 P1550 ST 11 0x40800045 FP BE Pri
!#2 N2758 P1551 LD 4 -1 NF Int BE Pri
!#2 N2759 P1552 LD 6 -1 Int BE Pri
!#2 N2760 P1553 LD 15 -1 FP BE Pri
!#2 N2761 P1554 LD 1 -1 Int BE Pri
!#2 N2762 P1555 LD 9 -1 Int BE Pri
!#2 N2763 P1556 LD 2 -1 Int BE Pri
!#2 N2764 P1557 LD 4 -1 Int BE Pri
!#2 N2765 P1557 CAS 4 -1 N2764 0x1000021 Int BE Pri
!#2 N2766 P1558 LD 12 -1 Int BE Pri
!#2 N2767 P1559 BLD 6 -1 FP BE Pri
!#2 N2768 P1559 BLD 7 -1 FP BE Pri
!#2 N2769 P1560 DWLD 9 -1 Int BE Pri
!#2 N2770 P1561 LD 10 -1 Int BE Pri
!#2 N2771 P1559 BLD 6 -1 FP BE Pri
!#2 N2772 P1559 BLD 7 -1 FP BE Pri
!#2 N2773 P1560 DWLD 9 -1 Int BE Pri
!#2 N2774 P1561 LD 10 -1 Int BE Pri
!#2 N2775 P1562 LD 12 -1 Int BE Pri
!#2 N2776 P1563 LD 5 -1 Int BE Pri
!#2 N2777 P1564 BST 2 0x40800046 FP BE Pri
!#2 N2778 P1564 BST 3 0x40800047 FP BE Pri
!#2 N2779 P1564 BST 2 0x40800048 FP BE Pri
!#2 N2780 P1564 BST 3 0x40800049 FP BE Pri
!#2 N2782 P1566 LD 11 -1 Int BE Pri
!#2 N2783 P1567 LD 8 -1 Int BE Pri
!#2 N2784 P1568 LD 0 -1 Int BE Pri
!#2 N2785 P1568 CAS 0 -1 N2784 0x1000022 Int BE Pri
!#2 N2786 P1568 LD 0 -1 Int BE Pri
!#2 N2787 P1568 CAS 0 -1 N2786 0x1000023 Int BE Pri
!#2 N2788 P1569 LD 15 -1 FP BE Pri
!#2 N2789 P1570 LD 11 -1 Int BE Pri
!#2 N2790 P1571 DWST 7 0x4080004a FP BE Pri
!#2 N2791 P1572 LD 1 -1 Int BE Pri
!#2 N2792 P1570 LD 11 -1 Int BE Pri
!#2 N2793 P1571 DWST 7 0x4080004b FP BE Pri
!#2 N2794 P1572 LD 1 -1 Int BE Pri
!#2 N2795 P1573 ST 9 0x1000024 Int BE Pri
!#2 N2796 P1574 BLD 4 -1 FP BE Pri
!#2 N2797 P1574 BLD 5 -1 FP BE Pri
!#2 N2798 P1573 ST 9 0x1000025 Int BE Pri
!#2 N2799 P1574 BLD 4 -1 FP BE Pri
!#2 N2800 P1574 BLD 5 -1 FP BE Pri
!#2 N2801 P1575 ST 1 0x4080004c FP BE Pri
!#2 N2802 P1575 ST 1 0x4080004d FP BE Pri
!#2 N2804 P1577 LD 14 -1 Int BE Pri
!#2 N2805 P1578 LD 7 -1 Int BE Pri
!#2 N2806 P1577 LD 14 -1 Int BE Pri
!#2 N2807 P1578 LD 7 -1 Int BE Pri
!#2 N2808 P1579 SWAP 11 0xffffffff 0x1000026 Int BE Pri
!#2 N2809 P1580 LD 4 -1 Int LE Pri
!#2 N2810 P1581 ST 4 0x4080004e FP BE Pri
!#2 N2811 P1582 DWST 5 0x4080004f FP BE Pri
!#2 N2812 P1581 ST 4 0x40800050 FP BE Pri
!#2 N2813 P1582 DWST 5 0x40800051 FP BE Pri
!#2 N2814 P1583 BLD 8 -1 FP BE Pri
!#2 N2815 P1583 BLD 9 -1 FP BE Pri
!#2 N2817 P1583 BLD 8 -1 FP BE Pri
!#2 N2818 P1583 BLD 9 -1 FP BE Pri
!#2 N2820 P1585 BSTC 6 0x40800052 FP BE Pri
!#2 N2821 P1585 BSTC 7 0x40800053 FP BE Pri
!#2 N2822 P1585 BSTC 6 0x40800054 FP BE Pri
!#2 N2823 P1585 BSTC 7 0x40800055 FP BE Pri
!#2 N2825 P1587 LD 4 -1 Int BE Pri
!#2 N2826 P1588 LD 1 -1 Int BE Pri
!#2 N2827 P1589 LD 7 -1 Int BE Pri
!#2 N2828 P1590 LD 13 -1 Int BE Pri
!#2 N2829 P1591 LD 0 -1 Int LE Pri
!#2 N2830 P1592 LD 14 -1 Int LE Pri
!#2 N2832 P1594 LD 1 -1 FP BE Pri
!#2 N2833 P1594 LD 1 -1 FP BE Pri
!#2 N2836 P1596 SWAP 12 0xffffffff 0x1000027 Int BE Pri
!#2 N2837 P1597 LD 5 -1 FP BE Pri
!#2 N2838 P1598 LD 13 -1 Int BE Pri
!#2 N2839 P1596 SWAP 12 0xffffffff 0x1000028 Int BE Pri
!#2 N2840 P1597 LD 5 -1 FP BE Pri
!#2 N2841 P1598 LD 13 -1 Int BE Pri
!#2 N2842 P1599 BST 4 0x40800056 FP BE Pri
!#2 N2843 P1599 BST 5 0x40800057 FP BE Pri
!#2 N2844 P1599 BST 4 0x40800058 FP BE Pri
!#2 N2845 P1599 BST 5 0x40800059 FP BE Pri
!#2 N2850 P1602 DWLD 9 -1 FP BE Pri
!#2 N2851 P1603 LD 11 -1 FP BE Pri
!#2 N2853 P1605 LD 8 -1 FP BE Pri
!#2 N2855 P1605 LD 8 -1 FP BE Pri
!#2 N2858 P1608 DWLD 8 -1,0x0 Int BE Pri
!#2 N2859 P1608 CASX 8 -1,0x0 N2858 0x1000029 Int BE Pri
!#2 N2860 P1608 DWLD 8 -1,0x0 Int BE Pri
!#2 N2861 P1608 CASX 8 -1,0x0 N2860 0x100002a Int BE Pri
!#2 N2866 P1611 LD 13 -1 NF Int BE Pri
!#2 N2867 P1612 LD 12 -1 Int BE Pri
!#2 N2868 P1613 SWAP 11 0xffffffff 0x100002b Int BE Pri
!#2 N2869 P1614 DWLD 7 -1 FP BE Pri
!#2 N2870 P1615 LD 5 -1 Int BE Pri
!#2 N2871 P1613 SWAP 11 0xffffffff 0x100002c Int BE Pri
!#2 N2872 P1614 DWLD 7 -1 FP BE Pri
!#2 N2873 P1615 LD 5 -1 Int BE Pri
!#2 N2874 P1616 LD 9 -1 Int BE Pri
!#2 N2875 P1617 LD 3 -1 Int BE Pri
!#2 N2876 P1616 LD 9 -1 Int BE Pri
!#2 N2877 P1617 LD 3 -1 Int BE Pri
!#2 N2878 P1618 LD 12 -1 FP BE Pri
!#2 N2879 P1619 DWST 14 0x4080005a FP BE Pri
!#2 N2880 P1619 DWST 14 0x4080005b FP BE Pri
!#2 N2881 P1620 BSTC 10 0x4080005c FP BE Pri
!#2 N2882 P1620 BSTC 11 0x4080005d FP BE Pri
!#2 N2883 P1620 BSTC 10 0x4080005e FP BE Pri
!#2 N2884 P1620 BSTC 11 0x4080005f FP BE Pri
!#2 N2885 P1621 LD 5 -1 Int BE Pri
!#2 N2886 P1622 LD 12 -1 FP BE Pri
!#2 N2887 P1623 LD 7 -1 Int BE Pri
!#2 N2888 P1624 ST 15 0x100002d Int BE Pri
!#2 N2889 P1625 LD 4 -1 FP BE Pri
!#2 N2890 P1624 ST 15 0x100002e Int BE Pri
!#2 N2891 P1625 LD 4 -1 FP BE Pri
!#2 N2893 P1627 LD 2 -1 NF Int BE Pri
!#2 N2894 P1628 LD 13 -1 FP BE Pri
!#2 N2895 P1629 LD 4 -1 Int BE Pri
!#2 N2896 P1630 DWLD 13 -1,0x0 Int BE Pri
!#2 N2897 P1630 CASX 13 -1,0x0 N2896 0x100002f Int BE Pri
!#2 N2898 P1630 DWLD 13 -1,0x0 Int BE Pri
!#2 N2899 P1630 CASX 13 -1,0x0 N2898 0x1000030 Int BE Pri
!#2 N2900 P1631 LD 15 -1 Int BE Pri
!#2 N2901 P1632 LD 0 -1 Int BE Pri
!#2 N2902 P1633 LD 14 -1 FP BE Pri
!#2 N2905 P1636 MEMBAR
!#2 N2906 P1636 MEMBAR
!#2 N2910 P1639 BLD 2 -1 FP BE Pri
!#2 N2911 P1639 BLD 3 -1 FP BE Pri
!#2 N2914 P1642 QWLD 6 -1 FP BE Pri
!#2 N2915 P1642 QWLD 7 -1 FP BE Pri
!#2 N2916 P1642 QWLD 6 -1 FP BE Pri
!#2 N2917 P1642 QWLD 7 -1 FP BE Pri
!#2 N2918 P1643 LD 9 -1 Int BE Pri
!#2 N2919 P1644 LD 2 -1 Int BE Pri
!#2 N2920 P1645 LD 10 -1 Int BE Pri
!#2 N2921 P1646 LD 3 -1 Int BE Pri
!#2 N2922 P1645 LD 10 -1 Int BE Pri
!#2 N2923 P1646 LD 3 -1 Int BE Pri
!#2 N2924 P1647 BLD 12 -1 FP BE Pri
!#2 N2925 P1647 BLD 13 -1 FP BE Pri
!#2 N2926 P1648 LD 15 -1 FP BE Pri
!#2 N2927 P1649 BST 4 0x40800060 FP BE Pri
!#2 N2928 P1649 BST 5 0x40800061 FP BE Pri
!#2 N2929 P1650 LD 12 -1 Int BE Pri
!#2 N2930 P1651 LD 1 -1 Int BE Pri
!#2 N2931 P1652 LD 11 -1 Int BE Pri
!#2 N2932 P1653 LD 12 -1 NF Int BE Pri
!#2 N2933 P1654 ST 1 0x40800062 FP BE Pri
!#2 N2934 P1655 QWST 12 0x40800063 FP BE Pri
!#2 N2935 P1655 QWST 13 0x40800064 FP BE Pri
!#2 N2936 P1654 ST 1 0x40800065 FP BE Pri
!#2 N2937 P1655 QWST 12 0x40800066 FP BE Pri
!#2 N2938 P1655 QWST 13 0x40800067 FP BE Pri
!#2 N2939 P1656 DWST 9 0x40800068 FP BE Pri
!#2 N2940 P1656 DWST 9 0x40800069 FP BE Pri
!#2 N2942 P1658 DWST 1 0x1000031 Int BE Pri
!#2 N2943 P1659 LD 6 -1 Int BE Pri
!#2 N2944 P1660 LD 15 -1 NF Int BE Pri
!#2 N2945 P1661 LD 4 -1 NF Fault FP BE Pri
!#2 N2946 P1661 LD 4 -1 NF Fault FP BE Pri
!#2 N2950 P1664 LD 13 -1 FP BE Pri
!#2 N2952 P1664 LD 13 -1 FP BE Pri
!#2 N2953 P1665 BLD 8 -1 FP BE Pri
!#2 N2954 P1665 BLD 9 -1 FP BE Pri
!#2 N2955 P1665 BLD 8 -1 FP BE Pri
!#2 N2956 P1665 BLD 9 -1 FP BE Pri
!#2 N2957 P1666 ST 12 0x4080006a FP BE Pri
!#2 N2958 P1666 ST 12 0x4080006b FP BE Pri
!#2 N2959 P1667 LD 14 -1 FP BE Pri
!#2 N2960 P1668 LD 12 -1 Int BE Pri
!#2 N2961 P1668 CAS 12 -1 N2960 0x1000032 Int BE Pri
!#2 N2962 P1669 LD 4 -1 FP BE Pri
!#2 N2963 P1669 LD 4 -1 FP BE Pri
!#2 N2964 P1670 BLD 0 -1 FP BE Pri
!#2 N2965 P1670 BLD 1 -1 FP BE Pri
!#2 N2966 P1670 BLD 0 -1 FP BE Pri
!#2 N2967 P1670 BLD 1 -1 FP BE Pri
!#2 N2968 P1671 DWST 8 0x4080006c FP BE Pri
!#2 N2970 P1673 QWST 0 0x4080006d FP BE Pri
!#2 N2971 P1673 QWST 1 0x4080006e FP BE Pri
!#2 N2973 P1673 QWST 0 0x4080006f FP BE Pri
!#2 N2974 P1673 QWST 1 0x40800070 FP BE Pri
!#2 N2977 P1676 LD 13 -1 Int BE Pri
!#2 N2978 P1677 LD 1 -1 NF Int BE Pri
!#2 N2979 P1678 LD 8 -1 Int LE Pri
!#2 N2981 P1680 LD 9 -1 Int BE Pri
!#2 N2982 P1678 LD 8 -1 Int LE Pri
!#2 N2984 P1680 LD 9 -1 Int BE Pri
!#2 N2986 P1682 LD 13 -1 FP BE Pri
!#2 N2988 P1684 LD 14 -1 FP BE Pri
!#2 N2989 P1685 BST 10 0x40800071 FP BE Pri
!#2 N2990 P1685 BST 11 0x40800072 FP BE Pri
!#2 N2991 P1686 LD 12 -1 FP BE Pri
!#2 N2992 P1687 DWLD 0 -1,0x0 Int BE Pri
!#2 N2993 P1687 CASX 0 -1,0x0 N2992 0x1000033 Int BE Pri
!#2 N2994 P1686 LD 12 -1 FP BE Pri
!#2 N2995 P1687 DWLD 0 -1,0x0 Int BE Pri
!#2 N2996 P1687 CASX 0 -1,0x0 N2995 0x1000034 Int BE Pri
!#2 N2997 P1688 LD 11 -1 Int BE Pri
!#2 N2998 P1689 LD 12 -1 NF FP BE Pri
!#2 N2999 P1690 LD 0 -1 Int BE Pri
!#2 N3000 P1691 LD 11 -1 Int BE Pri
!#2 N3001 P1692 LD 14 -1 Int BE Pri
!#2 N3002 P1691 LD 11 -1 Int BE Pri
!#2 N3003 P1692 LD 14 -1 Int BE Pri
!#2 N3004 P1693 ST 7 0x40800073 FP BE Pri
!#2 N3005 P1694 LD 2 -1 Int BE Pri
!#2 N3006 P1694 CAS 2 -1 N3005 0x1000035 Int BE Pri
!#2 N3007 P1693 ST 7 0x40800074 FP BE Pri
!#2 N3008 P1694 LD 2 -1 Int BE Pri
!#2 N3009 P1694 CAS 2 -1 N3008 0x1000036 Int BE Pri
!#2 N3014 P1697 LD 6 -1 FP BE Pri
!#2 N3015 P1698 DWST 2 0x1000037 Int BE Pri
!#2 N3016 P1697 LD 6 -1 FP BE Pri
!#2 N3017 P1698 DWST 2 0x1000038 Int BE Pri
!#2 N3018 P1699 LD 13 -1 Int LE Pri
!#2 N3019 P1700 DWLD 5 -1,0x0 Int LE Pri
!#2 N3020 P1700 CASX 5 -1,0x0 N3019 0x1000039 Int LE Pri
!#2 N3021 P1701 LD 14 -1 Int BE Pri
!#2 N3022 P1702 LD 7 -1 Int BE Pri
!#2 N3023 P1703 LD 4 -1 NF Int BE Pri
!#2 N3024 P1704 LD 9 -1 Int BE Pri
!#2 N3026 P1706 LD 8 -1 Int BE Pri
!#2 N3027 P1707 LD 13 -1 FP BE Pri
!#2 N3028 P1707 LD 13 -1 FP BE Pri
!#2 N3029 P1708 LD 8 -1 Int BE Pri
!#2 N3030 P1709 LD 15 -1 Int BE Pri
!#2 N3031 P1708 LD 8 -1 Int BE Pri
!#2 N3032 P1709 LD 15 -1 Int BE Pri
!#2 N3033 P1710 LD 6 -1 FP BE Pri
!#2 N3034 P1711 BSTC 6 0x40800075 FP BE Pri
!#2 N3035 P1711 BSTC 7 0x40800076 FP BE Pri
!#2 N3036 P1710 LD 6 -1 FP BE Pri
!#2 N3037 P1711 BSTC 6 0x40800077 FP BE Pri
!#2 N3038 P1711 BSTC 7 0x40800078 FP BE Pri
!#2 N3043 P1714 LD 0 -1 NF FP BE Pri
!#2 N3044 P1715 QWLD 10 -1 FP BE Pri
!#2 N3045 P1715 QWLD 11 -1 FP BE Pri
!#2 N3046 P1715 QWLD 10 -1 FP BE Pri
!#2 N3047 P1715 QWLD 11 -1 FP BE Pri
!#2 N3048 P1716 LD 12 -1 FP BE Pri
!#2 N3050 P1718 LD 9 -1 Int BE Pri
!#2 N3052 P1720 LD 4 -1 Int BE Pri
!#2 N3053 P1718 LD 9 -1 Int BE Pri
!#2 N3055 P1720 LD 4 -1 Int BE Pri
!#2 N3059 P1723 BSTC 12 0x40800079 FP BE Pri
!#2 N3060 P1723 BSTC 13 0x4080007a FP BE Pri
!#2 N3061 P1724 QWST 2 0x4080007b FP BE Pri
!#2 N3062 P1724 QWST 3 0x4080007c FP BE Pri
!#2 N3063 P1723 BSTC 12 0x4080007d FP BE Pri
!#2 N3064 P1723 BSTC 13 0x4080007e FP BE Pri
!#2 N3065 P1724 QWST 2 0x4080007f FP BE Pri
!#2 N3066 P1724 QWST 3 0x40800080 FP BE Pri
!#2 N3067 P1725 QWST 4 0x40800081 FP BE Pri
!#2 N3068 P1725 QWST 5 0x40800082 FP BE Pri
!#2 N3069 P1726 LD 6 -1 Int BE Pri
!#2 N3070 P1727 LD 14 -1 Int BE Pri
!#2 N3071 P1725 QWST 4 0x40800083 FP BE Pri
!#2 N3072 P1725 QWST 5 0x40800084 FP BE Pri
!#2 N3073 P1726 LD 6 -1 Int BE Pri
!#2 N3074 P1727 LD 14 -1 Int BE Pri
!#2 N3077 P1729 QWST 10 0x40800085 FP BE Pri
!#2 N3078 P1729 QWST 11 0x40800086 FP BE Pri
!#2 N3079 P1730 DWLD 9 -1,0x0 Int BE Pri
!#2 N3080 P1730 CASX 9 -1,0x0 N3079 0x100003a Int BE Pri
!#2 N3082 P1732 LD 11 -1 Int LE Pri
!#2 N3083 P1733 LD 7 -1 Int BE Pri
!#2 N3084 P1734 ST 7 0x40800087 FP BE Pri
!#2 N3085 P1735 DWLD 13 -1 FP BE Pri
!#2 N3086 P1736 QWST 2 0x40800088 FP BE Pri
!#2 N3087 P1736 QWST 3 0x40800089 FP BE Pri
!#2 N3088 P1737 DWST 11 0x4080008a FP BE Pri
!#2 N3096 P1742 DWLD 7 -1,0x0 Int BE Pri
!#2 N3097 P1742 CASX 7 -1,0x0 N3096 0x100003b Int BE Pri
!#2 N3098 P1742 DWLD 7 -1,0x0 Int BE Pri
!#2 N3099 P1742 CASX 7 -1,0x0 N3098 0x100003c Int BE Pri
!#2 N3100 P1743 LD 8 -1 Int BE Pri
!#2 N3101 P1744 BSTC 12 0x4080008b FP BE Pri
!#2 N3102 P1744 BSTC 13 0x4080008c FP BE Pri
!#2 N3103 P1745 LD 3 -1 Int BE Pri
!#2 N3104 P1743 LD 8 -1 Int BE Pri
!#2 N3105 P1744 BSTC 12 0x4080008d FP BE Pri
!#2 N3106 P1744 BSTC 13 0x4080008e FP BE Pri
!#2 N3107 P1745 LD 3 -1 Int BE Pri
!#2 N3108 P1746 DWST 5 0x100003d Int BE Pri
!#2 N3109 P1747 ST 4 0x100003e Int BE Pri
!#2 N3110 P1748 SWAP 2 0xffffffff 0x100003f Int BE Pri
!#2 N3111 P1749 LD 8 -1 Int BE Pri
!#2 N3112 P1750 LD 9 -1 NF Int BE Pri
!#2 N3114 P1752 LD 13 -1 Int BE Pri
!#2 N3115 P1750 LD 9 -1 NF Int BE Pri
!#2 N3117 P1752 LD 13 -1 Int BE Pri
!#2 N3118 P1753 DWST 5 0x1000040 Int BE Pri
!#2 N3119 P1753 DWST 5 0x1000041 Int BE Pri
!#2 N3121 P1755 ST 9 0x1000042 Int BE Pri
!#2 N3123 P1755 ST 9 0x1000043 Int BE Pri
!#2 N3127 P1758 LD 6 -1 Int BE Pri
!#2 N3128 P1759 SWAP 14 0xffffffff 0x1000044 Int BE Pri
!#2 N3129 P1758 LD 6 -1 Int BE Pri
!#2 N3130 P1759 SWAP 14 0xffffffff 0x1000045 Int BE Pri
!#2 N3131 P1760 LD 15 -1 NF FP BE Pri
!#2 N3133 P1760 LD 15 -1 NF FP BE Pri
!#2 N3135 P1762 QWST 4 0x4080008f FP BE Pri
!#2 N3136 P1762 QWST 5 0x40800090 FP BE Pri
!#2 N3137 P1763 BLD 10 -1 FP BE Pri
!#2 N3138 P1763 BLD 11 -1 FP BE Pri
!#2 N3139 P1763 BLD 10 -1 FP BE Pri
!#2 N3140 P1763 BLD 11 -1 FP BE Pri
!#2 N3141 P1764 BSTC 6 0x40800091 FP BE Pri
!#2 N3142 P1764 BSTC 7 0x40800092 FP BE Pri
!#2 N3145 P1766 QWLD 4 -1 FP BE Pri
!#2 N3146 P1766 QWLD 5 -1 FP BE Pri
!#2 N3148 P1768 LD 14 -1 FP BE Pri
!#2 N3149 P1769 BLD 0 -1 FP BE Pri
!#2 N3150 P1769 BLD 1 -1 FP BE Pri
!#2 N3151 P1770 LD 5 -1 Int BE Pri
!#2 N3152 P1771 LD 11 -1 Int BE Pri
!#2 N3154 P1773 BSTC 0 0x40800093 FP BE Pri
!#2 N3155 P1773 BSTC 1 0x40800094 FP BE Pri
!#2 N3156 P1774 LD 3 -1 FP BE Pri
!#2 N3157 P1775 LD 3 -1 FP BE Pri
!#2 N3158 P1774 LD 3 -1 FP BE Pri
!#2 N3159 P1775 LD 3 -1 FP BE Pri
!#2 N3160 P1776 BLD 6 -1 FP BE Pri
!#2 N3161 P1776 BLD 7 -1 FP BE Pri
!#2 N3162 P1776 BLD 6 -1 FP BE Pri
!#2 N3163 P1776 BLD 7 -1 FP BE Pri
!#2 N3164 P1777 LD 3 -1 FP BE Pri
!#2 N3165 P1778 MEMBAR
!#2 N3169 P1781 LD 11 -1 Int BE Pri
!#2 N3170 P1781 CAS 11 -1 N3169 0x1000046 Int BE Pri
!#2 N3171 P1782 LD 6 -1 Int BE Pri
!#2 N3173 P1784 LD 14 -1 Int LE Pri
!#2 N3174 P1785 QWST 12 0x40800095 FP BE Pri
!#2 N3175 P1785 QWST 13 0x40800096 FP BE Pri
!#2 N3176 P1786 BST 6 0x40800097 FP BE Pri
!#2 N3177 P1786 BST 7 0x40800098 FP BE Pri
!#2 N3178 P1785 QWST 12 0x40800099 FP BE Pri
!#2 N3179 P1785 QWST 13 0x4080009a FP BE Pri
!#2 N3180 P1786 BST 6 0x4080009b FP BE Pri
!#2 N3181 P1786 BST 7 0x4080009c FP BE Pri
!#2 N3182 P1787 LD 14 -1 Int BE Pri
!#2 N3184 P1789 LD 15 -1 Int BE Pri
!#2 N3185 P1787 LD 14 -1 Int BE Pri
!#2 N3187 P1789 LD 15 -1 Int BE Pri
!#2 N3188 P1790 LD 1 -1 NF Int BE Pri
!#2 N3189 P1791 LD 5 -1 Int BE Pri
!#2 N3190 P1792 BST 4 0x4080009d FP BE Pri
!#2 N3191 P1792 BST 5 0x4080009e FP BE Pri
!#2 N3192 P1793 QWST 0 0x4080009f FP BE Pri
!#2 N3193 P1793 QWST 1 0x408000a0 FP BE Pri
!#2 N3194 P1792 BST 4 0x408000a1 FP BE Pri
!#2 N3195 P1792 BST 5 0x408000a2 FP BE Pri
!#2 N3196 P1793 QWST 0 0x408000a3 FP BE Pri
!#2 N3197 P1793 QWST 1 0x408000a4 FP BE Pri
!#2 N3198 P1794 LD 1 -1 FP BE Pri
!#2 N3199 P1794 LD 1 -1 FP BE Pri
!#2 N3200 P1795 LD 6 -1 Int BE Pri
!#2 N3201 P1796 LD 1 -1 Int BE Pri
!#2 N3202 P1795 LD 6 -1 Int BE Pri
!#2 N3203 P1796 LD 1 -1 Int BE Pri
!#2 N3204 P1797 BLD 10 -1 FP BE Pri
!#2 N3205 P1797 BLD 11 -1 FP BE Pri
!#2 N3206 P1798 BSTC 8 0x408000a5 FP BE Pri
!#2 N3207 P1798 BSTC 9 0x408000a6 FP BE Pri
!#2 N3208 P1799 BSTC 8 0x408000a7 FP BE Pri
!#2 N3209 P1799 BSTC 9 0x408000a8 FP BE Pri
!#2 N3210 P1800 LD 4 -1 FP BE Pri
!#2 N3211 P1801 LD 1 -1 Int BE Pri
!#2 N3212 P1801 CAS 1 -1 N3211 0x1000047 Int BE Pri
!#2 N3213 P1801 LD 1 -1 Int BE Pri
!#2 N3214 P1801 CAS 1 -1 N3213 0x1000048 Int BE Pri
!#2 N3217 P1803 BST 10 0x408000a9 FP BE Pri
!#2 N3218 P1803 BST 11 0x408000aa FP BE Pri
!#2 N3219 P1804 LD 2 -1 Int BE Pri
!#2 N3220 P1805 LD 5 -1 Int BE Pri
!#2 N3221 P1806 LD 7 -1 Int BE Pri
!#2 N3222 P1807 LD 13 -1 Int BE Pri
!#2 N3223 P1806 LD 7 -1 Int BE Pri
!#2 N3224 P1807 LD 13 -1 Int BE Pri
!#2 N3225 P1808 LD 3 -1 FP BE Pri
!#2 N3226 P1808 LD 3 -1 FP BE Pri
!#2 N3229 P1810 LD 7 -1 FP BE Pri
!#2 N3231 P1812 LD 13 -1 Int BE Pri
!#2 N3232 P1813 LD 4 -1 Int BE Pri
!#2 N3233 P1814 DWLD 9 -1 Int BE Pri
!#2 N3234 P1815 ST 3 0x1000049 Int BE Pri
!#2 N3235 P1816 LD 5 -1 NF Int BE Pri
!#2 N3236 P1814 DWLD 9 -1 Int BE Pri
!#2 N3237 P1815 ST 3 0x100004a Int BE Pri
!#2 N3238 P1816 LD 5 -1 NF Int BE Pri
!#2 N3239 P1817 BST 6 0x408000ab FP BE Pri
!#2 N3240 P1817 BST 7 0x408000ac FP BE Pri
!#2 N3242 P1819 QWLD 4 -1 FP BE Pri
!#2 N3243 P1819 QWLD 5 -1 FP BE Pri
!#2 N3244 P1819 QWLD 4 -1 FP BE Pri
!#2 N3245 P1819 QWLD 5 -1 FP BE Pri
!#2 N3246 P1820 LD 9 -1 NF Fault Int BE Pri
!#2 N3247 P1821 LD 9 -1 Int BE Pri
!#2 N3248 P1822 QWST 8 0x408000ad FP BE Pri
!#2 N3249 P1822 QWST 9 0x408000ae FP BE Pri
!#2 N3250 P1822 QWST 8 0x408000af FP BE Pri
!#2 N3251 P1822 QWST 9 0x408000b0 FP BE Pri
!#2 N3252 P1823 QWST 2 0x408000b1 FP BE Pri
!#2 N3253 P1823 QWST 3 0x408000b2 FP BE Pri
!#2 N3254 P1823 QWST 2 0x408000b3 FP BE Pri
!#2 N3255 P1823 QWST 3 0x408000b4 FP BE Pri
!#2 N3257 P1825 BSTC 0 0x408000b5 FP BE Pri
!#2 N3258 P1825 BSTC 1 0x408000b6 FP BE Pri
!#2 N3260 P1825 BSTC 0 0x408000b7 FP BE Pri
!#2 N3261 P1825 BSTC 1 0x408000b8 FP BE Pri
!#2 N3262 P1826 LD 6 -1 FP BE Pri
!#2 N3263 P1827 BLD 12 -1 FP BE Pri
!#2 N3264 P1827 BLD 13 -1 FP BE Pri
!#2 N3265 P1828 BLD 12 -1 FP BE Pri
!#2 N3266 P1828 BLD 13 -1 FP BE Pri
!#2 N3267 P1827 BLD 12 -1 FP BE Pri
!#2 N3268 P1827 BLD 13 -1 FP BE Pri
!#2 N3269 P1828 BLD 12 -1 FP BE Pri
!#2 N3270 P1828 BLD 13 -1 FP BE Pri
!#2 N3271 P1829 LD 4 -1 Int BE Pri
!#2 N3272 P1830 BLD 12 -1 FP BE Pri
!#2 N3273 P1830 BLD 13 -1 FP BE Pri
!#2 N3274 P1831 LD 6 -1 Int BE Pri
!#2 N3275 P1829 LD 4 -1 Int BE Pri
!#2 N3276 P1830 BLD 12 -1 FP BE Pri
!#2 N3277 P1830 BLD 13 -1 FP BE Pri
!#2 N3278 P1831 LD 6 -1 Int BE Pri
!#2 N3279 P1832 LD 9 -1 Int BE Pri
!#2 N3280 P1833 LD 15 -1 Int BE Pri
!#2 N3281 P1834 LD 7 -1 FP BE Pri
!#2 N3282 P1834 LD 7 -1 FP BE Pri
!#2 N3283 P1835 DWLD 11 -1,0x0 Int BE Pri
!#2 N3284 P1835 CASX 11 -1,0x0 N3283 0x100004b Int BE Pri
!#2 N3285 P1835 DWLD 11 -1,0x0 Int BE Pri
!#2 N3286 P1835 CASX 11 -1,0x0 N3285 0x100004c Int BE Pri
!#2 N3288 P1837 LD 11 -1 Int BE Pri
!#2 N3289 P1838 LD 9 -1 Int BE Pri
!#2 N3291 P1837 LD 11 -1 Int BE Pri
!#2 N3292 P1838 LD 9 -1 Int BE Pri
!#2 N3293 P1839 BLD 2 -1 FP BE Pri
!#2 N3294 P1839 BLD 3 -1 FP BE Pri
!#2 N3296 P1841 LD 11 -1 FP BE Pri
!#2 N3301 P1844 BST 10 0x408000b9 FP BE Pri
!#2 N3302 P1844 BST 11 0x408000ba FP BE Pri
!#2 N3303 P1845 BST 10 0x408000bb FP BE Pri
!#2 N3304 P1845 BST 11 0x408000bc FP BE Pri
!#2 N3305 P1846 BLD 8 -1 FP BE Pri
!#2 N3306 P1846 BLD 9 -1 FP BE Pri
!#2 N3307 P1846 BLD 8 -1 FP BE Pri
!#2 N3308 P1846 BLD 9 -1 FP BE Pri
!#2 N3313 P1849 QWST 2 0x408000bd FP BE Pri
!#2 N3314 P1849 QWST 3 0x408000be FP BE Pri
!#2 N3316 P1849 QWST 2 0x408000bf FP BE Pri
!#2 N3317 P1849 QWST 3 0x408000c0 FP BE Pri
!#2 N3319 P1851 LD 2 -1 FP BE Pri
!#2 N3320 P1852 BSTC 12 0x408000c1 FP BE Pri
!#2 N3321 P1852 BSTC 13 0x408000c2 FP BE Pri
!#2 N3322 P1853 LD 9 -1 Int BE Pri
!#2 N3323 P1854 LD 3 -1 Int BE Pri
!#2 N3324 P1853 LD 9 -1 Int BE Pri
!#2 N3325 P1854 LD 3 -1 Int BE Pri
!#2 N3326 P1855 LD 3 -1 Int BE Pri
!#2 N3327 P1856 LD 8 -1 Int BE Pri
!#2 N3328 P1857 DWLD 1 -1 Int BE Pri
!#2 N3329 P1858 LD 8 -1 FP BE Pri
!#2 N3330 P1859 LD 7 -1 Int BE Pri
!#2 N3331 P1860 LD 12 -1 FP BE Pri
!#2 N3332 P1860 LD 12 -1 FP BE Pri
!#2 N3334 P1862 QWLD 2 -1 FP BE Pri
!#2 N3335 P1862 QWLD 3 -1 FP BE Pri
!#2 N3336 P1863 DWLD 13 -1 Int BE Pri
!#2 N3337 P1864 LD 14 -1 Int BE Pri
!#2 N3338 P1863 DWLD 13 -1 Int BE Pri
!#2 N3339 P1864 LD 14 -1 Int BE Pri
!#2 N3340 P1865 LD 8 -1 NF FP BE Pri
!#2 N3341 P1865 LD 8 -1 NF FP BE Pri
!#2 N3342 P1866 BLD 14 -1 FP BE Pri
!#2 N3343 P1866 BLD 15 -1 FP BE Pri
!#2 N3344 P1866 BLD 14 -1 FP BE Pri
!#2 N3345 P1866 BLD 15 -1 FP BE Pri
!#2 N3348 P1868 LD 15 -1 FP BE Pri
!#2 N3349 P1869 LD 1 -1 Int BE Pri
!#2 N3350 P1870 LD 13 -1 Int BE Pri
!#2 N3351 P1871 BSTC 8 0x408000c3 FP BE Pri
!#2 N3352 P1871 BSTC 9 0x408000c4 FP BE Pri
!#2 N3353 P1871 BSTC 8 0x408000c5 FP BE Pri
!#2 N3354 P1871 BSTC 9 0x408000c6 FP BE Pri
!#2 N3355 P1872 LD 0 -1 NF Int BE Pri
!#2 N3356 P1873 SWAP 3 0xffffffff 0x100004d Int LE Pri
!#2 N3357 P1874 LD 14 -1 FP BE Pri
!#2 N3358 P1875 LD 2 -1 FP BE Pri
!#2 N3359 P1874 LD 14 -1 FP BE Pri
!#2 N3360 P1875 LD 2 -1 FP BE Pri
!#2 N3361 P1876 LD 0 -1 FP BE Pri
!#2 N3362 P1876 LD 0 -1 FP BE Pri
!#2 N3363 P1877 LD 2 -1 FP BE Pri
!#2 N3364 P1877 LD 2 -1 FP BE Pri
!#2 N3365 P1878 LD 5 -1 FP BE Pri
!#2 N3366 P1878 LD 5 -1 FP BE Pri
!#2 N3367 P1879 LD 3 -1 FP BE Pri
!#2 N3368 P1880 BLD 4 -1 FP BE Pri
!#2 N3369 P1880 BLD 5 -1 FP BE Pri
!#2 N3371 P1880 BLD 4 -1 FP BE Pri
!#2 N3372 P1880 BLD 5 -1 FP BE Pri
!#2 N3374 P1882 SWAP 6 0xffffffff 0x100004e Int BE Pri
!#2 N3375 P1883 DWST 3 0x408000c7 FP BE Pri
!#2 N3376 P1884 LD 15 -1 Int BE Pri
!#2 N3377 P1885 LD 8 -1 Int BE Pri
!#2 N3378 P1886 LD 9 -1 Int BE Pri
!#2 N3379 P1887 LD 3 -1 FP BE Pri
!#2 N3380 P1888 BSTC 4 0x408000c8 FP BE Pri
!#2 N3381 P1888 BSTC 5 0x408000c9 FP BE Pri
!#2 N3383 P1890 DWLD 3 -1 FP BE Pri
!#2 N3384 P1891 DWLD 14 -1 FP BE Pri
!#2 N3385 P1892 LD 14 -1 Int BE Pri
!#2 N3386 P1893 LD 4 -1 Int BE Pri
!#2 N3387 P1891 DWLD 14 -1 FP BE Pri
!#2 N3388 P1892 LD 14 -1 Int BE Pri
!#2 N3389 P1893 LD 4 -1 Int BE Pri
!#2 N3390 P1894 LD 11 -1 NF FP BE Pri
!#2 N3391 P1895 ST 12 0x408000ca FP BE Pri
!#2 N3392 P1896 MEMBAR
!#2 N3393 P1895 ST 12 0x408000cb FP BE Pri
!#2 N3394 P1896 MEMBAR
!#2 N3395 P1897 QWST 10 0x408000cc FP BE Pri
!#2 N3396 P1897 QWST 11 0x408000cd FP BE Pri
!#2 N3397 P1897 QWST 10 0x408000ce FP BE Pri
!#2 N3398 P1897 QWST 11 0x408000cf FP BE Pri
!#2 N3401 P1899 LD 11 -1 FP BE Pri
!#2 N3402 P1899 LD 11 -1 FP BE Pri
!#2 N3403 P1900 DWLD 4 -1,0x0 Int BE Pri
!#2 N3404 P1900 CASX 4 -1,0x0 N3403 0x100004f Int BE Pri
!#2 N3407 P1903 LD 6 -1 Int BE Pri
!#2 N3408 P1904 LD 15 -1 Int BE Pri
!#2 N3409 P1905 DWLD 8 -1,0x0 Int BE Pri
!#2 N3410 P1905 CASX 8 -1,0x0 N3409 0x1000050 Int BE Pri
!#2 N3411 P1905 DWLD 8 -1,0x0 Int BE Pri
!#2 N3412 P1905 CASX 8 -1,0x0 N3411 0x1000051 Int BE Pri
!#2 N3413 P1906 QWLD 14 -1 FP BE Pri
!#2 N3414 P1906 QWLD 15 -1 FP BE Pri
!#2 N3418 P1909 BST 10 0x408000d0 FP BE Pri
!#2 N3419 P1909 BST 11 0x408000d1 FP BE Pri
!#2 N3420 P1910 QWLD 0 -1 FP BE Pri
!#2 N3421 P1910 QWLD 1 -1 FP BE Pri
!#2 N3422 P1911 DWLD 3 -1 Int BE Pri
!#2 N3423 P1912 BSTC 2 0x408000d2 FP BE Pri
!#2 N3424 P1912 BSTC 3 0x408000d3 FP BE Pri
!#2 N3425 P1913 LD 7 -1 Int BE Pri
!#2 N3426 P1911 DWLD 3 -1 Int BE Pri
!#2 N3427 P1912 BSTC 2 0x408000d4 FP BE Pri
!#2 N3428 P1912 BSTC 3 0x408000d5 FP BE Pri
!#2 N3429 P1913 LD 7 -1 Int BE Pri
!#2 N3430 P1914 BSTC 10 0x408000d6 FP BE Pri
!#2 N3431 P1914 BSTC 11 0x408000d7 FP BE Pri
!#2 N3432 P1915 QWLD 6 -1 FP BE Pri
!#2 N3433 P1915 QWLD 7 -1 FP BE Pri
!#2 N3434 P1916 DWLD 1 -1 NF Fault FP BE Pri
!#2 N3435 P1916 DWLD 1 -1 NF Fault FP BE Pri
!#2 N3436 P1917 LD 11 -1 FP BE Pri
!#2 N3438 P1917 LD 11 -1 FP BE Pri
!#2 N3440 P1919 BST 8 0x408000d8 FP BE Pri
!#2 N3441 P1919 BST 9 0x408000d9 FP BE Pri
!#2 N3442 P1920 LD 10 -1 Int BE Pri
!#2 N3443 P1921 DWLD 1 -1,0x0 Int BE Pri
!#2 N3444 P1921 CASX 1 -1,0x0 N3443 0x1000052 Int BE Pri
!#2 N3445 P1922 LD 6 -1 Int BE Pri
!#2 N3446 P1923 BLD 2 -1 FP BE Pri
!#2 N3447 P1923 BLD 3 -1 FP BE Pri
!#2 N3448 P1923 BLD 2 -1 FP BE Pri
!#2 N3449 P1923 BLD 3 -1 FP BE Pri
!#2 N3450 P1924 LD 2 -1 Int BE Pri
!#2 N3451 P1925 LD 0 -1 Int BE Pri
!#2 N3452 P1925 CAS 0 -1 N3451 0x1000053 Int BE Pri
!#2 N3453 P1926 LD 10 -1 Int BE Pri
!#2 N3454 P1924 LD 2 -1 Int BE Pri
!#2 N3455 P1925 LD 0 -1 Int BE Pri
!#2 N3456 P1925 CAS 0 -1 N3455 0x1000054 Int BE Pri
!#2 N3457 P1926 LD 10 -1 Int BE Pri
!#2 N3459 P1928 LD 8 -1 Int BE Pri
!#2 N3460 P1929 LD 12 -1 Int BE Pri
!#2 N3461 P1929 CAS 12 -1 N3460 0x1000055 Int BE Pri
!#2 N3462 P1930 LD 15 -1 Int BE Pri
!#2 N3463 P1928 LD 8 -1 Int BE Pri
!#2 N3464 P1929 LD 12 -1 Int BE Pri
!#2 N3465 P1929 CAS 12 -1 N3464 0x1000056 Int BE Pri
!#2 N3466 P1930 LD 15 -1 Int BE Pri
!#2 N3467 P1931 DWLD 6 -1,0x0 Int BE Pri
!#2 N3468 P1931 CASX 6 -1,0x0 N3467 0x1000057 Int BE Pri
!#2 N3469 P1932 BST 0 0x408000da FP BE Pri
!#2 N3470 P1932 BST 1 0x408000db FP BE Pri
!#2 N3472 P1932 BST 0 0x408000dc FP BE Pri
!#2 N3473 P1932 BST 1 0x408000dd FP BE Pri
!#2 N3475 P1934 ST 12 0x1000058 Int BE Pri
!#2 N3477 P1934 ST 12 0x1000059 Int BE Pri
!#2 N3479 P1936 SWAP 15 0xffffffff 0x100005a Int BE Pri
!#2 N3481 P1938 LD 0 -1 Int BE Pri
!#2 N3482 P1939 BST 8 0x408000de FP BE Pri
!#2 N3483 P1939 BST 9 0x408000df FP BE Pri
!#2 N3485 P1939 BST 8 0x408000e0 FP BE Pri
!#2 N3486 P1939 BST 9 0x408000e1 FP BE Pri
!#2 N3488 P1941 BST 2 0x408000e2 FP BE Pri
!#2 N3489 P1941 BST 3 0x408000e3 FP BE Pri
!#2 N3490 P1942 DWST 11 0x408000e4 FP BE Pri
!#2 N3491 P1943 LD 13 -1 Int BE Pri
!#2 N3492 P1944 LD 7 -1 Int BE Pri
!#2 N3495 P1946 QWLD 0 -1 FP BE Pri
!#2 N3496 P1946 QWLD 1 -1 FP BE Pri
!#2 N3497 P1947 QWLD 12 -1 FP BE Pri
!#2 N3498 P1947 QWLD 13 -1 FP BE Pri
!#2 N3499 P1946 QWLD 0 -1 FP BE Pri
!#2 N3500 P1946 QWLD 1 -1 FP BE Pri
!#2 N3501 P1947 QWLD 12 -1 FP BE Pri
!#2 N3502 P1947 QWLD 13 -1 FP BE Pri
!#2 N3504 P1949 LD 6 -1 FP BE Pri
!#2 N3505 P1950 LD 9 -1 FP BE Pri
!#2 N3506 P1951 SWAP 9 0xffffffff 0x100005b Int BE Pri
!#2 N3507 P1952 LD 14 -1 Int BE Pri
!#2 N3508 P1953 QWLD 2 -1 FP BE Pri
!#2 N3509 P1953 QWLD 3 -1 FP BE Pri
!#2 N3510 P1953 QWLD 2 -1 FP BE Pri
!#2 N3511 P1953 QWLD 3 -1 FP BE Pri
!#2 N3512 P1954 MEMBAR
!#2 N3515 P1957 BST 8 0x408000e5 FP BE Pri
!#2 N3516 P1957 BST 9 0x408000e6 FP BE Pri
!#2 N3517 P1958 ST 6 0x100005c Int BE Pri
!#2 N3518 P1959 QWST 14 0x408000e7 FP BE Pri
!#2 N3519 P1959 QWST 15 0x408000e8 FP BE Pri
!#2 N3520 P1960 LD 4 -1 FP BE Pri
!#2 N3523 P1962 LD 11 -1 FP BE Pri
!#2 N3525 P1964 LD 14 -1 NF Int LE Pri
!#2 N3527 P1966 LD 9 -1 Int BE Pri
!#2 N3528 P1964 LD 14 -1 NF Int LE Pri
!#2 N3530 P1966 LD 9 -1 Int BE Pri
!#2 N3531 P1967 LD 12 -1 Int BE Pri
!#2 N3532 P1968 LD 8 -1 Int BE Pri
!#2 N3533 P1969 ST 12 0x408000e9 FP BE Pri
!#2 N3534 P1969 ST 12 0x408000ea FP BE Pri
!#2 N3535 P1970 BSTC 8 0x408000eb FP BE Pri
!#2 N3536 P1970 BSTC 9 0x408000ec FP BE Pri
!#2 N3538 P1970 BSTC 8 0x408000ed FP BE Pri
!#2 N3539 P1970 BSTC 9 0x408000ee FP BE Pri
!#2 N3542 P1973 BSTC 14 0x408000ef FP BE Pri
!#2 N3543 P1973 BSTC 15 0x408000f0 FP BE Pri
!#2 N3544 P1974 LD 1 -1 Int BE Pri
!#2 N3545 P1975 LD 11 -1 Int BE Pri
!#2 N3546 P1974 LD 1 -1 Int BE Pri
!#2 N3547 P1975 LD 11 -1 Int BE Pri
!#2 N3548 P1976 DWLD 10 -1,0x0 Int LE Pri
!#2 N3549 P1976 CASX 10 -1,0x0 N3548 0x100005d Int LE Pri
!#2 N3550 P1976 DWLD 10 -1,0x0 Int LE Pri
!#2 N3551 P1976 CASX 10 -1,0x0 N3550 0x100005e Int LE Pri
!#2 N3552 P1977 SWAP 13 0xffffffff 0x100005f Int BE Pri
!#2 N3553 P1978 LD 15 -1 Int LE Pri
!#2 N3554 P1977 SWAP 13 0xffffffff 0x1000060 Int BE Pri
!#2 N3555 P1978 LD 15 -1 Int LE Pri
!#2 N3558 P1981 QWLD 10 -1 FP BE Pri
!#2 N3559 P1981 QWLD 11 -1 FP BE Pri
!#2 N3561 P1983 LD 8 -1 Int BE Pri
!#2 N3562 P1984 LD 8 -1 Int BE Pri
!#2 N3564 P1983 LD 8 -1 Int BE Pri
!#2 N3565 P1984 LD 8 -1 Int BE Pri
!#2 N3566 P1985 LD 15 -1 Int LE Pri
!#2 N3567 P1986 LD 10 -1 FP BE Pri
!#2 N3568 P1987 LD 5 -1 Int BE Pri
!#2 N3569 P1988 DWST 7 0x1000061 Int BE Pri
!#2 N3571 P1990 DWST 7 0x408000f1 FP BE Pri
!#2 N3572 P1990 DWST 7 0x408000f2 FP BE Pri
!#2 N3574 P1992 LD 4 -1 Int BE Pri
!#2 N3575 P1993 LD 1 -1 Int BE Pri
!#2 N3577 P1992 LD 4 -1 Int BE Pri
!#2 N3578 P1993 LD 1 -1 Int BE Pri
!#2 N3580 P1995 QWLD 6 -1 FP BE Pri
!#2 N3581 P1995 QWLD 7 -1 FP BE Pri
!#2 N3582 P1995 QWLD 6 -1 FP BE Pri
!#2 N3583 P1995 QWLD 7 -1 FP BE Pri
!#2 N3584 P1996 LD 3 -1 NF Int BE Pri
!#2 N3585 P1997 LD 15 -1 Int BE Pri
!#2 N3587 P1999 QWST 6 0x408000f3 FP BE Pri
!#2 N3588 P1999 QWST 7 0x408000f4 FP BE Pri
!#2 N3590 P1999 QWST 6 0x408000f5 FP BE Pri
!#2 N3591 P1999 QWST 7 0x408000f6 FP BE Pri
!#2 N3592 P2000 ST 7 0x1000062 Int BE Pri
!#2 N3593 P2001 LD 15 -1 NF Int BE Pri
!#2 N3594 P2002 ST 12 0x1000063 Int BE Pri
!#2 N3595 P2003 LD 6 -1 Int BE Pri
!#2 N3596 P2001 LD 15 -1 NF Int BE Pri
!#2 N3597 P2002 ST 12 0x1000064 Int BE Pri
!#2 N3598 P2003 LD 6 -1 Int BE Pri
!#2 N3599 P2004 BST 8 0x408000f7 FP BE Pri
!#2 N3600 P2004 BST 9 0x408000f8 FP BE Pri
!#2 N3601 P2005 ST 14 0x408000f9 FP BE Pri
!#2 N3602 P2005 ST 14 0x408000fa FP BE Pri
!#2 N3603 P2006 LD 11 -1 Int BE Pri
!#2 N3605 P2008 LD 6 -1 Int BE Pri
!#2 N3606 P2009 DWST 14 0x408000fb FP BE Pri
!#2 N3607 P2010 LD 2 -1 Int BE Pri
!#2 N3608 P2011 LD 2 -1 Int BE Pri
!#2 N3609 P2009 DWST 14 0x408000fc FP BE Pri
!#2 N3610 P2010 LD 2 -1 Int BE Pri
!#2 N3611 P2011 LD 2 -1 Int BE Pri
!#2 N3612 P2012 DWST 1 0x1000065 Int BE Pri
!#2 N3613 P2013 LD 1 -1 FP BE Pri
!#2 N3614 P2012 DWST 1 0x1000066 Int BE Pri
!#2 N3615 P2013 LD 1 -1 FP BE Pri
!#2 N3616 P2014 BSTC 12 0x408000fd FP BE Pri
!#2 N3617 P2014 BSTC 13 0x408000fe FP BE Pri
!#2 N3618 P2015 SWAP 10 0xffffffff 0x1000067 Int BE Pri
!#2 N3619 P2016 LD 15 -1 Int BE Pri
!#2 N3620 P2017 LD 8 -1 Int BE Pri
!#2 N3621 P2017 CAS 8 -1 N3620 0x1000068 Int BE Pri
!#2 N3622 P2017 LD 8 -1 Int BE Pri
!#2 N3623 P2017 CAS 8 -1 N3622 0x1000069 Int BE Pri
!#2 N3624 P2018 LD 13 -1 FP BE Pri
!#2 N3625 P2019 LD 13 -1 FP BE Pri
!#2 N3626 P2018 LD 13 -1 FP BE Pri
!#2 N3627 P2019 LD 13 -1 FP BE Pri
!#2 N3628 P2020 DWST 7 0x100006a Int BE Pri
!#2 N3629 P2021 SWAP 0 0xffffffff 0x100006b Int BE Pri
!#2 N3630 P2022 LD 12 -1 FP BE Pri
!#2 N3631 P2023 LD 2 -1 Int BE Pri
!#2 N3632 P2024 MEMBAR
!#3 N3633 P2025 ST 4 0x41000001 FP BE Pri
!#3 N3634 P2025 ST 4 0x41000002 FP BE Pri
!#3 N3635 P2026 BSTC 2 0x41000003 FP BE Pri
!#3 N3636 P2026 BSTC 3 0x41000004 FP BE Pri
!#3 N3637 P2027 LD 6 -1 Int BE Pri
!#3 N3638 P2028 LD 13 -1 NF Fault Int LE Pri
!#3 N3640 P2030 SWAP 7 0xffffffff 0x1800001 Int BE Pri
!#3 N3641 P2031 LD 12 -1 Int BE Pri
!#3 N3642 P2032 BST 8 0x41000005 FP BE Pri
!#3 N3643 P2032 BST 9 0x41000006 FP BE Pri
!#3 N3644 P2032 BST 8 0x41000007 FP BE Pri
!#3 N3645 P2032 BST 9 0x41000008 FP BE Pri
!#3 N3647 P2034 LD 12 -1 FP BE Pri
!#3 N3648 P2035 LD 7 -1 FP BE Pri
!#3 N3649 P2034 LD 12 -1 FP BE Pri
!#3 N3650 P2035 LD 7 -1 FP BE Pri
!#3 N3651 P2036 DWST 15 0x1800002 Int BE Pri
!#3 N3652 P2037 LD 7 -1 Int BE Pri
!#3 N3653 P2038 LD 12 -1 NF Int BE Pri
!#3 N3654 P2036 DWST 15 0x1800003 Int BE Pri
!#3 N3655 P2037 LD 7 -1 Int BE Pri
!#3 N3656 P2038 LD 12 -1 NF Int BE Pri
!#3 N3657 P2039 LD 15 -1 Int BE Pri
!#3 N3658 P2040 LD 8 -1 Int BE Pri
!#3 N3659 P2039 LD 15 -1 Int BE Pri
!#3 N3660 P2040 LD 8 -1 Int BE Pri
!#3 N3661 P2041 DWLD 4 -1,0x0 Int BE Pri
!#3 N3662 P2041 CASX 4 -1,0x0 N3661 0x1800004 Int BE Pri
!#3 N3663 P2041 DWLD 4 -1,0x0 Int BE Pri
!#3 N3664 P2041 CASX 4 -1,0x0 N3663 0x1800005 Int BE Pri
!#3 N3665 P2042 LD 1 -1 Int BE Pri
!#3 N3666 P2042 CAS 1 -1 N3665 0x1800006 Int BE Pri
!#3 N3667 P2043 QWLD 2 -1 NF FP BE Pri
!#3 N3668 P2043 QWLD 3 -1 NF FP BE Pri
!#3 N3669 P2044 LD 4 -1 FP BE Pri
!#3 N3670 P2043 QWLD 2 -1 NF FP BE Pri
!#3 N3671 P2043 QWLD 3 -1 NF FP BE Pri
!#3 N3672 P2044 LD 4 -1 FP BE Pri
!#3 N3673 P2045 QWLD 14 -1 FP BE Pri
!#3 N3674 P2045 QWLD 15 -1 FP BE Pri
!#3 N3675 P2046 LD 10 -1 Int BE Pri
!#3 N3676 P2046 CAS 10 -1 N3675 0x1800007 Int BE Pri
!#3 N3677 P2047 LD 6 -1 Int BE Pri
!#3 N3678 P2047 CAS 6 -1 N3677 0x1800008 Int BE Pri
!#3 N3679 P2047 LD 6 -1 Int BE Pri
!#3 N3680 P2047 CAS 6 -1 N3679 0x1800009 Int BE Pri
!#3 N3682 P2049 BSTC 10 0x41000009 FP BE Pri
!#3 N3683 P2049 BSTC 11 0x4100000a FP BE Pri
!#3 N3685 P2049 BSTC 10 0x4100000b FP BE Pri
!#3 N3686 P2049 BSTC 11 0x4100000c FP BE Pri
!#3 N3688 P2051 LD 7 -1 Int BE Pri
!#3 N3689 P2052 LD 5 -1 Int BE Pri
!#3 N3691 P2051 LD 7 -1 Int BE Pri
!#3 N3692 P2052 LD 5 -1 Int BE Pri
!#3 N3693 P2053 DWLD 12 -1 Int BE Pri
!#3 N3694 P2054 LD 8 -1 Int BE Pri
!#3 N3695 P2053 DWLD 12 -1 Int BE Pri
!#3 N3696 P2054 LD 8 -1 Int BE Pri
!#3 N3699 P2056 LD 4 -1 Int BE Pri
!#3 N3700 P2057 LD 12 -1 Int BE Pri
!#3 N3701 P2056 LD 4 -1 Int BE Pri
!#3 N3702 P2057 LD 12 -1 Int BE Pri
!#3 N3703 P2058 BST 2 0x4100000d FP BE Pri
!#3 N3704 P2058 BST 3 0x4100000e FP BE Pri
!#3 N3705 P2059 LD 6 -1 NF Int BE Pri
!#3 N3706 P2060 LD 3 -1 Int BE Pri
!#3 N3707 P2058 BST 2 0x4100000f FP BE Pri
!#3 N3708 P2058 BST 3 0x41000010 FP BE Pri
!#3 N3709 P2059 LD 6 -1 NF Int BE Pri
!#3 N3710 P2060 LD 3 -1 Int BE Pri
!#3 N3711 P2061 BSTC 0 0x41000011 FP BE Pri
!#3 N3712 P2061 BSTC 1 0x41000012 FP BE Pri
!#3 N3713 P2061 BSTC 0 0x41000013 FP BE Pri
!#3 N3714 P2061 BSTC 1 0x41000014 FP BE Pri
!#3 N3715 P2062 LD 8 -1 Int BE Pri
!#3 N3716 P2063 LD 1 -1 NF Int LE Pri
!#3 N3717 P2064 LD 9 -1 Int BE Pri
!#3 N3718 P2065 BST 6 0x41000015 FP BE Pri
!#3 N3719 P2065 BST 7 0x41000016 FP BE Pri
!#3 N3720 P2066 LD 12 -1 Int BE Pri
!#3 N3721 P2064 LD 9 -1 Int BE Pri
!#3 N3722 P2065 BST 6 0x41000017 FP BE Pri
!#3 N3723 P2065 BST 7 0x41000018 FP BE Pri
!#3 N3724 P2066 LD 12 -1 Int BE Pri
!#3 N3725 P2067 BLD 6 -1 FP BE Pri
!#3 N3726 P2067 BLD 7 -1 FP BE Pri
!#3 N3728 P2069 LD 4 -1 Int BE Pri
!#3 N3729 P2070 LD 4 -1 Int BE Pri
!#3 N3731 P2069 LD 4 -1 Int BE Pri
!#3 N3732 P2070 LD 4 -1 Int BE Pri
!#3 N3735 P2072 DWLD 14 -1,0x0 Int BE Pri
!#3 N3736 P2072 CASX 14 -1,0x0 N3735 0x180000a Int BE Pri
!#3 N3739 P2074 SWAP 4 0xffffffff 0x180000b Int BE Pri
!#3 N3740 P2075 LD 3 -1 Int BE Pri
!#3 N3741 P2076 DWLD 8 -1,0x0 Int BE Pri
!#3 N3742 P2076 CASX 8 -1,0x0 N3741 0x180000c Int BE Pri
!#3 N3743 P2077 DWLD 15 -1 FP BE Pri
!#3 N3744 P2076 DWLD 8 -1,0x0 Int BE Pri
!#3 N3745 P2076 CASX 8 -1,0x0 N3744 0x180000d Int BE Pri
!#3 N3746 P2077 DWLD 15 -1 FP BE Pri
!#3 N3748 P2079 LD 8 -1 NF Fault FP BE Pri
!#3 N3749 P2080 LD 0 -1 FP BE Pri
!#3 N3750 P2079 LD 8 -1 NF Fault FP BE Pri
!#3 N3751 P2080 LD 0 -1 FP BE Pri
!#3 N3754 P2083 LD 12 -1 Int BE Pri
!#3 N3755 P2084 LD 12 -1 FP BE Pri
!#3 N3756 P2085 LD 3 -1 Int BE Pri
!#3 N3757 P2086 ST 0 0x41000019 FP BE Pri
!#3 N3758 P2086 ST 0 0x4100001a FP BE Pri
!#3 N3761 P2088 LD 7 -1 Int LE Pri
!#3 N3762 P2089 LD 1 -1 Int BE Pri
!#3 N3763 P2088 LD 7 -1 Int LE Pri
!#3 N3764 P2089 LD 1 -1 Int BE Pri
!#3 N3765 P2090 LD 14 -1 Int BE Pri
!#3 N3766 P2091 LD 15 -1 Int BE Pri
!#3 N3767 P2092 LD 12 -1 Int BE Pri
!#3 N3768 P2093 LD 12 -1 Int BE Pri
!#3 N3769 P2092 LD 12 -1 Int BE Pri
!#3 N3770 P2093 LD 12 -1 Int BE Pri
!#3 N3771 P2094 LD 15 -1 FP BE Pri
!#3 N3772 P2095 LD 9 -1 FP BE Pri
!#3 N3773 P2094 LD 15 -1 FP BE Pri
!#3 N3774 P2095 LD 9 -1 FP BE Pri
!#3 N3775 P2096 SWAP 15 0xffffffff 0x180000e Int BE Pri
!#3 N3776 P2097 LD 1 -1 Int BE Pri
!#3 N3777 P2096 SWAP 15 0xffffffff 0x180000f Int BE Pri
!#3 N3778 P2097 LD 1 -1 Int BE Pri
!#3 N3779 P2098 BLD 6 -1 FP BE Pri
!#3 N3780 P2098 BLD 7 -1 FP BE Pri
!#3 N3781 P2099 DWST 5 0x4100001b FP BE Pri
!#3 N3782 P2098 BLD 6 -1 FP BE Pri
!#3 N3783 P2098 BLD 7 -1 FP BE Pri
!#3 N3784 P2099 DWST 5 0x4100001c FP BE Pri
!#3 N3785 P2100 LD 5 -1 Int BE Pri
!#3 N3786 P2100 CAS 5 -1 N3785 0x1800010 Int BE Pri
!#3 N3787 P2100 LD 5 -1 Int BE Pri
!#3 N3788 P2100 CAS 5 -1 N3787 0x1800011 Int BE Pri
!#3 N3790 P2102 QWLD 8 -1 FP BE Pri
!#3 N3791 P2102 QWLD 9 -1 FP BE Pri
!#3 N3793 P2104 DWLD 11 -1,0x0 Int BE Pri
!#3 N3794 P2104 CASX 11 -1,0x0 N3793 0x1800012 Int BE Pri
!#3 N3795 P2105 QWST 8 0x4100001d FP BE Pri
!#3 N3796 P2105 QWST 9 0x4100001e FP BE Pri
!#3 N3797 P2106 QWST 2 0x4100001f FP BE Pri
!#3 N3798 P2106 QWST 3 0x41000020 FP BE Pri
!#3 N3799 P2107 LD 11 -1 FP BE Pri
!#3 N3800 P2108 LD 2 -1 Int BE Pri
!#3 N3801 P2108 CAS 2 -1 N3800 0x1800013 Int BE Pri
!#3 N3802 P2109 DWLD 5 -1,0x0 Int BE Pri
!#3 N3803 P2109 CASX 5 -1,0x0 N3802 0x1800014 Int BE Pri
!#3 N3806 P2111 LD 10 -1 FP BE Pri
!#3 N3807 P2111 LD 10 -1 FP BE Pri
!#3 N3808 P2112 BLD 2 -1 FP BE Pri
!#3 N3809 P2112 BLD 3 -1 FP BE Pri
!#3 N3811 P2114 LD 4 -1 NF Int BE Pri
!#3 N3812 P2115 LD 0 -1 Int BE Pri
!#3 N3813 P2116 LD 3 -1 Int BE Pri
!#3 N3814 P2117 LD 9 -1 Int BE Pri
!#3 N3815 P2116 LD 3 -1 Int BE Pri
!#3 N3816 P2117 LD 9 -1 Int BE Pri
!#3 N3817 P2118 LD 8 -1 Int BE Pri
!#3 N3818 P2119 LD 8 -1 Int BE Pri
!#3 N3819 P2118 LD 8 -1 Int BE Pri
!#3 N3820 P2119 LD 8 -1 Int BE Pri
!#3 N3825 P2122 LD 7 -1 Int BE Pri
!#3 N3827 P2124 LD 0 -1 Int BE Pri
!#3 N3829 P2126 LD 4 -1 Int LE Pri
!#3 N3830 P2127 LD 11 -1 Int BE Pri
!#3 N3831 P2128 LD 11 -1 Int BE Pri
!#3 N3832 P2129 LD 12 -1 Int BE Pri
!#3 N3833 P2128 LD 11 -1 Int BE Pri
!#3 N3834 P2129 LD 12 -1 Int BE Pri
!#3 N3835 P2130 LD 4 -1 FP BE Pri
!#3 N3838 P2133 LD 13 -1 Int BE Pri
!#3 N3839 P2134 LD 6 -1 Int BE Pri
!#3 N3841 P2133 LD 13 -1 Int BE Pri
!#3 N3842 P2134 LD 6 -1 Int BE Pri
!#3 N3846 P2137 ST 14 0x41000021 FP BE Pri
!#3 N3847 P2138 QWST 10 0x41000022 FP BE Pri
!#3 N3848 P2138 QWST 11 0x41000023 FP BE Pri
!#3 N3850 P2138 QWST 10 0x41000024 FP BE Pri
!#3 N3851 P2138 QWST 11 0x41000025 FP BE Pri
!#3 N3853 P2140 DWLD 8 -1 NF Int BE Pri
!#3 N3854 P2141 MEMBAR
!#3 N3855 P2142 LD 4 -1 Int BE Pri
!#3 N3857 P2144 LD 9 -1 Int BE Pri
!#3 N3858 P2145 LD 10 -1 Int BE Pri
!#3 N3859 P2146 DWST 2 0x1800015 Int BE Pri
!#3 N3860 P2147 LD 15 -1 Int BE Pri
!#3 N3861 P2148 LD 3 -1 Int BE Pri
!#3 N3862 P2149 LD 12 -1 FP BE Pri
!#3 N3863 P2150 QWLD 4 -1 FP BE Pri
!#3 N3864 P2150 QWLD 5 -1 FP BE Pri
!#3 N3870 P2155 BST 4 0x41000026 FP BE Pri
!#3 N3871 P2155 BST 5 0x41000027 FP BE Pri
!#3 N3873 P2155 BST 4 0x41000028 FP BE Pri
!#3 N3874 P2155 BST 5 0x41000029 FP BE Pri
!#3 N3876 P2157 DWLD 4 -1,0x0 Int BE Pri
!#3 N3877 P2157 CASX 4 -1,0x0 N3876 0x1800016 Int BE Pri
!#3 N3879 P2157 DWLD 4 -1,0x0 Int BE Pri
!#3 N3880 P2157 CASX 4 -1,0x0 N3879 0x1800017 Int BE Pri
!#3 N3881 P2158 DWLD 11 -1,0x0 Int BE Pri
!#3 N3882 P2158 CASX 11 -1,0x0 N3881 0x1800018 Int BE Pri
!#3 N3883 P2159 LD 6 -1 FP BE Pri
!#3 N3885 P2161 BSTC 6 0x4100002a FP BE Pri
!#3 N3886 P2161 BSTC 7 0x4100002b FP BE Pri
!#3 N3888 P2163 DWST 2 0x4100002c FP BE Pri
!#3 N3890 P2163 DWST 2 0x4100002d FP BE Pri
!#3 N3891 P2164 LD 12 -1 Int BE Pri
!#3 N3892 P2165 LD 15 -1 Int BE Pri
!#3 N3893 P2166 LD 5 -1 Int BE Pri
!#3 N3894 P2167 LD 10 -1 FP BE Pri
!#3 N3895 P2168 LD 4 -1 Int BE Pri
!#3 N3896 P2169 LD 8 -1 FP BE Pri
!#3 N3897 P2170 LD 15 -1 NF FP BE Pri
!#3 N3898 P2171 LD 5 -1 FP BE Pri
!#3 N3899 P2172 SWAP 4 0xffffffff 0x1800019 Int BE Pri
!#3 N3900 P2173 LD 10 -1 NF Int BE Pri
!#3 N3903 P2175 QWST 0 0x4100002e FP BE Pri
!#3 N3904 P2175 QWST 1 0x4100002f FP BE Pri
!#3 N3905 P2176 DWLD 15 -1 FP BE Pri
!#3 N3906 P2175 QWST 0 0x41000030 FP BE Pri
!#3 N3907 P2175 QWST 1 0x41000031 FP BE Pri
!#3 N3908 P2176 DWLD 15 -1 FP BE Pri
!#3 N3909 P2177 LD 0 -1 Int BE Pri
!#3 N3911 P2179 LD 0 -1 Int BE Pri
!#3 N3912 P2177 LD 0 -1 Int BE Pri
!#3 N3914 P2179 LD 0 -1 Int BE Pri
!#3 N3915 P2180 BLD 12 -1 FP BE Pri
!#3 N3916 P2180 BLD 13 -1 FP BE Pri
!#3 N3917 P2181 BSTC 8 0x41000032 FP BE Pri
!#3 N3918 P2181 BSTC 9 0x41000033 FP BE Pri
!#3 N3919 P2182 BLD 14 -1 FP BE Pri
!#3 N3920 P2182 BLD 15 -1 FP BE Pri
!#3 N3921 P2183 DWLD 14 -1,0x0 Int BE Pri
!#3 N3922 P2183 CASX 14 -1,0x0 N3921 0x180001a Int BE Pri
!#3 N3923 P2184 LD 12 -1 FP BE Pri
!#3 N3924 P2184 LD 12 -1 FP BE Pri
!#3 N3925 P2185 LD 14 -1 Int BE Pri
!#3 N3926 P2186 BSTC 4 0x41000034 FP BE Pri
!#3 N3927 P2186 BSTC 5 0x41000035 FP BE Pri
!#3 N3928 P2187 LD 9 -1 Int BE Pri
!#3 N3929 P2188 SWAP 8 0xffffffff 0x180001b Int BE Pri
!#3 N3930 P2189 LD 5 -1 NF Int BE Pri
!#3 N3931 P2188 SWAP 8 0xffffffff 0x180001c Int BE Pri
!#3 N3932 P2189 LD 5 -1 NF Int BE Pri
!#3 N3934 P2191 LD 1 -1 Int BE Pri
!#3 N3935 P2191 CAS 1 -1 N3934 0x180001d Int BE Pri
!#3 N3937 P2193 LD 13 -1 Int BE Pri
!#3 N3938 P2193 CAS 13 -1 N3937 0x180001e Int BE Pri
!#3 N3940 P2195 DWLD 11 -1 NF Int BE Pri
!#3 N3941 P2196 LD 6 -1 Int BE Pri
!#3 N3943 P2195 DWLD 11 -1 NF Int BE Pri
!#3 N3944 P2196 LD 6 -1 Int BE Pri
!#3 N3945 P2197 LD 4 -1 Int BE Pri
!#3 N3946 P2198 LD 14 -1 Int BE Pri
!#3 N3947 P2197 LD 4 -1 Int BE Pri
!#3 N3948 P2198 LD 14 -1 Int BE Pri
!#3 N3949 P2199 LD 5 -1 Int BE Pri
!#3 N3950 P2200 DWLD 9 -1,0x0 Int BE Pri
!#3 N3951 P2200 CASX 9 -1,0x0 N3950 0x180001f Int BE Pri
!#3 N3952 P2201 LD 6 -1 NF Int BE Pri
!#3 N3956 P2204 DWST 12 0x41000036 FP BE Pri
!#3 N3958 P2204 DWST 12 0x41000037 FP BE Pri
!#3 N3959 P2205 LD 1 -1 NF Int BE Pri
!#3 N3961 P2207 LD 1 -1 Int BE Pri
!#3 N3964 P2209 LD 1 -1 Int BE Pri
!#3 N3966 P2211 LD 13 -1 Int BE Pri
!#3 N3967 P2209 LD 1 -1 Int BE Pri
!#3 N3969 P2211 LD 13 -1 Int BE Pri
!#3 N3970 P2212 DWLD 5 -1,0x0 Int BE Pri
!#3 N3971 P2212 CASX 5 -1,0x0 N3970 0x1800020 Int BE Pri
!#3 N3972 P2213 SWAP 13 0xffffffff 0x1800021 Int BE Pri
!#3 N3973 P2214 LD 1 -1 Int BE Pri
!#3 N3974 P2212 DWLD 5 -1,0x0 Int BE Pri
!#3 N3975 P2212 CASX 5 -1,0x0 N3974 0x1800022 Int BE Pri
!#3 N3976 P2213 SWAP 13 0xffffffff 0x1800023 Int BE Pri
!#3 N3977 P2214 LD 1 -1 Int BE Pri
!#3 N3979 P2216 LD 14 -1 Int BE Pri
!#3 N3980 P2217 LD 12 -1 Int BE Pri
!#3 N3982 P2216 LD 14 -1 Int BE Pri
!#3 N3983 P2217 LD 12 -1 Int BE Pri
!#3 N3984 P2218 LD 13 -1 FP BE Pri
!#3 N3985 P2218 LD 13 -1 FP BE Pri
!#3 N3990 P2221 LD 15 -1 Int BE Pri
!#3 N3991 P2222 LD 4 -1 Int BE Pri
!#3 N3992 P2223 DWST 3 0x1800024 Int BE Pri
!#3 N3993 P2224 LD 15 -1 Int BE Pri
!#3 N3994 P2225 LD 5 -1 Int BE Pri
!#3 N3995 P2223 DWST 3 0x1800025 Int BE Pri
!#3 N3996 P2224 LD 15 -1 Int BE Pri
!#3 N3997 P2225 LD 5 -1 Int BE Pri
!#3 N3998 P2226 BSTC 6 0x41000038 FP BE Pri
!#3 N3999 P2226 BSTC 7 0x41000039 FP BE Pri
!#3 N4000 P2227 LD 12 -1 Int BE Pri
!#3 N4001 P2228 LD 12 -1 Int BE Pri
!#3 N4002 P2226 BSTC 6 0x4100003a FP BE Pri
!#3 N4003 P2226 BSTC 7 0x4100003b FP BE Pri
!#3 N4004 P2227 LD 12 -1 Int BE Pri
!#3 N4005 P2228 LD 12 -1 Int BE Pri
!#3 N4006 P2229 DWLD 3 -1,0x0 Int BE Pri
!#3 N4007 P2229 CASX 3 -1,0x0 N4006 0x1800026 Int BE Pri
!#3 N4010 P2231 LD 3 -1 FP BE Pri
!#3 N4011 P2232 LD 12 -1 FP BE Pri
!#3 N4012 P2233 DWLD 6 -1,0x0 Int BE Pri
!#3 N4013 P2233 CASX 6 -1,0x0 N4012 0x1800027 Int BE Pri
!#3 N4014 P2234 BST 2 0x4100003c FP BE Pri
!#3 N4015 P2234 BST 3 0x4100003d FP BE Pri
!#3 N4016 P2235 BSTC 0 0x4100003e FP BE Pri
!#3 N4017 P2235 BSTC 1 0x4100003f FP BE Pri
!#3 N4018 P2234 BST 2 0x41000040 FP BE Pri
!#3 N4019 P2234 BST 3 0x41000041 FP BE Pri
!#3 N4020 P2235 BSTC 0 0x41000042 FP BE Pri
!#3 N4021 P2235 BSTC 1 0x41000043 FP BE Pri
!#3 N4022 P2236 DWLD 7 -1,0x0 Int BE Pri
!#3 N4023 P2236 CASX 7 -1,0x0 N4022 0x1800028 Int BE Pri
!#3 N4024 P2236 DWLD 7 -1,0x0 Int BE Pri
!#3 N4025 P2236 CASX 7 -1,0x0 N4024 0x1800029 Int BE Pri
!#3 N4026 P2237 ST 10 0x180002a Int LE Pri
!#3 N4028 P2239 LD 0 -1 Int BE Pri
!#3 N4029 P2240 LD 12 -1 Int BE Pri
!#3 N4031 P2239 LD 0 -1 Int BE Pri
!#3 N4032 P2240 LD 12 -1 Int BE Pri
!#3 N4033 P2241 LD 0 -1 Int BE Pri
!#3 N4034 P2241 CAS 0 -1 N4033 0x180002b Int BE Pri
!#3 N4035 P2242 SWAP 4 0xffffffff 0x180002c Int LE Pri
!#3 N4036 P2243 LD 1 -1 Int BE Pri
!#3 N4037 P2241 LD 0 -1 Int BE Pri
!#3 N4038 P2241 CAS 0 -1 N4037 0x180002d Int BE Pri
!#3 N4039 P2242 SWAP 4 0xffffffff 0x180002e Int LE Pri
!#3 N4040 P2243 LD 1 -1 Int BE Pri
!#3 N4043 P2246 BSTC 8 0x41000044 FP BE Pri
!#3 N4044 P2246 BSTC 9 0x41000045 FP BE Pri
!#3 N4045 P2247 QWST 12 0x41000046 FP BE Pri
!#3 N4046 P2247 QWST 13 0x41000047 FP BE Pri
!#3 N4047 P2248 LD 15 -1 Int BE Pri
!#3 N4048 P2249 LD 8 -1 Int BE Pri
!#3 N4049 P2250 SWAP 7 0xffffffff 0x180002f Int BE Pri
!#3 N4050 P2251 LD 2 -1 Int LE Pri
!#3 N4051 P2250 SWAP 7 0xffffffff 0x1800030 Int BE Pri
!#3 N4052 P2251 LD 2 -1 Int LE Pri
!#3 N4053 P2252 BST 2 0x41000048 FP BE Pri
!#3 N4054 P2252 BST 3 0x41000049 FP BE Pri
!#3 N4055 P2252 BST 2 0x4100004a FP BE Pri
!#3 N4056 P2252 BST 3 0x4100004b FP BE Pri
!#3 N4057 P2253 LD 13 -1 Int BE Pri
!#3 N4058 P2254 LD 7 -1 Int BE Pri
!#3 N4059 P2253 LD 13 -1 Int BE Pri
!#3 N4060 P2254 LD 7 -1 Int BE Pri
!#3 N4061 P2255 LD 6 -1 Int BE Pri
!#3 N4062 P2256 LD 2 -1 Int BE Pri
!#3 N4063 P2257 BST 0 0x4100004c FP BE Pri
!#3 N4064 P2257 BST 1 0x4100004d FP BE Pri
!#3 N4065 P2258 QWST 6 0x4100004e FP BE Pri
!#3 N4066 P2258 QWST 7 0x4100004f FP BE Pri
!#3 N4067 P2259 LD 10 -1 Int BE Pri
!#3 N4068 P2260 LD 6 -1 Int BE Pri
!#3 N4069 P2259 LD 10 -1 Int BE Pri
!#3 N4070 P2260 LD 6 -1 Int BE Pri
!#3 N4071 P2261 DWST 1 0x1800031 Int BE Pri
!#3 N4072 P2262 BST 12 0x41000050 FP BE Pri
!#3 N4073 P2262 BST 13 0x41000051 FP BE Pri
!#3 N4074 P2261 DWST 1 0x1800032 Int BE Pri
!#3 N4075 P2262 BST 12 0x41000052 FP BE Pri
!#3 N4076 P2262 BST 13 0x41000053 FP BE Pri
!#3 N4077 P2263 DWST 6 0x41000054 FP BE Pri
!#3 N4078 P2264 DWLD 2 -1,0x0 Int BE Pri
!#3 N4079 P2264 CASX 2 -1,0x0 N4078 0x1800033 Int BE Pri
!#3 N4081 P2264 DWLD 2 -1,0x0 Int BE Pri
!#3 N4082 P2264 CASX 2 -1,0x0 N4081 0x1800034 Int BE Pri
!#3 N4084 P2266 LD 8 -1 FP BE Pri
!#3 N4085 P2266 LD 8 -1 FP BE Pri
!#3 N4086 P2267 LD 11 -1 FP BE Pri
!#3 N4088 P2267 LD 11 -1 FP BE Pri
!#3 N4092 P2270 BSTC 12 0x41000055 FP BE Pri
!#3 N4093 P2270 BSTC 13 0x41000056 FP BE Pri
!#3 N4094 P2271 LD 0 -1 Int BE Pri
!#3 N4095 P2272 LD 5 -1 Int BE Pri
!#3 N4096 P2273 DWST 1 0x1800035 Int BE Pri
!#3 N4097 P2273 DWST 1 0x1800036 Int BE Pri
!#3 N4099 P2275 LD 12 -1 Int BE Pri
!#3 N4100 P2275 CAS 12 -1 N4099 0x1800037 Int BE Pri
!#3 N4102 P2275 LD 12 -1 Int BE Pri
!#3 N4103 P2275 CAS 12 -1 N4102 0x1800038 Int BE Pri
!#3 N4104 P2276 LD 14 -1 Int BE Pri
!#3 N4105 P2277 LD 10 -1 Int BE Pri
!#3 N4106 P2276 LD 14 -1 Int BE Pri
!#3 N4107 P2277 LD 10 -1 Int BE Pri
!#3 N4110 P2279 DWST 13 0x41000057 FP BE Pri
!#3 N4112 P2281 DWST 15 0x1800039 Int BE Pri
!#3 N4113 P2281 DWST 15 0x180003a Int BE Pri
!#3 N4115 P2283 ST 9 0x180003b Int BE Pri
!#3 N4117 P2283 ST 9 0x180003c Int BE Pri
!#3 N4118 P2284 LD 3 -1 FP BE Pri
!#3 N4119 P2285 DWLD 12 -1,0x0 Int BE Pri
!#3 N4120 P2285 CASX 12 -1,0x0 N4119 0x180003d Int BE Pri
!#3 N4123 P2288 BLD 2 -1 FP BE Pri
!#3 N4124 P2288 BLD 3 -1 FP BE Pri
!#3 N4125 P2289 LD 9 -1 Int BE Pri
!#3 N4126 P2290 LD 0 -1 FP BE Pri
!#3 N4127 P2291 LD 6 -1 NF Int BE Pri
!#3 N4128 P2289 LD 9 -1 Int BE Pri
!#3 N4129 P2290 LD 0 -1 FP BE Pri
!#3 N4130 P2291 LD 6 -1 NF Int BE Pri
!#3 N4131 P2292 DWLD 7 -1 NF Int BE Pri
!#3 N4132 P2293 LD 12 -1 Int BE Pri
!#3 N4133 P2293 CAS 12 -1 N4132 0x180003e Int BE Pri
!#3 N4134 P2294 LD 7 -1 Int BE Pri
!#3 N4135 P2292 DWLD 7 -1 NF Int BE Pri
!#3 N4136 P2293 LD 12 -1 Int BE Pri
!#3 N4137 P2293 CAS 12 -1 N4136 0x180003f Int BE Pri
!#3 N4138 P2294 LD 7 -1 Int BE Pri
!#3 N4139 P2295 LD 2 -1 NF Int BE Pri
!#3 N4140 P2296 LD 0 -1 Int BE Pri
!#3 N4141 P2295 LD 2 -1 NF Int BE Pri
!#3 N4142 P2296 LD 0 -1 Int BE Pri
!#3 N4143 P2297 LD 4 -1 Int BE Pri
!#3 N4144 P2298 BLD 0 -1 FP BE Pri
!#3 N4145 P2298 BLD 1 -1 FP BE Pri
!#3 N4146 P2299 LD 6 -1 Int BE Pri
!#3 N4147 P2297 LD 4 -1 Int BE Pri
!#3 N4148 P2298 BLD 0 -1 FP BE Pri
!#3 N4149 P2298 BLD 1 -1 FP BE Pri
!#3 N4150 P2299 LD 6 -1 Int BE Pri
!#3 N4152 P2301 DWLD 7 -1 FP BE Pri
!#3 N4154 P2301 DWLD 7 -1 FP BE Pri
!#3 N4155 P2302 ST 11 0x41000058 FP BE Pri
!#3 N4158 P2305 DWLD 7 -1 FP BE Pri
!#3 N4160 P2305 DWLD 7 -1 FP BE Pri
!#3 N4163 P2307 QWST 14 0x41000059 FP BE Pri
!#3 N4164 P2307 QWST 15 0x4100005a FP BE Pri
!#3 N4166 P2309 LD 13 -1 FP BE Pri
!#3 N4167 P2309 LD 13 -1 FP BE Pri
!#3 N4169 P2311 LD 14 -1 Int BE Pri
!#3 N4170 P2312 LD 13 -1 Int BE Pri
!#3 N4172 P2311 LD 14 -1 Int BE Pri
!#3 N4173 P2312 LD 13 -1 Int BE Pri
!#3 N4174 P2313 LD 11 -1 Int BE Pri
!#3 N4175 P2314 LD 13 -1 NF FP BE Pri
!#3 N4176 P2315 LD 6 -1 NF Int BE Pri
!#3 N4177 P2316 DWST 6 0x4100005b FP BE Pri
!#3 N4178 P2317 QWLD 14 -1 FP BE Pri
!#3 N4179 P2317 QWLD 15 -1 FP BE Pri
!#3 N4180 P2316 DWST 6 0x4100005c FP BE Pri
!#3 N4181 P2317 QWLD 14 -1 FP BE Pri
!#3 N4182 P2317 QWLD 15 -1 FP BE Pri
!#3 N4183 P2318 BLD 4 -1 FP BE Pri
!#3 N4184 P2318 BLD 5 -1 FP BE Pri
!#3 N4185 P2318 BLD 4 -1 FP BE Pri
!#3 N4186 P2318 BLD 5 -1 FP BE Pri
!#3 N4187 P2319 LD 15 -1 NF FP BE Pri
!#3 N4188 P2320 LD 2 -1 Int BE Pri
!#3 N4189 P2321 LD 0 -1 Int BE Pri
!#3 N4190 P2319 LD 15 -1 NF FP BE Pri
!#3 N4191 P2320 LD 2 -1 Int BE Pri
!#3 N4192 P2321 LD 0 -1 Int BE Pri
!#3 N4193 P2322 DWLD 8 -1 FP BE Pri
!#3 N4194 P2323 LD 13 -1 FP BE Pri
!#3 N4195 P2324 DWLD 2 -1,0x0 Int BE Pri
!#3 N4196 P2324 CASX 2 -1,0x0 N4195 0x1800040 Int BE Pri
!#3 N4197 P2324 DWLD 2 -1,0x0 Int BE Pri
!#3 N4198 P2324 CASX 2 -1,0x0 N4197 0x1800041 Int BE Pri
!#3 N4200 P2326 LD 0 -1 Int BE Pri
!#3 N4201 P2327 LD 14 -1 Int BE Pri
!#3 N4202 P2328 BLD 14 -1 FP BE Pri
!#3 N4203 P2328 BLD 15 -1 FP BE Pri
!#3 N4204 P2329 DWLD 1 -1,0x0 Int BE Pri
!#3 N4205 P2329 CASX 1 -1,0x0 N4204 0x1800042 Int BE Pri
!#3 N4206 P2330 LD 15 -1 FP BE Pri
!#3 N4207 P2330 LD 15 -1 FP BE Pri
!#3 N4208 P2331 MEMBAR
!#3 N4209 P2332 LD 1 -1 Int BE Pri
!#3 N4210 P2333 LD 2 -1 Int BE Pri
!#3 N4211 P2331 MEMBAR
!#3 N4212 P2332 LD 1 -1 Int BE Pri
!#3 N4213 P2333 LD 2 -1 Int BE Pri
!#3 N4214 P2334 QWST 10 0x4100005d FP BE Pri
!#3 N4215 P2334 QWST 11 0x4100005e FP BE Pri
!#3 N4216 P2335 SWAP 5 0xffffffff 0x1800043 Int BE Pri
!#3 N4217 P2336 LD 8 -1 Int BE Pri
!#3 N4218 P2334 QWST 10 0x4100005f FP BE Pri
!#3 N4219 P2334 QWST 11 0x41000060 FP BE Pri
!#3 N4220 P2335 SWAP 5 0xffffffff 0x1800044 Int BE Pri
!#3 N4221 P2336 LD 8 -1 Int BE Pri
!#3 N4222 P2337 LD 6 -1 FP BE Pri
!#3 N4224 P2337 LD 6 -1 FP BE Pri
!#3 N4226 P2339 LD 7 -1 NF Fault Int BE Pri
!#3 N4227 P2340 LD 9 -1 Int BE Pri
!#3 N4228 P2339 LD 7 -1 NF Fault Int BE Pri
!#3 N4229 P2340 LD 9 -1 Int BE Pri
!#3 N4230 P2341 BLD 6 -1 FP BE Pri
!#3 N4231 P2341 BLD 7 -1 FP BE Pri
!#3 N4232 P2341 BLD 6 -1 FP BE Pri
!#3 N4233 P2341 BLD 7 -1 FP BE Pri
!#3 N4235 P2343 LD 11 -1 Int LE Pri
!#3 N4237 P2345 LD 3 -1 Int BE Pri
!#3 N4238 P2343 LD 11 -1 Int LE Pri
!#3 N4240 P2345 LD 3 -1 Int BE Pri
!#3 N4243 P2347 LD 1 -1 FP BE Pri
!#3 N4245 P2349 LD 15 -1 Int BE Pri
!#3 N4246 P2350 LD 15 -1 Int BE Pri
!#3 N4247 P2350 CAS 15 -1 N4246 0x1800045 Int BE Pri
!#3 N4248 P2351 LD 9 -1 NF Int BE Pri
!#3 N4249 P2349 LD 15 -1 Int BE Pri
!#3 N4250 P2350 LD 15 -1 Int BE Pri
!#3 N4251 P2350 CAS 15 -1 N4250 0x1800046 Int BE Pri
!#3 N4252 P2351 LD 9 -1 NF Int BE Pri
!#3 N4253 P2352 SWAP 13 0xffffffff 0x1800047 Int BE Pri
!#3 N4254 P2353 LD 7 -1 Int BE Pri
!#3 N4255 P2353 CAS 7 -1 N4254 0x1800048 Int BE Pri
!#3 N4256 P2354 LD 10 -1 Int LE Pri
!#3 N4257 P2355 DWLD 0 -1 FP BE Pri
!#3 N4258 P2356 DWLD 4 -1,0x0 Int BE Pri
!#3 N4259 P2356 CASX 4 -1,0x0 N4258 0x1800049 Int BE Pri
!#3 N4260 P2357 LD 0 -1 Int BE Pri
!#3 N4261 P2358 LD 0 -1 Int BE Pri
!#3 N4262 P2357 LD 0 -1 Int BE Pri
!#3 N4263 P2358 LD 0 -1 Int BE Pri
!#3 N4264 P2359 LD 10 -1 Int BE Pri
!#3 N4265 P2360 LD 6 -1 NF Int BE Pri
!#3 N4268 P2363 LD 10 -1 FP BE Pri
!#3 N4269 P2364 LD 14 -1 Int BE Pri
!#3 N4270 P2365 LD 6 -1 Int BE Pri
!#3 N4272 P2367 LD 7 -1 FP BE Pri
!#3 N4274 P2367 LD 7 -1 FP BE Pri
!#3 N4275 P2368 LD 0 -1 Int BE Pri
!#3 N4276 P2369 LD 1 -1 Int BE Pri
!#3 N4277 P2370 LD 4 -1 Int BE Pri
!#3 N4278 P2371 LD 10 -1 Int BE Pri
!#3 N4279 P2370 LD 4 -1 Int BE Pri
!#3 N4280 P2371 LD 10 -1 Int BE Pri
!#3 N4281 P2372 ST 4 0x180004a Int BE Pri
!#3 N4282 P2372 ST 4 0x180004b Int BE Pri
!#3 N4283 P2373 QWST 6 0x41000061 FP BE Pri
!#3 N4284 P2373 QWST 7 0x41000062 FP BE Pri
!#3 N4285 P2373 QWST 6 0x41000063 FP BE Pri
!#3 N4286 P2373 QWST 7 0x41000064 FP BE Pri
!#3 N4287 P2374 LD 12 -1 FP BE Pri
!#3 N4288 P2375 BLD 12 -1 FP BE Pri
!#3 N4289 P2375 BLD 13 -1 FP BE Pri
!#3 N4290 P2375 BLD 12 -1 FP BE Pri
!#3 N4291 P2375 BLD 13 -1 FP BE Pri
!#3 N4292 P2376 LD 0 -1 NF Int BE Pri
!#3 N4293 P2377 LD 7 -1 Int BE Pri
!#3 N4294 P2378 LD 12 -1 FP BE Pri
!#3 N4295 P2379 LD 15 -1 Int BE Pri
!#3 N4297 P2381 LD 11 -1 NF Fault Int BE Pri
!#3 N4298 P2382 BLD 2 -1 FP BE Pri
!#3 N4299 P2382 BLD 3 -1 FP BE Pri
!#3 N4303 P2385 LD 13 -1 FP BE Pri
!#3 N4306 P2388 DWLD 4 -1,0x0 Int BE Pri
!#3 N4307 P2388 CASX 4 -1,0x0 N4306 0x180004c Int BE Pri
!#3 N4313 P2393 QWST 2 0x41000065 FP BE Pri
!#3 N4314 P2393 QWST 3 0x41000066 FP BE Pri
!#3 N4315 P2393 QWST 2 0x41000067 FP BE Pri
!#3 N4316 P2393 QWST 3 0x41000068 FP BE Pri
!#3 N4317 P2394 LD 2 -1 Int BE Pri
!#3 N4318 P2395 LD 3 -1 Int BE Pri
!#3 N4319 P2396 LD 7 -1 FP BE Pri
!#3 N4321 P2398 DWST 6 0x41000069 FP BE Pri
!#3 N4323 P2400 ST 14 0x180004d Int BE Pri
!#3 N4325 P2400 ST 14 0x180004e Int BE Pri
!#3 N4326 P2401 LD 4 -1 Int BE Pri
!#3 N4327 P2402 LD 3 -1 Int BE Pri
!#3 N4328 P2403 LD 7 -1 Int LE Pri
!#3 N4329 P2404 LD 10 -1 Int BE Pri
!#3 N4331 P2406 BSTC 4 0x4100006a FP BE Pri
!#3 N4332 P2406 BSTC 5 0x4100006b FP BE Pri
!#3 N4334 P2406 BSTC 4 0x4100006c FP BE Pri
!#3 N4335 P2406 BSTC 5 0x4100006d FP BE Pri
!#3 N4336 P2407 LD 11 -1 FP BE Pri
!#3 N4337 P2407 LD 11 -1 FP BE Pri
!#3 N4340 P2409 LD 3 -1 FP BE Pri
!#3 N4342 P2409 LD 3 -1 FP BE Pri
!#3 N4344 P2411 LD 14 -1 FP BE Pri
!#3 N4345 P2411 LD 14 -1 FP BE Pri
!#3 N4346 P2412 DWST 2 0x180004f Int BE Pri
!#3 N4348 P2414 QWLD 12 -1 FP BE Pri
!#3 N4349 P2414 QWLD 13 -1 FP BE Pri
!#3 N4350 P2415 DWLD 9 -1,0x0 Int LE Pri
!#3 N4351 P2415 CASX 9 -1,0x0 N4350 0x1800050 Int LE Pri
!#3 N4352 P2415 DWLD 9 -1,0x0 Int LE Pri
!#3 N4353 P2415 CASX 9 -1,0x0 N4352 0x1800051 Int LE Pri
!#3 N4354 P2416 DWST 11 0x1800052 Int BE Pri
!#3 N4355 P2417 LD 2 -1 Int BE Pri
!#3 N4356 P2418 LD 1 -1 Int BE Pri
!#3 N4357 P2419 LD 6 -1 Int BE Pri
!#3 N4358 P2420 LD 1 -1 Int BE Pri
!#3 N4359 P2419 LD 6 -1 Int BE Pri
!#3 N4360 P2420 LD 1 -1 Int BE Pri
!#3 N4361 P2421 BST 8 0x4100006e FP BE Pri
!#3 N4362 P2421 BST 9 0x4100006f FP BE Pri
!#3 N4363 P2422 BST 10 0x41000070 FP BE Pri
!#3 N4364 P2422 BST 11 0x41000071 FP BE Pri
!#3 N4365 P2423 QWST 8 0x41000072 FP BE Pri
!#3 N4366 P2423 QWST 9 0x41000073 FP BE Pri
!#3 N4367 P2423 QWST 8 0x41000074 FP BE Pri
!#3 N4368 P2423 QWST 9 0x41000075 FP BE Pri
!#3 N4369 P2424 BSTC 12 0x41000076 FP BE Pri
!#3 N4370 P2424 BSTC 13 0x41000077 FP BE Pri
!#3 N4371 P2425 DWLD 13 -1 Int BE Pri
!#3 N4372 P2426 LD 6 -1 Int BE Pri
!#3 N4375 P2429 BLD 2 -1 FP BE Pri
!#3 N4376 P2429 BLD 3 -1 FP BE Pri
!#3 N4377 P2430 DWLD 11 -1,0x0 Int BE Pri
!#3 N4378 P2430 CASX 11 -1,0x0 N4377 0x1800053 Int BE Pri
!#3 N4380 P2430 DWLD 11 -1,0x0 Int BE Pri
!#3 N4381 P2430 CASX 11 -1,0x0 N4380 0x1800054 Int BE Pri
!#3 N4383 P2432 LD 8 -1 FP BE Pri
!#3 N4386 P2435 LD 12 -1 NF FP BE Pri
!#3 N4387 P2435 LD 12 -1 NF FP BE Pri
!#3 N4388 P2436 DWST 6 0x41000078 FP BE Pri
!#3 N4389 P2436 DWST 6 0x41000079 FP BE Pri
!#3 N4390 P2437 LD 10 -1 Int BE Pri
!#3 N4391 P2438 LD 1 -1 Int BE Pri
!#3 N4392 P2437 LD 10 -1 Int BE Pri
!#3 N4393 P2438 LD 1 -1 Int BE Pri
!#3 N4394 P2439 QWST 0 0x4100007a FP BE Pri
!#3 N4395 P2439 QWST 1 0x4100007b FP BE Pri
!#3 N4396 P2440 LD 5 -1 FP BE Pri
!#3 N4397 P2440 LD 5 -1 FP BE Pri
!#3 N4398 P2441 LD 0 -1 NF Int BE Pri
!#3 N4400 P2443 LD 12 -1 Int BE Pri
!#3 N4401 P2441 LD 0 -1 NF Int BE Pri
!#3 N4403 P2443 LD 12 -1 Int BE Pri
!#3 N4404 P2444 LD 5 -1 FP BE Pri
!#3 N4405 P2444 LD 5 -1 FP BE Pri
!#3 N4406 P2445 LD 10 -1 Int BE Pri
!#3 N4407 P2446 LD 8 -1 FP BE Pri
!#3 N4408 P2447 LD 12 -1 Int BE Pri
!#3 N4409 P2445 LD 10 -1 Int BE Pri
!#3 N4410 P2446 LD 8 -1 FP BE Pri
!#3 N4411 P2447 LD 12 -1 Int BE Pri
!#3 N4415 P2451 LD 10 -1 Int BE Pri
!#3 N4416 P2452 LD 4 -1 FP BE Pri
!#3 N4417 P2453 LD 1 -1 Int BE Pri
!#3 N4418 P2451 LD 10 -1 Int BE Pri
!#3 N4419 P2452 LD 4 -1 FP BE Pri
!#3 N4420 P2453 LD 1 -1 Int BE Pri
!#3 N4421 P2454 DWLD 15 -1 FP BE Pri
!#3 N4422 P2454 DWLD 15 -1 FP BE Pri
!#3 N4423 P2455 LD 7 -1 Int BE Pri
!#3 N4424 P2456 LD 0 -1 Int BE Pri
!#3 N4425 P2455 LD 7 -1 Int BE Pri
!#3 N4426 P2456 LD 0 -1 Int BE Pri
!#3 N4427 P2457 DWST 9 0x4100007c FP BE Pri
!#3 N4428 P2458 SWAP 3 0xffffffff 0x1800055 Int BE Pri
!#3 N4429 P2459 LD 12 -1 Int BE Pri
!#3 N4430 P2457 DWST 9 0x4100007d FP BE Pri
!#3 N4431 P2458 SWAP 3 0xffffffff 0x1800056 Int BE Pri
!#3 N4432 P2459 LD 12 -1 Int BE Pri
!#3 N4434 P2461 ST 3 0x4100007e FP BE Pri
!#3 N4436 P2461 ST 3 0x4100007f FP BE Pri
!#3 N4437 P2462 LD 9 -1 Int BE Pri
!#3 N4438 P2463 LD 8 -1 Int BE Pri
!#3 N4439 P2463 CAS 8 -1 N4438 0x1800057 Int BE Pri
!#3 N4440 P2464 LD 7 -1 Int BE Pri
!#3 N4441 P2462 LD 9 -1 Int BE Pri
!#3 N4442 P2463 LD 8 -1 Int BE Pri
!#3 N4443 P2463 CAS 8 -1 N4442 0x1800058 Int BE Pri
!#3 N4444 P2464 LD 7 -1 Int BE Pri
!#3 N4445 P2465 ST 4 0x1800059 Int BE Pri
!#3 N4446 P2466 LD 3 -1 FP BE Pri
!#3 N4447 P2467 DWST 6 0x180005a Int BE Pri
!#3 N4448 P2468 QWLD 8 -1 FP BE Pri
!#3 N4449 P2468 QWLD 9 -1 FP BE Pri
!#3 N4450 P2467 DWST 6 0x180005b Int BE Pri
!#3 N4451 P2468 QWLD 8 -1 FP BE Pri
!#3 N4452 P2468 QWLD 9 -1 FP BE Pri
!#3 N4453 P2469 LD 11 -1 FP BE Pri
!#3 N4454 P2470 BSTC 10 0x41000080 FP BE Pri
!#3 N4455 P2470 BSTC 11 0x41000081 FP BE Pri
!#3 N4456 P2471 DWST 14 0x180005c Int BE Pri
!#3 N4457 P2472 LD 2 -1 FP BE Pri
!#3 N4458 P2471 DWST 14 0x180005d Int BE Pri
!#3 N4459 P2472 LD 2 -1 FP BE Pri
!#3 N4464 P2475 LD 14 -1 FP BE Pri
!#3 N4469 P2478 QWLD 14 -1 NF FP BE Pri
!#3 N4470 P2478 QWLD 15 -1 NF FP BE Pri
!#3 N4471 P2479 LD 9 -1 FP BE Pri
!#3 N4472 P2480 BLD 6 -1 FP BE Pri
!#3 N4473 P2480 BLD 7 -1 FP BE Pri
!#3 N4475 P2482 LD 14 -1 NF Int BE Pri
!#3 N4476 P2483 LD 8 -1 Int BE Pri
!#3 N4477 P2482 LD 14 -1 NF Int BE Pri
!#3 N4478 P2483 LD 8 -1 Int BE Pri
!#3 N4479 P2484 LD 15 -1 FP BE Pri
!#3 N4480 P2484 LD 15 -1 FP BE Pri
!#3 N4481 P2485 BST 10 0x41000082 FP BE Pri
!#3 N4482 P2485 BST 11 0x41000083 FP BE Pri
!#3 N4484 P2485 BST 10 0x41000084 FP BE Pri
!#3 N4485 P2485 BST 11 0x41000085 FP BE Pri
!#3 N4489 P2488 DWLD 9 -1 Int BE Pri
!#3 N4490 P2489 LD 7 -1 Int BE Pri
!#3 N4491 P2488 DWLD 9 -1 Int BE Pri
!#3 N4492 P2489 LD 7 -1 Int BE Pri
!#3 N4493 P2490 LD 1 -1 Int BE Pri
!#3 N4494 P2491 LD 4 -1 Int BE Pri
!#3 N4495 P2490 LD 1 -1 Int BE Pri
!#3 N4496 P2491 LD 4 -1 Int BE Pri
!#3 N4497 P2492 DWLD 7 -1 FP BE Pri
!#3 N4498 P2493 DWLD 4 -1,0x0 Int BE Pri
!#3 N4499 P2493 CASX 4 -1,0x0 N4498 0x180005e Int BE Pri
!#3 N4500 P2492 DWLD 7 -1 FP BE Pri
!#3 N4501 P2493 DWLD 4 -1,0x0 Int BE Pri
!#3 N4502 P2493 CASX 4 -1,0x0 N4501 0x180005f Int BE Pri
!#3 N4503 P2494 LD 3 -1 Int BE Pri
!#3 N4504 P2495 LD 15 -1 Int BE Pri
!#3 N4505 P2494 LD 3 -1 Int BE Pri
!#3 N4506 P2495 LD 15 -1 Int BE Pri
!#3 N4507 P2496 DWLD 4 -1 FP BE Pri
!#3 N4512 P2500 BLD 12 -1 FP BE Pri
!#3 N4513 P2500 BLD 13 -1 FP BE Pri
!#3 N4514 P2501 LD 13 -1 Int BE Pri
!#3 N4515 P2501 CAS 13 -1 N4514 0x1800060 Int BE Pri
!#3 N4516 P2502 LD 10 -1 FP BE Pri
!#3 N4517 P2503 LD 4 -1 Int BE Pri
!#3 N4518 P2504 LD 8 -1 Int LE Pri
!#3 N4519 P2503 LD 4 -1 Int BE Pri
!#3 N4520 P2504 LD 8 -1 Int LE Pri
!#3 N4521 P2505 BLD 8 -1 FP BE Pri
!#3 N4522 P2505 BLD 9 -1 FP BE Pri
!#3 N4523 P2505 BLD 8 -1 FP BE Pri
!#3 N4524 P2505 BLD 9 -1 FP BE Pri
!#3 N4525 P2506 LD 5 -1 FP BE Pri
!#3 N4526 P2507 ST 13 0x1800061 Int BE Pri
!#3 N4527 P2508 LD 7 -1 FP BE Pri
!#3 N4528 P2507 ST 13 0x1800062 Int BE Pri
!#3 N4529 P2508 LD 7 -1 FP BE Pri
!#3 N4530 P2509 LD 13 -1 FP BE Pri
!#3 N4531 P2510 BST 0 0x41000086 FP BE Pri
!#3 N4532 P2510 BST 1 0x41000087 FP BE Pri
!#3 N4533 P2509 LD 13 -1 FP BE Pri
!#3 N4534 P2510 BST 0 0x41000088 FP BE Pri
!#3 N4535 P2510 BST 1 0x41000089 FP BE Pri
!#3 N4536 P2511 LD 3 -1 NF Fault FP BE Pri
!#3 N4537 P2512 LD 12 -1 Int LE Pri
!#3 N4538 P2512 CAS 12 -1 N4537 0x1800063 Int LE Pri
!#3 N4539 P2513 LD 4 -1 Int BE Pri
!#3 N4540 P2514 LD 0 -1 Int BE Pri
!#3 N4541 P2513 LD 4 -1 Int BE Pri
!#3 N4542 P2514 LD 0 -1 Int BE Pri
!#3 N4543 P2515 LD 13 -1 Int BE Pri
!#3 N4544 P2516 LD 9 -1 Int BE Pri
!#3 N4545 P2515 LD 13 -1 Int BE Pri
!#3 N4546 P2516 LD 9 -1 Int BE Pri
!#3 N4547 P2517 LD 7 -1 Int BE Pri
!#3 N4548 P2518 LD 15 -1 Int BE Pri
!#3 N4549 P2519 LD 2 -1 Int BE Pri
!#3 N4550 P2519 CAS 2 -1 N4549 0x1800064 Int BE Pri
!#3 N4551 P2519 LD 2 -1 Int BE Pri
!#3 N4552 P2519 CAS 2 -1 N4551 0x1800065 Int BE Pri
!#3 N4553 P2520 LD 13 -1 Int BE Pri
!#3 N4554 P2520 CAS 13 -1 N4553 0x1800066 Int BE Pri
!#3 N4555 P2521 LD 14 -1 FP BE Pri
!#3 N4556 P2522 BSTC 6 0x4100008a FP BE Pri
!#3 N4557 P2522 BSTC 7 0x4100008b FP BE Pri
!#3 N4558 P2522 BSTC 6 0x4100008c FP BE Pri
!#3 N4559 P2522 BSTC 7 0x4100008d FP BE Pri
!#3 N4560 P2523 LD 10 -1 FP BE Pri
!#3 N4561 P2524 LD 9 -1 FP BE Pri
!#3 N4562 P2525 LD 0 -1 FP BE Pri
!#3 N4563 P2526 LD 6 -1 Int BE Pri
!#3 N4564 P2526 CAS 6 -1 N4563 0x1800067 Int BE Pri
!#3 N4565 P2525 LD 0 -1 FP BE Pri
!#3 N4566 P2526 LD 6 -1 Int BE Pri
!#3 N4567 P2526 CAS 6 -1 N4566 0x1800068 Int BE Pri
!#3 N4568 P2527 LD 4 -1 FP BE Pri
!#3 N4569 P2527 LD 4 -1 FP BE Pri
!#3 N4570 P2528 LD 10 -1 FP BE Pri
!#3 N4571 P2529 BST 8 0x4100008e FP BE Pri
!#3 N4572 P2529 BST 9 0x4100008f FP BE Pri
!#3 N4573 P2530 LD 4 -1 Int BE Pri
!#3 N4574 P2530 CAS 4 -1 N4573 0x1800069 Int BE Pri
!#3 N4575 P2531 LD 0 -1 FP BE Pri
!#3 N4576 P2530 LD 4 -1 Int BE Pri
!#3 N4577 P2530 CAS 4 -1 N4576 0x180006a Int BE Pri
!#3 N4578 P2531 LD 0 -1 FP BE Pri
!#3 N4580 P2533 LD 9 -1 Int BE Pri
!#3 N4581 P2533 CAS 9 -1 N4580 0x180006b Int BE Pri
!#3 N4583 P2533 LD 9 -1 Int BE Pri
!#3 N4584 P2533 CAS 9 -1 N4583 0x180006c Int BE Pri
!#3 N4585 P2534 LD 14 -1 FP BE Pri
!#3 N4586 P2535 BST 12 0x41000090 FP BE Pri
!#3 N4587 P2535 BST 13 0x41000091 FP BE Pri
!#3 N4588 P2536 LD 7 -1 Int BE Pri
!#3 N4590 P2538 LD 2 -1 Int BE Pri
!#3 N4591 P2536 LD 7 -1 Int BE Pri
!#3 N4593 P2538 LD 2 -1 Int BE Pri
!#3 N4597 P2541 DWLD 12 -1 Int BE Pri
!#3 N4598 P2542 LD 8 -1 Int BE Pri
!#3 N4600 P2541 DWLD 12 -1 Int BE Pri
!#3 N4601 P2542 LD 8 -1 Int BE Pri
!#3 N4605 P2545 LD 8 -1 NF FP BE Pri
!#3 N4607 P2545 LD 8 -1 NF FP BE Pri
!#3 N4610 P2547 LD 15 -1 Int BE Pri
!#3 N4611 P2548 LD 4 -1 Int BE Pri
!#3 N4612 P2549 LD 5 -1 FP BE Pri
!#3 N4614 P2549 LD 5 -1 FP BE Pri
!#3 N4618 P2553 BST 14 0x41000092 FP BE Pri
!#3 N4619 P2553 BST 15 0x41000093 FP BE Pri
!#3 N4621 P2555 SWAP 2 0xffffffff 0x180006d Int BE Pri
!#3 N4622 P2556 DWST 1 0x41000094 FP BE Pri
!#3 N4623 P2557 LD 1 -1 Int BE Pri
!#3 N4624 P2558 LD 3 -1 Int BE Pri
!#3 N4625 P2559 QWST 2 0x41000095 FP BE Pri
!#3 N4626 P2559 QWST 3 0x41000096 FP BE Pri
!#3 N4627 P2560 LD 2 -1 Int BE Pri
!#3 N4629 P2562 LD 6 -1 Int BE Pri
!#3 N4630 P2563 LD 11 -1 FP BE Pri
!#3 N4631 P2564 LD 13 -1 NF Int LE Pri
!#3 N4632 P2565 LD 8 -1 FP BE Pri
!#3 N4633 P2566 BSTC 4 0x41000097 FP BE Pri
!#3 N4634 P2566 BSTC 5 0x41000098 FP BE Pri
!#3 N4635 P2565 LD 8 -1 FP BE Pri
!#3 N4636 P2566 BSTC 4 0x41000099 FP BE Pri
!#3 N4637 P2566 BSTC 5 0x4100009a FP BE Pri
!#3 N4639 P2568 LD 13 -1 FP BE Pri
!#3 N4641 P2568 LD 13 -1 FP BE Pri
!#3 N4642 P2569 LD 4 -1 Int BE Pri
!#3 N4643 P2570 LD 14 -1 Int BE Pri
!#3 N4644 P2569 LD 4 -1 Int BE Pri
!#3 N4645 P2570 LD 14 -1 Int BE Pri
!#3 N4646 P2571 BST 14 0x4100009b FP BE Pri
!#3 N4647 P2571 BST 15 0x4100009c FP BE Pri
!#3 N4648 P2572 BLD 8 -1 FP BE Pri
!#3 N4649 P2572 BLD 9 -1 FP BE Pri
!#3 N4650 P2573 LD 7 -1 FP BE Pri
!#3 N4651 P2572 BLD 8 -1 FP BE Pri
!#3 N4652 P2572 BLD 9 -1 FP BE Pri
!#3 N4653 P2573 LD 7 -1 FP BE Pri
!#3 N4654 P2574 LD 1 -1 Int BE Pri
!#3 N4655 P2574 CAS 1 -1 N4654 0x180006e Int BE Pri
!#3 N4656 P2574 LD 1 -1 Int BE Pri
!#3 N4657 P2574 CAS 1 -1 N4656 0x180006f Int BE Pri
!#3 N4658 P2575 BST 8 0x4100009d FP BE Pri
!#3 N4659 P2575 BST 9 0x4100009e FP BE Pri
!#3 N4660 P2576 QWST 14 0x4100009f FP BE Pri
!#3 N4661 P2576 QWST 15 0x410000a0 FP BE Pri
!#3 N4662 P2576 QWST 14 0x410000a1 FP BE Pri
!#3 N4663 P2576 QWST 15 0x410000a2 FP BE Pri
!#3 N4667 P2579 DWST 2 0x1800070 Int BE Pri
!#3 N4668 P2579 DWST 2 0x1800071 Int BE Pri
!#3 N4671 P2581 BST 0 0x410000a3 FP BE Pri
!#3 N4672 P2581 BST 1 0x410000a4 FP BE Pri
!#3 N4673 P2582 LD 4 -1 FP BE Pri
!#3 N4674 P2583 LD 15 -1 Int BE Pri
!#3 N4675 P2583 CAS 15 -1 N4674 0x1800072 Int BE Pri
!#3 N4676 P2584 DWLD 5 -1 Int BE Pri
!#3 N4677 P2585 LD 5 -1 Int BE Pri
!#3 N4678 P2583 LD 15 -1 Int BE Pri
!#3 N4679 P2583 CAS 15 -1 N4678 0x1800073 Int BE Pri
!#3 N4680 P2584 DWLD 5 -1 Int BE Pri
!#3 N4681 P2585 LD 5 -1 Int BE Pri
!#3 N4682 P2586 DWLD 15 -1,0x0 Int BE Pri
!#3 N4683 P2586 CASX 15 -1,0x0 N4682 0x1800074 Int BE Pri
!#3 N4684 P2587 BST 4 0x410000a5 FP BE Pri
!#3 N4685 P2587 BST 5 0x410000a6 FP BE Pri
!#3 N4686 P2588 LD 10 -1 FP BE Pri
!#3 N4688 P2588 LD 10 -1 FP BE Pri
!#3 N4690 P2590 LD 5 -1 NF FP BE Pri
!#3 N4691 P2590 LD 5 -1 NF FP BE Pri
!#3 N4692 P2591 BLD 10 -1 FP BE Pri
!#3 N4693 P2591 BLD 11 -1 FP BE Pri
!#3 N4694 P2592 DWST 9 0x410000a7 FP BE Pri
!#3 N4695 P2591 BLD 10 -1 FP BE Pri
!#3 N4696 P2591 BLD 11 -1 FP BE Pri
!#3 N4697 P2592 DWST 9 0x410000a8 FP BE Pri
!#3 N4698 P2593 LD 13 -1 NF FP BE Pri
!#3 N4699 P2594 DWST 15 0x1800075 Int BE Pri
!#3 N4700 P2595 LD 12 -1 Int LE Pri
!#3 N4701 P2595 CAS 12 -1 N4700 0x1800076 Int LE Pri
!#3 N4702 P2596 DWLD 14 -1,0x0 Int BE Pri
!#3 N4703 P2596 CASX 14 -1,0x0 N4702 0x1800077 Int BE Pri
!#3 N4704 P2595 LD 12 -1 Int LE Pri
!#3 N4705 P2595 CAS 12 -1 N4704 0x1800078 Int LE Pri
!#3 N4706 P2596 DWLD 14 -1,0x0 Int BE Pri
!#3 N4707 P2596 CASX 14 -1,0x0 N4706 0x1800079 Int BE Pri
!#3 N4708 P2597 LD 9 -1 Int BE Pri
!#3 N4709 P2598 LD 13 -1 FP BE Pri
!#3 N4710 P2599 LD 13 -1 Int BE Pri
!#3 N4711 P2600 LD 5 -1 NF Int BE Pri
!#3 N4712 P2601 LD 4 -1 Int BE Pri
!#3 N4713 P2602 LD 2 -1 Int BE Pri
!#3 N4714 P2603 LD 14 -1 Int BE Pri
!#3 N4715 P2602 LD 2 -1 Int BE Pri
!#3 N4716 P2603 LD 14 -1 Int BE Pri
!#3 N4717 P2604 DWLD 13 -1,0x0 Int BE Pri
!#3 N4718 P2604 CASX 13 -1,0x0 N4717 0x180007a Int BE Pri
!#3 N4719 P2605 LD 8 -1 Int BE Pri
!#3 N4720 P2606 LD 9 -1 Int BE Pri
!#3 N4721 P2604 DWLD 13 -1,0x0 Int BE Pri
!#3 N4722 P2604 CASX 13 -1,0x0 N4721 0x180007b Int BE Pri
!#3 N4723 P2605 LD 8 -1 Int BE Pri
!#3 N4724 P2606 LD 9 -1 Int BE Pri
!#3 N4725 P2607 LD 15 -1 NF FP BE Pri
!#3 N4727 P2609 LD 14 -1 FP BE Pri
!#3 N4728 P2610 MEMBAR
!#3 N4729 P2611 BSTC 12 0x410000a9 FP BE Pri
!#3 N4730 P2611 BSTC 13 0x410000aa FP BE Pri
!#3 N4731 P2612 LD 1 -1 Int BE Pri
!#3 N4732 P2612 CAS 1 -1 N4731 0x180007c Int BE Pri
!#3 N4733 P2611 BSTC 12 0x410000ab FP BE Pri
!#3 N4734 P2611 BSTC 13 0x410000ac FP BE Pri
!#3 N4735 P2612 LD 1 -1 Int BE Pri
!#3 N4736 P2612 CAS 1 -1 N4735 0x180007d Int BE Pri
!#3 N4737 P2613 QWLD 2 -1 NF FP BE Pri
!#3 N4738 P2613 QWLD 3 -1 NF FP BE Pri
!#3 N4739 P2614 MEMBAR
!#3 N4740 P2613 QWLD 2 -1 NF FP BE Pri
!#3 N4741 P2613 QWLD 3 -1 NF FP BE Pri
!#3 N4742 P2614 MEMBAR
!#3 N4743 P2615 LD 2 -1 FP BE Pri
!#3 N4745 P2617 BST 4 0x410000ad FP BE Pri
!#3 N4746 P2617 BST 5 0x410000ae FP BE Pri
!#3 N4748 P2617 BST 4 0x410000af FP BE Pri
!#3 N4749 P2617 BST 5 0x410000b0 FP BE Pri
!#3 N4751 P2619 LD 0 -1 Int BE Pri
!#3 N4752 P2619 CAS 0 -1 N4751 0x180007e Int BE Pri
!#3 N4753 P2620 LD 12 -1 Int BE Pri
!#3 N4754 P2621 LD 5 -1 FP BE Pri
!#3 N4755 P2622 LD 6 -1 Int BE Pri
!#3 N4756 P2620 LD 12 -1 Int BE Pri
!#3 N4757 P2621 LD 5 -1 FP BE Pri
!#3 N4758 P2622 LD 6 -1 Int BE Pri
!#3 N4759 P2623 DWLD 13 -1 FP BE Pri
!#3 N4761 P2625 LD 11 -1 Int BE Pri
!#3 N4762 P2625 CAS 11 -1 N4761 0x180007f Int BE Pri
!#3 N4763 P2625 LD 11 -1 Int BE Pri
!#3 N4764 P2625 CAS 11 -1 N4763 0x1800080 Int BE Pri
!#3 N4765 P2626 LD 14 -1 FP BE Pri
!#3 N4766 P2626 LD 14 -1 FP BE Pri
!#3 N4767 P2627 LD 15 -1 Int BE Pri
!#3 N4768 P2628 QWST 10 0x410000b1 FP BE Pri
!#3 N4769 P2628 QWST 11 0x410000b2 FP BE Pri
!#3 N4770 P2629 LD 6 -1 Int BE Pri
!#3 N4771 P2630 LD 14 -1 FP BE Pri
!#3 N4772 P2631 LD 9 -1 Int BE Pri
!#3 N4773 P2632 LD 0 -1 Int BE Pri
!#3 N4774 P2631 LD 9 -1 Int BE Pri
!#3 N4775 P2632 LD 0 -1 Int BE Pri
!#3 N4776 P2633 DWLD 4 -1 Int BE Pri
!#3 N4777 P2634 LD 15 -1 Int BE Pri
!#3 N4778 P2635 DWLD 0 -1 Int BE Pri
!#3 N4779 P2636 LD 10 -1 Int BE Pri
!#3 N4781 P2638 DWST 1 0x410000b3 FP BE Pri
!#3 N4783 P2638 DWST 1 0x410000b4 FP BE Pri
!#3 N4784 P2639 LD 9 -1 Int BE Pri
!#3 N4785 P2639 CAS 9 -1 N4784 0x1800081 Int BE Pri
!#3 N4786 P2640 DWLD 10 -1,0x0 Int BE Pri
!#3 N4787 P2640 CASX 10 -1,0x0 N4786 0x1800082 Int BE Pri
!#3 N4788 P2641 BSTC 10 0x410000b5 FP BE Pri
!#3 N4789 P2641 BSTC 11 0x410000b6 FP BE Pri
!#3 N4790 P2640 DWLD 10 -1,0x0 Int BE Pri
!#3 N4791 P2640 CASX 10 -1,0x0 N4790 0x1800083 Int BE Pri
!#3 N4792 P2641 BSTC 10 0x410000b7 FP BE Pri
!#3 N4793 P2641 BSTC 11 0x410000b8 FP BE Pri
!#3 N4795 P2643 DWLD 2 -1,0x0 Int BE Pri
!#3 N4796 P2643 CASX 2 -1,0x0 N4795 0x1800084 Int BE Pri
!#3 N4797 P2644 LD 4 -1 Int BE Pri
!#3 N4798 P2644 CAS 4 -1 N4797 0x1800085 Int BE Pri
!#3 N4799 P2643 DWLD 2 -1,0x0 Int BE Pri
!#3 N4800 P2643 CASX 2 -1,0x0 N4799 0x1800086 Int BE Pri
!#3 N4801 P2644 LD 4 -1 Int BE Pri
!#3 N4802 P2644 CAS 4 -1 N4801 0x1800087 Int BE Pri
!#3 N4805 P2646 LD 8 -1 FP BE Pri
!#3 N4807 P2648 LD 14 -1 FP BE Pri
!#3 N4808 P2649 LD 4 -1 Int BE Pri
!#3 N4810 P2651 LD 11 -1 Int BE Pri
!#3 N4811 P2652 LD 4 -1 FP BE Pri
!#3 N4812 P2653 LD 13 -1 Int BE Pri
!#3 N4813 P2653 CAS 13 -1 N4812 0x1800088 Int BE Pri
!#3 N4814 P2652 LD 4 -1 FP BE Pri
!#3 N4815 P2653 LD 13 -1 Int BE Pri
!#3 N4816 P2653 CAS 13 -1 N4815 0x1800089 Int BE Pri
!#3 N4817 P2654 DWLD 12 -1 FP BE Pri
!#3 N4819 P2656 ST 12 0x180008a Int BE Pri
!#3 N4821 P2656 ST 12 0x180008b Int BE Pri
!#3 N4822 P2657 LD 13 -1 FP BE Pri
!#3 N4823 P2657 LD 13 -1 FP BE Pri
!#3 N4824 P2658 LD 4 -1 Int BE Pri
!#3 N4825 P2659 LD 2 -1 Int BE Pri
!#3 N4826 P2660 LD 12 -1 Int BE Pri
!#3 N4827 P2661 LD 8 -1 Int BE Pri
!#3 N4828 P2662 DWLD 13 -1 Int BE Pri
!#3 N4829 P2663 LD 8 -1 FP BE Pri
!#3 N4830 P2664 LD 4 -1 Int BE Pri
!#3 N4836 P2668 QWLD 14 -1 FP BE Pri
!#3 N4837 P2668 QWLD 15 -1 FP BE Pri
!#3 N4839 P2668 QWLD 14 -1 FP BE Pri
!#3 N4840 P2668 QWLD 15 -1 FP BE Pri
!#3 N4841 P2669 MEMBAR
!#4 N4842 P2670 LD 12 -1 FP BE Pri
!#4 N4844 P2670 LD 12 -1 FP BE Pri
!#4 N4848 P2674 BLD 12 -1 FP BE Pri
!#4 N4849 P2674 BLD 13 -1 FP BE Pri
!#4 N4850 P2675 BST 4 0x41800001 FP BE Pri
!#4 N4851 P2675 BST 5 0x41800002 FP BE Pri
!#4 N4852 P2676 LD 1 -1 Int BE Pri
!#4 N4853 P2677 LD 15 -1 FP BE Pri
!#4 N4854 P2678 LD 4 -1 NF Int BE Pri
!#4 N4855 P2679 LD 4 -1 NF Fault FP BE Pri
!#4 N4856 P2680 QWLD 0 -1 FP BE Pri
!#4 N4857 P2680 QWLD 1 -1 FP BE Pri
!#4 N4858 P2681 SWAP 6 0xffffffff 0x2000001 Int BE Pri
!#4 N4859 P2682 DWST 4 0x2000002 Int BE Pri
!#4 N4860 P2683 LD 3 -1 Int BE Pri
!#4 N4861 P2681 SWAP 6 0xffffffff 0x2000003 Int BE Pri
!#4 N4862 P2682 DWST 4 0x2000004 Int BE Pri
!#4 N4863 P2683 LD 3 -1 Int BE Pri
!#4 N4864 P2684 LD 11 -1 Int BE Pri
!#4 N4865 P2685 LD 13 -1 Int BE Pri
!#4 N4866 P2686 SWAP 0 0xffffffff 0x2000005 Int BE Pri
!#4 N4867 P2687 LD 6 -1 Int BE Pri
!#4 N4868 P2686 SWAP 0 0xffffffff 0x2000006 Int BE Pri
!#4 N4869 P2687 LD 6 -1 Int BE Pri
!#4 N4871 P2689 LD 11 -1 Int BE Pri
!#4 N4872 P2689 CAS 11 -1 N4871 0x2000007 Int BE Pri
!#4 N4873 P2690 LD 13 -1 Int BE Pri
!#4 N4874 P2691 LD 13 -1 Int BE Pri
!#4 N4875 P2690 LD 13 -1 Int BE Pri
!#4 N4876 P2691 LD 13 -1 Int BE Pri
!#4 N4877 P2692 LD 3 -1 Int BE Pri
!#4 N4878 P2693 LD 11 -1 NF Int BE Pri
!#4 N4879 P2692 LD 3 -1 Int BE Pri
!#4 N4880 P2693 LD 11 -1 NF Int BE Pri
!#4 N4881 P2694 LD 3 -1 FP BE Pri
!#4 N4882 P2695 LD 8 -1 FP BE Pri
!#4 N4883 P2696 DWLD 6 -1 Int BE Pri
!#4 N4884 P2697 LD 10 -1 Int BE Pri
!#4 N4885 P2695 LD 8 -1 FP BE Pri
!#4 N4886 P2696 DWLD 6 -1 Int BE Pri
!#4 N4887 P2697 LD 10 -1 Int BE Pri
!#4 N4889 P2699 LD 15 -1 Int BE Pri
!#4 N4890 P2700 LD 2 -1 Int BE Pri
!#4 N4893 P2702 QWST 10 0x41800003 FP BE Pri
!#4 N4894 P2702 QWST 11 0x41800004 FP BE Pri
!#4 N4895 P2702 QWST 10 0x41800005 FP BE Pri
!#4 N4896 P2702 QWST 11 0x41800006 FP BE Pri
!#4 N4897 P2703 DWLD 13 -1,0x0 Int BE Pri
!#4 N4898 P2703 CASX 13 -1,0x0 N4897 0x2000008 Int BE Pri
!#4 N4899 P2704 LD 6 -1 Int BE Pri
!#4 N4900 P2705 LD 14 -1 Int BE Pri
!#4 N4901 P2706 LD 6 -1 Int BE Pri
!#4 N4902 P2707 LD 15 -1 Int BE Pri
!#4 N4903 P2706 LD 6 -1 Int BE Pri
!#4 N4904 P2707 LD 15 -1 Int BE Pri
!#4 N4905 P2708 SWAP 13 0xffffffff 0x2000009 Int BE Pri
!#4 N4906 P2709 LD 4 -1 Int BE Pri
!#4 N4907 P2710 QWLD 12 -1 FP BE Pri
!#4 N4908 P2710 QWLD 13 -1 FP BE Pri
!#4 N4909 P2711 LD 9 -1 Int BE Pri
!#4 N4910 P2712 LD 0 -1 Int BE Pri
!#4 N4911 P2713 LD 0 -1 Int BE Pri
!#4 N4912 P2714 DWLD 7 -1 Int BE Pri
!#4 N4913 P2715 BLD 8 -1 FP BE Pri
!#4 N4914 P2715 BLD 9 -1 FP BE Pri
!#4 N4915 P2715 BLD 8 -1 FP BE Pri
!#4 N4916 P2715 BLD 9 -1 FP BE Pri
!#4 N4918 P2717 BLD 0 -1 FP BE Pri
!#4 N4919 P2717 BLD 1 -1 FP BE Pri
!#4 N4921 P2717 BLD 0 -1 FP BE Pri
!#4 N4922 P2717 BLD 1 -1 FP BE Pri
!#4 N4925 P2719 LD 15 -1 Int BE Pri
!#4 N4926 P2720 LD 12 -1 Int BE Pri
!#4 N4927 P2721 BLD 14 -1 FP BE Pri
!#4 N4928 P2721 BLD 15 -1 FP BE Pri
!#4 N4929 P2722 LD 3 -1 NF Int BE Pri
!#4 N4930 P2723 LD 2 -1 Int BE Pri
!#4 N4934 P2726 LD 12 -1 NF FP BE Pri
!#4 N4936 P2726 LD 12 -1 NF FP BE Pri
!#4 N4937 P2727 LD 6 -1 FP BE Pri
!#4 N4938 P2727 LD 6 -1 FP BE Pri
!#4 N4940 P2729 LD 0 -1 Int BE Pri
!#4 N4941 P2729 CAS 0 -1 N4940 0x200000a Int BE Pri
!#4 N4946 P2734 LD 6 -1 NF Int BE Pri
!#4 N4948 P2736 LD 13 -1 Int BE Pri
!#4 N4949 P2737 LD 5 -1 Int BE Pri
!#4 N4950 P2738 LD 13 -1 Int BE Pri
!#4 N4952 P2740 ST 13 0x200000b Int BE Pri
!#4 N4953 P2740 ST 13 0x200000c Int BE Pri
!#4 N4954 P2741 LD 15 -1 Int BE Pri
!#4 N4955 P2742 BSTC 2 0x41800007 FP BE Pri
!#4 N4956 P2742 BSTC 3 0x41800008 FP BE Pri
!#4 N4957 P2743 LD 14 -1 Int BE Pri
!#4 N4958 P2744 DWLD 4 -1 FP BE Pri
!#4 N4959 P2744 DWLD 4 -1 FP BE Pri
!#4 N4962 P2746 LD 3 -1 FP BE Pri
!#4 N4963 P2747 LD 2 -1 FP BE Pri
!#4 N4964 P2746 LD 3 -1 FP BE Pri
!#4 N4965 P2747 LD 2 -1 FP BE Pri
!#4 N4966 P2748 LD 8 -1 FP BE Pri
!#4 N4967 P2749 MEMBAR
!#4 N4968 P2748 LD 8 -1 FP BE Pri
!#4 N4969 P2749 MEMBAR
!#4 N4970 P2750 QWST 12 0x41800009 FP BE Pri
!#4 N4971 P2750 QWST 13 0x4180000a FP BE Pri
!#4 N4972 P2750 QWST 12 0x4180000b FP BE Pri
!#4 N4973 P2750 QWST 13 0x4180000c FP BE Pri
!#4 N4974 P2751 ST 0 0x200000d Int BE Pri
!#4 N4976 P2753 LD 15 -1 FP BE Pri
!#4 N4977 P2754 DWLD 3 -1 Int BE Pri
!#4 N4978 P2755 LD 0 -1 Int BE Pri
!#4 N4980 P2757 QWLD 14 -1 NF FP BE Pri
!#4 N4981 P2757 QWLD 15 -1 NF FP BE Pri
!#4 N4982 P2758 BSTC 8 0x4180000d FP BE Pri
!#4 N4983 P2758 BSTC 9 0x4180000e FP BE Pri
!#4 N4984 P2759 BSTC 0 0x4180000f FP BE Pri
!#4 N4985 P2759 BSTC 1 0x41800010 FP BE Pri
!#4 N4986 P2760 LD 3 -1 Int BE Pri
!#4 N4987 P2761 LD 2 -1 Int BE Pri
!#4 N4988 P2759 BSTC 0 0x41800011 FP BE Pri
!#4 N4989 P2759 BSTC 1 0x41800012 FP BE Pri
!#4 N4990 P2760 LD 3 -1 Int BE Pri
!#4 N4991 P2761 LD 2 -1 Int BE Pri
!#4 N4992 P2762 LD 11 -1 NF FP BE Pri
!#4 N4993 P2763 LD 2 -1 Int BE Pri
!#4 N4994 P2764 LD 6 -1 Int LE Pri
!#4 N4995 P2765 BLD 0 -1 FP BE Pri
!#4 N4996 P2765 BLD 1 -1 FP BE Pri
!#4 N4997 P2766 QWLD 10 -1 NF FP BE Pri
!#4 N4998 P2766 QWLD 11 -1 NF FP BE Pri
!#4 N4999 P2767 BLD 6 -1 FP BE Pri
!#4 N5000 P2767 BLD 7 -1 FP BE Pri
!#4 N5001 P2768 LD 3 -1 Int BE Pri
!#4 N5003 P2770 LD 3 -1 Int BE Pri
!#4 N5004 P2768 LD 3 -1 Int BE Pri
!#4 N5006 P2770 LD 3 -1 Int BE Pri
!#4 N5010 P2773 LD 6 -1 Int BE Pri
!#4 N5011 P2774 LD 5 -1 Int BE Pri
!#4 N5012 P2773 LD 6 -1 Int BE Pri
!#4 N5013 P2774 LD 5 -1 Int BE Pri
!#4 N5014 P2775 BLD 2 -1 FP BE Pri
!#4 N5015 P2775 BLD 3 -1 FP BE Pri
!#4 N5016 P2776 SWAP 9 0xffffffff 0x200000e Int LE Pri
!#4 N5017 P2777 LD 10 -1 Int BE Pri
!#4 N5018 P2778 LD 5 -1 Int BE Pri
!#4 N5019 P2779 LD 2 -1 FP BE Pri
!#4 N5020 P2780 LD 2 -1 Int BE Pri
!#4 N5021 P2781 LD 6 -1 Int BE Pri
!#4 N5022 P2782 LD 2 -1 Int BE Pri
!#4 N5023 P2781 LD 6 -1 Int BE Pri
!#4 N5024 P2782 LD 2 -1 Int BE Pri
!#4 N5025 P2783 BST 12 0x41800013 FP BE Pri
!#4 N5026 P2783 BST 13 0x41800014 FP BE Pri
!#4 N5027 P2784 LD 6 -1 Int BE Pri
!#4 N5028 P2784 CAS 6 -1 N5027 0x200000f Int BE Pri
!#4 N5029 P2783 BST 12 0x41800015 FP BE Pri
!#4 N5030 P2783 BST 13 0x41800016 FP BE Pri
!#4 N5031 P2784 LD 6 -1 Int BE Pri
!#4 N5032 P2784 CAS 6 -1 N5031 0x2000010 Int BE Pri
!#4 N5033 P2785 QWST 0 0x41800017 FP BE Pri
!#4 N5034 P2785 QWST 1 0x41800018 FP BE Pri
!#4 N5035 P2786 LD 3 -1 FP BE Pri
!#4 N5036 P2787 LD 15 -1 NF Fault Int BE Pri
!#4 N5037 P2788 LD 5 -1 Int BE Pri
!#4 N5040 P2790 LD 4 -1 FP BE Pri
!#4 N5041 P2791 LD 2 -1 Int BE Pri
!#4 N5042 P2791 CAS 2 -1 N5041 0x2000011 Int BE Pri
!#4 N5043 P2792 DWLD 6 -1 FP BE Pri
!#4 N5044 P2793 LD 10 -1 Int BE Pri
!#4 N5045 P2793 CAS 10 -1 N5044 0x2000012 Int BE Pri
!#4 N5047 P2795 DWLD 10 -1 FP BE Pri
!#4 N5049 P2795 DWLD 10 -1 FP BE Pri
!#4 N5050 P2796 LD 0 -1 Int BE Pri
!#4 N5051 P2797 LD 8 -1 NF Int BE Pri
!#4 N5052 P2796 LD 0 -1 Int BE Pri
!#4 N5053 P2797 LD 8 -1 NF Int BE Pri
!#4 N5054 P2798 DWST 14 0x2000013 Int BE Pri
!#4 N5058 P2801 LD 14 -1 Int BE Pri
!#4 N5059 P2802 LD 8 -1 NF Int BE Pri
!#4 N5060 P2801 LD 14 -1 Int BE Pri
!#4 N5061 P2802 LD 8 -1 NF Int BE Pri
!#4 N5062 P2803 LD 15 -1 Int BE Pri
!#4 N5063 P2804 LD 8 -1 Int BE Pri
!#4 N5064 P2803 LD 15 -1 Int BE Pri
!#4 N5065 P2804 LD 8 -1 Int BE Pri
!#4 N5066 P2805 BSTC 8 0x41800019 FP BE Pri
!#4 N5067 P2805 BSTC 9 0x4180001a FP BE Pri
!#4 N5068 P2806 LD 2 -1 FP BE Pri
!#4 N5069 P2805 BSTC 8 0x4180001b FP BE Pri
!#4 N5070 P2805 BSTC 9 0x4180001c FP BE Pri
!#4 N5071 P2806 LD 2 -1 FP BE Pri
!#4 N5072 P2807 DWLD 15 -1 FP BE Pri
!#4 N5073 P2808 BLD 14 -1 FP BE Pri
!#4 N5074 P2808 BLD 15 -1 FP BE Pri
!#4 N5076 P2810 ST 7 0x4180001d FP BE Pri
!#4 N5077 P2811 ST 15 0x2000014 Int BE Pri
!#4 N5078 P2812 LD 12 -1 FP BE Pri
!#4 N5079 P2813 DWLD 12 -1,0x0 Int BE Pri
!#4 N5080 P2813 CASX 12 -1,0x0 N5079 0x2000015 Int BE Pri
!#4 N5081 P2814 BLD 10 -1 FP BE Pri
!#4 N5082 P2814 BLD 11 -1 FP BE Pri
!#4 N5083 P2815 BLD 2 -1 FP BE Pri
!#4 N5084 P2815 BLD 3 -1 FP BE Pri
!#4 N5085 P2816 LD 7 -1 FP BE Pri
!#4 N5086 P2817 QWST 14 0x4180001e FP BE Pri
!#4 N5087 P2817 QWST 15 0x4180001f FP BE Pri
!#4 N5088 P2818 LD 11 -1 Int BE Pri
!#4 N5089 P2818 CAS 11 -1 N5088 0x2000016 Int BE Pri
!#4 N5090 P2819 LD 4 -1 FP BE Pri
!#4 N5091 P2820 LD 5 -1 Int BE Pri
!#4 N5092 P2821 LD 12 -1 NF Int BE Pri
!#4 N5093 P2822 LD 7 -1 Int BE Pri
!#4 N5094 P2823 LD 11 -1 Int BE Pri
!#4 N5095 P2822 LD 7 -1 Int BE Pri
!#4 N5096 P2823 LD 11 -1 Int BE Pri
!#4 N5098 P2825 BSTC 0 0x41800020 FP BE Pri
!#4 N5099 P2825 BSTC 1 0x41800021 FP BE Pri
!#4 N5102 P2827 LD 5 -1 Int BE Pri
!#4 N5103 P2828 LD 11 -1 FP BE Pri
!#4 N5104 P2829 LD 11 -1 Int BE Pri
!#4 N5105 P2827 LD 5 -1 Int BE Pri
!#4 N5106 P2828 LD 11 -1 FP BE Pri
!#4 N5107 P2829 LD 11 -1 Int BE Pri
!#4 N5108 P2830 LD 0 -1 FP BE Pri
!#4 N5109 P2830 LD 0 -1 FP BE Pri
!#4 N5110 P2831 BST 0 0x41800022 FP BE Pri
!#4 N5111 P2831 BST 1 0x41800023 FP BE Pri
!#4 N5113 P2833 LD 15 -1 Int BE Pri
!#4 N5115 P2835 LD 12 -1 Int BE Pri
!#4 N5116 P2833 LD 15 -1 Int BE Pri
!#4 N5118 P2835 LD 12 -1 Int BE Pri
!#4 N5119 P2836 LD 9 -1 Int BE Pri
!#4 N5121 P2838 LD 3 -1 Int BE Pri
!#4 N5122 P2839 LD 12 -1 Int BE Pri
!#4 N5123 P2840 LD 13 -1 Int BE Pri
!#4 N5124 P2841 LD 5 -1 FP BE Pri
!#4 N5126 P2843 LD 2 -1 Int BE Pri
!#4 N5127 P2844 LD 1 -1 NF Int BE Pri
!#4 N5128 P2845 BLD 14 -1 FP BE Pri
!#4 N5129 P2845 BLD 15 -1 FP BE Pri
!#4 N5130 P2846 DWLD 5 -1 FP BE Pri
!#4 N5131 P2845 BLD 14 -1 FP BE Pri
!#4 N5132 P2845 BLD 15 -1 FP BE Pri
!#4 N5133 P2846 DWLD 5 -1 FP BE Pri
!#4 N5136 P2848 LD 7 -1 FP BE Pri
!#4 N5137 P2849 LD 10 -1 NF FP BE Pri
!#4 N5138 P2850 BLD 4 -1 FP BE Pri
!#4 N5139 P2850 BLD 5 -1 FP BE Pri
!#4 N5140 P2851 LD 6 -1 FP BE Pri
!#4 N5141 P2852 LD 15 -1 Int BE Pri
!#4 N5142 P2853 LD 0 -1 Int BE Pri
!#4 N5143 P2854 BST 14 0x41800024 FP BE Pri
!#4 N5144 P2854 BST 15 0x41800025 FP BE Pri
!#4 N5146 P2856 LD 13 -1 FP BE Pri
!#4 N5148 P2856 LD 13 -1 FP BE Pri
!#4 N5149 P2857 DWLD 6 -1 Int BE Pri
!#4 N5150 P2858 QWLD 8 -1 FP BE Pri
!#4 N5151 P2858 QWLD 9 -1 FP BE Pri
!#4 N5152 P2859 LD 13 -1 Int BE Pri
!#4 N5153 P2860 LD 9 -1 Int BE Pri
!#4 N5154 P2861 LD 7 -1 Int BE Pri
!#4 N5155 P2860 LD 9 -1 Int BE Pri
!#4 N5156 P2861 LD 7 -1 Int BE Pri
!#4 N5159 P2863 BSTC 8 0x41800026 FP BE Pri
!#4 N5160 P2863 BSTC 9 0x41800027 FP BE Pri
!#4 N5161 P2864 LD 0 -1 FP BE Pri
!#4 N5162 P2864 LD 0 -1 FP BE Pri
!#4 N5163 P2865 LD 2 -1 Int BE Pri
!#4 N5164 P2866 LD 12 -1 FP BE Pri
!#4 N5165 P2867 LD 2 -1 Int BE Pri
!#4 N5166 P2865 LD 2 -1 Int BE Pri
!#4 N5167 P2866 LD 12 -1 FP BE Pri
!#4 N5168 P2867 LD 2 -1 Int BE Pri
!#4 N5169 P2868 LD 14 -1 Int BE Pri
!#4 N5170 P2869 LD 11 -1 Int BE Pri
!#4 N5171 P2870 LD 5 -1 Int BE Pri
!#4 N5172 P2871 LD 9 -1 FP BE Pri
!#4 N5173 P2872 LD 13 -1 Int BE Pri
!#4 N5174 P2873 QWLD 4 -1 FP BE Pri
!#4 N5175 P2873 QWLD 5 -1 FP BE Pri
!#4 N5177 P2873 QWLD 4 -1 FP BE Pri
!#4 N5178 P2873 QWLD 5 -1 FP BE Pri
!#4 N5180 P2875 ST 2 0x41800028 FP BE Pri
!#4 N5181 P2875 ST 2 0x41800029 FP BE Pri
!#4 N5182 P2876 LD 13 -1 FP BE Pri
!#4 N5183 P2877 BST 4 0x4180002a FP BE Pri
!#4 N5184 P2877 BST 5 0x4180002b FP BE Pri
!#4 N5186 P2879 LD 5 -1 Int BE Pri
!#4 N5187 P2880 LD 0 -1 Int BE Pri
!#4 N5188 P2879 LD 5 -1 Int BE Pri
!#4 N5189 P2880 LD 0 -1 Int BE Pri
!#4 N5190 P2881 BLD 14 -1 FP BE Pri
!#4 N5191 P2881 BLD 15 -1 FP BE Pri
!#4 N5192 P2882 LD 13 -1 Int BE Pri
!#4 N5193 P2883 DWLD 11 -1 Int BE Pri
!#4 N5194 P2882 LD 13 -1 Int BE Pri
!#4 N5195 P2883 DWLD 11 -1 Int BE Pri
!#4 N5196 P2884 LD 2 -1 Int BE Pri
!#4 N5197 P2885 LD 4 -1 Int BE Pri
!#4 N5198 P2886 BSTC 0 0x4180002c FP BE Pri
!#4 N5199 P2886 BSTC 1 0x4180002d FP BE Pri
!#4 N5200 P2886 BSTC 0 0x4180002e FP BE Pri
!#4 N5201 P2886 BSTC 1 0x4180002f FP BE Pri
!#4 N5202 P2887 BSTC 14 0x41800030 FP BE Pri
!#4 N5203 P2887 BSTC 15 0x41800031 FP BE Pri
!#4 N5207 P2890 DWLD 7 -1,0x0 Int BE Pri
!#4 N5208 P2890 CASX 7 -1,0x0 N5207 0x2000017 Int BE Pri
!#4 N5209 P2891 LD 15 -1 FP BE Pri
!#4 N5210 P2891 LD 15 -1 FP BE Pri
!#4 N5211 P2892 DWLD 15 -1,0x0 Int BE Pri
!#4 N5212 P2892 CASX 15 -1,0x0 N5211 0x2000018 Int BE Pri
!#4 N5213 P2893 DWST 13 0x2000019 Int BE Pri
!#4 N5214 P2892 DWLD 15 -1,0x0 Int BE Pri
!#4 N5215 P2892 CASX 15 -1,0x0 N5214 0x200001a Int BE Pri
!#4 N5216 P2893 DWST 13 0x200001b Int BE Pri
!#4 N5222 P2897 LD 8 -1 Int BE Pri
!#4 N5223 P2898 LD 8 -1 Int BE Pri
!#4 N5225 P2897 LD 8 -1 Int BE Pri
!#4 N5226 P2898 LD 8 -1 Int BE Pri
!#4 N5227 P2899 DWLD 3 -1 FP BE Pri
!#4 N5228 P2899 DWLD 3 -1 FP BE Pri
!#4 N5229 P2900 LD 8 -1 Int BE Pri
!#4 N5230 P2901 LD 10 -1 Int BE Pri
!#4 N5231 P2900 LD 8 -1 Int BE Pri
!#4 N5232 P2901 LD 10 -1 Int BE Pri
!#4 N5233 P2902 LD 8 -1 FP BE Pri
!#4 N5235 P2904 LD 13 -1 Int BE Pri
!#4 N5236 P2905 LD 2 -1 Int BE Pri
!#4 N5237 P2906 BST 0 0x41800032 FP BE Pri
!#4 N5238 P2906 BST 1 0x41800033 FP BE Pri
!#4 N5239 P2906 BST 0 0x41800034 FP BE Pri
!#4 N5240 P2906 BST 1 0x41800035 FP BE Pri
!#4 N5245 P2910 LD 1 -1 FP BE Pri
!#4 N5248 P2913 QWST 0 0x41800036 FP BE Pri
!#4 N5249 P2913 QWST 1 0x41800037 FP BE Pri
!#4 N5250 P2913 QWST 0 0x41800038 FP BE Pri
!#4 N5251 P2913 QWST 1 0x41800039 FP BE Pri
!#4 N5252 P2914 QWST 4 0x4180003a FP BE Pri
!#4 N5253 P2914 QWST 5 0x4180003b FP BE Pri
!#4 N5254 P2915 QWLD 0 -1 FP BE Pri
!#4 N5255 P2915 QWLD 1 -1 FP BE Pri
!#4 N5256 P2914 QWST 4 0x4180003c FP BE Pri
!#4 N5257 P2914 QWST 5 0x4180003d FP BE Pri
!#4 N5258 P2915 QWLD 0 -1 FP BE Pri
!#4 N5259 P2915 QWLD 1 -1 FP BE Pri
!#4 N5260 P2916 BST 14 0x4180003e FP BE Pri
!#4 N5261 P2916 BST 15 0x4180003f FP BE Pri
!#4 N5262 P2917 BST 0 0x41800040 FP BE Pri
!#4 N5263 P2917 BST 1 0x41800041 FP BE Pri
!#4 N5265 P2919 DWLD 5 -1,0x0 Int BE Pri
!#4 N5266 P2919 CASX 5 -1,0x0 N5265 0x200001c Int BE Pri
!#4 N5268 P2919 DWLD 5 -1,0x0 Int BE Pri
!#4 N5269 P2919 CASX 5 -1,0x0 N5268 0x200001d Int BE Pri
!#4 N5270 P2920 BSTC 10 0x41800042 FP BE Pri
!#4 N5271 P2920 BSTC 11 0x41800043 FP BE Pri
!#4 N5272 P2920 BSTC 10 0x41800044 FP BE Pri
!#4 N5273 P2920 BSTC 11 0x41800045 FP BE Pri
!#4 N5274 P2921 LD 5 -1 Int BE Pri
!#4 N5275 P2922 LD 1 -1 Int BE Pri
!#4 N5276 P2921 LD 5 -1 Int BE Pri
!#4 N5277 P2922 LD 1 -1 Int BE Pri
!#4 N5278 P2923 DWLD 11 -1 NF Int BE Pri
!#4 N5279 P2924 LD 12 -1 Int BE Pri
!#4 N5280 P2925 BST 14 0x41800046 FP BE Pri
!#4 N5281 P2925 BST 15 0x41800047 FP BE Pri
!#4 N5282 P2925 BST 14 0x41800048 FP BE Pri
!#4 N5283 P2925 BST 15 0x41800049 FP BE Pri
!#4 N5284 P2926 QWST 0 0x4180004a FP BE Pri
!#4 N5285 P2926 QWST 1 0x4180004b FP BE Pri
!#4 N5286 P2926 QWST 0 0x4180004c FP BE Pri
!#4 N5287 P2926 QWST 1 0x4180004d FP BE Pri
!#4 N5288 P2927 SWAP 13 0xffffffff 0x200001e Int BE Pri
!#4 N5289 P2928 LD 0 -1 Int BE Pri
!#4 N5290 P2929 QWST 6 0x4180004e FP BE Pri
!#4 N5291 P2929 QWST 7 0x4180004f FP BE Pri
!#4 N5293 P2931 BLD 4 -1 FP BE Pri
!#4 N5294 P2931 BLD 5 -1 FP BE Pri
!#4 N5295 P2932 LD 7 -1 Int BE Pri
!#4 N5296 P2933 LD 0 -1 Int BE Pri
!#4 N5297 P2931 BLD 4 -1 FP BE Pri
!#4 N5298 P2931 BLD 5 -1 FP BE Pri
!#4 N5299 P2932 LD 7 -1 Int BE Pri
!#4 N5300 P2933 LD 0 -1 Int BE Pri
!#4 N5301 P2934 SWAP 12 0xffffffff 0x200001f Int BE Pri
!#4 N5302 P2935 LD 9 -1 Int BE Pri
!#4 N5303 P2934 SWAP 12 0xffffffff 0x2000020 Int BE Pri
!#4 N5304 P2935 LD 9 -1 Int BE Pri
!#4 N5305 P2936 LD 3 -1 NF FP BE Pri
!#4 N5307 P2938 LD 8 -1 Int BE Pri
!#4 N5308 P2939 LD 0 -1 Int BE Pri
!#4 N5309 P2940 QWST 6 0x41800050 FP BE Pri
!#4 N5310 P2940 QWST 7 0x41800051 FP BE Pri
!#4 N5311 P2941 BSTC 10 0x41800052 FP BE Pri
!#4 N5312 P2941 BSTC 11 0x41800053 FP BE Pri
!#4 N5315 P2943 LD 10 -1 Int BE Pri
!#4 N5317 P2945 LD 8 -1 Int BE Pri
!#4 N5320 P2947 DWLD 10 -1 FP BE Pri
!#4 N5321 P2948 LD 9 -1 FP BE Pri
!#4 N5322 P2947 DWLD 10 -1 FP BE Pri
!#4 N5323 P2948 LD 9 -1 FP BE Pri
!#4 N5325 P2950 BST 12 0x41800054 FP BE Pri
!#4 N5326 P2950 BST 13 0x41800055 FP BE Pri
!#4 N5327 P2951 DWST 1 0x2000021 Int BE Pri
!#4 N5328 P2952 ST 0 0x2000022 Int BE Pri
!#4 N5329 P2951 DWST 1 0x2000023 Int BE Pri
!#4 N5330 P2952 ST 0 0x2000024 Int BE Pri
!#4 N5333 P2955 LD 6 -1 Int BE Pri
!#4 N5334 P2956 LD 1 -1 Int BE Pri
!#4 N5335 P2955 LD 6 -1 Int BE Pri
!#4 N5336 P2956 LD 1 -1 Int BE Pri
!#4 N5338 P2958 QWST 14 0x41800056 FP BE Pri
!#4 N5339 P2958 QWST 15 0x41800057 FP BE Pri
!#4 N5341 P2958 QWST 14 0x41800058 FP BE Pri
!#4 N5342 P2958 QWST 15 0x41800059 FP BE Pri
!#4 N5343 P2959 ST 13 0x4180005a FP BE Pri
!#4 N5344 P2959 ST 13 0x4180005b FP BE Pri
!#4 N5347 P2961 LD 0 -1 Int BE Pri
!#4 N5348 P2962 DWST 0 0x4180005c FP BE Pri
!#4 N5349 P2963 LD 5 -1 Int BE Pri
!#4 N5353 P2967 LD 1 -1 Int BE Pri
!#4 N5354 P2968 LD 14 -1 FP BE Pri
!#4 N5355 P2969 LD 1 -1 Int BE Pri
!#4 N5356 P2970 ST 2 0x4180005d FP BE Pri
!#4 N5357 P2970 ST 2 0x4180005e FP BE Pri
!#4 N5358 P2971 ST 6 0x4180005f FP BE Pri
!#4 N5359 P2972 LD 3 -1 Int BE Pri
!#4 N5360 P2973 LD 3 -1 Int BE Pri
!#4 N5361 P2972 LD 3 -1 Int BE Pri
!#4 N5362 P2973 LD 3 -1 Int BE Pri
!#4 N5367 P2976 QWST 4 0x41800060 FP BE Pri
!#4 N5368 P2976 QWST 5 0x41800061 FP BE Pri
!#4 N5370 P2976 QWST 4 0x41800062 FP BE Pri
!#4 N5371 P2976 QWST 5 0x41800063 FP BE Pri
!#4 N5373 P2978 DWLD 9 -1,0x0 Int LE Pri
!#4 N5374 P2978 CASX 9 -1,0x0 N5373 0x2000025 Int LE Pri
!#4 N5375 P2979 DWLD 11 -1,0x0 Int BE Pri
!#4 N5376 P2979 CASX 11 -1,0x0 N5375 0x2000026 Int BE Pri
!#4 N5377 P2980 LD 1 -1 Int BE Pri
!#4 N5378 P2981 LD 5 -1 Int BE Pri
!#4 N5379 P2979 DWLD 11 -1,0x0 Int BE Pri
!#4 N5380 P2979 CASX 11 -1,0x0 N5379 0x2000027 Int BE Pri
!#4 N5381 P2980 LD 1 -1 Int BE Pri
!#4 N5382 P2981 LD 5 -1 Int BE Pri
!#4 N5383 P2982 LD 4 -1 FP BE Pri
!#4 N5384 P2983 BST 0 0x41800064 FP BE Pri
!#4 N5385 P2983 BST 1 0x41800065 FP BE Pri
!#4 N5386 P2982 LD 4 -1 FP BE Pri
!#4 N5387 P2983 BST 0 0x41800066 FP BE Pri
!#4 N5388 P2983 BST 1 0x41800067 FP BE Pri
!#4 N5389 P2984 DWST 1 0x41800068 FP BE Pri
!#4 N5390 P2985 LD 5 -1 Int BE Pri
!#4 N5392 P2987 LD 3 -1 Int BE Pri
!#4 N5393 P2985 LD 5 -1 Int BE Pri
!#4 N5395 P2987 LD 3 -1 Int BE Pri
!#4 N5396 P2988 LD 1 -1 FP BE Pri
!#4 N5397 P2988 LD 1 -1 FP BE Pri
!#4 N5398 P2989 QWLD 10 -1 FP BE Pri
!#4 N5399 P2989 QWLD 11 -1 FP BE Pri
!#4 N5400 P2990 LD 3 -1 Int BE Pri
!#4 N5401 P2991 LD 1 -1 Int BE Pri
!#4 N5402 P2989 QWLD 10 -1 FP BE Pri
!#4 N5403 P2989 QWLD 11 -1 FP BE Pri
!#4 N5404 P2990 LD 3 -1 Int BE Pri
!#4 N5405 P2991 LD 1 -1 Int BE Pri
!#4 N5406 P2992 LD 12 -1 FP BE Pri
!#4 N5407 P2993 DWLD 13 -1 Int BE Pri
!#4 N5408 P2994 LD 6 -1 Int BE Pri
!#4 N5409 P2995 ST 8 0x2000028 Int BE Pri
!#4 N5410 P2996 LD 15 -1 FP BE Pri
!#4 N5412 P2998 SWAP 11 0xffffffff 0x2000029 Int BE Pri
!#4 N5413 P2999 LD 15 -1 Int BE Pri
!#4 N5414 P3000 DWST 2 0x41800069 FP BE Pri
!#4 N5415 P3001 LD 11 -1 Int BE Pri
!#4 N5416 P3001 CAS 11 -1 N5415 0x200002a Int BE Pri
!#4 N5417 P3002 ST 3 0x4180006a FP BE Pri
!#4 N5418 P3003 DWLD 6 -1,0x0 Int BE Pri
!#4 N5419 P3003 CASX 6 -1,0x0 N5418 0x200002b Int BE Pri
!#4 N5420 P3004 LD 8 -1 Int BE Pri
!#4 N5421 P3005 LD 7 -1 Int BE Pri
!#4 N5422 P3006 QWLD 12 -1 FP BE Pri
!#4 N5423 P3006 QWLD 13 -1 FP BE Pri
!#4 N5425 P3006 QWLD 12 -1 FP BE Pri
!#4 N5426 P3006 QWLD 13 -1 FP BE Pri
!#4 N5429 P3009 BLD 14 -1 FP BE Pri
!#4 N5430 P3009 BLD 15 -1 FP BE Pri
!#4 N5431 P3010 LD 10 -1 Int BE Pri
!#4 N5432 P3011 LD 7 -1 Int BE Pri
!#4 N5433 P3012 LD 9 -1 FP BE Pri
!#4 N5434 P3013 DWST 1 0x4180006b FP BE Pri
!#4 N5435 P3014 QWST 6 0x4180006c FP BE Pri
!#4 N5436 P3014 QWST 7 0x4180006d FP BE Pri
!#4 N5438 P3016 LD 15 -1 Int BE Pri
!#4 N5439 P3017 LD 2 -1 Int BE Pri
!#4 N5440 P3016 LD 15 -1 Int BE Pri
!#4 N5441 P3017 LD 2 -1 Int BE Pri
!#4 N5442 P3018 DWLD 11 -1,0x0 Int BE Pri
!#4 N5443 P3018 CASX 11 -1,0x0 N5442 0x200002c Int BE Pri
!#4 N5444 P3019 DWLD 7 -1 FP BE Pri
!#4 N5445 P3019 DWLD 7 -1 FP BE Pri
!#4 N5447 P3021 QWLD 0 -1 FP BE Pri
!#4 N5448 P3021 QWLD 1 -1 FP BE Pri
!#4 N5450 P3021 QWLD 0 -1 FP BE Pri
!#4 N5451 P3021 QWLD 1 -1 FP BE Pri
!#4 N5452 P3022 LD 9 -1 FP BE Pri
!#4 N5453 P3022 LD 9 -1 FP BE Pri
!#4 N5454 P3023 DWLD 2 -1 Int BE Pri
!#4 N5455 P3024 LD 0 -1 Int LE Pri
!#4 N5456 P3023 DWLD 2 -1 Int BE Pri
!#4 N5457 P3024 LD 0 -1 Int LE Pri
!#4 N5458 P3025 BLD 2 -1 FP BE Pri
!#4 N5459 P3025 BLD 3 -1 FP BE Pri
!#4 N5460 P3026 BSTC 12 0x4180006e FP BE Pri
!#4 N5461 P3026 BSTC 13 0x4180006f FP BE Pri
!#4 N5462 P3025 BLD 2 -1 FP BE Pri
!#4 N5463 P3025 BLD 3 -1 FP BE Pri
!#4 N5464 P3026 BSTC 12 0x41800070 FP BE Pri
!#4 N5465 P3026 BSTC 13 0x41800071 FP BE Pri
!#4 N5466 P3027 LD 3 -1 Int BE Pri
!#4 N5467 P3028 LD 0 -1 Int BE Pri
!#4 N5468 P3027 LD 3 -1 Int BE Pri
!#4 N5469 P3028 LD 0 -1 Int BE Pri
!#4 N5470 P3029 BSTC 4 0x41800072 FP BE Pri
!#4 N5471 P3029 BSTC 5 0x41800073 FP BE Pri
!#4 N5472 P3030 LD 6 -1 FP BE Pri
!#4 N5473 P3030 LD 6 -1 FP BE Pri
!#4 N5474 P3031 LD 3 -1 NF Int BE Pri
!#4 N5475 P3032 LD 15 -1 Int BE Pri
!#4 N5476 P3031 LD 3 -1 NF Int BE Pri
!#4 N5477 P3032 LD 15 -1 Int BE Pri
!#4 N5478 P3033 DWLD 2 -1 FP BE Pri
!#4 N5479 P3034 BST 0 0x41800074 FP BE Pri
!#4 N5480 P3034 BST 1 0x41800075 FP BE Pri
!#4 N5481 P3033 DWLD 2 -1 FP BE Pri
!#4 N5482 P3034 BST 0 0x41800076 FP BE Pri
!#4 N5483 P3034 BST 1 0x41800077 FP BE Pri
!#4 N5484 P3035 LD 6 -1 Int BE Pri
!#4 N5485 P3036 LD 1 -1 NF FP BE Pri
!#4 N5486 P3037 LD 14 -1 Int BE Pri
!#4 N5487 P3035 LD 6 -1 Int BE Pri
!#4 N5488 P3036 LD 1 -1 NF FP BE Pri
!#4 N5489 P3037 LD 14 -1 Int BE Pri
!#4 N5491 P3039 BST 2 0x41800078 FP BE Pri
!#4 N5492 P3039 BST 3 0x41800079 FP BE Pri
!#4 N5494 P3039 BST 2 0x4180007a FP BE Pri
!#4 N5495 P3039 BST 3 0x4180007b FP BE Pri
!#4 N5496 P3040 LD 12 -1 FP BE Pri
!#4 N5497 P3041 LD 8 -1 Int BE Pri
!#4 N5498 P3042 LD 3 -1 Int BE Pri
!#4 N5499 P3043 LD 5 -1 FP BE Pri
!#4 N5500 P3043 LD 5 -1 FP BE Pri
!#4 N5501 P3044 DWST 1 0x4180007c FP BE Pri
!#4 N5502 P3045 LD 1 -1 Int BE Pri
!#4 N5503 P3046 LD 1 -1 Int BE Pri
!#4 N5504 P3047 LD 1 -1 NF FP BE Pri
!#4 N5508 P3050 ST 10 0x4180007d FP BE Pri
!#4 N5509 P3051 BST 14 0x4180007e FP BE Pri
!#4 N5510 P3051 BST 15 0x4180007f FP BE Pri
!#4 N5511 P3050 ST 10 0x41800080 FP BE Pri
!#4 N5512 P3051 BST 14 0x41800081 FP BE Pri
!#4 N5513 P3051 BST 15 0x41800082 FP BE Pri
!#4 N5514 P3052 SWAP 5 0xffffffff 0x200002d Int BE Pri
!#4 N5515 P3053 LD 5 -1 Int BE Pri
!#4 N5516 P3054 DWLD 13 -1,0x0 Int BE Pri
!#4 N5517 P3054 CASX 13 -1,0x0 N5516 0x200002e Int BE Pri
!#4 N5518 P3055 LD 10 -1 FP BE Pri
!#4 N5519 P3056 ST 13 0x200002f Int BE Pri
!#4 N5520 P3056 ST 13 0x2000030 Int BE Pri
!#4 N5521 P3057 LD 3 -1 Int BE Pri
!#4 N5522 P3058 LD 12 -1 Int BE Pri
!#4 N5523 P3059 LD 13 -1 FP BE Pri
!#4 N5524 P3060 LD 5 -1 FP BE Pri
!#4 N5525 P3061 LD 10 -1 FP BE Pri
!#4 N5526 P3062 DWST 9 0x2000031 Int BE Pri
!#4 N5527 P3063 QWST 12 0x41800083 FP BE Pri
!#4 N5528 P3063 QWST 13 0x41800084 FP BE Pri
!#4 N5529 P3062 DWST 9 0x2000032 Int BE Pri
!#4 N5530 P3063 QWST 12 0x41800085 FP BE Pri
!#4 N5531 P3063 QWST 13 0x41800086 FP BE Pri
!#4 N5532 P3064 DWLD 15 -1,0x0 Int BE Pri
!#4 N5533 P3064 CASX 15 -1,0x0 N5532 0x2000033 Int BE Pri
!#4 N5534 P3065 LD 2 -1 Int BE Pri
!#4 N5535 P3065 CAS 2 -1 N5534 0x2000034 Int BE Pri
!#4 N5536 P3066 LD 5 -1 FP BE Pri
!#4 N5537 P3066 LD 5 -1 FP BE Pri
!#4 N5538 P3067 BLD 8 -1 FP BE Pri
!#4 N5539 P3067 BLD 9 -1 FP BE Pri
!#4 N5541 P3069 BST 8 0x41800087 FP BE Pri
!#4 N5542 P3069 BST 9 0x41800088 FP BE Pri
!#4 N5543 P3070 BLD 0 -1 FP BE Pri
!#4 N5544 P3070 BLD 1 -1 FP BE Pri
!#4 N5546 P3072 LD 9 -1 FP BE Pri
!#4 N5548 P3072 LD 9 -1 FP BE Pri
!#4 N5550 P3074 LD 15 -1 Int BE Pri
!#4 N5551 P3074 CAS 15 -1 N5550 0x2000035 Int BE Pri
!#4 N5552 P3074 LD 15 -1 Int BE Pri
!#4 N5553 P3074 CAS 15 -1 N5552 0x2000036 Int BE Pri
!#4 N5554 P3075 DWLD 4 -1 FP BE Pri
!#4 N5555 P3076 LD 14 -1 NF FP BE Pri
!#4 N5556 P3077 LD 12 -1 FP BE Pri
!#4 N5557 P3076 LD 14 -1 NF FP BE Pri
!#4 N5558 P3077 LD 12 -1 FP BE Pri
!#4 N5559 P3078 LD 3 -1 FP BE Pri
!#4 N5561 P3078 LD 3 -1 FP BE Pri
!#4 N5563 P3080 LD 6 -1 Int BE Pri
!#4 N5564 P3081 LD 10 -1 Int BE Pri
!#4 N5565 P3082 LD 9 -1 FP BE Pri
!#4 N5566 P3083 LD 9 -1 FP BE Pri
!#4 N5567 P3084 LD 14 -1 FP BE Pri
!#4 N5568 P3085 LD 4 -1 FP BE Pri
!#4 N5570 P3087 QWLD 2 -1 FP BE Pri
!#4 N5571 P3087 QWLD 3 -1 FP BE Pri
!#4 N5572 P3088 LD 3 -1 FP BE Pri
!#4 N5573 P3089 LD 5 -1 Int BE Pri
!#4 N5574 P3090 LD 11 -1 Int BE Pri
!#4 N5575 P3088 LD 3 -1 FP BE Pri
!#4 N5576 P3089 LD 5 -1 Int BE Pri
!#4 N5577 P3090 LD 11 -1 Int BE Pri
!#4 N5580 P3092 LD 11 -1 Int BE Pri
!#4 N5581 P3093 SWAP 7 0xffffffff 0x2000037 Int BE Pri
!#4 N5582 P3094 LD 5 -1 Int BE Pri
!#4 N5583 P3095 QWLD 4 -1 FP BE Pri
!#4 N5584 P3095 QWLD 5 -1 FP BE Pri
!#4 N5585 P3096 LD 11 -1 Int BE Pri
!#4 N5586 P3097 DWLD 10 -1,0x0 Int BE Pri
!#4 N5587 P3097 CASX 10 -1,0x0 N5586 0x2000038 Int BE Pri
!#4 N5588 P3097 DWLD 10 -1,0x0 Int BE Pri
!#4 N5589 P3097 CASX 10 -1,0x0 N5588 0x2000039 Int BE Pri
!#4 N5591 P3099 LD 4 -1 FP BE Pri
!#4 N5592 P3100 LD 3 -1 Int BE Pri
!#4 N5593 P3101 QWLD 12 -1 FP BE Pri
!#4 N5594 P3101 QWLD 13 -1 FP BE Pri
!#4 N5595 P3102 LD 9 -1 Int BE Pri
!#4 N5597 P3104 LD 12 -1 FP BE Pri
!#4 N5599 P3104 LD 12 -1 FP BE Pri
!#4 N5601 P3106 LD 13 -1 FP BE Pri
!#4 N5604 P3108 QWLD 4 -1 NF FP BE Pri
!#4 N5605 P3108 QWLD 5 -1 NF FP BE Pri
!#4 N5607 P3110 SWAP 4 0xffffffff 0x200003a Int BE Pri
!#4 N5608 P3111 LD 7 -1 Int BE Pri
!#4 N5609 P3110 SWAP 4 0xffffffff 0x200003b Int BE Pri
!#4 N5610 P3111 LD 7 -1 Int BE Pri
!#4 N5611 P3112 ST 13 0x200003c Int BE Pri
!#4 N5612 P3112 ST 13 0x200003d Int BE Pri
!#4 N5615 P3115 QWLD 0 -1 NF FP BE Pri
!#4 N5616 P3115 QWLD 1 -1 NF FP BE Pri
!#4 N5618 P3115 QWLD 0 -1 NF FP BE Pri
!#4 N5619 P3115 QWLD 1 -1 NF FP BE Pri
!#4 N5620 P3116 ST 10 0x200003e Int BE Pri
!#4 N5621 P3117 LD 14 -1 Int BE Pri
!#4 N5622 P3118 LD 1 -1 Int BE Pri
!#4 N5624 P3120 LD 1 -1 Int LE Pri
!#4 N5626 P3122 LD 1 -1 Int BE Pri
!#4 N5627 P3123 LD 4 -1 Int BE Pri
!#4 N5628 P3124 LD 0 -1 Int BE Pri
!#4 N5629 P3123 LD 4 -1 Int BE Pri
!#4 N5630 P3124 LD 0 -1 Int BE Pri
!#4 N5631 P3125 BST 12 0x41800089 FP BE Pri
!#4 N5632 P3125 BST 13 0x4180008a FP BE Pri
!#4 N5636 P3128 LD 8 -1 FP BE Pri
!#4 N5639 P3131 BSTC 6 0x4180008b FP BE Pri
!#4 N5640 P3131 BSTC 7 0x4180008c FP BE Pri
!#4 N5641 P3132 LD 13 -1 Int BE Pri
!#4 N5642 P3133 LD 6 -1 Int BE Pri
!#4 N5643 P3131 BSTC 6 0x4180008d FP BE Pri
!#4 N5644 P3131 BSTC 7 0x4180008e FP BE Pri
!#4 N5645 P3132 LD 13 -1 Int BE Pri
!#4 N5646 P3133 LD 6 -1 Int BE Pri
!#4 N5648 P3135 LD 11 -1 FP BE Pri
!#4 N5650 P3135 LD 11 -1 FP BE Pri
!#4 N5652 P3137 BSTC 10 0x4180008f FP BE Pri
!#4 N5653 P3137 BSTC 11 0x41800090 FP BE Pri
!#4 N5655 P3139 QWLD 0 -1 FP BE Pri
!#4 N5656 P3139 QWLD 1 -1 FP BE Pri
!#4 N5658 P3139 QWLD 0 -1 FP BE Pri
!#4 N5659 P3139 QWLD 1 -1 FP BE Pri
!#4 N5660 P3140 LD 10 -1 Int BE Pri
!#4 N5661 P3141 LD 12 -1 Int LE Pri
!#4 N5662 P3142 BST 12 0x41800091 FP BE Pri
!#4 N5663 P3142 BST 13 0x41800092 FP BE Pri
!#4 N5664 P3143 LD 8 -1 FP BE Pri
!#4 N5665 P3142 BST 12 0x41800093 FP BE Pri
!#4 N5666 P3142 BST 13 0x41800094 FP BE Pri
!#4 N5667 P3143 LD 8 -1 FP BE Pri
!#4 N5668 P3144 SWAP 8 0xffffffff 0x200003f Int BE Pri
!#4 N5670 P3146 LD 4 -1 Int BE Pri
!#4 N5671 P3147 LD 3 -1 FP BE Pri
!#4 N5672 P3148 ST 14 0x41800095 FP BE Pri
!#4 N5673 P3149 ST 9 0x41800096 FP BE Pri
!#4 N5674 P3150 BLD 14 -1 FP BE Pri
!#4 N5675 P3150 BLD 15 -1 FP BE Pri
!#4 N5677 P3150 BLD 14 -1 FP BE Pri
!#4 N5678 P3150 BLD 15 -1 FP BE Pri
!#4 N5681 P3153 BLD 6 -1 FP BE Pri
!#4 N5682 P3153 BLD 7 -1 FP BE Pri
!#4 N5683 P3153 BLD 6 -1 FP BE Pri
!#4 N5684 P3153 BLD 7 -1 FP BE Pri
!#4 N5685 P3154 LD 13 -1 FP BE Pri
!#4 N5686 P3155 LD 5 -1 NF FP BE Pri
!#4 N5687 P3154 LD 13 -1 FP BE Pri
!#4 N5688 P3155 LD 5 -1 NF FP BE Pri
!#4 N5689 P3156 BST 14 0x41800097 FP BE Pri
!#4 N5690 P3156 BST 15 0x41800098 FP BE Pri
!#4 N5691 P3157 LD 7 -1 Int BE Pri
!#4 N5692 P3158 LD 10 -1 Int BE Pri
!#4 N5693 P3156 BST 14 0x41800099 FP BE Pri
!#4 N5694 P3156 BST 15 0x4180009a FP BE Pri
!#4 N5695 P3157 LD 7 -1 Int BE Pri
!#4 N5696 P3158 LD 10 -1 Int BE Pri
!#4 N5697 P3159 QWST 4 0x4180009b FP BE Pri
!#4 N5698 P3159 QWST 5 0x4180009c FP BE Pri
!#4 N5699 P3160 LD 6 -1 FP BE Pri
!#4 N5700 P3159 QWST 4 0x4180009d FP BE Pri
!#4 N5701 P3159 QWST 5 0x4180009e FP BE Pri
!#4 N5702 P3160 LD 6 -1 FP BE Pri
!#4 N5703 P3161 LD 0 -1 Int BE Pri
!#4 N5704 P3162 LD 1 -1 Int BE Pri
!#4 N5705 P3161 LD 0 -1 Int BE Pri
!#4 N5706 P3162 LD 1 -1 Int BE Pri
!#4 N5707 P3163 LD 6 -1 FP BE Pri
!#4 N5708 P3164 QWST 0 0x4180009f FP BE Pri
!#4 N5709 P3164 QWST 1 0x418000a0 FP BE Pri
!#4 N5711 P3166 LD 7 -1 NF Int LE Pri
!#4 N5712 P3167 LD 5 -1 NF Int BE Pri
!#4 N5713 P3166 LD 7 -1 NF Int LE Pri
!#4 N5714 P3167 LD 5 -1 NF Int BE Pri
!#4 N5715 P3168 LD 1 -1 Int BE Pri
!#4 N5717 P3170 LD 2 -1 Int BE Pri
!#4 N5718 P3171 LD 15 -1 FP BE Pri
!#4 N5719 P3172 SWAP 0 0xffffffff 0x2000040 Int BE Pri
!#4 N5720 P3173 BST 6 0x418000a1 FP BE Pri
!#4 N5721 P3173 BST 7 0x418000a2 FP BE Pri
!#4 N5722 P3174 LD 13 -1 Int BE Pri
!#4 N5723 P3172 SWAP 0 0xffffffff 0x2000041 Int BE Pri
!#4 N5724 P3173 BST 6 0x418000a3 FP BE Pri
!#4 N5725 P3173 BST 7 0x418000a4 FP BE Pri
!#4 N5726 P3174 LD 13 -1 Int BE Pri
!#4 N5727 P3175 LD 9 -1 FP BE Pri
!#4 N5728 P3176 LD 7 -1 FP BE Pri
!#4 N5729 P3175 LD 9 -1 FP BE Pri
!#4 N5730 P3176 LD 7 -1 FP BE Pri
!#4 N5731 P3177 LD 9 -1 FP BE Pri
!#4 N5732 P3178 QWST 12 0x418000a5 FP BE Pri
!#4 N5733 P3178 QWST 13 0x418000a6 FP BE Pri
!#4 N5734 P3178 QWST 12 0x418000a7 FP BE Pri
!#4 N5735 P3178 QWST 13 0x418000a8 FP BE Pri
!#4 N5736 P3179 LD 2 -1 Int BE Pri
!#4 N5737 P3179 CAS 2 -1 N5736 0x2000042 Int BE Pri
!#4 N5738 P3180 LD 5 -1 NF FP BE Pri
!#4 N5740 P3182 LD 12 -1 NF Fault Int BE Pri
!#4 N5741 P3183 LD 3 -1 Int BE Pri
!#4 N5742 P3184 LD 7 -1 Int BE Pri
!#4 N5743 P3184 CAS 7 -1 N5742 0x2000043 Int BE Pri
!#4 N5744 P3185 BST 6 0x418000a9 FP BE Pri
!#4 N5745 P3185 BST 7 0x418000aa FP BE Pri
!#4 N5746 P3184 LD 7 -1 Int BE Pri
!#4 N5747 P3184 CAS 7 -1 N5746 0x2000044 Int BE Pri
!#4 N5748 P3185 BST 6 0x418000ab FP BE Pri
!#4 N5749 P3185 BST 7 0x418000ac FP BE Pri
!#4 N5750 P3186 LD 10 -1 FP BE Pri
!#4 N5751 P3187 LD 6 -1 NF Int BE Pri
!#4 N5752 P3188 LD 4 -1 Int BE Pri
!#4 N5753 P3186 LD 10 -1 FP BE Pri
!#4 N5754 P3187 LD 6 -1 NF Int BE Pri
!#4 N5755 P3188 LD 4 -1 Int BE Pri
!#4 N5756 P3189 LD 9 -1 Int BE Pri
!#4 N5757 P3190 DWLD 5 -1,0x0 Int BE Pri
!#4 N5758 P3190 CASX 5 -1,0x0 N5757 0x2000045 Int BE Pri
!#4 N5759 P3191 LD 5 -1 Int BE Pri
!#4 N5760 P3189 LD 9 -1 Int BE Pri
!#4 N5761 P3190 DWLD 5 -1,0x0 Int BE Pri
!#4 N5762 P3190 CASX 5 -1,0x0 N5761 0x2000046 Int BE Pri
!#4 N5763 P3191 LD 5 -1 Int BE Pri
!#4 N5764 P3192 LD 13 -1 Int BE Pri
!#4 N5765 P3192 CAS 13 -1 N5764 0x2000047 Int BE Pri
!#4 N5766 P3192 LD 13 -1 Int BE Pri
!#4 N5767 P3192 CAS 13 -1 N5766 0x2000048 Int BE Pri
!#4 N5768 P3193 BLD 12 -1 FP BE Pri
!#4 N5769 P3193 BLD 13 -1 FP BE Pri
!#4 N5773 P3196 LD 8 -1 FP BE Pri
!#4 N5774 P3196 LD 8 -1 FP BE Pri
!#4 N5775 P3197 QWLD 4 -1 FP BE Pri
!#4 N5776 P3197 QWLD 5 -1 FP BE Pri
!#4 N5777 P3197 QWLD 4 -1 FP BE Pri
!#4 N5778 P3197 QWLD 5 -1 FP BE Pri
!#4 N5782 P3200 DWST 4 0x418000ad FP BE Pri
!#4 N5783 P3201 SWAP 12 0xffffffff 0x2000049 Int BE Pri
!#4 N5784 P3202 LD 1 -1 Int BE Pri
!#4 N5785 P3201 SWAP 12 0xffffffff 0x200004a Int BE Pri
!#4 N5786 P3202 LD 1 -1 Int BE Pri
!#4 N5788 P3204 SWAP 15 0xffffffff 0x200004b Int LE Pri
!#4 N5789 P3205 LD 3 -1 Int BE Pri
!#4 N5790 P3206 LD 8 -1 FP BE Pri
!#4 N5791 P3206 LD 8 -1 FP BE Pri
!#4 N5795 P3209 LD 9 -1 NF Int BE Pri
!#4 N5796 P3210 LD 3 -1 Int BE Pri
!#4 N5797 P3211 LD 0 -1 FP BE Pri
!#4 N5798 P3212 QWLD 2 -1 FP BE Pri
!#4 N5799 P3212 QWLD 3 -1 FP BE Pri
!#4 N5800 P3213 DWLD 13 -1 Int BE Pri
!#4 N5801 P3214 LD 3 -1 Int BE Pri
!#4 N5802 P3215 LD 9 -1 Int BE Pri
!#4 N5803 P3216 LD 7 -1 Int BE Pri
!#4 N5805 P3218 DWLD 13 -1 FP BE Pri
!#4 N5807 P3218 DWLD 13 -1 FP BE Pri
!#4 N5809 P3220 BSTC 4 0x418000ae FP BE Pri
!#4 N5810 P3220 BSTC 5 0x418000af FP BE Pri
!#4 N5811 P3221 LD 6 -1 Int BE Pri
!#4 N5812 P3222 LD 9 -1 Int BE Pri
!#4 N5813 P3220 BSTC 4 0x418000b0 FP BE Pri
!#4 N5814 P3220 BSTC 5 0x418000b1 FP BE Pri
!#4 N5815 P3221 LD 6 -1 Int BE Pri
!#4 N5816 P3222 LD 9 -1 Int BE Pri
!#4 N5818 P3224 BLD 14 -1 FP BE Pri
!#4 N5819 P3224 BLD 15 -1 FP BE Pri
!#4 N5824 P3227 QWLD 14 -1 FP BE Pri
!#4 N5825 P3227 QWLD 15 -1 FP BE Pri
!#4 N5826 P3228 BLD 12 -1 FP BE Pri
!#4 N5827 P3228 BLD 13 -1 FP BE Pri
!#4 N5828 P3227 QWLD 14 -1 FP BE Pri
!#4 N5829 P3227 QWLD 15 -1 FP BE Pri
!#4 N5830 P3228 BLD 12 -1 FP BE Pri
!#4 N5831 P3228 BLD 13 -1 FP BE Pri
!#4 N5832 P3229 LD 9 -1 FP BE Pri
!#4 N5833 P3229 LD 9 -1 FP BE Pri
!#4 N5834 P3230 LD 12 -1 Int BE Pri
!#4 N5835 P3231 LD 15 -1 Int BE Pri
!#4 N5837 P3233 ST 10 0x200004c Int BE Pri
!#4 N5838 P3234 BST 6 0x418000b2 FP BE Pri
!#4 N5839 P3234 BST 7 0x418000b3 FP BE Pri
!#4 N5840 P3235 LD 2 -1 Int BE Pri
!#4 N5841 P3235 CAS 2 -1 N5840 0x200004d Int BE Pri
!#4 N5842 P3236 ST 13 0x200004e Int BE Pri
!#4 N5844 P3236 ST 13 0x200004f Int BE Pri
!#4 N5846 P3238 LD 7 -1 FP BE Pri
!#4 N5847 P3238 LD 7 -1 FP BE Pri
!#4 N5848 P3239 ST 6 0x418000b4 FP BE Pri
!#4 N5849 P3240 DWLD 1 -1,0x0 Int BE Pri
!#4 N5850 P3240 CASX 1 -1,0x0 N5849 0x2000050 Int BE Pri
!#4 N5851 P3241 DWLD 13 -1 FP BE Pri
!#4 N5852 P3241 DWLD 13 -1 FP BE Pri
!#4 N5853 P3242 LD 6 -1 FP BE Pri
!#4 N5854 P3242 LD 6 -1 FP BE Pri
!#4 N5855 P3243 SWAP 3 0xffffffff 0x2000051 Int BE Pri
!#4 N5856 P3244 MEMBAR
!#4 N5857 P3245 LD 5 -1 Int BE Pri
!#4 N5858 P3243 SWAP 3 0xffffffff 0x2000052 Int BE Pri
!#4 N5859 P3244 MEMBAR
!#4 N5860 P3245 LD 5 -1 Int BE Pri
!#4 N5864 P3248 BSTC 14 0x418000b5 FP BE Pri
!#4 N5865 P3248 BSTC 15 0x418000b6 FP BE Pri
!#4 N5866 P3249 BSTC 0 0x418000b7 FP BE Pri
!#4 N5867 P3249 BSTC 1 0x418000b8 FP BE Pri
!#4 N5868 P3248 BSTC 14 0x418000b9 FP BE Pri
!#4 N5869 P3248 BSTC 15 0x418000ba FP BE Pri
!#4 N5870 P3249 BSTC 0 0x418000bb FP BE Pri
!#4 N5871 P3249 BSTC 1 0x418000bc FP BE Pri
!#4 N5872 P3250 LD 15 -1 Int BE Pri
!#4 N5873 P3251 ST 15 0x2000053 Int BE Pri
!#4 N5874 P3252 LD 7 -1 Int BE Pri
!#4 N5875 P3253 QWLD 0 -1 FP BE Pri
!#4 N5876 P3253 QWLD 1 -1 FP BE Pri
!#4 N5877 P3254 LD 10 -1 Int BE Pri
!#4 N5878 P3255 LD 3 -1 FP BE Pri
!#4 N5879 P3256 LD 0 -1 Int BE Pri
!#4 N5881 P3258 LD 2 -1 Int BE Pri
!#4 N5882 P3259 LD 13 -1 Int BE Pri
!#4 N5883 P3260 LD 8 -1 Int BE Pri
!#4 N5884 P3260 CAS 8 -1 N5883 0x2000054 Int BE Pri
!#4 N5885 P3261 QWLD 2 -1 FP BE Pri
!#4 N5886 P3261 QWLD 3 -1 FP BE Pri
!#4 N5887 P3260 LD 8 -1 Int BE Pri
!#4 N5888 P3260 CAS 8 -1 N5887 0x2000055 Int BE Pri
!#4 N5889 P3261 QWLD 2 -1 FP BE Pri
!#4 N5890 P3261 QWLD 3 -1 FP BE Pri
!#4 N5891 P3262 LD 13 -1 FP BE Pri
!#4 N5892 P3263 BLD 12 -1 FP BE Pri
!#4 N5893 P3263 BLD 13 -1 FP BE Pri
!#4 N5894 P3264 LD 7 -1 FP BE Pri
!#4 N5895 P3264 LD 7 -1 FP BE Pri
!#4 N5896 P3265 LD 9 -1 FP BE Pri
!#4 N5897 P3266 DWLD 4 -1 Int BE Pri
!#4 N5898 P3267 LD 4 -1 Int BE Pri
!#4 N5899 P3268 DWLD 14 -1 FP BE Pri
!#4 N5900 P3269 DWLD 13 -1 Int BE Pri
!#4 N5901 P3270 LD 7 -1 Int BE Pri
!#4 N5902 P3271 DWLD 10 -1 Int BE Pri
!#4 N5903 P3272 LD 2 -1 Int BE Pri
!#4 N5904 P3273 LD 15 -1 FP BE Pri
!#4 N5906 P3275 LD 7 -1 Int BE Pri
!#4 N5907 P3276 LD 6 -1 Int BE Pri
!#4 N5909 P3275 LD 7 -1 Int BE Pri
!#4 N5910 P3276 LD 6 -1 Int BE Pri
!#4 N5911 P3277 LD 15 -1 Int BE Pri
!#4 N5912 P3277 CAS 15 -1 N5911 0x2000056 Int BE Pri
!#4 N5913 P3278 LD 8 -1 Int BE Pri
!#4 N5914 P3279 LD 1 -1 Int BE Pri
!#4 N5916 P3281 LD 15 -1 FP BE Pri
!#4 N5918 P3283 LD 9 -1 Int BE Pri
!#4 N5919 P3284 LD 3 -1 Int BE Pri
!#4 N5921 P3286 LD 11 -1 NF FP BE Pri
!#4 N5923 P3288 LD 5 -1 Int BE Pri
!#4 N5924 P3289 LD 11 -1 Int BE Pri
!#4 N5926 P3288 LD 5 -1 Int BE Pri
!#4 N5927 P3289 LD 11 -1 Int BE Pri
!#4 N5931 P3292 LD 2 -1 FP BE Pri
!#4 N5932 P3293 LD 4 -1 Int BE Pri
!#4 N5933 P3294 DWLD 5 -1 Int BE Pri
!#4 N5934 P3293 LD 4 -1 Int BE Pri
!#4 N5935 P3294 DWLD 5 -1 Int BE Pri
!#4 N5936 P3295 LD 7 -1 Int BE Pri
!#4 N5937 P3296 LD 5 -1 Int BE Pri
!#4 N5938 P3295 LD 7 -1 Int BE Pri
!#4 N5939 P3296 LD 5 -1 Int BE Pri
!#4 N5940 P3297 QWST 12 0x418000bd FP BE Pri
!#4 N5941 P3297 QWST 13 0x418000be FP BE Pri
!#4 N5943 P3297 QWST 12 0x418000bf FP BE Pri
!#4 N5944 P3297 QWST 13 0x418000c0 FP BE Pri
!#4 N5947 P3300 BLD 14 -1 FP BE Pri
!#4 N5948 P3300 BLD 15 -1 FP BE Pri
!#4 N5949 P3301 LD 8 -1 FP BE Pri
!#4 N5950 P3302 LD 9 -1 Int BE Pri
!#4 N5951 P3303 LD 10 -1 Int BE Pri
!#4 N5952 P3304 LD 11 -1 Int BE Pri
!#4 N5953 P3305 LD 9 -1 Int BE Pri
!#4 N5954 P3304 LD 11 -1 Int BE Pri
!#4 N5955 P3305 LD 9 -1 Int BE Pri
!#4 N5956 P3306 LD 9 -1 FP BE Pri
!#4 N5957 P3307 QWST 2 0x418000c1 FP BE Pri
!#4 N5958 P3307 QWST 3 0x418000c2 FP BE Pri
!#4 N5959 P3306 LD 9 -1 FP BE Pri
!#4 N5960 P3307 QWST 2 0x418000c3 FP BE Pri
!#4 N5961 P3307 QWST 3 0x418000c4 FP BE Pri
!#4 N5963 P3309 BLD 4 -1 FP BE Pri
!#4 N5964 P3309 BLD 5 -1 FP BE Pri
!#4 N5965 P3310 SWAP 12 0xffffffff 0x2000057 Int BE Pri
!#4 N5966 P3311 LD 8 -1 Int BE Pri
!#4 N5967 P3312 LD 0 -1 FP BE Pri
!#4 N5968 P3313 DWLD 15 -1,0x0 Int BE Pri
!#4 N5969 P3313 CASX 15 -1,0x0 N5968 0x2000058 Int BE Pri
!#4 N5970 P3314 BSTC 12 0x418000c5 FP BE Pri
!#4 N5971 P3314 BSTC 13 0x418000c6 FP BE Pri
!#4 N5972 P3313 DWLD 15 -1,0x0 Int BE Pri
!#4 N5973 P3313 CASX 15 -1,0x0 N5972 0x2000059 Int BE Pri
!#4 N5974 P3314 BSTC 12 0x418000c7 FP BE Pri
!#4 N5975 P3314 BSTC 13 0x418000c8 FP BE Pri
!#4 N5976 P3315 LD 11 -1 Int BE Pri
!#4 N5977 P3315 CAS 11 -1 N5976 0x200005a Int BE Pri
!#4 N5978 P3315 LD 11 -1 Int BE Pri
!#4 N5979 P3315 CAS 11 -1 N5978 0x200005b Int BE Pri
!#4 N5980 P3316 QWLD 12 -1 FP BE Pri
!#4 N5981 P3316 QWLD 13 -1 FP BE Pri
!#4 N5982 P3317 LD 3 -1 FP BE Pri
!#4 N5983 P3318 LD 5 -1 Int BE Pri
!#4 N5984 P3319 LD 9 -1 Int BE Pri
!#4 N5985 P3318 LD 5 -1 Int BE Pri
!#4 N5986 P3319 LD 9 -1 Int BE Pri
!#4 N5987 P3320 BSTC 14 0x418000c9 FP BE Pri
!#4 N5988 P3320 BSTC 15 0x418000ca FP BE Pri
!#4 N5990 P3322 LD 3 -1 Int BE Pri
!#4 N5991 P3323 LD 0 -1 FP BE Pri
!#4 N5992 P3324 LD 4 -1 Int BE Pri
!#4 N5993 P3322 LD 3 -1 Int BE Pri
!#4 N5994 P3323 LD 0 -1 FP BE Pri
!#4 N5995 P3324 LD 4 -1 Int BE Pri
!#4 N5996 P3325 DWLD 14 -1 Int BE Pri
!#4 N5997 P3326 DWLD 5 -1,0x0 Int BE Pri
!#4 N5998 P3326 CASX 5 -1,0x0 N5997 0x200005c Int BE Pri
!#4 N5999 P3327 LD 6 -1 Int BE Pri
!#4 N6000 P3328 QWST 4 0x418000cb FP BE Pri
!#4 N6001 P3328 QWST 5 0x418000cc FP BE Pri
!#4 N6002 P3328 QWST 4 0x418000cd FP BE Pri
!#4 N6003 P3328 QWST 5 0x418000ce FP BE Pri
!#4 N6005 P3330 LD 0 -1 Int BE Pri
!#4 N6007 P3332 LD 13 -1 Int BE Pri
!#4 N6008 P3330 LD 0 -1 Int BE Pri
!#4 N6010 P3332 LD 13 -1 Int BE Pri
!#4 N6011 P3333 LD 11 -1 NF FP BE Pri
!#4 N6012 P3333 LD 11 -1 NF FP BE Pri
!#4 N6013 P3334 LD 14 -1 Int BE Pri
!#4 N6014 P3335 LD 5 -1 NF Int BE Pri
!#4 N6015 P3334 LD 14 -1 Int BE Pri
!#4 N6016 P3335 LD 5 -1 NF Int BE Pri
!#4 N6018 P3337 BLD 8 -1 FP BE Pri
!#4 N6019 P3337 BLD 9 -1 FP BE Pri
!#4 N6020 P3338 BST 4 0x418000cf FP BE Pri
!#4 N6021 P3338 BST 5 0x418000d0 FP BE Pri
!#4 N6022 P3337 BLD 8 -1 FP BE Pri
!#4 N6023 P3337 BLD 9 -1 FP BE Pri
!#4 N6024 P3338 BST 4 0x418000d1 FP BE Pri
!#4 N6025 P3338 BST 5 0x418000d2 FP BE Pri
!#4 N6026 P3339 SWAP 6 0xffffffff 0x200005d Int BE Pri
!#4 N6027 P3340 LD 0 -1 Int BE Pri
!#4 N6028 P3341 DWLD 10 -1 FP BE Pri
!#4 N6029 P3342 SWAP 6 0xffffffff 0x200005e Int BE Pri
!#4 N6030 P3343 LD 3 -1 Int BE Pri
!#4 N6031 P3341 DWLD 10 -1 FP BE Pri
!#4 N6032 P3342 SWAP 6 0xffffffff 0x200005f Int BE Pri
!#4 N6033 P3343 LD 3 -1 Int BE Pri
!#4 N6035 P3345 LD 9 -1 FP BE Pri
!#4 N6036 P3346 LD 13 -1 Int BE Pri
!#4 N6037 P3347 LD 10 -1 Int BE Pri
!#4 N6038 P3348 BST 2 0x418000d3 FP BE Pri
!#4 N6039 P3348 BST 3 0x418000d4 FP BE Pri
!#4 N6040 P3349 LD 5 -1 Int BE Pri
!#4 N6041 P3350 LD 2 -1 NF Int BE Pri
!#4 N6042 P3351 DWST 15 0x418000d5 FP BE Pri
!#4 N6044 P3353 DWLD 11 -1,0x0 Int LE Pri
!#4 N6045 P3353 CASX 11 -1,0x0 N6044 0x2000060 Int LE Pri
!#4 N6046 P3353 DWLD 11 -1,0x0 Int LE Pri
!#4 N6047 P3353 CASX 11 -1,0x0 N6046 0x2000061 Int LE Pri
!#4 N6048 P3354 ST 12 0x418000d6 FP BE Pri
!#4 N6049 P3355 LD 5 -1 FP BE Pri
!#4 N6051 P3355 LD 5 -1 FP BE Pri
!#4 N6053 P3357 MEMBAR
!#5 N6054 P3358 LD 12 -1 Int BE Pri
!#5 N6055 P3358 CAS 12 -1 N6054 0x2800001 Int BE Pri
!#5 N6056 P3358 LD 12 -1 Int BE Pri
!#5 N6057 P3358 CAS 12 -1 N6056 0x2800002 Int BE Pri
!#5 N6059 P3360 QWLD 4 -1 FP BE Pri
!#5 N6060 P3360 QWLD 5 -1 FP BE Pri
!#5 N6061 P3361 DWLD 11 -1,0x0 Int BE Pri
!#5 N6062 P3361 CASX 11 -1,0x0 N6061 0x2800003 Int BE Pri
!#5 N6064 P3363 BST 14 0x42000001 FP BE Pri
!#5 N6065 P3363 BST 15 0x42000002 FP BE Pri
!#5 N6067 P3365 DWLD 9 -1 FP BE Pri
!#5 N6068 P3366 LD 1 -1 Int BE Pri
!#5 N6069 P3366 CAS 1 -1 N6068 0x2800004 Int BE Pri
!#5 N6071 P3366 LD 1 -1 Int BE Pri
!#5 N6072 P3366 CAS 1 -1 N6071 0x2800005 Int BE Pri
!#5 N6074 P3368 LD 7 -1 Int BE Pri
!#5 N6075 P3369 QWST 14 0x42000003 FP BE Pri
!#5 N6076 P3369 QWST 15 0x42000004 FP BE Pri
!#5 N6077 P3370 LD 13 -1 Int BE Pri
!#5 N6078 P3368 LD 7 -1 Int BE Pri
!#5 N6079 P3369 QWST 14 0x42000005 FP BE Pri
!#5 N6080 P3369 QWST 15 0x42000006 FP BE Pri
!#5 N6081 P3370 LD 13 -1 Int BE Pri
!#5 N6086 P3373 DWLD 9 -1,0x0 Int BE Pri
!#5 N6087 P3373 CASX 9 -1,0x0 N6086 0x2800006 Int BE Pri
!#5 N6088 P3374 LD 15 -1 FP BE Pri
!#5 N6089 P3373 DWLD 9 -1,0x0 Int BE Pri
!#5 N6090 P3373 CASX 9 -1,0x0 N6089 0x2800007 Int BE Pri
!#5 N6091 P3374 LD 15 -1 FP BE Pri
!#5 N6092 P3375 LD 15 -1 FP BE Pri
!#5 N6093 P3375 LD 15 -1 FP BE Pri
!#5 N6095 P3377 LD 2 -1 FP BE Pri
!#5 N6097 P3377 LD 2 -1 FP BE Pri
!#5 N6098 P3378 ST 15 0x2800008 Int BE Pri
!#5 N6099 P3379 LD 9 -1 FP BE Pri
!#5 N6103 P3382 ST 2 0x2800009 Int BE Pri
!#5 N6104 P3383 BLD 10 -1 FP BE Pri
!#5 N6105 P3383 BLD 11 -1 FP BE Pri
!#5 N6107 P3385 QWLD 14 -1 FP BE Pri
!#5 N6108 P3385 QWLD 15 -1 FP BE Pri
!#5 N6109 P3386 DWST 3 0x280000a Int BE Pri
!#5 N6110 P3385 QWLD 14 -1 FP BE Pri
!#5 N6111 P3385 QWLD 15 -1 FP BE Pri
!#5 N6112 P3386 DWST 3 0x280000b Int BE Pri
!#5 N6114 P3388 QWLD 0 -1 NF FP BE Pri
!#5 N6115 P3388 QWLD 1 -1 NF FP BE Pri
!#5 N6116 P3389 DWST 7 0x280000c Int BE Pri
!#5 N6117 P3388 QWLD 0 -1 NF FP BE Pri
!#5 N6118 P3388 QWLD 1 -1 NF FP BE Pri
!#5 N6119 P3389 DWST 7 0x280000d Int BE Pri
!#5 N6120 P3390 LD 3 -1 Int BE Pri
!#5 N6121 P3391 LD 4 -1 NF Int BE Pri
!#5 N6122 P3390 LD 3 -1 Int BE Pri
!#5 N6123 P3391 LD 4 -1 NF Int BE Pri
!#5 N6124 P3392 LD 1 -1 Int BE Pri
!#5 N6125 P3393 LD 4 -1 Int BE Pri
!#5 N6126 P3392 LD 1 -1 Int BE Pri
!#5 N6127 P3393 LD 4 -1 Int BE Pri
!#5 N6132 P3396 BSTC 14 0x42000007 FP BE Pri
!#5 N6133 P3396 BSTC 15 0x42000008 FP BE Pri
!#5 N6134 P3397 LD 3 -1 Int LE Pri
!#5 N6135 P3398 LD 10 -1 Int BE Pri
!#5 N6136 P3396 BSTC 14 0x42000009 FP BE Pri
!#5 N6137 P3396 BSTC 15 0x4200000a FP BE Pri
!#5 N6138 P3397 LD 3 -1 Int LE Pri
!#5 N6139 P3398 LD 10 -1 Int BE Pri
!#5 N6140 P3399 LD 6 -1 Int BE Pri
!#5 N6141 P3399 CAS 6 -1 N6140 0x280000e Int BE Pri
!#5 N6143 P3399 LD 6 -1 Int BE Pri
!#5 N6144 P3399 CAS 6 -1 N6143 0x280000f Int BE Pri
!#5 N6146 P3401 LD 5 -1 Int BE Pri
!#5 N6147 P3402 LD 5 -1 Int BE Pri
!#5 N6148 P3403 LD 2 -1 Int BE Pri
!#5 N6150 P3405 LD 6 -1 Int BE Pri
!#5 N6151 P3403 LD 2 -1 Int BE Pri
!#5 N6153 P3405 LD 6 -1 Int BE Pri
!#5 N6154 P3406 LD 7 -1 Int BE Pri
!#5 N6156 P3408 LD 14 -1 Int BE Pri
!#5 N6157 P3409 BLD 0 -1 FP BE Pri
!#5 N6158 P3409 BLD 1 -1 FP BE Pri
!#5 N6160 P3411 DWST 15 0x4200000b FP BE Pri
!#5 N6162 P3411 DWST 15 0x4200000c FP BE Pri
!#5 N6169 P3415 DWLD 9 -1,0x0 Int BE Pri
!#5 N6170 P3415 CASX 9 -1,0x0 N6169 0x2800010 Int BE Pri
!#5 N6171 P3415 DWLD 9 -1,0x0 Int BE Pri
!#5 N6172 P3415 CASX 9 -1,0x0 N6171 0x2800011 Int BE Pri
!#5 N6173 P3416 LD 7 -1 Int BE Pri
!#5 N6174 P3417 LD 3 -1 Int BE Pri
!#5 N6175 P3418 ST 4 0x2800012 Int BE Pri
!#5 N6176 P3419 LD 11 -1 FP BE Pri
!#5 N6181 P3423 BST 6 0x4200000d FP BE Pri
!#5 N6182 P3423 BST 7 0x4200000e FP BE Pri
!#5 N6184 P3423 BST 6 0x4200000f FP BE Pri
!#5 N6185 P3423 BST 7 0x42000010 FP BE Pri
!#5 N6186 P3424 BSTC 4 0x42000011 FP BE Pri
!#5 N6187 P3424 BSTC 5 0x42000012 FP BE Pri
!#5 N6188 P3424 BSTC 4 0x42000013 FP BE Pri
!#5 N6189 P3424 BSTC 5 0x42000014 FP BE Pri
!#5 N6192 P3426 DWLD 7 -1 Int BE Pri
!#5 N6193 P3427 LD 13 -1 Int BE Pri
!#5 N6194 P3428 DWST 9 0x42000015 FP BE Pri
!#5 N6195 P3429 ST 8 0x2800013 Int BE Pri
!#5 N6196 P3430 LD 12 -1 FP BE Pri
!#5 N6197 P3431 LD 15 -1 FP BE Pri
!#5 N6198 P3431 LD 15 -1 FP BE Pri
!#5 N6199 P3432 DWST 9 0x42000016 FP BE Pri
!#5 N6202 P3435 SWAP 1 0xffffffff 0x2800014 Int BE Pri
!#5 N6203 P3436 LD 12 -1 Int BE Pri
!#5 N6205 P3435 SWAP 1 0xffffffff 0x2800015 Int BE Pri
!#5 N6206 P3436 LD 12 -1 Int BE Pri
!#5 N6207 P3437 QWLD 6 -1 FP BE Pri
!#5 N6208 P3437 QWLD 7 -1 FP BE Pri
!#5 N6209 P3438 LD 10 -1 Int BE Pri
!#5 N6210 P3438 CAS 10 -1 N6209 0x2800016 Int BE Pri
!#5 N6211 P3439 LD 11 -1 FP BE Pri
!#5 N6213 P3441 DWLD 2 -1,0x0 Int BE Pri
!#5 N6214 P3441 CASX 2 -1,0x0 N6213 0x2800017 Int BE Pri
!#5 N6215 P3441 DWLD 2 -1,0x0 Int BE Pri
!#5 N6216 P3441 CASX 2 -1,0x0 N6215 0x2800018 Int BE Pri
!#5 N6217 P3442 LD 8 -1 Int BE Pri
!#5 N6218 P3443 LD 7 -1 NF Fault Int BE Pri
!#5 N6219 P3444 LD 10 -1 Int BE Pri
!#5 N6220 P3445 ST 12 0x2800019 Int BE Pri
!#5 N6221 P3446 LD 4 -1 Int BE Pri
!#5 N6222 P3447 LD 9 -1 FP BE Pri
!#5 N6223 P3448 DWLD 13 -1,0x0 Int BE Pri
!#5 N6224 P3448 CASX 13 -1,0x0 N6223 0x280001a Int BE Pri
!#5 N6225 P3447 LD 9 -1 FP BE Pri
!#5 N6226 P3448 DWLD 13 -1,0x0 Int BE Pri
!#5 N6227 P3448 CASX 13 -1,0x0 N6226 0x280001b Int BE Pri
!#5 N6228 P3449 BSTC 6 0x42000017 FP BE Pri
!#5 N6229 P3449 BSTC 7 0x42000018 FP BE Pri
!#5 N6230 P3450 LD 0 -1 FP BE Pri
!#5 N6231 P3449 BSTC 6 0x42000019 FP BE Pri
!#5 N6232 P3449 BSTC 7 0x4200001a FP BE Pri
!#5 N6233 P3450 LD 0 -1 FP BE Pri
!#5 N6234 P3451 ST 8 0x280001c Int BE Pri
!#5 N6236 P3451 ST 8 0x280001d Int BE Pri
!#5 N6238 P3453 QWLD 4 -1 NF FP BE Pri
!#5 N6239 P3453 QWLD 5 -1 NF FP BE Pri
!#5 N6240 P3453 QWLD 4 -1 NF FP BE Pri
!#5 N6241 P3453 QWLD 5 -1 NF FP BE Pri
!#5 N6242 P3454 BLD 12 -1 FP BE Pri
!#5 N6243 P3454 BLD 13 -1 FP BE Pri
!#5 N6244 P3455 LD 13 -1 Int BE Pri
!#5 N6245 P3456 LD 9 -1 Int BE Pri
!#5 N6246 P3455 LD 13 -1 Int BE Pri
!#5 N6247 P3456 LD 9 -1 Int BE Pri
!#5 N6248 P3457 QWLD 0 -1 FP BE Pri
!#5 N6249 P3457 QWLD 1 -1 FP BE Pri
!#5 N6250 P3458 LD 14 -1 FP BE Pri
!#5 N6251 P3459 LD 11 -1 Int BE Pri
!#5 N6252 P3460 LD 5 -1 Int BE Pri
!#5 N6253 P3459 LD 11 -1 Int BE Pri
!#5 N6254 P3460 LD 5 -1 Int BE Pri
!#5 N6255 P3461 LD 4 -1 Int BE Pri
!#5 N6256 P3462 LD 15 -1 Int BE Pri
!#5 N6258 P3464 DWLD 10 -1,0x0 Int BE Pri
!#5 N6259 P3464 CASX 10 -1,0x0 N6258 0x280001e Int BE Pri
!#5 N6261 P3464 DWLD 10 -1,0x0 Int BE Pri
!#5 N6262 P3464 CASX 10 -1,0x0 N6261 0x280001f Int BE Pri
!#5 N6263 P3465 SWAP 7 0xffffffff 0x2800020 Int BE Pri
!#5 N6264 P3466 DWST 8 0x2800021 Int BE Pri
!#5 N6265 P3467 LD 2 -1 Int BE Pri
!#5 N6266 P3465 SWAP 7 0xffffffff 0x2800022 Int BE Pri
!#5 N6267 P3466 DWST 8 0x2800023 Int BE Pri
!#5 N6268 P3467 LD 2 -1 Int BE Pri
!#5 N6269 P3468 LD 1 -1 Int BE Pri
!#5 N6270 P3469 LD 13 -1 Int BE Pri
!#5 N6271 P3468 LD 1 -1 Int BE Pri
!#5 N6272 P3469 LD 13 -1 Int BE Pri
!#5 N6273 P3470 SWAP 12 0xffffffff 0x2800024 Int BE Pri
!#5 N6274 P3471 LD 7 -1 Int BE Pri
!#5 N6279 P3474 LD 7 -1 FP BE Pri
!#5 N6280 P3475 LD 6 -1 Int BE Pri
!#5 N6281 P3475 CAS 6 -1 N6280 0x2800025 Int BE Pri
!#5 N6284 P3477 SWAP 14 0xffffffff 0x2800026 Int BE Pri
!#5 N6285 P3478 LD 8 -1 Int BE Pri
!#5 N6286 P3477 SWAP 14 0xffffffff 0x2800027 Int BE Pri
!#5 N6287 P3478 LD 8 -1 Int BE Pri
!#5 N6289 P3480 DWLD 9 -1,0x0 Int BE Pri
!#5 N6290 P3480 CASX 9 -1,0x0 N6289 0x2800028 Int BE Pri
!#5 N6291 P3481 BLD 6 -1 FP BE Pri
!#5 N6292 P3481 BLD 7 -1 FP BE Pri
!#5 N6293 P3482 LD 5 -1 Int BE Pri
!#5 N6294 P3483 LD 12 -1 Int BE Pri
!#5 N6295 P3484 BLD 14 -1 FP BE Pri
!#5 N6296 P3484 BLD 15 -1 FP BE Pri
!#5 N6298 P3484 BLD 14 -1 FP BE Pri
!#5 N6299 P3484 BLD 15 -1 FP BE Pri
!#5 N6301 P3486 LD 1 -1 Int BE Pri
!#5 N6302 P3487 LD 4 -1 Int BE Pri
!#5 N6303 P3488 BST 8 0x4200001b FP BE Pri
!#5 N6304 P3488 BST 9 0x4200001c FP BE Pri
!#5 N6306 P3488 BST 8 0x4200001d FP BE Pri
!#5 N6307 P3488 BST 9 0x4200001e FP BE Pri
!#5 N6311 P3491 BSTC 12 0x4200001f FP BE Pri
!#5 N6312 P3491 BSTC 13 0x42000020 FP BE Pri
!#5 N6313 P3492 LD 5 -1 FP BE Pri
!#5 N6314 P3493 LD 4 -1 NF FP BE Pri
!#5 N6315 P3494 SWAP 10 0xffffffff 0x2800029 Int BE Pri
!#5 N6316 P3495 LD 4 -1 Int BE Pri
!#5 N6317 P3496 LD 3 -1 FP BE Pri
!#5 N6318 P3496 LD 3 -1 FP BE Pri
!#5 N6319 P3497 DWLD 10 -1,0x0 Int BE Pri
!#5 N6320 P3497 CASX 10 -1,0x0 N6319 0x280002a Int BE Pri
!#5 N6321 P3497 DWLD 10 -1,0x0 Int BE Pri
!#5 N6322 P3497 CASX 10 -1,0x0 N6321 0x280002b Int BE Pri
!#5 N6323 P3498 LD 10 -1 Int BE Pri
!#5 N6324 P3499 LD 8 -1 FP BE Pri
!#5 N6325 P3500 LD 7 -1 Int BE Pri
!#5 N6326 P3498 LD 10 -1 Int BE Pri
!#5 N6327 P3499 LD 8 -1 FP BE Pri
!#5 N6328 P3500 LD 7 -1 Int BE Pri
!#5 N6329 P3501 LD 10 -1 NF Int BE Pri
!#5 N6330 P3502 LD 12 -1 NF Int BE Pri
!#5 N6331 P3503 LD 12 -1 NF FP BE Pri
!#5 N6332 P3503 LD 12 -1 NF FP BE Pri
!#5 N6334 P3505 LD 1 -1 Int BE Pri
!#5 N6335 P3506 LD 15 -1 Int BE Pri
!#5 N6337 P3505 LD 1 -1 Int BE Pri
!#5 N6338 P3506 LD 15 -1 Int BE Pri
!#5 N6339 P3507 LD 13 -1 Int BE Pri
!#5 N6340 P3508 LD 10 -1 FP BE Pri
!#5 N6341 P3509 LD 0 -1 Int BE Pri
!#5 N6342 P3507 LD 13 -1 Int BE Pri
!#5 N6343 P3508 LD 10 -1 FP BE Pri
!#5 N6344 P3509 LD 0 -1 Int BE Pri
!#5 N6345 P3510 LD 5 -1 FP BE Pri
!#5 N6347 P3510 LD 5 -1 FP BE Pri
!#5 N6349 P3512 LD 1 -1 FP BE Pri
!#5 N6350 P3513 LD 3 -1 FP BE Pri
!#5 N6351 P3514 BLD 8 -1 FP BE Pri
!#5 N6352 P3514 BLD 9 -1 FP BE Pri
!#5 N6354 P3514 BLD 8 -1 FP BE Pri
!#5 N6355 P3514 BLD 9 -1 FP BE Pri
!#5 N6361 P3518 LD 14 -1 FP BE Pri
!#5 N6362 P3518 LD 14 -1 FP BE Pri
!#5 N6363 P3519 LD 12 -1 FP BE Pri
!#5 N6364 P3519 LD 12 -1 FP BE Pri
!#5 N6365 P3520 LD 13 -1 Int BE Pri
!#5 N6366 P3521 LD 14 -1 Int BE Pri
!#5 N6367 P3522 DWLD 6 -1,0x0 Int BE Pri
!#5 N6368 P3522 CASX 6 -1,0x0 N6367 0x280002c Int BE Pri
!#5 N6369 P3522 DWLD 6 -1,0x0 Int BE Pri
!#5 N6370 P3522 CASX 6 -1,0x0 N6369 0x280002d Int BE Pri
!#5 N6371 P3523 DWLD 7 -1,0x0 Int BE Pri
!#5 N6372 P3523 CASX 7 -1,0x0 N6371 0x280002e Int BE Pri
!#5 N6373 P3524 LD 13 -1 FP BE Pri
!#5 N6374 P3523 DWLD 7 -1,0x0 Int BE Pri
!#5 N6375 P3523 CASX 7 -1,0x0 N6374 0x280002f Int BE Pri
!#5 N6376 P3524 LD 13 -1 FP BE Pri
!#5 N6377 P3525 QWST 8 0x42000021 FP BE Pri
!#5 N6378 P3525 QWST 9 0x42000022 FP BE Pri
!#5 N6379 P3526 DWLD 13 -1,0x0 Int BE Pri
!#5 N6380 P3526 CASX 13 -1,0x0 N6379 0x2800030 Int BE Pri
!#5 N6381 P3525 QWST 8 0x42000023 FP BE Pri
!#5 N6382 P3525 QWST 9 0x42000024 FP BE Pri
!#5 N6383 P3526 DWLD 13 -1,0x0 Int BE Pri
!#5 N6384 P3526 CASX 13 -1,0x0 N6383 0x2800031 Int BE Pri
!#5 N6385 P3527 DWST 10 0x42000025 FP BE Pri
!#5 N6386 P3527 DWST 10 0x42000026 FP BE Pri
!#5 N6387 P3528 DWLD 0 -1,0x0 Int BE Pri
!#5 N6388 P3528 CASX 0 -1,0x0 N6387 0x2800032 Int BE Pri
!#5 N6389 P3529 LD 2 -1 Int BE Pri
!#5 N6390 P3530 LD 7 -1 Int BE Pri
!#5 N6397 P3534 DWST 15 0x42000027 FP BE Pri
!#5 N6398 P3534 DWST 15 0x42000028 FP BE Pri
!#5 N6399 P3535 LD 14 -1 Int BE Pri
!#5 N6400 P3536 LD 9 -1 Int BE Pri
!#5 N6401 P3537 BLD 14 -1 FP BE Pri
!#5 N6402 P3537 BLD 15 -1 FP BE Pri
!#5 N6403 P3538 LD 7 -1 FP BE Pri
!#5 N6404 P3537 BLD 14 -1 FP BE Pri
!#5 N6405 P3537 BLD 15 -1 FP BE Pri
!#5 N6406 P3538 LD 7 -1 FP BE Pri
!#5 N6407 P3539 LD 0 -1 Int BE Pri
!#5 N6408 P3540 LD 7 -1 Int BE Pri
!#5 N6409 P3541 DWLD 1 -1 FP BE Pri
!#5 N6410 P3541 DWLD 1 -1 FP BE Pri
!#5 N6413 P3543 BLD 10 -1 FP BE Pri
!#5 N6414 P3543 BLD 11 -1 FP BE Pri
!#5 N6415 P3543 BLD 10 -1 FP BE Pri
!#5 N6416 P3543 BLD 11 -1 FP BE Pri
!#5 N6418 P3545 BLD 10 -1 FP BE Pri
!#5 N6419 P3545 BLD 11 -1 FP BE Pri
!#5 N6421 P3545 BLD 10 -1 FP BE Pri
!#5 N6422 P3545 BLD 11 -1 FP BE Pri
!#5 N6424 P3547 BSTC 14 0x42000029 FP BE Pri
!#5 N6425 P3547 BSTC 15 0x4200002a FP BE Pri
!#5 N6426 P3548 LD 3 -1 Int BE Pri
!#5 N6427 P3549 LD 8 -1 FP BE Pri
!#5 N6428 P3550 LD 1 -1 Int BE Pri
!#5 N6429 P3548 LD 3 -1 Int BE Pri
!#5 N6430 P3549 LD 8 -1 FP BE Pri
!#5 N6431 P3550 LD 1 -1 Int BE Pri
!#5 N6432 P3551 DWST 5 0x4200002b FP BE Pri
!#5 N6433 P3551 DWST 5 0x4200002c FP BE Pri
!#5 N6434 P3552 LD 1 -1 FP BE Pri
!#5 N6435 P3553 LD 13 -1 FP BE Pri
!#5 N6436 P3553 LD 13 -1 FP BE Pri
!#5 N6437 P3554 LD 4 -1 NF Int BE Pri
!#5 N6438 P3555 LD 12 -1 Int BE Pri
!#5 N6439 P3554 LD 4 -1 NF Int BE Pri
!#5 N6440 P3555 LD 12 -1 Int BE Pri
!#5 N6441 P3556 LD 11 -1 FP BE Pri
!#5 N6442 P3556 LD 11 -1 FP BE Pri
!#5 N6443 P3557 LD 8 -1 FP BE Pri
!#5 N6444 P3558 LD 7 -1 FP BE Pri
!#5 N6445 P3559 BLD 2 -1 FP BE Pri
!#5 N6446 P3559 BLD 3 -1 FP BE Pri
!#5 N6447 P3560 LD 10 -1 Int BE Pri
!#5 N6448 P3561 LD 13 -1 Int BE Pri
!#5 N6449 P3562 SWAP 15 0xffffffff 0x2800033 Int BE Pri
!#5 N6450 P3563 LD 7 -1 Int BE Pri
!#5 N6451 P3564 ST 1 0x4200002d FP BE Pri
!#5 N6452 P3565 LD 2 -1 FP BE Pri
!#5 N6453 P3566 BST 14 0x4200002e FP BE Pri
!#5 N6454 P3566 BST 15 0x4200002f FP BE Pri
!#5 N6455 P3566 BST 14 0x42000030 FP BE Pri
!#5 N6456 P3566 BST 15 0x42000031 FP BE Pri
!#5 N6458 P3568 LD 8 -1 Int BE Pri
!#5 N6459 P3569 LD 14 -1 Int BE Pri
!#5 N6463 P3572 LD 7 -1 Int BE Pri
!#5 N6464 P3572 CAS 7 -1 N6463 0x2800034 Int BE Pri
!#5 N6466 P3572 LD 7 -1 Int BE Pri
!#5 N6467 P3572 CAS 7 -1 N6466 0x2800035 Int BE Pri
!#5 N6468 P3573 BST 12 0x42000032 FP BE Pri
!#5 N6469 P3573 BST 13 0x42000033 FP BE Pri
!#5 N6471 P3573 BST 12 0x42000034 FP BE Pri
!#5 N6472 P3573 BST 13 0x42000035 FP BE Pri
!#5 N6474 P3575 LD 4 -1 Int BE Pri
!#5 N6475 P3575 CAS 4 -1 N6474 0x2800036 Int BE Pri
!#5 N6476 P3576 LD 0 -1 Int BE Pri
!#5 N6477 P3577 LD 3 -1 Int BE Pri
!#5 N6478 P3578 LD 8 -1 Int BE Pri
!#5 N6479 P3579 LD 1 -1 Int BE Pri
!#5 N6480 P3578 LD 8 -1 Int BE Pri
!#5 N6481 P3579 LD 1 -1 Int BE Pri
!#5 N6488 P3583 DWST 12 0x42000036 FP BE Pri
!#5 N6489 P3584 LD 8 -1 FP BE Pri
!#5 N6490 P3583 DWST 12 0x42000037 FP BE Pri
!#5 N6491 P3584 LD 8 -1 FP BE Pri
!#5 N6492 P3585 LD 5 -1 Int BE Pri
!#5 N6493 P3586 LD 14 -1 Int BE Pri
!#5 N6494 P3586 CAS 14 -1 N6493 0x2800037 Int BE Pri
!#5 N6495 P3587 LD 1 -1 Int BE Pri
!#5 N6496 P3588 LD 9 -1 Int BE Pri
!#5 N6497 P3589 LD 8 -1 NF Int LE Pri
!#5 N6498 P3590 LD 7 -1 Int BE Pri
!#5 N6499 P3591 LD 11 -1 Int BE Pri
!#5 N6500 P3590 LD 7 -1 Int BE Pri
!#5 N6501 P3591 LD 11 -1 Int BE Pri
!#5 N6503 P3593 ST 6 0x42000038 FP BE Pri
!#5 N6505 P3595 LD 14 -1 FP BE Pri
!#5 N6507 P3595 LD 14 -1 FP BE Pri
!#5 N6508 P3596 ST 5 0x42000039 FP BE Pri
!#5 N6509 P3597 LD 0 -1 FP BE Pri
!#5 N6510 P3596 ST 5 0x4200003a FP BE Pri
!#5 N6511 P3597 LD 0 -1 FP BE Pri
!#5 N6512 P3598 LD 2 -1 FP BE Pri
!#5 N6514 P3598 LD 2 -1 FP BE Pri
!#5 N6516 P3600 LD 2 -1 Int BE Pri
!#5 N6517 P3601 LD 1 -1 Int BE Pri
!#5 N6518 P3602 MEMBAR
!#5 N6519 P3603 BLD 8 -1 FP BE Pri
!#5 N6520 P3603 BLD 9 -1 FP BE Pri
!#5 N6521 P3602 MEMBAR
!#5 N6522 P3603 BLD 8 -1 FP BE Pri
!#5 N6523 P3603 BLD 9 -1 FP BE Pri
!#5 N6524 P3604 DWST 2 0x4200003b FP BE Pri
!#5 N6525 P3604 DWST 2 0x4200003c FP BE Pri
!#5 N6526 P3605 DWLD 4 -1,0x0 Int BE Pri
!#5 N6527 P3605 CASX 4 -1,0x0 N6526 0x2800038 Int BE Pri
!#5 N6528 P3606 QWST 0 0x4200003d FP BE Pri
!#5 N6529 P3606 QWST 1 0x4200003e FP BE Pri
!#5 N6534 P3609 DWLD 2 -1 Int BE Pri
!#5 N6535 P3610 LD 0 -1 Int BE Pri
!#5 N6536 P3609 DWLD 2 -1 Int BE Pri
!#5 N6537 P3610 LD 0 -1 Int BE Pri
!#5 N6541 P3613 LD 12 -1 FP BE Pri
!#5 N6542 P3614 BSTC 10 0x4200003f FP BE Pri
!#5 N6543 P3614 BSTC 11 0x42000040 FP BE Pri
!#5 N6544 P3615 BST 14 0x42000041 FP BE Pri
!#5 N6545 P3615 BST 15 0x42000042 FP BE Pri
!#5 N6546 P3615 BST 14 0x42000043 FP BE Pri
!#5 N6547 P3615 BST 15 0x42000044 FP BE Pri
!#5 N6548 P3616 DWLD 2 -1,0x0 Int BE Pri
!#5 N6549 P3616 CASX 2 -1,0x0 N6548 0x2800039 Int BE Pri
!#5 N6551 P3618 SWAP 4 0xffffffff 0x280003a Int BE Pri
!#5 N6552 P3619 BLD 0 -1 FP BE Pri
!#5 N6553 P3619 BLD 1 -1 FP BE Pri
!#5 N6554 P3620 LD 14 -1 Int BE Pri
!#5 N6555 P3621 LD 1 -1 FP BE Pri
!#5 N6556 P3622 LD 9 -1 Int BE Pri
!#5 N6557 P3623 LD 5 -1 Int BE Pri
!#5 N6558 P3624 LD 15 -1 Int BE Pri
!#5 N6559 P3625 LD 4 -1 Int BE Pri
!#5 N6560 P3626 DWLD 8 -1 Int BE Pri
!#5 N6561 P3627 LD 8 -1 FP BE Pri
!#5 N6562 P3628 LD 2 -1 Int BE Pri
!#5 N6563 P3626 DWLD 8 -1 Int BE Pri
!#5 N6564 P3627 LD 8 -1 FP BE Pri
!#5 N6565 P3628 LD 2 -1 Int BE Pri
!#5 N6570 P3632 LD 2 -1 Int BE Pri
!#5 N6571 P3632 CAS 2 -1 N6570 0x280003b Int BE Pri
!#5 N6572 P3633 SWAP 13 0xffffffff 0x280003c Int BE Pri
!#5 N6573 P3634 LD 6 -1 Int BE Pri
!#5 N6574 P3633 SWAP 13 0xffffffff 0x280003d Int BE Pri
!#5 N6575 P3634 LD 6 -1 Int BE Pri
!#5 N6578 P3637 BLD 0 -1 FP BE Pri
!#5 N6579 P3637 BLD 1 -1 FP BE Pri
!#5 N6580 P3637 BLD 0 -1 FP BE Pri
!#5 N6581 P3637 BLD 1 -1 FP BE Pri
!#5 N6582 P3638 BLD 4 -1 FP BE Pri
!#5 N6583 P3638 BLD 5 -1 FP BE Pri
!#5 N6584 P3639 ST 8 0x42000045 FP BE Pri
!#5 N6585 P3640 LD 4 -1 Int BE Pri
!#5 N6586 P3641 LD 5 -1 Int BE Pri
!#5 N6587 P3640 LD 4 -1 Int BE Pri
!#5 N6588 P3641 LD 5 -1 Int BE Pri
!#5 N6593 P3644 DWLD 3 -1,0x0 Int BE Pri
!#5 N6594 P3644 CASX 3 -1,0x0 N6593 0x280003e Int BE Pri
!#5 N6595 P3645 SWAP 1 0xffffffff 0x280003f Int BE Pri
!#5 N6596 P3646 LD 1 -1 Int BE Pri
!#5 N6597 P3644 DWLD 3 -1,0x0 Int BE Pri
!#5 N6598 P3644 CASX 3 -1,0x0 N6597 0x2800040 Int BE Pri
!#5 N6599 P3645 SWAP 1 0xffffffff 0x2800041 Int BE Pri
!#5 N6600 P3646 LD 1 -1 Int BE Pri
!#5 N6601 P3647 LD 15 -1 FP BE Pri
!#5 N6602 P3648 LD 10 -1 Int BE Pri
!#5 N6603 P3649 LD 1 -1 Int BE Pri
!#5 N6604 P3650 LD 8 -1 Int BE Pri
!#5 N6605 P3651 LD 4 -1 Int BE Pri
!#5 N6606 P3650 LD 8 -1 Int BE Pri
!#5 N6607 P3651 LD 4 -1 Int BE Pri
!#5 N6608 P3652 LD 4 -1 Int BE Pri
!#5 N6609 P3653 LD 0 -1 Int BE Pri
!#5 N6610 P3652 LD 4 -1 Int BE Pri
!#5 N6611 P3653 LD 0 -1 Int BE Pri
!#5 N6612 P3654 LD 0 -1 FP BE Pri
!#5 N6613 P3655 LD 7 -1 Int BE Pri
!#5 N6614 P3656 DWLD 3 -1 FP BE Pri
!#5 N6615 P3657 LD 8 -1 Int BE Pri
!#5 N6616 P3655 LD 7 -1 Int BE Pri
!#5 N6617 P3656 DWLD 3 -1 FP BE Pri
!#5 N6618 P3657 LD 8 -1 Int BE Pri
!#5 N6620 P3659 QWST 2 0x42000046 FP BE Pri
!#5 N6621 P3659 QWST 3 0x42000047 FP BE Pri
!#5 N6622 P3660 ST 8 0x42000048 FP BE Pri
!#5 N6623 P3661 QWST 8 0x42000049 FP BE Pri
!#5 N6624 P3661 QWST 9 0x4200004a FP BE Pri
!#5 N6625 P3662 LD 5 -1 Int BE Pri
!#5 N6626 P3663 LD 1 -1 Int BE Pri
!#5 N6633 P3667 LD 0 -1 FP BE Pri
!#5 N6635 P3669 LD 7 -1 FP BE Pri
!#5 N6636 P3670 BLD 14 -1 FP BE Pri
!#5 N6637 P3670 BLD 15 -1 FP BE Pri
!#5 N6638 P3671 ST 15 0x4200004b FP BE Pri
!#5 N6639 P3672 LD 15 -1 NF Int BE Pri
!#5 N6640 P3673 LD 12 -1 Int BE Pri
!#5 N6641 P3672 LD 15 -1 NF Int BE Pri
!#5 N6642 P3673 LD 12 -1 Int BE Pri
!#5 N6643 P3674 LD 3 -1 FP BE Pri
!#5 N6645 P3676 LD 11 -1 FP BE Pri
!#5 N6646 P3677 LD 0 -1 FP BE Pri
!#5 N6648 P3677 LD 0 -1 FP BE Pri
!#5 N6650 P3679 LD 12 -1 FP BE Pri
!#5 N6654 P3682 LD 7 -1 Int BE Pri
!#5 N6655 P3682 CAS 7 -1 N6654 0x2800042 Int BE Pri
!#5 N6656 P3682 LD 7 -1 Int BE Pri
!#5 N6657 P3682 CAS 7 -1 N6656 0x2800043 Int BE Pri
!#5 N6658 P3683 LD 1 -1 Int BE Pri
!#5 N6659 P3683 CAS 1 -1 N6658 0x2800044 Int BE Pri
!#5 N6660 P3684 MEMBAR
!#5 N6661 P3683 LD 1 -1 Int BE Pri
!#5 N6662 P3683 CAS 1 -1 N6661 0x2800045 Int BE Pri
!#5 N6663 P3684 MEMBAR
!#5 N6666 P3686 DWST 6 0x2800046 Int BE Pri
!#5 N6667 P3686 DWST 6 0x2800047 Int BE Pri
!#5 N6668 P3687 LD 11 -1 Int LE Pri
!#5 N6669 P3688 LD 4 -1 NF Int BE Pri
!#5 N6670 P3687 LD 11 -1 Int LE Pri
!#5 N6671 P3688 LD 4 -1 NF Int BE Pri
!#5 N6673 P3690 DWLD 12 -1,0x0 Int BE Pri
!#5 N6674 P3690 CASX 12 -1,0x0 N6673 0x2800048 Int BE Pri
!#5 N6676 P3690 DWLD 12 -1,0x0 Int BE Pri
!#5 N6677 P3690 CASX 12 -1,0x0 N6676 0x2800049 Int BE Pri
!#5 N6678 P3691 SWAP 13 0xffffffff 0x280004a Int BE Pri
!#5 N6679 P3692 LD 11 -1 Int BE Pri
!#5 N6681 P3694 SWAP 5 0xffffffff 0x280004b Int BE Pri
!#5 N6682 P3695 LD 14 -1 Int BE Pri
!#5 N6684 P3694 SWAP 5 0xffffffff 0x280004c Int BE Pri
!#5 N6685 P3695 LD 14 -1 Int BE Pri
!#5 N6686 P3696 BLD 10 -1 FP BE Pri
!#5 N6687 P3696 BLD 11 -1 FP BE Pri
!#5 N6688 P3697 DWST 14 0x280004d Int BE Pri
!#5 N6690 P3699 DWLD 0 -1,0x0 Int BE Pri
!#5 N6691 P3699 CASX 0 -1,0x0 N6690 0x280004e Int BE Pri
!#5 N6692 P3700 LD 3 -1 Int BE Pri
!#5 N6694 P3702 LD 14 -1 Int BE Pri
!#5 N6695 P3703 LD 7 -1 FP BE Pri
!#5 N6696 P3704 SWAP 13 0xffffffff 0x280004f Int BE Pri
!#5 N6697 P3705 LD 15 -1 Int BE Pri
!#5 N6698 P3706 QWST 14 0x4200004c FP BE Pri
!#5 N6699 P3706 QWST 15 0x4200004d FP BE Pri
!#5 N6700 P3706 QWST 14 0x4200004e FP BE Pri
!#5 N6701 P3706 QWST 15 0x4200004f FP BE Pri
!#5 N6702 P3707 DWLD 2 -1 FP BE Pri
!#5 N6705 P3709 LD 12 -1 FP BE Pri
!#5 N6706 P3710 QWLD 0 -1 FP BE Pri
!#5 N6707 P3710 QWLD 1 -1 FP BE Pri
!#5 N6708 P3711 LD 3 -1 Int BE Pri
!#5 N6709 P3712 QWLD 8 -1 FP BE Pri
!#5 N6710 P3712 QWLD 9 -1 FP BE Pri
!#5 N6711 P3713 LD 5 -1 Int BE Pri
!#5 N6712 P3711 LD 3 -1 Int BE Pri
!#5 N6713 P3712 QWLD 8 -1 FP BE Pri
!#5 N6714 P3712 QWLD 9 -1 FP BE Pri
!#5 N6715 P3713 LD 5 -1 Int BE Pri
!#5 N6716 P3714 QWST 14 0x42000050 FP BE Pri
!#5 N6717 P3714 QWST 15 0x42000051 FP BE Pri
!#5 N6718 P3714 QWST 14 0x42000052 FP BE Pri
!#5 N6719 P3714 QWST 15 0x42000053 FP BE Pri
!#5 N6721 P3716 LD 10 -1 Int LE Pri
!#5 N6722 P3716 CAS 10 -1 N6721 0x2800050 Int LE Pri
!#5 N6724 P3716 LD 10 -1 Int LE Pri
!#5 N6725 P3716 CAS 10 -1 N6724 0x2800051 Int LE Pri
!#5 N6728 P3718 DWST 6 0x2800052 Int BE Pri
!#5 N6729 P3718 DWST 6 0x2800053 Int BE Pri
!#5 N6730 P3719 LD 11 -1 FP BE Pri
!#5 N6731 P3719 LD 11 -1 FP BE Pri
!#5 N6732 P3720 SWAP 13 0xffffffff 0x2800054 Int BE Pri
!#5 N6733 P3721 LD 9 -1 Int BE Pri
!#5 N6734 P3720 SWAP 13 0xffffffff 0x2800055 Int BE Pri
!#5 N6735 P3721 LD 9 -1 Int BE Pri
!#5 N6736 P3722 LD 10 -1 Int BE Pri
!#5 N6737 P3723 LD 11 -1 Int BE Pri
!#5 N6738 P3722 LD 10 -1 Int BE Pri
!#5 N6739 P3723 LD 11 -1 Int BE Pri
!#5 N6740 P3724 LD 3 -1 Int BE Pri
!#5 N6741 P3725 QWST 10 0x42000054 FP BE Pri
!#5 N6742 P3725 QWST 11 0x42000055 FP BE Pri
!#5 N6743 P3726 LD 4 -1 Int BE Pri
!#5 N6744 P3724 LD 3 -1 Int BE Pri
!#5 N6745 P3725 QWST 10 0x42000056 FP BE Pri
!#5 N6746 P3725 QWST 11 0x42000057 FP BE Pri
!#5 N6747 P3726 LD 4 -1 Int BE Pri
!#5 N6748 P3727 BSTC 0 0x42000058 FP BE Pri
!#5 N6749 P3727 BSTC 1 0x42000059 FP BE Pri
!#5 N6750 P3727 BSTC 0 0x4200005a FP BE Pri
!#5 N6751 P3727 BSTC 1 0x4200005b FP BE Pri
!#5 N6752 P3728 BST 0 0x4200005c FP BE Pri
!#5 N6753 P3728 BST 1 0x4200005d FP BE Pri
!#5 N6754 P3729 QWST 10 0x4200005e FP BE Pri
!#5 N6755 P3729 QWST 11 0x4200005f FP BE Pri
!#5 N6756 P3729 QWST 10 0x42000060 FP BE Pri
!#5 N6757 P3729 QWST 11 0x42000061 FP BE Pri
!#5 N6758 P3730 LD 4 -1 FP BE Pri
!#5 N6759 P3730 LD 4 -1 FP BE Pri
!#5 N6762 P3732 LD 9 -1 Int BE Pri
!#5 N6763 P3732 CAS 9 -1 N6762 0x2800056 Int BE Pri
!#5 N6764 P3733 LD 4 -1 FP BE Pri
!#5 N6765 P3734 BST 8 0x42000062 FP BE Pri
!#5 N6766 P3734 BST 9 0x42000063 FP BE Pri
!#5 N6767 P3735 QWLD 12 -1 FP BE Pri
!#5 N6768 P3735 QWLD 13 -1 FP BE Pri
!#5 N6769 P3736 QWLD 4 -1 FP BE Pri
!#5 N6770 P3736 QWLD 5 -1 FP BE Pri
!#5 N6773 P3739 SWAP 5 0xffffffff 0x2800057 Int BE Pri
!#5 N6774 P3740 LD 8 -1 Int BE Pri
!#5 N6775 P3741 ST 2 0x2800058 Int BE Pri
!#5 N6776 P3742 DWLD 2 -1 FP BE Pri
!#5 N6777 P3741 ST 2 0x2800059 Int BE Pri
!#5 N6778 P3742 DWLD 2 -1 FP BE Pri
!#5 N6781 P3744 LD 4 -1 FP BE Pri
!#5 N6782 P3744 LD 4 -1 FP BE Pri
!#5 N6783 P3745 LD 1 -1 FP BE Pri
!#5 N6784 P3745 LD 1 -1 FP BE Pri
!#5 N6785 P3746 LD 12 -1 FP BE Pri
!#5 N6786 P3747 LD 3 -1 Int BE Pri
!#5 N6787 P3748 LD 12 -1 Int BE Pri
!#5 N6788 P3749 LD 13 -1 Int BE Pri
!#5 N6789 P3750 LD 11 -1 Int BE Pri
!#5 N6790 P3751 LD 9 -1 FP BE Pri
!#5 N6791 P3751 LD 9 -1 FP BE Pri
!#5 N6792 P3752 LD 0 -1 Int BE Pri
!#5 N6793 P3753 LD 10 -1 Int BE Pri
!#5 N6794 P3752 LD 0 -1 Int BE Pri
!#5 N6795 P3753 LD 10 -1 Int BE Pri
!#5 N6796 P3754 LD 3 -1 Int BE Pri
!#5 N6797 P3755 LD 15 -1 Int BE Pri
!#5 N6798 P3754 LD 3 -1 Int BE Pri
!#5 N6799 P3755 LD 15 -1 Int BE Pri
!#5 N6800 P3756 LD 5 -1 Int BE Pri
!#5 N6801 P3757 LD 10 -1 Int BE Pri
!#5 N6802 P3758 DWLD 1 -1 Int BE Pri
!#5 N6803 P3759 LD 11 -1 NF Int BE Pri
!#5 N6804 P3758 DWLD 1 -1 Int BE Pri
!#5 N6805 P3759 LD 11 -1 NF Int BE Pri
!#5 N6806 P3760 DWLD 2 -1 Int BE Pri
!#5 N6808 P3762 LD 9 -1 Int BE Pri
!#5 N6809 P3760 DWLD 2 -1 Int BE Pri
!#5 N6811 P3762 LD 9 -1 Int BE Pri
!#5 N6812 P3763 LD 9 -1 FP BE Pri
!#5 N6813 P3763 LD 9 -1 FP BE Pri
!#5 N6814 P3764 LD 4 -1 FP BE Pri
!#5 N6815 P3765 DWST 4 0x42000064 FP BE Pri
!#5 N6816 P3766 LD 10 -1 FP BE Pri
!#5 N6817 P3767 LD 6 -1 FP BE Pri
!#5 N6818 P3768 LD 8 -1 Int BE Pri
!#5 N6819 P3769 LD 15 -1 Int BE Pri
!#5 N6820 P3770 DWLD 12 -1,0x0 Int BE Pri
!#5 N6821 P3770 CASX 12 -1,0x0 N6820 0x280005a Int BE Pri
!#5 N6824 P3773 DWLD 5 -1 Int BE Pri
!#5 N6825 P3774 LD 14 -1 Int BE Pri
!#5 N6826 P3775 DWST 14 0x42000065 FP BE Pri
!#5 N6828 P3775 DWST 14 0x42000066 FP BE Pri
!#5 N6830 P3777 LD 9 -1 Int BE Pri
!#5 N6831 P3778 DWLD 8 -1 FP BE Pri
!#5 N6832 P3779 LD 8 -1 Int BE Pri
!#5 N6833 P3777 LD 9 -1 Int BE Pri
!#5 N6834 P3778 DWLD 8 -1 FP BE Pri
!#5 N6835 P3779 LD 8 -1 Int BE Pri
!#5 N6836 P3780 SWAP 3 0xffffffff 0x280005b Int BE Pri
!#5 N6837 P3781 LD 8 -1 Int BE Pri
!#5 N6838 P3780 SWAP 3 0xffffffff 0x280005c Int BE Pri
!#5 N6839 P3781 LD 8 -1 Int BE Pri
!#5 N6840 P3782 LD 10 -1 Int BE Pri
!#5 N6841 P3782 CAS 10 -1 N6840 0x280005d Int BE Pri
!#5 N6842 P3783 QWLD 6 -1 NF FP BE Pri
!#5 N6843 P3783 QWLD 7 -1 NF FP BE Pri
!#5 N6844 P3784 LD 3 -1 Int BE Pri
!#5 N6845 P3785 LD 12 -1 Int BE Pri
!#5 N6846 P3786 LD 8 -1 Int BE Pri
!#5 N6847 P3787 LD 7 -1 Int BE Pri
!#5 N6848 P3786 LD 8 -1 Int BE Pri
!#5 N6849 P3787 LD 7 -1 Int BE Pri
!#5 N6850 P3788 BST 12 0x42000067 FP BE Pri
!#5 N6851 P3788 BST 13 0x42000068 FP BE Pri
!#5 N6852 P3789 ST 0 0x42000069 FP BE Pri
!#5 N6853 P3790 QWST 10 0x4200006a FP BE Pri
!#5 N6854 P3790 QWST 11 0x4200006b FP BE Pri
!#5 N6855 P3791 LD 9 -1 FP BE Pri
!#5 N6856 P3792 BST 10 0x4200006c FP BE Pri
!#5 N6857 P3792 BST 11 0x4200006d FP BE Pri
!#5 N6859 P3794 LD 14 -1 FP BE Pri
!#5 N6860 P3795 BSTC 2 0x4200006e FP BE Pri
!#5 N6861 P3795 BSTC 3 0x4200006f FP BE Pri
!#5 N6863 P3797 DWLD 6 -1,0x0 Int BE Pri
!#5 N6864 P3797 CASX 6 -1,0x0 N6863 0x280005e Int BE Pri
!#5 N6865 P3798 LD 11 -1 Int LE Pri
!#5 N6866 P3799 LD 0 -1 Int BE Pri
!#5 N6867 P3800 QWLD 14 -1 NF FP BE Pri
!#5 N6868 P3800 QWLD 15 -1 NF FP BE Pri
!#5 N6870 P3800 QWLD 14 -1 NF FP BE Pri
!#5 N6871 P3800 QWLD 15 -1 NF FP BE Pri
!#5 N6873 P3802 LD 13 -1 Int BE Pri
!#5 N6874 P3803 LD 15 -1 Int BE Pri
!#5 N6875 P3802 LD 13 -1 Int BE Pri
!#5 N6876 P3803 LD 15 -1 Int BE Pri
!#5 N6878 P3805 LD 11 -1 Int BE Pri
!#5 N6879 P3806 LD 6 -1 Int BE Pri
!#5 N6880 P3807 LD 11 -1 FP BE Pri
!#5 N6881 P3808 DWST 10 0x42000070 FP BE Pri
!#5 N6882 P3809 LD 12 -1 FP BE Pri
!#5 N6883 P3810 DWLD 12 -1 FP BE Pri
!#5 N6885 P3812 LD 7 -1 FP BE Pri
!#5 N6886 P3813 LD 6 -1 FP BE Pri
!#5 N6887 P3812 LD 7 -1 FP BE Pri
!#5 N6888 P3813 LD 6 -1 FP BE Pri
!#5 N6890 P3815 ST 13 0x42000071 FP BE Pri
!#5 N6891 P3816 LD 0 -1 Int BE Pri
!#5 N6892 P3817 LD 9 -1 FP BE Pri
!#5 N6893 P3818 LD 12 -1 Int BE Pri
!#5 N6894 P3816 LD 0 -1 Int BE Pri
!#5 N6895 P3817 LD 9 -1 FP BE Pri
!#5 N6896 P3818 LD 12 -1 Int BE Pri
!#5 N6898 P3820 LD 7 -1 FP BE Pri
!#5 N6900 P3820 LD 7 -1 FP BE Pri
!#5 N6902 P3822 BST 14 0x42000072 FP BE Pri
!#5 N6903 P3822 BST 15 0x42000073 FP BE Pri
!#5 N6907 P3826 LD 10 -1 Int BE Pri
!#5 N6908 P3827 LD 13 -1 Int BE Pri
!#5 N6910 P3829 DWLD 8 -1 Int BE Pri
!#5 N6911 P3830 LD 1 -1 Int BE Pri
!#5 N6912 P3831 LD 7 -1 FP BE Pri
!#5 N6914 P3831 LD 7 -1 FP BE Pri
!#5 N6916 P3833 LD 11 -1 Int BE Pri
!#5 N6917 P3834 LD 4 -1 Int BE Pri
!#5 N6918 P3833 LD 11 -1 Int BE Pri
!#5 N6919 P3834 LD 4 -1 Int BE Pri
!#5 N6920 P3835 LD 4 -1 FP BE Pri
!#5 N6921 P3836 LD 10 -1 FP BE Pri
!#5 N6922 P3836 LD 10 -1 FP BE Pri
!#5 N6924 P3838 LD 2 -1 Int BE Pri
!#5 N6925 P3839 LD 11 -1 Int BE Pri
!#5 N6926 P3838 LD 2 -1 Int BE Pri
!#5 N6927 P3839 LD 11 -1 Int BE Pri
!#5 N6929 P3841 LD 3 -1 Int BE Pri
!#5 N6930 P3842 LD 10 -1 Int LE Pri
!#5 N6932 P3841 LD 3 -1 Int BE Pri
!#5 N6933 P3842 LD 10 -1 Int LE Pri
!#5 N6934 P3843 LD 2 -1 FP BE Pri
!#5 N6936 P3843 LD 2 -1 FP BE Pri
!#5 N6939 P3846 LD 4 -1 FP BE Pri
!#5 N6940 P3847 BST 14 0x42000074 FP BE Pri
!#5 N6941 P3847 BST 15 0x42000075 FP BE Pri
!#5 N6942 P3848 LD 11 -1 Int BE Pri
!#5 N6943 P3849 LD 5 -1 Int BE Pri
!#5 N6944 P3850 QWLD 10 -1 FP BE Pri
!#5 N6945 P3850 QWLD 11 -1 FP BE Pri
!#5 N6946 P3851 LD 12 -1 Int BE Pri
!#5 N6947 P3852 LD 13 -1 Int BE Pri
!#5 N6949 P3854 DWLD 2 -1,0x0 Int BE Pri
!#5 N6950 P3854 CASX 2 -1,0x0 N6949 0x280005f Int BE Pri
!#5 N6951 P3855 LD 2 -1 Int BE Pri
!#5 N6952 P3856 LD 0 -1 Int BE Pri
!#5 N6953 P3855 LD 2 -1 Int BE Pri
!#5 N6954 P3856 LD 0 -1 Int BE Pri
!#5 N6955 P3857 LD 15 -1 Int BE Pri
!#5 N6956 P3857 CAS 15 -1 N6955 0x2800060 Int BE Pri
!#5 N6957 P3857 LD 15 -1 Int BE Pri
!#5 N6958 P3857 CAS 15 -1 N6957 0x2800061 Int BE Pri
!#5 N6959 P3858 BLD 14 -1 FP BE Pri
!#5 N6960 P3858 BLD 15 -1 FP BE Pri
!#5 N6961 P3858 BLD 14 -1 FP BE Pri
!#5 N6962 P3858 BLD 15 -1 FP BE Pri
!#5 N6963 P3859 DWLD 5 -1,0x0 Int BE Pri
!#5 N6964 P3859 CASX 5 -1,0x0 N6963 0x2800062 Int BE Pri
!#5 N6966 P3861 SWAP 12 0xffffffff 0x2800063 Int BE Pri
!#5 N6967 P3862 LD 6 -1 Int BE Pri
!#5 N6969 P3861 SWAP 12 0xffffffff 0x2800064 Int BE Pri
!#5 N6970 P3862 LD 6 -1 Int BE Pri
!#5 N6971 P3863 LD 3 -1 NF Int BE Pri
!#5 N6972 P3864 LD 1 -1 Int BE Pri
!#5 N6973 P3863 LD 3 -1 NF Int BE Pri
!#5 N6974 P3864 LD 1 -1 Int BE Pri
!#5 N6975 P3865 LD 11 -1 FP BE Pri
!#5 N6976 P3866 LD 14 -1 FP BE Pri
!#5 N6977 P3866 LD 14 -1 FP BE Pri
!#5 N6978 P3867 ST 11 0x42000076 FP BE Pri
!#5 N6979 P3868 QWLD 0 -1 FP BE Pri
!#5 N6980 P3868 QWLD 1 -1 FP BE Pri
!#5 N6981 P3867 ST 11 0x42000077 FP BE Pri
!#5 N6982 P3868 QWLD 0 -1 FP BE Pri
!#5 N6983 P3868 QWLD 1 -1 FP BE Pri
!#5 N6984 P3869 ST 10 0x2800065 Int BE Pri
!#5 N6986 P3871 LD 9 -1 Int BE Pri
!#5 N6988 P3873 LD 1 -1 Int BE Pri
!#5 N6989 P3871 LD 9 -1 Int BE Pri
!#5 N6991 P3873 LD 1 -1 Int BE Pri
!#5 N6992 P3874 QWST 14 0x42000078 FP BE Pri
!#5 N6993 P3874 QWST 15 0x42000079 FP BE Pri
!#5 N6994 P3875 QWST 12 0x4200007a FP BE Pri
!#5 N6995 P3875 QWST 13 0x4200007b FP BE Pri
!#5 N6996 P3876 BSTC 0 0x4200007c FP BE Pri
!#5 N6997 P3876 BSTC 1 0x4200007d FP BE Pri
!#5 N6998 P3877 LD 10 -1 Int BE Pri
!#5 N6999 P3878 LD 12 -1 Int BE Pri
!#5 N7001 P3880 BLD 4 -1 FP BE Pri
!#5 N7002 P3880 BLD 5 -1 FP BE Pri
!#5 N7004 P3880 BLD 4 -1 FP BE Pri
!#5 N7005 P3880 BLD 5 -1 FP BE Pri
!#5 N7007 P3882 LD 15 -1 Int BE Pri
!#5 N7008 P3883 LD 7 -1 NF Int BE Pri
!#5 N7009 P3884 LD 3 -1 Int BE Pri
!#5 N7010 P3885 LD 0 -1 Int BE Pri
!#5 N7011 P3886 ST 7 0x2800066 Int BE Pri
!#5 N7012 P3887 LD 7 -1 Int BE Pri
!#5 N7014 P3889 LD 9 -1 Int BE Pri
!#5 N7015 P3887 LD 7 -1 Int BE Pri
!#5 N7017 P3889 LD 9 -1 Int BE Pri
!#5 N7018 P3890 DWLD 8 -1,0x0 Int BE Pri
!#5 N7019 P3890 CASX 8 -1,0x0 N7018 0x2800067 Int BE Pri
!#5 N7021 P3892 SWAP 1 0xffffffff 0x2800068 Int BE Pri
!#5 N7022 P3893 LD 9 -1 Int BE Pri
!#5 N7023 P3892 SWAP 1 0xffffffff 0x2800069 Int BE Pri
!#5 N7024 P3893 LD 9 -1 Int BE Pri
!#5 N7025 P3894 SWAP 3 0xffffffff 0x280006a Int BE Pri
!#5 N7027 P3896 LD 6 -1 NF Int BE Pri
!#5 N7028 P3897 BSTC 8 0x4200007e FP BE Pri
!#5 N7029 P3897 BSTC 9 0x4200007f FP BE Pri
!#5 N7030 P3897 BSTC 8 0x42000080 FP BE Pri
!#5 N7031 P3897 BSTC 9 0x42000081 FP BE Pri
!#5 N7032 P3898 DWST 0 0x42000082 FP BE Pri
!#5 N7033 P3899 LD 12 -1 Int BE Pri
!#5 N7034 P3900 LD 5 -1 FP BE Pri
!#5 N7035 P3901 LD 6 -1 Int BE Pri
!#5 N7036 P3899 LD 12 -1 Int BE Pri
!#5 N7037 P3900 LD 5 -1 FP BE Pri
!#5 N7038 P3901 LD 6 -1 Int BE Pri
!#5 N7039 P3902 SWAP 13 0xffffffff 0x280006b Int LE Pri
!#5 N7040 P3903 BLD 10 -1 FP BE Pri
!#5 N7041 P3903 BLD 11 -1 FP BE Pri
!#5 N7042 P3904 LD 11 -1 Int BE Pri
!#5 N7043 P3905 LD 4 -1 Int BE Pri
!#5 N7044 P3906 LD 4 -1 Int BE Pri
!#5 N7045 P3905 LD 4 -1 Int BE Pri
!#5 N7046 P3906 LD 4 -1 Int BE Pri
!#5 N7047 P3907 BST 10 0x42000083 FP BE Pri
!#5 N7048 P3907 BST 11 0x42000084 FP BE Pri
!#5 N7049 P3908 LD 11 -1 FP BE Pri
!#5 N7050 P3907 BST 10 0x42000085 FP BE Pri
!#5 N7051 P3907 BST 11 0x42000086 FP BE Pri
!#5 N7052 P3908 LD 11 -1 FP BE Pri
!#5 N7055 P3911 QWLD 12 -1 FP BE Pri
!#5 N7056 P3911 QWLD 13 -1 FP BE Pri
!#5 N7057 P3912 BLD 2 -1 FP BE Pri
!#5 N7058 P3912 BLD 3 -1 FP BE Pri
!#5 N7059 P3913 LD 10 -1 Int BE Pri
!#5 N7060 P3914 LD 4 -1 Int BE Pri
!#5 N7062 P3916 LD 4 -1 Int BE Pri
!#5 N7063 P3917 LD 11 -1 Int BE Pri
!#5 N7064 P3916 LD 4 -1 Int BE Pri
!#5 N7065 P3917 LD 11 -1 Int BE Pri
!#5 N7066 P3918 LD 0 -1 Int BE Pri
!#5 N7068 P3920 LD 7 -1 Int LE Pri
!#5 N7069 P3918 LD 0 -1 Int BE Pri
!#5 N7071 P3920 LD 7 -1 Int LE Pri
!#5 N7072 P3921 DWST 5 0x280006c Int BE Pri
!#5 N7073 P3922 DWLD 12 -1,0x0 Int BE Pri
!#5 N7074 P3922 CASX 12 -1,0x0 N7073 0x280006d Int BE Pri
!#5 N7075 P3922 DWLD 12 -1,0x0 Int BE Pri
!#5 N7076 P3922 CASX 12 -1,0x0 N7075 0x280006e Int BE Pri
!#5 N7077 P3923 ST 14 0x280006f Int BE Pri
!#5 N7078 P3924 DWLD 15 -1,0x0 Int BE Pri
!#5 N7079 P3924 CASX 15 -1,0x0 N7078 0x2800070 Int BE Pri
!#5 N7080 P3924 DWLD 15 -1,0x0 Int BE Pri
!#5 N7081 P3924 CASX 15 -1,0x0 N7080 0x2800071 Int BE Pri
!#5 N7082 P3925 BST 12 0x42000087 FP BE Pri
!#5 N7083 P3925 BST 13 0x42000088 FP BE Pri
!#5 N7084 P3925 BST 12 0x42000089 FP BE Pri
!#5 N7085 P3925 BST 13 0x4200008a FP BE Pri
!#5 N7086 P3926 MEMBAR
!#5 N7087 P3927 LD 7 -1 Int BE Pri
!#5 N7088 P3928 LD 14 -1 Int BE Pri
!#5 N7089 P3926 MEMBAR
!#5 N7090 P3927 LD 7 -1 Int BE Pri
!#5 N7091 P3928 LD 14 -1 Int BE Pri
!#5 N7092 P3929 LD 6 -1 NF FP BE Pri
!#5 N7094 P3929 LD 6 -1 NF FP BE Pri
!#5 N7097 P3932 LD 1 -1 Int BE Pri
!#5 N7098 P3932 CAS 1 -1 N7097 0x2800072 Int BE Pri
!#5 N7099 P3933 LD 8 -1 Int BE Pri
!#5 N7100 P3934 LD 6 -1 Int BE Pri
!#5 N7101 P3933 LD 8 -1 Int BE Pri
!#5 N7102 P3934 LD 6 -1 Int BE Pri
!#5 N7103 P3935 LD 15 -1 Int BE Pri
!#5 N7104 P3936 LD 10 -1 NF Int BE Pri
!#5 N7105 P3937 QWST 6 0x4200008b FP BE Pri
!#5 N7106 P3937 QWST 7 0x4200008c FP BE Pri
!#5 N7107 P3938 BST 8 0x4200008d FP BE Pri
!#5 N7108 P3938 BST 9 0x4200008e FP BE Pri
!#5 N7109 P3937 QWST 6 0x4200008f FP BE Pri
!#5 N7110 P3937 QWST 7 0x42000090 FP BE Pri
!#5 N7111 P3938 BST 8 0x42000091 FP BE Pri
!#5 N7112 P3938 BST 9 0x42000092 FP BE Pri
!#5 N7113 P3939 LD 8 -1 Int BE Pri
!#5 N7114 P3939 CAS 8 -1 N7113 0x2800073 Int BE Pri
!#5 N7116 P3941 SWAP 15 0xffffffff 0x2800074 Int BE Pri
!#5 N7117 P3942 LD 12 -1 Int LE Pri
!#5 N7118 P3941 SWAP 15 0xffffffff 0x2800075 Int BE Pri
!#5 N7119 P3942 LD 12 -1 Int LE Pri
!#5 N7120 P3943 LD 9 -1 Int BE Pri
!#5 N7121 P3944 LD 11 -1 NF FP BE Pri
!#5 N7122 P3945 LD 10 -1 Int BE Pri
!#5 N7124 P3947 BLD 12 -1 FP BE Pri
!#5 N7125 P3947 BLD 13 -1 FP BE Pri
!#5 N7126 P3948 QWLD 2 -1 FP BE Pri
!#5 N7127 P3948 QWLD 3 -1 FP BE Pri
!#5 N7128 P3947 BLD 12 -1 FP BE Pri
!#5 N7129 P3947 BLD 13 -1 FP BE Pri
!#5 N7130 P3948 QWLD 2 -1 FP BE Pri
!#5 N7131 P3948 QWLD 3 -1 FP BE Pri
!#5 N7132 P3949 LD 2 -1 Int BE Pri
!#5 N7133 P3950 LD 1 -1 Int BE Pri
!#5 N7134 P3949 LD 2 -1 Int BE Pri
!#5 N7135 P3950 LD 1 -1 Int BE Pri
!#5 N7138 P3953 LD 4 -1 Int BE Pri
!#5 N7139 P3953 CAS 4 -1 N7138 0x2800076 Int BE Pri
!#5 N7141 P3953 LD 4 -1 Int BE Pri
!#5 N7142 P3953 CAS 4 -1 N7141 0x2800077 Int BE Pri
!#5 N7143 P3954 QWST 6 0x42000093 FP BE Pri
!#5 N7144 P3954 QWST 7 0x42000094 FP BE Pri
!#5 N7145 P3955 DWST 1 0x42000095 FP BE Pri
!#5 N7146 P3954 QWST 6 0x42000096 FP BE Pri
!#5 N7147 P3954 QWST 7 0x42000097 FP BE Pri
!#5 N7148 P3955 DWST 1 0x42000098 FP BE Pri
!#5 N7149 P3956 LD 12 -1 Int BE Pri
!#5 N7150 P3957 LD 5 -1 Int BE Pri
!#5 N7151 P3956 LD 12 -1 Int BE Pri
!#5 N7152 P3957 LD 5 -1 Int BE Pri
!#5 N7155 P3959 LD 11 -1 Int BE Pri
!#5 N7156 P3960 LD 1 -1 NF Int BE Pri
!#5 N7157 P3961 LD 11 -1 FP BE Pri
!#5 N7158 P3962 LD 13 -1 FP BE Pri
!#5 N7159 P3962 LD 13 -1 FP BE Pri
!#5 N7161 P3964 BSTC 0 0x42000099 FP BE Pri
!#5 N7162 P3964 BSTC 1 0x4200009a FP BE Pri
!#5 N7163 P3965 SWAP 4 0xffffffff 0x2800078 Int BE Pri
!#5 N7164 P3966 LD 1 -1 Int BE Pri
!#5 N7165 P3965 SWAP 4 0xffffffff 0x2800079 Int BE Pri
!#5 N7166 P3966 LD 1 -1 Int BE Pri
!#5 N7168 P3968 LD 8 -1 FP BE Pri
!#5 N7169 P3969 LD 2 -1 Int BE Pri
!#5 N7170 P3970 LD 13 -1 Int BE Pri
!#5 N7171 P3969 LD 2 -1 Int BE Pri
!#5 N7172 P3970 LD 13 -1 Int BE Pri
!#5 N7175 P3972 LD 3 -1 Int BE Pri
!#5 N7176 P3972 CAS 3 -1 N7175 0x280007a Int BE Pri
!#5 N7177 P3973 DWLD 3 -1 Int BE Pri
!#5 N7178 P3974 LD 14 -1 Int BE Pri
!#5 N7179 P3972 LD 3 -1 Int BE Pri
!#5 N7180 P3972 CAS 3 -1 N7179 0x280007b Int BE Pri
!#5 N7181 P3973 DWLD 3 -1 Int BE Pri
!#5 N7182 P3974 LD 14 -1 Int BE Pri
!#5 N7183 P3975 DWLD 14 -1 Int BE Pri
!#5 N7184 P3976 LD 5 -1 FP BE Pri
!#5 N7185 P3977 LD 7 -1 Int BE Pri
!#5 N7186 P3978 LD 12 -1 Int BE Pri
!#5 N7187 P3979 LD 8 -1 Int BE Pri
!#5 N7188 P3980 BSTC 12 0x4200009b FP BE Pri
!#5 N7189 P3980 BSTC 13 0x4200009c FP BE Pri
!#5 N7190 P3980 BSTC 12 0x4200009d FP BE Pri
!#5 N7191 P3980 BSTC 13 0x4200009e FP BE Pri
!#5 N7192 P3981 LD 14 -1 Int BE Pri
!#5 N7193 P3982 ST 7 0x280007c Int BE Pri
!#5 N7194 P3983 LD 2 -1 Int BE Pri
!#5 N7195 P3981 LD 14 -1 Int BE Pri
!#5 N7196 P3982 ST 7 0x280007d Int BE Pri
!#5 N7197 P3983 LD 2 -1 Int BE Pri
!#5 N7198 P3984 BST 8 0x4200009f FP BE Pri
!#5 N7199 P3984 BST 9 0x420000a0 FP BE Pri
!#5 N7200 P3985 QWLD 4 -1 FP BE Pri
!#5 N7201 P3985 QWLD 5 -1 FP BE Pri
!#5 N7202 P3986 LD 6 -1 FP BE Pri
!#5 N7203 P3986 LD 6 -1 FP BE Pri
!#5 N7204 P3987 QWLD 12 -1 FP BE Pri
!#5 N7205 P3987 QWLD 13 -1 FP BE Pri
!#5 N7206 P3988 ST 1 0x420000a1 FP BE Pri
!#5 N7208 P3990 BST 14 0x420000a2 FP BE Pri
!#5 N7209 P3990 BST 15 0x420000a3 FP BE Pri
!#5 N7211 P3990 BST 14 0x420000a4 FP BE Pri
!#5 N7212 P3990 BST 15 0x420000a5 FP BE Pri
!#5 N7213 P3991 LD 8 -1 Int BE Pri
!#5 N7214 P3992 LD 0 -1 NF Int BE Pri
!#5 N7215 P3993 BSTC 10 0x420000a6 FP BE Pri
!#5 N7216 P3993 BSTC 11 0x420000a7 FP BE Pri
!#5 N7217 P3994 LD 15 -1 Int BE Pri
!#5 N7218 P3995 LD 10 -1 Int BE Pri
!#5 N7219 P3996 LD 1 -1 FP BE Pri
!#5 N7220 P3997 QWST 6 0x420000a8 FP BE Pri
!#5 N7221 P3997 QWST 7 0x420000a9 FP BE Pri
!#5 N7222 P3998 LD 4 -1 Int BE Pri
!#5 N7223 P3999 LD 1 -1 Int BE Pri
!#5 N7225 P4001 LD 8 -1 Int BE Pri
!#5 N7226 P4002 LD 5 -1 Int BE Pri
!#5 N7228 P4001 LD 8 -1 Int BE Pri
!#5 N7229 P4002 LD 5 -1 Int BE Pri
!#5 N7230 P4003 LD 9 -1 FP BE Pri
!#5 N7231 P4004 LD 7 -1 Int BE Pri
!#5 N7232 P4005 LD 11 -1 Int BE Pri
!#5 N7233 P4006 LD 7 -1 Int BE Pri
!#5 N7234 P4007 LD 0 -1 Int BE Pri
!#5 N7235 P4008 LD 10 -1 Int BE Pri
!#5 N7236 P4008 CAS 10 -1 N7235 0x280007e Int BE Pri
!#5 N7238 P4010 DWST 9 0x420000aa FP BE Pri
!#5 N7240 P4010 DWST 9 0x420000ab FP BE Pri
!#5 N7242 P4012 LD 14 -1 Int BE Pri
!#5 N7243 P4013 LD 9 -1 NF Int BE Pri
!#5 N7244 P4014 LD 6 -1 Int BE Pri
!#5 N7245 P4015 LD 14 -1 Int BE Pri
!#5 N7246 P4016 MEMBAR
!#6 N7248 P4018 LD 9 -1 Int BE Pri
!#6 N7249 P4019 LD 0 -1 Int BE Pri
!#6 N7250 P4020 SWAP 12 0xffffffff 0x3000001 Int LE Pri
!#6 N7252 P4022 LD 12 -1 Int BE Pri
!#6 N7253 P4020 SWAP 12 0xffffffff 0x3000002 Int LE Pri
!#6 N7255 P4022 LD 12 -1 Int BE Pri
!#6 N7256 P4023 LD 7 -1 Int BE Pri
!#6 N7257 P4024 LD 5 -1 Int BE Pri
!#6 N7258 P4025 BSTC 8 0x42800001 FP BE Pri
!#6 N7259 P4025 BSTC 9 0x42800002 FP BE Pri
!#6 N7260 P4025 BSTC 8 0x42800003 FP BE Pri
!#6 N7261 P4025 BSTC 9 0x42800004 FP BE Pri
!#6 N7262 P4026 BST 2 0x42800005 FP BE Pri
!#6 N7263 P4026 BST 3 0x42800006 FP BE Pri
!#6 N7264 P4027 LD 3 -1 Int BE Pri
!#6 N7265 P4027 CAS 3 -1 N7264 0x3000003 Int BE Pri
!#6 N7266 P4028 SWAP 10 0xffffffff 0x3000004 Int BE Pri
!#6 N7267 P4029 LD 4 -1 NF Int BE Pri
!#6 N7268 P4027 LD 3 -1 Int BE Pri
!#6 N7269 P4027 CAS 3 -1 N7268 0x3000005 Int BE Pri
!#6 N7270 P4028 SWAP 10 0xffffffff 0x3000006 Int BE Pri
!#6 N7271 P4029 LD 4 -1 NF Int BE Pri
!#6 N7272 P4030 BST 12 0x42800007 FP BE Pri
!#6 N7273 P4030 BST 13 0x42800008 FP BE Pri
!#6 N7274 P4031 LD 1 -1 NF Fault FP BE Pri
!#6 N7275 P4030 BST 12 0x42800009 FP BE Pri
!#6 N7276 P4030 BST 13 0x4280000a FP BE Pri
!#6 N7277 P4031 LD 1 -1 NF Fault FP BE Pri
!#6 N7278 P4032 BLD 8 -1 FP BE Pri
!#6 N7279 P4032 BLD 9 -1 FP BE Pri
!#6 N7280 P4033 SWAP 8 0xffffffff 0x3000007 Int BE Pri
!#6 N7281 P4034 LD 4 -1 Int BE Pri
!#6 N7285 P4037 LD 12 -1 FP BE Pri
!#6 N7287 P4037 LD 12 -1 FP BE Pri
!#6 N7288 P4038 DWLD 12 -1,0x0 Int BE Pri
!#6 N7289 P4038 CASX 12 -1,0x0 N7288 0x3000008 Int BE Pri
!#6 N7292 P4041 LD 11 -1 FP BE Pri
!#6 N7294 P4041 LD 11 -1 FP BE Pri
!#6 N7295 P4042 QWLD 12 -1 FP BE Pri
!#6 N7296 P4042 QWLD 13 -1 FP BE Pri
!#6 N7297 P4043 SWAP 9 0xffffffff 0x3000009 Int BE Pri
!#6 N7298 P4044 BSTC 4 0x4280000b FP BE Pri
!#6 N7299 P4044 BSTC 5 0x4280000c FP BE Pri
!#6 N7300 P4045 LD 4 -1 Int BE Pri
!#6 N7301 P4046 LD 1 -1 NF Int BE Pri
!#6 N7302 P4047 DWLD 14 -1 FP BE Pri
!#6 N7303 P4048 LD 12 -1 Int BE Pri
!#6 N7304 P4046 LD 1 -1 NF Int BE Pri
!#6 N7305 P4047 DWLD 14 -1 FP BE Pri
!#6 N7306 P4048 LD 12 -1 Int BE Pri
!#6 N7307 P4049 DWLD 11 -1 Int BE Pri
!#6 N7309 P4051 LD 6 -1 Int BE Pri
!#6 N7310 P4052 SWAP 1 0xffffffff 0x300000a Int BE Pri
!#6 N7311 P4053 LD 12 -1 Int BE Pri
!#6 N7312 P4054 DWLD 13 -1,0x0 Int BE Pri
!#6 N7313 P4054 CASX 13 -1,0x0 N7312 0x300000b Int BE Pri
!#6 N7315 P4054 DWLD 13 -1,0x0 Int BE Pri
!#6 N7316 P4054 CASX 13 -1,0x0 N7315 0x300000c Int BE Pri
!#6 N7322 P4059 LD 10 -1 FP BE Pri
!#6 N7325 P4062 LD 11 -1 Int BE Pri
!#6 N7326 P4063 LD 4 -1 Int BE Pri
!#6 N7327 P4062 LD 11 -1 Int BE Pri
!#6 N7328 P4063 LD 4 -1 Int BE Pri
!#6 N7331 P4065 QWLD 6 -1 FP BE Pri
!#6 N7332 P4065 QWLD 7 -1 FP BE Pri
!#6 N7333 P4066 BLD 6 -1 FP BE Pri
!#6 N7334 P4066 BLD 7 -1 FP BE Pri
!#6 N7335 P4067 LD 10 -1 NF Int BE Pri
!#6 N7336 P4068 LD 12 -1 Int BE Pri
!#6 N7338 P4070 LD 14 -1 Int BE Pri
!#6 N7339 P4071 LD 8 -1 Int BE Pri
!#6 N7341 P4070 LD 14 -1 Int BE Pri
!#6 N7342 P4071 LD 8 -1 Int BE Pri
!#6 N7343 P4072 BSTC 8 0x4280000d FP BE Pri
!#6 N7344 P4072 BSTC 9 0x4280000e FP BE Pri
!#6 N7345 P4073 LD 9 -1 FP BE Pri
!#6 N7346 P4073 LD 9 -1 FP BE Pri
!#6 N7347 P4074 QWST 12 0x4280000f FP BE Pri
!#6 N7348 P4074 QWST 13 0x42800010 FP BE Pri
!#6 N7349 P4075 LD 14 -1 Int BE Pri
!#6 N7350 P4076 LD 3 -1 Int BE Pri
!#6 N7351 P4074 QWST 12 0x42800011 FP BE Pri
!#6 N7352 P4074 QWST 13 0x42800012 FP BE Pri
!#6 N7353 P4075 LD 14 -1 Int BE Pri
!#6 N7354 P4076 LD 3 -1 Int BE Pri
!#6 N7355 P4077 QWLD 6 -1 FP BE Pri
!#6 N7356 P4077 QWLD 7 -1 FP BE Pri
!#6 N7357 P4077 QWLD 6 -1 FP BE Pri
!#6 N7358 P4077 QWLD 7 -1 FP BE Pri
!#6 N7359 P4078 ST 11 0x300000d Int BE Pri
!#6 N7360 P4078 ST 11 0x300000e Int BE Pri
!#6 N7361 P4079 BLD 0 -1 FP BE Pri
!#6 N7362 P4079 BLD 1 -1 FP BE Pri
!#6 N7365 P4082 QWST 10 0x42800013 FP BE Pri
!#6 N7366 P4082 QWST 11 0x42800014 FP BE Pri
!#6 N7367 P4083 BLD 0 -1 FP BE Pri
!#6 N7368 P4083 BLD 1 -1 FP BE Pri
!#6 N7369 P4082 QWST 10 0x42800015 FP BE Pri
!#6 N7370 P4082 QWST 11 0x42800016 FP BE Pri
!#6 N7371 P4083 BLD 0 -1 FP BE Pri
!#6 N7372 P4083 BLD 1 -1 FP BE Pri
!#6 N7374 P4085 BST 6 0x42800017 FP BE Pri
!#6 N7375 P4085 BST 7 0x42800018 FP BE Pri
!#6 N7377 P4087 BLD 4 -1 FP BE Pri
!#6 N7378 P4087 BLD 5 -1 FP BE Pri
!#6 N7380 P4087 BLD 4 -1 FP BE Pri
!#6 N7381 P4087 BLD 5 -1 FP BE Pri
!#6 N7382 P4088 LD 9 -1 FP BE Pri
!#6 N7385 P4090 SWAP 5 0xffffffff 0x300000f Int LE Pri
!#6 N7386 P4091 QWLD 2 -1 FP BE Pri
!#6 N7387 P4091 QWLD 3 -1 FP BE Pri
!#6 N7388 P4092 LD 6 -1 NF Int BE Pri
!#6 N7389 P4090 SWAP 5 0xffffffff 0x3000010 Int LE Pri
!#6 N7390 P4091 QWLD 2 -1 FP BE Pri
!#6 N7391 P4091 QWLD 3 -1 FP BE Pri
!#6 N7392 P4092 LD 6 -1 NF Int BE Pri
!#6 N7393 P4093 BLD 10 -1 FP BE Pri
!#6 N7394 P4093 BLD 11 -1 FP BE Pri
!#6 N7395 P4093 BLD 10 -1 FP BE Pri
!#6 N7396 P4093 BLD 11 -1 FP BE Pri
!#6 N7397 P4094 DWLD 5 -1,0x0 Int BE Pri
!#6 N7398 P4094 CASX 5 -1,0x0 N7397 0x3000011 Int BE Pri
!#6 N7399 P4095 BST 6 0x42800019 FP BE Pri
!#6 N7400 P4095 BST 7 0x4280001a FP BE Pri
!#6 N7402 P4095 BST 6 0x4280001b FP BE Pri
!#6 N7403 P4095 BST 7 0x4280001c FP BE Pri
!#6 N7405 P4097 LD 2 -1 Int BE Pri
!#6 N7406 P4098 DWLD 12 -1,0x0 Int BE Pri
!#6 N7407 P4098 CASX 12 -1,0x0 N7406 0x3000012 Int BE Pri
!#6 N7408 P4099 LD 4 -1 Int BE Pri
!#6 N7409 P4097 LD 2 -1 Int BE Pri
!#6 N7410 P4098 DWLD 12 -1,0x0 Int BE Pri
!#6 N7411 P4098 CASX 12 -1,0x0 N7410 0x3000013 Int BE Pri
!#6 N7412 P4099 LD 4 -1 Int BE Pri
!#6 N7413 P4100 LD 15 -1 Int BE Pri
!#6 N7414 P4100 CAS 15 -1 N7413 0x3000014 Int BE Pri
!#6 N7415 P4101 LD 4 -1 Int BE Pri
!#6 N7416 P4102 LD 9 -1 Int BE Pri
!#6 N7417 P4100 LD 15 -1 Int BE Pri
!#6 N7418 P4100 CAS 15 -1 N7417 0x3000015 Int BE Pri
!#6 N7419 P4101 LD 4 -1 Int BE Pri
!#6 N7420 P4102 LD 9 -1 Int BE Pri
!#6 N7421 P4103 LD 13 -1 Int BE Pri
!#6 N7422 P4104 BLD 8 -1 FP BE Pri
!#6 N7423 P4104 BLD 9 -1 FP BE Pri
!#6 N7424 P4105 LD 3 -1 NF Int BE Pri
!#6 N7427 P4107 SWAP 14 0xffffffff 0x3000016 Int BE Pri
!#6 N7429 P4109 LD 10 -1 Int BE Pri
!#6 N7430 P4107 SWAP 14 0xffffffff 0x3000017 Int BE Pri
!#6 N7432 P4109 LD 10 -1 Int BE Pri
!#6 N7436 P4112 QWST 0 0x4280001d FP BE Pri
!#6 N7437 P4112 QWST 1 0x4280001e FP BE Pri
!#6 N7439 P4112 QWST 0 0x4280001f FP BE Pri
!#6 N7440 P4112 QWST 1 0x42800020 FP BE Pri
!#6 N7442 P4114 LD 6 -1 FP BE Pri
!#6 N7443 P4115 LD 0 -1 Int BE Pri
!#6 N7444 P4116 BLD 0 -1 FP BE Pri
!#6 N7445 P4116 BLD 1 -1 FP BE Pri
!#6 N7446 P4117 LD 15 -1 Int BE Pri
!#6 N7448 P4119 LD 5 -1 NF Fault Int BE Pri
!#6 N7449 P4120 LD 4 -1 Int BE Pri
!#6 N7450 P4121 BLD 2 -1 FP BE Pri
!#6 N7451 P4121 BLD 3 -1 FP BE Pri
!#6 N7452 P4122 DWLD 7 -1 Int BE Pri
!#6 N7453 P4123 LD 0 -1 Int BE Pri
!#6 N7454 P4124 MEMBAR
!#6 N7455 P4124 MEMBAR
!#6 N7456 P4125 LD 5 -1 Int BE Pri
!#6 N7457 P4126 LD 15 -1 NF Fault Int BE Pri
!#6 N7458 P4127 QWLD 10 -1 FP BE Pri
!#6 N7459 P4127 QWLD 11 -1 FP BE Pri
!#6 N7460 P4128 LD 12 -1 Int BE Pri
!#6 N7461 P4129 LD 15 -1 Int BE Pri
!#6 N7462 P4128 LD 12 -1 Int BE Pri
!#6 N7463 P4129 LD 15 -1 Int BE Pri
!#6 N7465 P4131 SWAP 12 0xffffffff 0x3000018 Int BE Pri
!#6 N7466 P4132 LD 15 -1 Int BE Pri
!#6 N7468 P4131 SWAP 12 0xffffffff 0x3000019 Int BE Pri
!#6 N7469 P4132 LD 15 -1 Int BE Pri
!#6 N7470 P4133 LD 9 -1 FP BE Pri
!#6 N7472 P4133 LD 9 -1 FP BE Pri
!#6 N7478 P4137 DWLD 14 -1 Int BE Pri
!#6 N7479 P4138 LD 8 -1 Int BE Pri
!#6 N7480 P4137 DWLD 14 -1 Int BE Pri
!#6 N7481 P4138 LD 8 -1 Int BE Pri
!#6 N7482 P4139 DWLD 15 -1,0x0 Int BE Pri
!#6 N7483 P4139 CASX 15 -1,0x0 N7482 0x300001a Int BE Pri
!#6 N7484 P4140 DWLD 0 -1 Int BE Pri
!#6 N7485 P4141 LD 15 -1 NF Int BE Pri
!#6 N7486 P4142 LD 3 -1 FP BE Pri
!#6 N7487 P4142 LD 3 -1 FP BE Pri
!#6 N7488 P4143 SWAP 11 0xffffffff 0x300001b Int BE Pri
!#6 N7489 P4144 LD 9 -1 Int BE Pri
!#6 N7490 P4144 CAS 9 -1 N7489 0x300001c Int BE Pri
!#6 N7491 P4145 LD 15 -1 Int BE Pri
!#6 N7493 P4147 LD 3 -1 NF FP BE Pri
!#6 N7495 P4149 BST 4 0x42800021 FP BE Pri
!#6 N7496 P4149 BST 5 0x42800022 FP BE Pri
!#6 N7497 P4149 BST 4 0x42800023 FP BE Pri
!#6 N7498 P4149 BST 5 0x42800024 FP BE Pri
!#6 N7501 P4152 BSTC 0 0x42800025 FP BE Pri
!#6 N7502 P4152 BSTC 1 0x42800026 FP BE Pri
!#6 N7503 P4153 DWST 5 0x300001d Int BE Pri
!#6 N7504 P4153 DWST 5 0x300001e Int BE Pri
!#6 N7505 P4154 LD 0 -1 FP BE Pri
!#6 N7506 P4155 LD 10 -1 FP BE Pri
!#6 N7507 P4154 LD 0 -1 FP BE Pri
!#6 N7508 P4155 LD 10 -1 FP BE Pri
!#6 N7511 P4157 LD 12 -1 Int BE Pri
!#6 N7512 P4158 LD 4 -1 Int BE Pri
!#6 N7513 P4159 QWLD 0 -1 FP BE Pri
!#6 N7514 P4159 QWLD 1 -1 FP BE Pri
!#6 N7515 P4160 SWAP 0 0xffffffff 0x300001f Int BE Pri
!#6 N7516 P4161 LD 4 -1 Int BE Pri
!#6 N7519 P4163 QWST 0 0x42800027 FP BE Pri
!#6 N7520 P4163 QWST 1 0x42800028 FP BE Pri
!#6 N7521 P4164 DWLD 8 -1,0x0 Int BE Pri
!#6 N7522 P4164 CASX 8 -1,0x0 N7521 0x3000020 Int BE Pri
!#6 N7523 P4165 LD 9 -1 FP BE Pri
!#6 N7524 P4166 LD 2 -1 Int BE Pri
!#6 N7525 P4167 LD 15 -1 NF Int BE Pri
!#6 N7526 P4168 DWLD 7 -1 FP BE Pri
!#6 N7527 P4168 DWLD 7 -1 FP BE Pri
!#6 N7528 P4169 DWLD 15 -1 FP BE Pri
!#6 N7532 P4172 LD 12 -1 Int BE Pri
!#6 N7533 P4173 LD 6 -1 Int BE Pri
!#6 N7540 P4177 DWST 8 0x3000021 Int BE Pri
!#6 N7541 P4178 LD 3 -1 NF FP BE Pri
!#6 N7542 P4179 DWLD 11 -1 Int BE Pri
!#6 N7543 P4180 LD 13 -1 Int BE Pri
!#6 N7544 P4181 QWLD 2 -1 FP BE Pri
!#6 N7545 P4181 QWLD 3 -1 FP BE Pri
!#6 N7546 P4182 LD 15 -1 Int BE Pri
!#6 N7547 P4183 LD 6 -1 Int BE Pri
!#6 N7548 P4184 QWLD 8 -1 FP BE Pri
!#6 N7549 P4184 QWLD 9 -1 FP BE Pri
!#6 N7550 P4185 BST 14 0x42800029 FP BE Pri
!#6 N7551 P4185 BST 15 0x4280002a FP BE Pri
!#6 N7552 P4184 QWLD 8 -1 FP BE Pri
!#6 N7553 P4184 QWLD 9 -1 FP BE Pri
!#6 N7554 P4185 BST 14 0x4280002b FP BE Pri
!#6 N7555 P4185 BST 15 0x4280002c FP BE Pri
!#6 N7556 P4186 QWLD 4 -1 FP BE Pri
!#6 N7557 P4186 QWLD 5 -1 FP BE Pri
!#6 N7558 P4187 DWLD 9 -1,0x0 Int BE Pri
!#6 N7559 P4187 CASX 9 -1,0x0 N7558 0x3000022 Int BE Pri
!#6 N7560 P4188 DWLD 12 -1,0x0 Int BE Pri
!#6 N7561 P4188 CASX 12 -1,0x0 N7560 0x3000023 Int BE Pri
!#6 N7562 P4189 LD 6 -1 Int BE Pri
!#6 N7563 P4190 LD 11 -1 Int BE Pri
!#6 N7564 P4188 DWLD 12 -1,0x0 Int BE Pri
!#6 N7565 P4188 CASX 12 -1,0x0 N7564 0x3000024 Int BE Pri
!#6 N7566 P4189 LD 6 -1 Int BE Pri
!#6 N7567 P4190 LD 11 -1 Int BE Pri
!#6 N7568 P4191 LD 2 -1 Int BE Pri
!#6 N7569 P4192 LD 1 -1 Int BE Pri
!#6 N7570 P4191 LD 2 -1 Int BE Pri
!#6 N7571 P4192 LD 1 -1 Int BE Pri
!#6 N7572 P4193 BLD 2 -1 FP BE Pri
!#6 N7573 P4193 BLD 3 -1 FP BE Pri
!#6 N7576 P4196 QWST 0 0x4280002d FP BE Pri
!#6 N7577 P4196 QWST 1 0x4280002e FP BE Pri
!#6 N7579 P4196 QWST 0 0x4280002f FP BE Pri
!#6 N7580 P4196 QWST 1 0x42800030 FP BE Pri
!#6 N7581 P4197 LD 6 -1 NF Int BE Pri
!#6 N7582 P4198 LD 13 -1 Int BE Pri
!#6 N7583 P4199 BSTC 14 0x42800031 FP BE Pri
!#6 N7584 P4199 BSTC 15 0x42800032 FP BE Pri
!#6 N7585 P4200 QWLD 0 -1 FP BE Pri
!#6 N7586 P4200 QWLD 1 -1 FP BE Pri
!#6 N7587 P4201 DWLD 4 -1,0x0 Int BE Pri
!#6 N7588 P4201 CASX 4 -1,0x0 N7587 0x3000025 Int BE Pri
!#6 N7589 P4201 DWLD 4 -1,0x0 Int BE Pri
!#6 N7590 P4201 CASX 4 -1,0x0 N7589 0x3000026 Int BE Pri
!#6 N7592 P4203 LD 1 -1 Int BE Pri
!#6 N7593 P4203 CAS 1 -1 N7592 0x3000027 Int BE Pri
!#6 N7595 P4203 LD 1 -1 Int BE Pri
!#6 N7596 P4203 CAS 1 -1 N7595 0x3000028 Int BE Pri
!#6 N7597 P4204 LD 2 -1 FP BE Pri
!#6 N7598 P4204 LD 2 -1 FP BE Pri
!#6 N7600 P4206 BST 8 0x42800033 FP BE Pri
!#6 N7601 P4206 BST 9 0x42800034 FP BE Pri
!#6 N7603 P4206 BST 8 0x42800035 FP BE Pri
!#6 N7604 P4206 BST 9 0x42800036 FP BE Pri
!#6 N7605 P4207 DWLD 13 -1 Int BE Pri
!#6 N7606 P4208 LD 0 -1 Int BE Pri
!#6 N7607 P4207 DWLD 13 -1 Int BE Pri
!#6 N7608 P4208 LD 0 -1 Int BE Pri
!#6 N7611 P4210 SWAP 8 0xffffffff 0x3000029 Int BE Pri
!#6 N7612 P4211 LD 15 -1 Int BE Pri
!#6 N7613 P4210 SWAP 8 0xffffffff 0x300002a Int BE Pri
!#6 N7614 P4211 LD 15 -1 Int BE Pri
!#6 N7615 P4212 LD 6 -1 Int BE Pri
!#6 N7616 P4213 LD 11 -1 Int BE Pri
!#6 N7618 P4215 QWST 8 0x42800037 FP BE Pri
!#6 N7619 P4215 QWST 9 0x42800038 FP BE Pri
!#6 N7622 P4218 LD 5 -1 Int BE Pri
!#6 N7623 P4219 LD 13 -1 Int BE Pri
!#6 N7624 P4220 LD 14 -1 FP BE Pri
!#6 N7625 P4221 LD 8 -1 FP BE Pri
!#6 N7626 P4222 LD 14 -1 NF Fault FP BE Pri
!#6 N7627 P4221 LD 8 -1 FP BE Pri
!#6 N7628 P4222 LD 14 -1 NF Fault FP BE Pri
!#6 N7629 P4223 LD 13 -1 FP BE Pri
!#6 N7630 P4224 LD 2 -1 NF FP BE Pri
!#6 N7631 P4225 QWST 2 0x42800039 FP BE Pri
!#6 N7632 P4225 QWST 3 0x4280003a FP BE Pri
!#6 N7633 P4225 QWST 2 0x4280003b FP BE Pri
!#6 N7634 P4225 QWST 3 0x4280003c FP BE Pri
!#6 N7635 P4226 LD 8 -1 Int BE Pri
!#6 N7636 P4227 QWST 4 0x4280003d FP BE Pri
!#6 N7637 P4227 QWST 5 0x4280003e FP BE Pri
!#6 N7638 P4228 LD 12 -1 Int BE Pri
!#6 N7639 P4229 LD 12 -1 Int BE Pri
!#6 N7641 P4231 LD 3 -1 Int BE Pri
!#6 N7642 P4229 LD 12 -1 Int BE Pri
!#6 N7644 P4231 LD 3 -1 Int BE Pri
!#6 N7645 P4232 LD 5 -1 Int BE Pri
!#6 N7646 P4233 LD 3 -1 Int BE Pri
!#6 N7647 P4234 LD 10 -1 Int BE Pri
!#6 N7648 P4235 DWLD 7 -1,0x0 Int BE Pri
!#6 N7649 P4235 CASX 7 -1,0x0 N7648 0x300002b Int BE Pri
!#6 N7650 P4236 LD 9 -1 Int BE Pri
!#6 N7651 P4237 LD 14 -1 FP BE Pri
!#6 N7652 P4237 LD 14 -1 FP BE Pri
!#6 N7653 P4238 LD 2 -1 Int BE Pri
!#6 N7654 P4239 LD 12 -1 Int BE Pri
!#6 N7657 P4242 LD 5 -1 Int BE Pri
!#6 N7658 P4243 ST 12 0x300002c Int LE Pri
!#6 N7659 P4244 LD 0 -1 Int BE Pri
!#6 N7660 P4245 DWST 10 0x4280003f FP BE Pri
!#6 N7661 P4246 MEMBAR
!#6 N7662 P4247 BST 14 0x42800040 FP BE Pri
!#6 N7663 P4247 BST 15 0x42800041 FP BE Pri
!#6 N7666 P4250 LD 0 -1 Int BE Pri
!#6 N7668 P4252 LD 7 -1 Int BE Pri
!#6 N7669 P4250 LD 0 -1 Int BE Pri
!#6 N7671 P4252 LD 7 -1 Int BE Pri
!#6 N7672 P4253 DWLD 0 -1 Int BE Pri
!#6 N7673 P4254 LD 9 -1 FP BE Pri
!#6 N7674 P4255 LD 10 -1 Int BE Pri
!#6 N7675 P4253 DWLD 0 -1 Int BE Pri
!#6 N7676 P4254 LD 9 -1 FP BE Pri
!#6 N7677 P4255 LD 10 -1 Int BE Pri
!#6 N7678 P4256 BLD 4 -1 FP BE Pri
!#6 N7679 P4256 BLD 5 -1 FP BE Pri
!#6 N7680 P4257 DWLD 8 -1 Int BE Pri
!#6 N7681 P4258 LD 9 -1 Int BE Pri
!#6 N7682 P4259 LD 11 -1 Int BE Pri
!#6 N7683 P4259 CAS 11 -1 N7682 0x300002d Int BE Pri
!#6 N7685 P4259 LD 11 -1 Int BE Pri
!#6 N7686 P4259 CAS 11 -1 N7685 0x300002e Int BE Pri
!#6 N7688 P4261 LD 12 -1 Int BE Pri
!#6 N7689 P4261 CAS 12 -1 N7688 0x300002f Int BE Pri
!#6 N7690 P4262 LD 15 -1 Int BE Pri
!#6 N7691 P4263 LD 0 -1 Int BE Pri
!#6 N7692 P4261 LD 12 -1 Int BE Pri
!#6 N7693 P4261 CAS 12 -1 N7692 0x3000030 Int BE Pri
!#6 N7694 P4262 LD 15 -1 Int BE Pri
!#6 N7695 P4263 LD 0 -1 Int BE Pri
!#6 N7697 P4265 SWAP 8 0xffffffff 0x3000031 Int BE Pri
!#6 N7698 P4266 LD 8 -1 Int BE Pri
!#6 N7700 P4265 SWAP 8 0xffffffff 0x3000032 Int BE Pri
!#6 N7701 P4266 LD 8 -1 Int BE Pri
!#6 N7702 P4267 LD 13 -1 FP BE Pri
!#6 N7703 P4267 LD 13 -1 FP BE Pri
!#6 N7704 P4268 LD 15 -1 Int BE Pri
!#6 N7705 P4269 LD 9 -1 Int BE Pri
!#6 N7706 P4270 LD 15 -1 Int BE Pri
!#6 N7707 P4270 CAS 15 -1 N7706 0x3000033 Int BE Pri
!#6 N7708 P4270 LD 15 -1 Int BE Pri
!#6 N7709 P4270 CAS 15 -1 N7708 0x3000034 Int BE Pri
!#6 N7710 P4271 ST 6 0x3000035 Int BE Pri
!#6 N7712 P4273 LD 0 -1 NF FP BE Pri
!#6 N7714 P4273 LD 0 -1 NF FP BE Pri
!#6 N7715 P4274 DWLD 13 -1,0x0 Int BE Pri
!#6 N7716 P4274 CASX 13 -1,0x0 N7715 0x3000036 Int BE Pri
!#6 N7717 P4274 DWLD 13 -1,0x0 Int BE Pri
!#6 N7718 P4274 CASX 13 -1,0x0 N7717 0x3000037 Int BE Pri
!#6 N7723 P4277 BLD 6 -1 FP BE Pri
!#6 N7724 P4277 BLD 7 -1 FP BE Pri
!#6 N7725 P4277 BLD 6 -1 FP BE Pri
!#6 N7726 P4277 BLD 7 -1 FP BE Pri
!#6 N7727 P4278 LD 8 -1 NF FP BE Pri
!#6 N7729 P4280 LD 8 -1 FP BE Pri
!#6 N7730 P4281 LD 9 -1 NF FP BE Pri
!#6 N7731 P4282 DWST 10 0x3000038 Int LE Pri
!#6 N7732 P4283 LD 15 -1 FP BE Pri
!#6 N7733 P4284 ST 6 0x3000039 Int BE Pri
!#6 N7734 P4284 ST 6 0x300003a Int BE Pri
!#6 N7735 P4285 BST 2 0x42800042 FP BE Pri
!#6 N7736 P4285 BST 3 0x42800043 FP BE Pri
!#6 N7737 P4286 LD 4 -1 Int BE Pri
!#6 N7738 P4287 LD 3 -1 Int BE Pri
!#6 N7739 P4285 BST 2 0x42800044 FP BE Pri
!#6 N7740 P4285 BST 3 0x42800045 FP BE Pri
!#6 N7741 P4286 LD 4 -1 Int BE Pri
!#6 N7742 P4287 LD 3 -1 Int BE Pri
!#6 N7743 P4288 DWST 1 0x300003b Int BE Pri
!#6 N7744 P4289 LD 10 -1 Int BE Pri
!#6 N7745 P4289 CAS 10 -1 N7744 0x300003c Int BE Pri
!#6 N7746 P4288 DWST 1 0x300003d Int BE Pri
!#6 N7747 P4289 LD 10 -1 Int BE Pri
!#6 N7748 P4289 CAS 10 -1 N7747 0x300003e Int BE Pri
!#6 N7749 P4290 LD 0 -1 FP BE Pri
!#6 N7751 P4290 LD 0 -1 FP BE Pri
!#6 N7756 P4294 BST 14 0x42800046 FP BE Pri
!#6 N7757 P4294 BST 15 0x42800047 FP BE Pri
!#6 N7758 P4295 BLD 10 -1 FP BE Pri
!#6 N7759 P4295 BLD 11 -1 FP BE Pri
!#6 N7760 P4296 DWST 9 0x300003f Int BE Pri
!#6 N7761 P4297 DWLD 8 -1,0x0 Int LE Pri
!#6 N7762 P4297 CASX 8 -1,0x0 N7761 0x3000040 Int LE Pri
!#6 N7763 P4298 LD 8 -1 Int BE Pri
!#6 N7764 P4299 LD 10 -1 NF Int BE Pri
!#6 N7765 P4300 LD 7 -1 Int BE Pri
!#6 N7767 P4302 LD 6 -1 Int BE Pri
!#6 N7768 P4300 LD 7 -1 Int BE Pri
!#6 N7770 P4302 LD 6 -1 Int BE Pri
!#6 N7771 P4303 BST 12 0x42800048 FP BE Pri
!#6 N7772 P4303 BST 13 0x42800049 FP BE Pri
!#6 N7773 P4304 SWAP 6 0xffffffff 0x3000041 Int BE Pri
!#6 N7774 P4305 LD 7 -1 Int BE Pri
!#6 N7775 P4306 LD 13 -1 FP BE Pri
!#6 N7776 P4307 DWST 11 0x3000042 Int BE Pri
!#6 N7780 P4310 LD 6 -1 Int BE Pri
!#6 N7781 P4311 DWLD 0 -1 Int BE Pri
!#6 N7782 P4312 LD 11 -1 Int BE Pri
!#6 N7783 P4313 LD 8 -1 Int BE Pri
!#6 N7784 P4312 LD 11 -1 Int BE Pri
!#6 N7785 P4313 LD 8 -1 Int BE Pri
!#6 N7786 P4314 SWAP 9 0xffffffff 0x3000043 Int BE Pri
!#6 N7787 P4315 LD 3 -1 Int BE Pri
!#6 N7788 P4314 SWAP 9 0xffffffff 0x3000044 Int BE Pri
!#6 N7789 P4315 LD 3 -1 Int BE Pri
!#6 N7791 P4317 LD 12 -1 FP BE Pri
!#6 N7792 P4318 LD 3 -1 Int LE Pri
!#6 N7793 P4318 CAS 3 -1 N7792 0x3000045 Int LE Pri
!#6 N7794 P4319 LD 10 -1 Int BE Pri
!#6 N7795 P4320 LD 10 -1 FP BE Pri
!#6 N7796 P4321 LD 6 -1 Int BE Pri
!#6 N7797 P4322 BLD 10 -1 FP BE Pri
!#6 N7798 P4322 BLD 11 -1 FP BE Pri
!#6 N7802 P4325 DWLD 0 -1,0x0 Int BE Pri
!#6 N7803 P4325 CASX 0 -1,0x0 N7802 0x3000046 Int BE Pri
!#6 N7804 P4326 BSTC 12 0x4280004a FP BE Pri
!#6 N7805 P4326 BSTC 13 0x4280004b FP BE Pri
!#6 N7806 P4325 DWLD 0 -1,0x0 Int BE Pri
!#6 N7807 P4325 CASX 0 -1,0x0 N7806 0x3000047 Int BE Pri
!#6 N7808 P4326 BSTC 12 0x4280004c FP BE Pri
!#6 N7809 P4326 BSTC 13 0x4280004d FP BE Pri
!#6 N7810 P4327 DWLD 7 -1,0x0 Int BE Pri
!#6 N7811 P4327 CASX 7 -1,0x0 N7810 0x3000048 Int BE Pri
!#6 N7812 P4328 ST 8 0x4280004e FP BE Pri
!#6 N7813 P4328 ST 8 0x4280004f FP BE Pri
!#6 N7814 P4329 LD 11 -1 Int BE Pri
!#6 N7815 P4330 LD 10 -1 Int BE Pri
!#6 N7816 P4329 LD 11 -1 Int BE Pri
!#6 N7817 P4330 LD 10 -1 Int BE Pri
!#6 N7820 P4332 BLD 12 -1 FP BE Pri
!#6 N7821 P4332 BLD 13 -1 FP BE Pri
!#6 N7825 P4335 LD 5 -1 Int BE Pri
!#6 N7826 P4335 CAS 5 -1 N7825 0x3000049 Int BE Pri
!#6 N7827 P4336 ST 14 0x42800050 FP BE Pri
!#6 N7829 P4338 QWLD 14 -1 FP BE Pri
!#6 N7830 P4338 QWLD 15 -1 FP BE Pri
!#6 N7831 P4338 QWLD 14 -1 FP BE Pri
!#6 N7832 P4338 QWLD 15 -1 FP BE Pri
!#6 N7833 P4339 LD 6 -1 FP BE Pri
!#6 N7834 P4340 DWST 0 0x300004a Int BE Pri
!#6 N7835 P4339 LD 6 -1 FP BE Pri
!#6 N7836 P4340 DWST 0 0x300004b Int BE Pri
!#6 N7837 P4341 BLD 8 -1 FP BE Pri
!#6 N7838 P4341 BLD 9 -1 FP BE Pri
!#6 N7839 P4342 ST 0 0x42800051 FP BE Pri
!#6 N7840 P4341 BLD 8 -1 FP BE Pri
!#6 N7841 P4341 BLD 9 -1 FP BE Pri
!#6 N7842 P4342 ST 0 0x42800052 FP BE Pri
!#6 N7843 P4343 LD 4 -1 Int BE Pri
!#6 N7844 P4343 CAS 4 -1 N7843 0x300004c Int BE Pri
!#6 N7845 P4344 DWST 11 0x42800053 FP BE Pri
!#6 N7846 P4343 LD 4 -1 Int BE Pri
!#6 N7847 P4343 CAS 4 -1 N7846 0x300004d Int BE Pri
!#6 N7848 P4344 DWST 11 0x42800054 FP BE Pri
!#6 N7851 P4347 LD 0 -1 Int BE Pri
!#6 N7852 P4347 CAS 0 -1 N7851 0x300004e Int BE Pri
!#6 N7853 P4347 LD 0 -1 Int BE Pri
!#6 N7854 P4347 CAS 0 -1 N7853 0x300004f Int BE Pri
!#6 N7855 P4348 LD 11 -1 FP BE Pri
!#6 N7856 P4348 LD 11 -1 FP BE Pri
!#6 N7857 P4349 LD 2 -1 Int BE Pri
!#6 N7858 P4350 BST 10 0x42800055 FP BE Pri
!#6 N7859 P4350 BST 11 0x42800056 FP BE Pri
!#6 N7860 P4351 LD 10 -1 Int BE Pri
!#6 N7861 P4349 LD 2 -1 Int BE Pri
!#6 N7862 P4350 BST 10 0x42800057 FP BE Pri
!#6 N7863 P4350 BST 11 0x42800058 FP BE Pri
!#6 N7864 P4351 LD 10 -1 Int BE Pri
!#6 N7865 P4352 LD 0 -1 NF Int BE Pri
!#6 N7866 P4353 BST 0 0x42800059 FP BE Pri
!#6 N7867 P4353 BST 1 0x4280005a FP BE Pri
!#6 N7868 P4354 LD 2 -1 Int BE Pri
!#6 N7869 P4352 LD 0 -1 NF Int BE Pri
!#6 N7870 P4353 BST 0 0x4280005b FP BE Pri
!#6 N7871 P4353 BST 1 0x4280005c FP BE Pri
!#6 N7872 P4354 LD 2 -1 Int BE Pri
!#6 N7874 P4356 QWST 10 0x4280005d FP BE Pri
!#6 N7875 P4356 QWST 11 0x4280005e FP BE Pri
!#6 N7876 P4357 LD 2 -1 Int BE Pri
!#6 N7877 P4357 CAS 2 -1 N7876 0x3000050 Int BE Pri
!#6 N7878 P4358 ST 5 0x4280005f FP BE Pri
!#6 N7879 P4359 LD 5 -1 FP BE Pri
!#6 N7880 P4360 MEMBAR
!#6 N7881 P4361 DWLD 6 -1,0x0 Int BE Pri
!#6 N7882 P4361 CASX 6 -1,0x0 N7881 0x3000051 Int BE Pri
!#6 N7883 P4362 QWLD 14 -1 FP BE Pri
!#6 N7884 P4362 QWLD 15 -1 FP BE Pri
!#6 N7885 P4363 BSTC 4 0x42800060 FP BE Pri
!#6 N7886 P4363 BSTC 5 0x42800061 FP BE Pri
!#6 N7891 P4366 LD 12 -1 FP BE Pri
!#6 N7892 P4367 DWLD 0 -1 NF FP BE Pri
!#6 N7893 P4366 LD 12 -1 FP BE Pri
!#6 N7894 P4367 DWLD 0 -1 NF FP BE Pri
!#6 N7895 P4368 LD 8 -1 FP BE Pri
!#6 N7896 P4369 QWLD 10 -1 FP BE Pri
!#6 N7897 P4369 QWLD 11 -1 FP BE Pri
!#6 N7898 P4370 LD 4 -1 Int BE Pri
!#6 N7899 P4371 LD 9 -1 Int BE Pri
!#6 N7900 P4370 LD 4 -1 Int BE Pri
!#6 N7901 P4371 LD 9 -1 Int BE Pri
!#6 N7904 P4373 ST 12 0x42800062 FP BE Pri
!#6 N7905 P4374 BSTC 12 0x42800063 FP BE Pri
!#6 N7906 P4374 BSTC 13 0x42800064 FP BE Pri
!#6 N7907 P4375 LD 2 -1 Int BE Pri
!#6 N7908 P4376 LD 9 -1 Int BE Pri
!#6 N7909 P4375 LD 2 -1 Int BE Pri
!#6 N7910 P4376 LD 9 -1 Int BE Pri
!#6 N7917 P4380 LD 15 -1 FP BE Pri
!#6 N7918 P4381 LD 10 -1 Int BE Pri
!#6 N7919 P4382 LD 3 -1 Int BE Pri
!#6 N7920 P4380 LD 15 -1 FP BE Pri
!#6 N7921 P4381 LD 10 -1 Int BE Pri
!#6 N7922 P4382 LD 3 -1 Int BE Pri
!#6 N7923 P4383 LD 3 -1 FP BE Pri
!#6 N7924 P4383 LD 3 -1 FP BE Pri
!#6 N7925 P4384 QWLD 10 -1 FP BE Pri
!#6 N7926 P4384 QWLD 11 -1 FP BE Pri
!#6 N7927 P4385 LD 8 -1 FP BE Pri
!#6 N7928 P4384 QWLD 10 -1 FP BE Pri
!#6 N7929 P4384 QWLD 11 -1 FP BE Pri
!#6 N7930 P4385 LD 8 -1 FP BE Pri
!#6 N7932 P4387 LD 9 -1 Int BE Pri
!#6 N7933 P4388 LD 2 -1 NF Int BE Pri
!#6 N7935 P4390 BLD 14 -1 FP BE Pri
!#6 N7936 P4390 BLD 15 -1 FP BE Pri
!#6 N7937 P4391 LD 11 -1 Int BE Pri
!#6 N7938 P4392 LD 0 -1 Int BE Pri
!#6 N7939 P4390 BLD 14 -1 FP BE Pri
!#6 N7940 P4390 BLD 15 -1 FP BE Pri
!#6 N7941 P4391 LD 11 -1 Int BE Pri
!#6 N7942 P4392 LD 0 -1 Int BE Pri
!#6 N7944 P4394 LD 1 -1 Int BE Pri
!#6 N7946 P4396 LD 1 -1 NF Int BE Pri
!#6 N7948 P4398 DWLD 15 -1 Int BE Pri
!#6 N7949 P4399 LD 14 -1 Int BE Pri
!#6 N7950 P4400 SWAP 4 0xffffffff 0x3000052 Int BE Pri
!#6 N7952 P4402 LD 5 -1 Int BE Pri
!#6 N7953 P4403 DWLD 8 -1,0x0 Int BE Pri
!#6 N7954 P4403 CASX 8 -1,0x0 N7953 0x3000053 Int BE Pri
!#6 N7955 P4404 LD 5 -1 FP BE Pri
!#6 N7956 P4405 LD 5 -1 FP BE Pri
!#6 N7957 P4406 LD 0 -1 Int BE Pri
!#6 N7958 P4407 LD 14 -1 Int BE Pri
!#6 N7959 P4405 LD 5 -1 FP BE Pri
!#6 N7960 P4406 LD 0 -1 Int BE Pri
!#6 N7961 P4407 LD 14 -1 Int BE Pri
!#6 N7964 P4409 LD 7 -1 Int BE Pri
!#6 N7966 P4411 LD 2 -1 Int BE Pri
!#6 N7967 P4412 LD 1 -1 NF Int BE Pri
!#6 N7968 P4413 LD 8 -1 Int BE Pri
!#6 N7969 P4414 BLD 12 -1 FP BE Pri
!#6 N7970 P4414 BLD 13 -1 FP BE Pri
!#6 N7971 P4415 LD 8 -1 FP BE Pri
!#6 N7973 P4417 QWLD 6 -1 FP BE Pri
!#6 N7974 P4417 QWLD 7 -1 FP BE Pri
!#6 N7975 P4418 ST 2 0x3000054 Int BE Pri
!#6 N7976 P4418 ST 2 0x3000055 Int BE Pri
!#6 N7981 P4421 QWST 6 0x42800065 FP BE Pri
!#6 N7982 P4421 QWST 7 0x42800066 FP BE Pri
!#6 N7983 P4422 DWST 3 0x42800067 FP BE Pri
!#6 N7984 P4422 DWST 3 0x42800068 FP BE Pri
!#6 N7985 P4423 LD 9 -1 Int BE Pri
!#6 N7986 P4423 CAS 9 -1 N7985 0x3000056 Int BE Pri
!#6 N7987 P4424 LD 0 -1 Int BE Pri
!#6 N7988 P4424 CAS 0 -1 N7987 0x3000057 Int BE Pri
!#6 N7989 P4423 LD 9 -1 Int BE Pri
!#6 N7990 P4423 CAS 9 -1 N7989 0x3000058 Int BE Pri
!#6 N7991 P4424 LD 0 -1 Int BE Pri
!#6 N7992 P4424 CAS 0 -1 N7991 0x3000059 Int BE Pri
!#6 N7993 P4425 LD 2 -1 Int BE Pri
!#6 N7994 P4426 SWAP 6 0xffffffff 0x300005a Int BE Pri
!#6 N7995 P4427 QWLD 10 -1 NF FP BE Pri
!#6 N7996 P4427 QWLD 11 -1 NF FP BE Pri
!#6 N7997 P4428 BSTC 0 0x42800069 FP BE Pri
!#6 N7998 P4428 BSTC 1 0x4280006a FP BE Pri
!#6 N7999 P4427 QWLD 10 -1 NF FP BE Pri
!#6 N8000 P4427 QWLD 11 -1 NF FP BE Pri
!#6 N8001 P4428 BSTC 0 0x4280006b FP BE Pri
!#6 N8002 P4428 BSTC 1 0x4280006c FP BE Pri
!#6 N8003 P4429 DWLD 1 -1,0x0 Int BE Pri
!#6 N8004 P4429 CASX 1 -1,0x0 N8003 0x300005b Int BE Pri
!#6 N8005 P4430 ST 15 0x300005c Int BE Pri
!#6 N8006 P4431 LD 1 -1 FP BE Pri
!#6 N8007 P4432 LD 8 -1 FP BE Pri
!#6 N8008 P4433 LD 13 -1 FP BE Pri
!#6 N8009 P4432 LD 8 -1 FP BE Pri
!#6 N8010 P4433 LD 13 -1 FP BE Pri
!#6 N8011 P4434 LD 3 -1 Int BE Pri
!#6 N8012 P4435 LD 15 -1 Int BE Pri
!#6 N8013 P4436 LD 5 -1 FP BE Pri
!#6 N8014 P4436 LD 5 -1 FP BE Pri
!#6 N8015 P4437 LD 13 -1 FP BE Pri
!#6 N8018 P4440 MEMBAR
!#6 N8020 P4442 BSTC 10 0x4280006d FP BE Pri
!#6 N8021 P4442 BSTC 11 0x4280006e FP BE Pri
!#6 N8023 P4442 BSTC 10 0x4280006f FP BE Pri
!#6 N8024 P4442 BSTC 11 0x42800070 FP BE Pri
!#6 N8026 P4444 LD 11 -1 Int BE Pri
!#6 N8027 P4444 CAS 11 -1 N8026 0x300005d Int BE Pri
!#6 N8028 P4445 LD 12 -1 FP BE Pri
!#6 N8029 P4446 SWAP 9 0xffffffff 0x300005e Int BE Pri
!#6 N8030 P4447 LD 14 -1 Int BE Pri
!#6 N8033 P4449 LD 2 -1 Int BE Pri
!#6 N8034 P4449 CAS 2 -1 N8033 0x300005f Int BE Pri
!#6 N8035 P4450 DWST 0 0x3000060 Int BE Pri
!#6 N8036 P4449 LD 2 -1 Int BE Pri
!#6 N8037 P4449 CAS 2 -1 N8036 0x3000061 Int BE Pri
!#6 N8038 P4450 DWST 0 0x3000062 Int BE Pri
!#6 N8039 P4451 LD 9 -1 FP BE Pri
!#6 N8040 P4452 LD 15 -1 NF FP BE Pri
!#6 N8041 P4453 DWLD 3 -1,0x0 Int BE Pri
!#6 N8042 P4453 CASX 3 -1,0x0 N8041 0x3000063 Int BE Pri
!#6 N8043 P4454 LD 11 -1 FP BE Pri
!#6 N8044 P4453 DWLD 3 -1,0x0 Int BE Pri
!#6 N8045 P4453 CASX 3 -1,0x0 N8044 0x3000064 Int BE Pri
!#6 N8046 P4454 LD 11 -1 FP BE Pri
!#6 N8047 P4455 BLD 14 -1 FP BE Pri
!#6 N8048 P4455 BLD 15 -1 FP BE Pri
!#6 N8049 P4455 BLD 14 -1 FP BE Pri
!#6 N8050 P4455 BLD 15 -1 FP BE Pri
!#6 N8051 P4456 LD 14 -1 Int BE Pri
!#6 N8052 P4456 CAS 14 -1 N8051 0x3000065 Int BE Pri
!#6 N8053 P4457 BST 0 0x42800071 FP BE Pri
!#6 N8054 P4457 BST 1 0x42800072 FP BE Pri
!#6 N8055 P4458 DWLD 2 -1 FP BE Pri
!#6 N8057 P4460 DWLD 13 -1,0x0 Int BE Pri
!#6 N8058 P4460 CASX 13 -1,0x0 N8057 0x3000066 Int BE Pri
!#6 N8059 P4461 BLD 12 -1 FP BE Pri
!#6 N8060 P4461 BLD 13 -1 FP BE Pri
!#6 N8062 P4463 LD 5 -1 Int BE Pri
!#6 N8063 P4464 LD 11 -1 Int BE Pri
!#6 N8064 P4463 LD 5 -1 Int BE Pri
!#6 N8065 P4464 LD 11 -1 Int BE Pri
!#6 N8066 P4465 BLD 0 -1 FP BE Pri
!#6 N8067 P4465 BLD 1 -1 FP BE Pri
!#6 N8068 P4466 BST 14 0x42800073 FP BE Pri
!#6 N8069 P4466 BST 15 0x42800074 FP BE Pri
!#6 N8070 P4467 LD 5 -1 FP BE Pri
!#6 N8071 P4468 LD 4 -1 FP BE Pri
!#6 N8072 P4467 LD 5 -1 FP BE Pri
!#6 N8073 P4468 LD 4 -1 FP BE Pri
!#6 N8074 P4469 LD 12 -1 Int BE Pri
!#6 N8075 P4470 LD 5 -1 FP BE Pri
!#6 N8076 P4471 LD 3 -1 Int LE Pri
!#6 N8077 P4469 LD 12 -1 Int BE Pri
!#6 N8078 P4470 LD 5 -1 FP BE Pri
!#6 N8079 P4471 LD 3 -1 Int LE Pri
!#6 N8080 P4472 QWST 0 0x42800075 FP BE Pri
!#6 N8081 P4472 QWST 1 0x42800076 FP BE Pri
!#6 N8082 P4473 LD 3 -1 Int BE Pri
!#6 N8083 P4474 LD 13 -1 Int BE Pri
!#6 N8084 P4472 QWST 0 0x42800077 FP BE Pri
!#6 N8085 P4472 QWST 1 0x42800078 FP BE Pri
!#6 N8086 P4473 LD 3 -1 Int BE Pri
!#6 N8087 P4474 LD 13 -1 Int BE Pri
!#6 N8088 P4475 LD 1 -1 FP BE Pri
!#6 N8089 P4476 DWST 6 0x42800079 FP BE Pri
!#6 N8091 P4478 LD 11 -1 NF FP BE Pri
!#6 N8092 P4479 LD 9 -1 Int BE Pri
!#6 N8093 P4480 LD 0 -1 Int BE Pri
!#6 N8094 P4479 LD 9 -1 Int BE Pri
!#6 N8095 P4480 LD 0 -1 Int BE Pri
!#6 N8096 P4481 QWLD 0 -1 FP BE Pri
!#6 N8097 P4481 QWLD 1 -1 FP BE Pri
!#6 N8098 P4482 BST 14 0x4280007a FP BE Pri
!#6 N8099 P4482 BST 15 0x4280007b FP BE Pri
!#6 N8100 P4483 LD 1 -1 Int BE Pri
!#6 N8101 P4484 LD 3 -1 NF Int BE Pri
!#6 N8102 P4485 LD 6 -1 NF Int BE Pri
!#6 N8103 P4486 LD 7 -1 NF Int BE Pri
!#6 N8104 P4485 LD 6 -1 NF Int BE Pri
!#6 N8105 P4486 LD 7 -1 NF Int BE Pri
!#6 N8106 P4487 QWLD 8 -1 FP BE Pri
!#6 N8107 P4487 QWLD 9 -1 FP BE Pri
!#6 N8110 P4489 BST 8 0x4280007c FP BE Pri
!#6 N8111 P4489 BST 9 0x4280007d FP BE Pri
!#6 N8113 P4491 BLD 8 -1 FP BE Pri
!#6 N8114 P4491 BLD 9 -1 FP BE Pri
!#6 N8115 P4492 LD 12 -1 Int BE Pri
!#6 N8116 P4493 QWST 8 0x4280007e FP BE Pri
!#6 N8117 P4493 QWST 9 0x4280007f FP BE Pri
!#6 N8118 P4494 LD 0 -1 Int BE Pri
!#6 N8119 P4492 LD 12 -1 Int BE Pri
!#6 N8120 P4493 QWST 8 0x42800080 FP BE Pri
!#6 N8121 P4493 QWST 9 0x42800081 FP BE Pri
!#6 N8122 P4494 LD 0 -1 Int BE Pri
!#6 N8123 P4495 LD 14 -1 FP BE Pri
!#6 N8124 P4495 LD 14 -1 FP BE Pri
!#6 N8125 P4496 LD 11 -1 FP BE Pri
!#6 N8126 P4497 LD 4 -1 NF FP BE Pri
!#6 N8128 P4499 QWST 6 0x42800082 FP BE Pri
!#6 N8129 P4499 QWST 7 0x42800083 FP BE Pri
!#6 N8131 P4501 LD 15 -1 Int BE Pri
!#6 N8132 P4502 LD 4 -1 Int BE Pri
!#6 N8133 P4503 MEMBAR
!#6 N8135 P4505 BLD 2 -1 FP BE Pri
!#6 N8136 P4505 BLD 3 -1 FP BE Pri
!#6 N8138 P4505 BLD 2 -1 FP BE Pri
!#6 N8139 P4505 BLD 3 -1 FP BE Pri
!#6 N8140 P4506 LD 0 -1 Int BE Pri
!#6 N8142 P4508 LD 9 -1 Int BE Pri
!#6 N8143 P4509 MEMBAR
!#6 N8144 P4510 LD 13 -1 Int BE Pri
!#6 N8145 P4511 LD 2 -1 Int BE Pri
!#6 N8146 P4510 LD 13 -1 Int BE Pri
!#6 N8147 P4511 LD 2 -1 Int BE Pri
!#6 N8148 P4512 QWST 14 0x42800084 FP BE Pri
!#6 N8149 P4512 QWST 15 0x42800085 FP BE Pri
!#6 N8151 P4512 QWST 14 0x42800086 FP BE Pri
!#6 N8152 P4512 QWST 15 0x42800087 FP BE Pri
!#6 N8154 P4514 LD 8 -1 Int BE Pri
!#6 N8155 P4514 CAS 8 -1 N8154 0x3000067 Int BE Pri
!#6 N8157 P4514 LD 8 -1 Int BE Pri
!#6 N8158 P4514 CAS 8 -1 N8157 0x3000068 Int BE Pri
!#6 N8160 P4516 LD 11 -1 FP BE Pri
!#6 N8161 P4516 LD 11 -1 FP BE Pri
!#6 N8162 P4517 BSTC 4 0x42800088 FP BE Pri
!#6 N8163 P4517 BSTC 5 0x42800089 FP BE Pri
!#6 N8164 P4518 LD 8 -1 FP BE Pri
!#6 N8165 P4519 LD 4 -1 FP BE Pri
!#6 N8166 P4520 LD 9 -1 Int BE Pri
!#6 N8167 P4521 LD 10 -1 Int BE Pri
!#6 N8168 P4520 LD 9 -1 Int BE Pri
!#6 N8169 P4521 LD 10 -1 Int BE Pri
!#6 N8170 P4522 DWST 14 0x4280008a FP BE Pri
!#6 N8171 P4523 BSTC 8 0x4280008b FP BE Pri
!#6 N8172 P4523 BSTC 9 0x4280008c FP BE Pri
!#6 N8173 P4524 BST 8 0x4280008d FP BE Pri
!#6 N8174 P4524 BST 9 0x4280008e FP BE Pri
!#6 N8175 P4524 BST 8 0x4280008f FP BE Pri
!#6 N8176 P4524 BST 9 0x42800090 FP BE Pri
!#6 N8177 P4525 DWST 2 0x42800091 FP BE Pri
!#6 N8179 P4527 BST 6 0x42800092 FP BE Pri
!#6 N8180 P4527 BST 7 0x42800093 FP BE Pri
!#6 N8181 P4528 SWAP 13 0xffffffff 0x3000069 Int BE Pri
!#6 N8182 P4529 LD 2 -1 Int BE Pri
!#6 N8183 P4530 LD 8 -1 Int BE Pri
!#6 N8185 P4532 LD 11 -1 Int BE Pri
!#6 N8186 P4530 LD 8 -1 Int BE Pri
!#6 N8188 P4532 LD 11 -1 Int BE Pri
!#6 N8189 P4533 BLD 2 -1 FP BE Pri
!#6 N8190 P4533 BLD 3 -1 FP BE Pri
!#6 N8191 P4533 BLD 2 -1 FP BE Pri
!#6 N8192 P4533 BLD 3 -1 FP BE Pri
!#6 N8194 P4535 BSTC 2 0x42800094 FP BE Pri
!#6 N8195 P4535 BSTC 3 0x42800095 FP BE Pri
!#6 N8197 P4535 BSTC 2 0x42800096 FP BE Pri
!#6 N8198 P4535 BSTC 3 0x42800097 FP BE Pri
!#6 N8201 P4538 LD 0 -1 NF FP BE Pri
!#6 N8203 P4538 LD 0 -1 NF FP BE Pri
!#6 N8205 P4540 LD 4 -1 FP BE Pri
!#6 N8206 P4541 DWLD 15 -1 Int BE Pri
!#6 N8208 P4543 LD 7 -1 NF Int BE Pri
!#6 N8209 P4544 LD 5 -1 Int BE Pri
!#6 N8210 P4544 CAS 5 -1 N8209 0x300006a Int BE Pri
!#6 N8212 P4546 SWAP 12 0xffffffff 0x300006b Int BE Pri
!#6 N8213 P4547 LD 13 -1 NF FP BE Pri
!#6 N8214 P4548 LD 1 -1 Int BE Pri
!#6 N8215 P4546 SWAP 12 0xffffffff 0x300006c Int BE Pri
!#6 N8216 P4547 LD 13 -1 NF FP BE Pri
!#6 N8217 P4548 LD 1 -1 Int BE Pri
!#6 N8220 P4551 QWLD 2 -1 FP BE Pri
!#6 N8221 P4551 QWLD 3 -1 FP BE Pri
!#6 N8223 P4553 LD 6 -1 Int BE Pri
!#6 N8224 P4554 LD 15 -1 Int BE Pri
!#6 N8228 P4557 LD 12 -1 Int BE Pri
!#6 N8229 P4558 LD 9 -1 Int BE Pri
!#6 N8231 P4557 LD 12 -1 Int BE Pri
!#6 N8232 P4558 LD 9 -1 Int BE Pri
!#6 N8233 P4559 LD 13 -1 FP BE Pri
!#6 N8235 P4559 LD 13 -1 FP BE Pri
!#6 N8237 P4561 LD 13 -1 Int BE Pri
!#6 N8238 P4562 LD 4 -1 Int BE Pri
!#6 N8239 P4561 LD 13 -1 Int BE Pri
!#6 N8240 P4562 LD 4 -1 Int BE Pri
!#6 N8241 P4563 LD 12 -1 FP BE Pri
!#6 N8242 P4564 QWLD 6 -1 FP BE Pri
!#6 N8243 P4564 QWLD 7 -1 FP BE Pri
!#6 N8244 P4565 LD 5 -1 FP BE Pri
!#6 N8245 P4566 LD 7 -1 Int BE Pri
!#6 N8246 P4567 LD 9 -1 Int LE Pri
!#6 N8247 P4568 ST 4 0x42800098 FP BE Pri
!#6 N8248 P4569 LD 13 -1 FP BE Pri
!#6 N8250 P4571 ST 6 0x42800099 FP BE Pri
!#6 N8251 P4571 ST 6 0x4280009a FP BE Pri
!#6 N8254 P4573 QWST 10 0x4280009b FP BE Pri
!#6 N8255 P4573 QWST 11 0x4280009c FP BE Pri
!#6 N8256 P4574 DWLD 0 -1 FP BE Pri
!#6 N8257 P4573 QWST 10 0x4280009d FP BE Pri
!#6 N8258 P4573 QWST 11 0x4280009e FP BE Pri
!#6 N8259 P4574 DWLD 0 -1 FP BE Pri
!#6 N8263 P4578 DWLD 11 -1,0x0 Int BE Pri
!#6 N8264 P4578 CASX 11 -1,0x0 N8263 0x300006d Int BE Pri
!#6 N8265 P4579 BSTC 10 0x4280009f FP BE Pri
!#6 N8266 P4579 BSTC 11 0x428000a0 FP BE Pri
!#6 N8267 P4580 LD 13 -1 NF FP BE Pri
!#6 N8268 P4581 LD 6 -1 FP BE Pri
!#6 N8269 P4582 QWST 12 0x428000a1 FP BE Pri
!#6 N8270 P4582 QWST 13 0x428000a2 FP BE Pri
!#6 N8271 P4583 ST 7 0x300006e Int BE Pri
!#6 N8272 P4584 DWLD 7 -1,0x0 Int BE Pri
!#6 N8273 P4584 CASX 7 -1,0x0 N8272 0x300006f Int BE Pri
!#6 N8274 P4583 ST 7 0x3000070 Int BE Pri
!#6 N8275 P4584 DWLD 7 -1,0x0 Int BE Pri
!#6 N8276 P4584 CASX 7 -1,0x0 N8275 0x3000071 Int BE Pri
!#6 N8277 P4585 QWST 2 0x428000a3 FP BE Pri
!#6 N8278 P4585 QWST 3 0x428000a4 FP BE Pri
!#6 N8279 P4586 BSTC 0 0x428000a5 FP BE Pri
!#6 N8280 P4586 BSTC 1 0x428000a6 FP BE Pri
!#6 N8281 P4587 BST 8 0x428000a7 FP BE Pri
!#6 N8282 P4587 BST 9 0x428000a8 FP BE Pri
!#6 N8285 P4590 BLD 12 -1 FP BE Pri
!#6 N8286 P4590 BLD 13 -1 FP BE Pri
!#6 N8288 P4592 QWST 6 0x428000a9 FP BE Pri
!#6 N8289 P4592 QWST 7 0x428000aa FP BE Pri
!#6 N8291 P4592 QWST 6 0x428000ab FP BE Pri
!#6 N8292 P4592 QWST 7 0x428000ac FP BE Pri
!#6 N8293 P4593 ST 2 0x428000ad FP BE Pri
!#6 N8294 P4594 LD 10 -1 Int BE Pri
!#6 N8295 P4595 LD 2 -1 Int BE Pri
!#6 N8296 P4593 ST 2 0x428000ae FP BE Pri
!#6 N8297 P4594 LD 10 -1 Int BE Pri
!#6 N8298 P4595 LD 2 -1 Int BE Pri
!#6 N8299 P4596 LD 9 -1 FP BE Pri
!#6 N8301 P4598 BLD 0 -1 FP BE Pri
!#6 N8302 P4598 BLD 1 -1 FP BE Pri
!#6 N8304 P4598 BLD 0 -1 FP BE Pri
!#6 N8305 P4598 BLD 1 -1 FP BE Pri
!#6 N8307 P4600 SWAP 8 0xffffffff 0x3000072 Int BE Pri
!#6 N8308 P4601 LD 12 -1 NF Int BE Pri
!#6 N8309 P4600 SWAP 8 0xffffffff 0x3000073 Int BE Pri
!#6 N8310 P4601 LD 12 -1 NF Int BE Pri
!#6 N8311 P4602 LD 11 -1 NF Fault FP BE Pri
!#6 N8312 P4602 LD 11 -1 NF Fault FP BE Pri
!#6 N8313 P4603 SWAP 0 0xffffffff 0x3000074 Int BE Pri
!#6 N8314 P4604 DWST 0 0x3000075 Int BE Pri
!#6 N8315 P4605 LD 12 -1 Int BE Pri
!#6 N8316 P4603 SWAP 0 0xffffffff 0x3000076 Int BE Pri
!#6 N8317 P4604 DWST 0 0x3000077 Int BE Pri
!#6 N8318 P4605 LD 12 -1 Int BE Pri
!#6 N8319 P4606 LD 6 -1 FP BE Pri
!#6 N8321 P4608 LD 12 -1 FP BE Pri
!#6 N8322 P4609 LD 9 -1 Int BE Pri
!#6 N8323 P4610 LD 8 -1 Int BE Pri
!#6 N8324 P4611 DWLD 9 -1 NF Int LE Pri
!#6 N8325 P4612 LD 7 -1 Int BE Pri
!#6 N8326 P4611 DWLD 9 -1 NF Int LE Pri
!#6 N8327 P4612 LD 7 -1 Int BE Pri
!#6 N8330 P4614 DWLD 1 -1 Int BE Pri
!#6 N8331 P4615 LD 14 -1 Int BE Pri
!#6 N8332 P4614 DWLD 1 -1 Int BE Pri
!#6 N8333 P4615 LD 14 -1 Int BE Pri
!#6 N8335 P4617 LD 4 -1 NF FP BE Pri
!#6 N8337 P4617 LD 4 -1 NF FP BE Pri
!#6 N8339 P4619 LD 12 -1 NF Fault Int BE Pri
!#6 N8340 P4620 LD 5 -1 NF Int BE Pri
!#6 N8341 P4619 LD 12 -1 NF Fault Int BE Pri
!#6 N8342 P4620 LD 5 -1 NF Int BE Pri
!#6 N8343 P4621 QWST 4 0x428000af FP BE Pri
!#6 N8344 P4621 QWST 5 0x428000b0 FP BE Pri
!#6 N8345 P4622 LD 5 -1 FP BE Pri
!#6 N8346 P4621 QWST 4 0x428000b1 FP BE Pri
!#6 N8347 P4621 QWST 5 0x428000b2 FP BE Pri
!#6 N8348 P4622 LD 5 -1 FP BE Pri
!#6 N8350 P4624 LD 14 -1 Int BE Pri
!#6 N8351 P4625 LD 8 -1 Int BE Pri
!#6 N8353 P4627 LD 7 -1 FP BE Pri
!#6 N8357 P4630 LD 5 -1 Int BE Pri
!#6 N8358 P4631 BST 12 0x428000b3 FP BE Pri
!#6 N8359 P4631 BST 13 0x428000b4 FP BE Pri
!#6 N8360 P4632 LD 15 -1 Int BE Pri
!#6 N8361 P4633 DWLD 9 -1 FP BE Pri
!#6 N8362 P4634 DWLD 8 -1 Int BE Pri
!#6 N8363 P4635 LD 0 -1 Int BE Pri
!#6 N8364 P4636 LD 12 -1 FP BE Pri
!#6 N8365 P4637 BST 2 0x428000b5 FP BE Pri
!#6 N8366 P4637 BST 3 0x428000b6 FP BE Pri
!#6 N8367 P4637 BST 2 0x428000b7 FP BE Pri
!#6 N8368 P4637 BST 3 0x428000b8 FP BE Pri
!#6 N8373 P4640 SWAP 14 0xffffffff 0x3000078 Int BE Pri
!#6 N8374 P4641 LD 11 -1 NF Int BE Pri
!#6 N8375 P4642 LD 2 -1 Int BE Pri
!#6 N8376 P4643 LD 4 -1 Int BE Pri
!#6 N8377 P4642 LD 2 -1 Int BE Pri
!#6 N8378 P4643 LD 4 -1 Int BE Pri
!#6 N8379 P4644 DWST 8 0x428000b9 FP BE Pri
!#6 N8381 P4646 BSTC 12 0x428000ba FP BE Pri
!#6 N8382 P4646 BSTC 13 0x428000bb FP BE Pri
!#6 N8384 P4646 BSTC 12 0x428000bc FP BE Pri
!#6 N8385 P4646 BSTC 13 0x428000bd FP BE Pri
!#6 N8387 P4648 LD 7 -1 Int BE Pri
!#6 N8388 P4649 LD 7 -1 Int BE Pri
!#6 N8389 P4650 DWLD 8 -1,0x0 Int BE Pri
!#6 N8390 P4650 CASX 8 -1,0x0 N8389 0x3000079 Int BE Pri
!#6 N8391 P4651 BSTC 12 0x428000be FP BE Pri
!#6 N8392 P4651 BSTC 13 0x428000bf FP BE Pri
!#6 N8393 P4652 BLD 8 -1 FP BE Pri
!#6 N8394 P4652 BLD 9 -1 FP BE Pri
!#6 N8396 P4652 BLD 8 -1 FP BE Pri
!#6 N8397 P4652 BLD 9 -1 FP BE Pri
!#6 N8401 P4656 QWLD 10 -1 FP BE Pri
!#6 N8402 P4656 QWLD 11 -1 FP BE Pri
!#6 N8403 P4657 BSTC 2 0x428000c0 FP BE Pri
!#6 N8404 P4657 BSTC 3 0x428000c1 FP BE Pri
!#6 N8405 P4656 QWLD 10 -1 FP BE Pri
!#6 N8406 P4656 QWLD 11 -1 FP BE Pri
!#6 N8407 P4657 BSTC 2 0x428000c2 FP BE Pri
!#6 N8408 P4657 BSTC 3 0x428000c3 FP BE Pri
!#6 N8409 P4658 LD 9 -1 FP BE Pri
!#6 N8410 P4659 DWLD 9 -1 FP BE Pri
!#6 N8411 P4658 LD 9 -1 FP BE Pri
!#6 N8412 P4659 DWLD 9 -1 FP BE Pri
!#6 N8413 P4660 ST 11 0x428000c4 FP BE Pri
!#6 N8414 P4660 ST 11 0x428000c5 FP BE Pri
!#6 N8415 P4661 QWST 4 0x428000c6 FP BE Pri
!#6 N8416 P4661 QWST 5 0x428000c7 FP BE Pri
!#6 N8417 P4662 LD 12 -1 Int BE Pri
!#6 N8418 P4662 CAS 12 -1 N8417 0x300007a Int BE Pri
!#6 N8420 P4662 LD 12 -1 Int BE Pri
!#6 N8421 P4662 CAS 12 -1 N8420 0x300007b Int BE Pri
!#6 N8423 P4664 BSTC 4 0x428000c8 FP BE Pri
!#6 N8424 P4664 BSTC 5 0x428000c9 FP BE Pri
!#6 N8425 P4665 LD 1 -1 Int BE Pri
!#6 N8426 P4666 LD 8 -1 Int BE Pri
!#6 N8427 P4664 BSTC 4 0x428000ca FP BE Pri
!#6 N8428 P4664 BSTC 5 0x428000cb FP BE Pri
!#6 N8429 P4665 LD 1 -1 Int BE Pri
!#6 N8430 P4666 LD 8 -1 Int BE Pri
!#6 N8431 P4667 LD 7 -1 Int BE Pri
!#6 N8432 P4667 CAS 7 -1 N8431 0x300007c Int BE Pri
!#6 N8437 P4670 LD 10 -1 FP BE Pri
!#6 N8438 P4671 LD 12 -1 FP BE Pri
!#6 N8439 P4670 LD 10 -1 FP BE Pri
!#6 N8440 P4671 LD 12 -1 FP BE Pri
!#6 N8441 P4672 LD 2 -1 NF Int BE Pri
!#6 N8442 P4673 LD 12 -1 Int BE Pri
!#6 N8443 P4674 LD 4 -1 FP BE Pri
!#6 N8444 P4675 QWLD 4 -1 FP BE Pri
!#6 N8445 P4675 QWLD 5 -1 FP BE Pri
!#6 N8446 P4676 LD 3 -1 FP BE Pri
!#6 N8447 P4677 LD 4 -1 FP BE Pri
!#6 N8448 P4676 LD 3 -1 FP BE Pri
!#6 N8449 P4677 LD 4 -1 FP BE Pri
!#6 N8450 P4678 LD 5 -1 NF Int BE Pri
!#6 N8451 P4679 LD 1 -1 Int LE Pri
!#6 N8452 P4678 LD 5 -1 NF Int BE Pri
!#6 N8453 P4679 LD 1 -1 Int LE Pri
!#6 N8454 P4680 ST 3 0x428000cc FP BE Pri
!#6 N8456 P4682 SWAP 14 0xffffffff 0x300007d Int BE Pri
!#6 N8457 P4683 LD 13 -1 Int BE Pri
!#6 N8459 P4682 SWAP 14 0xffffffff 0x300007e Int BE Pri
!#6 N8460 P4683 LD 13 -1 Int BE Pri
!#6 N8461 P4684 LD 2 -1 FP BE Pri
!#6 N8462 P4685 ST 13 0x428000cd FP BE Pri
!#6 N8463 P4686 LD 15 -1 NF Int BE Pri
!#6 N8465 P4688 LD 14 -1 Int BE Pri
!#6 N8466 P4686 LD 15 -1 NF Int BE Pri
!#6 N8468 P4688 LD 14 -1 Int BE Pri
!#6 N8469 P4689 QWST 12 0x428000ce FP BE Pri
!#6 N8470 P4689 QWST 13 0x428000cf FP BE Pri
!#6 N8471 P4690 MEMBAR
!#7 N8472 P4691 QWST 8 0x43000001 FP BE Pri
!#7 N8473 P4691 QWST 9 0x43000002 FP BE Pri
!#7 N8474 P4691 QWST 8 0x43000003 FP BE Pri
!#7 N8475 P4691 QWST 9 0x43000004 FP BE Pri
!#7 N8477 P4693 LD 0 -1 Int BE Pri
!#7 N8478 P4694 LD 0 -1 Int BE Pri
!#7 N8479 P4695 ST 12 0x43000005 FP BE Pri
!#7 N8480 P4696 ST 15 0x43000006 FP BE Pri
!#7 N8481 P4695 ST 12 0x43000007 FP BE Pri
!#7 N8482 P4696 ST 15 0x43000008 FP BE Pri
!#7 N8483 P4697 LD 13 -1 Int BE Pri
!#7 N8484 P4698 LD 12 -1 Int BE Pri
!#7 N8485 P4697 LD 13 -1 Int BE Pri
!#7 N8486 P4698 LD 12 -1 Int BE Pri
!#7 N8487 P4699 LD 5 -1 FP BE Pri
!#7 N8488 P4699 LD 5 -1 FP BE Pri
!#7 N8489 P4700 LD 12 -1 FP BE Pri
!#7 N8490 P4700 LD 12 -1 FP BE Pri
!#7 N8491 P4701 LD 11 -1 FP BE Pri
!#7 N8492 P4702 SWAP 14 0xffffffff 0x3800001 Int LE Pri
!#7 N8493 P4703 LD 6 -1 Int BE Pri
!#7 N8494 P4701 LD 11 -1 FP BE Pri
!#7 N8495 P4702 SWAP 14 0xffffffff 0x3800002 Int LE Pri
!#7 N8496 P4703 LD 6 -1 Int BE Pri
!#7 N8498 P4705 BST 4 0x43000009 FP BE Pri
!#7 N8499 P4705 BST 5 0x4300000a FP BE Pri
!#7 N8501 P4705 BST 4 0x4300000b FP BE Pri
!#7 N8502 P4705 BST 5 0x4300000c FP BE Pri
!#7 N8503 P4706 LD 6 -1 Int BE Pri
!#7 N8504 P4706 CAS 6 -1 N8503 0x3800003 Int BE Pri
!#7 N8505 P4706 LD 6 -1 Int BE Pri
!#7 N8506 P4706 CAS 6 -1 N8505 0x3800004 Int BE Pri
!#7 N8507 P4707 LD 0 -1 Int BE Pri
!#7 N8508 P4707 CAS 0 -1 N8507 0x3800005 Int BE Pri
!#7 N8509 P4708 LD 4 -1 FP BE Pri
!#7 N8510 P4709 DWLD 4 -1 NF Int LE Pri
!#7 N8511 P4710 LD 1 -1 Int BE Pri
!#7 N8512 P4711 BST 10 0x4300000d FP BE Pri
!#7 N8513 P4711 BST 11 0x4300000e FP BE Pri
!#7 N8514 P4712 BLD 4 -1 FP BE Pri
!#7 N8515 P4712 BLD 5 -1 FP BE Pri
!#7 N8516 P4713 LD 1 -1 FP BE Pri
!#7 N8517 P4713 LD 1 -1 FP BE Pri
!#7 N8519 P4715 ST 7 0x4300000f FP BE Pri
!#7 N8520 P4716 LD 11 -1 FP BE Pri
!#7 N8521 P4717 DWLD 13 -1 FP BE Pri
!#7 N8526 P4720 LD 14 -1 Int BE Pri
!#7 N8527 P4721 DWLD 8 -1 Int BE Pri
!#7 N8528 P4720 LD 14 -1 Int BE Pri
!#7 N8529 P4721 DWLD 8 -1 Int BE Pri
!#7 N8530 P4722 ST 11 0x43000010 FP BE Pri
!#7 N8531 P4723 ST 3 0x43000011 FP BE Pri
!#7 N8532 P4723 ST 3 0x43000012 FP BE Pri
!#7 N8534 P4725 LD 2 -1 FP BE Pri
!#7 N8536 P4725 LD 2 -1 FP BE Pri
!#7 N8539 P4727 LD 9 -1 FP BE Pri
!#7 N8540 P4728 LD 2 -1 FP BE Pri
!#7 N8541 P4727 LD 9 -1 FP BE Pri
!#7 N8542 P4728 LD 2 -1 FP BE Pri
!#7 N8543 P4729 QWST 8 0x43000013 FP BE Pri
!#7 N8544 P4729 QWST 9 0x43000014 FP BE Pri
!#7 N8545 P4729 QWST 8 0x43000015 FP BE Pri
!#7 N8546 P4729 QWST 9 0x43000016 FP BE Pri
!#7 N8548 P4731 BLD 6 -1 FP BE Pri
!#7 N8549 P4731 BLD 7 -1 FP BE Pri
!#7 N8551 P4731 BLD 6 -1 FP BE Pri
!#7 N8552 P4731 BLD 7 -1 FP BE Pri
!#7 N8553 P4732 LD 1 -1 Int BE Pri
!#7 N8554 P4733 LD 8 -1 FP BE Pri
!#7 N8555 P4734 LD 0 -1 Int BE Pri
!#7 N8556 P4735 LD 11 -1 Int BE Pri
!#7 N8557 P4735 CAS 11 -1 N8556 0x3800006 Int BE Pri
!#7 N8558 P4735 LD 11 -1 Int BE Pri
!#7 N8559 P4735 CAS 11 -1 N8558 0x3800007 Int BE Pri
!#7 N8562 P4738 LD 2 -1 Int BE Pri
!#7 N8563 P4739 LD 6 -1 Int BE Pri
!#7 N8564 P4738 LD 2 -1 Int BE Pri
!#7 N8565 P4739 LD 6 -1 Int BE Pri
!#7 N8567 P4741 QWLD 2 -1 FP BE Pri
!#7 N8568 P4741 QWLD 3 -1 FP BE Pri
!#7 N8569 P4742 DWLD 11 -1 Int BE Pri
!#7 N8570 P4743 LD 14 -1 Int BE Pri
!#7 N8571 P4741 QWLD 2 -1 FP BE Pri
!#7 N8572 P4741 QWLD 3 -1 FP BE Pri
!#7 N8573 P4742 DWLD 11 -1 Int BE Pri
!#7 N8574 P4743 LD 14 -1 Int BE Pri
!#7 N8575 P4744 LD 3 -1 FP BE Pri
!#7 N8576 P4744 LD 3 -1 FP BE Pri
!#7 N8577 P4745 LD 11 -1 FP BE Pri
!#7 N8579 P4745 LD 11 -1 FP BE Pri
!#7 N8582 P4748 DWLD 5 -1 Int BE Pri
!#7 N8583 P4749 LD 0 -1 Int BE Pri
!#7 N8584 P4750 QWLD 4 -1 FP BE Pri
!#7 N8585 P4750 QWLD 5 -1 FP BE Pri
!#7 N8586 P4751 BLD 6 -1 FP BE Pri
!#7 N8587 P4751 BLD 7 -1 FP BE Pri
!#7 N8589 P4751 BLD 6 -1 FP BE Pri
!#7 N8590 P4751 BLD 7 -1 FP BE Pri
!#7 N8592 P4753 LD 7 -1 FP BE Pri
!#7 N8593 P4754 BSTC 4 0x43000017 FP BE Pri
!#7 N8594 P4754 BSTC 5 0x43000018 FP BE Pri
!#7 N8595 P4753 LD 7 -1 FP BE Pri
!#7 N8596 P4754 BSTC 4 0x43000019 FP BE Pri
!#7 N8597 P4754 BSTC 5 0x4300001a FP BE Pri
!#7 N8598 P4755 LD 10 -1 Int BE Pri
!#7 N8599 P4756 LD 14 -1 Int BE Pri
!#7 N8600 P4757 DWST 14 0x4300001b FP BE Pri
!#7 N8601 P4757 DWST 14 0x4300001c FP BE Pri
!#7 N8602 P4758 DWST 12 0x4300001d FP BE Pri
!#7 N8603 P4758 DWST 12 0x4300001e FP BE Pri
!#7 N8604 P4759 LD 15 -1 Int BE Pri
!#7 N8605 P4760 LD 8 -1 Int BE Pri
!#7 N8606 P4759 LD 15 -1 Int BE Pri
!#7 N8607 P4760 LD 8 -1 Int BE Pri
!#7 N8609 P4762 LD 10 -1 FP BE Pri
!#7 N8611 P4762 LD 10 -1 FP BE Pri
!#7 N8612 P4763 QWLD 6 -1 FP BE Pri
!#7 N8613 P4763 QWLD 7 -1 FP BE Pri
!#7 N8614 P4764 LD 1 -1 FP BE Pri
!#7 N8615 P4763 QWLD 6 -1 FP BE Pri
!#7 N8616 P4763 QWLD 7 -1 FP BE Pri
!#7 N8617 P4764 LD 1 -1 FP BE Pri
!#7 N8619 P4766 BLD 2 -1 FP BE Pri
!#7 N8620 P4766 BLD 3 -1 FP BE Pri
!#7 N8622 P4766 BLD 2 -1 FP BE Pri
!#7 N8623 P4766 BLD 3 -1 FP BE Pri
!#7 N8624 P4767 LD 7 -1 Int BE Pri
!#7 N8625 P4768 LD 2 -1 NF Int BE Pri
!#7 N8630 P4771 LD 7 -1 FP BE Pri
!#7 N8631 P4772 QWST 12 0x4300001f FP BE Pri
!#7 N8632 P4772 QWST 13 0x43000020 FP BE Pri
!#7 N8633 P4771 LD 7 -1 FP BE Pri
!#7 N8634 P4772 QWST 12 0x43000021 FP BE Pri
!#7 N8635 P4772 QWST 13 0x43000022 FP BE Pri
!#7 N8636 P4773 ST 2 0x43000023 FP BE Pri
!#7 N8637 P4773 ST 2 0x43000024 FP BE Pri
!#7 N8638 P4774 LD 0 -1 NF FP BE Pri
!#7 N8640 P4774 LD 0 -1 NF FP BE Pri
!#7 N8642 P4776 ST 6 0x43000025 FP BE Pri
!#7 N8643 P4777 LD 13 -1 Int BE Pri
!#7 N8644 P4778 LD 6 -1 Int BE Pri
!#7 N8645 P4779 DWLD 6 -1 FP BE Pri
!#7 N8646 P4779 DWLD 6 -1 FP BE Pri
!#7 N8647 P4780 DWST 13 0x3800008 Int BE Pri
!#7 N8648 P4781 LD 15 -1 FP BE Pri
!#7 N8650 P4783 QWST 2 0x43000026 FP BE Pri
!#7 N8651 P4783 QWST 3 0x43000027 FP BE Pri
!#7 N8653 P4783 QWST 2 0x43000028 FP BE Pri
!#7 N8654 P4783 QWST 3 0x43000029 FP BE Pri
!#7 N8655 P4784 LD 11 -1 FP BE Pri
!#7 N8656 P4784 LD 11 -1 FP BE Pri
!#7 N8657 P4785 LD 12 -1 Int BE Pri
!#7 N8659 P4787 LD 11 -1 Int BE Pri
!#7 N8660 P4785 LD 12 -1 Int BE Pri
!#7 N8662 P4787 LD 11 -1 Int BE Pri
!#7 N8663 P4788 LD 1 -1 Int BE Pri
!#7 N8664 P4789 LD 6 -1 Int BE Pri
!#7 N8669 P4793 MEMBAR
!#7 N8670 P4793 MEMBAR
!#7 N8673 P4796 SWAP 3 0xffffffff 0x3800009 Int BE Pri
!#7 N8674 P4797 LD 2 -1 Int BE Pri
!#7 N8675 P4798 SWAP 15 0xffffffff 0x380000a Int BE Pri
!#7 N8676 P4799 LD 15 -1 Int BE Pri
!#7 N8677 P4798 SWAP 15 0xffffffff 0x380000b Int BE Pri
!#7 N8678 P4799 LD 15 -1 Int BE Pri
!#7 N8679 P4800 LD 15 -1 NF Int BE Pri
!#7 N8680 P4801 BSTC 12 0x4300002a FP BE Pri
!#7 N8681 P4801 BSTC 13 0x4300002b FP BE Pri
!#7 N8682 P4802 LD 15 -1 Int BE Pri
!#7 N8683 P4800 LD 15 -1 NF Int BE Pri
!#7 N8684 P4801 BSTC 12 0x4300002c FP BE Pri
!#7 N8685 P4801 BSTC 13 0x4300002d FP BE Pri
!#7 N8686 P4802 LD 15 -1 Int BE Pri
!#7 N8687 P4803 LD 9 -1 FP BE Pri
!#7 N8688 P4804 LD 11 -1 FP BE Pri
!#7 N8689 P4805 DWST 8 0x4300002e FP BE Pri
!#7 N8691 P4807 LD 0 -1 FP BE Pri
!#7 N8692 P4807 LD 0 -1 FP BE Pri
!#7 N8693 P4808 QWLD 14 -1 FP BE Pri
!#7 N8694 P4808 QWLD 15 -1 FP BE Pri
!#7 N8695 P4809 LD 6 -1 Int BE Pri
!#7 N8696 P4810 LD 12 -1 Int BE Pri
!#7 N8701 P4813 DWLD 3 -1 NF FP BE Pri
!#7 N8702 P4814 DWLD 0 -1,0x0 Int BE Pri
!#7 N8703 P4814 CASX 0 -1,0x0 N8702 0x380000c Int BE Pri
!#7 N8704 P4813 DWLD 3 -1 NF FP BE Pri
!#7 N8705 P4814 DWLD 0 -1,0x0 Int BE Pri
!#7 N8706 P4814 CASX 0 -1,0x0 N8705 0x380000d Int BE Pri
!#7 N8711 P4817 MEMBAR
!#7 N8712 P4818 LD 14 -1 FP BE Pri
!#7 N8713 P4819 DWLD 5 -1,0x0 Int BE Pri
!#7 N8714 P4819 CASX 5 -1,0x0 N8713 0x380000e Int BE Pri
!#7 N8715 P4818 LD 14 -1 FP BE Pri
!#7 N8716 P4819 DWLD 5 -1,0x0 Int BE Pri
!#7 N8717 P4819 CASX 5 -1,0x0 N8716 0x380000f Int BE Pri
!#7 N8721 P4823 LD 12 -1 FP BE Pri
!#7 N8722 P4824 LD 13 -1 Int BE Pri
!#7 N8724 P4826 LD 13 -1 NF Int BE Pri
!#7 N8725 P4827 SWAP 1 0xffffffff 0x3800010 Int BE Pri
!#7 N8726 P4828 BSTC 8 0x4300002f FP BE Pri
!#7 N8727 P4828 BSTC 9 0x43000030 FP BE Pri
!#7 N8728 P4829 LD 7 -1 NF Int BE Pri
!#7 N8729 P4827 SWAP 1 0xffffffff 0x3800011 Int BE Pri
!#7 N8730 P4828 BSTC 8 0x43000031 FP BE Pri
!#7 N8731 P4828 BSTC 9 0x43000032 FP BE Pri
!#7 N8732 P4829 LD 7 -1 NF Int BE Pri
!#7 N8733 P4830 LD 0 -1 Int BE Pri
!#7 N8734 P4831 LD 3 -1 Int BE Pri
!#7 N8735 P4832 LD 8 -1 Int BE Pri
!#7 N8736 P4833 BST 4 0x43000033 FP BE Pri
!#7 N8737 P4833 BST 5 0x43000034 FP BE Pri
!#7 N8738 P4834 LD 8 -1 Int BE Pri
!#7 N8739 P4832 LD 8 -1 Int BE Pri
!#7 N8740 P4833 BST 4 0x43000035 FP BE Pri
!#7 N8741 P4833 BST 5 0x43000036 FP BE Pri
!#7 N8742 P4834 LD 8 -1 Int BE Pri
!#7 N8743 P4835 BST 12 0x43000037 FP BE Pri
!#7 N8744 P4835 BST 13 0x43000038 FP BE Pri
!#7 N8745 P4836 LD 0 -1 Int BE Pri
!#7 N8746 P4836 CAS 0 -1 N8745 0x3800012 Int BE Pri
!#7 N8747 P4835 BST 12 0x43000039 FP BE Pri
!#7 N8748 P4835 BST 13 0x4300003a FP BE Pri
!#7 N8749 P4836 LD 0 -1 Int BE Pri
!#7 N8750 P4836 CAS 0 -1 N8749 0x3800013 Int BE Pri
!#7 N8751 P4837 LD 11 -1 Int BE Pri
!#7 N8752 P4838 LD 0 -1 FP BE Pri
!#7 N8753 P4839 LD 0 -1 Int BE Pri
!#7 N8754 P4837 LD 11 -1 Int BE Pri
!#7 N8755 P4838 LD 0 -1 FP BE Pri
!#7 N8756 P4839 LD 0 -1 Int BE Pri
!#7 N8757 P4840 LD 9 -1 NF FP BE Pri
!#7 N8758 P4841 LD 5 -1 FP BE Pri
!#7 N8759 P4840 LD 9 -1 NF FP BE Pri
!#7 N8760 P4841 LD 5 -1 FP BE Pri
!#7 N8761 P4842 LD 0 -1 Int BE Pri
!#7 N8762 P4843 LD 2 -1 Int BE Pri
!#7 N8763 P4842 LD 0 -1 Int BE Pri
!#7 N8764 P4843 LD 2 -1 Int BE Pri
!#7 N8765 P4844 ST 14 0x3800014 Int BE Pri
!#7 N8766 P4845 BSTC 0 0x4300003b FP BE Pri
!#7 N8767 P4845 BSTC 1 0x4300003c FP BE Pri
!#7 N8769 P4845 BSTC 0 0x4300003d FP BE Pri
!#7 N8770 P4845 BSTC 1 0x4300003e FP BE Pri
!#7 N8773 P4848 DWST 2 0x4300003f FP BE Pri
!#7 N8775 P4848 DWST 2 0x43000040 FP BE Pri
!#7 N8779 P4851 DWLD 11 -1,0x0 Int BE Pri
!#7 N8780 P4851 CASX 11 -1,0x0 N8779 0x3800015 Int BE Pri
!#7 N8781 P4851 DWLD 11 -1,0x0 Int BE Pri
!#7 N8782 P4851 CASX 11 -1,0x0 N8781 0x3800016 Int BE Pri
!#7 N8783 P4852 LD 15 -1 Int BE Pri
!#7 N8785 P4854 LD 10 -1 Int BE Pri
!#7 N8786 P4855 DWST 1 0x3800017 Int BE Pri
!#7 N8787 P4856 BST 10 0x43000041 FP BE Pri
!#7 N8788 P4856 BST 11 0x43000042 FP BE Pri
!#7 N8789 P4855 DWST 1 0x3800018 Int BE Pri
!#7 N8790 P4856 BST 10 0x43000043 FP BE Pri
!#7 N8791 P4856 BST 11 0x43000044 FP BE Pri
!#7 N8792 P4857 LD 7 -1 Int BE Pri
!#7 N8793 P4858 LD 8 -1 Int BE Pri
!#7 N8794 P4857 LD 7 -1 Int BE Pri
!#7 N8795 P4858 LD 8 -1 Int BE Pri
!#7 N8796 P4859 LD 7 -1 Int BE Pri
!#7 N8797 P4860 LD 14 -1 Int BE Pri
!#7 N8798 P4861 LD 4 -1 NF FP BE Pri
!#7 N8799 P4862 LD 15 -1 FP BE Pri
!#7 N8800 P4861 LD 4 -1 NF FP BE Pri
!#7 N8801 P4862 LD 15 -1 FP BE Pri
!#7 N8802 P4863 LD 3 -1 FP BE Pri
!#7 N8805 P4866 LD 5 -1 FP BE Pri
!#7 N8806 P4867 SWAP 2 0xffffffff 0x3800019 Int BE Pri
!#7 N8807 P4868 DWLD 4 -1,0x0 Int BE Pri
!#7 N8808 P4868 CASX 4 -1,0x0 N8807 0x380001a Int BE Pri
!#7 N8809 P4869 LD 12 -1 Int BE Pri
!#7 N8820 P4876 QWST 8 0x43000045 FP BE Pri
!#7 N8821 P4876 QWST 9 0x43000046 FP BE Pri
!#7 N8822 P4877 LD 15 -1 FP BE Pri
!#7 N8826 P4881 LD 11 -1 Int BE Pri
!#7 N8827 P4882 LD 13 -1 Int BE Pri
!#7 N8828 P4883 DWST 3 0x43000047 FP BE Pri
!#7 N8829 P4884 BST 4 0x43000048 FP BE Pri
!#7 N8830 P4884 BST 5 0x43000049 FP BE Pri
!#7 N8831 P4885 LD 0 -1 FP BE Pri
!#7 N8832 P4886 LD 2 -1 Int BE Pri
!#7 N8834 P4888 LD 13 -1 Int BE Pri
!#7 N8835 P4886 LD 2 -1 Int BE Pri
!#7 N8837 P4888 LD 13 -1 Int BE Pri
!#7 N8838 P4889 LD 12 -1 FP BE Pri
!#7 N8840 P4891 BLD 6 -1 FP BE Pri
!#7 N8841 P4891 BLD 7 -1 FP BE Pri
!#7 N8842 P4892 LD 13 -1 Int BE Pri
!#7 N8843 P4893 LD 3 -1 Int BE Pri
!#7 N8844 P4894 LD 1 -1 FP BE Pri
!#7 N8845 P4895 DWLD 1 -1,0x0 Int BE Pri
!#7 N8846 P4895 CASX 1 -1,0x0 N8845 0x380001b Int BE Pri
!#7 N8847 P4896 BLD 10 -1 FP BE Pri
!#7 N8848 P4896 BLD 11 -1 FP BE Pri
!#7 N8849 P4897 DWLD 2 -1,0x0 Int BE Pri
!#7 N8850 P4897 CASX 2 -1,0x0 N8849 0x380001c Int BE Pri
!#7 N8851 P4897 DWLD 2 -1,0x0 Int BE Pri
!#7 N8852 P4897 CASX 2 -1,0x0 N8851 0x380001d Int BE Pri
!#7 N8858 P4901 LD 13 -1 NF Int BE Pri
!#7 N8859 P4902 LD 5 -1 Int BE Pri
!#7 N8863 P4906 LD 11 -1 Int BE Pri
!#7 N8864 P4907 LD 1 -1 Int BE Pri
!#7 N8866 P4906 LD 11 -1 Int BE Pri
!#7 N8867 P4907 LD 1 -1 Int BE Pri
!#7 N8868 P4908 DWLD 5 -1 FP BE Pri
!#7 N8870 P4908 DWLD 5 -1 FP BE Pri
!#7 N8873 P4911 QWLD 14 -1 FP BE Pri
!#7 N8874 P4911 QWLD 15 -1 FP BE Pri
!#7 N8876 P4911 QWLD 14 -1 FP BE Pri
!#7 N8877 P4911 QWLD 15 -1 FP BE Pri
!#7 N8880 P4914 DWST 11 0x4300004a FP BE Pri
!#7 N8881 P4915 LD 15 -1 Int BE Pri
!#7 N8882 P4916 LD 5 -1 Int BE Pri
!#7 N8883 P4917 LD 1 -1 Int BE Pri
!#7 N8884 P4918 DWLD 9 -1 Int BE Pri
!#7 N8885 P4919 DWST 15 0x380001e Int BE Pri
!#7 N8886 P4919 DWST 15 0x380001f Int BE Pri
!#7 N8887 P4920 QWST 4 0x4300004b FP BE Pri
!#7 N8888 P4920 QWST 5 0x4300004c FP BE Pri
!#7 N8889 P4921 QWLD 6 -1 FP BE Pri
!#7 N8890 P4921 QWLD 7 -1 FP BE Pri
!#7 N8891 P4920 QWST 4 0x4300004d FP BE Pri
!#7 N8892 P4920 QWST 5 0x4300004e FP BE Pri
!#7 N8893 P4921 QWLD 6 -1 FP BE Pri
!#7 N8894 P4921 QWLD 7 -1 FP BE Pri
!#7 N8897 P4924 LD 15 -1 Int BE Pri
!#7 N8898 P4925 LD 3 -1 FP BE Pri
!#7 N8899 P4926 LD 8 -1 NF Int BE Pri
!#7 N8900 P4924 LD 15 -1 Int BE Pri
!#7 N8901 P4925 LD 3 -1 FP BE Pri
!#7 N8902 P4926 LD 8 -1 NF Int BE Pri
!#7 N8903 P4927 DWLD 9 -1,0x0 Int BE Pri
!#7 N8904 P4927 CASX 9 -1,0x0 N8903 0x3800020 Int BE Pri
!#7 N8906 P4929 LD 12 -1 Int BE Pri
!#7 N8907 P4930 LD 4 -1 Int BE Pri
!#7 N8908 P4931 LD 5 -1 Int BE Pri
!#7 N8909 P4932 LD 7 -1 Int BE Pri
!#7 N8910 P4933 LD 7 -1 FP BE Pri
!#7 N8911 P4933 LD 7 -1 FP BE Pri
!#7 N8912 P4934 LD 2 -1 Int BE Pri
!#7 N8913 P4935 LD 14 -1 Int BE Pri
!#7 N8914 P4934 LD 2 -1 Int BE Pri
!#7 N8915 P4935 LD 14 -1 Int BE Pri
!#7 N8916 P4936 ST 2 0x3800021 Int BE Pri
!#7 N8917 P4937 LD 2 -1 Int LE Pri
!#7 N8918 P4937 CAS 2 -1 N8917 0x3800022 Int LE Pri
!#7 N8919 P4936 ST 2 0x3800023 Int BE Pri
!#7 N8920 P4937 LD 2 -1 Int LE Pri
!#7 N8921 P4937 CAS 2 -1 N8920 0x3800024 Int LE Pri
!#7 N8922 P4938 LD 7 -1 FP BE Pri
!#7 N8923 P4939 LD 9 -1 FP BE Pri
!#7 N8924 P4940 LD 1 -1 Int BE Pri
!#7 N8925 P4941 LD 8 -1 Int LE Pri
!#7 N8926 P4940 LD 1 -1 Int BE Pri
!#7 N8927 P4941 LD 8 -1 Int LE Pri
!#7 N8928 P4942 BLD 10 -1 FP BE Pri
!#7 N8929 P4942 BLD 11 -1 FP BE Pri
!#7 N8930 P4942 BLD 10 -1 FP BE Pri
!#7 N8931 P4942 BLD 11 -1 FP BE Pri
!#7 N8933 P4944 LD 4 -1 Int BE Pri
!#7 N8934 P4945 LD 9 -1 Int BE Pri
!#7 N8935 P4944 LD 4 -1 Int BE Pri
!#7 N8936 P4945 LD 9 -1 Int BE Pri
!#7 N8937 P4946 LD 7 -1 FP BE Pri
!#7 N8938 P4947 LD 1 -1 FP BE Pri
!#7 N8939 P4948 QWLD 14 -1 FP BE Pri
!#7 N8940 P4948 QWLD 15 -1 FP BE Pri
!#7 N8941 P4949 LD 13 -1 FP BE Pri
!#7 N8942 P4949 LD 13 -1 FP BE Pri
!#7 N8943 P4950 DWST 11 0x4300004f FP BE Pri
!#7 N8944 P4951 BLD 14 -1 FP BE Pri
!#7 N8945 P4951 BLD 15 -1 FP BE Pri
!#7 N8946 P4951 BLD 14 -1 FP BE Pri
!#7 N8947 P4951 BLD 15 -1 FP BE Pri
!#7 N8948 P4952 LD 14 -1 FP BE Pri
!#7 N8949 P4952 LD 14 -1 FP BE Pri
!#7 N8950 P4953 MEMBAR
!#7 N8952 P4955 LD 15 -1 NF Int BE Pri
!#7 N8953 P4956 LD 2 -1 FP BE Pri
!#7 N8954 P4957 LD 7 -1 Int BE Pri
!#7 N8956 P4959 LD 4 -1 Int BE Pri
!#7 N8957 P4960 LD 13 -1 Int BE Pri
!#7 N8958 P4961 LD 9 -1 NF Int BE Pri
!#7 N8959 P4962 ST 13 0x43000050 FP BE Pri
!#7 N8960 P4963 LD 1 -1 Int BE Pri
!#7 N8961 P4964 LD 6 -1 Int BE Pri
!#7 N8963 P4966 LD 6 -1 NF Fault Int BE Pri
!#7 N8964 P4964 LD 6 -1 Int BE Pri
!#7 N8966 P4966 LD 6 -1 NF Fault Int BE Pri
!#7 N8968 P4968 LD 13 -1 Int BE Pri
!#7 N8969 P4969 LD 13 -1 Int BE Pri
!#7 N8970 P4970 LD 6 -1 Int BE Pri
!#7 N8972 P4972 LD 7 -1 Int BE Pri
!#7 N8973 P4970 LD 6 -1 Int BE Pri
!#7 N8975 P4972 LD 7 -1 Int BE Pri
!#7 N8976 P4973 QWLD 8 -1 FP BE Pri
!#7 N8977 P4973 QWLD 9 -1 FP BE Pri
!#7 N8978 P4974 SWAP 13 0xffffffff 0x3800025 Int LE Pri
!#7 N8979 P4975 LD 3 -1 Int BE Pri
!#7 N8980 P4973 QWLD 8 -1 FP BE Pri
!#7 N8981 P4973 QWLD 9 -1 FP BE Pri
!#7 N8982 P4974 SWAP 13 0xffffffff 0x3800026 Int LE Pri
!#7 N8983 P4975 LD 3 -1 Int BE Pri
!#7 N8984 P4976 ST 6 0x43000051 FP BE Pri
!#7 N8985 P4977 LD 2 -1 FP BE Pri
!#7 N8987 P4979 BSTC 0 0x43000052 FP BE Pri
!#7 N8988 P4979 BSTC 1 0x43000053 FP BE Pri
!#7 N8990 P4981 BSTC 6 0x43000054 FP BE Pri
!#7 N8991 P4981 BSTC 7 0x43000055 FP BE Pri
!#7 N8993 P4981 BSTC 6 0x43000056 FP BE Pri
!#7 N8994 P4981 BSTC 7 0x43000057 FP BE Pri
!#7 N8995 P4982 DWLD 7 -1,0x0 Int BE Pri
!#7 N8996 P4982 CASX 7 -1,0x0 N8995 0x3800027 Int BE Pri
!#7 N8997 P4982 DWLD 7 -1,0x0 Int BE Pri
!#7 N8998 P4982 CASX 7 -1,0x0 N8997 0x3800028 Int BE Pri
!#7 N9002 P4986 DWLD 13 -1 Int LE Pri
!#7 N9003 P4987 LD 10 -1 Int BE Pri
!#7 N9004 P4986 DWLD 13 -1 Int LE Pri
!#7 N9005 P4987 LD 10 -1 Int BE Pri
!#7 N9007 P4989 LD 13 -1 Int BE Pri
!#7 N9008 P4990 LD 8 -1 Int BE Pri
!#7 N9011 P4992 LD 5 -1 Int BE Pri
!#7 N9012 P4993 LD 10 -1 Int BE Pri
!#7 N9013 P4994 LD 1 -1 NF FP BE Pri
!#7 N9014 P4994 LD 1 -1 NF FP BE Pri
!#7 N9015 P4995 LD 8 -1 FP BE Pri
!#7 N9016 P4996 LD 4 -1 Int BE Pri
!#7 N9017 P4997 LD 0 -1 Int BE Pri
!#7 N9018 P4995 LD 8 -1 FP BE Pri
!#7 N9019 P4996 LD 4 -1 Int BE Pri
!#7 N9020 P4997 LD 0 -1 Int BE Pri
!#7 N9021 P4998 SWAP 8 0xffffffff 0x3800029 Int BE Pri
!#7 N9023 P5000 LD 15 -1 Int BE Pri
!#7 N9024 P5001 BLD 0 -1 FP BE Pri
!#7 N9025 P5001 BLD 1 -1 FP BE Pri
!#7 N9026 P5002 LD 4 -1 Int BE Pri
!#7 N9027 P5003 LD 13 -1 Int LE Pri
!#7 N9028 P5001 BLD 0 -1 FP BE Pri
!#7 N9029 P5001 BLD 1 -1 FP BE Pri
!#7 N9030 P5002 LD 4 -1 Int BE Pri
!#7 N9031 P5003 LD 13 -1 Int LE Pri
!#7 N9032 P5004 LD 12 -1 Int BE Pri
!#7 N9033 P5005 QWLD 6 -1 NF FP BE Pri
!#7 N9034 P5005 QWLD 7 -1 NF FP BE Pri
!#7 N9035 P5006 LD 0 -1 Int BE Pri
!#7 N9036 P5007 LD 12 -1 Int BE Pri
!#7 N9037 P5008 LD 6 -1 Int BE Pri
!#7 N9038 P5007 LD 12 -1 Int BE Pri
!#7 N9039 P5008 LD 6 -1 Int BE Pri
!#7 N9040 P5009 LD 11 -1 FP BE Pri
!#7 N9041 P5009 LD 11 -1 FP BE Pri
!#7 N9042 P5010 BLD 6 -1 FP BE Pri
!#7 N9043 P5010 BLD 7 -1 FP BE Pri
!#7 N9047 P5014 BST 2 0x43000058 FP BE Pri
!#7 N9048 P5014 BST 3 0x43000059 FP BE Pri
!#7 N9049 P5014 BST 2 0x4300005a FP BE Pri
!#7 N9050 P5014 BST 3 0x4300005b FP BE Pri
!#7 N9052 P5016 QWLD 12 -1 NF FP BE Pri
!#7 N9053 P5016 QWLD 13 -1 NF FP BE Pri
!#7 N9055 P5016 QWLD 12 -1 NF FP BE Pri
!#7 N9056 P5016 QWLD 13 -1 NF FP BE Pri
!#7 N9057 P5017 LD 12 -1 NF FP BE Pri
!#7 N9058 P5017 LD 12 -1 NF FP BE Pri
!#7 N9060 P5019 DWLD 8 -1,0x0 Int BE Pri
!#7 N9061 P5019 CASX 8 -1,0x0 N9060 0x380002a Int BE Pri
!#7 N9063 P5019 DWLD 8 -1,0x0 Int BE Pri
!#7 N9064 P5019 CASX 8 -1,0x0 N9063 0x380002b Int BE Pri
!#7 N9065 P5020 QWLD 12 -1 FP BE Pri
!#7 N9066 P5020 QWLD 13 -1 FP BE Pri
!#7 N9067 P5020 QWLD 12 -1 FP BE Pri
!#7 N9068 P5020 QWLD 13 -1 FP BE Pri
!#7 N9069 P5021 QWLD 6 -1 FP BE Pri
!#7 N9070 P5021 QWLD 7 -1 FP BE Pri
!#7 N9071 P5021 QWLD 6 -1 FP BE Pri
!#7 N9072 P5021 QWLD 7 -1 FP BE Pri
!#7 N9075 P5024 QWST 8 0x4300005c FP BE Pri
!#7 N9076 P5024 QWST 9 0x4300005d FP BE Pri
!#7 N9077 P5025 LD 15 -1 Int BE Pri
!#7 N9078 P5026 LD 9 -1 Int BE Pri
!#7 N9079 P5025 LD 15 -1 Int BE Pri
!#7 N9080 P5026 LD 9 -1 Int BE Pri
!#7 N9081 P5027 LD 8 -1 FP BE Pri
!#7 N9082 P5028 SWAP 2 0xffffffff 0x380002c Int BE Pri
!#7 N9083 P5029 LD 14 -1 NF Fault Int BE Pri
!#7 N9084 P5027 LD 8 -1 FP BE Pri
!#7 N9085 P5028 SWAP 2 0xffffffff 0x380002d Int BE Pri
!#7 N9086 P5029 LD 14 -1 NF Fault Int BE Pri
!#7 N9087 P5030 DWLD 1 -1 Int BE Pri
!#7 N9088 P5031 LD 13 -1 Int BE Pri
!#7 N9089 P5030 DWLD 1 -1 Int BE Pri
!#7 N9090 P5031 LD 13 -1 Int BE Pri
!#7 N9093 P5033 LD 13 -1 FP BE Pri
!#7 N9094 P5033 LD 13 -1 FP BE Pri
!#7 N9095 P5034 DWLD 8 -1 Int BE Pri
!#7 N9097 P5036 LD 3 -1 Int BE Pri
!#7 N9098 P5037 LD 3 -1 FP BE Pri
!#7 N9099 P5038 LD 2 -1 Int BE Pri
!#7 N9100 P5039 LD 15 -1 NF Int BE Pri
!#7 N9101 P5037 LD 3 -1 FP BE Pri
!#7 N9102 P5038 LD 2 -1 Int BE Pri
!#7 N9103 P5039 LD 15 -1 NF Int BE Pri
!#7 N9104 P5040 LD 13 -1 NF Int LE Pri
!#7 N9105 P5041 LD 13 -1 Int BE Pri
!#7 N9107 P5043 LD 12 -1 FP BE Pri
!#7 N9110 P5046 LD 1 -1 Int BE Pri
!#7 N9111 P5047 QWST 12 0x4300005e FP BE Pri
!#7 N9112 P5047 QWST 13 0x4300005f FP BE Pri
!#7 N9113 P5048 LD 12 -1 Int BE Pri
!#7 N9114 P5049 DWLD 15 -1,0x0 Int BE Pri
!#7 N9115 P5049 CASX 15 -1,0x0 N9114 0x380002e Int BE Pri
!#7 N9117 P5051 LD 12 -1 FP BE Pri
!#7 N9118 P5052 BLD 4 -1 FP BE Pri
!#7 N9119 P5052 BLD 5 -1 FP BE Pri
!#7 N9120 P5053 LD 6 -1 Int BE Pri
!#7 N9121 P5054 LD 12 -1 Int BE Pri
!#7 N9122 P5055 LD 8 -1 FP BE Pri
!#7 N9124 P5057 LD 1 -1 FP BE Pri
!#7 N9125 P5057 LD 1 -1 FP BE Pri
!#7 N9126 P5058 LD 4 -1 FP BE Pri
!#7 N9128 P5060 DWLD 1 -1,0x0 Int BE Pri
!#7 N9129 P5060 CASX 1 -1,0x0 N9128 0x380002f Int BE Pri
!#7 N9130 P5060 DWLD 1 -1,0x0 Int BE Pri
!#7 N9131 P5060 CASX 1 -1,0x0 N9130 0x3800030 Int BE Pri
!#7 N9132 P5061 LD 7 -1 Int BE Pri
!#7 N9133 P5062 LD 0 -1 Int BE Pri
!#7 N9135 P5064 LD 5 -1 NF FP BE Pri
!#7 N9137 P5064 LD 5 -1 NF FP BE Pri
!#7 N9141 P5067 DWLD 12 -1,0x0 Int BE Pri
!#7 N9142 P5067 CASX 12 -1,0x0 N9141 0x3800031 Int BE Pri
!#7 N9143 P5067 DWLD 12 -1,0x0 Int BE Pri
!#7 N9144 P5067 CASX 12 -1,0x0 N9143 0x3800032 Int BE Pri
!#7 N9145 P5068 LD 12 -1 Int BE Pri
!#7 N9146 P5069 DWLD 13 -1,0x0 Int BE Pri
!#7 N9147 P5069 CASX 13 -1,0x0 N9146 0x3800033 Int BE Pri
!#7 N9148 P5070 LD 11 -1 Int BE Pri
!#7 N9150 P5072 ST 8 0x3800034 Int BE Pri
!#7 N9152 P5072 ST 8 0x3800035 Int BE Pri
!#7 N9153 P5073 DWLD 3 -1 FP BE Pri
!#7 N9154 P5073 DWLD 3 -1 FP BE Pri
!#7 N9155 P5074 DWLD 8 -1 Int BE Pri
!#7 N9156 P5075 LD 15 -1 Int BE Pri
!#7 N9157 P5074 DWLD 8 -1 Int BE Pri
!#7 N9158 P5075 LD 15 -1 Int BE Pri
!#7 N9159 P5076 QWST 12 0x43000060 FP BE Pri
!#7 N9160 P5076 QWST 13 0x43000061 FP BE Pri
!#7 N9161 P5077 LD 12 -1 FP BE Pri
!#7 N9162 P5078 LD 11 -1 Int BE Pri
!#7 N9163 P5079 SWAP 7 0xffffffff 0x3800036 Int BE Pri
!#7 N9164 P5078 LD 11 -1 Int BE Pri
!#7 N9165 P5079 SWAP 7 0xffffffff 0x3800037 Int BE Pri
!#7 N9166 P5080 LD 1 -1 Int BE Pri
!#7 N9167 P5081 LD 7 -1 NF Int BE Pri
!#7 N9172 P5084 LD 15 -1 Int BE Pri
!#7 N9173 P5085 LD 10 -1 Int BE Pri
!#7 N9174 P5084 LD 15 -1 Int BE Pri
!#7 N9175 P5085 LD 10 -1 Int BE Pri
!#7 N9176 P5086 LD 4 -1 NF Int BE Pri
!#7 N9177 P5087 LD 2 -1 Int BE Pri
!#7 N9178 P5086 LD 4 -1 NF Int BE Pri
!#7 N9179 P5087 LD 2 -1 Int BE Pri
!#7 N9180 P5088 LD 14 -1 FP BE Pri
!#7 N9181 P5089 BST 10 0x43000062 FP BE Pri
!#7 N9182 P5089 BST 11 0x43000063 FP BE Pri
!#7 N9183 P5090 DWST 6 0x43000064 FP BE Pri
!#7 N9185 P5090 DWST 6 0x43000065 FP BE Pri
!#7 N9187 P5092 QWLD 8 -1 FP BE Pri
!#7 N9188 P5092 QWLD 9 -1 FP BE Pri
!#7 N9190 P5092 QWLD 8 -1 FP BE Pri
!#7 N9191 P5092 QWLD 9 -1 FP BE Pri
!#7 N9193 P5094 DWST 9 0x3800038 Int BE Pri
!#7 N9194 P5095 BST 14 0x43000066 FP BE Pri
!#7 N9195 P5095 BST 15 0x43000067 FP BE Pri
!#7 N9198 P5097 SWAP 14 0xffffffff 0x3800039 Int BE Pri
!#7 N9199 P5098 LD 2 -1 Int BE Pri
!#7 N9200 P5099 ST 3 0x43000068 FP BE Pri
!#7 N9201 P5099 ST 3 0x43000069 FP BE Pri
!#7 N9202 P5100 LD 10 -1 Int BE Pri
!#7 N9203 P5101 QWST 8 0x4300006a FP BE Pri
!#7 N9204 P5101 QWST 9 0x4300006b FP BE Pri
!#7 N9205 P5102 LD 3 -1 Int BE Pri
!#7 N9206 P5103 LD 12 -1 NF FP BE Pri
!#7 N9210 P5106 LD 10 -1 Int BE Pri
!#7 N9211 P5106 CAS 10 -1 N9210 0x380003a Int BE Pri
!#7 N9213 P5106 LD 10 -1 Int BE Pri
!#7 N9214 P5106 CAS 10 -1 N9213 0x380003b Int BE Pri
!#7 N9216 P5108 LD 5 -1 FP BE Pri
!#7 N9217 P5109 BSTC 8 0x4300006c FP BE Pri
!#7 N9218 P5109 BSTC 9 0x4300006d FP BE Pri
!#7 N9219 P5108 LD 5 -1 FP BE Pri
!#7 N9220 P5109 BSTC 8 0x4300006e FP BE Pri
!#7 N9221 P5109 BSTC 9 0x4300006f FP BE Pri
!#7 N9223 P5111 DWLD 12 -1 Int BE Pri
!#7 N9224 P5112 LD 6 -1 Int BE Pri
!#7 N9227 P5115 LD 11 -1 Int BE Pri
!#7 N9228 P5116 LD 8 -1 Int BE Pri
!#7 N9230 P5115 LD 11 -1 Int BE Pri
!#7 N9231 P5116 LD 8 -1 Int BE Pri
!#7 N9232 P5117 LD 8 -1 NF FP BE Pri
!#7 N9233 P5117 LD 8 -1 NF FP BE Pri
!#7 N9234 P5118 LD 14 -1 NF FP BE Pri
!#7 N9235 P5119 LD 3 -1 FP BE Pri
!#7 N9236 P5120 LD 12 -1 FP BE Pri
!#7 N9237 P5121 LD 2 -1 FP BE Pri
!#7 N9239 P5123 BSTC 4 0x43000070 FP BE Pri
!#7 N9240 P5123 BSTC 5 0x43000071 FP BE Pri
!#7 N9241 P5123 BSTC 4 0x43000072 FP BE Pri
!#7 N9242 P5123 BSTC 5 0x43000073 FP BE Pri
!#7 N9243 P5124 LD 8 -1 Int BE Pri
!#7 N9244 P5125 LD 12 -1 FP BE Pri
!#7 N9245 P5126 LD 11 -1 Int BE Pri
!#7 N9246 P5124 LD 8 -1 Int BE Pri
!#7 N9247 P5125 LD 12 -1 FP BE Pri
!#7 N9248 P5126 LD 11 -1 Int BE Pri
!#7 N9249 P5127 LD 2 -1 NF Fault FP BE Pri
!#7 N9250 P5127 LD 2 -1 NF Fault FP BE Pri
!#7 N9251 P5128 LD 9 -1 FP BE Pri
!#7 N9252 P5129 DWLD 1 -1 Int BE Pri
!#7 N9253 P5130 LD 8 -1 Int BE Pri
!#7 N9254 P5131 BST 6 0x43000074 FP BE Pri
!#7 N9255 P5131 BST 7 0x43000075 FP BE Pri
!#7 N9256 P5132 LD 6 -1 Int BE Pri
!#7 N9257 P5133 LD 0 -1 Int BE Pri
!#7 N9258 P5134 DWLD 11 -1,0x0 Int BE Pri
!#7 N9259 P5134 CASX 11 -1,0x0 N9258 0x380003c Int BE Pri
!#7 N9260 P5135 DWLD 6 -1 FP BE Pri
!#7 N9261 P5136 DWST 7 0x43000076 FP BE Pri
!#7 N9262 P5136 DWST 7 0x43000077 FP BE Pri
!#7 N9263 P5137 DWST 4 0x380003d Int BE Pri
!#7 N9264 P5137 DWST 4 0x380003e Int BE Pri
!#7 N9265 P5138 LD 8 -1 FP BE Pri
!#7 N9266 P5138 LD 8 -1 FP BE Pri
!#7 N9271 P5141 BSTC 0 0x43000078 FP BE Pri
!#7 N9272 P5141 BSTC 1 0x43000079 FP BE Pri
!#7 N9273 P5142 LD 3 -1 Int BE Pri
!#7 N9274 P5143 LD 8 -1 Int BE Pri
!#7 N9277 P5145 LD 10 -1 Int BE Pri
!#7 N9278 P5146 LD 12 -1 Int BE Pri
!#7 N9279 P5145 LD 10 -1 Int BE Pri
!#7 N9280 P5146 LD 12 -1 Int BE Pri
!#7 N9287 P5151 BLD 2 -1 FP BE Pri
!#7 N9288 P5151 BLD 3 -1 FP BE Pri
!#7 N9289 P5151 BLD 2 -1 FP BE Pri
!#7 N9290 P5151 BLD 3 -1 FP BE Pri
!#7 N9291 P5152 DWLD 11 -1 Int BE Pri
!#7 N9293 P5154 LD 15 -1 Int BE Pri
!#7 N9294 P5155 DWLD 6 -1 FP BE Pri
!#7 N9295 P5156 LD 5 -1 FP BE Pri
!#7 N9296 P5155 DWLD 6 -1 FP BE Pri
!#7 N9297 P5156 LD 5 -1 FP BE Pri
!#7 N9299 P5158 LD 2 -1 Int BE Pri
!#7 N9300 P5159 LD 9 -1 Int BE Pri
!#7 N9301 P5160 LD 10 -1 FP BE Pri
!#7 N9302 P5160 LD 10 -1 FP BE Pri
!#7 N9303 P5161 LD 3 -1 NF FP BE Pri
!#7 N9304 P5162 DWLD 15 -1 Int BE Pri
!#7 N9305 P5163 LD 7 -1 NF Int BE Pri
!#7 N9306 P5161 LD 3 -1 NF FP BE Pri
!#7 N9307 P5162 DWLD 15 -1 Int BE Pri
!#7 N9308 P5163 LD 7 -1 NF Int BE Pri
!#7 N9309 P5164 LD 7 -1 Int BE Pri
!#7 N9310 P5165 LD 3 -1 NF FP BE Pri
!#7 N9311 P5166 LD 3 -1 Int BE Pri
!#7 N9312 P5167 DWLD 2 -1,0x0 Int BE Pri
!#7 N9313 P5167 CASX 2 -1,0x0 N9312 0x380003f Int BE Pri
!#7 N9314 P5168 SWAP 2 0xffffffff 0x3800040 Int BE Pri
!#7 N9315 P5169 LD 13 -1 Int BE Pri
!#7 N9316 P5170 QWLD 14 -1 FP BE Pri
!#7 N9317 P5170 QWLD 15 -1 FP BE Pri
!#7 N9318 P5171 LD 0 -1 Int BE Pri
!#7 N9319 P5172 LD 2 -1 Int BE Pri
!#7 N9320 P5170 QWLD 14 -1 FP BE Pri
!#7 N9321 P5170 QWLD 15 -1 FP BE Pri
!#7 N9322 P5171 LD 0 -1 Int BE Pri
!#7 N9323 P5172 LD 2 -1 Int BE Pri
!#7 N9324 P5173 BST 6 0x4300007a FP BE Pri
!#7 N9325 P5173 BST 7 0x4300007b FP BE Pri
!#7 N9326 P5174 LD 13 -1 Int BE Pri
!#7 N9327 P5174 CAS 13 -1 N9326 0x3800041 Int BE Pri
!#7 N9328 P5175 LD 11 -1 FP BE Pri
!#7 N9329 P5175 LD 11 -1 FP BE Pri
!#7 N9331 P5177 QWST 2 0x4300007c FP BE Pri
!#7 N9332 P5177 QWST 3 0x4300007d FP BE Pri
!#7 N9334 P5177 QWST 2 0x4300007e FP BE Pri
!#7 N9335 P5177 QWST 3 0x4300007f FP BE Pri
!#7 N9336 P5178 DWST 11 0x3800042 Int BE Pri
!#7 N9337 P5179 LD 15 -1 Int BE Pri
!#7 N9338 P5180 LD 0 -1 Int BE Pri
!#7 N9339 P5181 DWLD 1 -1,0x0 Int BE Pri
!#7 N9340 P5181 CASX 1 -1,0x0 N9339 0x3800043 Int BE Pri
!#7 N9341 P5182 LD 9 -1 FP BE Pri
!#7 N9344 P5185 BLD 10 -1 FP BE Pri
!#7 N9345 P5185 BLD 11 -1 FP BE Pri
!#7 N9346 P5186 LD 9 -1 Int BE Pri
!#7 N9347 P5187 LD 11 -1 Int BE Pri
!#7 N9350 P5190 LD 8 -1 Int BE Pri
!#7 N9351 P5191 LD 8 -1 NF Int BE Pri
!#7 N9352 P5192 QWLD 12 -1 FP BE Pri
!#7 N9353 P5192 QWLD 13 -1 FP BE Pri
!#7 N9354 P5193 LD 9 -1 FP BE Pri
!#7 N9355 P5192 QWLD 12 -1 FP BE Pri
!#7 N9356 P5192 QWLD 13 -1 FP BE Pri
!#7 N9357 P5193 LD 9 -1 FP BE Pri
!#7 N9358 P5194 LD 13 -1 FP BE Pri
!#7 N9359 P5195 DWLD 6 -1,0x0 Int BE Pri
!#7 N9360 P5195 CASX 6 -1,0x0 N9359 0x3800044 Int BE Pri
!#7 N9361 P5196 SWAP 8 0xffffffff 0x3800045 Int BE Pri
!#7 N9363 P5198 LD 9 -1 Int BE Pri
!#7 N9364 P5196 SWAP 8 0xffffffff 0x3800046 Int BE Pri
!#7 N9366 P5198 LD 9 -1 Int BE Pri
!#7 N9369 P5200 LD 11 -1 Int BE Pri
!#7 N9370 P5200 CAS 11 -1 N9369 0x3800047 Int BE Pri
!#7 N9372 P5202 LD 1 -1 FP BE Pri
!#7 N9373 P5203 SWAP 1 0xffffffff 0x3800048 Int BE Pri
!#7 N9374 P5204 LD 2 -1 Int BE Pri
!#7 N9375 P5203 SWAP 1 0xffffffff 0x3800049 Int BE Pri
!#7 N9376 P5204 LD 2 -1 Int BE Pri
!#7 N9377 P5205 LD 1 -1 Int BE Pri
!#7 N9378 P5206 LD 7 -1 Int BE Pri
!#7 N9379 P5207 LD 4 -1 Int BE Pri
!#7 N9380 P5208 LD 1 -1 NF Int BE Pri
!#7 N9381 P5207 LD 4 -1 Int BE Pri
!#7 N9382 P5208 LD 1 -1 NF Int BE Pri
!#7 N9384 P5210 SWAP 7 0xffffffff 0x380004a Int BE Pri
!#7 N9385 P5211 LD 13 -1 Int BE Pri
!#7 N9387 P5210 SWAP 7 0xffffffff 0x380004b Int BE Pri
!#7 N9388 P5211 LD 13 -1 Int BE Pri
!#7 N9389 P5212 LD 12 -1 Int BE Pri
!#7 N9391 P5214 LD 4 -1 Int BE Pri
!#7 N9392 P5212 LD 12 -1 Int BE Pri
!#7 N9394 P5214 LD 4 -1 Int BE Pri
!#7 N9395 P5215 LD 10 -1 FP BE Pri
!#7 N9397 P5217 DWLD 9 -1,0x0 Int BE Pri
!#7 N9398 P5217 CASX 9 -1,0x0 N9397 0x380004c Int BE Pri
!#7 N9399 P5218 LD 10 -1 FP BE Pri
!#7 N9400 P5218 LD 10 -1 FP BE Pri
!#7 N9403 P5220 LD 2 -1 Int BE Pri
!#7 N9404 P5220 CAS 2 -1 N9403 0x380004d Int BE Pri
!#7 N9407 P5223 BLD 8 -1 FP BE Pri
!#7 N9408 P5223 BLD 9 -1 FP BE Pri
!#7 N9409 P5223 BLD 8 -1 FP BE Pri
!#7 N9410 P5223 BLD 9 -1 FP BE Pri
!#7 N9411 P5224 SWAP 9 0xffffffff 0x380004e Int BE Pri
!#7 N9412 P5225 LD 7 -1 Int BE Pri
!#7 N9413 P5226 QWLD 12 -1 FP BE Pri
!#7 N9414 P5226 QWLD 13 -1 FP BE Pri
!#7 N9415 P5227 LD 10 -1 NF Int BE Pri
!#7 N9416 P5228 LD 9 -1 Int BE Pri
!#7 N9417 P5227 LD 10 -1 NF Int BE Pri
!#7 N9418 P5228 LD 9 -1 Int BE Pri
!#7 N9420 P5230 LD 4 -1 FP BE Pri
!#7 N9421 P5231 LD 14 -1 Int BE Pri
!#7 N9423 P5233 LD 10 -1 Int BE Pri
!#7 N9424 P5231 LD 14 -1 Int BE Pri
!#7 N9426 P5233 LD 10 -1 Int BE Pri
!#7 N9427 P5234 LD 0 -1 NF Int BE Pri
!#7 N9428 P5235 LD 7 -1 Int BE Pri
!#7 N9430 P5237 ST 6 0x380004f Int BE Pri
!#7 N9432 P5239 QWLD 0 -1 FP BE Pri
!#7 N9433 P5239 QWLD 1 -1 FP BE Pri
!#7 N9434 P5240 LD 6 -1 FP BE Pri
!#7 N9435 P5241 BLD 8 -1 FP BE Pri
!#7 N9436 P5241 BLD 9 -1 FP BE Pri
!#7 N9437 P5242 DWLD 5 -1,0x0 Int BE Pri
!#7 N9438 P5242 CASX 5 -1,0x0 N9437 0x3800050 Int BE Pri
!#7 N9439 P5241 BLD 8 -1 FP BE Pri
!#7 N9440 P5241 BLD 9 -1 FP BE Pri
!#7 N9441 P5242 DWLD 5 -1,0x0 Int BE Pri
!#7 N9442 P5242 CASX 5 -1,0x0 N9441 0x3800051 Int BE Pri
!#7 N9443 P5243 SWAP 13 0xffffffff 0x3800052 Int BE Pri
!#7 N9444 P5244 LD 4 -1 Int BE Pri
!#7 N9445 P5245 LD 15 -1 Int BE Pri
!#7 N9446 P5246 LD 4 -1 Int BE Pri
!#7 N9447 P5247 LD 4 -1 Int BE Pri
!#7 N9448 P5248 BSTC 10 0x43000080 FP BE Pri
!#7 N9449 P5248 BSTC 11 0x43000081 FP BE Pri
!#7 N9450 P5249 LD 0 -1 Int BE Pri
!#7 N9452 P5251 LD 6 -1 Int BE Pri
!#7 N9453 P5252 LD 13 -1 Int BE Pri
!#7 N9455 P5251 LD 6 -1 Int BE Pri
!#7 N9456 P5252 LD 13 -1 Int BE Pri
!#7 N9457 P5253 DWST 3 0x3800053 Int BE Pri
!#7 N9458 P5254 BSTC 4 0x43000082 FP BE Pri
!#7 N9459 P5254 BSTC 5 0x43000083 FP BE Pri
!#7 N9460 P5253 DWST 3 0x3800054 Int BE Pri
!#7 N9461 P5254 BSTC 4 0x43000084 FP BE Pri
!#7 N9462 P5254 BSTC 5 0x43000085 FP BE Pri
!#7 N9463 P5255 LD 5 -1 Int BE Pri
!#7 N9464 P5255 CAS 5 -1 N9463 0x3800055 Int BE Pri
!#7 N9465 P5256 LD 9 -1 FP BE Pri
!#7 N9466 P5255 LD 5 -1 Int BE Pri
!#7 N9467 P5255 CAS 5 -1 N9466 0x3800056 Int BE Pri
!#7 N9468 P5256 LD 9 -1 FP BE Pri
!#7 N9470 P5258 LD 2 -1 Int BE Pri
!#7 N9471 P5259 LD 14 -1 Int BE Pri
!#7 N9472 P5258 LD 2 -1 Int BE Pri
!#7 N9473 P5259 LD 14 -1 Int BE Pri
!#7 N9474 P5260 DWLD 6 -1 Int BE Pri
!#7 N9476 P5262 LD 4 -1 NF Int BE Pri
!#7 N9477 P5260 DWLD 6 -1 Int BE Pri
!#7 N9479 P5262 LD 4 -1 NF Int BE Pri
!#7 N9480 P5263 LD 5 -1 NF Int BE Pri
!#7 N9481 P5264 LD 12 -1 Int BE Pri
!#7 N9483 P5266 LD 4 -1 FP BE Pri
!#7 N9485 P5268 QWLD 4 -1 FP BE Pri
!#7 N9486 P5268 QWLD 5 -1 FP BE Pri
!#7 N9488 P5270 LD 8 -1 Int BE Pri
!#7 N9489 P5271 LD 8 -1 Int BE Pri
!#7 N9490 P5270 LD 8 -1 Int BE Pri
!#7 N9491 P5271 LD 8 -1 Int BE Pri
!#7 N9492 P5272 LD 8 -1 FP BE Pri
!#7 N9493 P5273 LD 4 -1 FP BE Pri
!#7 N9494 P5272 LD 8 -1 FP BE Pri
!#7 N9495 P5273 LD 4 -1 FP BE Pri
!#7 N9496 P5274 LD 11 -1 Int BE Pri
!#7 N9497 P5275 LD 8 -1 FP BE Pri
!#7 N9498 P5276 LD 12 -1 Int BE Pri
!#7 N9499 P5274 LD 11 -1 Int BE Pri
!#7 N9500 P5275 LD 8 -1 FP BE Pri
!#7 N9501 P5276 LD 12 -1 Int BE Pri
!#7 N9502 P5277 LD 8 -1 Int BE Pri
!#7 N9503 P5278 LD 15 -1 Int BE Pri
!#7 N9504 P5277 LD 8 -1 Int BE Pri
!#7 N9505 P5278 LD 15 -1 Int BE Pri
!#7 N9506 P5279 SWAP 13 0xffffffff 0x3800057 Int BE Pri
!#7 N9507 P5280 ST 5 0x43000086 FP BE Pri
!#7 N9508 P5281 LD 4 -1 NF Int BE Pri
!#7 N9509 P5279 SWAP 13 0xffffffff 0x3800058 Int BE Pri
!#7 N9510 P5280 ST 5 0x43000087 FP BE Pri
!#7 N9511 P5281 LD 4 -1 NF Int BE Pri
!#7 N9512 P5282 QWLD 4 -1 FP BE Pri
!#7 N9513 P5282 QWLD 5 -1 FP BE Pri
!#7 N9514 P5283 DWLD 1 -1,0x0 Int BE Pri
!#7 N9515 P5283 CASX 1 -1,0x0 N9514 0x3800059 Int BE Pri
!#7 N9516 P5282 QWLD 4 -1 FP BE Pri
!#7 N9517 P5282 QWLD 5 -1 FP BE Pri
!#7 N9518 P5283 DWLD 1 -1,0x0 Int BE Pri
!#7 N9519 P5283 CASX 1 -1,0x0 N9518 0x380005a Int BE Pri
!#7 N9520 P5284 LD 10 -1 Int BE Pri
!#7 N9522 P5286 LD 10 -1 NF Int BE Pri
!#7 N9523 P5284 LD 10 -1 Int BE Pri
!#7 N9525 P5286 LD 10 -1 NF Int BE Pri
!#7 N9527 P5288 LD 8 -1 Int BE Pri
!#7 N9528 P5289 LD 0 -1 Int BE Pri
!#7 N9529 P5290 LD 13 -1 FP BE Pri
!#7 N9530 P5291 QWST 2 0x43000088 FP BE Pri
!#7 N9531 P5291 QWST 3 0x43000089 FP BE Pri
!#7 N9532 P5292 QWLD 14 -1 FP BE Pri
!#7 N9533 P5292 QWLD 15 -1 FP BE Pri
!#7 N9535 P5294 BSTC 12 0x4300008a FP BE Pri
!#7 N9536 P5294 BSTC 13 0x4300008b FP BE Pri
!#7 N9538 P5294 BSTC 12 0x4300008c FP BE Pri
!#7 N9539 P5294 BSTC 13 0x4300008d FP BE Pri
!#7 N9541 P5296 LD 4 -1 Int BE Pri
!#7 N9542 P5297 LD 4 -1 Int BE Pri
!#7 N9544 P5296 LD 4 -1 Int BE Pri
!#7 N9545 P5297 LD 4 -1 Int BE Pri
!#7 N9546 P5298 QWLD 14 -1 FP BE Pri
!#7 N9547 P5298 QWLD 15 -1 FP BE Pri
!#7 N9548 P5299 DWLD 2 -1,0x0 Int BE Pri
!#7 N9549 P5299 CASX 2 -1,0x0 N9548 0x380005b Int BE Pri
!#7 N9550 P5298 QWLD 14 -1 FP BE Pri
!#7 N9551 P5298 QWLD 15 -1 FP BE Pri
!#7 N9552 P5299 DWLD 2 -1,0x0 Int BE Pri
!#7 N9553 P5299 CASX 2 -1,0x0 N9552 0x380005c Int BE Pri
!#7 N9554 P5300 LD 14 -1 Int BE Pri
!#7 N9555 P5300 CAS 14 -1 N9554 0x380005d Int BE Pri
!#7 N9557 P5300 LD 14 -1 Int BE Pri
!#7 N9558 P5300 CAS 14 -1 N9557 0x380005e Int BE Pri
!#7 N9560 P5302 LD 9 -1 FP BE Pri
!#7 N9561 P5303 LD 13 -1 Int BE Pri
!#7 N9562 P5304 LD 9 -1 Int BE Pri
!#7 N9563 P5302 LD 9 -1 FP BE Pri
!#7 N9564 P5303 LD 13 -1 Int BE Pri
!#7 N9565 P5304 LD 9 -1 Int BE Pri
!#7 N9566 P5305 LD 10 -1 Int BE Pri
!#7 N9567 P5306 LD 5 -1 Int BE Pri
!#7 N9568 P5305 LD 10 -1 Int BE Pri
!#7 N9569 P5306 LD 5 -1 Int BE Pri
!#7 N9570 P5307 LD 13 -1 Int BE Pri
!#7 N9572 P5309 LD 2 -1 Int BE Pri
!#7 N9573 P5310 LD 2 -1 Int BE Pri
!#7 N9574 P5311 LD 0 -1 Int BE Pri
!#7 N9575 P5310 LD 2 -1 Int BE Pri
!#7 N9576 P5311 LD 0 -1 Int BE Pri
!#7 N9577 P5312 LD 5 -1 Int BE Pri
!#7 N9578 P5313 LD 10 -1 Int BE Pri
!#7 N9579 P5312 LD 5 -1 Int BE Pri
!#7 N9580 P5313 LD 10 -1 Int BE Pri
!#7 N9582 P5315 SWAP 6 0xffffffff 0x380005f Int BE Pri
!#7 N9583 P5316 LD 5 -1 Int BE Pri
!#7 N9585 P5315 SWAP 6 0xffffffff 0x3800060 Int BE Pri
!#7 N9586 P5316 LD 5 -1 Int BE Pri
!#7 N9587 P5317 BST 8 0x4300008e FP BE Pri
!#7 N9588 P5317 BST 9 0x4300008f FP BE Pri
!#7 N9590 P5317 BST 8 0x43000090 FP BE Pri
!#7 N9591 P5317 BST 9 0x43000091 FP BE Pri
!#7 N9593 P5319 BLD 0 -1 FP BE Pri
!#7 N9594 P5319 BLD 1 -1 FP BE Pri
!#7 N9595 P5320 SWAP 1 0xffffffff 0x3800061 Int BE Pri
!#7 N9596 P5321 LD 9 -1 Int BE Pri
!#7 N9597 P5322 LD 13 -1 FP BE Pri
!#7 N9598 P5323 LD 13 -1 FP BE Pri
!#7 N9599 P5324 QWST 8 0x43000092 FP BE Pri
!#7 N9600 P5324 QWST 9 0x43000093 FP BE Pri
!#7 N9601 P5324 QWST 8 0x43000094 FP BE Pri
!#7 N9602 P5324 QWST 9 0x43000095 FP BE Pri
!#7 N9603 P5325 ST 8 0x3800062 Int BE Pri
!#7 N9604 P5326 DWST 4 0x43000096 FP BE Pri
!#7 N9605 P5325 ST 8 0x3800063 Int BE Pri
!#7 N9606 P5326 DWST 4 0x43000097 FP BE Pri
!#7 N9607 P5327 LD 6 -1 Int BE Pri
!#7 N9608 P5328 LD 9 -1 Int BE Pri
!#7 N9609 P5327 LD 6 -1 Int BE Pri
!#7 N9610 P5328 LD 9 -1 Int BE Pri
!#7 N9611 P5329 BST 10 0x43000098 FP BE Pri
!#7 N9612 P5329 BST 11 0x43000099 FP BE Pri
!#7 N9613 P5330 LD 15 -1 Int BE Pri
!#7 N9614 P5330 CAS 15 -1 N9613 0x3800064 Int BE Pri
!#7 N9615 P5331 DWST 3 0x4300009a FP BE Pri
!#7 N9616 P5330 LD 15 -1 Int BE Pri
!#7 N9617 P5330 CAS 15 -1 N9616 0x3800065 Int BE Pri
!#7 N9618 P5331 DWST 3 0x4300009b FP BE Pri
!#7 N9619 P5332 MEMBAR
!#7 N9620 P5333 DWLD 9 -1 Int BE Pri
!#7 N9622 P5335 LD 0 -1 Int BE Pri
!#7 N9623 P5336 LD 13 -1 NF Fault Int BE Pri
!#7 N9624 P5337 LD 15 -1 Int BE Pri
!#7 N9627 P5339 LD 14 -1 Int BE Pri
!#7 N9628 P5340 LD 3 -1 Int BE Pri
!#7 N9629 P5341 LD 11 -1 Int BE Pri
!#7 N9630 P5342 LD 4 -1 Int BE Pri
!#7 N9631 P5341 LD 11 -1 Int BE Pri
!#7 N9632 P5342 LD 4 -1 Int BE Pri
!#7 N9633 P5343 LD 9 -1 FP BE Pri
!#7 N9635 P5345 LD 1 -1 FP BE Pri
!#7 N9636 P5345 LD 1 -1 FP BE Pri
!#7 N9637 P5346 LD 9 -1 Int BE Pri
!#7 N9638 P5347 LD 4 -1 Int BE Pri
!#7 N9639 P5346 LD 9 -1 Int BE Pri
!#7 N9640 P5347 LD 4 -1 Int BE Pri
!#7 N9643 P5349 MEMBAR

