/*
* ========== Copyright Header Begin ==========================================
* 
* OpenSPARC T2 Processor File: n2_8t_bstbld_10.s
* Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
* 4150 Network Circle, Santa Clara, California 95054, U.S.A.
*
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; version 2 of the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*
* For the avoidance of doubt, and except that if any non-GPL license 
* choice is available it will apply instead, Sun elects to use only 
* the General Public License version 2 (GPLv2) at this time for any 
* software where a choice of GPL license versions is made 
* available with the language indicating that GPLv2 or any later version 
* may be used, or where a choice of which version of the GPL is applied is 
* otherwise unspecified. 
*
* Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
* CA 95054 USA or visit www.sun.com if you need additional information or 
* have any questions. 
*
* 
* ========== Copyright Header End ============================================
*/
#define N_CPUS  8
#define REGION_MAPPED_SIZE_RTL 8192
#define REGION_SIZE_RTL (8 * 1024)
#define RESULTS_BUF_SIZE_PER_CPU_RTL 1024
#define PRIVATE_DATA_AREA_PER_CPU_RTL 64

#define ALIGN_PAGE_8K .align 8192
#define ALIGN_PAGE_64K .align 65536
#define ALIGN_PAGE_512K .align 524288
#define ALIGN_PAGE_4M .align 4194304
#define USER_PAGE_CUSTOM_MAP

SECTION .MY_HYP_SEC TEXT_VA = 0x1100150000
attr_text {
        Name=.MY_HYP_SEC,
        hypervisor
	}
.text
.global intr0x60_custom_trap
intr0x60_custom_trap:
	ldxa	[%g0] 0x72, %g2;
	ldxa	[%g0] 0x74, %g1;	
	retry;

.global intr0x190_custom_trap
intr0x190_custom_trap:

.global intr0x190_custom_trap
intr0x190_custom_trap:

#ifdef SJM
! programming the JBI - not quite rrugho
!=====================
!setx 0x0000000006040012, %g1, %g2
!setx 0x8503000010, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000100, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000000, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000400, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000108, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000101, %g1, %g2
!setx 0x9800000008, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000408, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000110, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000202, %g1, %g2
!setx 0x9800000010, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000410, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000118, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000303, %g1, %g2
!setx 0x9800000018, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000418, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000120, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000404, %g1, %g2
!setx 0x9800000020, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000420, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000128, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000505, %g1, %g2
!setx 0x9800000028, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000428, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000130, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000606, %g1, %g2
!setx 0x9800000030, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000430, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000138, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000707, %g1, %g2
!setx 0x9800000038, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000438, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000140, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000808, %g1, %g2
!setx 0x9800000040, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000440, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000148, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000909, %g1, %g2
!setx 0x9800000048, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000448, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000150, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000a0a, %g1, %g2
!setx 0x9800000050, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000450, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000158, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000b0b, %g1, %g2
!setx 0x9800000058, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000458, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000160, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000c0c, %g1, %g2
!setx 0x9800000060, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000460, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000168, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000d0d, %g1, %g2
!setx 0x9800000068, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000468, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000170, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000e0e, %g1, %g2
!setx 0x9800000070, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000470, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000003, %g1, %g2
!setx 0x8500000178, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000f0f, %g1, %g2
!setx 0x9800000078, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000478, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x000000000000007f, %g1, %g2
!setx 0x8503000008, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000001010, %g1, %g2
!setx 0x9800000080, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000480, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000001111, %g1, %g2
!setx 0x9800000088, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000488, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000c00, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000e20, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000e28, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9300000e38, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000008, %g1, %g2
!setx 0x8503000018, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x9800000828, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000000, %g1, %g2
!setx 0x8503000028, %g1, %g3
!stx %g2, [%g3]
!!=====================
!setx 0x0000000000000001, %g1, %g2
!setx 0x8503000020, %g1, %g3
!stx %g2, [%g3]
!!=====================

/***********************************************************************
  Disable L2 Cache Visibility Port
 ***********************************************************************/

setx 0x0000000000000000, %g1, %g2
setx 0x9800001800, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001820, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001828, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001830, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001838, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800001840, %g1, %g3
stx %g2, [%g3]
!=====================

/***********************************************************************
  Disable IOBridge Visibility Ports
 ***********************************************************************/

setx 0x0000000000000000, %g1, %g2
setx 0x9800001000, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002000, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002008, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002100, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002140, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002160, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002180, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x98000021a0, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002148, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002168, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002188, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x98000021a8, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002150, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002170, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x9800002190, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000000000000000, %g1, %g2
setx 0x98000021b0, %g1, %g3
stx %g2, [%g3]
!=====================

/***********************************************************************
 Configure jbi controller
 ***********************************************************************/

setx 0x03fb303e00000001, %g1, %g2
setx 0x8000000000, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x000000007033fe0f, %g1, %g2
setx 0x8000000008, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x0000003fc0000000, %g1, %g2
setx 0x80000100a0, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0x00000000fe0003ff, %g1, %g2
setx 0x8000004100, %g1, %g3
stx %g2, [%g3]
!=====================

/***********************************************************************
 IOSYNC cycles to start sjm
 ***********************************************************************/

setx 0xdeadbeefdeadbeef, %g1, %g2
setx 0xcf00beef00, %g1, %g3
stx %g2, [%g3]
!=====================
setx 0xdeadbeefdeadbeef, %g1, %g2
setx 0xef00beef00, %g1, %g3
stx %g2, [%g3]

!=============================
done;

#else
#ifdef  DC_ON_OFF
	
	and	%i0, 0x1, %i0
	brz	%i0, on
	nop

        mov     0xd, %i0
	ba	finish_dc_on_off
        stxa    %l0, [%g0] 0x45         /* turn D-cache off */
on:        
        mov     0xf, %i0
        stxa    %i0, [%g0] 0x45         /* turn D-cache back on */

finish_dc_on_off:
	done

#else
	stxa	%i0, [%g0] 0x73;	
	done;
#endif
#endif
!============================================================================

#define ENABLE_T0_Fp_exception_ieee_754_0x21
#define ENABLE_T0_Fp_exception_other_0x22
#define ENABLE_T0_Fp_disabled_0x20
#define ENABLE_T0_Illegal_instruction_0x10
#define ENABLE_T1_Illegal_instruction_0x10
#define ENABLE_HT0_Illegal_instruction_0x10
#define ENABLE_HT1_Illegal_instruction_0x10
#define ENABLE_T0_Clean_Window_0x24
#define MAIN_PAGE_NUCLEUS_ALSO
#define MAIN_PAGE_HV_ALSO
#define MAIN_PAGE_VA_IS_RA_ALSO




#define H_T0_Trap_Instruction_0
#define My_T0_Trap_Instruction_0	\
	ta      0x90;			\
	done;

#define H_HT0_HTrap_Instruction_0 intr0x190_custom_trap
#ifdef SJM
#define My_HT0_HTrap_Instruction_0 \
	setx intr0x190_custom_trap, %g1, %g2; \
	jmp %g2; nop
#else
#define My_HT0_HTrap_Instruction_0      \
	stxa    %i0, [%g0] 0x73;        \
	done;
#endif

#define H_HT0_Interrupt_0x60 intr0x60_custom_trap
#define My_HT0_Interrupt_0x60   \
        ldxa    [%g0] 0x72, %g2;        \
        ldxa    [%g0] 0x74, %g1;        \
        retry;
#define H_HT0_Trap_Instruction_5
#define My_HT0_Trap_Instruction_5   \
        ldxa [%g0 + %g0]0x45, %g1;     \
		membar #Sync;  \
        xor  %g1, 19, %g1;   \
        stxa %g1, [%g0 + %g0]0x45;  \
		wrpr %g0, 0x200, %pstate;
        done;

#ifndef THREAD_COUNT
#define THREAD_COUNT 8
#endif

#ifndef THREAD_STRIDE
#define THREAD_STRIDE 1
#endif
#define SKIP_TRAPCHECK
! force ta T_RD_THID to return thread%8 (aka 0-7)
#define PORTABLE_CORE
#include "hboot.s"


!try later:
!	stxa    %l6, [$8] (0x22 | ($2 & 0x9)) ! ASI is randomly set
!===========
define(BST_INIT, `
	add     $6, ($7 & 0xfff0), $8	! 4-byte align the offset
	stxa    %l6, [$8] 0x22		! ASI is randomly set
')

!try later:
!ldda    [$8] (0x22 | ($2 & 0x9)), %l6 ! ASI is randomly set
!===========
define(BLD_INIT, `
        add     $6, ($7 & 0xfff0), $8 	! 4-byte align the offset
        ldda    [$8] 0x22, %l6 		! ASI is randomly set
')

define(CHECK_PROC_ID,`
check_cpu_id: 

	wr	%g0, 0x4, %fprs         /* make sure fef is 1 */
	mov 	THREAD_STRIDE, %l2
	th_fork(thread,%l0)

thread_0:
#ifdef SJM
	ta 	0x30
#endif
	mov 	0, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
	
thread_1:
	mov 	1, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_2:
	mov 	2, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_3:
	mov 	3, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_4:
	mov 	4, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_5:
	mov 	5, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_6:
	mov 	6, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_7:
	mov 	7, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_8:
	mov 	8, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_9:
	mov 	9, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_10:
	mov 	10, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_11:
	mov 	11, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_12:
	mov 	12, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_13:
	mov 	13, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_14:
	mov 	14, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_15:
	mov 	15, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_16:
	mov 	16, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_17:
	mov 	17, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_18:
	mov 	18, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_19:
	mov 	19, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_20:
	mov 	20, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_21:
	mov 	21, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_22:
	mov 	22, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_23:
	mov 	23, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_24:
	mov 	24, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_25:
	mov 	25, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_26:
	mov 	26, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
	
thread_27:
	mov 	27, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_28:
	mov 	28, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_29:
	mov 	29, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_30:
	mov 	30, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop
	
thread_31:
	mov 	31, %g1 
        udivx 	%g1, %l2, %g1
	ba	entry_point; nop

thread_32:
    mov     32, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_33:
    mov     33, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_34:
    mov     34, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_35:
    mov     35, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_36:
    mov     36, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_37:
    mov     37, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_38:
    mov     38, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_39:
    mov     39, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_40:
    mov     40, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_41:
    mov     41, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_42:
    mov     42, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_43:
    mov     43, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_44:
    mov     44, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_45:
    mov     45, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_46:
    mov     46, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_47:
    mov     47, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_48:
    mov     48, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_49:
    mov     49, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_50:
    mov     50, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_51:
    mov     51, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_52:
    mov     52, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_53:
    mov     53, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_54:
    mov     54, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_55:
    mov     55, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_56:
    mov     56, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_57:
    mov     57, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_58:
    mov     58, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_59:
    mov     59, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_60:
    mov     60, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_61:
    mov     61, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_62:
    mov     62, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

thread_63:
    mov     63, %g1
        udivx   %g1, %l2, %g1
    ba  entry_point; nop

entry_point:
#ifdef RTGPRIV
	ta	T_CHANGE_PRIV
#endif
	
')
! --- Common Macro Definitions ---
!
! macros will be instantiated with these arguments
! macro_name(P#, rand#, my_cpu#, PA_val, VA_val, VA_reg, VA_offset, \
!            tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3)
!
! P# - Pid, just in case one needs unique number
! rand# - random number
! my_cpu# - CPU id
! PA_val - shared memory physisal address value
! VA_val - shared memory virtual address value
! VA_reg - register containing VA region base address
! VA_offset - VA_reg + VA_offset will give correct VA address value
! tmp_reg0-tmp_reg3 - integer registers for arbitrary use within the macro
!                     tmp_reg0 & tmp_reg1 are even-odd register pair
!
! VA_val may be incorrect since VA will be determined at compile time by assembler
! and may not available at diag generation time, but VA_reg+VA_offset is valid
!
! ex. SAMPLE(1, 1249, 0, 0x43400100, 0x100, %i1, 0x100, %l6, %l7, %o5, %l3)
!
! Sample macro 1:
!  load unsigned byte from the given shared addr into tmp_reg1
!  the given shared addr is 4-byte aligned and we will randomly
!  pick one byte from the 4 bytes.
! 
! define(SAMPLE, `
!        ldub   [$6+$7+($2 mod 4)], $8
! ')
!
! Can also use C-like macro definition format.
!
! Sample macro 2:
!   issue an "ldda" instruction to the randomly picked shared location
!   (aligned it to 16-byte boundary first) with a random ASI value among
!   0x22, 0x23, 0x2a, and 0x2b (utilizing the provided "rand" value).
!
! #define BLD_INIT(Pid, rand, my_cpu, PA_val, \
!                 VA_val, VA_reg, VA_offset, \
!                 tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
!   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
!   ldda [tmp_reg2] (0x22 | (rand & 0x9)), tmp_reg0;
!
! ---

! Macro NOPTRAIN
! Train of NOPs

#define NOPTRAIN(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
		nop;\
		nop;\
		nop;\
		nop;


! Macro STTRAIN4
! Train of total 4 of UW stores.
! Note: doesn't use shared addresses

#define STTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 5120, tmp_reg1; \
        add %i0, tmp_reg1, tmp_reg1; \
        set rand, tmp_reg2; \
        stw tmp_reg2, [tmp_reg1]; \
        stw tmp_reg2, [tmp_reg1+4]; \
        stw tmp_reg2, [tmp_reg1+8]; \
        stw tmp_reg2, [tmp_reg1+16];

! Macro STTRAIN8
! Train of total 8 of UW stores 

#define STTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 5120, tmp_reg1; \
        add %i0, tmp_reg1, tmp_reg1; \
        set rand, tmp_reg2; \
        add tmp_reg2, rand % 4096, tmp_reg3; \
        stw tmp_reg2, [tmp_reg1]; \
        stw tmp_reg2, [tmp_reg1+4]; \
        stw tmp_reg2, [tmp_reg1+8]; \
        stw tmp_reg2, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1+4]; \
        stw tmp_reg3, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1]; \
        stw tmp_reg3, [tmp_reg1+8];
 
! Macro LDTRAIN4
! Train of total 4 of UW Loads
! Note the values of those loads inside the macro will not be analized,
! even though the accesses are [possibly] made to the shared locations

#define LDTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        ld [%i0], tmp_reg1; \
        ld [%i1+4], tmp_reg1; \
        ld [%i2+8], tmp_reg1; \
        ld [%i3+12], tmp_reg1;

! Macro LDTRAIN8

#define LDTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        ld [%i3], tmp_reg1; \
        ld [%i2+4], tmp_reg1; \
        ld [%i1+8], tmp_reg2; \
        ld [%i0+12], tmp_reg2; \
        ld [%i3+4], tmp_reg3; \
        ld [%i2], tmp_reg3; \
        ld [%i1+12], tmp_reg4; \
        ld [%i0+8], tmp_reg4;

! Macro PREFETCHTRAIN4

#define PREFETCHTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        prefetch [%i0+4], 0; \
        prefetch [%i1+12], 0; \
        prefetch [%i2+8], 0; \
        prefetch [%i3], 0;

! Macro PREFETCHTRAIN8

#define PREFETCHTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        prefetch [%i3], 0; \
        prefetch [%i2+4], 0; \
        prefetch [%i1+8], 0; \
        prefetch [%i0+12], 0; \
        prefetch [%i3+4], 1; \
        prefetch [%i2], 1; \
        prefetch [%i1+12], 1; \
        prefetch [%i0+8], 1;

! Macro CASTRAIN4
! This is an interesting macro that will probably create the write congessions
! access to the shared locations (offsets from bases have to be adjusted)
! the values of the locations are not changed, so it should not affect analysis

#define CASTRAIN4(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 128, tmp_reg1;\
        add %i0, tmp_reg1, tmp_reg1;\
        set 256, tmp_reg2;\
        add %i1, tmp_reg2, tmp_reg2;\
        ld [tmp_reg1], tmp_reg3;\
        ld [tmp_reg2], tmp_reg4;\
        cas [tmp_reg1], tmp_reg3, tmp_reg3;\
        cas [tmp_reg1], tmp_reg3, tmp_reg3;\
        cas [tmp_reg2], tmp_reg4, tmp_reg4;\
        cas [tmp_reg2], tmp_reg4, tmp_reg4;

! CASTRAIN8
! yet another flavor of cas train theme that actually always use shared locations
! given by the specified instance arguments for the first 4 cases
! and then follows then with another 4 to a randomized offset

#define CASTRAIN8(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
  add VA_reg, VA_offset, tmp_reg1;\
  add VA_reg, (rand&0x0ffc), tmp_reg2;\
  ld [tmp_reg1], tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  cas [tmp_reg1], tmp_reg3, tmp_reg3;\
  ld  [tmp_reg2], tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;\
  cas [tmp_reg2], tmp_reg4, tmp_reg4;

! Macro ST_BR_ANLD_CAS
! this is meant to reproduce NG6025
! the scenario is the anulled load in the delay slot of the branch is 
! not wiped completely, which creates false RAW hazard, and the following cas
! is getting screwed
! WARNING: there is a store to the %i0+128, which can potentially be a shared 
! location. When using this macro, make sure that the vicinity of offset 128 in
! region 0 is not used

#define ST_BR_ANLD_CAS(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set 128, tmp_reg1;\
        add %i0, tmp_reg1, tmp_reg1;\
        set rand, tmp_reg3;\
        stw tmp_reg3, [tmp_reg1];\
        ba,a 1;\
        cas [tmp_reg1], tmp_reg3, tmp_reg4;

#define ASI_BLOCK(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
        setx 0x060, tmp_reg1, tmp_reg2; \
        stxa %g0, [tmp_reg2] 0x38;

! Macro SELF_MODIFY
! do a read-unmodify-write at address pc + random[0..0x80]
! this is targetted to catch bugs due to sharing/modification
! of data between D$ and I$. (e.g. Niagara1, Bug #6372)
! 1. 0x80 chosen arbitrarily, is another number better
! 2. should we include an iflush ?
! 3. WT.MACRO.SELF_MODIFY should be given a small non-0 weight by default
! 4. Possible variation: a macro which only does a load
!    from the instruction stream instead of a load-store. 
!    (Niagara1 bug #6372 did not involve stores to instruction
!    stream, just sharing of unmodified data between I$ and D$.)
! 5. this macro needs text segment to be writable. On system runs,
!    this is achieved by using a special map file for the linker.
! - sgh, 25 may 04

#define SELF_MODIFY(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
	rd    %pc, tmp_reg0; \
	ld    [ tmp_reg0 + (rand & 0x7c)], tmp_reg1; \
	st    tmp_reg1, [ tmp_reg0 + (rand & 0x7c)] 

#define ASI_BLOCK(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
        setx 0x060, tmp_reg1, tmp_reg2; \
        stxa %g0, [tmp_reg2] 0x38;


#define ASI_BLOCK_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
        setx 0x8559e06ff33bad10, tmp_reg1, tmp_reg2; \
        stxa %g0, [tmp_reg2] 0x80;
	
#define PREFETCH_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg1, tmp_reg2; \
        prefetch [tmp_reg2], 0; \
        prefetch [tmp_reg2+4], 1; \
        prefetch [tmp_reg2+8], 2; \
        prefetch [tmp_reg2+12], 3; \
        prefetch [tmp_reg2+4], 4; \
        prefetch [tmp_reg2], 5; \
        prefetch [tmp_reg2+12], 6; \
        prefetch [tmp_reg2+8], 7;

#define LOAD_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg1, tmp_reg2; \
        ld [tmp_reg2], tmp_reg1; \
        ld [tmp_reg2+4], tmp_reg1; \
        ld [tmp_reg2+8], tmp_reg1; \
        ld [tmp_reg2+12], tmp_reg1;



#define STORE_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg2, tmp_reg1; \
        set rand, tmp_reg2; \
        add tmp_reg2, rand % 4096, tmp_reg3; \
        stw tmp_reg2, [tmp_reg1]; \
        stw tmp_reg2, [tmp_reg1+4]; \
        stw tmp_reg2, [tmp_reg1+8]; \
        stw tmp_reg2, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1+4]; \
        stw tmp_reg3, [tmp_reg1+12]; \
        stw tmp_reg3, [tmp_reg1]; \
        stw tmp_reg3, [tmp_reg1+8];	

#define CAS_VA_HOLE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        setx 0x8559e06ff33bad10, tmp_reg3, tmp_reg1; \
        setx 0x8559e06ff33bad10, tmp_reg3, tmp_reg2; \
        add tmp_reg2, rand % 4096, tmp_reg3; \
        cas [tmp_reg1], tmp_reg3, tmp_reg3;\
        cas [tmp_reg2], tmp_reg4, tmp_reg4;

#define IDC_FLIP(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        ta 0xb5; \
		ta T_CHANGE_NONHPRIV;

! this macro produce ldda/stda to 
! ASI_BLOCK_AS_IF_USER_PRIMARY            0x16
! ASI_BLOCK_AS_IF_USER_SECONDARY          0x17
! ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE     0x1e
! ASI_BLOCK_AS_IF_USER_SECONDARY_LITTLE   0x1f
!! hardcode for now since illegal asi not working in RS
#define BLD_16(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x16, tmp_reg0;
#define BLD_17(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x17, tmp_reg0;
#define BLD_1e(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x1e, tmp_reg0;
#define BLD_1f(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   ldda [tmp_reg3]0x1f, tmp_reg0;

#define BST_16(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x16;
#define BST_17(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x17;
#define BST_1e(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x1e;
#define BST_1f(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ta      T_CHANGE_PRIV;\
   ta      T_CHANGE_HPRIV;\
   stda tmp_reg0, [tmp_reg3]0x1f;

#define BLD_INIT_2(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ldda [tmp_reg3] (0x27 | (rand & 0xf)), tmp_reg0;
#define BST_INIT_2(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   stda tmp_reg0, [tmp_reg3] (0x27 | (rand & 0xf));
#define BLD_INIT_E(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   ldda [tmp_reg3] (0xe2 | (rand & 0xb)), tmp_reg0;
#define BST_INIT_E(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0xfff0), tmp_reg3; \
   stda tmp_reg0, [tmp_reg3] (0xe2 | (rand & 0xb));
#define PREFETCHA(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg0, tmp_reg1, tmp_reg2, tmp_reg3) \
   add  VA_reg, (VA_offset & 0x00ff), tmp_reg3; \
   prefetch [%i1], (rand & 0x1f); \
   prefetch [%i1 + ((rand >> 5) & 0x1f)], ((rand >> 5) & 0x1f); \
   prefetcha [%i1]((rand >> 5) & 0x1f), (0x0 | ((rand >> 5) & 0x1f));
#define STBYTE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        add  VA_reg, (VA_offset & 0xff00), tmp_reg1; \
        set rand, tmp_reg2; \
        stb tmp_reg2, [tmp_reg1+(rand & 0x5f)];
#define LDBYTE(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        add  VA_reg, (VA_offset & 0xff00), tmp_reg1; \
        ldub [tmp_reg1+(rand & 0x5f)], tmp_reg2;
#define STBYTE1(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        add  VA_reg, (VA_offset & 0xff00), tmp_reg1;\
		set 5200, tmp_reg2; \
		add tmp_reg2, tmp_reg1, tmp_reg1; \
		set rand, tmp_reg2; \
		stb tmp_reg2, [tmp_reg1+(rand & 0x5f)];
#define STINT(Pid, rand, my_cpu, PA_val, VA_val, VA_reg, VA_offset, tmp_reg1, tmp_reg2, tmp_reg3, tmp_reg4) \
        set rand, tmp_reg1; \
        stha  tmp_reg1,[%g0+%g0](0x73); \
        stda tmp_reg1, [%g0+%g0](0x73);
define(EN_INTERRUPTS,`
nop
')

define(DIS_INTERRUPTS,`
nop
')

define(CHECK_DISPATCH_STATUS,`
nop
')

define(CHECK_RECEIVE_STATUS,`
nop
')

define(WRITE_INTR_DATA_REGS,`
nop
')

define(INTR_SET_DISPATCH_VECTOR,`
add      %g0, $3, $4
sllx     $4, 8,  $5      ! DEST ID
add      %g0, $2, $4      ! VECTOR NUMBER
or       $5, $4, $5
mov      %i0, $4
mov      $5, %i0
ta       0x30
mov      $4, %i0
')

define(DSPCH_INTERRUPT,`
nop
')

#define REGION0_ALIAS1_O 0x0
#define REGION1_ALIAS1_O 0x2000
#define REGION2_ALIAS1_O 0x4000
#define REGION3_ALIAS1_O 0x6000
#define REGION4_ALIAS1_O 0x8000
#define REGION5_ALIAS1_O 0xa000
#define REGION6_ALIAS1_O 0xc000
#define REGION7_ALIAS1_O 0xe000
#define REPLACEMENT0_ALIAS1_O 0x10000
#define REGION0_ALIAS0_O 0x20000
#define REGION1_ALIAS0_O 0x22000
#define REGION2_ALIAS0_O 0x24000
#define REGION3_ALIAS0_O 0x26000
#define REGION4_ALIAS0_O 0x28000
#define REGION5_ALIAS0_O 0x2a000
#define REGION6_ALIAS0_O 0x2c000
#define REGION7_ALIAS0_O 0x2e000
#define REPLACEMENT0_ALIAS0_O 0x30000


#define USER_PAGE_CUSTOM_MAP
SECTION .MAIN TEXT_VA=0x1000000
attr_text {
	Name = .MAIN,
	VA=0x1000000,
	RA=0x130000000,
	PA=ra2pa(0x130000000,0),
part_0_ctx_nonzero_tsb_config_1,
 TTE_EP=1,
	TTE_G=1,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=0
	}

attr_text {
	Name = .MAIN,
	VA=0x1000000,
	RA=0x130000000,
	PA=ra2pa(0x130000000,0),
part_0_ctx_nonzero_tsb_config_0,
 TTE_EP=1,
	TTE_G=1,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

SECTION tsotool_unshared_data DATA_VA=0x21400000
attr_data {
	Name = tsotool_unshared_data,
	VA=0x21400000,
	RA=0x21400000,
	PA=ra2pa(0x21400000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=1,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region0_alias1_4 DATA_VA=0x6000000
attr_data {
	Name = region0_alias1_4,
	VA=0x6000000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias1_4 DATA_VA=0x6002000
attr_data {
	Name = region1_alias1_4,
	VA=0x6002000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias1_4 DATA_VA=0x6004000
attr_data {
	Name = region2_alias1_4,
	VA=0x6004000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias1_4 DATA_VA=0x6006000
attr_data {
	Name = region3_alias1_4,
	VA=0x6006000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias1_4 DATA_VA=0x6008000
attr_data {
	Name = region4_alias1_4,
	VA=0x6008000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias1_4 DATA_VA=0x600a000
attr_data {
	Name = region5_alias1_4,
	VA=0x600a000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias1_4 DATA_VA=0x600c000
attr_data {
	Name = region6_alias1_4,
	VA=0x600c000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias1_4 DATA_VA=0x600e000
attr_data {
	Name = region7_alias1_4,
	VA=0x600e000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias1_4 DATA_VA=0x6010000
attr_data {
	Name = replacement0_alias1_4,
	VA=0x6010000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias1_4 DATA_VA=0x6012000
attr_data {
	Name = replacement1_alias1_4,
	VA=0x6012000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias1_4 DATA_VA=0x6014000
attr_data {
	Name = replacement2_alias1_4,
	VA=0x6014000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias1_4 DATA_VA=0x6016000
attr_data {
	Name = replacement3_alias1_4,
	VA=0x6016000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias1_4 DATA_VA=0x6018000
attr_data {
	Name = replacement4_alias1_4,
	VA=0x6018000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias1_4 DATA_VA=0x601a000
attr_data {
	Name = replacement5_alias1_4,
	VA=0x601a000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias1_4 DATA_VA=0x601c000
attr_data {
	Name = replacement6_alias1_4,
	VA=0x601c000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias1_4 DATA_VA=0x601e000
attr_data {
	Name = replacement7_alias1_4,
	VA=0x601e000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias0 DATA_VA=0x6020000
attr_data {
	Name = region0_alias0,
	VA=0x6020000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region1_alias0 DATA_VA=0x6022000
attr_data {
	Name = region1_alias0,
	VA=0x6022000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region2_alias0 DATA_VA=0x6024000
attr_data {
	Name = region2_alias0,
	VA=0x6024000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region3_alias0 DATA_VA=0x6026000
attr_data {
	Name = region3_alias0,
	VA=0x6026000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region4_alias0 DATA_VA=0x6028000
attr_data {
	Name = region4_alias0,
	VA=0x6028000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region5_alias0 DATA_VA=0x602a000
attr_data {
	Name = region5_alias0,
	VA=0x602a000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region6_alias0 DATA_VA=0x602c000
attr_data {
	Name = region6_alias0,
	VA=0x602c000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION region7_alias0 DATA_VA=0x602e000
attr_data {
	Name = region7_alias0,
	VA=0x602e000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement0_alias0 DATA_VA=0x6030000
attr_data {
	Name = replacement0_alias0,
	VA=0x6030000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement1_alias0 DATA_VA=0x6032000
attr_data {
	Name = replacement1_alias0,
	VA=0x6032000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement2_alias0 DATA_VA=0x6034000
attr_data {
	Name = replacement2_alias0,
	VA=0x6034000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement3_alias0 DATA_VA=0x6036000
attr_data {
	Name = replacement3_alias0,
	VA=0x6036000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement4_alias0 DATA_VA=0x6038000
attr_data {
	Name = replacement4_alias0,
	VA=0x6038000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement5_alias0 DATA_VA=0x603a000
attr_data {
	Name = replacement5_alias0,
	VA=0x603a000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement6_alias0 DATA_VA=0x603c000
attr_data {
	Name = replacement6_alias0,
	VA=0x603c000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION replacement7_alias0 DATA_VA=0x603e000
attr_data {
	Name = replacement7_alias0,
	VA=0x603e000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1
	}

SECTION non_fault_area_4 DATA_VA=0x0
attr_data {
	Name = non_fault_area_4,
	VA=0x0,
	RA=0x47002000,
	PA=ra2pa(0x47002000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=PCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=1,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=1,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias1_8 DATA_VA=0x6000000
attr_data {
	Name = region0_alias1_8,
	VA=0x6000000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias1_8 DATA_VA=0x6002000
attr_data {
	Name = region1_alias1_8,
	VA=0x6002000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias1_8 DATA_VA=0x6004000
attr_data {
	Name = region2_alias1_8,
	VA=0x6004000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias1_8 DATA_VA=0x6006000
attr_data {
	Name = region3_alias1_8,
	VA=0x6006000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias1_8 DATA_VA=0x6008000
attr_data {
	Name = region4_alias1_8,
	VA=0x6008000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias1_8 DATA_VA=0x600a000
attr_data {
	Name = region5_alias1_8,
	VA=0x600a000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias1_8 DATA_VA=0x600c000
attr_data {
	Name = region6_alias1_8,
	VA=0x600c000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias1_8 DATA_VA=0x600e000
attr_data {
	Name = region7_alias1_8,
	VA=0x600e000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias1_8 DATA_VA=0x6010000
attr_data {
	Name = replacement0_alias1_8,
	VA=0x6010000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias1_8 DATA_VA=0x6012000
attr_data {
	Name = replacement1_alias1_8,
	VA=0x6012000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias1_8 DATA_VA=0x6014000
attr_data {
	Name = replacement2_alias1_8,
	VA=0x6014000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias1_8 DATA_VA=0x6016000
attr_data {
	Name = replacement3_alias1_8,
	VA=0x6016000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias1_8 DATA_VA=0x6018000
attr_data {
	Name = replacement4_alias1_8,
	VA=0x6018000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias1_8 DATA_VA=0x601a000
attr_data {
	Name = replacement5_alias1_8,
	VA=0x601a000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias1_8 DATA_VA=0x601c000
attr_data {
	Name = replacement6_alias1_8,
	VA=0x601c000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias1_8 DATA_VA=0x601e000
attr_data {
	Name = replacement7_alias1_8,
	VA=0x601e000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias0_8 DATA_VA=0x6020000
attr_data {
	Name = region0_alias0_8,
	VA=0x6020000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias0_8 DATA_VA=0x6022000
attr_data {
	Name = region1_alias0_8,
	VA=0x6022000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias0_8 DATA_VA=0x6024000
attr_data {
	Name = region2_alias0_8,
	VA=0x6024000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias0_8 DATA_VA=0x6026000
attr_data {
	Name = region3_alias0_8,
	VA=0x6026000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias0_8 DATA_VA=0x6028000
attr_data {
	Name = region4_alias0_8,
	VA=0x6028000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias0_8 DATA_VA=0x602a000
attr_data {
	Name = region5_alias0_8,
	VA=0x602a000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias0_8 DATA_VA=0x602c000
attr_data {
	Name = region6_alias0_8,
	VA=0x602c000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias0_8 DATA_VA=0x602e000
attr_data {
	Name = region7_alias0_8,
	VA=0x602e000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias0_8 DATA_VA=0x6030000
attr_data {
	Name = replacement0_alias0_8,
	VA=0x6030000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias0_8 DATA_VA=0x6032000
attr_data {
	Name = replacement1_alias0_8,
	VA=0x6032000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias0_8 DATA_VA=0x6034000
attr_data {
	Name = replacement2_alias0_8,
	VA=0x6034000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias0_8 DATA_VA=0x6036000
attr_data {
	Name = replacement3_alias0_8,
	VA=0x6036000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias0_8 DATA_VA=0x6038000
attr_data {
	Name = replacement4_alias0_8,
	VA=0x6038000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias0_8 DATA_VA=0x603a000
attr_data {
	Name = replacement5_alias0_8,
	VA=0x603a000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias0_8 DATA_VA=0x603c000
attr_data {
	Name = replacement6_alias0_8,
	VA=0x603c000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias0_8 DATA_VA=0x603e000
attr_data {
	Name = replacement7_alias0_8,
	VA=0x603e000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION non_fault_area_8 DATA_VA=0x0
attr_data {
	Name = non_fault_area_8,
	VA=0x0,
	RA=0x47002000,
	PA=ra2pa(0x47002000,0),
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G=0,
	TTE_Context=SCONTEXT,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=1,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=1,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias1_0 DATA_VA=0x6000000
attr_data {
	Name = region0_alias1_0,
	VA=0x6000000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias1_0 DATA_VA=0x6002000
attr_data {
	Name = region1_alias1_0,
	VA=0x6002000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias1_0 DATA_VA=0x6004000
attr_data {
	Name = region2_alias1_0,
	VA=0x6004000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias1_0 DATA_VA=0x6006000
attr_data {
	Name = region3_alias1_0,
	VA=0x6006000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias1_0 DATA_VA=0x6008000
attr_data {
	Name = region4_alias1_0,
	VA=0x6008000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias1_0 DATA_VA=0x600a000
attr_data {
	Name = region5_alias1_0,
	VA=0x600a000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias1_0 DATA_VA=0x600c000
attr_data {
	Name = region6_alias1_0,
	VA=0x600c000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias1_0 DATA_VA=0x600e000
attr_data {
	Name = region7_alias1_0,
	VA=0x600e000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias1_0 DATA_VA=0x6010000
attr_data {
	Name = replacement0_alias1_0,
	VA=0x6010000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias1_0 DATA_VA=0x6012000
attr_data {
	Name = replacement1_alias1_0,
	VA=0x6012000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias1_0 DATA_VA=0x6014000
attr_data {
	Name = replacement2_alias1_0,
	VA=0x6014000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias1_0 DATA_VA=0x6016000
attr_data {
	Name = replacement3_alias1_0,
	VA=0x6016000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias1_0 DATA_VA=0x6018000
attr_data {
	Name = replacement4_alias1_0,
	VA=0x6018000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias1_0 DATA_VA=0x601a000
attr_data {
	Name = replacement5_alias1_0,
	VA=0x601a000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias1_0 DATA_VA=0x601c000
attr_data {
	Name = replacement6_alias1_0,
	VA=0x601c000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias1_0 DATA_VA=0x601e000
attr_data {
	Name = replacement7_alias1_0,
	VA=0x601e000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region0_alias0_0 DATA_VA=0x6020000
attr_data {
	Name = region0_alias0_0,
	VA=0x6020000,
	RA=0x43000000,
	PA=ra2pa(0x43000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=0,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region1_alias0_0 DATA_VA=0x6022000
attr_data {
	Name = region1_alias0_0,
	VA=0x6022000,
	RA=0x43800000,
	PA=ra2pa(0x43800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region2_alias0_0 DATA_VA=0x6024000
attr_data {
	Name = region2_alias0_0,
	VA=0x6024000,
	RA=0x44000000,
	PA=ra2pa(0x44000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region3_alias0_0 DATA_VA=0x6026000
attr_data {
	Name = region3_alias0_0,
	VA=0x6026000,
	RA=0x44800000,
	PA=ra2pa(0x44800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region4_alias0_0 DATA_VA=0x6028000
attr_data {
	Name = region4_alias0_0,
	VA=0x6028000,
	RA=0x45000000,
	PA=ra2pa(0x45000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region5_alias0_0 DATA_VA=0x602a000
attr_data {
	Name = region5_alias0_0,
	VA=0x602a000,
	RA=0x45800000,
	PA=ra2pa(0x45800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region6_alias0_0 DATA_VA=0x602c000
attr_data {
	Name = region6_alias0_0,
	VA=0x602c000,
	RA=0x46000000,
	PA=ra2pa(0x46000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION region7_alias0_0 DATA_VA=0x602e000
attr_data {
	Name = region7_alias0_0,
	VA=0x602e000,
	RA=0x46800000,
	PA=ra2pa(0x46800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement0_alias0_0 DATA_VA=0x6030000
attr_data {
	Name = replacement0_alias0_0,
	VA=0x6030000,
	RA=0x47000000,
	PA=ra2pa(0x47000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement1_alias0_0 DATA_VA=0x6032000
attr_data {
	Name = replacement1_alias0_0,
	VA=0x6032000,
	RA=0x47800000,
	PA=ra2pa(0x47800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement2_alias0_0 DATA_VA=0x6034000
attr_data {
	Name = replacement2_alias0_0,
	VA=0x6034000,
	RA=0x48000000,
	PA=ra2pa(0x48000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement3_alias0_0 DATA_VA=0x6036000
attr_data {
	Name = replacement3_alias0_0,
	VA=0x6036000,
	RA=0x48800000,
	PA=ra2pa(0x48800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement4_alias0_0 DATA_VA=0x6038000
attr_data {
	Name = replacement4_alias0_0,
	VA=0x6038000,
	RA=0x49000000,
	PA=ra2pa(0x49000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement5_alias0_0 DATA_VA=0x603a000
attr_data {
	Name = replacement5_alias0_0,
	VA=0x603a000,
	RA=0x49800000,
	PA=ra2pa(0x49800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement6_alias0_0 DATA_VA=0x603c000
attr_data {
	Name = replacement6_alias0_0,
	VA=0x603c000,
	RA=0x4a000000,
	PA=ra2pa(0x4a000000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024

SECTION replacement7_alias0_0 DATA_VA=0x603e000
attr_data {
	Name = replacement7_alias0_0,
	VA=0x603e000,
	RA=0x4a800000,
	PA=ra2pa(0x4a800000,0),
part_0_ctx_zero_tsb_config_2,
	TTE_G=0,
	TTE_Context=0,
	TTE_V=1,
	TTE_Size=0,
	TTE_SIZE_PTR=0,
	TTE_NFO=0,
	TTE_IE=0,
	TTE_Soft2=0,
	TTE_Diag=0,
	TTE_Soft=0,
	TTE_L=0,
	TTE_CP=1,
	TTE_CV=1,
	TTE_E=0,
	TTE_P=0,
	TTE_W=1,
	tsbonly
	}

.data
.skip 1024


!------------------------------------------------------------------------

SECTION tsotool_unshared_data
.global tsotool_unshared_data_start
.global res_buf_fp_p_0
.global res_buf_int_p_0
.global private_data_p0
.global stack_top_p0:
.global res_buf_fp_p_1
.global res_buf_int_p_1
.global private_data_p1
.global stack_top_p1:
.global res_buf_fp_p_2
.global res_buf_int_p_2
.global private_data_p2
.global stack_top_p2:
.global res_buf_fp_p_3
.global res_buf_int_p_3
.global private_data_p3
.global stack_top_p3:
.global res_buf_fp_p_4
.global res_buf_int_p_4
.global private_data_p4
.global stack_top_p4:
.global res_buf_fp_p_5
.global res_buf_int_p_5
.global private_data_p5
.global stack_top_p5:
.global res_buf_fp_p_6
.global res_buf_int_p_6
.global private_data_p6
.global stack_top_p6:
.global res_buf_fp_p_7
.global res_buf_int_p_7
.global private_data_p7
.global stack_top_p7:
.data
ALIGN_PAGE_512K
tsotool_unshared_data_start:
!-- label names of res_buf must match with extract_loads_m64.pl --
.align 64 ! for self bcopy()
res_buf_fp_p_0:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_0:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_1:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_1:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_2:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_2:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_3:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_3:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_4:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_4:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_5:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_5:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_6:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_6:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_fp_p_7:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
.align 64 ! for self bcopy()
res_buf_int_p_7:
	.skip RESULTS_BUF_SIZE_PER_CPU_RTL/2
private_data_p0:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p1:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p2:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p3:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p4:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p5:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p6:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
private_data_p7:
	.skip PRIVATE_DATA_AREA_PER_CPU_RTL
stack_top_p0:
	.skip 2048
stack_top_p1:
	.skip 2048
stack_top_p2:
	.skip 2048
stack_top_p3:
	.skip 2048
stack_top_p4:
	.skip 2048
stack_top_p5:
	.skip 2048
stack_top_p6:
	.skip 2048
stack_top_p7:
	.skip 2048
tsotool_unshared_data_end:
ALIGN_PAGE_512K
! to prevent VAs from running over from this section into shared regions

!------------------------------------------------------------------------

.seg "data"
! 8 shared memory regions, 1 alias(es) each (Alias 0 is normal VA)


SECTION region0_alias0
.global REGION0_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION0_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION0_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region1_alias0
.global REGION1_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION1_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION1_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region2_alias0
.global REGION2_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION2_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION2_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region3_alias0
.global REGION3_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION3_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION3_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region4_alias0
.global REGION4_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION4_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION4_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region5_alias0
.global REGION5_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION5_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION5_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region6_alias0
.global REGION6_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION6_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION6_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION region7_alias0
.global REGION7_ALIAS0_START
.data
ALIGN_PAGE_8K
REGION7_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REGION7_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement0_alias0
.global REPLACEMENT0_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT0_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT0_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement1_alias0
.global REPLACEMENT1_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT1_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT1_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement2_alias0
.global REPLACEMENT2_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT2_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT2_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement3_alias0
.global REPLACEMENT3_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT3_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT3_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement4_alias0
.global REPLACEMENT4_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT4_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT4_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement5_alias0
.global REPLACEMENT5_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT5_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT5_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement6_alias0
.global REPLACEMENT6_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT6_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT6_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL


SECTION replacement7_alias0
.global REPLACEMENT7_ALIAS0_START
.data
ALIGN_PAGE_8K
REPLACEMENT7_ALIAS0_START:
	.skip REGION_MAPPED_SIZE_RTL
REPLACEMENT7_ALIAS0_END:
	.skip REGION_SIZE_RTL-REGION_MAPPED_SIZE_RTL

SECTION .MAIN
.global local_trap_handlers_start
.global local_trap_handlers_end.global extern_interrupt_handler
.text
ALIGN_PAGE_8K
local_trap_handlers_start:

.align 64
extern_interrupt_handler:
stxa  %g0, [%g0]ASI_INTR_RECEIVE
retry

local_trap_handlers_end:

SECTION .MAIN
.global main
.global tsotool_text_start
.global irepl_text_start
.text
ba user_text_start
nop
ALIGN_PAGE_64K
irepl_text_start:
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
	jmpl %g1+8, %g1
	nop
	.skip 24
ALIGN_PAGE_64K
user_text_start:
ba main
nop
user_text_end:

ALIGN_PAGE_64K
tsotool_text_start:
main:
	mov     0, %o0
	mov     0, %o1
	CHECK_PROC_ID
! at this point, g1 should have CPU id (0, 1, 2, ...)
	set     REGION0_ALIAS0_START, %o0	! shared address 0
	set     REGION1_ALIAS0_START, %o1	! shared address 1
	cmp     %g1, 0x7
	be      setup_p7
	nop
	cmp     %g1, 0x6
	be      setup_p6
	nop
	cmp     %g1, 0x5
	be      setup_p5
	nop
	cmp     %g1, 0x4
	be      setup_p4
	nop
	cmp     %g1, 0x3
	be      setup_p3
	nop
	cmp     %g1, 0x2
	be      setup_p2
	nop
	cmp     %g1, 0x1
	be      setup_p1
	nop
	cmp     %g1, 0x0
	be      setup_p0
	nop
	EXIT_BAD   ! Should never reach here
	nop

setup_p0:
	setx    stack_top_p0, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_0, %g1, %o4
	setx    private_data_p0, %g1, %o5
	setx    func0, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p1:
	setx    stack_top_p1, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_1, %g1, %o4
	setx    private_data_p1, %g1, %o5
	setx    func1, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p2:
	setx    stack_top_p2, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_2, %g1, %o4
	setx    private_data_p2, %g1, %o5
	setx    func2, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p3:
	setx    stack_top_p3, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_3, %g1, %o4
	setx    private_data_p3, %g1, %o5
	setx    func3, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p4:
	setx    stack_top_p4, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_4, %g1, %o4
	setx    private_data_p4, %g1, %o5
	setx    func4, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p5:
	setx    stack_top_p5, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_5, %g1, %o4
	setx    private_data_p5, %g1, %o5
	setx    func5, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p6:
	setx    stack_top_p6, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_6, %g1, %o4
	setx    private_data_p6, %g1, %o5
	setx    func6, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop

setup_p7:
	setx    stack_top_p7, %g1, %l1
	add     %l1, 1024, %sp
	setx    res_buf_fp_p_7, %g1, %o4
	setx    private_data_p7, %g1, %o5
	setx    func7, %g1, %l4
	call    %l4
	nop
	EXIT_GOOD
	nop
#define    NO_REAL_CPUS_MINUS_1    7

!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func0:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l6
or    %l6, %lo(0xdeadbee0), %l6
stw   %l6, [%i5]
sethi %hi(0xdeadbee1), %l6
or    %l6, %lo(0xdeadbee1), %l6
stw   %l6, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x00deade1), %l6
or    %l6, %lo(0x00deade1), %l6
stw %l6, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x1), %l4
or    %l4, %lo(0x1), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x3f800001), %l6
or    %l6, %lo(0x3f800001), %l6
stw %l6, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x34000000), %l6
or    %l6, %lo(0x34000000), %l6
stw %l6, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x3f5a^4
sethi %hi(0x3f5a), %l0
or    %l0, %lo(0x3f5a), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES0: ! Test instruction sequence for ISTREAM 0 begins

P1: !_REPLACEMENT [23] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_0_0:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P2: !_ST [33] (maybe <- 0x3f800001) (FP)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P3: !_LD [8] (FP)
ld [%i1 + 0], %f0
! 1 addresses covered

P4: !_REPLACEMENT [3] (Int) (Branch target of P360)
sethi %hi(0x2000), %l3
ld [%i3+16], %l7
st %l7, [%i3+16]
add %i3, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
ba P5
nop

TARGET360:
ba RET360
nop


P5: !_REPLACEMENT [1] (Int)
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P6: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET6
nop
RET6:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P7: !_BST [9] (maybe <- 0x3f800002) (FP) (Branch target of P671)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P8
nop

TARGET671:
ba RET671
nop


P8: !_MEMBAR (FP)
membar #StoreLoad

P9: !_ST [7] (maybe <- 0x1) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P10: !_MEMBAR (FP)

P11: !_BST [9] (maybe <- 0x3f800004) (FP) (Branch target of P573)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P12
nop

TARGET573:
ba RET573
nop


P12: !_MEMBAR (FP) (Branch target of P515)
membar #StoreLoad
ba P13
nop

TARGET515:
ba RET515
nop


P13: !_IDC_FLIP [16] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(13, 4234, 0, 0x44800010, 0x10, %i3, 0x10, %l6, %l7, %o5, %l3)

P14: !_MEMBAR (FP) (Branch target of P471)
ba P15
nop

TARGET471:
ba RET471
nop


P15: !_BST [17] (maybe <- 0x3f800006) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P16: !_MEMBAR (FP)
membar #StoreLoad

P17: !_LD [32] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 256], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P18: !_ST [1] (maybe <- 0x3f800007) (FP) (Branch target of P480)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]
ba P19
nop

TARGET480:
ba RET480
nop


P19: !_REPLACEMENT [3] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+16], %o5
st %o5, [%i3+16]
add %i3, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P20: !_MEMBAR (FP)

P21: !_BSTC [30] (maybe <- 0x3f800008) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P22: !_MEMBAR (FP)
membar #StoreLoad

P23: !_REPLACEMENT [29] (Int) (Branch target of P442)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
ba P24
nop

TARGET442:
ba RET442
nop


P24: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P25: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET25
nop
RET25:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P26: !_BST [0] (maybe <- 0x3f800009) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET26
nop
RET26:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P27: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET27
nop
RET27:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P28: !_ST [10] (maybe <- 0x2) (Int)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4

P29: !_LD [1] (Int)
lduw [%i0 + 4], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

P30: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET30
nop
RET30:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P31: !_BST [3] (maybe <- 0x3f80000e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P32: !_MEMBAR (FP)

P33: !_BST [7] (maybe <- 0x3f800013) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P34: !_MEMBAR (FP)

P35: !_BST [2] (maybe <- 0x3f800014) (FP) (Branch target of P267)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P36
nop

TARGET267:
ba RET267
nop


P36: !_MEMBAR (FP)

P37: !_BSTC [32] (maybe <- 0x3f800019) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P38: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P39: !_REPLACEMENT [6] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P40: !_IDC_FLIP [25] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(40, 28363, 0, 0x45800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)

P41: !_ST [21] (maybe <- 0x3) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 0] %asi
add   %l4, 1, %l4

P42: !_MEMBAR (FP) (Branch target of P689)
ba P43
nop

TARGET689:
ba RET689
nop


P43: !_BST [28] (maybe <- 0x3f80001a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P44: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET44
nop
RET44:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P45: !_BST [33] (maybe <- 0x3f80001b) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P46: !_MEMBAR (FP) (Secondary ctx) (Branch target of P220)
membar #StoreLoad
ba P47
nop

TARGET220:
ba RET220
nop


P47: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P48: !_MEMBAR (FP)

P49: !_IDC_FLIP [29] (Int)
IDC_FLIP(49, 20272, 0, 0x46000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P50: !_MEMBAR (FP)

P51: !_BST [7] (maybe <- 0x3f80001c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P52: !_MEMBAR (FP)
membar #StoreLoad

P53: !_LD [14] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 64] %asi, %f2
! 1 addresses covered

P54: !_MEMBAR (FP) (Branch target of P315)
ba P55
nop

TARGET315:
ba RET315
nop


P55: !_BST [1] (maybe <- 0x3f80001d) (FP) (Branch target of P26)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P56
nop

TARGET26:
ba RET26
nop


P56: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET56
nop
RET56:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P57: !_LD [13] (FP) (CBR)
ld [%i3 + 32], %f3
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET57
nop
RET57:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P58: !_MEMBAR (FP)

P59: !_BST [24] (maybe <- 0x3f800022) (FP) (CBR) (Branch target of P208)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET59
nop
RET59:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P60
nop

TARGET208:
ba RET208
nop


P60: !_MEMBAR (FP) (Branch target of P44)
membar #StoreLoad
ba P61
nop

TARGET44:
ba RET44
nop


P61: !_REPLACEMENT [25] (Int) (Branch target of P469)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
ba P62
nop

TARGET469:
ba RET469
nop


P62: !_ST [23] (maybe <- 0x3f800024) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET62
nop
RET62:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P63: !_LD [16] (FP)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 16], %f4
! 1 addresses covered

P64: !_REPLACEMENT [27] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+160], %o5
st %o5, [%i3+160]
add %i3, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]

P65: !_REPLACEMENT [17] (Int) (Branch target of P113)
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
ba P66
nop

TARGET113:
ba RET113
nop


P66: !_IDC_FLIP [16] (Int) (CBR)
IDC_FLIP(66, 30868, 0, 0x44800010, 0x10, %i2, 0x10, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET66
nop
RET66:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P67: !_MEMBAR (FP)
membar #StoreLoad

P68: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P69: !_MEMBAR (FP)

P70: !_BLD [14] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P71: !_MEMBAR (FP) (Secondary ctx)

P72: !_ST [9] (maybe <- 0x3f800025) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 32 ]

P73: !_REPLACEMENT [18] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P74: !_ST [23] (maybe <- 0x4) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 32] %asi
add   %l4, 1, %l4

P75: !_LD [33] (FP) (Branch target of P557)
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f7
! 1 addresses covered
ba P76
nop

TARGET557:
ba RET557
nop


P76: !_REPLACEMENT [3] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET76
nop
RET76:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P77: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P78: !_REPLACEMENT [3] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P79: !_LD [25] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 96] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P80: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET80
nop
RET80:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P81: !_BLD [26] (FP) (Branch target of P676)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f8
fmovd %f40, %f18
fmovs %f18, %f9
ba P82
nop

TARGET676:
ba RET676
nop


P82: !_MEMBAR (FP)

P83: !_BST [10] (maybe <- 0x3f800026) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P84: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET84
nop
RET84:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P85: !_ST [26] (maybe <- 0x5) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P86: !_MEMBAR (FP)

P87: !_BST [8] (maybe <- 0x3f800027) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P88: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET88
nop
RET88:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P89: !_IDC_FLIP [32] (Int) (Branch target of P159)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(89, 6838, 0, 0x46000100, 0x100, %i3, 0x100, %l6, %l7, %o5, %l3)
ba P90
nop

TARGET159:
ba RET159
nop


P90: !_MEMBAR (FP) (Branch target of P76)
ba P91
nop

TARGET76:
ba RET76
nop


P91: !_BSTC [10] (maybe <- 0x3f800029) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P92: !_MEMBAR (FP)
membar #StoreLoad

P93: !_BLD [24] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P94: !_MEMBAR (FP) (Secondary ctx)

P95: !_BLD [14] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET95
nop
RET95:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P96: !_MEMBAR (FP) (Branch target of P193)
ba P97
nop

TARGET193:
ba RET193
nop


P97: !_BST [25] (maybe <- 0x3f80002a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P98: !_MEMBAR (FP)
membar #StoreLoad

P99: !_LD [19] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 0], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

P100: !_ST [9] (maybe <- 0x3f80002c) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 32 ] %asi

P101: !_MEMBAR (FP)
membar #StoreLoad

P102: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P103: !_MEMBAR (FP)

P104: !_ST [13] (maybe <- 0x3f80002d) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 32 ]

P105: !_MEMBAR (FP)

P106: !_BST [26] (maybe <- 0x3f80002e) (FP) (Branch target of P488)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P107
nop

TARGET488:
ba RET488
nop


P107: !_MEMBAR (FP)
membar #StoreLoad

P108: !_ST [2] (maybe <- 0x3f800030) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 8 ]

P109: !_MEMBAR (FP) (Branch target of P142)
ba P110
nop

TARGET142:
ba RET142
nop


P110: !_BST [32] (maybe <- 0x3f800031) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P111: !_MEMBAR (FP)
membar #StoreLoad

P112: !_LD [24] (FP)
ld [%i2 + 64], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P113: !_ST [28] (maybe <- 0x3f800032) (FP) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET113
nop
RET113:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P114: !_MEMBAR (FP) (Branch target of P642)
membar #StoreLoad
ba P115
nop

TARGET642:
ba RET642
nop


P115: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f0
membar #Sync
! 5 addresses covered
fmovs %f4, %f3
fmovd %f8, %f4

P116: !_MEMBAR (FP)

P117: !_REPLACEMENT [28] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P118: !_REPLACEMENT [4] (Int) (Branch target of P186)
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
ba P119
nop

TARGET186:
ba RET186
nop


P119: !_LD [9] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i1 + 32] %asi, %f5
! 1 addresses covered

P120: !_MEMBAR (FP) (CBR) (Branch target of P526)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET120
nop
RET120:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P121
nop

TARGET526:
ba RET526
nop


P121: !_BST [19] (maybe <- 0x3f800033) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P122: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET122
nop
RET122:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P123: !_BLD [33] (FP) (Branch target of P641)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6
ba P124
nop

TARGET641:
ba RET641
nop


P124: !_MEMBAR (FP)

P125: !_LD [18] (FP) (Nucleus ctx) (Branch target of P136)
wr %g0, 0x4, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 128] %asi, %f7
! 1 addresses covered
ba P126
nop

TARGET136:
ba RET136
nop


P126: !_ST [11] (maybe <- 0x6) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P127: !_REPLACEMENT [31] (Int) (Branch target of P586)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+192], %l6
st %l6, [%i3+192]
add %i3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
ba P128
nop

TARGET586:
ba RET586
nop


P128: !_REPLACEMENT [9] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P129: !_REPLACEMENT [24] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P130: !_REPLACEMENT [3] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P131: !_ST [29] (maybe <- 0x7) (Int) (Secondary ctx) (Branch target of P198)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 64] %asi
add   %l4, 1, %l4
ba P132
nop

TARGET198:
ba RET198
nop


P132: !_MEMBAR (FP)

P133: !_BST [29] (maybe <- 0x3f800034) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET133
nop
RET133:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P134: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET134
nop
RET134:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P135: !_BST [33] (maybe <- 0x3f800035) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P136: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET136
nop
RET136:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P137: !_LD [28] (Int)
lduw [%i3 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P138: !_MEMBAR (FP) (Branch target of P682)
membar #StoreLoad
ba P139
nop

TARGET682:
ba RET682
nop


P139: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P140: !_MEMBAR (FP)

P141: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P142: !_MEMBAR (FP) (CBR) (Branch target of P513)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET142
nop
RET142:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P143
nop

TARGET513:
ba RET513
nop


P143: !_REPLACEMENT [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P144: !_IDC_FLIP [1] (Int)
IDC_FLIP(144, 48, 0, 0x43000004, 0x4, %i0, 0x4, %l6, %l7, %o5, %l3)

P145: !_ST [28] (maybe <- 0x8) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 0] %asi
add   %l4, 1, %l4

P146: !_MEMBAR (FP)
membar #StoreLoad

P147: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f12
fmovd %f40, %f14

P148: !_MEMBAR (FP) (Branch target of P207)
ba P149
nop

TARGET207:
ba RET207
nop


P149: !_BST [20] (maybe <- 0x3f800036) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P150: !_MEMBAR (FP)
membar #StoreLoad

P151: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P152: !_MEMBAR (FP) (Branch target of P484)
ba P153
nop

TARGET484:
ba RET484
nop


P153: !_LD [29] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 64] %asi, %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2

P154: !_LD [1] (Int)
lduw [%i0 + 4], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P155: !_LD [25] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 96], %f0
! 1 addresses covered

P156: !_LD [23] (FP)
ld [%i2 + 32], %f1
! 1 addresses covered

P157: !_MEMBAR (FP) (Branch target of P566)
membar #StoreLoad
ba P158
nop

TARGET566:
ba RET566
nop


P158: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f2
fmovd %f34, %f4
fmovd %f36, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P159: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET159
nop
RET159:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P160: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P161: !_LD [32] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 256], %l3
! move %l3(lower) -> %o3(lower)
or %l3, %o3, %o3

P162: !_ST [4] (maybe <- 0x3f800037) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET162
nop
RET162:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P163: !_MEMBAR (FP) (Secondary ctx)

P164: !_BST [5] (maybe <- 0x3f800038) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P165: !_MEMBAR (FP) (Secondary ctx)

P166: !_BST [22] (maybe <- 0x3f80003a) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET166
nop
RET166:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P167: !_MEMBAR (FP)

P168: !_BST [17] (maybe <- 0x3f80003d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P169: !_MEMBAR (FP)
membar #StoreLoad

P170: !_LD [32] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 256] %asi, %f7
! 1 addresses covered

P171: !_IDC_FLIP [15] (Int) (CBR) (Branch target of P191)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(171, 30562, 0, 0x44000080, 0x80, %i2, 0x80, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET171
nop
RET171:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P172
nop

TARGET191:
ba RET191
nop


P172: !_LD [11] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i2 + 0] %asi, %f8
! 1 addresses covered

P173: !_MEMBAR (FP)

P174: !_BST [12] (maybe <- 0x3f80003e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P175: !_MEMBAR (FP)

P176: !_BST [16] (maybe <- 0x3f800041) (FP) (Branch target of P681)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P177
nop

TARGET681:
ba RET681
nop


P177: !_MEMBAR (FP) (Branch target of P95)
membar #StoreLoad
ba P178
nop

TARGET95:
ba RET95
nop


P178: !_PREFETCH [22] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 4], 1

P179: !_MEMBAR (FP)
membar #StoreLoad

P180: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f34, %f18
fmovs %f18, %f11
fmovd %f36, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P181: !_MEMBAR (FP)

P182: !_REPLACEMENT [19] (Int) (Branch target of P554)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P183
nop

TARGET554:
ba RET554
nop


P183: !_ST [6] (maybe <- 0x9) (Int)
stw   %l4, [%i0 + 96 ]
add   %l4, 1, %l4

P184: !_ST [7] (maybe <- 0xa) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P185: !_MEMBAR (FP)
membar #StoreLoad

P186: !_BLD [19] (FP) (CBR) (Branch target of P292)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET186
nop
RET186:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P187
nop

TARGET292:
ba RET292
nop


P187: !_MEMBAR (FP) (Branch target of P657)
ba P188
nop

TARGET657:
ba RET657
nop


P188: !_REPLACEMENT [30] (Int)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P189: !_REPLACEMENT [26] (Int)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P190: !_IDC_FLIP [19] (Int) (CBR) (Branch target of P199)
IDC_FLIP(190, 24167, 0, 0x45000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET190
nop
RET190:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P191
nop

TARGET199:
ba RET199
nop


P191: !_ST [30] (maybe <- 0x3f800042) (FP) (CBR) (Branch target of P258)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET191
nop
RET191:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P192
nop

TARGET258:
ba RET258
nop


P192: !_REPLACEMENT [26] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P193: !_REPLACEMENT [14] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET193
nop
RET193:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P194: !_LD [23] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 32] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P195: !_MEMBAR (FP)
membar #StoreLoad

P196: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P197: !_MEMBAR (FP)

P198: !_BSTC [0] (maybe <- 0x3f800043) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET198
nop
RET198:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P199: !_MEMBAR (FP) (CBR) (Branch target of P299)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET199
nop
RET199:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P200
nop

TARGET299:
ba RET299
nop


P200: !_LD [0] (FP) (Branch target of P304)
ld [%i0 + 0], %f0
! 1 addresses covered
ba P201
nop

TARGET304:
ba RET304
nop


P201: !_MEMBAR (FP)

P202: !_BST [9] (maybe <- 0x3f800048) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P203: !_MEMBAR (FP)
membar #StoreLoad

P204: !_ST [15] (maybe <- 0xb) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

P205: !_MEMBAR (FP)

P206: !_BST [19] (maybe <- 0x3f80004a) (FP) (Branch target of P556)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P207
nop

TARGET556:
ba RET556
nop


P207: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET207
nop
RET207:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P208: !_BST [12] (maybe <- 0x3f80004b) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET208
nop
RET208:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P209: !_MEMBAR (FP)
membar #StoreLoad

P210: !_ST [16] (maybe <- 0x3f80004e) (FP) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 16 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET210
nop
RET210:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P211: !_ST [24] (maybe <- 0x3f80004f) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

P212: !_MEMBAR (FP) (Secondary ctx)

P213: !_BST [32] (maybe <- 0x3f800050) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P214: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P215: !_REPLACEMENT [12] (Int) (Branch target of P359)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
ba P216
nop

TARGET359:
ba RET359
nop


P216: !_REPLACEMENT [13] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P217: !_MEMBAR (FP) (Branch target of P385)
membar #StoreLoad
ba P218
nop

TARGET385:
ba RET385
nop


P218: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION7_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P219: !_MEMBAR (FP)

P220: !_BLD [6] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET220
nop
RET220:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P221: !_MEMBAR (FP) (Branch target of P300)
ba P222
nop

TARGET300:
ba RET300
nop


P222: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f4
fmovd %f34, %f6
fmovd %f36, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P223: !_MEMBAR (FP) (Branch target of P531)
ba P224
nop

TARGET531:
ba RET531
nop


P224: !_LD [10] (Int)
lduw [%i1 + 64], %l6
! move %l6(lower) -> %o4(lower)
or %l6, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P225: !_REPLACEMENT [8] (Int)
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P226: !_MEMBAR (FP)

P227: !_BST [4] (maybe <- 0x3f800051) (FP) (Branch target of P580)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P228
nop

TARGET580:
ba RET580
nop


P228: !_MEMBAR (FP)
membar #StoreLoad

P229: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P230: !_MEMBAR (FP)

P231: !_BST [31] (maybe <- 0x3f800056) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P232: !_MEMBAR (FP) (CBR) (Branch target of P620)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET232
nop
RET232:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P233
nop

TARGET620:
ba RET620
nop


P233: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P234: !_REPLACEMENT [2] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i2+8], %l6
st %l6, [%i2+8]
add %i2, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET234
nop
RET234:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P235: !_REPLACEMENT [7] (Int) (Branch target of P352)
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
ba P236
nop

TARGET352:
ba RET352
nop


P236: !_REPLACEMENT [3] (Int)
sethi %hi(0x2000), %l7
ld [%i2+16], %l3
st %l3, [%i2+16]
add %i2, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P237: !_ST [29] (maybe <- 0xc) (Int)
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4

P238: !_MEMBAR (FP)

P239: !_BSTC [14] (maybe <- 0x3f800057) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P240: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET240
nop
RET240:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P241: !_BST [19] (maybe <- 0x3f800058) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P242: !_MEMBAR (FP)
membar #StoreLoad

P243: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P244: !_MEMBAR (FP)

P245: !_BST [12] (maybe <- 0x3f800059) (FP) (Branch target of P450)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P246
nop

TARGET450:
ba RET450
nop


P246: !_MEMBAR (FP)
membar #StoreLoad

P247: !_LD [5] (FP)
ld [%i0 + 64], %f13
! 1 addresses covered

P248: !_LD [4] (Int)
lduw [%i0 + 32], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P249: !_MEMBAR (FP)

P250: !_BST [8] (maybe <- 0x3f80005c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P251: !_MEMBAR (FP)

P252: !_BSTC [0] (maybe <- 0x3f80005e) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P253: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P254: !_ST [6] (maybe <- 0x3f800063) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 96 ]

P255: !_ST [31] (maybe <- 0x3f800064) (FP) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 192 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET255
nop
RET255:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P256: !_REPLACEMENT [22] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P257: !_MEMBAR (FP) (Branch target of P88)
ba P258
nop

TARGET88:
ba RET88
nop


P258: !_BST [1] (maybe <- 0x3f800065) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET258
nop
RET258:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P259: !_MEMBAR (FP)

P260: !_BST [16] (maybe <- 0x3f80006a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P261: !_MEMBAR (FP)
membar #StoreLoad

P262: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P263: !_MEMBAR (FP)

P264: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f0
membar #Sync
! 1 addresses covered

P265: !_MEMBAR (FP)

P266: !_FLUSHI [29] (Int) (Branch target of P374)
flush %g0 
ba P267
nop

TARGET374:
ba RET374
nop


P267: !_ST [22] (maybe <- 0xd) (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET267
nop
RET267:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P268: !_MEMBAR (FP)

P269: !_BSTC [1] (maybe <- 0x3f80006b) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P270: !_MEMBAR (FP)
membar #StoreLoad

P271: !_LD [16] (FP) (Branch target of P630)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 16], %f1
! 1 addresses covered
ba P272
nop

TARGET630:
ba RET630
nop


P272: !_ST [32] (maybe <- 0x3f800070) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P273: !_ST [32] (maybe <- 0x3f800071) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 256 ] %asi

P274: !_MEMBAR (FP)

P275: !_BST [21] (maybe <- 0x3f800072) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P276: !_MEMBAR (FP) (Branch target of P552)
membar #StoreLoad
ba P277
nop

TARGET552:
ba RET552
nop


P277: !_ST [7] (maybe <- 0xe) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P278: !_LD [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i3 + 64] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

P279: !_LD [31] (FP)
ld [%i3 + 192], %f2
! 1 addresses covered

P280: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET280
nop
RET280:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P281: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P282: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P283: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P284: !_BLD [32] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P285: !_MEMBAR (FP) (Secondary ctx)

P286: !_PREFETCH [15] (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetcha [%i3 + 128] %asi, 1

P287: !_ST [32] (maybe <- 0xf) (Int) (LE) (Branch target of P120)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %l6
srl %l6, 8, %l6
sll %l4, 8, %o5
and %o5, %l3, %o5
or %o5, %l6, %o5
srl %o5, 16, %l6
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l6, %o5
stwa   %o5, [%i2 + 256] %asi
add   %l4, 1, %l4
ba P288
nop

TARGET120:
ba RET120
nop


P288: !_LD [28] (FP)
ld [%i2 + 0], %f4
! 1 addresses covered

P289: !_REPLACEMENT [12] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P290: !_MEMBAR (FP)

P291: !_BSTC [3] (maybe <- 0x3f800075) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET291
nop
RET291:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P292: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET292
nop
RET292:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P293: !_IDC_FLIP [9] (Int)
IDC_FLIP(293, 1091, 0, 0x43800020, 0x20, %i1, 0x20, %l6, %l7, %o5, %l3)

P294: !_REPLACEMENT [17] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET294
nop
RET294:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P295: !_REPLACEMENT [11] (Int) (Secondary ctx) (Branch target of P210)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P296
nop

TARGET210:
ba RET210
nop


P296: !_ST [27] (maybe <- 0x10) (Int) (Secondary ctx) (Branch target of P701)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 160] %asi
add   %l4, 1, %l4
ba P297
nop

TARGET701:
ba RET701
nop


P297: !_MEMBAR (FP) (Secondary ctx)

P298: !_BST [15] (maybe <- 0x3f80007a) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P299: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET299
nop
RET299:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P300: !_REPLACEMENT [28] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET300
nop
RET300:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P301: !_MEMBAR (FP)

P302: !_BST [31] (maybe <- 0x3f80007b) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

P303: !_MEMBAR (FP) (Branch target of P57)
membar #StoreLoad
ba P304
nop

TARGET57:
ba RET57
nop


P304: !_ST [20] (maybe <- 0x11) (Int) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 256 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET304
nop
RET304:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P305: !_LD [1] (Int)
lduw [%i0 + 4], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P306: !_LD [10] (FP) (CBR)
ld [%i1 + 64], %f5
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET306
nop
RET306:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P307: !_REPLACEMENT [20] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P308: !_LD [15] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 128], %f6
! 1 addresses covered

P309: !_MEMBAR (FP)
membar #StoreLoad

P310: !_BLD [2] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f34, %f18
fmovs %f18, %f9
fmovd %f36, %f10
fmovd %f40, %f18
fmovs %f18, %f11

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET310
nop
RET310:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P311: !_MEMBAR (FP)

P312: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P313: !_LD [15] (Int)
lduw [%i3 + 128], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

P314: !_MEMBAR (FP)
membar #StoreLoad

P315: !_BLD [1] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET315
nop
RET315:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P316: !_MEMBAR (FP)

P317: !_ST [21] (maybe <- 0x12) (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET317
nop
RET317:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P318: !_LD [8] (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i1 + 0] %asi, %f1
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET318
nop
RET318:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P319: !_REPLACEMENT [13] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P320: !_ST [33] (maybe <- 0x3f80007c) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P321: !_LD [0] (Int)
lduw [%i0 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P322: !_MEMBAR (FP)
membar #StoreLoad

P323: !_BLD [13] (FP) (Branch target of P626)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f2
fmovd %f40, %f4
ba P324
nop

TARGET626:
ba RET626
nop


P324: !_MEMBAR (FP) (Branch target of P660)
ba P325
nop

TARGET660:
ba RET660
nop


P325: !_PREFETCH [14] (Int)
prefetch [%i3 + 64], 1

P326: !_REPLACEMENT [25] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P327: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P328: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P329: !_BLD [0] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f34, %f18
fmovs %f18, %f7
fmovd %f36, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P330: !_MEMBAR (FP) (Secondary ctx)

P331: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P332: !_MEMBAR (FP)

P333: !_IDC_FLIP [25] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(333, 18798, 0, 0x45800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)

P334: !_MEMBAR (FP)
membar #StoreLoad

P335: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P336: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET336
nop
RET336:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P337: !_REPLACEMENT [15] (Int) (Branch target of P653)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P338
nop

TARGET653:
ba RET653
nop


P338: !_REPLACEMENT [30] (Int)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P339: !_MEMBAR (FP)
membar #StoreLoad

P340: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P341: !_MEMBAR (FP)

P342: !_REPLACEMENT [32] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET342
nop
RET342:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P343: !_MEMBAR (FP) (Branch target of P561)
ba P344
nop

TARGET561:
ba RET561
nop


P344: !_BST [2] (maybe <- 0x3f80007d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P345: !_MEMBAR (FP)

P346: !_BST [23] (maybe <- 0x3f800082) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P347: !_MEMBAR (FP) (Branch target of P190)
membar #StoreLoad
ba P348
nop

TARGET190:
ba RET190
nop


P348: !_REPLACEMENT [30] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P349: !_MEMBAR (FP) (Secondary ctx) (Branch target of P538)
membar #StoreLoad
ba P350
nop

TARGET538:
ba RET538
nop


P350: !_BLD [29] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET350
nop
RET350:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P351: !_MEMBAR (FP) (Secondary ctx)

P352: !_REPLACEMENT [24] (Int) (CBR) (Branch target of P133)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET352
nop
RET352:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P353
nop

TARGET133:
ba RET133
nop


P353: !_LD [33] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 0] %asi, %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2

P354: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET354
nop
RET354:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P355: !_REPLACEMENT [23] (Int) (Branch target of P350)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
ba P356
nop

TARGET350:
ba RET350
nop


P356: !_LD [17] (FP)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 96], %f4
! 1 addresses covered

P357: !_REPLACEMENT [1] (Int)
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P358: !_IDC_FLIP [14] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(358, 3736, 0, 0x44000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET358
nop
RET358:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P359: !_IDC_FLIP [29] (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(359, 32433, 0, 0x46000040, 0x40, %i2, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET359
nop
RET359:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P360: !_REPLACEMENT [25] (Int) (CBR) (Branch target of P698)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET360
nop
RET360:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P361
nop

TARGET698:
ba RET698
nop


P361: !_LD [8] (Int) (Branch target of P571)
lduw [%i1 + 0], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3
ba P362
nop

TARGET571:
ba RET571
nop


P362: !_MEMBAR (FP)
membar #StoreLoad

P363: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P364: !_MEMBAR (FP)

P365: !_LD [15] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 128], %f6
! 1 addresses covered

P366: !_MEMBAR (FP) (Secondary ctx)

P367: !_BST [9] (maybe <- 0x3f800085) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P368: !_MEMBAR (FP) (Secondary ctx)

P369: !_BST [29] (maybe <- 0x3f800087) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET369
nop
RET369:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P370: !_MEMBAR (FP)
membar #StoreLoad

P371: !_ST [22] (maybe <- 0x3f800088) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P372: !_REPLACEMENT [6] (Int) (Secondary ctx) (Branch target of P584)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
ba P373
nop

TARGET584:
ba RET584
nop


P373: !_LD [6] (Int) (CBR)
lduw [%i0 + 96], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET373
nop
RET373:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P374: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET374
nop
RET374:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P375: !_BSTC [31] (maybe <- 0x3f800089) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

P376: !_MEMBAR (FP)
membar #StoreLoad

P377: !_ST [33] (maybe <- 0x3f80008a) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 0 ]

P378: !_LD [24] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 64], %f7
! 1 addresses covered

P379: !_REPLACEMENT [25] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P380: !_REPLACEMENT [25] (Int)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P381: !_MEMBAR (FP) (Branch target of P358)
membar #StoreLoad
ba P382
nop

TARGET358:
ba RET358
nop


P382: !_BLD [25] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f8
fmovd %f40, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET382
nop
RET382:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P383: !_MEMBAR (FP)

P384: !_REPLACEMENT [23] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P385: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET385
nop
RET385:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P386: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P387: !_MEMBAR (FP)

P388: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P389: !_MEMBAR (FP)
membar #StoreLoad

P390: !_BLD [31] (FP) (Branch target of P697)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
ba P391
nop

TARGET697:
ba RET697
nop


P391: !_MEMBAR (FP) (Branch target of P30)
ba P392
nop

TARGET30:
ba RET30
nop


P392: !_REPLACEMENT [2] (Int) (Branch target of P342)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+8], %l3
st %l3, [%i3+8]
add %i3, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
ba P393
nop

TARGET342:
ba RET342
nop


P393: !_REPLACEMENT [13] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P394: !_MEMBAR (FP)

P395: !_BSTC [5] (maybe <- 0x3f80008b) (FP) (Branch target of P27)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P396
nop

TARGET27:
ba RET27
nop


P396: !_MEMBAR (FP)
membar #StoreLoad

P397: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P398: !_MEMBAR (FP)

P399: !_BST [12] (maybe <- 0x3f80008d) (FP) (CBR) (Branch target of P460)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET399
nop
RET399:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P400
nop

TARGET460:
ba RET460
nop


P400: !_MEMBAR (FP)
membar #StoreLoad

P401: !_BLD [8] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET401
nop
RET401:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P402: !_MEMBAR (FP)

P403: !_LD [1] (Int)
lduw [%i0 + 4], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P404: !_MEMBAR (FP)
membar #StoreLoad

P405: !_BLD [33] (FP) (Branch target of P336)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P406
nop

TARGET336:
ba RET336
nop


P406: !_MEMBAR (FP)

P407: !_ST [28] (maybe <- 0x3f800090) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 0 ] %asi

P408: !_REPLACEMENT [6] (Int) (Branch target of P550)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
ba P409
nop

TARGET550:
ba RET550
nop


P409: !_MEMBAR (FP)
membar #StoreLoad

P410: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P411: !_MEMBAR (FP)

P412: !_REPLACEMENT [29] (Int)
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P413: !_ST [20] (maybe <- 0x3f800091) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P414: !_REPLACEMENT [17] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P415: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P416: !_REPLACEMENT [3] (Int)
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P417: !_LD [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 96] %asi, %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P418: !_REPLACEMENT [8] (Int)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P419: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET419
nop
RET419:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P420: !_BST [4] (maybe <- 0x3f800092) (FP) (CBR) (Branch target of P401)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET420
nop
RET420:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P421
nop

TARGET401:
ba RET401
nop


P421: !_MEMBAR (FP)
membar #StoreLoad

P422: !_ST [3] (maybe <- 0x3f800097) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 16 ] %asi

P423: !_REPLACEMENT [22] (Int) (Branch target of P667)
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
ba P424
nop

TARGET667:
ba RET667
nop


P424: !_ST [30] (maybe <- 0x3f800098) (FP) (Nucleus ctx) (Branch target of P520)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 128 ] %asi
ba P425
nop

TARGET520:
ba RET520
nop


P425: !_ST [7] (maybe <- 0x13) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P426: !_MEMBAR (FP)

P427: !_BSTC [25] (maybe <- 0x3f800099) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P428: !_MEMBAR (FP)

P429: !_BST [11] (maybe <- 0x3f80009b) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P430: !_MEMBAR (FP)
membar #StoreLoad

P431: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P432: !_MEMBAR (FP)

P433: !_BLD [10] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P434: !_MEMBAR (FP) (Secondary ctx) (Branch target of P80)
ba P435
nop

TARGET80:
ba RET80
nop


P435: !_ST [19] (maybe <- 0x14) (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P436: !_ST [3] (maybe <- 0x3f80009e) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 16 ]

P437: !_ST [5] (maybe <- 0x15) (Int) (CBR)
stw   %l4, [%i0 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET437
nop
RET437:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P438: !_MEMBAR (FP)

P439: !_BST [26] (maybe <- 0x3f80009f) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P440: !_MEMBAR (FP)
membar #StoreLoad

P441: !_BLD [32] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P442: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET442
nop
RET442:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P443: !_BST [17] (maybe <- 0x3f8000a1) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P444: !_MEMBAR (FP) (Branch target of P437)
membar #StoreLoad
ba P445
nop

TARGET437:
ba RET437
nop


P445: !_REPLACEMENT [28] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P446: !_ST [15] (maybe <- 0x16) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

P447: !_ST [32] (maybe <- 0x17) (Int) (Branch target of P559)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 256 ]
add   %l4, 1, %l4
ba P448
nop

TARGET559:
ba RET559
nop


P448: !_ST [15] (maybe <- 0x18) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

P449: !_ST [25] (maybe <- 0x19) (Int) (Secondary ctx) (Branch target of P486)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 96] %asi
add   %l4, 1, %l4
ba P450
nop

TARGET486:
ba RET486
nop


P450: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET450
nop
RET450:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P451: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P452: !_MEMBAR (FP)

P453: !_FLUSHI [25] (Int)
flush %g0 

P454: !_MEMBAR (FP)
membar #StoreLoad

P455: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P456: !_MEMBAR (FP)

P457: !_REPLACEMENT [8] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P458: !_LD [7] (FP) (CBR)
ld [%i0 + 128], %f9
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET458
nop
RET458:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P459: !_MEMBAR (FP) (Secondary ctx)

P460: !_BST [12] (maybe <- 0x3f8000a2) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET460
nop
RET460:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P461: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P462: !_BLD [12] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f10
fmovd %f40, %f12

P463: !_MEMBAR (FP) (Secondary ctx) (Branch target of P171)
ba P464
nop

TARGET171:
ba RET171
nop


P464: !_ST [1] (maybe <- 0x1a) (Int)
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4

P465: !_MEMBAR (FP) (Branch target of P419)
ba P466
nop

TARGET419:
ba RET419
nop


P466: !_BST [9] (maybe <- 0x3f8000a5) (FP) (Branch target of P56)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P467
nop

TARGET56:
ba RET56
nop


P467: !_MEMBAR (FP)
membar #StoreLoad

P468: !_REPLACEMENT [12] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P469: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET469
nop
RET469:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P470: !_BST [23] (maybe <- 0x3f8000a7) (FP) (Secondary ctx) (Branch target of P310)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P471
nop

TARGET310:
ba RET310
nop


P471: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET471
nop
RET471:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P472: !_BST [15] (maybe <- 0x3f8000aa) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P473: !_MEMBAR (FP)
membar #StoreLoad

P474: !_IDC_FLIP [24] (Int)
IDC_FLIP(474, 10713, 0, 0x45800040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P475: !_MEMBAR (FP)

P476: !_BST [26] (maybe <- 0x3f8000ab) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P477: !_MEMBAR (FP)
membar #StoreLoad

P478: !_ST [27] (maybe <- 0x3f8000ad) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 160 ]

P479: !_LD [25] (Int)
lduw [%i3 + 96], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P480: !_REPLACEMENT [30] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET480
nop
RET480:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P481: !_MEMBAR (FP) (Branch target of P685)
membar #StoreLoad
ba P482
nop

TARGET685:
ba RET685
nop


P482: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P483: !_MEMBAR (FP)

P484: !_REPLACEMENT [20] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET484
nop
RET484:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P485: !_MEMBAR (FP)

P486: !_BST [17] (maybe <- 0x3f8000ae) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET486
nop
RET486:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P487: !_MEMBAR (FP)
membar #StoreLoad

P488: !_REPLACEMENT [0] (Int) (CBR) (Branch target of P234)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET488
nop
RET488:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P489
nop

TARGET234:
ba RET234
nop


P489: !_ST [3] (maybe <- 0x3f8000af) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 16 ]

P490: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %l3
ld [%i2+256], %l7
st %l7, [%i2+256]
add %i2, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P491: !_REPLACEMENT [19] (Int)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P492: !_ST [9] (maybe <- 0x3f8000b0) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 32 ] %asi

P493: !_IDC_FLIP [1] (Int)
IDC_FLIP(493, 13567, 0, 0x43000004, 0x4, %i0, 0x4, %l6, %l7, %o5, %l3)

P494: !_LD [2] (FP)
ld [%i0 + 8], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P495: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P496: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P497: !_LD [19] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f0
! 1 addresses covered

P498: !_REPLACEMENT [19] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P499: !_MEMBAR (FP)
membar #StoreLoad

P500: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f18, %f3
fmovd %f36, %f4
fmovd %f40, %f18
fmovs %f18, %f5

P501: !_MEMBAR (FP)

P502: !_REPLACEMENT [22] (Int)
sethi %hi(0x2000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P503: !_REPLACEMENT [14] (Int)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P504: !_IDC_FLIP [18] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(504, 5004, 0, 0x44800080, 0x80, %i2, 0x80, %l6, %l7, %o5, %l3)

P505: !_ST [9] (maybe <- 0x1b) (Int)
stw   %l4, [%i1 + 32 ]
add   %l4, 1, %l4

P506: !_REPLACEMENT [30] (Int)
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P507: !_LD [4] (Int) (Secondary ctx) (Branch target of P373)
wr %g0, 0x81, %asi
lduwa [%i0 + 32] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
ba P508
nop

TARGET373:
ba RET373
nop


P508: !_LD [5] (FP)
ld [%i0 + 64], %f6
! 1 addresses covered

P509: !_MEMBAR (FP)
membar #StoreLoad

P510: !_BLD [17] (FP) (Branch target of P294)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f18
fmovs %f18, %f7
ba P511
nop

TARGET294:
ba RET294
nop


P511: !_MEMBAR (FP)

P512: !_ST [14] (maybe <- 0x1c) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 64] %asi
add   %l4, 1, %l4

P513: !_REPLACEMENT [22] (Int) (CBR) (Branch target of P232)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET513
nop
RET513:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P514
nop

TARGET232:
ba RET232
nop


P514: !_REPLACEMENT [5] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P515: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET515
nop
RET515:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P516: !_BST [6] (maybe <- 0x3f8000b1) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P517: !_MEMBAR (FP) (Branch target of P66)
ba P518
nop

TARGET66:
ba RET66
nop


P518: !_BST [16] (maybe <- 0x3f8000b3) (FP) (Secondary ctx) (Branch target of P666)
wr %g0, 0xf1, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P519
nop

TARGET666:
ba RET666
nop


P519: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P520: !_BLD [23] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET520
nop
RET520:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P521: !_MEMBAR (FP) (Secondary ctx)

P522: !_BST [13] (maybe <- 0x3f8000b4) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET522
nop
RET522:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P523: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P524: !_REPLACEMENT [22] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P525: !_IDC_FLIP [31] (Int) (Branch target of P382)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(525, 17842, 0, 0x460000c0, 0xc0, %i3, 0xc0, %l6, %l7, %o5, %l3)
ba P526
nop

TARGET382:
ba RET382
nop


P526: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET526
nop
RET526:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P527: !_BLD [17] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f18
fmovs %f18, %f11

P528: !_MEMBAR (FP) (Secondary ctx)

P529: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P530: !_MEMBAR (FP)

P531: !_REPLACEMENT [18] (Int) (CBR) (Branch target of P280)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET531
nop
RET531:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P532
nop

TARGET280:
ba RET280
nop


P532: !_MEMBAR (FP)

P533: !_BST [25] (maybe <- 0x3f8000b7) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P534: !_MEMBAR (FP)
membar #StoreLoad

P535: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P536: !_MEMBAR (FP) (Branch target of P399)
ba P537
nop

TARGET399:
ba RET399
nop


P537: !_BST [23] (maybe <- 0x3f8000b9) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P538: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET538
nop
RET538:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P539: !_REPLACEMENT [27] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+160], %l7
st %l7, [%i3+160]
add %i3, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]

P540: !_MEMBAR (FP) (Secondary ctx)

P541: !_BST [30] (maybe <- 0x3f8000bc) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P542: !_MEMBAR (FP) (Secondary ctx)

P543: !_BST [8] (maybe <- 0x3f8000bd) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P544: !_MEMBAR (FP) (Secondary ctx) (Branch target of P594)
membar #StoreLoad
ba P545
nop

TARGET594:
ba RET594
nop


P545: !_ST [17] (maybe <- 0x3f8000bf) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 96 ] %asi

P546: !_MEMBAR (FP)

P547: !_BST [28] (maybe <- 0x3f8000c0) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET547
nop
RET547:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P548: !_MEMBAR (FP) (Branch target of P62)
membar #StoreLoad
ba P549
nop

TARGET62:
ba RET62
nop


P549: !_LD [3] (Int)
lduw [%i0 + 16], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P550: !_ST [9] (maybe <- 0x1d) (Int) (CBR)
stw   %l4, [%i1 + 32 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET550
nop
RET550:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P551: !_MEMBAR (FP)
membar #StoreLoad

P552: !_BLD [22] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET552
nop
RET552:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P553: !_MEMBAR (FP)

P554: !_BLD [2] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f18, %f3
fmovd %f36, %f4
fmovd %f40, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET554
nop
RET554:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P555: !_MEMBAR (FP) (Secondary ctx)

P556: !_REPLACEMENT [16] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET556
nop
RET556:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P557: !_PREFETCH [17] (Int) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 96], 1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET557
nop
RET557:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P558: !_MEMBAR (FP)
membar #StoreLoad

P559: !_BLD [3] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f6
fmovd %f34, %f8
fmovd %f36, %f18
fmovs %f18, %f9
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET559
nop
RET559:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P560: !_MEMBAR (FP)

P561: !_BST [22] (maybe <- 0x3f8000c1) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET561
nop
RET561:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P562: !_MEMBAR (FP)
membar #StoreLoad

P563: !_PREFETCH [33] (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 0] %asi, 1

P564: !_MEMBAR (FP)
membar #StoreLoad

P565: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P566: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET566
nop
RET566:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P567: !_IDC_FLIP [11] (Int)
IDC_FLIP(567, 19640, 0, 0x44000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

P568: !_REPLACEMENT [10] (Int) (Branch target of P318)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P569
nop

TARGET318:
ba RET318
nop


P569: !_REPLACEMENT [8] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P570: !_MEMBAR (FP)
membar #StoreLoad

P571: !_BLD [12] (FP) (CBR) (Branch target of P420)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET571
nop
RET571:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P572
nop

TARGET420:
ba RET420
nop


P572: !_MEMBAR (FP)

P573: !_LD [16] (Int) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 16], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET573
nop
RET573:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P574: !_ST [27] (maybe <- 0x1e) (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 160 ]
add   %l4, 1, %l4

P575: !_REPLACEMENT [12] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P576: !_IDC_FLIP [3] (Int) (Branch target of P291)
IDC_FLIP(576, 18038, 0, 0x43000010, 0x10, %i0, 0x10, %l6, %l7, %o5, %l3)
ba P577
nop

TARGET291:
ba RET291
nop


P577: !_MEMBAR (FP)

P578: !_BSTC [7] (maybe <- 0x3f8000c4) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P579: !_MEMBAR (FP)
membar #StoreLoad

P580: !_IDC_FLIP [4] (Int) (CBR)
IDC_FLIP(580, 4574, 0, 0x43000020, 0x20, %i0, 0x20, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET580
nop
RET580:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P581: !_REPLACEMENT [27] (Int)
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]

P582: !_ST [31] (maybe <- 0x3f8000c5) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 192 ]

P583: !_ST [15] (maybe <- 0x3f8000c6) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P584: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P134)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET584
nop
RET584:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P585
nop

TARGET134:
ba RET134
nop


P585: !_BSTC [17] (maybe <- 0x3f8000c7) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P586: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P25)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET586
nop
RET586:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P587
nop

TARGET25:
ba RET25
nop


P587: !_BSTC [0] (maybe <- 0x3f8000c8) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P588: !_MEMBAR (FP) (CBR) (Branch target of P6)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET588
nop
RET588:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P589
nop

TARGET6:
ba RET6
nop


P589: !_LD [28] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 0] %asi, %f1
! 1 addresses covered

P590: !_REPLACEMENT [20] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P591: !_MEMBAR (FP)
membar #StoreLoad

P592: !_BLD [19] (FP) (Branch target of P602)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2
ba P593
nop

TARGET602:
ba RET602
nop


P593: !_MEMBAR (FP) (CBR) (Branch target of P317)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET593
nop
RET593:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P594
nop

TARGET317:
ba RET317
nop


P594: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET594
nop
RET594:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P595: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P596: !_MEMBAR (FP)

P597: !_BST [9] (maybe <- 0x3f8000cd) (FP) (Branch target of P84)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P598
nop

TARGET84:
ba RET84
nop


P598: !_MEMBAR (FP)
membar #StoreLoad

P599: !_IDC_FLIP [2] (Int) (Branch target of P255)
IDC_FLIP(599, 25237, 0, 0x43000008, 0x8, %i0, 0x8, %l6, %l7, %o5, %l3)
ba P600
nop

TARGET255:
ba RET255
nop


P600: !_MEMBAR (FP) (Branch target of P547)
membar #StoreLoad
ba P601
nop

TARGET547:
ba RET547
nop


P601: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P602: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET602
nop
RET602:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P603: !_ST [33] (maybe <- 0x1f) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P604: !_LD [6] (Int)
lduw [%i0 + 96], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P605: !_MEMBAR (FP)
membar #StoreLoad

P606: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P607: !_MEMBAR (FP)

P608: !_REPLACEMENT [7] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P609: !_ST [17] (maybe <- 0x3f8000cf) (FP)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 96 ]

P610: !_REPLACEMENT [33] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P611: !_ST [15] (maybe <- 0x3f8000d0) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 128 ] %asi

P612: !_MEMBAR (Int)
membar #StoreLoad

P613: !_ST [23] (maybe <- 0x3f8000d1) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

P614: !_MEMBAR (FP) (Secondary ctx)

P615: !_BST [32] (maybe <- 0x3f8000d2) (FP) (Secondary ctx) (Branch target of P369)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi
ba P616
nop

TARGET369:
ba RET369
nop


P616: !_MEMBAR (FP) (Secondary ctx) (Branch target of P162)
ba P617
nop

TARGET162:
ba RET162
nop


P617: !_BST [23] (maybe <- 0x3f8000d3) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P618: !_MEMBAR (FP)
membar #StoreLoad

P619: !_REPLACEMENT [19] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P620: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET620
nop
RET620:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P621: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P622: !_MEMBAR (FP)

P623: !_BLD [2] (FP) (Branch target of P588)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f10
fmovd %f34, %f12
fmovd %f36, %f18
fmovs %f18, %f13
fmovd %f40, %f14
ba P624
nop

TARGET588:
ba RET588
nop


P624: !_MEMBAR (FP)

P625: !_REPLACEMENT [1] (Int)
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P626: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET626
nop
RET626:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P627: !_BST [1] (maybe <- 0x3f8000d6) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P628: !_MEMBAR (FP)
membar #StoreLoad

P629: !_REPLACEMENT [12] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET629
nop
RET629:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P630: !_REPLACEMENT [30] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET630
nop
RET630:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P631: !_LD [16] (FP)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 16], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P632: !_IDC_FLIP [4] (Int) (Branch target of P122)
IDC_FLIP(632, 6953, 0, 0x43000020, 0x20, %i0, 0x20, %l6, %l7, %o5, %l3)
ba P633
nop

TARGET122:
ba RET122
nop


P633: !_MEMBAR (FP) (Branch target of P593)
ba P634
nop

TARGET593:
ba RET593
nop


P634: !_BST [3] (maybe <- 0x3f8000db) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P635: !_MEMBAR (FP)
membar #StoreLoad

P636: !_ST [26] (maybe <- 0x3f8000e0) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 128 ] %asi

P637: !_ST [1] (maybe <- 0x20) (Int)
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4

P638: !_MEMBAR (FP)
membar #StoreLoad

P639: !_BLD [26] (FP) (Branch target of P646)
wr %g0, 0xf0, %asi
ldda [%i3 + 128] %asi, %f0
membar #Sync
! 2 addresses covered
fmovs %f8, %f1
ba P640
nop

TARGET646:
ba RET646
nop


P640: !_MEMBAR (FP)

P641: !_REPLACEMENT [28] (Int) (CBR) (Secondary ctx) (Branch target of P629)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET641
nop
RET641:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P642
nop

TARGET629:
ba RET629
nop


P642: !_MEMBAR (FP) (CBR) (Branch target of P458)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET642
nop
RET642:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P643
nop

TARGET458:
ba RET458
nop


P643: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

P644: !_MEMBAR (FP)

P645: !_ST [0] (maybe <- 0x21) (Int)
stw   %l4, [%i0 + 0 ]
add   %l4, 1, %l4

P646: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET646
nop
RET646:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P647: !_BST [33] (maybe <- 0x3f8000e1) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P648: !_MEMBAR (FP) (Branch target of P354)
membar #StoreLoad
ba P649
nop

TARGET354:
ba RET354
nop


P649: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P650: !_MEMBAR (FP) (Branch target of P306)
ba P651
nop

TARGET306:
ba RET306
nop


P651: !_ST [8] (maybe <- 0x3f8000e2) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P652: !_LD [7] (FP)
ld [%i0 + 128], %f4
! 1 addresses covered

P653: !_ST [8] (maybe <- 0x22) (Int) (CBR)
stw   %l4, [%i1 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET653
nop
RET653:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P654: !_LD [5] (Int)
lduw [%i0 + 64], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2

P655: !_MEMBAR (FP)

P656: !_BST [13] (maybe <- 0x3f8000e3) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P657: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET657
nop
RET657:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P658: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P659: !_MEMBAR (FP)

P660: !_BLD [13] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f40, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET660
nop
RET660:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P661: !_MEMBAR (FP)

P662: !_BST [32] (maybe <- 0x3f8000e6) (FP) (Branch target of P59)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi
ba P663
nop

TARGET59:
ba RET59
nop


P663: !_MEMBAR (FP)
membar #StoreLoad

P664: !_LD [26] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 128], %f10
! 1 addresses covered

P665: !_REPLACEMENT [33] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P666: !_REPLACEMENT [15] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET666
nop
RET666:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P667: !_LD [24] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i3 + 64] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET667
nop
RET667:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P668: !_MEMBAR (FP)

P669: !_BST [21] (maybe <- 0x3f8000e7) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P670: !_MEMBAR (FP)
membar #StoreLoad

P671: !_REPLACEMENT [7] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET671
nop
RET671:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P672: !_MEMBAR (FP)

P673: !_BSTC [14] (maybe <- 0x3f8000ea) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P674: !_MEMBAR (FP) (Branch target of P240)
membar #StoreLoad
ba P675
nop

TARGET240:
ba RET240
nop


P675: !_LD [25] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 96], %f11
! 1 addresses covered

P676: !_PREFETCH [22] (Int) (CBR)
prefetch [%i2 + 4], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET676
nop
RET676:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P677: !_REPLACEMENT [31] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+192], %o5
st %o5, [%i3+192]
add %i3, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]

P678: !_REPLACEMENT [28] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P679: !_MEMBAR (FP)

P680: !_BST [23] (maybe <- 0x3f8000eb) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P681: !_MEMBAR (FP) (CBR) (Branch target of P166)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET681
nop
RET681:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P682
nop

TARGET166:
ba RET166
nop


P682: !_REPLACEMENT [31] (Int) (CBR) (Branch target of P522)
sethi %hi(0x2000), %o5
ld [%i3+192], %l6
st %l6, [%i3+192]
add %i3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET682
nop
RET682:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P683
nop

TARGET522:
ba RET522
nop


P683: !_MEMBAR (FP)
membar #StoreLoad

P684: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f12
fmovd %f40, %f14

P685: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET685
nop
RET685:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P686: !_ST [19] (maybe <- 0x3f8000ee) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P687: !_MEMBAR (FP) (Secondary ctx)

P688: !_BSTC [25] (maybe <- 0x3f8000ef) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P689: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET689
nop
RET689:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P690: !_ST [25] (maybe <- 0x23) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i3 + 96] %asi
add   %l4, 1, %l4

P691: !_LD [22] (FP)
ld [%i3 + 4], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P692: !_REPLACEMENT [27] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]

P693: !_LD [14] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 64] %asi, %f0
! 1 addresses covered

P694: !_MEMBAR (FP)

P695: !_BST [14] (maybe <- 0x3f8000f1) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P696: !_MEMBAR (FP)
membar #StoreLoad

P697: !_LD [31] (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 192], %l6
! move %l6(lower) -> %o3(lower)
or %l6, %o3, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET697
nop
RET697:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P698: !_LD [22] (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET698
nop
RET698:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P699: !_REPLACEMENT [15] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P700: !_LD [0] (Int) (Loop exit) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i0 + 0] %asi, %l7
! move %l7(lower) -> %o4(lower)
or %l7, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_0_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_0_0
nop

P701: !_MEMBAR (Int) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET701
nop
RET701:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


END_NODES0: ! Test instruction sequence for CPU 0 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func1:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x01deade1), %l3
or    %l3, %lo(0x01deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x800001), %l4
or    %l4, %lo(0x800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x40000001), %l3
or    %l3, %lo(0x40000001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x34800000), %l3
or    %l3, %lo(0x34800000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x9a4^4
sethi %hi(0x9a4), %l0
or    %l0, %lo(0x9a4), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES1: ! Test instruction sequence for ISTREAM 1 begins

P702: !_ST [30] (maybe <- 0x40000001) (FP) (Loop entry) (Nucleus ctx)
sethi %hi(0x7), %l2
or %l2, %lo(0x7),  %l2
loop_entry_1_0:
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 128 ] %asi

P703: !_MEMBAR (FP) (Secondary ctx)

P704: !_BST [28] (maybe <- 0x40000002) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P705: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET705
nop
RET705:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P706: !_REPLACEMENT [5] (Int) (Branch target of P823)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
ba P707
nop

TARGET823:
ba RET823
nop


P707: !_MEMBAR (FP)

P708: !_BST [22] (maybe <- 0x40000003) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P709: !_MEMBAR (FP)
membar #StoreLoad

P710: !_BLD [24] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f0
membar #Sync
! 2 addresses covered
fmovs %f8, %f1

P711: !_MEMBAR (FP)

P712: !_BST [0] (maybe <- 0x40000006) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P713: !_MEMBAR (FP)
membar #StoreLoad

P714: !_REPLACEMENT [2] (Int) (Branch target of P715)
sethi %hi(0x2000), %l6
ld [%i2+8], %o5
st %o5, [%i2+8]
add %i2, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
ba P715
nop

TARGET715:
ba RET715
nop


P715: !_ST [29] (maybe <- 0x4000000b) (FP) (CBR) (Branch target of P818)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET715
nop
RET715:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P716
nop

TARGET818:
ba RET818
nop


P716: !_MEMBAR (FP)

P717: !_BST [20] (maybe <- 0x4000000c) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P718: !_MEMBAR (FP)
membar #StoreLoad

P719: !_LD [30] (Int)
lduw [%i2 + 128], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P720: !_REPLACEMENT [9] (Int) (Branch target of P737)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
ba P721
nop

TARGET737:
ba RET737
nop


P721: !_MEMBAR (FP) (Branch target of P797)
ba P722
nop

TARGET797:
ba RET797
nop


P722: !_BST [19] (maybe <- 0x4000000d) (FP) (Branch target of P726)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P723
nop

TARGET726:
ba RET726
nop


P723: !_MEMBAR (FP)
membar #StoreLoad

P724: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

P725: !_MEMBAR (FP) (CBR) (Branch target of P771)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET725
nop
RET725:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P726
nop

TARGET771:
ba RET771
nop


P726: !_BLD [4] (FP) (CBR) (Branch target of P794)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET726
nop
RET726:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P727
nop

TARGET794:
ba RET794
nop


P727: !_MEMBAR (FP)

P728: !_REPLACEMENT [26] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P729: !_ST [30] (maybe <- 0x4000000e) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 128 ] %asi

P730: !_LD [22] (Int) (Nucleus ctx) (Branch target of P809)
wr %g0, 0x4, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 4] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
ba P731
nop

TARGET809:
ba RET809
nop


P731: !_ST [19] (maybe <- 0x4000000f) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 0 ] %asi

P732: !_REPLACEMENT [28] (Int) (CBR) (Branch target of P761)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET732
nop
RET732:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P733
nop

TARGET761:
ba RET761
nop


P733: !_LD [9] (Int) (LE) (CBR)
wr %g0, 0x88, %asi
lduwa [%i1 + 32] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET733
nop
RET733:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P734: !_PREFETCH [14] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 64], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET734
nop
RET734:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P735: !_ST [4] (maybe <- 0x40000010) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET735
nop
RET735:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P736: !_PREFETCH [2] (Int) (Branch target of P786)
prefetch [%i0 + 8], 1
ba P737
nop

TARGET786:
ba RET786
nop


P737: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET737
nop
RET737:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P738: !_BST [2] (maybe <- 0x40000011) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P739: !_MEMBAR (FP)
membar #StoreLoad

P740: !_LD [5] (Int)
lduw [%i0 + 64], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

P741: !_REPLACEMENT [30] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET741
nop
RET741:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P742: !_IDC_FLIP [4] (Int) (CBR) (Branch target of P815)
IDC_FLIP(742, 23131, 1, 0x43000020, 0x20, %i0, 0x20, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET742
nop
RET742:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P743
nop

TARGET815:
ba RET815
nop


P743: !_ST [12] (maybe <- 0x800001) (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 4] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET743
nop
RET743:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P744: !_ST [11] (maybe <- 0x40000016) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P745: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P746: !_REPLACEMENT [27] (Int)
sethi %hi(0x2000), %l3
ld [%i3+160], %l7
st %l7, [%i3+160]
add %i3, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]

P747: !_MEMBAR (FP)

P748: !_BST [4] (maybe <- 0x40000017) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P749: !_MEMBAR (FP) (Branch target of P830)
membar #StoreLoad
ba P750
nop

TARGET830:
ba RET830
nop


P750: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P751: !_MEMBAR (FP)

P752: !_BST [25] (maybe <- 0x4000001c) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P753: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET753
nop
RET753:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P754: !_REPLACEMENT [24] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P755: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P756: !_LD [24] (Int)
lduw [%i2 + 64], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P757: !_ST [24] (maybe <- 0x800002) (Int) (LE)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %l4, %o5, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %o5, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
stwa   %l7, [%i2 + 64] %asi
add   %l4, 1, %l4

P758: !_LD [4] (FP)
ld [%i0 + 32], %f9
! 1 addresses covered

P759: !_MEMBAR (FP)
membar #StoreLoad

P760: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f10
fmovd %f34, %f12
fmovd %f36, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P761: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET761
nop
RET761:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P762: !_REPLACEMENT [24] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET762
nop
RET762:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P763: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P764: !_BLD [12] (FP) (CBR) (Secondary ctx) (Branch target of P705)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET764
nop
RET764:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P765
nop

TARGET705:
ba RET705
nop


P765: !_MEMBAR (FP) (Secondary ctx)

P766: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P767: !_REPLACEMENT [8] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P768: !_MEMBAR (FP)
membar #StoreLoad

P769: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f2
fmovd %f40, %f4

P770: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET770
nop
RET770:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P771: !_REPLACEMENT [25] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET771
nop
RET771:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P772: !_MEMBAR (FP)

P773: !_BST [33] (maybe <- 0x4000001e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P774: !_MEMBAR (FP)
membar #StoreLoad

P775: !_REPLACEMENT [0] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET775
nop
RET775:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P776: !_REPLACEMENT [29] (Int)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P777: !_REPLACEMENT [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P778: !_ST [5] (maybe <- 0x800003) (Int)
stw   %l4, [%i0 + 64 ]
add   %l4, 1, %l4

P779: !_LD [25] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 96] %asi, %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2

P780: !_REPLACEMENT [29] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P781: !_REPLACEMENT [0] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P782: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P783: !_MEMBAR (FP) (CBR) (Branch target of P783)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET783
nop
RET783:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P784
nop

TARGET783:
ba RET783
nop


P784: !_BST [24] (maybe <- 0x4000001f) (FP) (CBR) (Branch target of P832)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET784
nop
RET784:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P785
nop

TARGET832:
ba RET832
nop


P785: !_MEMBAR (FP)
membar #StoreLoad

P786: !_ST [32] (maybe <- 0x800004) (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 256 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET786
nop
RET786:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P787: !_REPLACEMENT [25] (Int)
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P788: !_ST [23] (maybe <- 0x40000021) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 32 ] %asi

P789: !_MEMBAR (FP)
membar #StoreLoad

P790: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P791: !_MEMBAR (FP)

P792: !_REPLACEMENT [28] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P793: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P770)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET793
nop
RET793:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P794
nop

TARGET770:
ba RET770
nop


P794: !_BST [15] (maybe <- 0x40000022) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET794
nop
RET794:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P795: !_MEMBAR (FP) (Secondary ctx) (Branch target of P743)
membar #StoreLoad
ba P796
nop

TARGET743:
ba RET743
nop


P796: !_IDC_FLIP [0] (Int) (Branch target of P793)
IDC_FLIP(796, 10226, 1, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)
ba P797
nop

TARGET793:
ba RET793
nop


P797: !_MEMBAR (FP) (CBR) (Branch target of P806)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET797
nop
RET797:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P798
nop

TARGET806:
ba RET806
nop


P798: !_BST [14] (maybe <- 0x40000023) (FP) (Branch target of P801)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P799
nop

TARGET801:
ba RET801
nop


P799: !_MEMBAR (FP)
membar #StoreLoad

P800: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P801: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET801
nop
RET801:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P802: !_BST [28] (maybe <- 0x40000024) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P803: !_MEMBAR (FP) (Secondary ctx) (Branch target of P735)
membar #StoreLoad
ba P804
nop

TARGET735:
ba RET735
nop


P804: !_LD [2] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i0 + 8] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P805: !_ST [29] (maybe <- 0x40000025) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 64 ]

P806: !_REPLACEMENT [27] (Int) (CBR) (Secondary ctx) (Branch target of P753)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET806
nop
RET806:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P807
nop

TARGET753:
ba RET753
nop


P807: !_MEMBAR (FP) (Branch target of P732)
membar #StoreLoad
ba P808
nop

TARGET732:
ba RET732
nop


P808: !_BLD [7] (FP) (Branch target of P764)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10
ba P809
nop

TARGET764:
ba RET764
nop


P809: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET809
nop
RET809:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P810: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P811: !_LD [10] (Int)
lduw [%i1 + 64], %o5
! move %o5(lower) -> %o3(lower)
or %o5, %o3, %o3

P812: !_IDC_FLIP [16] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(812, 25914, 1, 0x44800010, 0x10, %i3, 0x10, %l6, %l7, %o5, %l3)

P813: !_MEMBAR (FP)

P814: !_BST [27] (maybe <- 0x40000026) (FP) (Branch target of P741)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P815
nop

TARGET741:
ba RET741
nop


P815: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET815
nop
RET815:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P816: !_REPLACEMENT [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P817: !_ST [7] (maybe <- 0x800005) (Int) (CBR) (Branch target of P742)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET817
nop
RET817:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P818
nop

TARGET742:
ba RET742
nop


P818: !_IDC_FLIP [10] (Int) (CBR)
IDC_FLIP(818, 18994, 1, 0x43800040, 0x40, %i1, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET818
nop
RET818:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P819: !_MEMBAR (FP) (Branch target of P734)
ba P820
nop

TARGET734:
ba RET734
nop


P820: !_BST [20] (maybe <- 0x40000028) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P821: !_MEMBAR (FP)
membar #StoreLoad

P822: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P823: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET823
nop
RET823:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P824: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P825: !_MEMBAR (FP)

P826: !_ST [20] (maybe <- 0x40000029) (FP) (Branch target of P725)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]
ba P827
nop

TARGET725:
ba RET725
nop


P827: !_LD [6] (FP) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 96] %asi, %f14
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET827
nop
RET827:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P828: !_LD [33] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 0] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P829: !_MEMBAR (FP)

P830: !_BST [8] (maybe <- 0x4000002a) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET830
nop
RET830:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P831: !_MEMBAR (FP) (Branch target of P784)
membar #StoreLoad
ba P832
nop

TARGET784:
ba RET784
nop


P832: !_PREFETCH [5] (Int) (CBR)
prefetch [%i0 + 64], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET832
nop
RET832:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P833: !_MEMBAR (FP)

P834: !_BST [1] (maybe <- 0x4000002c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P835: !_MEMBAR (FP) (Branch target of P762)
membar #StoreLoad
ba P836
nop

TARGET762:
ba RET762
nop


P836: !_REPLACEMENT [28] (Int) (Secondary ctx) (Branch target of P733)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P837
nop

TARGET733:
ba RET733
nop


P837: !_LD [21] (Int) (CBR) (Secondary ctx) (Branch target of P817)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 0] %asi, %l6
! move %l6(lower) -> %o4(lower)
or %l6, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET837
nop
RET837:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P838
nop

TARGET817:
ba RET817
nop


P838: !_MEMBAR (FP)

P839: !_BST [16] (maybe <- 0x40000031) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P840: !_MEMBAR (FP)

P841: !_BSTC [14] (maybe <- 0x40000032) (FP) (Branch target of P827)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi
ba P842
nop

TARGET827:
ba RET827
nop


P842: !_MEMBAR (FP)

P843: !_BST [27] (maybe <- 0x40000033) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P844: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P845: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f34, %f18
fmovs %f18, %f1
fmovd %f36, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P846: !_MEMBAR (FP) (Loop exit) (Branch target of P837)
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_1_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_1_0
nop
ba P847
nop

TARGET837:
ba RET837
nop


P847: !_MEMBAR (Int) (Branch target of P775)
membar #StoreLoad
ba END_NODES1
nop

TARGET775:
ba RET775
nop


END_NODES1: ! Test instruction sequence for CPU 1 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func2:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x02deade1), %l3
or    %l3, %lo(0x02deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x1000001), %l4
or    %l4, %lo(0x1000001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x40800001), %l3
or    %l3, %lo(0x40800001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x35000000), %l3
or    %l3, %lo(0x35000000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x4428^4
sethi %hi(0x4428), %l0
or    %l0, %lo(0x4428), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES2: ! Test instruction sequence for ISTREAM 2 begins

P848: !_ST [27] (maybe <- 0x40800001) (FP) (Loop entry) (Secondary ctx)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_2_0:
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 160 ] %asi

P849: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P850: !_MEMBAR (FP)
membar #StoreLoad

P851: !_BLD [14] (FP) (Branch target of P1286)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f0
membar #Sync
! 1 addresses covered
ba P852
nop

TARGET1286:
ba RET1286
nop


P852: !_MEMBAR (FP)

P853: !_LD [8] (Int)
lduw [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P854: !_IDC_FLIP [21] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(854, 1620, 2, 0x45800000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)

P855: !_REPLACEMENT [23] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET855
nop
RET855:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P856: !_LD [22] (Int)
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

P857: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P858: !_BLD [6] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P859: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P998)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET859
nop
RET859:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P860
nop

TARGET998:
ba RET998
nop


P860: !_LD [12] (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f3
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET860
nop
RET860:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P861: !_REPLACEMENT [24] (Int) (Branch target of P1168)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P862
nop

TARGET1168:
ba RET1168
nop


P862: !_LD [28] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f4
! 1 addresses covered

P863: !_MEMBAR (FP)

P864: !_BST [16] (maybe <- 0x40800002) (FP) (Branch target of P1264)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P865
nop

TARGET1264:
ba RET1264
nop


P865: !_MEMBAR (FP)
membar #StoreLoad

P866: !_LD [4] (FP) (Branch target of P1443)
ld [%i0 + 32], %f5
! 1 addresses covered
ba P867
nop

TARGET1443:
ba RET1443
nop


P867: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P868: !_IDC_FLIP [11] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(868, 7757, 2, 0x44000000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)

P869: !_ST [16] (maybe <- 0x1000001) (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 16 ]
add   %l4, 1, %l4

P870: !_MEMBAR (FP) (Secondary ctx)

P871: !_BST [13] (maybe <- 0x40800003) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P872: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P873: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P874: !_MEMBAR (FP)

P875: !_REPLACEMENT [31] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+192], %l6
st %l6, [%i2+192]
add %i2, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]

P876: !_MEMBAR (FP)
membar #StoreLoad

P877: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f34, %f18
fmovs %f18, %f9
fmovd %f36, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P878: !_MEMBAR (FP)

P879: !_ST [8] (maybe <- 0x40800006) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET879
nop
RET879:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P880: !_LD [0] (Int) (Secondary ctx) (Branch target of P908)
wr %g0, 0x81, %asi
lduwa [%i0 + 0] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
ba P881
nop

TARGET908:
ba RET908
nop


P881: !_LD [33] (FP) (CBR)
ld [%i3 + 0], %f12
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET881
nop
RET881:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P882: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET882
nop
RET882:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P883: !_BST [11] (maybe <- 0x40800007) (FP) (Branch target of P1162)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P884
nop

TARGET1162:
ba RET1162
nop


P884: !_MEMBAR (FP)
membar #StoreLoad

P885: !_ST [14] (maybe <- 0x1000002) (Int) (CBR)
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET885
nop
RET885:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P886: !_ST [18] (maybe <- 0x1000003) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P887: !_ST [15] (maybe <- 0x1000004) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i3 + 128] %asi
add   %l4, 1, %l4

P888: !_MEMBAR (FP)
membar #StoreLoad

P889: !_BLD [25] (FP) (Branch target of P1157)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14
ba P890
nop

TARGET1157:
ba RET1157
nop


P890: !_MEMBAR (FP) (Branch target of P1217)
ba P891
nop

TARGET1217:
ba RET1217
nop


P891: !_BSTC [22] (maybe <- 0x4080000a) (FP) (Branch target of P859)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P892
nop

TARGET859:
ba RET859
nop


P892: !_MEMBAR (FP) (Branch target of P976)
membar #StoreLoad
ba P893
nop

TARGET976:
ba RET976
nop


P893: !_ST [19] (maybe <- 0x4080000d) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P894: !_MEMBAR (FP) (CBR) (Branch target of P1323)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET894
nop
RET894:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P895
nop

TARGET1323:
ba RET1323
nop


P895: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P896: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET896
nop
RET896:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P897: !_REPLACEMENT [28] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET897
nop
RET897:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P898: !_MEMBAR (FP)
membar #StoreLoad

P899: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P900: !_MEMBAR (FP)

P901: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P902: !_MEMBAR (FP) (Secondary ctx)

P903: !_BST [15] (maybe <- 0x4080000e) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET903
nop
RET903:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P904: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET904
nop
RET904:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P905: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P906: !_LD [5] (Int) (Nucleus ctx) (Branch target of P1365)
wr %g0, 0x4, %asi
lduwa [%i0 + 64] %asi, %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1
ba P907
nop

TARGET1365:
ba RET1365
nop


P907: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P908: !_REPLACEMENT [14] (Int) (CBR) (Secondary ctx) (Branch target of P904)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET908
nop
RET908:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P909
nop

TARGET904:
ba RET904
nop


P909: !_LD [2] (Int) (Branch target of P1442)
lduw [%i0 + 8], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
ba P910
nop

TARGET1442:
ba RET1442
nop


P910: !_REPLACEMENT [31] (Int)
sethi %hi(0x2000), %l6
ld [%i3+192], %o5
st %o5, [%i3+192]
add %i3, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]

P911: !_MEMBAR (FP) (CBR) (Branch target of P1246)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET911
nop
RET911:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P912
nop

TARGET1246:
ba RET1246
nop


P912: !_BST [23] (maybe <- 0x4080000f) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P913: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET913
nop
RET913:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P914: !_BLD [17] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f2

P915: !_MEMBAR (FP) (Branch target of P1420)
ba P916
nop

TARGET1420:
ba RET1420
nop


P916: !_ST [0] (maybe <- 0x1000005) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i0 + 0] %asi
add   %l4, 1, %l4

P917: !_ST [17] (maybe <- 0x40800012) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 96 ]

P918: !_ST [4] (maybe <- 0x40800013) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]

P919: !_ST [21] (maybe <- 0x40800014) (FP) (Branch target of P881)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 0 ]
ba P920
nop

TARGET881:
ba RET881
nop


P920: !_MEMBAR (FP)
membar #StoreLoad

P921: !_BLD [31] (FP) (Branch target of P1413)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
ba P922
nop

TARGET1413:
ba RET1413
nop


P922: !_MEMBAR (FP)

P923: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f4
fmovd %f34, %f6
fmovd %f36, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P924: !_MEMBAR (FP)

P925: !_REPLACEMENT [27] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]

P926: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P927: !_REPLACEMENT [23] (Int)
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P928: !_MEMBAR (FP)

P929: !_BST [19] (maybe <- 0x40800015) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P930: !_MEMBAR (FP)
membar #StoreLoad

P931: !_LD [29] (Int) (Branch target of P1224)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
ba P932
nop

TARGET1224:
ba RET1224
nop


P932: !_REPLACEMENT [29] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P933: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P934: !_LD [21] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 0] %asi, %f9
! 1 addresses covered

P935: !_MEMBAR (FP)

P936: !_BST [17] (maybe <- 0x40800016) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET936
nop
RET936:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P937: !_MEMBAR (FP)
membar #StoreLoad

P938: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P939: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET939
nop
RET939:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P940: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P941: !_MEMBAR (FP) (Branch target of P946)
ba P942
nop

TARGET946:
ba RET946
nop


P942: !_IDC_FLIP [29] (Int)
IDC_FLIP(942, 17736, 2, 0x46000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P943: !_MEMBAR (FP) (Branch target of P1366)
membar #StoreLoad
ba P944
nop

TARGET1366:
ba RET1366
nop


P944: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P945: !_MEMBAR (FP)

P946: !_BLD [23] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET946
nop
RET946:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P947: !_MEMBAR (FP)

P948: !_REPLACEMENT [31] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+192], %l3
st %l3, [%i3+192]
add %i3, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]

P949: !_MEMBAR (FP) (Secondary ctx)

P950: !_BST [5] (maybe <- 0x40800017) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P951: !_MEMBAR (FP) (Secondary ctx)

P952: !_BST [1] (maybe <- 0x40800019) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET952
nop
RET952:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P953: !_MEMBAR (FP)
membar #StoreLoad

P954: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P955: !_ST [7] (maybe <- 0x1000006) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P956: !_MEMBAR (FP)

P957: !_BST [29] (maybe <- 0x4080001e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P958: !_MEMBAR (FP)
membar #StoreLoad

P959: !_REPLACEMENT [5] (Int) (Branch target of P896)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P960
nop

TARGET896:
ba RET896
nop


P960: !_MEMBAR (FP) (Secondary ctx) (Branch target of P855)
ba P961
nop

TARGET855:
ba RET855
nop


P961: !_BST [23] (maybe <- 0x4080001f) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P962: !_MEMBAR (FP) (Secondary ctx) (Branch target of P1208)
ba P963
nop

TARGET1208:
ba RET1208
nop


P963: !_BST [15] (maybe <- 0x40800022) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P964: !_MEMBAR (FP) (Branch target of P1102)
ba P965
nop

TARGET1102:
ba RET1102
nop


P965: !_BST [0] (maybe <- 0x40800023) (FP) (Branch target of P911)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P966
nop

TARGET911:
ba RET911
nop


P966: !_MEMBAR (FP)
membar #StoreLoad

P967: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P968: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET968
nop
RET968:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P969: !_ST [31] (maybe <- 0x40800028) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 192 ]

P970: !_MEMBAR (FP)

P971: !_BST [31] (maybe <- 0x40800029) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET971
nop
RET971:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P972: !_MEMBAR (FP)
membar #StoreLoad

P973: !_LD [0] (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 0] %asi, %f3
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET973
nop
RET973:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P974: !_REPLACEMENT [25] (Int) (Branch target of P1335)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
ba P975
nop

TARGET1335:
ba RET1335
nop


P975: !_REPLACEMENT [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P976: !_REPLACEMENT [5] (Int) (CBR) (Branch target of P1252)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET976
nop
RET976:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P977
nop

TARGET1252:
ba RET1252
nop


P977: !_ST [28] (maybe <- 0x4080002a) (FP) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET977
nop
RET977:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P978: !_MEMBAR (FP) (Secondary ctx) (Branch target of P1243)
ba P979
nop

TARGET1243:
ba RET1243
nop


P979: !_BST [32] (maybe <- 0x4080002b) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P980: !_MEMBAR (FP) (Secondary ctx) (Branch target of P894)
membar #StoreLoad
ba P981
nop

TARGET894:
ba RET894
nop


P981: !_LD [5] (Int)
lduw [%i0 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P982: !_ST [9] (maybe <- 0x1000007) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i1 + 32] %asi
add   %l4, 1, %l4

P983: !_MEMBAR (FP)

P984: !_BSTC [18] (maybe <- 0x4080002c) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P985: !_MEMBAR (FP)
membar #StoreLoad

P986: !_REPLACEMENT [16] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P987: !_MEMBAR (FP)
membar #StoreLoad

P988: !_BLD [17] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET988
nop
RET988:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P989: !_MEMBAR (FP)

P990: !_IDC_FLIP [24] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(990, 19136, 2, 0x45800040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P991: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %l6
ld [%i2+8], %o5
st %o5, [%i2+8]
add %i2, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P992: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET992
nop
RET992:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P993: !_BST [0] (maybe <- 0x4080002d) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET993
nop
RET993:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P994: !_MEMBAR (FP)
membar #StoreLoad

P995: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P996: !_ST [30] (maybe <- 0x40800032) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P997: !_MEMBAR (FP)

P998: !_BST [9] (maybe <- 0x40800033) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET998
nop
RET998:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P999: !_MEMBAR (FP)
membar #StoreLoad

P1000: !_LD [4] (Int) (CBR)
lduw [%i0 + 32], %l3
! move %l3(lower) -> %o3(lower)
or %l3, %o3, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1000
nop
RET1000:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1001: !_LD [8] (FP)
ld [%i1 + 0], %f5
! 1 addresses covered

P1002: !_ST [26] (maybe <- 0x1000008) (Int) (Branch target of P1376)
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4
ba P1003
nop

TARGET1376:
ba RET1376
nop


P1003: !_REPLACEMENT [26] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1004: !_LD [33] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 0], %f6
! 1 addresses covered

P1005: !_LD [11] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 0], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P1006: !_ST [17] (maybe <- 0x1000009) (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4

P1007: !_IDC_FLIP [1] (Int) (Branch target of P1396)
IDC_FLIP(1007, 30724, 2, 0x43000004, 0x4, %i0, 0x4, %l6, %l7, %o5, %l3)
ba P1008
nop

TARGET1396:
ba RET1396
nop


P1008: !_MEMBAR (FP)
membar #StoreLoad

P1009: !_BLD [20] (FP) (Branch target of P1402)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
ba P1010
nop

TARGET1402:
ba RET1402
nop


P1010: !_MEMBAR (FP)

P1011: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P1012: !_MEMBAR (FP)

P1013: !_REPLACEMENT [14] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1013
nop
RET1013:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1014: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1014
nop
RET1014:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1015: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P1016: !_MEMBAR (FP)

P1017: !_BST [22] (maybe <- 0x40800035) (FP) (CBR) (Secondary ctx) (Branch target of P1205)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1017
nop
RET1017:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1018
nop

TARGET1205:
ba RET1205
nop


P1018: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1019: !_LD [18] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 128], %o5
! move %o5(lower) -> %o4(lower)
or %o5, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P1020: !_REPLACEMENT [22] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1021: !_MEMBAR (FP) (Branch target of P1014)
ba P1022
nop

TARGET1014:
ba RET1014
nop


P1022: !_BST [2] (maybe <- 0x40800038) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1023: !_MEMBAR (FP)
membar #StoreLoad

P1024: !_REPLACEMENT [9] (Int) (CBR) (Branch target of P936)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1024
nop
RET1024:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1025
nop

TARGET936:
ba RET936
nop


P1025: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P1026: !_ST [10] (maybe <- 0x4080003d) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 64 ]

P1027: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1028: !_ST [14] (maybe <- 0x100000a) (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stwa   %l4, [%i2 + 64] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1028
nop
RET1028:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1029: !_ST [2] (maybe <- 0x100000b) (Int) (Branch target of P977)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4
ba P1030
nop

TARGET977:
ba RET977
nop


P1030: !_REPLACEMENT [13] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1030
nop
RET1030:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1031: !_MEMBAR (FP)
membar #StoreLoad

P1032: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P1033: !_MEMBAR (FP)

P1034: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P1035: !_IDC_FLIP [22] (Int) (Branch target of P1401)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(1035, 22299, 2, 0x45800004, 0x4, %i3, 0x4, %l6, %l7, %o5, %l3)
ba P1036
nop

TARGET1401:
ba RET1401
nop


P1036: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1036
nop
RET1036:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1037: !_BST [24] (maybe <- 0x4080003e) (FP) (CBR) (Branch target of P1040)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1037
nop
RET1037:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1038
nop

TARGET1040:
ba RET1040
nop


P1038: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1038
nop
RET1038:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1039: !_ST [0] (maybe <- 0x40800040) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 0 ] %asi

P1040: !_REPLACEMENT [6] (Int) (CBR) (Branch target of P1121)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1040
nop
RET1040:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1041
nop

TARGET1121:
ba RET1121
nop


P1041: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P1042: !_MEMBAR (FP)

P1043: !_BST [4] (maybe <- 0x40800041) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1044: !_MEMBAR (FP)
membar #StoreLoad

P1045: !_BLD [1] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f34, %f0
fmovd %f36, %f18
fmovs %f18, %f1
fmovd %f40, %f2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1045
nop
RET1045:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1046: !_MEMBAR (FP) (Branch target of P1381)
ba P1047
nop

TARGET1381:
ba RET1381
nop


P1047: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1048: !_REPLACEMENT [26] (Int) (Branch target of P903)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P1049
nop

TARGET903:
ba RET903
nop


P1049: !_REPLACEMENT [8] (Int) (Branch target of P1429)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P1050
nop

TARGET1429:
ba RET1429
nop


P1050: !_REPLACEMENT [14] (Int)
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P1051: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1051
nop
RET1051:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1052: !_BLD [16] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f3

P1053: !_MEMBAR (FP)

P1054: !_REPLACEMENT [18] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1054
nop
RET1054:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1055: !_IDC_FLIP [28] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(1055, 20316, 2, 0x46000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

P1056: !_LD [26] (FP) (Secondary ctx) (Branch target of P1127)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 128] %asi, %f4
! 1 addresses covered
ba P1057
nop

TARGET1127:
ba RET1127
nop


P1057: !_LD [29] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i2 + 64] %asi, %f5
! 1 addresses covered

P1058: !_MEMBAR (FP) (Secondary ctx) (Branch target of P992)
membar #StoreLoad
ba P1059
nop

TARGET992:
ba RET992
nop


P1059: !_BLD [14] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P1060: !_MEMBAR (FP) (Secondary ctx)

P1061: !_LD [17] (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 96] %asi, %f7
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1061
nop
RET1061:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1062: !_MEMBAR (FP)

P1063: !_BST [29] (maybe <- 0x40800046) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P1064: !_MEMBAR (FP)
membar #StoreLoad

P1065: !_ST [33] (maybe <- 0x40800047) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 0 ]

P1066: !_IDC_FLIP [3] (Int) (Branch target of P1390)
IDC_FLIP(1066, 4106, 2, 0x43000010, 0x10, %i0, 0x10, %l6, %l7, %o5, %l3)
ba P1067
nop

TARGET1390:
ba RET1390
nop


P1067: !_REPLACEMENT [16] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P1068: !_LD [12] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1069: !_MEMBAR (FP)
membar #StoreLoad

P1070: !_BLD [8] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f8
fmovd %f40, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1070
nop
RET1070:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1071: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1071
nop
RET1071:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1072: !_ST [17] (maybe <- 0x100000c) (Int) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1072
nop
RET1072:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1073: !_MEMBAR (FP)
membar #StoreLoad

P1074: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P1075: !_MEMBAR (FP)

P1076: !_REPLACEMENT [18] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1076
nop
RET1076:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1077: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P1078: !_LD [7] (Int)
lduw [%i0 + 128], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

P1079: !_MEMBAR (FP)
membar #StoreLoad

P1080: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P1081: !_MEMBAR (FP)

P1082: !_ST [5] (maybe <- 0x100000d) (Int) (CBR)
stw   %l4, [%i0 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1082
nop
RET1082:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1083: !_MEMBAR (FP)

P1084: !_BST [3] (maybe <- 0x40800048) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1085: !_MEMBAR (FP)
membar #StoreLoad

P1086: !_LD [19] (FP) (Secondary ctx) (Branch target of P968)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 0] %asi, %f14
! 1 addresses covered
ba P1087
nop

TARGET968:
ba RET968
nop


P1087: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P1088: !_LD [18] (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 128], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P1089: !_ST [27] (maybe <- 0x4080004d) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 160 ]

P1090: !_REPLACEMENT [21] (Int) (Nucleus ctx) (Branch target of P1038)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P1091
nop

TARGET1038:
ba RET1038
nop


P1091: !_REPLACEMENT [16] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P1092: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1093: !_MEMBAR (FP)
membar #StoreLoad

P1094: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P1095: !_MEMBAR (FP)

P1096: !_REPLACEMENT [24] (Int) (Secondary ctx) (Branch target of P882)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P1097
nop

TARGET882:
ba RET882
nop


P1097: !_REPLACEMENT [30] (Int)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P1098: !_ST [25] (maybe <- 0x100000e) (Int) (Branch target of P1000)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4
ba P1099
nop

TARGET1000:
ba RET1000
nop


P1099: !_MEMBAR (FP) (Secondary ctx)

P1100: !_BST [29] (maybe <- 0x4080004e) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P1101: !_MEMBAR (FP) (Secondary ctx)

P1102: !_BST [15] (maybe <- 0x4080004f) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1102
nop
RET1102:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1103: !_MEMBAR (FP) (Branch target of P1037)
membar #StoreLoad
ba P1104
nop

TARGET1037:
ba RET1037
nop


P1104: !_LD [11] (Int)
lduw [%i2 + 0], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1

P1105: !_REPLACEMENT [0] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1106: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P1107: !_MEMBAR (FP)
membar #StoreLoad

P1108: !_BLD [8] (FP) (Branch target of P952)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3
ba P1109
nop

TARGET952:
ba RET952
nop


P1109: !_MEMBAR (FP) (Branch target of P1128)
ba P1110
nop

TARGET1128:
ba RET1128
nop


P1110: !_LD [6] (FP)
ld [%i0 + 96], %f4
! 1 addresses covered

P1111: !_MEMBAR (FP) (Secondary ctx)

P1112: !_BST [25] (maybe <- 0x40800050) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P1113: !_MEMBAR (FP) (Secondary ctx)

P1114: !_BST [23] (maybe <- 0x40800052) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1115: !_MEMBAR (FP) (Branch target of P1301)
ba P1116
nop

TARGET1301:
ba RET1301
nop


P1116: !_BST [8] (maybe <- 0x40800055) (FP) (Branch target of P1311)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P1117
nop

TARGET1311:
ba RET1311
nop


P1117: !_MEMBAR (FP)
membar #StoreLoad

P1118: !_BLD [7] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1118
nop
RET1118:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1119: !_MEMBAR (FP)

P1120: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1121: !_REPLACEMENT [28] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1121
nop
RET1121:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1122: !_LD [4] (Int)
lduw [%i0 + 32], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P1123: !_MEMBAR (FP)
membar #StoreLoad

P1124: !_BLD [17] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f6

P1125: !_MEMBAR (FP)

P1126: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f34, %f18
fmovs %f18, %f9
fmovd %f36, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P1127: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1127
nop
RET1127:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1128: !_REPLACEMENT [20] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+256], %l3
st %l3, [%i2+256]
add %i2, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1128
nop
RET1128:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1129: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1130: !_LD [2] (FP)
ld [%i0 + 8], %f12
! 1 addresses covered

P1131: !_MEMBAR (FP)

P1132: !_BST [29] (maybe <- 0x40800057) (FP) (CBR) (Branch target of P1160)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1132
nop
RET1132:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1133
nop

TARGET1160:
ba RET1160
nop


P1133: !_MEMBAR (FP)
membar #StoreLoad

P1134: !_REPLACEMENT [15] (Int) (Secondary ctx) (Branch target of P1071)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P1135
nop

TARGET1071:
ba RET1071
nop


P1135: !_LD [9] (Int) (LE) (Branch target of P1177)
wr %g0, 0x88, %asi
lduwa [%i1 + 32] %asi, %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2
ba P1136
nop

TARGET1177:
ba RET1177
nop


P1136: !_REPLACEMENT [13] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1136
nop
RET1136:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1137: !_IDC_FLIP [10] (Int)
IDC_FLIP(1137, 13258, 2, 0x43800040, 0x40, %i1, 0x40, %l6, %l7, %o5, %l3)

P1138: !_ST [27] (maybe <- 0x40800058) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 160 ]

P1139: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1139
nop
RET1139:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1140: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f34, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f36, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P1141: !_MEMBAR (FP)

P1142: !_ST [12] (maybe <- 0x100000f) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P1143: !_MEMBAR (FP)
membar #StoreLoad

P1144: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P1145: !_MEMBAR (FP)

P1146: !_BST [23] (maybe <- 0x40800059) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1147: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1148: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f4
fmovd %f40, %f6

P1149: !_MEMBAR (FP) (Branch target of P973)
ba P1150
nop

TARGET973:
ba RET973
nop


P1150: !_LD [18] (Int) (Branch target of P1036)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 128], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3
ba P1151
nop

TARGET1036:
ba RET1036
nop


P1151: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P1152: !_MEMBAR (FP)
membar #StoreLoad

P1153: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P1154: !_MEMBAR (FP)

P1155: !_REPLACEMENT [20] (Int) (CBR) (Branch target of P1045)
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1155
nop
RET1155:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1156
nop

TARGET1045:
ba RET1045
nop


P1156: !_LD [8] (Int)
lduw [%i1 + 0], %l6
! move %l6(lower) -> %o3(lower)
or %l6, %o3, %o3

P1157: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1157
nop
RET1157:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1158: !_BST [24] (maybe <- 0x4080005c) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P1159: !_MEMBAR (FP)
membar #StoreLoad

P1160: !_REPLACEMENT [10] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1160
nop
RET1160:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1161: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1162: !_IDC_FLIP [30] (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(1162, 25155, 2, 0x46000080, 0x80, %i3, 0x80, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1162
nop
RET1162:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1163: !_LD [32] (Int)
lduw [%i3 + 256], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P1164: !_REPLACEMENT [20] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+256], %l7
st %l7, [%i2+256]
add %i2, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P1165: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1166: !_BLD [33] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P1167: !_MEMBAR (FP) (Secondary ctx)

P1168: !_REPLACEMENT [26] (Int) (CBR) (Nucleus ctx) (Branch target of P939)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1168
nop
RET1168:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1169
nop

TARGET939:
ba RET939
nop


P1169: !_ST [16] (maybe <- 0x1000010) (Int)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 16 ]
add   %l4, 1, %l4

P1170: !_MEMBAR (FP)
membar #StoreLoad

P1171: !_BLD [23] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P1172: !_MEMBAR (FP)

P1173: !_PREFETCH [4] (Int) (Branch target of P1379)
prefetch [%i0 + 32], 1
ba P1174
nop

TARGET1379:
ba RET1379
nop


P1174: !_IDC_FLIP [23] (Int) (Branch target of P1395)
IDC_FLIP(1174, 150, 2, 0x45800020, 0x20, %i3, 0x20, %l6, %l7, %o5, %l3)
ba P1175
nop

TARGET1395:
ba RET1395
nop


P1175: !_REPLACEMENT [20] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P1176: !_REPLACEMENT [20] (Int) (Secondary ctx) (Branch target of P1425)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+256], %l7
st %l7, [%i2+256]
add %i2, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
ba P1177
nop

TARGET1425:
ba RET1425
nop


P1177: !_IDC_FLIP [6] (Int) (CBR)
IDC_FLIP(1177, 30381, 2, 0x43000060, 0x60, %i0, 0x60, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1177
nop
RET1177:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1178: !_REPLACEMENT [11] (Int) (Branch target of P1118)
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
ba P1179
nop

TARGET1118:
ba RET1118
nop


P1179: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1180: !_ST [29] (maybe <- 0x4080005e) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 64 ] %asi

P1181: !_LD [24] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P1182: !_LD [10] (Int)
lduw [%i1 + 64], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1183: !_MEMBAR (FP)
membar #StoreLoad

P1184: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P1185: !_MEMBAR (FP)

P1186: !_REPLACEMENT [23] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1187: !_ST [30] (maybe <- 0x4080005f) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P1188: !_LD [29] (FP)
ld [%i3 + 64], %f13
! 1 addresses covered

P1189: !_MEMBAR (FP)
membar #StoreLoad

P1190: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P1191: !_MEMBAR (FP) (Branch target of P1272)
ba P1192
nop

TARGET1272:
ba RET1272
nop


P1192: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P1193: !_MEMBAR (FP)

P1194: !_ST [8] (maybe <- 0x1000011) (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i1 + 0] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1194
nop
RET1194:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1195: !_REPLACEMENT [31] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+192], %o5
st %o5, [%i3+192]
add %i3, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]

P1196: !_MEMBAR (FP)

P1197: !_BST [19] (maybe <- 0x40800060) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1198: !_MEMBAR (FP) (Branch target of P879)
membar #StoreLoad
ba P1199
nop

TARGET879:
ba RET879
nop


P1199: !_IDC_FLIP [4] (Int)
IDC_FLIP(1199, 28495, 2, 0x43000020, 0x20, %i0, 0x20, %l6, %l7, %o5, %l3)

P1200: !_LD [10] (Int)
lduw [%i1 + 64], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

P1201: !_REPLACEMENT [7] (Int) (Branch target of P1329)
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
ba P1202
nop

TARGET1329:
ba RET1329
nop


P1202: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1202
nop
RET1202:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1203: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P1204: !_MEMBAR (FP)

P1205: !_BST [0] (maybe <- 0x40800061) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1205
nop
RET1205:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1206: !_MEMBAR (FP) (Branch target of P1309)
membar #StoreLoad
ba P1207
nop

TARGET1309:
ba RET1309
nop


P1207: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P1208: !_ST [9] (maybe <- 0x40800066) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1208
nop
RET1208:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1209: !_LD [9] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i1 + 32] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P1210: !_LD [23] (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 32], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1210
nop
RET1210:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1211: !_MEMBAR (FP) (CBR) (Branch target of P897)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1211
nop
RET1211:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1212
nop

TARGET897:
ba RET897
nop


P1212: !_BST [28] (maybe <- 0x40800067) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1212
nop
RET1212:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1213: !_MEMBAR (FP)
membar #StoreLoad

P1214: !_REPLACEMENT [0] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1215: !_REPLACEMENT [5] (Int) (Nucleus ctx) (Branch target of P1430)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
ba P1216
nop

TARGET1430:
ba RET1430
nop


P1216: !_LD [19] (FP) (Branch target of P1013)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f4
! 1 addresses covered
ba P1217
nop

TARGET1013:
ba RET1013
nop


P1217: !_ST [23] (maybe <- 0x1000012) (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 32] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1217
nop
RET1217:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1218: !_REPLACEMENT [24] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P1219: !_LD [20] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 256], %f5
! 1 addresses covered

P1220: !_ST [4] (maybe <- 0x40800068) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]

P1221: !_ST [18] (maybe <- 0x40800069) (FP)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P1222: !_MEMBAR (FP)

P1223: !_BST [29] (maybe <- 0x4080006a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P1224: !_MEMBAR (FP) (CBR) (Branch target of P1330)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1224
nop
RET1224:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1225
nop

TARGET1330:
ba RET1330
nop


P1225: !_BST [13] (maybe <- 0x4080006b) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1226: !_MEMBAR (FP) (Secondary ctx) (Branch target of P1248)
membar #StoreLoad
ba P1227
nop

TARGET1248:
ba RET1248
nop


P1227: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P1228: !_MEMBAR (FP)

P1229: !_ST [18] (maybe <- 0x4080006e) (FP) (CBR)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1229
nop
RET1229:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1230: !_MEMBAR (FP)

P1231: !_BST [1] (maybe <- 0x4080006f) (FP) (Branch target of P1028)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P1232
nop

TARGET1028:
ba RET1028
nop


P1232: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1232
nop
RET1232:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1233: !_ST [27] (maybe <- 0x40800074) (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 160 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1233
nop
RET1233:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1234: !_REPLACEMENT [9] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1235: !_ST [30] (maybe <- 0x40800075) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P1236: !_MEMBAR (FP)

P1237: !_BST [1] (maybe <- 0x40800076) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1238: !_MEMBAR (FP)
membar #StoreLoad

P1239: !_REPLACEMENT [20] (Int) (Branch target of P1285)
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
ba P1240
nop

TARGET1285:
ba RET1285
nop


P1240: !_LD [19] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 0] %asi, %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P1241: !_REPLACEMENT [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P1242: !_REPLACEMENT [12] (Int) (Secondary ctx) (Branch target of P1054)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
ba P1243
nop

TARGET1054:
ba RET1054
nop


P1243: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1243
nop
RET1243:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1244: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P1245: !_MEMBAR (FP)

P1246: !_LD [8] (Int) (CBR) (Branch target of P971)
lduw [%i1 + 0], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1246
nop
RET1246:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1247
nop

TARGET971:
ba RET971
nop


P1247: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1247
nop
RET1247:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1248: !_BLD [17] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1248
nop
RET1248:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1249: !_MEMBAR (FP)

P1250: !_ST [12] (maybe <- 0x4080007b) (FP) (Nucleus ctx) (Branch target of P1136)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 4 ] %asi
ba P1251
nop

TARGET1136:
ba RET1136
nop


P1251: !_LD [18] (Int)
lduw [%i2 + 128], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P1252: !_IDC_FLIP [25] (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(1252, 8767, 2, 0x45800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1252
nop
RET1252:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1253: !_LD [2] (Int)
lduw [%i0 + 8], %o5
! move %o5(lower) -> %o3(lower)
or %o5, %o3, %o3

P1254: !_MEMBAR (FP)

P1255: !_BST [16] (maybe <- 0x4080007c) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P1256: !_MEMBAR (FP) (Branch target of P1229)
membar #StoreLoad
ba P1257
nop

TARGET1229:
ba RET1229
nop


P1257: !_LD [14] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1257
nop
RET1257:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1258: !_MEMBAR (FP) (Branch target of P1378)
membar #StoreLoad
ba P1259
nop

TARGET1378:
ba RET1378
nop


P1259: !_BLD [15] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P1260: !_MEMBAR (FP)

P1261: !_LD [17] (Int)
lduw [%i3 + 96], %o5
! move %o5(lower) -> %o4(lower)
or %o5, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P1262: !_REPLACEMENT [19] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1263: !_ST [21] (maybe <- 0x1000013) (Int) (Branch target of P1350)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4
ba P1264
nop

TARGET1350:
ba RET1350
nop


P1264: !_MEMBAR (FP) (CBR) (Branch target of P988)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1264
nop
RET1264:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1265
nop

TARGET988:
ba RET988
nop


P1265: !_BSTC [2] (maybe <- 0x4080007d) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1266: !_MEMBAR (FP)
membar #StoreLoad

P1267: !_LD [8] (Int)
lduw [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1268: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1269: !_BLD [3] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P1270: !_MEMBAR (FP) (Secondary ctx)

P1271: !_ST [21] (maybe <- 0x40800082) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 0 ] %asi

P1272: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1272
nop
RET1272:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1273: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f0
membar #Sync
! 5 addresses covered
fmovs %f4, %f3
fmovd %f8, %f4

P1274: !_MEMBAR (FP) (Branch target of P1393)
ba P1275
nop

TARGET1393:
ba RET1393
nop


P1275: !_LD [18] (FP)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 128], %f5
! 1 addresses covered

P1276: !_LD [30] (Int) (Nucleus ctx) (Branch target of P1202)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 128] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
ba P1277
nop

TARGET1202:
ba RET1202
nop


P1277: !_ST [4] (maybe <- 0x40800083) (FP) (Branch target of P1017)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]
ba P1278
nop

TARGET1017:
ba RET1017
nop


P1278: !_LD [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i2 + 64] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P1279: !_MEMBAR (FP)

P1280: !_BST [19] (maybe <- 0x40800084) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P1281: !_MEMBAR (FP)
membar #StoreLoad

P1282: !_LD [8] (FP) (Branch target of P1305)
ld [%i1 + 0], %f6
! 1 addresses covered
ba P1283
nop

TARGET1305:
ba RET1305
nop


P1283: !_LD [14] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1

P1284: !_IDC_FLIP [17] (Int) (Branch target of P1132)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(1284, 32481, 2, 0x44800060, 0x60, %i3, 0x60, %l6, %l7, %o5, %l3)
ba P1285
nop

TARGET1132:
ba RET1132
nop


P1285: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1285
nop
RET1285:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1286: !_BST [14] (maybe <- 0x40800085) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1286
nop
RET1286:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1287: !_MEMBAR (FP)
membar #StoreLoad

P1288: !_ST [13] (maybe <- 0x1000014) (Int)
stw   %l4, [%i2 + 32 ]
add   %l4, 1, %l4

P1289: !_MEMBAR (FP)
membar #StoreLoad

P1290: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P1291: !_MEMBAR (FP)

P1292: !_REPLACEMENT [12] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P1293: !_REPLACEMENT [28] (Int)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1294: !_MEMBAR (FP)

P1295: !_BST [17] (maybe <- 0x40800086) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P1296: !_MEMBAR (FP)

P1297: !_BSTC [10] (maybe <- 0x40800087) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P1298: !_MEMBAR (FP)
membar #StoreLoad

P1299: !_IDC_FLIP [20] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(1299, 20531, 2, 0x45000100, 0x100, %i2, 0x100, %l6, %l7, %o5, %l3)

P1300: !_LD [14] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 64], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P1301: !_REPLACEMENT [3] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1301
nop
RET1301:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1302: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1303: !_BLD [15] (FP) (Secondary ctx) (Branch target of P1155)
wr %g0, 0xf1, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10
ba P1304
nop

TARGET1155:
ba RET1155
nop


P1304: !_MEMBAR (FP) (Secondary ctx) (Branch target of P1072)
ba P1305
nop

TARGET1072:
ba RET1072
nop


P1305: !_BLD [16] (FP) (CBR) (Branch target of P1380)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f11

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1305
nop
RET1305:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1306
nop

TARGET1380:
ba RET1380
nop


P1306: !_MEMBAR (FP)

P1307: !_REPLACEMENT [6] (Int) (Secondary ctx) (Branch target of P1419)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
ba P1308
nop

TARGET1419:
ba RET1419
nop


P1308: !_LD [14] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 64], %f12
! 1 addresses covered

P1309: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1309
nop
RET1309:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1310: !_BST [33] (maybe <- 0x40800088) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P1311: !_MEMBAR (FP) (CBR) (Branch target of P1409)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1311
nop
RET1311:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1312
nop

TARGET1409:
ba RET1409
nop


P1312: !_IDC_FLIP [0] (Int)
IDC_FLIP(1312, 19991, 2, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P1313: !_REPLACEMENT [3] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P1314: !_ST [32] (maybe <- 0x1000015) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 256] %asi
add   %l4, 1, %l4

P1315: !_REPLACEMENT [19] (Int) (Branch target of P1024)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
ba P1316
nop

TARGET1024:
ba RET1024
nop


P1316: !_MEMBAR (FP) (Branch target of P1061)
membar #StoreLoad
ba P1317
nop

TARGET1061:
ba RET1061
nop


P1317: !_BLD [10] (FP) (Branch target of P1233)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
ba P1318
nop

TARGET1233:
ba RET1233
nop


P1318: !_MEMBAR (FP)

P1319: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P1320: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P1321: !_ST [14] (maybe <- 0x40800089) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 64 ] %asi

P1322: !_MEMBAR (FP)

P1323: !_BST [21] (maybe <- 0x4080008a) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1323
nop
RET1323:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1324: !_MEMBAR (FP)
membar #StoreLoad

P1325: !_REPLACEMENT [1] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P1326: !_LD [28] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 0], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2

P1327: !_REPLACEMENT [30] (Int) (Branch target of P1212)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
ba P1328
nop

TARGET1212:
ba RET1212
nop


P1328: !_MEMBAR (FP)
membar #StoreLoad

P1329: !_BLD [2] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f34, %f0
fmovd %f36, %f18
fmovs %f18, %f1
fmovd %f40, %f2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1329
nop
RET1329:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1330: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1330
nop
RET1330:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1331: !_BST [25] (maybe <- 0x4080008d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P1332: !_MEMBAR (FP)
membar #StoreLoad

P1333: !_LD [17] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 96], %f3
! 1 addresses covered

P1334: !_REPLACEMENT [18] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P1335: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1335
nop
RET1335:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1336: !_BST [8] (maybe <- 0x4080008f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P1337: !_MEMBAR (FP)

P1338: !_BSTC [0] (maybe <- 0x40800091) (FP) (Branch target of P1418)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P1339
nop

TARGET1418:
ba RET1418
nop


P1339: !_MEMBAR (FP)
membar #StoreLoad

P1340: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f4
fmovd %f34, %f6
fmovd %f36, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P1341: !_MEMBAR (FP) (Branch target of P1070)
ba P1342
nop

TARGET1070:
ba RET1070
nop


P1342: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1343: !_REPLACEMENT [3] (Int)
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P1344: !_REPLACEMENT [13] (Int) (Branch target of P885)
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
ba P1345
nop

TARGET885:
ba RET885
nop


P1345: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P1346: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %l7
ld [%i2+8], %l3
st %l3, [%i2+8]
add %i2, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

P1347: !_MEMBAR (FP)

P1348: !_BST [15] (maybe <- 0x40800096) (FP) (Branch target of P1423)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi
ba P1349
nop

TARGET1423:
ba RET1423
nop


P1349: !_MEMBAR (FP)
membar #StoreLoad

P1350: !_REPLACEMENT [13] (Int) (CBR) (Branch target of P1082)
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1350
nop
RET1350:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1351
nop

TARGET1082:
ba RET1082
nop


P1351: !_MEMBAR (FP) (Branch target of P1247)
ba P1352
nop

TARGET1247:
ba RET1247
nop


P1352: !_BST [3] (maybe <- 0x40800097) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1353: !_MEMBAR (FP)
membar #StoreLoad

P1354: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P1355: !_REPLACEMENT [31] (Int)
sethi %hi(0x2000), %l7
ld [%i2+192], %l3
st %l3, [%i2+192]
add %i2, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]

P1356: !_LD [1] (FP)
ld [%i0 + 4], %f9
! 1 addresses covered

P1357: !_IDC_FLIP [14] (Int)
IDC_FLIP(1357, 29966, 2, 0x44000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P1358: !_REPLACEMENT [32] (Int) (Branch target of P860)
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
ba P1359
nop

TARGET860:
ba RET860
nop


P1359: !_MEMBAR (FP) (Secondary ctx)

P1360: !_BST [30] (maybe <- 0x4080009c) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P1361: !_MEMBAR (FP) (Secondary ctx)

P1362: !_BST [14] (maybe <- 0x4080009d) (FP) (Secondary ctx) (Branch target of P1431)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P1363
nop

TARGET1431:
ba RET1431
nop


P1363: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1364: !_REPLACEMENT [7] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P1365: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1365
nop
RET1365:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1366: !_BST [15] (maybe <- 0x4080009e) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1366
nop
RET1366:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1367: !_MEMBAR (FP)
membar #StoreLoad

P1368: !_REPLACEMENT [24] (Int)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P1369: !_LD [13] (FP) (Branch target of P1392)
ld [%i2 + 32], %f10
! 1 addresses covered
ba P1370
nop

TARGET1392:
ba RET1392
nop


P1370: !_LD [1] (FP)
ld [%i0 + 4], %f11
! 1 addresses covered

P1371: !_LD [28] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 0], %f12
! 1 addresses covered

P1372: !_MEMBAR (FP)

P1373: !_BST [31] (maybe <- 0x4080009f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P1374: !_MEMBAR (FP) (Branch target of P1051)
membar #StoreLoad
ba P1375
nop

TARGET1051:
ba RET1051
nop


P1375: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P1376: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1376
nop
RET1376:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1377: !_REPLACEMENT [13] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P1378: !_REPLACEMENT [26] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1378
nop
RET1378:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1379: !_REPLACEMENT [33] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1379
nop
RET1379:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1380: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1380
nop
RET1380:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1381: !_BST [21] (maybe <- 0x408000a0) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1381
nop
RET1381:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1382: !_MEMBAR (FP) (Secondary ctx)

P1383: !_BSTC [20] (maybe <- 0x408000a3) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P1384: !_MEMBAR (FP)
membar #StoreLoad

P1385: !_ST [1] (maybe <- 0x1000016) (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i0 + 4] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1385
nop
RET1385:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1386: !_REPLACEMENT [9] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P1387: !_LD [26] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 128], %f14
! 1 addresses covered

P1388: !_IDC_FLIP [19] (Int) (Branch target of P1030)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(1388, 19390, 2, 0x45000000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)
ba P1389
nop

TARGET1030:
ba RET1030
nop


P1389: !_LD [10] (Int)
lduw [%i1 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P1390: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1390
nop
RET1390:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1391: !_BLD [27] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P1392: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1392
nop
RET1392:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1393: !_REPLACEMENT [12] (Int) (CBR) (Branch target of P913)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1393
nop
RET1393:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1394
nop

TARGET913:
ba RET913
nop


P1394: !_LD [29] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 64] %asi, %f1
! 1 addresses covered

P1395: !_LD [3] (FP) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 16] %asi, %f2
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1395
nop
RET1395:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1396: !_REPLACEMENT [9] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1396
nop
RET1396:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1397: !_ST [9] (maybe <- 0x1000017) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i1 + 32] %asi
add   %l4, 1, %l4

P1398: !_ST [19] (maybe <- 0x408000a4) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P1399: !_MEMBAR (FP)
membar #StoreLoad

P1400: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P1401: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1401
nop
RET1401:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1402: !_REPLACEMENT [1] (Int) (CBR) (Secondary ctx) (Branch target of P993)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1402
nop
RET1402:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1403
nop

TARGET993:
ba RET993
nop


P1403: !_MEMBAR (FP)

P1404: !_BSTC [1] (maybe <- 0x408000a5) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1405: !_MEMBAR (FP)
membar #StoreLoad

P1406: !_REPLACEMENT [1] (Int) (Branch target of P1076)
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
ba P1407
nop

TARGET1076:
ba RET1076
nop


P1407: !_REPLACEMENT [13] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1408: !_ST [20] (maybe <- 0x408000aa) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P1409: !_LD [20] (FP) (CBR)
ld [%i3 + 256], %f4
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1409
nop
RET1409:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1410: !_REPLACEMENT [30] (Int)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1411: !_LD [26] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 128], %f5
! 1 addresses covered

P1412: !_MEMBAR (FP)
membar #StoreLoad

P1413: !_BLD [32] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1413
nop
RET1413:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1414: !_MEMBAR (FP)

P1415: !_LD [3] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i0 + 16] %asi, %o5
! move %o5(lower) -> %o3(lower)
or %o5, %o3, %o3

P1416: !_MEMBAR (FP)
membar #StoreLoad

P1417: !_BLD [6] (FP) (Branch target of P1139)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8
ba P1418
nop

TARGET1139:
ba RET1139
nop


P1418: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1418
nop
RET1418:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1419: !_BST [16] (maybe <- 0x408000ab) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1419
nop
RET1419:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1420: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1420
nop
RET1420:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1421: !_BST [20] (maybe <- 0x408000ac) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P1422: !_MEMBAR (FP) (Branch target of P1385)
membar #StoreLoad
ba P1423
nop

TARGET1385:
ba RET1385
nop


P1423: !_LD [23] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 32], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1423
nop
RET1423:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1424: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P1425: !_LD [27] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i2 + 160] %asi, %l6
! move %l6(lower) -> %o4(lower)
or %l6, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1425
nop
RET1425:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1426: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P1427: !_REPLACEMENT [3] (Int)
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P1428: !_MEMBAR (FP)
membar #StoreLoad

P1429: !_BLD [27] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1429
nop
RET1429:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1430: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1430
nop
RET1430:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1431: !_BLD [23] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f40, %f18
fmovs %f18, %f13

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1431
nop
RET1431:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1432: !_MEMBAR (FP)

P1433: !_BST [6] (maybe <- 0x408000ad) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P1434: !_MEMBAR (FP)
membar #StoreLoad

P1435: !_LD [1] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1436: !_MEMBAR (FP)

P1437: !_BST [9] (maybe <- 0x408000af) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P1438: !_MEMBAR (FP)
membar #StoreLoad

P1439: !_BLD [12] (FP) (Branch target of P1210)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0
ba P1440
nop

TARGET1210:
ba RET1210
nop


P1440: !_MEMBAR (FP)

P1441: !_ST [11] (maybe <- 0x1000018) (Int)
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P1442: !_ST [2] (maybe <- 0x1000019) (Int) (CBR) (Branch target of P1194)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1442
nop
RET1442:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1443
nop

TARGET1194:
ba RET1194
nop


P1443: !_REPLACEMENT [29] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1443
nop
RET1443:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1444: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P1445: !_PREFETCH [23] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 32] %asi, 1

P1446: !_MEMBAR (FP) (Branch target of P1232)
membar #StoreLoad
ba P1447
nop

TARGET1232:
ba RET1232
nop


P1447: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P1448: !_MEMBAR (FP) (Branch target of P1211)
ba P1449
nop

TARGET1211:
ba RET1211
nop


P1449: !_BLD [1] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f4
fmovd %f34, %f6
fmovd %f36, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P1450: !_MEMBAR (FP)

P1451: !_LD [6] (Int) (Loop exit) (Nucleus ctx) (Branch target of P1257)
wr %g0, 0x4, %asi
lduwa [%i0 + 96] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovs %f8, %f30
!--
loop_exit_2_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_2_0
nop
ba P1452
nop

TARGET1257:
ba RET1257
nop


P1452: !_MEMBAR (Int)
membar #StoreLoad

END_NODES2: ! Test instruction sequence for CPU 2 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func3:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x03deade1), %l3
or    %l3, %lo(0x03deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x1800001), %l4
or    %l4, %lo(0x1800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x41000001), %l3
or    %l3, %lo(0x41000001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x35800000), %l3
or    %l3, %lo(0x35800000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x1927^4
sethi %hi(0x1927), %l0
or    %l0, %lo(0x1927), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES3: ! Test instruction sequence for ISTREAM 3 begins

P1453: !_MEMBAR (FP) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_3_0:
membar #StoreLoad

P1454: !_BLD [7] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f0
membar #Sync
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1454
nop
RET1454:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1455: !_MEMBAR (FP)

P1456: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P1457: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1457
nop
RET1457:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1458: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P1459: !_MEMBAR (FP)

P1460: !_ST [21] (maybe <- 0x41000001) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 0 ] %asi

P1461: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1461
nop
RET1461:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1462: !_BSTC [32] (maybe <- 0x41000002) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P1463: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1463
nop
RET1463:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1464: !_REPLACEMENT [16] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P1465: !_MEMBAR (FP) (Branch target of P1454)
membar #StoreLoad
ba P1466
nop

TARGET1454:
ba RET1454
nop


P1466: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P1467: !_MEMBAR (FP)

P1468: !_IDC_FLIP [31] (Int)
IDC_FLIP(1468, 29792, 3, 0x460000c0, 0xc0, %i3, 0xc0, %l6, %l7, %o5, %l3)

P1469: !_MEMBAR (FP)

P1470: !_BST [27] (maybe <- 0x41000003) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P1471: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1471
nop
RET1471:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1472: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1473: !_MEMBAR (FP)
membar #StoreLoad

P1474: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f6
fmovd %f34, %f8
fmovd %f36, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P1475: !_MEMBAR (FP) (Branch target of P1658)
ba P1476
nop

TARGET1658:
ba RET1658
nop


P1476: !_LD [11] (FP) (Secondary ctx) (Branch target of P1906)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 0] %asi, %f11
! 1 addresses covered
ba P1477
nop

TARGET1906:
ba RET1906
nop


P1477: !_REPLACEMENT [16] (Int) (Branch target of P2083)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+16], %l7
st %l7, [%i3+16]
add %i3, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
ba P1478
nop

TARGET2083:
ba RET2083
nop


P1478: !_REPLACEMENT [7] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P1479: !_LD [11] (FP)
ld [%i2 + 0], %f12
! 1 addresses covered

P1480: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1481: !_ST [16] (maybe <- 0x1800001) (Int) (Secondary ctx) (Branch target of P1528)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 16] %asi
add   %l4, 1, %l4
ba P1482
nop

TARGET1528:
ba RET1528
nop


P1482: !_REPLACEMENT [26] (Int) (Nucleus ctx) (Branch target of P1735)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
ba P1483
nop

TARGET1735:
ba RET1735
nop


P1483: !_MEMBAR (FP) (Branch target of P1577)
membar #StoreLoad
ba P1484
nop

TARGET1577:
ba RET1577
nop


P1484: !_BLD [27] (FP) (Branch target of P2022)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14
ba P1485
nop

TARGET2022:
ba RET2022
nop


P1485: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1485
nop
RET1485:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1486: !_ST [3] (maybe <- 0x41000005) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 16 ]

P1487: !_MEMBAR (FP)

P1488: !_BSTC [5] (maybe <- 0x41000006) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P1489: !_MEMBAR (FP) (Branch target of P1690)
membar #StoreLoad
ba P1490
nop

TARGET1690:
ba RET1690
nop


P1490: !_REPLACEMENT [1] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P1491: !_ST [26] (maybe <- 0x41000008) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P1492: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1492
nop
RET1492:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1493: !_BLD [29] (FP) (Branch target of P1586)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P1494
nop

TARGET1586:
ba RET1586
nop


P1494: !_MEMBAR (FP)

P1495: !_REPLACEMENT [14] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P1496: !_REPLACEMENT [24] (Int) (CBR)
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1496
nop
RET1496:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1497: !_MEMBAR (FP)

P1498: !_BST [21] (maybe <- 0x41000009) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1499: !_MEMBAR (FP)
membar #StoreLoad

P1500: !_LD [23] (FP)
ld [%i2 + 32], %f0
! 1 addresses covered

P1501: !_LD [21] (FP)
ld [%i2 + 0], %f1
! 1 addresses covered

P1502: !_ST [19] (maybe <- 0x4100000c) (FP) (CBR) (Nucleus ctx) (Branch target of P1754)
wr %g0, 0x4, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1502
nop
RET1502:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1503
nop

TARGET1754:
ba RET1754
nop


P1503: !_MEMBAR (FP)
membar #StoreLoad

P1504: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P1505: !_MEMBAR (FP)

P1506: !_MEMBAR (Int)
membar #StoreLoad

P1507: !_REPLACEMENT [5] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P1508: !_ST [17] (maybe <- 0x1800002) (Int) (Branch target of P2036)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 96 ]
add   %l4, 1, %l4
ba P1509
nop

TARGET2036:
ba RET2036
nop


P1509: !_REPLACEMENT [6] (Int) (CBR) (Branch target of P1765)
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1509
nop
RET1509:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1510
nop

TARGET1765:
ba RET1765
nop


P1510: !_ST [7] (maybe <- 0x4100000d) (FP) (Branch target of P1996)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 128 ]
ba P1511
nop

TARGET1996:
ba RET1996
nop


P1511: !_MEMBAR (FP)

P1512: !_BST [28] (maybe <- 0x4100000e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1513: !_MEMBAR (FP)

P1514: !_BST [0] (maybe <- 0x4100000f) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1514
nop
RET1514:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1515: !_MEMBAR (FP)
membar #StoreLoad

P1516: !_LD [2] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 8] %asi, %f4
! 1 addresses covered

P1517: !_ST [26] (maybe <- 0x41000014) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P1518: !_MEMBAR (FP) (Branch target of P1945)
ba P1519
nop

TARGET1945:
ba RET1945
nop


P1519: !_BST [13] (maybe <- 0x41000015) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1520: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1520
nop
RET1520:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1521: !_REPLACEMENT [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P1522: !_IDC_FLIP [2] (Int)
IDC_FLIP(1522, 20797, 3, 0x43000008, 0x8, %i0, 0x8, %l6, %l7, %o5, %l3)

P1523: !_REPLACEMENT [20] (Int) (Branch target of P2026)
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
ba P1524
nop

TARGET2026:
ba RET2026
nop


P1524: !_ST [17] (maybe <- 0x1800003) (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1524
nop
RET1524:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1525: !_REPLACEMENT [29] (Int) (CBR) (Nucleus ctx) (Branch target of P1762)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1525
nop
RET1525:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1526
nop

TARGET1762:
ba RET1762
nop


P1526: !_REPLACEMENT [32] (Int) (Branch target of P1674)
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
ba P1527
nop

TARGET1674:
ba RET1674
nop


P1527: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P1528: !_MEMBAR (FP) (CBR) (Branch target of P1463)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1528
nop
RET1528:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1529
nop

TARGET1463:
ba RET1463
nop


P1529: !_BLD [31] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1529
nop
RET1529:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1530: !_MEMBAR (FP)

P1531: !_REPLACEMENT [8] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1532: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1532
nop
RET1532:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1533: !_BST [3] (maybe <- 0x41000018) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1534: !_MEMBAR (FP) (Branch target of P1665)
membar #StoreLoad
ba P1535
nop

TARGET1665:
ba RET1665
nop


P1535: !_BLD [5] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f6
fmovd %f40, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1535
nop
RET1535:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1536: !_MEMBAR (FP)

P1537: !_IDC_FLIP [0] (Int)
IDC_FLIP(1537, 12946, 3, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P1538: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1538
nop
RET1538:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1539: !_BSTC [2] (maybe <- 0x4100001d) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1540: !_MEMBAR (FP)

P1541: !_BST [31] (maybe <- 0x41000022) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P1542: !_MEMBAR (FP)
membar #StoreLoad

P1543: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P1544: !_MEMBAR (FP)

P1545: !_BSTC [16] (maybe <- 0x41000023) (FP) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1545
nop
RET1545:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1546: !_MEMBAR (FP) (Branch target of P1931)
membar #StoreLoad
ba P1547
nop

TARGET1931:
ba RET1931
nop


P1547: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f8
fmovd %f34, %f10
fmovd %f36, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P1548: !_MEMBAR (FP)

P1549: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %o5
ld [%i2+8], %l6
st %l6, [%i2+8]
add %i2, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]

P1550: !_LD [27] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 160], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1551: !_MEMBAR (FP)
membar #StoreLoad

P1552: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P1553: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1553
nop
RET1553:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1554: !_BLD [32] (FP) (Branch target of P1854)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P1555
nop

TARGET1854:
ba RET1854
nop


P1555: !_MEMBAR (FP)

P1556: !_ST [9] (maybe <- 0x41000024) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 32 ]

P1557: !_ST [12] (maybe <- 0x41000025) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P1558: !_MEMBAR (FP)

P1559: !_BST [29] (maybe <- 0x41000026) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1559
nop
RET1559:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1560: !_MEMBAR (FP)
membar #StoreLoad

P1561: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P1562: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1563: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1564: !_MEMBAR (FP) (CBR) (Branch target of P1538)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1564
nop
RET1564:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1565
nop

TARGET1538:
ba RET1538
nop


P1565: !_BST [23] (maybe <- 0x41000027) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1566: !_MEMBAR (FP)
membar #StoreLoad

P1567: !_LD [1] (Int) (Branch target of P1659)
lduw [%i0 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
ba P1568
nop

TARGET1659:
ba RET1659
nop


P1568: !_LD [21] (Int) (LE) (CBR) (Secondary ctx) (Branch target of P1777)
wr %g0, 0x89, %asi
lduwa [%i2 + 0] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1568
nop
RET1568:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1569
nop

TARGET1777:
ba RET1777
nop


P1569: !_MEMBAR (FP)

P1570: !_BST [26] (maybe <- 0x4100002a) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P1571: !_MEMBAR (FP)
membar #StoreLoad

P1572: !_ST [20] (maybe <- 0x4100002c) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 256 ] %asi

P1573: !_LD [1] (FP)
ld [%i0 + 4], %f0
! 1 addresses covered

P1574: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1574
nop
RET1574:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1575: !_BLD [13] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f40, %f18
fmovs %f18, %f3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1575
nop
RET1575:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1576: !_MEMBAR (FP)

P1577: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1577
nop
RET1577:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1578: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P1579: !_REPLACEMENT [1] (Int) (Branch target of P1564)
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
ba P1580
nop

TARGET1564:
ba RET1564
nop


P1580: !_LD [21] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f4
! 1 addresses covered

P1581: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1581
nop
RET1581:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1582: !_BST [32] (maybe <- 0x4100002d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P1583: !_MEMBAR (FP)

P1584: !_BST [13] (maybe <- 0x4100002e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1585: !_MEMBAR (FP)
membar #StoreLoad

P1586: !_BLD [29] (FP) (CBR) (Branch target of P1485)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1586
nop
RET1586:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1587
nop

TARGET1485:
ba RET1485
nop


P1587: !_MEMBAR (FP)

P1588: !_BLD [16] (FP) (Branch target of P1575)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f6
ba P1589
nop

TARGET1575:
ba RET1575
nop


P1589: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1589
nop
RET1589:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1590: !_REPLACEMENT [10] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P1591: !_MEMBAR (FP) (Secondary ctx)

P1592: !_BST [17] (maybe <- 0x41000031) (FP) (Secondary ctx) (Branch target of P1841)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P1593
nop

TARGET1841:
ba RET1841
nop


P1593: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1594: !_REPLACEMENT [26] (Int)
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P1595: !_MEMBAR (FP) (Branch target of P1471)
ba P1596
nop

TARGET1471:
ba RET1471
nop


P1596: !_BST [7] (maybe <- 0x41000032) (FP) (Branch target of P1647)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi
ba P1597
nop

TARGET1647:
ba RET1647
nop


P1597: !_MEMBAR (FP)

P1598: !_BST [19] (maybe <- 0x41000033) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1598
nop
RET1598:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1599: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1599
nop
RET1599:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1600: !_BST [6] (maybe <- 0x41000034) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P1601: !_MEMBAR (FP) (Branch target of P1964)
membar #StoreLoad
ba P1602
nop

TARGET1964:
ba RET1964
nop


P1602: !_REPLACEMENT [26] (Int) (CBR) (Branch target of P1799)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1602
nop
RET1602:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1603
nop

TARGET1799:
ba RET1799
nop


P1603: !_ST [15] (maybe <- 0x41000036) (FP) (Branch target of P1648)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]
ba P1604
nop

TARGET1648:
ba RET1648
nop


P1604: !_ST [15] (maybe <- 0x1800004) (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1604
nop
RET1604:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1605: !_ST [32] (maybe <- 0x1800005) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 256] %asi
add   %l4, 1, %l4

P1606: !_IDC_FLIP [20] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(1606, 14736, 3, 0x45000100, 0x100, %i2, 0x100, %l6, %l7, %o5, %l3)

P1607: !_REPLACEMENT [25] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P1608: !_REPLACEMENT [1] (Int)
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1609: !_IDC_FLIP [4] (Int)
IDC_FLIP(1609, 19240, 3, 0x43000020, 0x20, %i0, 0x20, %l6, %l7, %o5, %l3)

P1610: !_MEMBAR (FP) (Branch target of P2035)
ba P1611
nop

TARGET2035:
ba RET2035
nop


P1611: !_BST [31] (maybe <- 0x41000037) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

P1612: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1612
nop
RET1612:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1613: !_IDC_FLIP [3] (Int)
IDC_FLIP(1613, 16092, 3, 0x43000010, 0x10, %i0, 0x10, %l6, %l7, %o5, %l3)

P1614: !_REPLACEMENT [30] (Int) (Branch target of P1871)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P1615
nop

TARGET1871:
ba RET1871
nop


P1615: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1616: !_BLD [30] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P1617: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1617
nop
RET1617:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1618: !_BST [0] (maybe <- 0x41000038) (FP) (Secondary ctx) (Branch target of P1602)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P1619
nop

TARGET1602:
ba RET1602
nop


P1619: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1620: !_REPLACEMENT [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P1621: !_MEMBAR (FP)

P1622: !_BST [27] (maybe <- 0x4100003d) (FP) (Branch target of P1838)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi
ba P1623
nop

TARGET1838:
ba RET1838
nop


P1623: !_MEMBAR (FP)

P1624: !_BST [28] (maybe <- 0x4100003f) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1624
nop
RET1624:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1625: !_MEMBAR (FP)
membar #StoreLoad

P1626: !_REPLACEMENT [24] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P1627: !_MEMBAR (FP)
membar #StoreLoad

P1628: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P1629: !_MEMBAR (FP)

P1630: !_BLD [24] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P1631: !_MEMBAR (FP) (Branch target of P1457)
ba P1632
nop

TARGET1457:
ba RET1457
nop


P1632: !_BLD [23] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P1633: !_MEMBAR (FP)

P1634: !_BST [27] (maybe <- 0x41000040) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P1635: !_MEMBAR (FP)
membar #StoreLoad

P1636: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P1637: !_MEMBAR (FP)
membar #StoreLoad

P1638: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P1639: !_MEMBAR (FP)

P1640: !_BLD [27] (FP) (Branch target of P1514)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2
ba P1641
nop

TARGET1514:
ba RET1514
nop


P1641: !_MEMBAR (FP)

P1642: !_IDC_FLIP [11] (Int) (Branch target of P1740)
IDC_FLIP(1642, 780, 3, 0x44000000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)
ba P1643
nop

TARGET1740:
ba RET1740
nop


P1643: !_ST [30] (maybe <- 0x41000042) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 128 ] %asi

P1644: !_REPLACEMENT [30] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1645: !_IDC_FLIP [13] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(1645, 6887, 3, 0x44000020, 0x20, %i3, 0x20, %l6, %l7, %o5, %l3)

P1646: !_MEMBAR (FP)

P1647: !_BST [2] (maybe <- 0x41000043) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1647
nop
RET1647:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1648: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1648
nop
RET1648:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1649: !_ST [14] (maybe <- 0x1800006) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i3 + 64] %asi
add   %l4, 1, %l4

P1650: !_MEMBAR (FP)
membar #StoreLoad

P1651: !_BLD [28] (FP) (Branch target of P2020)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
ba P1652
nop

TARGET2020:
ba RET2020
nop


P1652: !_MEMBAR (FP) (Branch target of P2065)
ba P1653
nop

TARGET2065:
ba RET2065
nop


P1653: !_LD [1] (FP)
ld [%i0 + 4], %f4
! 1 addresses covered

P1654: !_MEMBAR (FP)
membar #StoreLoad

P1655: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P1656: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1656
nop
RET1656:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1657: !_REPLACEMENT [18] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1658: !_IDC_FLIP [6] (Int) (CBR)
IDC_FLIP(1658, 21792, 3, 0x43000060, 0x60, %i0, 0x60, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1658
nop
RET1658:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1659: !_REPLACEMENT [17] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1659
nop
RET1659:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1660: !_REPLACEMENT [30] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P1661: !_ST [10] (maybe <- 0x1800007) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i1 + 64] %asi
add   %l4, 1, %l4

P1662: !_ST [33] (maybe <- 0x1800008) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P1663: !_MEMBAR (FP) (Branch target of P1545)
membar #StoreLoad
ba P1664
nop

TARGET1545:
ba RET1545
nop


P1664: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P1665: !_MEMBAR (FP) (CBR) (Branch target of P1753)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1665
nop
RET1665:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1666
nop

TARGET1753:
ba RET1753
nop


P1666: !_BLD [15] (FP) (Secondary ctx) (Branch target of P1532)
wr %g0, 0xf1, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
ba P1667
nop

TARGET1532:
ba RET1532
nop


P1667: !_MEMBAR (FP) (Secondary ctx)

P1668: !_BSTC [25] (maybe <- 0x41000048) (FP) (Branch target of P1461)
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi
ba P1669
nop

TARGET1461:
ba RET1461
nop


P1669: !_MEMBAR (FP)
membar #StoreLoad

P1670: !_ST [2] (maybe <- 0x4100004a) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 8 ]

P1671: !_LD [0] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 0] %asi, %f12
! 1 addresses covered

P1672: !_MEMBAR (FP)
membar #StoreLoad

P1673: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P1674: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1674
nop
RET1674:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1675: !_REPLACEMENT [16] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P1676: !_REPLACEMENT [29] (Int)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P1677: !_MEMBAR (FP)

P1678: !_BST [4] (maybe <- 0x4100004b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1679: !_MEMBAR (FP)

P1680: !_BST [2] (maybe <- 0x41000050) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1681: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1681
nop
RET1681:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1682: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1683: !_MEMBAR (FP) (Branch target of P2001)
membar #StoreLoad
ba P1684
nop

TARGET2001:
ba RET2001
nop


P1684: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f34, %f0
fmovd %f36, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P1685: !_MEMBAR (FP)

P1686: !_REPLACEMENT [16] (Int) (Nucleus ctx) (Branch target of P1811)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
ba P1687
nop

TARGET1811:
ba RET1811
nop


P1687: !_MEMBAR (FP)
membar #StoreLoad

P1688: !_BLD [4] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1688
nop
RET1688:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1689: !_MEMBAR (FP)

P1690: !_ST [27] (maybe <- 0x41000055) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 160 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1690
nop
RET1690:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1691: !_LD [22] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i2 + 4] %asi, %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1

P1692: !_MEMBAR (FP) (Secondary ctx)

P1693: !_BST [22] (maybe <- 0x41000056) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1694: !_MEMBAR (FP) (Secondary ctx)

P1695: !_BST [20] (maybe <- 0x41000059) (FP) (Branch target of P2078)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi
ba P1696
nop

TARGET2078:
ba RET2078
nop


P1696: !_MEMBAR (FP) (Branch target of P1980)
membar #StoreLoad
ba P1697
nop

TARGET1980:
ba RET1980
nop


P1697: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P1698: !_LD [11] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1698
nop
RET1698:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1699: !_REPLACEMENT [6] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P1700: !_MEMBAR (FP)

P1701: !_BST [12] (maybe <- 0x4100005a) (FP) (Branch target of P1792)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P1702
nop

TARGET1792:
ba RET1792
nop


P1702: !_MEMBAR (FP)
membar #StoreLoad

P1703: !_ST [32] (maybe <- 0x1800009) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 256] %asi
add   %l4, 1, %l4

P1704: !_LD [14] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 64], %f8
! 1 addresses covered

P1705: !_MEMBAR (FP) (Branch target of P1726)
ba P1706
nop

TARGET1726:
ba RET1726
nop


P1706: !_BST [9] (maybe <- 0x4100005d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P1707: !_MEMBAR (FP) (CBR) (Branch target of P1599)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1707
nop
RET1707:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1708
nop

TARGET1599:
ba RET1599
nop


P1708: !_BLD [11] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1708
nop
RET1708:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1709: !_MEMBAR (FP)

P1710: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P1711: !_MEMBAR (FP)

P1712: !_REPLACEMENT [0] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P1713: !_REPLACEMENT [12] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1713
nop
RET1713:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1714: !_ST [24] (maybe <- 0x4100005f) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 64 ] %asi

P1715: !_REPLACEMENT [27] (Int) (Branch target of P1783)
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
ba P1716
nop

TARGET1783:
ba RET1783
nop


P1716: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o2(lower)
or %l7, %o2, %o2

P1717: !_MEMBAR (FP)

P1718: !_BST [23] (maybe <- 0x41000060) (FP) (Branch target of P1581)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P1719
nop

TARGET1581:
ba RET1581
nop


P1719: !_MEMBAR (FP) (Branch target of P1589)
membar #StoreLoad
ba P1720
nop

TARGET1589:
ba RET1589
nop


P1720: !_REPLACEMENT [21] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P1721: !_ST [6] (maybe <- 0x180000a) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i0 + 96] %asi
add   %l4, 1, %l4

P1722: !_MEMBAR (FP) (Branch target of P2081)
ba P1723
nop

TARGET2081:
ba RET2081
nop


P1723: !_BST [11] (maybe <- 0x41000063) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1724: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1724
nop
RET1724:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1725: !_IDC_FLIP [15] (Int)
IDC_FLIP(1725, 24363, 3, 0x44000080, 0x80, %i2, 0x80, %l6, %l7, %o5, %l3)

P1726: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1726
nop
RET1726:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1727: !_BST [12] (maybe <- 0x41000066) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1728: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1729: !_BLD [7] (FP) (Branch target of P1805)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
ba P1730
nop

TARGET1805:
ba RET1805
nop


P1730: !_MEMBAR (FP)

P1731: !_IDC_FLIP [28] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(1731, 11916, 3, 0x46000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

P1732: !_MEMBAR (FP) (Branch target of P1942)
membar #StoreLoad
ba P1733
nop

TARGET1942:
ba RET1942
nop


P1733: !_BLD [14] (FP) (CBR) (Branch target of P1937)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1733
nop
RET1733:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1734
nop

TARGET1937:
ba RET1937
nop


P1734: !_MEMBAR (FP) (Branch target of P2006)
ba P1735
nop

TARGET2006:
ba RET2006
nop


P1735: !_BST [20] (maybe <- 0x41000069) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1735
nop
RET1735:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1736: !_MEMBAR (FP)
membar #StoreLoad

P1737: !_REPLACEMENT [31] (Int) (Branch target of P1568)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+192], %l3
st %l3, [%i3+192]
add %i3, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
ba P1738
nop

TARGET1568:
ba RET1568
nop


P1738: !_ST [31] (maybe <- 0x180000b) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 192 ]
add   %l4, 1, %l4

P1739: !_MEMBAR (FP) (Secondary ctx) (Branch target of P2003)
ba P1740
nop

TARGET2003:
ba RET2003
nop


P1740: !_BSTC [18] (maybe <- 0x4100006a) (FP) (CBR) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1740
nop
RET1740:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1741: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1742: !_BLD [28] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P1743: !_MEMBAR (FP) (Secondary ctx)

P1744: !_ST [11] (maybe <- 0x4100006b) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P1745: !_LD [14] (Int)
lduw [%i2 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P1746: !_REPLACEMENT [11] (Int) (Branch target of P2058)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P1747
nop

TARGET2058:
ba RET2058
nop


P1747: !_LD [30] (FP) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 128], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1747
nop
RET1747:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1748: !_LD [2] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 8] %asi, %f1
! 1 addresses covered

P1749: !_ST [5] (maybe <- 0x180000c) (Int) (CBR)
stw   %l4, [%i0 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1749
nop
RET1749:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1750: !_MEMBAR (FP)

P1751: !_BST [29] (maybe <- 0x4100006c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P1752: !_MEMBAR (FP)
membar #StoreLoad

P1753: !_ST [9] (maybe <- 0x4100006d) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1753
nop
RET1753:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1754: !_REPLACEMENT [31] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+192], %l7
st %l7, [%i3+192]
add %i3, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1754
nop
RET1754:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1755: !_MEMBAR (FP)
membar #StoreLoad

P1756: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f2
fmovd %f40, %f4

P1757: !_MEMBAR (FP)

P1758: !_MEMBAR (Int) (Branch target of P1843)
membar #StoreLoad
ba P1759
nop

TARGET1843:
ba RET1843
nop


P1759: !_LD [19] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f5
! 1 addresses covered

P1760: !_LD [18] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 128], %f6
! 1 addresses covered

P1761: !_REPLACEMENT [23] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P1762: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1762
nop
RET1762:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1763: !_BST [14] (maybe <- 0x4100006e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P1764: !_MEMBAR (FP)
membar #StoreLoad

P1765: !_LD [16] (FP) (CBR) (Branch target of P1812)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 16], %f7
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1765
nop
RET1765:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1766
nop

TARGET1812:
ba RET1812
nop


P1766: !_REPLACEMENT [20] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P1767: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1768: !_BLD [10] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P1769: !_MEMBAR (FP) (Secondary ctx)

P1770: !_BST [15] (maybe <- 0x4100006f) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P1771: !_MEMBAR (FP) (Branch target of P1896)
membar #StoreLoad
ba P1772
nop

TARGET1896:
ba RET1896
nop


P1772: !_REPLACEMENT [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P1773: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P1774: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1775: !_BLD [24] (FP) (Secondary ctx) (Branch target of P1933)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10
ba P1776
nop

TARGET1933:
ba RET1933
nop


P1776: !_MEMBAR (FP) (Secondary ctx) (Branch target of P1681)
ba P1777
nop

TARGET1681:
ba RET1681
nop


P1777: !_REPLACEMENT [0] (Int) (CBR) (Branch target of P1912)
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1777
nop
RET1777:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1778
nop

TARGET1912:
ba RET1912
nop


P1778: !_ST [3] (maybe <- 0x180000d) (Int)
stw   %l4, [%i0 + 16 ]
add   %l4, 1, %l4

P1779: !_MEMBAR (FP)
membar #StoreLoad

P1780: !_BLD [33] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1780
nop
RET1780:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1781: !_MEMBAR (FP)

P1782: !_BST [2] (maybe <- 0x41000070) (FP) (Branch target of P2056)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P1783
nop

TARGET2056:
ba RET2056
nop


P1783: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1783
nop
RET1783:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1784: !_BST [26] (maybe <- 0x41000075) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P1785: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1786: !_BLD [23] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f12
fmovd %f40, %f14

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1786
nop
RET1786:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1787: !_MEMBAR (FP) (Branch target of P1612)
ba P1788
nop

TARGET1612:
ba RET1612
nop


P1788: !_BLD [6] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P1789: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1789
nop
RET1789:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1790: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1790
nop
RET1790:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1791: !_LD [28] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 0], %o5
! move %o5(lower) -> %o3(lower)
or %o5, %o3, %o3

P1792: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1792
nop
RET1792:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1793: !_BLD [0] (FP) (Branch target of P1988)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f18, %f3
fmovd %f36, %f4
fmovd %f40, %f18
fmovs %f18, %f5
ba P1794
nop

TARGET1988:
ba RET1988
nop


P1794: !_MEMBAR (FP)

P1795: !_BST [2] (maybe <- 0x41000077) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1796: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1796
nop
RET1796:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1797: !_ST [2] (maybe <- 0x4100007c) (FP) (Secondary ctx) (Branch target of P1840)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 8 ] %asi
ba P1798
nop

TARGET1840:
ba RET1840
nop


P1798: !_REPLACEMENT [29] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P1799: !_REPLACEMENT [23] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1799
nop
RET1799:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1800: !_MEMBAR (FP) (Branch target of P1525)
membar #StoreLoad
ba P1801
nop

TARGET1525:
ba RET1525
nop


P1801: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P1802: !_MEMBAR (FP)

P1803: !_LD [14] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 64], %f8
! 1 addresses covered

P1804: !_ST [30] (maybe <- 0x180000e) (Int) (Branch target of P2033)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4
ba P1805
nop

TARGET2033:
ba RET2033
nop


P1805: !_ST [31] (maybe <- 0x180000f) (Int) (CBR) (Branch target of P1535)
stw   %l4, [%i2 + 192 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1805
nop
RET1805:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1806
nop

TARGET1535:
ba RET1535
nop


P1806: !_MEMBAR (FP)

P1807: !_BST [10] (maybe <- 0x4100007d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P1808: !_MEMBAR (FP)
membar #StoreLoad

P1809: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f34, %f18
fmovs %f18, %f11
fmovd %f36, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P1810: !_MEMBAR (FP)

P1811: !_LD [4] (FP) (CBR)
ld [%i0 + 32], %f14
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1811
nop
RET1811:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1812: !_ST [8] (maybe <- 0x1800010) (Int) (CBR)
stw   %l4, [%i1 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1812
nop
RET1812:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1813: !_MEMBAR (FP)

P1814: !_BST [26] (maybe <- 0x4100007e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P1815: !_MEMBAR (FP)
membar #StoreLoad

P1816: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P1817: !_MEMBAR (FP) (Branch target of P1502)
ba P1818
nop

TARGET1502:
ba RET1502
nop


P1818: !_BST [28] (maybe <- 0x41000080) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P1819: !_MEMBAR (FP)
membar #StoreLoad

P1820: !_REPLACEMENT [13] (Int)
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1821: !_REPLACEMENT [15] (Int) (Branch target of P1919)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P1822
nop

TARGET1919:
ba RET1919
nop


P1822: !_ST [23] (maybe <- 0x41000081) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

P1823: !_REPLACEMENT [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P1824: !_MEMBAR (FP) (Branch target of P1786)
ba P1825
nop

TARGET1786:
ba RET1786
nop


P1825: !_BST [1] (maybe <- 0x41000082) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1826: !_MEMBAR (FP)
membar #StoreLoad

P1827: !_REPLACEMENT [22] (Int) (Branch target of P1707)
sethi %hi(0x2000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
ba P1828
nop

TARGET1707:
ba RET1707
nop


P1828: !_MEMBAR (FP)
membar #StoreLoad

P1829: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f34, %f18
fmovs %f18, %f1
fmovd %f36, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P1830: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1830
nop
RET1830:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1831: !_BST [6] (maybe <- 0x41000087) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P1832: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1832
nop
RET1832:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1833: !_ST [24] (maybe <- 0x1800011) (Int)
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P1834: !_LD [4] (Int) (LE)
wr %g0, 0x88, %asi
lduwa [%i0 + 32] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P1835: !_REPLACEMENT [9] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1836: !_MEMBAR (FP)

P1837: !_BST [1] (maybe <- 0x41000089) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P1838: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1838
nop
RET1838:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1839: !_BLD [11] (FP) (Branch target of P2044)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f4
fmovd %f40, %f6
ba P1840
nop

TARGET2044:
ba RET2044
nop


P1840: !_MEMBAR (FP) (CBR) (Branch target of P1857)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1840
nop
RET1840:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1841
nop

TARGET1857:
ba RET1857
nop


P1841: !_BSTC [1] (maybe <- 0x4100008e) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1841
nop
RET1841:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1842: !_MEMBAR (FP)
membar #StoreLoad

P1843: !_LD [10] (Int) (CBR)
lduw [%i1 + 64], %l6
! move %l6(lower) -> %o4(lower)
or %l6, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1843
nop
RET1843:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1844: !_MEMBAR (FP)

P1845: !_BST [25] (maybe <- 0x41000093) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P1846: !_MEMBAR (FP) (Branch target of P1850)
membar #StoreLoad
ba P1847
nop

TARGET1850:
ba RET1850
nop


P1847: !_REPLACEMENT [20] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+256], %l3
st %l3, [%i2+256]
add %i2, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P1848: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1849: !_BLD [1] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f34, %f18
fmovs %f18, %f9
fmovd %f36, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P1850: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1850
nop
RET1850:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1851: !_ST [14] (maybe <- 0x41000095) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 64 ] %asi

P1852: !_REPLACEMENT [18] (Int) (Branch target of P1617)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P1853
nop

TARGET1617:
ba RET1617
nop


P1853: !_ST [0] (maybe <- 0x41000096) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 0 ]

P1854: !_FLUSHI [3] (Int) (CBR)
flush %g0 

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1854
nop
RET1854:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1855: !_MEMBAR (FP) (Branch target of P1496)
membar #StoreLoad
ba P1856
nop

TARGET1496:
ba RET1496
nop


P1856: !_BLD [1] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1856
nop
RET1856:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1857: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1857
nop
RET1857:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1858: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P1859: !_LD [1] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P1860: !_LD [16] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 16], %f1
! 1 addresses covered

P1861: !_REPLACEMENT [9] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1862: !_LD [3] (FP)
ld [%i0 + 16], %f2
! 1 addresses covered

P1863: !_LD [33] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 0], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

P1864: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1865: !_MEMBAR (FP) (Secondary ctx)

P1866: !_BSTC [6] (maybe <- 0x41000097) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P1867: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1868: !_BLD [9] (FP) (Secondary ctx) (Branch target of P1969)
wr %g0, 0xf1, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4
ba P1869
nop

TARGET1969:
ba RET1969
nop


P1869: !_MEMBAR (FP) (Secondary ctx)

P1870: !_BST [0] (maybe <- 0x41000099) (FP) (Branch target of P1830)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P1871
nop

TARGET1830:
ba RET1830
nop


P1871: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1871
nop
RET1871:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1872: !_ST [10] (maybe <- 0x1800012) (Int) (Branch target of P1559)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4
ba P1873
nop

TARGET1559:
ba RET1559
nop


P1873: !_ST [21] (maybe <- 0x4100009e) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 0 ] %asi

P1874: !_LD [2] (FP)
ld [%i0 + 8], %f5
! 1 addresses covered

P1875: !_REPLACEMENT [20] (Int) (Branch target of P1986)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+256], %l7
st %l7, [%i2+256]
add %i2, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
ba P1876
nop

TARGET1986:
ba RET1986
nop


P1876: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P1877: !_LD [13] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 32], %f6
! 1 addresses covered

P1878: !_ST [3] (maybe <- 0x1800013) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i0 + 16] %asi
add   %l4, 1, %l4

P1879: !_MEMBAR (FP)
membar #StoreLoad

P1880: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f34, %f18
fmovs %f18, %f9
fmovd %f36, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P1881: !_MEMBAR (FP)

P1882: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P1883: !_MEMBAR (FP)

P1884: !_BSTC [19] (maybe <- 0x4100009f) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1885: !_MEMBAR (FP)
membar #StoreLoad

P1886: !_ST [12] (maybe <- 0x410000a0) (FP) (Nucleus ctx) (Branch target of P2046)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 4 ] %asi
ba P1887
nop

TARGET2046:
ba RET2046
nop


P1887: !_MEMBAR (FP)

P1888: !_BST [17] (maybe <- 0x410000a1) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P1889: !_MEMBAR (FP)
membar #StoreLoad

P1890: !_PREFETCH [18] (Int) (Branch target of P1529)
prefetch [%i3 + 128], 1
ba P1891
nop

TARGET1529:
ba RET1529
nop


P1891: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1892: !_BLD [28] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1892
nop
RET1892:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1893: !_MEMBAR (FP) (Secondary ctx)

P1894: !_ST [17] (maybe <- 0x410000a2) (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 96 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1894
nop
RET1894:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1895: !_LD [11] (Int) (Branch target of P2052)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 0], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
ba P1896
nop

TARGET2052:
ba RET2052
nop


P1896: !_LD [28] (Int) (CBR)
lduw [%i2 + 0], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1896
nop
RET1896:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1897: !_REPLACEMENT [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1898: !_MEMBAR (FP)

P1899: !_BST [31] (maybe <- 0x410000a3) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P1900: !_MEMBAR (FP)
membar #StoreLoad

P1901: !_LD [24] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 64] %asi, %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P1902: !_MEMBAR (FP)

P1903: !_BSTC [27] (maybe <- 0x410000a4) (FP) (CBR) (Branch target of P1944)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1903
nop
RET1903:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1904
nop

TARGET1944:
ba RET1944
nop


P1904: !_MEMBAR (FP)
membar #StoreLoad

P1905: !_REPLACEMENT [2] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P1906: !_REPLACEMENT [23] (Int) (CBR)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1906
nop
RET1906:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1907: !_ST [26] (maybe <- 0x1800014) (Int)
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

P1908: !_MEMBAR (FP)

P1909: !_BST [19] (maybe <- 0x410000a6) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1910: !_MEMBAR (FP)
membar #StoreLoad

P1911: !_LD [0] (Int) (Secondary ctx) (Branch target of P1892)
wr %g0, 0x81, %asi
lduwa [%i0 + 0] %asi, %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2
ba P1912
nop

TARGET1892:
ba RET1892
nop


P1912: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1912
nop
RET1912:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1913: !_MEMBAR (FP)

P1914: !_BST [0] (maybe <- 0x410000a7) (FP) (Branch target of P2071)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P1915
nop

TARGET2071:
ba RET2071
nop


P1915: !_MEMBAR (FP)
membar #StoreLoad

P1916: !_BLD [30] (FP) (Branch target of P1796)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2
ba P1917
nop

TARGET1796:
ba RET1796
nop


P1917: !_MEMBAR (FP)

P1918: !_BSTC [28] (maybe <- 0x410000ac) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P1919: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1919
nop
RET1919:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1920: !_REPLACEMENT [13] (Int) (Branch target of P1780)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
ba P1921
nop

TARGET1780:
ba RET1780
nop


P1921: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1922: !_BLD [24] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P1923: !_MEMBAR (FP) (Secondary ctx)

P1924: !_REPLACEMENT [7] (Int) (Branch target of P1574)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P1925
nop

TARGET1574:
ba RET1574
nop


P1925: !_REPLACEMENT [26] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1926: !_ST [32] (maybe <- 0x410000ad) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

P1927: !_LD [21] (FP) (Branch target of P1749)
ld [%i3 + 0], %f5
! 1 addresses covered
ba P1928
nop

TARGET1749:
ba RET1749
nop


P1928: !_REPLACEMENT [0] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P1929: !_ST [28] (maybe <- 0x1800015) (Int)
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P1930: !_MEMBAR (FP) (Branch target of P2000)
ba P1931
nop

TARGET2000:
ba RET2000
nop


P1931: !_BST [1] (maybe <- 0x410000ae) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1931
nop
RET1931:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1932: !_MEMBAR (FP)
membar #StoreLoad

P1933: !_REPLACEMENT [15] (Int) (CBR) (Branch target of P1790)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1933
nop
RET1933:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P1934
nop

TARGET1790:
ba RET1790
nop


P1934: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P1935: !_MEMBAR (FP)
membar #StoreLoad

P1936: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P1937: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1937
nop
RET1937:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P1938: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P1939: !_MEMBAR (FP) (Branch target of P1524)
ba P1940
nop

TARGET1524:
ba RET1524
nop


P1940: !_REPLACEMENT [10] (Int) (Branch target of P1973)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P1941
nop

TARGET1973:
ba RET1973
nop


P1941: !_REPLACEMENT [20] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P1942: !_REPLACEMENT [28] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1942
nop
RET1942:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1943: !_MEMBAR (FP)

P1944: !_BST [18] (maybe <- 0x410000b3) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1944
nop
RET1944:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1945: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1945
nop
RET1945:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P1946: !_BST [8] (maybe <- 0x410000b4) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P1947: !_MEMBAR (FP)
membar #StoreLoad

P1948: !_REPLACEMENT [28] (Int)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P1949: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1949
nop
RET1949:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1950: !_BST [28] (maybe <- 0x410000b6) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P1951: !_MEMBAR (FP)

P1952: !_BST [26] (maybe <- 0x410000b7) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P1953: !_MEMBAR (FP)
membar #StoreLoad

P1954: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P1955: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1955
nop
RET1955:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1956: !_BST [6] (maybe <- 0x410000b9) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P1957: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P1958: !_LD [6] (Int)
lduw [%i0 + 96], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P1959: !_REPLACEMENT [9] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P1960: !_LD [32] (FP) (Nucleus ctx) (Branch target of P1688)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 256] %asi, %f11
! 1 addresses covered
ba P1961
nop

TARGET1688:
ba RET1688
nop


P1961: !_MEMBAR (FP)

P1962: !_BST [19] (maybe <- 0x410000bb) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P1963: !_MEMBAR (FP) (Branch target of P1598)
membar #StoreLoad
ba P1964
nop

TARGET1598:
ba RET1598
nop


P1964: !_REPLACEMENT [33] (Int) (CBR) (Branch target of P1553)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1964
nop
RET1964:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1965
nop

TARGET1553:
ba RET1553
nop


P1965: !_MEMBAR (FP) (Branch target of P1656)
ba P1966
nop

TARGET1656:
ba RET1656
nop


P1966: !_BSTC [10] (maybe <- 0x410000bc) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P1967: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1967
nop
RET1967:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1968: !_BSTC [32] (maybe <- 0x410000bd) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P1969: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1969
nop
RET1969:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1970: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P1971: !_MEMBAR (FP)
membar #StoreLoad

P1972: !_BLD [25] (FP) (Branch target of P1492)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13
ba P1973
nop

TARGET1492:
ba RET1492
nop


P1973: !_MEMBAR (FP) (CBR) (Branch target of P1832)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1973
nop
RET1973:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P1974
nop

TARGET1832:
ba RET1832
nop


P1974: !_REPLACEMENT [11] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P1975: !_MEMBAR (FP)
membar #StoreLoad

P1976: !_BLD [5] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P1977: !_MEMBAR (FP)

P1978: !_LD [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 4], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

P1979: !_LD [22] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 4], %f0
! 1 addresses covered

P1980: !_REPLACEMENT [2] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+8], %l6
st %l6, [%i3+8]
add %i3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1980
nop
RET1980:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P1981: !_ST [7] (maybe <- 0x1800016) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P1982: !_LD [28] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f1
! 1 addresses covered

P1983: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P1984: !_REPLACEMENT [20] (Int) (Nucleus ctx) (Branch target of P1967)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
ba P1985
nop

TARGET1967:
ba RET1967
nop


P1985: !_REPLACEMENT [22] (Int)
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P1986: !_ST [4] (maybe <- 0x1800017) (Int) (CBR) (Branch target of P1789)
stw   %l4, [%i0 + 32 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1986
nop
RET1986:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P1987
nop

TARGET1789:
ba RET1789
nop


P1987: !_MEMBAR (FP)
membar #StoreLoad

P1988: !_BLD [15] (FP) (CBR) (Branch target of P1698)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET1988
nop
RET1988:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P1989
nop

TARGET1698:
ba RET1698
nop


P1989: !_MEMBAR (FP)

P1990: !_BST [31] (maybe <- 0x410000be) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

P1991: !_MEMBAR (FP) (Branch target of P2002)
membar #StoreLoad
ba P1992
nop

TARGET2002:
ba RET2002
nop


P1992: !_IDC_FLIP [28] (Int)
IDC_FLIP(1992, 14973, 3, 0x46000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

P1993: !_LD [32] (FP) (CBR)
ld [%i2 + 256], %f3
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1993
nop
RET1993:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1994: !_REPLACEMENT [32] (Int) (Branch target of P1894)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+256], %l3
st %l3, [%i2+256]
add %i2, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
ba P1995
nop

TARGET1894:
ba RET1894
nop


P1995: !_MEMBAR (FP)
membar #StoreLoad

P1996: !_BLD [0] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f4
fmovd %f34, %f6
fmovd %f36, %f18
fmovs %f18, %f7
fmovd %f40, %f8

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET1996
nop
RET1996:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P1997: !_MEMBAR (FP)

P1998: !_LD [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 96] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P1999: !_MEMBAR (FP)

P2000: !_BST [18] (maybe <- 0x410000bf) (FP) (CBR) (Branch target of P2079)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2000
nop
RET2000:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2001
nop

TARGET2079:
ba RET2079
nop


P2001: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2001
nop
RET2001:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2002: !_REPLACEMENT [11] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2002
nop
RET2002:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2003: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2003
nop
RET2003:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2004: !_LD [32] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 256], %f9
! 1 addresses covered

P2005: !_MEMBAR (FP)
membar #StoreLoad

P2006: !_BLD [17] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2006
nop
RET2006:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2007: !_MEMBAR (FP)

P2008: !_BLD [1] (FP) (Branch target of P1509)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P2009
nop

TARGET1509:
ba RET1509
nop


P2009: !_MEMBAR (FP)

P2010: !_BLD [28] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f0
membar #Sync
! 1 addresses covered

P2011: !_MEMBAR (FP) (Secondary ctx)

P2012: !_REPLACEMENT [32] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P2013: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P2014: !_ST [5] (maybe <- 0x1800018) (Int) (LE)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l7
srl %l7, 8, %l7
sll %l4, 8, %l3
and %l3, %l6, %l3
or %l3, %l7, %l3
srl %l3, 16, %l7
sll %l3, 16, %l3
srl %l3, 0, %l3
or %l3, %l7, %l3
stwa   %l3, [%i0 + 64] %asi
add   %l4, 1, %l4

P2015: !_MEMBAR (FP) (Branch target of P1713)
membar #StoreLoad
ba P2016
nop

TARGET1713:
ba RET1713
nop


P2016: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P2017: !_MEMBAR (FP)

P2018: !_REPLACEMENT [26] (Int)
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P2019: !_MEMBAR (FP) (Branch target of P2027)
ba P2020
nop

TARGET2027:
ba RET2027
nop


P2020: !_BST [29] (maybe <- 0x410000c0) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2020
nop
RET2020:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2021: !_MEMBAR (FP)

P2022: !_BST [4] (maybe <- 0x410000c1) (FP) (CBR) (Branch target of P1724)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2022
nop
RET2022:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2023
nop

TARGET1724:
ba RET1724
nop


P2023: !_MEMBAR (FP) (Branch target of P1955)
membar #StoreLoad
ba P2024
nop

TARGET1955:
ba RET1955
nop


P2024: !_ST [29] (maybe <- 0x1800019) (Int) (Nucleus ctx) (Branch target of P2066)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 64] %asi
add   %l4, 1, %l4
ba P2025
nop

TARGET2066:
ba RET2066
nop


P2025: !_LD [15] (Int) (Branch target of P1993)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 128], %l7
! move %l7(lower) -> %o4(lower)
or %l7, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5
ba P2026
nop

TARGET1993:
ba RET1993
nop


P2026: !_ST [7] (maybe <- 0x410000c6) (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2026
nop
RET2026:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2027: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2027
nop
RET2027:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2028: !_BLD [4] (FP) (Secondary ctx) (Branch target of P1733)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f2
fmovd %f34, %f4
fmovd %f36, %f18
fmovs %f18, %f5
fmovd %f40, %f6
ba P2029
nop

TARGET1733:
ba RET1733
nop


P2029: !_MEMBAR (FP) (Secondary ctx)

P2030: !_IDC_FLIP [1] (Int)
IDC_FLIP(2030, 18266, 3, 0x43000004, 0x4, %i0, 0x4, %l6, %l7, %o5, %l3)

P2031: !_REPLACEMENT [23] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P2032: !_MEMBAR (FP)
membar #StoreLoad

P2033: !_BLD [19] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2033
nop
RET2033:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2034: !_MEMBAR (FP)

P2035: !_IDC_FLIP [14] (Int) (CBR)
IDC_FLIP(2035, 10203, 3, 0x44000040, 0x40, %i2, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2035
nop
RET2035:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2036: !_ST [5] (maybe <- 0x410000c7) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2036
nop
RET2036:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2037: !_REPLACEMENT [2] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+8], %l3
st %l3, [%i2+8]
add %i2, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

P2038: !_MEMBAR (FP)
membar #StoreLoad

P2039: !_BLD [15] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P2040: !_MEMBAR (FP) (Branch target of P1624)
ba P2041
nop

TARGET1624:
ba RET1624
nop


P2041: !_PREFETCH [1] (Int)
prefetch [%i0 + 4], 1

P2042: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P2043: !_MEMBAR (FP)

P2044: !_BST [29] (maybe <- 0x410000c8) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2044
nop
RET2044:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2045: !_MEMBAR (FP)
membar #StoreLoad

P2046: !_ST [25] (maybe <- 0x180001a) (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 96 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2046
nop
RET2046:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2047: !_LD [18] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 128] %asi, %f9
! 1 addresses covered

P2048: !_LD [3] (FP)
ld [%i0 + 16], %f10
! 1 addresses covered

P2049: !_REPLACEMENT [21] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2050: !_MEMBAR (FP)

P2051: !_BST [0] (maybe <- 0x410000c9) (FP) (Branch target of P1903)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P2052
nop

TARGET1903:
ba RET1903
nop


P2052: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2052
nop
RET2052:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2053: !_ST [11] (maybe <- 0x410000ce) (FP) (Branch target of P1747)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]
ba P2054
nop

TARGET1747:
ba RET1747
nop


P2054: !_MEMBAR (FP)

P2055: !_BST [22] (maybe <- 0x410000cf) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2056: !_MEMBAR (FP) (CBR) (Branch target of P1708)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2056
nop
RET2056:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2057
nop

TARGET1708:
ba RET1708
nop


P2057: !_ST [33] (maybe <- 0x410000d2) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P2058: !_ST [23] (maybe <- 0x410000d3) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2058
nop
RET2058:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2059: !_MEMBAR (FP)
membar #StoreLoad

P2060: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P2061: !_MEMBAR (FP)

P2062: !_BST [20] (maybe <- 0x410000d4) (FP) (Branch target of P1520)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi
ba P2063
nop

TARGET1520:
ba RET1520
nop


P2063: !_MEMBAR (FP)

P2064: !_BSTC [32] (maybe <- 0x410000d5) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P2065: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2065
nop
RET2065:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2066: !_LD [23] (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 32], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2066
nop
RET2066:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2067: !_MEMBAR (FP)

P2068: !_BST [25] (maybe <- 0x410000d6) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P2069: !_MEMBAR (FP)
membar #StoreLoad

P2070: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P2071: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2071
nop
RET2071:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2072: !_ST [26] (maybe <- 0x410000d8) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P2073: !_MEMBAR (FP)
membar #StoreLoad

P2074: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P2075: !_MEMBAR (FP)

P2076: !_REPLACEMENT [28] (Int) (Secondary ctx) (Branch target of P1604)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
ba P2077
nop

TARGET1604:
ba RET1604
nop


P2077: !_ST [4] (maybe <- 0x180001b) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 32] %asi
add   %l4, 1, %l4

P2078: !_ST [3] (maybe <- 0x410000d9) (FP) (CBR) (Branch target of P1949)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 16 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2078
nop
RET2078:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2079
nop

TARGET1949:
ba RET1949
nop


P2079: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2079
nop
RET2079:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2080: !_BST [7] (maybe <- 0x410000da) (FP) (Branch target of P1856)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi
ba P2081
nop

TARGET1856:
ba RET1856
nop


P2081: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2081
nop
RET2081:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2082: !_LD [23] (Int) (Loop exit)
lduw [%i3 + 32], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_3_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_3_0
nop

P2083: !_MEMBAR (Int) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2083
nop
RET2083:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


END_NODES3: ! Test instruction sequence for CPU 3 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func4:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x04deade1), %l3
or    %l3, %lo(0x04deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x2000001), %l4
or    %l4, %lo(0x2000001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x41800001), %l3
or    %l3, %lo(0x41800001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x36000000), %l3
or    %l3, %lo(0x36000000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x7d2f^4
sethi %hi(0x7d2f), %l0
or    %l0, %lo(0x7d2f), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES4: ! Test instruction sequence for ISTREAM 4 begins

P2084: !_IDC_FLIP [18] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_0:
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
IDC_FLIP(2084, 22026, 4, 0x44800080, 0x80, %i3, 0x80, %l6, %l7, %o5, %l3)

P2085: !_REPLACEMENT [24] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2085
nop
RET2085:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2086: !_LD [32] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 256], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2087: !_LD [29] (FP)
ld [%i3 + 64], %f0
! 1 addresses covered

P2088: !_MEMBAR (FP) (Branch target of P2284)
ba P2089
nop

TARGET2284:
ba RET2284
nop


P2089: !_BSTC [21] (maybe <- 0x41800001) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2090: !_MEMBAR (FP)
membar #StoreLoad

P2091: !_REPLACEMENT [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P2092: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2093: !_MEMBAR (FP)

P2094: !_BST [23] (maybe <- 0x41800004) (FP) (Branch target of P2377)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P2095
nop

TARGET2377:
ba RET2377
nop


P2095: !_MEMBAR (FP) (CBR) (Branch target of P2824)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2095
nop
RET2095:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2096
nop

TARGET2824:
ba RET2824
nop


P2096: !_BLD [33] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P2097: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2097
nop
RET2097:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2098: !_LD [17] (FP) (Branch target of P2640)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 96], %f2
! 1 addresses covered
ba P2099
nop

TARGET2640:
ba RET2640
nop


P2099: !_MEMBAR (FP)

P2100: !_BST [33] (maybe <- 0x41800007) (FP) (Branch target of P2675)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P2101
nop

TARGET2675:
ba RET2675
nop


P2101: !_MEMBAR (FP) (Branch target of P2630)
ba P2102
nop

TARGET2630:
ba RET2630
nop


P2102: !_BST [33] (maybe <- 0x41800008) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2103: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2104: !_PREFETCH [16] (Int)
prefetch [%i3 + 16], 1

P2105: !_REPLACEMENT [5] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P2106: !_MEMBAR (FP) (CBR) (Branch target of P3009)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2106
nop
RET2106:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2107
nop

TARGET3009:
ba RET3009
nop


P2107: !_BLD [5] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P2108: !_MEMBAR (FP)

P2109: !_LD [6] (Int) (Branch target of P2656)
lduw [%i0 + 96], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
ba P2110
nop

TARGET2656:
ba RET2656
nop


P2110: !_LD [10] (Int)
lduw [%i1 + 64], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P2111: !_MEMBAR (FP)

P2112: !_BST [0] (maybe <- 0x41800009) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2113: !_MEMBAR (FP)
membar #StoreLoad

P2114: !_LD [6] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i0 + 96] %asi, %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1

P2115: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2116: !_BLD [17] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f18
fmovs %f18, %f5

P2117: !_MEMBAR (FP) (Secondary ctx)

P2118: !_PREFETCH [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 64], 1

P2119: !_MEMBAR (FP)
membar #StoreLoad

P2120: !_BLD [31] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2120
nop
RET2120:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2121: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2121
nop
RET2121:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2122: !_LD [11] (Int)
lduw [%i3 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2123: !_MEMBAR (FP) (Secondary ctx)

P2124: !_BST [13] (maybe <- 0x4180000e) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2125: !_MEMBAR (FP) (Secondary ctx) (Branch target of P2618)
membar #StoreLoad
ba P2126
nop

TARGET2618:
ba RET2618
nop


P2126: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2126
nop
RET2126:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2127: !_ST [9] (maybe <- 0x41800011) (FP) (Secondary ctx) (Branch target of P2085)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 32 ] %asi
ba P2128
nop

TARGET2085:
ba RET2085
nop


P2128: !_MEMBAR (FP)
membar #StoreLoad

P2129: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P2130: !_MEMBAR (FP)

P2131: !_LD [7] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 128] %asi, %f8
! 1 addresses covered

P2132: !_REPLACEMENT [10] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2132
nop
RET2132:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2133: !_MEMBAR (FP)
membar #StoreLoad

P2134: !_BLD [5] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2134
nop
RET2134:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2135: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2135
nop
RET2135:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2136: !_LD [9] (Int)
lduw [%i1 + 32], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

P2137: !_REPLACEMENT [25] (Int)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P2138: !_REPLACEMENT [14] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2138
nop
RET2138:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2139: !_MEMBAR (FP)

P2140: !_BST [9] (maybe <- 0x41800012) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P2141: !_MEMBAR (FP)

P2142: !_BST [9] (maybe <- 0x41800014) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P2143: !_MEMBAR (FP)
membar #StoreLoad

P2144: !_REPLACEMENT [11] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P2145: !_MEMBAR (FP)

P2146: !_BST [6] (maybe <- 0x41800016) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2147: !_MEMBAR (FP)

P2148: !_BSTC [32] (maybe <- 0x41800018) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P2149: !_MEMBAR (FP)
membar #StoreLoad

P2150: !_ST [18] (maybe <- 0x2000001) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P2151: !_IDC_FLIP [10] (Int) (CBR) (Branch target of P2743)
IDC_FLIP(2151, 27531, 4, 0x43800040, 0x40, %i1, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2151
nop
RET2151:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2152
nop

TARGET2743:
ba RET2743
nop


P2152: !_LD [20] (FP) (Branch target of P2722)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 256], %f11
! 1 addresses covered
ba P2153
nop

TARGET2722:
ba RET2722
nop


P2153: !_REPLACEMENT [21] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P2154: !_ST [23] (maybe <- 0x2000002) (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 32 ]
add   %l4, 1, %l4

P2155: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2156: !_PREFETCH [28] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 0], 1

P2157: !_MEMBAR (FP) (Secondary ctx) (Branch target of P2687)
membar #StoreLoad
ba P2158
nop

TARGET2687:
ba RET2687
nop


P2158: !_BLD [21] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f12
fmovd %f40, %f14

P2159: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2159
nop
RET2159:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2160: !_BSTC [4] (maybe <- 0x41800019) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2160
nop
RET2160:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2161: !_MEMBAR (FP) (Branch target of P2159)
membar #StoreLoad
ba P2162
nop

TARGET2159:
ba RET2159
nop


P2162: !_ST [21] (maybe <- 0x4180001e) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P2163: !_ST [33] (maybe <- 0x2000003) (Int) (CBR) (Branch target of P3031)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2163
nop
RET2163:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2164
nop

TARGET3031:
ba RET3031
nop


P2164: !_ST [33] (maybe <- 0x4180001f) (FP) (CBR) (Branch target of P2356)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2164
nop
RET2164:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2165
nop

TARGET2356:
ba RET2356
nop


P2165: !_MEMBAR (FP)

P2166: !_BST [29] (maybe <- 0x41800020) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2166
nop
RET2166:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2167: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2167
nop
RET2167:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2168: !_ST [1] (maybe <- 0x41800021) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P2169: !_LD [24] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P2170: !_REPLACEMENT [22] (Int) (Branch target of P2198)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
ba P2171
nop

TARGET2198:
ba RET2198
nop


P2171: !_REPLACEMENT [19] (Int)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2172: !_LD [17] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 96], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2172
nop
RET2172:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2173: !_LD [25] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 96] %asi, %f0
! 1 addresses covered

P2174: !_PREFETCH [14] (Int) (Branch target of P2908)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 64], 1
ba P2175
nop

TARGET2908:
ba RET2908
nop


P2175: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2175
nop
RET2175:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2176: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P2177: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P2178: !_REPLACEMENT [26] (Int) (Branch target of P3027)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P2179
nop

TARGET3027:
ba RET3027
nop


P2179: !_MEMBAR (FP)
membar #StoreLoad

P2180: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P2181: !_MEMBAR (FP) (Branch target of P2336)
ba P2182
nop

TARGET2336:
ba RET2336
nop


P2182: !_BST [31] (maybe <- 0x41800022) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2182
nop
RET2182:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2183: !_MEMBAR (FP) (CBR) (Branch target of P2739)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2183
nop
RET2183:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2184
nop

TARGET2739:
ba RET2739
nop


P2184: !_REPLACEMENT [18] (Int) (Secondary ctx) (Branch target of P2303)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P2185
nop

TARGET2303:
ba RET2303
nop


P2185: !_MEMBAR (FP)

P2186: !_BST [6] (maybe <- 0x41800023) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2187: !_MEMBAR (FP)

P2188: !_BST [13] (maybe <- 0x41800025) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2189: !_MEMBAR (FP)
membar #StoreLoad

P2190: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f4
fmovd %f40, %f6

P2191: !_MEMBAR (FP) (Branch target of P2869)
ba P2192
nop

TARGET2869:
ba RET2869
nop


P2192: !_LD [5] (Int) (Branch target of P2789)
lduw [%i0 + 64], %l3
! move %l3(lower) -> %o3(lower)
or %l3, %o3, %o3
ba P2193
nop

TARGET2789:
ba RET2789
nop


P2193: !_MEMBAR (FP) (Branch target of P2960)
ba P2194
nop

TARGET2960:
ba RET2960
nop


P2194: !_BST [13] (maybe <- 0x41800028) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2195: !_MEMBAR (FP)
membar #StoreLoad

P2196: !_REPLACEMENT [0] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2196
nop
RET2196:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2197: !_LD [14] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i2 + 64] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P2198: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2198
nop
RET2198:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2199: !_BST [8] (maybe <- 0x4180002b) (FP) (Branch target of P2485)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P2200
nop

TARGET2485:
ba RET2485
nop


P2200: !_MEMBAR (FP)
membar #StoreLoad

P2201: !_ST [27] (maybe <- 0x4180002d) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 160 ]

P2202: !_ST [5] (maybe <- 0x4180002e) (FP) (CBR) (Nucleus ctx) (Branch target of P2939)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2202
nop
RET2202:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2203
nop

TARGET2939:
ba RET2939
nop


P2203: !_IDC_FLIP [8] (Int) (Branch target of P2654)
IDC_FLIP(2203, 21737, 4, 0x43800000, 0x0, %i1, 0x0, %l6, %l7, %o5, %l3)
ba P2204
nop

TARGET2654:
ba RET2654
nop


P2204: !_MEMBAR (FP)
membar #StoreLoad

P2205: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P2206: !_MEMBAR (FP)

P2207: !_BLD [23] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P2208: !_MEMBAR (FP) (Branch target of P2121)
ba P2209
nop

TARGET2121:
ba RET2121
nop


P2209: !_ST [19] (maybe <- 0x2000004) (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P2210: !_MEMBAR (FP)
membar #StoreLoad

P2211: !_BLD [15] (FP) (Branch target of P2964)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12
ba P2212
nop

TARGET2964:
ba RET2964
nop


P2212: !_MEMBAR (FP)

P2213: !_REPLACEMENT [21] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P2214: !_REPLACEMENT [3] (Int) (Nucleus ctx) (Branch target of P2506)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+16], %l7
st %l7, [%i3+16]
add %i3, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
ba P2215
nop

TARGET2506:
ba RET2506
nop


P2215: !_REPLACEMENT [28] (Int)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P2216: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2216
nop
RET2216:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2217: !_BST [3] (maybe <- 0x4180002f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2218: !_MEMBAR (FP)

P2219: !_BSTC [16] (maybe <- 0x41800034) (FP) (Branch target of P2234)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P2220
nop

TARGET2234:
ba RET2234
nop


P2220: !_MEMBAR (FP)
membar #StoreLoad

P2221: !_BLD [7] (FP) (Branch target of P2430)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
ba P2222
nop

TARGET2430:
ba RET2430
nop


P2222: !_MEMBAR (FP)

P2223: !_ST [30] (maybe <- 0x2000005) (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2223
nop
RET2223:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2224: !_REPLACEMENT [0] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2224
nop
RET2224:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2225: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P2226: !_ST [33] (maybe <- 0x2000006) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P2227: !_MEMBAR (FP)

P2228: !_BST [15] (maybe <- 0x41800035) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2229: !_MEMBAR (FP)

P2230: !_BST [27] (maybe <- 0x41800036) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P2231: !_MEMBAR (FP)
membar #StoreLoad

P2232: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P2233: !_MEMBAR (FP)

P2234: !_LD [30] (FP) (CBR)
ld [%i2 + 128], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2234
nop
RET2234:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2235: !_MEMBAR (FP)
membar #StoreLoad

P2236: !_BLD [2] (FP) (Branch target of P3068)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f0
membar #Sync
! 5 addresses covered
fmovs %f4, %f3
fmovd %f8, %f4
ba P2237
nop

TARGET3068:
ba RET3068
nop


P2237: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2237
nop
RET2237:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2238: !_ST [21] (maybe <- 0x41800038) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 0 ]

P2239: !_LD [20] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 256], %o5
! move %o5(lower) -> %o4(lower)
or %o5, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P2240: !_LD [3] (FP)
ld [%i0 + 16], %f5
! 1 addresses covered

P2241: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2241
nop
RET2241:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2242: !_BST [17] (maybe <- 0x41800039) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P2243: !_MEMBAR (FP)
membar #StoreLoad

P2244: !_ST [17] (maybe <- 0x4180003a) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 96 ] %asi

P2245: !_ST [27] (maybe <- 0x2000007) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 160] %asi
add   %l4, 1, %l4

P2246: !_ST [5] (maybe <- 0x4180003b) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 64 ] %asi

P2247: !_IDC_FLIP [25] (Int) (CBR)
IDC_FLIP(2247, 27892, 4, 0x45800060, 0x60, %i3, 0x60, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2247
nop
RET2247:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2248: !_REPLACEMENT [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P2249: !_LD [17] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 96] %asi, %f6
! 1 addresses covered

P2250: !_MEMBAR (FP)

P2251: !_BSTC [23] (maybe <- 0x4180003c) (FP) (Branch target of P2275)
wr %g0, 0xe0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P2252
nop

TARGET2275:
ba RET2275
nop


P2252: !_MEMBAR (FP)
membar #StoreLoad

P2253: !_LD [1] (Int)
lduw [%i0 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2254: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2254
nop
RET2254:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2255: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P2256: !_MEMBAR (FP)

P2257: !_BLD [15] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2257
nop
RET2257:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2258: !_MEMBAR (FP)

P2259: !_BLD [33] (FP) (Branch target of P2533)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
ba P2260
nop

TARGET2533:
ba RET2533
nop


P2260: !_MEMBAR (FP) (Branch target of P2807)
ba P2261
nop

TARGET2807:
ba RET2807
nop


P2261: !_REPLACEMENT [25] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2261
nop
RET2261:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2262: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2262
nop
RET2262:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2263: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f10
fmovd %f40, %f12

P2264: !_MEMBAR (FP)

P2265: !_REPLACEMENT [14] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P2266: !_IDC_FLIP [31] (Int) (CBR) (Branch target of P2120)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(2266, 8960, 4, 0x460000c0, 0xc0, %i2, 0xc0, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2266
nop
RET2266:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2267
nop

TARGET2120:
ba RET2120
nop


P2267: !_REPLACEMENT [21] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2267
nop
RET2267:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2268: !_MEMBAR (FP)

P2269: !_BST [0] (maybe <- 0x4180003f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2270: !_MEMBAR (FP)
membar #StoreLoad

P2271: !_ST [26] (maybe <- 0x2000008) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P2272: !_ST [26] (maybe <- 0x41800044) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P2273: !_REPLACEMENT [2] (Int) (Branch target of P2795)
sethi %hi(0x2000), %o5
ld [%i3+8], %l6
st %l6, [%i3+8]
add %i3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
ba P2274
nop

TARGET2795:
ba RET2795
nop


P2274: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P2275: !_LD [8] (FP) (CBR)
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 8 

sethi %hi(0x20000), %l6
sub   %i1, %l6, %i1
ld [%i1 + 0], %f13
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2275
nop
RET2275:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2276: !_MEMBAR (FP) (Branch target of P2126)
ba P2277
nop

TARGET2126:
ba RET2126
nop


P2277: !_BST [8] (maybe <- 0x41800045) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P2278: !_MEMBAR (FP)
membar #StoreLoad

P2279: !_BLD [32] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2279
nop
RET2279:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2280: !_MEMBAR (FP) (Secondary ctx)

P2281: !_ST [16] (maybe <- 0x2000009) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 16 ]
add   %l4, 1, %l4

P2282: !_ST [26] (maybe <- 0x41800047) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P2283: !_ST [20] (maybe <- 0x41800048) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

P2284: !_REPLACEMENT [30] (Int) (CBR) (Secondary ctx) (Branch target of P2502)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2284
nop
RET2284:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2285
nop

TARGET2502:
ba RET2502
nop


P2285: !_ST [4] (maybe <- 0x41800049) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 32 ] %asi

P2286: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2286
nop
RET2286:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2287: !_BLD [21] (FP) (Secondary ctx) (Branch target of P2733)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1
ba P2288
nop

TARGET2733:
ba RET2733
nop


P2288: !_MEMBAR (FP) (Secondary ctx)

P2289: !_LD [17] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 96] %asi, %f2
! 1 addresses covered

P2290: !_IDC_FLIP [10] (Int)
IDC_FLIP(2290, 20818, 4, 0x43800040, 0x40, %i1, 0x40, %l6, %l7, %o5, %l3)

P2291: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2291
nop
RET2291:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2292: !_LD [5] (FP)
ld [%i0 + 64], %f3
! 1 addresses covered

P2293: !_MEMBAR (FP)
membar #StoreLoad

P2294: !_BLD [28] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2294
nop
RET2294:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2295: !_MEMBAR (FP)

P2296: !_REPLACEMENT [28] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2296
nop
RET2296:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2297: !_MEMBAR (FP)

P2298: !_BST [6] (maybe <- 0x4180004a) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2299: !_MEMBAR (FP) (Branch target of P2196)
ba P2300
nop

TARGET2196:
ba RET2196
nop


P2300: !_BST [32] (maybe <- 0x4180004c) (FP) (Branch target of P2267)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi
ba P2301
nop

TARGET2267:
ba RET2267
nop


P2301: !_MEMBAR (FP)
membar #StoreLoad

P2302: !_PREFETCH [18] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetcha [%i2 + 128] %asi, 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2302
nop
RET2302:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2303: !_IDC_FLIP [16] (Int) (CBR) (Branch target of P2500)
IDC_FLIP(2303, 28686, 4, 0x44800010, 0x10, %i2, 0x10, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2303
nop
RET2303:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2304
nop

TARGET2500:
ba RET2500
nop


P2304: !_MEMBAR (FP)
membar #StoreLoad

P2305: !_BLD [6] (FP) (Branch target of P2924)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6
ba P2306
nop

TARGET2924:
ba RET2924
nop


P2306: !_MEMBAR (FP)

P2307: !_BST [6] (maybe <- 0x4180004d) (FP) (Secondary ctx) (Branch target of P2911)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P2308
nop

TARGET2911:
ba RET2911
nop


P2308: !_MEMBAR (FP) (Secondary ctx) (Branch target of P2375)
membar #StoreLoad
ba P2309
nop

TARGET2375:
ba RET2375
nop


P2309: !_ST [5] (maybe <- 0x4180004f) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 64 ]

P2310: !_REPLACEMENT [25] (Int) (Branch target of P2771)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
ba P2311
nop

TARGET2771:
ba RET2771
nop


P2311: !_LD [30] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 128], %f7
! 1 addresses covered

P2312: !_MEMBAR (FP) (Branch target of P2702)
membar #StoreLoad
ba P2313
nop

TARGET2702:
ba RET2702
nop


P2313: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f8
fmovd %f34, %f10
fmovd %f36, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P2314: !_MEMBAR (FP) (CBR) (Branch target of P2804)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2314
nop
RET2314:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2315
nop

TARGET2804:
ba RET2804
nop


P2315: !_BLD [0] (FP) (Branch target of P2439)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f34, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f36, %f0
fmovd %f40, %f18
fmovs %f18, %f1
ba P2316
nop

TARGET2439:
ba RET2439
nop


P2316: !_MEMBAR (FP) (Branch target of P2493)
ba P2317
nop

TARGET2493:
ba RET2493
nop


P2317: !_LD [0] (FP)
ld [%i0 + 0], %f2
! 1 addresses covered

P2318: !_REPLACEMENT [18] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2318
nop
RET2318:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2319: !_REPLACEMENT [23] (Int) (Branch target of P2734)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
ba P2320
nop

TARGET2734:
ba RET2734
nop


P2320: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2320
nop
RET2320:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2321: !_BLD [1] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P2322: !_MEMBAR (FP)

P2323: !_BLD [1] (FP) (Branch target of P3064)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f8
fmovd %f34, %f10
fmovd %f36, %f18
fmovs %f18, %f11
fmovd %f40, %f12
ba P2324
nop

TARGET3064:
ba RET3064
nop


P2324: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2324
nop
RET2324:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2325: !_LD [2] (FP)
ld [%i0 + 8], %f13
! 1 addresses covered

P2326: !_MEMBAR (FP)

P2327: !_BSTC [13] (maybe <- 0x41800050) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2328: !_MEMBAR (FP)
membar #StoreLoad

P2329: !_BLD [31] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P2330: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2330
nop
RET2330:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2331: !_REPLACEMENT [6] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P2332: !_REPLACEMENT [8] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2333: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2333
nop
RET2333:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2334: !_BST [20] (maybe <- 0x41800053) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P2335: !_MEMBAR (FP)
membar #StoreLoad

P2336: !_REPLACEMENT [4] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2336
nop
RET2336:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2337: !_REPLACEMENT [3] (Int)
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P2338: !_REPLACEMENT [2] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+8], %l3
st %l3, [%i2+8]
add %i2, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

P2339: !_MEMBAR (FP)

P2340: !_BST [25] (maybe <- 0x41800054) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P2341: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2341
nop
RET2341:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2342: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P2343: !_MEMBAR (FP)

P2344: !_IDC_FLIP [8] (Int)
IDC_FLIP(2344, 17852, 4, 0x43800000, 0x0, %i1, 0x0, %l6, %l7, %o5, %l3)

P2345: !_REPLACEMENT [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P2346: !_MEMBAR (FP)
membar #StoreLoad

P2347: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P2348: !_MEMBAR (FP)

P2349: !_ST [17] (maybe <- 0x41800056) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 96 ]

P2350: !_MEMBAR (FP)

P2351: !_BST [17] (maybe <- 0x41800057) (FP) (Branch target of P2163)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P2352
nop

TARGET2163:
ba RET2163
nop


P2352: !_MEMBAR (FP)
membar #StoreLoad

P2353: !_LD [17] (Int) (CBR)
lduw [%i3 + 96], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2353
nop
RET2353:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2354: !_LD [23] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 32] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P2355: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P2356: !_MEMBAR (FP) (CBR) (Branch target of P2645)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2356
nop
RET2356:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2357
nop

TARGET2645:
ba RET2645
nop


P2357: !_BST [15] (maybe <- 0x41800058) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2358: !_MEMBAR (FP)

P2359: !_BST [1] (maybe <- 0x41800059) (FP) (Secondary ctx) (Branch target of P2487)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P2360
nop

TARGET2487:
ba RET2487
nop


P2360: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2361: !_LD [26] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 128], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

P2362: !_LD [3] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 16] %asi, %f3
! 1 addresses covered

P2363: !_MEMBAR (FP)

P2364: !_BST [15] (maybe <- 0x4180005e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2365: !_MEMBAR (FP)
membar #StoreLoad

P2366: !_ST [13] (maybe <- 0x4180005f) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

P2367: !_MEMBAR (FP)
membar #StoreLoad

P2368: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P2369: !_MEMBAR (FP)

P2370: !_ST [30] (maybe <- 0x200000a) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P2371: !_REPLACEMENT [32] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P2372: !_REPLACEMENT [15] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2372
nop
RET2372:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2373: !_ST [6] (maybe <- 0x41800060) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 96 ]

P2374: !_MEMBAR (FP) (CBR) (Branch target of P2689)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2374
nop
RET2374:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2375
nop

TARGET2689:
ba RET2689
nop


P2375: !_BLD [4] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f34, %f18
fmovs %f18, %f7
fmovd %f36, %f8
fmovd %f40, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2375
nop
RET2375:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2376: !_MEMBAR (FP)

P2377: !_REPLACEMENT [25] (Int) (CBR) (Secondary ctx) (Branch target of P2866)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2377
nop
RET2377:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2378
nop

TARGET2866:
ba RET2866
nop


P2378: !_LD [29] (FP)
ld [%i2 + 64], %f10
! 1 addresses covered

P2379: !_MEMBAR (FP)
membar #StoreLoad

P2380: !_BLD [5] (FP) (Branch target of P2160)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12
ba P2381
nop

TARGET2160:
ba RET2160
nop


P2381: !_MEMBAR (FP)

P2382: !_ST [14] (maybe <- 0x41800061) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

P2383: !_ST [0] (maybe <- 0x41800062) (FP) (Branch target of P2526)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 0 ]
ba P2384
nop

TARGET2526:
ba RET2526
nop


P2384: !_ST [11] (maybe <- 0x41800063) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P2385: !_REPLACEMENT [17] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2385
nop
RET2385:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2386: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P2387: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %l3
ld [%i3+8], %l7
st %l7, [%i3+8]
add %i3, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]

P2388: !_REPLACEMENT [9] (Int) (Branch target of P2921)
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
ba P2389
nop

TARGET2921:
ba RET2921
nop


P2389: !_LD [8] (Int)
lduw [%i1 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2390: !_MEMBAR (FP)
membar #StoreLoad

P2391: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f34, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f36, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P2392: !_MEMBAR (FP)

P2393: !_REPLACEMENT [19] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2394: !_LD [28] (FP) (Branch target of P2952)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 0], %f2
! 1 addresses covered
ba P2395
nop

TARGET2952:
ba RET2952
nop


P2395: !_MEMBAR (FP)

P2396: !_BST [28] (maybe <- 0x41800064) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2397: !_MEMBAR (FP)
membar #StoreLoad

P2398: !_ST [27] (maybe <- 0x200000b) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stwa   %l4, [%i2 + 160] %asi
add   %l4, 1, %l4

P2399: !_ST [17] (maybe <- 0x41800065) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 96 ]

P2400: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3051)
membar #StoreLoad
ba P2401
nop

TARGET3051:
ba RET3051
nop


P2401: !_BLD [30] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P2402: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2402
nop
RET2402:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2403: !_REPLACEMENT [7] (Int) (Secondary ctx) (Branch target of P2740)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P2404
nop

TARGET2740:
ba RET2740
nop


P2404: !_MEMBAR (FP)
membar #StoreLoad

P2405: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f4
fmovd %f40, %f6

P2406: !_MEMBAR (FP)

P2407: !_IDC_FLIP [0] (Int)
IDC_FLIP(2407, 14775, 4, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P2408: !_LD [25] (FP) (Branch target of P2681)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 96], %f7
! 1 addresses covered
ba P2409
nop

TARGET2681:
ba RET2681
nop


P2409: !_REPLACEMENT [14] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P2410: !_ST [32] (maybe <- 0x41800066) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P2411: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2411
nop
RET2411:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2412: !_MEMBAR (FP)
membar #StoreLoad

P2413: !_BLD [10] (FP) (Branch target of P2864)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8
ba P2414
nop

TARGET2864:
ba RET2864
nop


P2414: !_MEMBAR (FP)

P2415: !_LD [4] (FP)
ld [%i0 + 32], %f9
! 1 addresses covered

P2416: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2416
nop
RET2416:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2417: !_BST [0] (maybe <- 0x41800067) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2418: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2419: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P2420: !_MEMBAR (FP)

P2421: !_LD [26] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 128], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2

P2422: !_PREFETCH [13] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 32], 1

P2423: !_REPLACEMENT [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2424: !_MEMBAR (FP)
membar #StoreLoad

P2425: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P2426: !_MEMBAR (FP) (Branch target of P2886)
ba P2427
nop

TARGET2886:
ba RET2886
nop


P2427: !_ST [8] (maybe <- 0x4180006c) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P2428: !_LD [23] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 32] %asi, %f12
! 1 addresses covered

P2429: !_IDC_FLIP [32] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(2429, 7557, 4, 0x46000100, 0x100, %i3, 0x100, %l6, %l7, %o5, %l3)

P2430: !_REPLACEMENT [29] (Int) (CBR) (Nucleus ctx) (Branch target of P2788)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2430
nop
RET2430:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2431
nop

TARGET2788:
ba RET2788
nop


P2431: !_MEMBAR (FP)
membar #StoreLoad

P2432: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P2433: !_MEMBAR (FP)

P2434: !_ST [5] (maybe <- 0x200000c) (Int) (Branch target of P2756)
stw   %l4, [%i0 + 64 ]
add   %l4, 1, %l4
ba P2435
nop

TARGET2756:
ba RET2756
nop


P2435: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2436: !_ST [4] (maybe <- 0x4180006d) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]

P2437: !_LD [18] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 128], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2437
nop
RET2437:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2438: !_FLUSHI [10] (Int)
flush %g0 

P2439: !_LD [22] (Int) (CBR) (Branch target of P2286)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2439
nop
RET2439:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2440
nop

TARGET2286:
ba RET2286
nop


P2440: !_REPLACEMENT [5] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2440
nop
RET2440:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2441: !_ST [14] (maybe <- 0x200000d) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P2442: !_MEMBAR (FP)

P2443: !_BST [31] (maybe <- 0x4180006e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P2444: !_MEMBAR (FP) (Branch target of P2266)
membar #StoreLoad
ba P2445
nop

TARGET2266:
ba RET2266
nop


P2445: !_ST [3] (maybe <- 0x200000e) (Int)
stw   %l4, [%i0 + 16 ]
add   %l4, 1, %l4

P2446: !_FLUSHI [7] (Int)
flush %g0 

P2447: !_ST [1] (maybe <- 0x4180006f) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2447
nop
RET2447:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2448: !_MEMBAR (FP)
membar #StoreLoad

P2449: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P2450: !_MEMBAR (FP) (Branch target of P2947)
ba P2451
nop

TARGET2947:
ba RET2947
nop


P2451: !_IDC_FLIP [0] (Int)
IDC_FLIP(2451, 11712, 4, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P2452: !_MEMBAR (FP)

P2453: !_BST [11] (maybe <- 0x41800070) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2454: !_MEMBAR (FP)
membar #StoreLoad

P2455: !_BLD [15] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f0
membar #Sync
! 1 addresses covered

P2456: !_MEMBAR (FP)

P2457: !_REPLACEMENT [29] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2457
nop
RET2457:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2458: !_MEMBAR (FP)
membar #StoreLoad

P2459: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P2460: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2460
nop
RET2460:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2461: !_BST [5] (maybe <- 0x41800073) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2462: !_MEMBAR (FP) (Branch target of P2949)
membar #StoreLoad
ba P2463
nop

TARGET2949:
ba RET2949
nop


P2463: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

P2464: !_MEMBAR (FP)

P2465: !_ST [18] (maybe <- 0x200000f) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P2466: !_REPLACEMENT [24] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P2467: !_LD [1] (FP) (Branch target of P2594)
ld [%i0 + 4], %f3
! 1 addresses covered
ba P2468
nop

TARGET2594:
ba RET2594
nop


P2468: !_REPLACEMENT [30] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2468
nop
RET2468:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2469: !_LD [6] (Int) (Branch target of P2216)
lduw [%i0 + 96], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4
ba P2470
nop

TARGET2216:
ba RET2216
nop


P2470: !_LD [5] (FP) (Branch target of P2773)
ld [%i0 + 64], %f4
! 1 addresses covered
ba P2471
nop

TARGET2773:
ba RET2773
nop


P2471: !_REPLACEMENT [18] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2472: !_MEMBAR (FP)

P2473: !_BST [26] (maybe <- 0x41800075) (FP) (Branch target of P3053)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P2474
nop

TARGET3053:
ba RET3053
nop


P2474: !_MEMBAR (FP)
membar #StoreLoad

P2475: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P2476: !_MEMBAR (FP)

P2477: !_ST [8] (maybe <- 0x41800077) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P2478: !_MEMBAR (FP) (Branch target of P2963)
membar #StoreLoad
ba P2479
nop

TARGET2963:
ba RET2963
nop


P2479: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P2480: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2480
nop
RET2480:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2481: !_BLD [3] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f8
fmovd %f34, %f10
fmovd %f36, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P2482: !_MEMBAR (FP) (Secondary ctx)

P2483: !_BLD [4] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f34, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f36, %f0
fmovd %f40, %f18
fmovs %f18, %f1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2483
nop
RET2483:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2484: !_MEMBAR (FP) (Branch target of P2945)
ba P2485
nop

TARGET2945:
ba RET2945
nop


P2485: !_REPLACEMENT [7] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2485
nop
RET2485:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2486: !_MEMBAR (FP)
membar #StoreLoad

P2487: !_BLD [13] (FP) (CBR) (Branch target of P2164)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f2
fmovd %f40, %f4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2487
nop
RET2487:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2488
nop

TARGET2164:
ba RET2164
nop


P2488: !_MEMBAR (FP)

P2489: !_BST [27] (maybe <- 0x41800078) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2490: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2490
nop
RET2490:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2491: !_IDC_FLIP [16] (Int) (CBR) (Branch target of P2490)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
IDC_FLIP(2491, 8196, 4, 0x44800010, 0x10, %i2, 0x10, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2491
nop
RET2491:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2492
nop

TARGET2490:
ba RET2490
nop


P2492: !_REPLACEMENT [14] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P2493: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2493
nop
RET2493:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2494: !_BST [4] (maybe <- 0x4180007a) (FP) (CBR) (Branch target of P2660)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2494
nop
RET2494:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2495
nop

TARGET2660:
ba RET2660
nop


P2495: !_MEMBAR (FP)

P2496: !_BST [0] (maybe <- 0x4180007f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2497: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2497
nop
RET2497:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2498: !_BST [1] (maybe <- 0x41800084) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2499: !_MEMBAR (FP) (Branch target of P2513)
membar #StoreLoad
ba P2500
nop

TARGET2513:
ba RET2513
nop


P2500: !_BLD [26] (FP) (CBR) (Branch target of P2570)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2500
nop
RET2500:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2501
nop

TARGET2570:
ba RET2570
nop


P2501: !_MEMBAR (FP) (Branch target of P2480)
ba P2502
nop

TARGET2480:
ba RET2480
nop


P2502: !_BST [28] (maybe <- 0x41800089) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2502
nop
RET2502:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2503: !_MEMBAR (FP)

P2504: !_BST [12] (maybe <- 0x4180008a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2505: !_MEMBAR (FP)

P2506: !_BST [19] (maybe <- 0x4180008d) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2506
nop
RET2506:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2507: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2508: !_REPLACEMENT [28] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P2509: !_MEMBAR (FP)

P2510: !_BST [22] (maybe <- 0x4180008e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2511: !_MEMBAR (FP) (Branch target of P2106)
membar #StoreLoad
ba P2512
nop

TARGET2106:
ba RET2106
nop


P2512: !_ST [31] (maybe <- 0x41800091) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 192 ]

P2513: !_MEMBAR (FP) (CBR) (Branch target of P2333)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2513
nop
RET2513:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2514
nop

TARGET2333:
ba RET2333
nop


P2514: !_BST [2] (maybe <- 0x41800092) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2515: !_MEMBAR (FP)
membar #StoreLoad

P2516: !_ST [12] (maybe <- 0x41800097) (FP) (CBR) (Branch target of P2202)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2516
nop
RET2516:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2517
nop

TARGET2202:
ba RET2202
nop


P2517: !_MEMBAR (FP)

P2518: !_BST [5] (maybe <- 0x41800098) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2519: !_MEMBAR (FP)
membar #StoreLoad

P2520: !_REPLACEMENT [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2521: !_LD [0] (Int)
lduw [%i0 + 0], %l6
! move %l6(lower) -> %o4(lower)
or %l6, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P2522: !_MEMBAR (FP)

P2523: !_BSTC [31] (maybe <- 0x4180009a) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P2524: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2524
nop
RET2524:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2525: !_REPLACEMENT [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P2526: !_REPLACEMENT [5] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2526
nop
RET2526:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2527: !_ST [26] (maybe <- 0x4180009b) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P2528: !_LD [8] (Int)
lduw [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2529: !_MEMBAR (FP)
membar #StoreLoad

P2530: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P2531: !_MEMBAR (FP)

P2532: !_REPLACEMENT [30] (Int) (Branch target of P2097)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
ba P2533
nop

TARGET2097:
ba RET2097
nop


P2533: !_MEMBAR (FP) (CBR) (Branch target of P2913)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2533
nop
RET2533:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2534
nop

TARGET2913:
ba RET2913
nop


P2534: !_BLD [7] (FP) (Branch target of P2693)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
ba P2535
nop

TARGET2693:
ba RET2693
nop


P2535: !_MEMBAR (FP)

P2536: !_BST [21] (maybe <- 0x4180009c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2537: !_MEMBAR (FP)

P2538: !_BST [32] (maybe <- 0x4180009f) (FP) (CBR) (Branch target of P2134)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2538
nop
RET2538:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2539
nop

TARGET2134:
ba RET2134
nop


P2539: !_MEMBAR (FP)
membar #StoreLoad

P2540: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P2541: !_MEMBAR (FP) (Branch target of P2760)
ba P2542
nop

TARGET2760:
ba RET2760
nop


P2542: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P2543: !_MEMBAR (FP)

P2544: !_LD [5] (Int)
lduw [%i0 + 64], %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

P2545: !_REPLACEMENT [13] (Int)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P2546: !_MEMBAR (FP)
membar #StoreLoad

P2547: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P2548: !_MEMBAR (FP)

P2549: !_ST [19] (maybe <- 0x2000010) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i3 + 0] %asi
add   %l4, 1, %l4

P2550: !_MEMBAR (FP)
membar #StoreLoad

P2551: !_BLD [6] (FP) (Branch target of P2138)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3
ba P2552
nop

TARGET2138:
ba RET2138
nop


P2552: !_MEMBAR (FP)

P2553: !_LD [11] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f4
! 1 addresses covered

P2554: !_REPLACEMENT [30] (Int) (Branch target of P2457)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P2555
nop

TARGET2457:
ba RET2457
nop


P2555: !_MEMBAR (FP)

P2556: !_BST [8] (maybe <- 0x418000a0) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2556
nop
RET2556:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2557: !_MEMBAR (FP)

P2558: !_BST [10] (maybe <- 0x418000a2) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P2559: !_MEMBAR (FP)
membar #StoreLoad

P2560: !_IDC_FLIP [28] (Int) (CBR) (Branch target of P2172)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(2560, 19649, 4, 0x46000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2560
nop
RET2560:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2561
nop

TARGET2172:
ba RET2172
nop


P2561: !_MEMBAR (FP)
membar #StoreLoad

P2562: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P2563: !_MEMBAR (FP)

P2564: !_BLD [16] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f7

P2565: !_MEMBAR (FP)

P2566: !_BST [19] (maybe <- 0x418000a3) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2567: !_MEMBAR (FP) (Branch target of P2800)
membar #StoreLoad
ba P2568
nop

TARGET2800:
ba RET2800
nop


P2568: !_ST [18] (maybe <- 0x2000011) (Int) (Nucleus ctx) (Branch target of P2979)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4
ba P2569
nop

TARGET2979:
ba RET2979
nop


P2569: !_LD [3] (Int)
lduw [%i0 + 16], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P2570: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2570
nop
RET2570:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2571: !_BST [13] (maybe <- 0x418000a4) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2572: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2573: !_LD [20] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i3 + 256] %asi, %f8
! 1 addresses covered

P2574: !_MEMBAR (FP)
membar #StoreLoad

P2575: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9

P2576: !_MEMBAR (FP)

P2577: !_REPLACEMENT [1] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P2578: !_REPLACEMENT [25] (Int)
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P2579: !_MEMBAR (FP)
membar #StoreLoad

P2580: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P2581: !_MEMBAR (FP)

P2582: !_LD [5] (Int)
lduw [%i0 + 64], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

P2583: !_LD [20] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 256], %f11
! 1 addresses covered

P2584: !_MEMBAR (FP)

P2585: !_BSTC [31] (maybe <- 0x418000a7) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P2586: !_MEMBAR (FP)
membar #StoreLoad

P2587: !_REPLACEMENT [17] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2587
nop
RET2587:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2588: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P2589: !_REPLACEMENT [0] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P2590: !_MEMBAR (FP)

P2591: !_BSTC [8] (maybe <- 0x418000a8) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P2592: !_MEMBAR (FP)
membar #StoreLoad

P2593: !_ST [24] (maybe <- 0x2000012) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 64] %asi
add   %l4, 1, %l4

P2594: !_MEMBAR (FP) (CBR) (Branch target of P2241)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2594
nop
RET2594:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2595
nop

TARGET2241:
ba RET2241
nop


P2595: !_BLD [25] (FP) (Branch target of P2615)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13
ba P2596
nop

TARGET2615:
ba RET2615
nop


P2596: !_MEMBAR (FP)

P2597: !_LD [32] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 256], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2598: !_MEMBAR (FP)
membar #StoreLoad

P2599: !_BLD [5] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P2600: !_MEMBAR (FP) (Branch target of P2713)
ba P2601
nop

TARGET2713:
ba RET2713
nop


P2601: !_LD [7] (Int) (CBR)
lduw [%i0 + 128], %l7
! move %l7(lower) -> %o2(lower)
or %l7, %o2, %o2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2601
nop
RET2601:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2602: !_MEMBAR (FP) (CBR) (Branch target of P2372)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2602
nop
RET2602:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2603
nop

TARGET2372:
ba RET2372
nop


P2603: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f0
membar #Sync
! 1 addresses covered

P2604: !_MEMBAR (FP)

P2605: !_BST [11] (maybe <- 0x418000aa) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2606: !_MEMBAR (FP)
membar #StoreLoad

P2607: !_ST [11] (maybe <- 0x2000013) (Int) (Branch target of P2151)
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4
ba P2608
nop

TARGET2151:
ba RET2151
nop


P2608: !_IDC_FLIP [28] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(2608, 22745, 4, 0x46000000, 0x0, %i2, 0x0, %l6, %l7, %o5, %l3)

P2609: !_ST [12] (maybe <- 0x2000014) (Int) (Branch target of P2919)
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
ba P2610
nop

TARGET2919:
ba RET2919
nop


P2610: !_REPLACEMENT [13] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P2611: !_MEMBAR (FP)

P2612: !_BSTC [23] (maybe <- 0x418000ad) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2613: !_MEMBAR (FP) (Branch target of P3076)
membar #StoreLoad
ba P2614
nop

TARGET3076:
ba RET3076
nop


P2614: !_IDC_FLIP [19] (Int) (Branch target of P2402)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(2614, 26691, 4, 0x45000000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)
ba P2615
nop

TARGET2402:
ba RET2402
nop


P2615: !_REPLACEMENT [21] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2615
nop
RET2615:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2616: !_LD [5] (FP)
ld [%i0 + 64], %f1
! 1 addresses covered

P2617: !_PREFETCH [17] (Int) (Branch target of P3059)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetch [%i3 + 96], 1
ba P2618
nop

TARGET3059:
ba RET3059
nop


P2618: !_ST [21] (maybe <- 0x418000b0) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2618
nop
RET2618:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2619: !_REPLACEMENT [21] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P2620: !_REPLACEMENT [20] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P2621: !_ST [14] (maybe <- 0x2000015) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P2622: !_REPLACEMENT [2] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+8], %l3
st %l3, [%i3+8]
add %i3, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2622
nop
RET2622:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2623: !_LD [10] (FP)
ld [%i1 + 64], %f2
! 1 addresses covered

P2624: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2624
nop
RET2624:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2625: !_BST [19] (maybe <- 0x418000b1) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2626: !_MEMBAR (FP)
membar #StoreLoad

P2627: !_ST [1] (maybe <- 0x418000b2) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P2628: !_MEMBAR (FP)
membar #StoreLoad

P2629: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P2630: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2630
nop
RET2630:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2631: !_BST [31] (maybe <- 0x418000b3) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

P2632: !_MEMBAR (FP)
membar #StoreLoad

P2633: !_ST [13] (maybe <- 0x2000016) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 32 ]
add   %l4, 1, %l4

P2634: !_REPLACEMENT [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P2635: !_MEMBAR (FP)

P2636: !_BST [6] (maybe <- 0x418000b4) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2637: !_MEMBAR (FP)
membar #StoreLoad

P2638: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P2639: !_MEMBAR (FP)
membar #StoreLoad

P2640: !_BLD [32] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2640
nop
RET2640:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2641: !_MEMBAR (FP) (Loop exit) (Branch target of P2838)
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovs %f4, %f30
!--

sethi %hi(0x20000), %l7
add   %i1, %l7, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_4_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_0
nop
ba P2642
nop

TARGET2838:
ba RET2838
nop


P2642: !_MEMBAR (FP) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_4_1:
membar #StoreLoad

P2643: !_BLD [1] (FP) (Branch target of P2738)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f0
membar #Sync
! 5 addresses covered
fmovs %f4, %f3
fmovd %f8, %f4
ba P2644
nop

TARGET2738:
ba RET2738
nop


P2644: !_MEMBAR (FP)

P2645: !_ST [29] (maybe <- 0x418000b6) (FP) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2645
nop
RET2645:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2646: !_LD [33] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 0], %f5
! 1 addresses covered

P2647: !_MEMBAR (FP) (Branch target of P2296)
ba P2648
nop

TARGET2296:
ba RET2296
nop


P2648: !_BST [10] (maybe <- 0x418000b7) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P2649: !_MEMBAR (FP)

P2650: !_BST [11] (maybe <- 0x418000b8) (FP) (Branch target of P2460)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P2651
nop

TARGET2460:
ba RET2460
nop


P2651: !_MEMBAR (FP)

P2652: !_BST [2] (maybe <- 0x418000bb) (FP) (Secondary ctx) (Branch target of P2678)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P2653
nop

TARGET2678:
ba RET2678
nop


P2653: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2654: !_ST [10] (maybe <- 0x2000017) (Int) (CBR) (Branch target of P2494)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2654
nop
RET2654:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2655
nop

TARGET2494:
ba RET2494
nop


P2655: !_MEMBAR (FP) (Secondary ctx) (Branch target of P2840)
membar #StoreLoad
ba P2656
nop

TARGET2840:
ba RET2840
nop


P2656: !_BLD [10] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2656
nop
RET2656:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2657: !_MEMBAR (FP) (Secondary ctx)

P2658: !_REPLACEMENT [2] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P2659: !_ST [24] (maybe <- 0x418000c0) (FP) (CBR) (Branch target of P2994)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2659
nop
RET2659:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2660
nop

TARGET2994:
ba RET2994
nop


P2660: !_FLUSHI [15] (Int) (CBR)
flush %g0 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2660
nop
RET2660:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2661: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P2662: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2662
nop
RET2662:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2663: !_BLD [27] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P2664: !_MEMBAR (FP) (Secondary ctx)

P2665: !_ST [2] (maybe <- 0x2000018) (Int)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4

P2666: !_ST [30] (maybe <- 0x2000019) (Int) (Branch target of P2855)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4
ba P2667
nop

TARGET2855:
ba RET2855
nop


P2667: !_ST [10] (maybe <- 0x200001a) (Int)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4

P2668: !_MEMBAR (FP) (Branch target of P2324)
ba P2669
nop

TARGET2324:
ba RET2324
nop


P2669: !_BST [26] (maybe <- 0x418000c1) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2670: !_MEMBAR (FP) (Branch target of P2538)
membar #StoreLoad
ba P2671
nop

TARGET2538:
ba RET2538
nop


P2671: !_LD [10] (Int)
lduw [%i1 + 64], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2672: !_MEMBAR (FP) (Secondary ctx)

P2673: !_BST [3] (maybe <- 0x418000c3) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2674: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2675: !_LD [26] (FP) (CBR)
ld [%i2 + 128], %f9
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2675
nop
RET2675:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2676: !_IDC_FLIP [9] (Int) (CBR)
IDC_FLIP(2676, 4644, 4, 0x43800020, 0x20, %i1, 0x20, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2676
nop
RET2676:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2677: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2677
nop
RET2677:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2678: !_BST [29] (maybe <- 0x418000c8) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2678
nop
RET2678:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2679: !_MEMBAR (FP)

P2680: !_BSTC [28] (maybe <- 0x418000c9) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2681: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2681
nop
RET2681:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2682: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P2683: !_MEMBAR (FP)

P2684: !_REPLACEMENT [24] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2684
nop
RET2684:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2685: !_IDC_FLIP [12] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(2685, 29884, 4, 0x44000004, 0x4, %i3, 0x4, %l6, %l7, %o5, %l3)

P2686: !_MEMBAR (FP) (Branch target of P2692)
ba P2687
nop

TARGET2692:
ba RET2692
nop


P2687: !_BST [1] (maybe <- 0x418000ca) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2687
nop
RET2687:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2688: !_MEMBAR (FP)
membar #StoreLoad

P2689: !_FLUSHI [4] (Int) (CBR)
flush %g0 

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2689
nop
RET2689:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2690: !_ST [33] (maybe <- 0x418000cf) (FP) (Nucleus ctx) (Branch target of P2863)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 0 ] %asi
ba P2691
nop

TARGET2863:
ba RET2863
nop


P2691: !_MEMBAR (FP)

P2692: !_BST [23] (maybe <- 0x418000d0) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2692
nop
RET2692:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2693: !_MEMBAR (FP) (CBR) (Branch target of P3045)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2693
nop
RET2693:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P2694
nop

TARGET3045:
ba RET3045
nop


P2694: !_REPLACEMENT [31] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+192], %l3
st %l3, [%i2+192]
add %i2, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]
add %o5, %l7, %o5
ld [%o5+192], %l3
st %l3, [%o5+192]

P2695: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2696: !_BLD [8] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P2697: !_MEMBAR (FP) (Secondary ctx)

P2698: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P2699: !_MEMBAR (FP)

P2700: !_REPLACEMENT [7] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2701: !_LD [0] (Int) (LE)
wr %g0, 0x88, %asi
lduwa [%i0 + 0] %asi, %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

P2702: !_REPLACEMENT [17] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2702
nop
RET2702:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2703: !_REPLACEMENT [12] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2703
nop
RET2703:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2704: !_IDC_FLIP [17] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
IDC_FLIP(2704, 27563, 4, 0x44800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)

P2705: !_MEMBAR (FP)

P2706: !_BSTC [13] (maybe <- 0x418000d3) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2707: !_MEMBAR (FP)
membar #StoreLoad

P2708: !_REPLACEMENT [22] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P2709: !_REPLACEMENT [12] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P2710: !_MEMBAR (FP) (Branch target of P2988)
ba P2711
nop

TARGET2988:
ba RET2988
nop


P2711: !_BSTC [7] (maybe <- 0x418000d6) (FP) (Branch target of P2237)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi
ba P2712
nop

TARGET2237:
ba RET2237
nop


P2712: !_MEMBAR (FP)

P2713: !_BST [16] (maybe <- 0x418000d7) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2713
nop
RET2713:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2714: !_MEMBAR (FP) (Branch target of P2135)
membar #StoreLoad
ba P2715
nop

TARGET2135:
ba RET2135
nop


P2715: !_REPLACEMENT [25] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P2716: !_REPLACEMENT [29] (Int) (Branch target of P2602)
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
ba P2717
nop

TARGET2602:
ba RET2602
nop


P2717: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2718: !_BLD [21] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P2719: !_MEMBAR (FP) (Secondary ctx)

P2720: !_REPLACEMENT [18] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P2721: !_ST [29] (maybe <- 0x200001b) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P2722: !_LD [26] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 128] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2722
nop
RET2722:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2723: !_LD [26] (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 128] %asi, %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

P2724: !_MEMBAR (FP)

P2725: !_BST [1] (maybe <- 0x418000d8) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2726: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2726
nop
RET2726:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2727: !_REPLACEMENT [16] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P2728: !_MEMBAR (FP)
membar #StoreLoad

P2729: !_BLD [24] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P2730: !_MEMBAR (FP) (CBR) (Branch target of P2491)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2730
nop
RET2730:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2731
nop

TARGET2491:
ba RET2491
nop


P2731: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f4
fmovd %f40, %f18
fmovs %f18, %f5

P2732: !_MEMBAR (FP)

P2733: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2733
nop
RET2733:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2734: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2734
nop
RET2734:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2735: !_BST [5] (maybe <- 0x418000dd) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2736: !_MEMBAR (FP)

P2737: !_BST [23] (maybe <- 0x418000df) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2738: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2738
nop
RET2738:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2739: !_ST [20] (maybe <- 0x418000e2) (FP) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2739
nop
RET2739:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2740: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2740
nop
RET2740:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2741: !_BST [5] (maybe <- 0x418000e3) (FP) (Branch target of P2965)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P2742
nop

TARGET2965:
ba RET2965
nop


P2742: !_MEMBAR (FP)
membar #StoreLoad

P2743: !_LD [17] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 96], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2743
nop
RET2743:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2744: !_ST [9] (maybe <- 0x200001c) (Int)
stw   %l4, [%i1 + 32 ]
add   %l4, 1, %l4

P2745: !_ST [27] (maybe <- 0x200001d) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 160] %asi
add   %l4, 1, %l4

P2746: !_REPLACEMENT [26] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P2747: !_ST [25] (maybe <- 0x200001e) (Int)
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4

P2748: !_LD [0] (Int)
lduw [%i0 + 0], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2

P2749: !_LD [25] (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i2 + 96] %asi, %f6
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2749
nop
RET2749:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2750: !_LD [27] (FP)
ld [%i2 + 160], %f7
! 1 addresses covered

P2751: !_MEMBAR (FP) (Secondary ctx)

P2752: !_BST [24] (maybe <- 0x418000e5) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P2753: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2754: !_LD [7] (FP) (Branch target of P2294)
ld [%i0 + 128], %f8
! 1 addresses covered
ba P2755
nop

TARGET2294:
ba RET2294
nop


P2755: !_MEMBAR (FP) (Branch target of P2659)
ba P2756
nop

TARGET2659:
ba RET2659
nop


P2756: !_BST [16] (maybe <- 0x418000e7) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2756
nop
RET2756:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2757: !_MEMBAR (FP)
membar #StoreLoad

P2758: !_LD [18] (Int) (Branch target of P3074)
lduw [%i2 + 128], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3
ba P2759
nop

TARGET3074:
ba RET3074
nop


P2759: !_MEMBAR (FP)

P2760: !_BST [29] (maybe <- 0x418000e8) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2760
nop
RET2760:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2761: !_MEMBAR (FP)
membar #StoreLoad

P2762: !_REPLACEMENT [16] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+16], %l3
st %l3, [%i2+16]
add %i2, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P2763: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2764: !_ST [12] (maybe <- 0x200001f) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 4] %asi
add   %l4, 1, %l4

P2765: !_LD [19] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f9
! 1 addresses covered

P2766: !_MEMBAR (FP)

P2767: !_BSTC [15] (maybe <- 0x418000e9) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P2768: !_MEMBAR (FP)

P2769: !_BST [30] (maybe <- 0x418000ea) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P2770: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2771: !_ST [20] (maybe <- 0x418000eb) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2771
nop
RET2771:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2772: !_ST [30] (maybe <- 0x2000020) (Int)
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

P2773: !_IDC_FLIP [28] (Int) (CBR)
IDC_FLIP(2773, 14657, 4, 0x46000000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2773
nop
RET2773:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2774: !_MEMBAR (FP) (Branch target of P2095)
ba P2775
nop

TARGET2095:
ba RET2095
nop


P2775: !_BST [31] (maybe <- 0x418000ec) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 192 ] %asi

P2776: !_MEMBAR (FP)
membar #StoreLoad

P2777: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P2778: !_LD [27] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 160], %f10
! 1 addresses covered

P2779: !_ST [18] (maybe <- 0x418000ed) (FP) (Branch target of P2587)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]
ba P2780
nop

TARGET2587:
ba RET2587
nop


P2780: !_REPLACEMENT [17] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2780
nop
RET2780:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2781: !_LD [29] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %l3
! move %l3(lower) -> %o3(lower)
or %l3, %o3, %o3

P2782: !_REPLACEMENT [24] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P2783: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P2784: !_LD [31] (Int)
lduw [%i2 + 192], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P2785: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2786: !_BLD [0] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P2787: !_MEMBAR (FP) (Secondary ctx)

P2788: !_REPLACEMENT [2] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i3+8], %l3
st %l3, [%i3+8]
add %i3, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2788
nop
RET2788:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2789: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2789
nop
RET2789:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2790: !_BST [6] (maybe <- 0x418000ee) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2790
nop
RET2790:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2791: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3082)
membar #StoreLoad
ba P2792
nop

TARGET3082:
ba RET3082
nop


P2792: !_LD [25] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 96], %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P2793: !_REPLACEMENT [13] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P2794: !_ST [2] (maybe <- 0x2000021) (Int)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4

P2795: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2795
nop
RET2795:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2796: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f0
membar #Sync
! 2 addresses covered
fmovs %f8, %f1

P2797: !_MEMBAR (FP) (Branch target of P2437)
ba P2798
nop

TARGET2437:
ba RET2437
nop


P2798: !_REPLACEMENT [11] (Int) (Branch target of P2926)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P2799
nop

TARGET2926:
ba RET2926
nop


P2799: !_REPLACEMENT [21] (Int) (Nucleus ctx) (Branch target of P2261)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
ba P2800
nop

TARGET2261:
ba RET2261
nop


P2800: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2800
nop
RET2800:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2801: !_BSTC [18] (maybe <- 0x418000f0) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P2802: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2803: !_REPLACEMENT [32] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+256], %l3
st %l3, [%i2+256]
add %i2, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P2804: !_REPLACEMENT [12] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2804
nop
RET2804:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2805: !_ST [10] (maybe <- 0x2000022) (Int)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4

P2806: !_REPLACEMENT [31] (Int) (Branch target of P2823)
sethi %hi(0x2000), %l3
ld [%i2+192], %l7
st %l7, [%i2+192]
add %i2, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
ba P2807
nop

TARGET2823:
ba RET2823
nop


P2807: !_ST [24] (maybe <- 0x418000f1) (FP) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2807
nop
RET2807:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2808: !_LD [26] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i2 + 128] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2809: !_REPLACEMENT [12] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P2810: !_ST [0] (maybe <- 0x2000023) (Int) (Secondary ctx) (Branch target of P2440)
wr %g0, 0x81, %asi
stwa   %l4, [%i0 + 0] %asi
add   %l4, 1, %l4
ba P2811
nop

TARGET2440:
ba RET2440
nop


P2811: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P2812: !_LD [3] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i0 + 16] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

P2813: !_MEMBAR (FP)

P2814: !_BST [15] (maybe <- 0x418000f2) (FP) (Branch target of P2662)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P2815
nop

TARGET2662:
ba RET2662
nop


P2815: !_MEMBAR (FP) (Branch target of P2341)
membar #StoreLoad
ba P2816
nop

TARGET2341:
ba RET2341
nop


P2816: !_REPLACEMENT [13] (Int) (Branch target of P2385)
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
ba P2817
nop

TARGET2385:
ba RET2385
nop


P2817: !_ST [0] (maybe <- 0x2000024) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 0] %asi
add   %l4, 1, %l4

P2818: !_REPLACEMENT [11] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2818
nop
RET2818:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2819: !_REPLACEMENT [4] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P2820: !_MEMBAR (FP) (Branch target of P3058)
ba P2821
nop

TARGET3058:
ba RET3058
nop


P2821: !_BST [15] (maybe <- 0x418000f3) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2822: !_MEMBAR (FP)
membar #StoreLoad

P2823: !_REPLACEMENT [5] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2823
nop
RET2823:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2824: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2824
nop
RET2824:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2825: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

P2826: !_MEMBAR (FP)

P2827: !_REPLACEMENT [17] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P2828: !_MEMBAR (FP) (Branch target of P2927)
ba P2829
nop

TARGET2927:
ba RET2927
nop


P2829: !_BST [6] (maybe <- 0x418000f4) (FP) (Branch target of P2411)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P2830
nop

TARGET2411:
ba RET2411
nop


P2830: !_MEMBAR (FP)
membar #StoreLoad

P2831: !_PREFETCH [22] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
prefetcha [%i3 + 4] %asi, 1

P2832: !_ST [16] (maybe <- 0x418000f6) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 16 ]

P2833: !_MEMBAR (FP)
membar #StoreLoad

P2834: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P2835: !_MEMBAR (FP) (Branch target of P2973)
ba P2836
nop

TARGET2973:
ba RET2973
nop


P2836: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f34, %f18
fmovs %f18, %f7
fmovd %f36, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P2837: !_MEMBAR (FP)

P2838: !_BLD [0] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f10
fmovd %f34, %f12
fmovd %f36, %f18
fmovs %f18, %f13
fmovd %f40, %f14

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2838
nop
RET2838:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2839: !_MEMBAR (FP) (Branch target of P2167)
ba P2840
nop

TARGET2167:
ba RET2167
nop


P2840: !_LD [22] (FP) (CBR)
ld [%i3 + 4], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2840
nop
RET2840:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2841: !_REPLACEMENT [21] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P2842: !_LD [28] (Int) (LE) (CBR)
wr %g0, 0x88, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 0] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2842
nop
RET2842:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2843: !_MEMBAR (FP)

P2844: !_BST [10] (maybe <- 0x418000f7) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P2845: !_MEMBAR (FP)
membar #StoreLoad

P2846: !_ST [13] (maybe <- 0x418000f8) (FP) (CBR) (Branch target of P2818)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2846
nop
RET2846:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2847
nop

TARGET2818:
ba RET2818
nop


P2847: !_MEMBAR (FP)

P2848: !_BST [21] (maybe <- 0x418000f9) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2849: !_MEMBAR (FP) (Branch target of P2416)
membar #StoreLoad
ba P2850
nop

TARGET2416:
ba RET2416
nop


P2850: !_REPLACEMENT [27] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+160], %l6
st %l6, [%i3+160]
add %i3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2850
nop
RET2850:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2851: !_LD [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 32], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

P2852: !_REPLACEMENT [24] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2852
nop
RET2852:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2853: !_REPLACEMENT [4] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P2854: !_REPLACEMENT [2] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P2855: !_REPLACEMENT [1] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2855
nop
RET2855:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2856: !_LD [10] (Int)
lduw [%i1 + 64], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P2857: !_LD [14] (FP)
ld [%i2 + 64], %f0
! 1 addresses covered

P2858: !_ST [18] (maybe <- 0x418000fc) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P2859: !_MEMBAR (FP) (Branch target of P2790)
ba P2860
nop

TARGET2790:
ba RET2790
nop


P2860: !_BST [33] (maybe <- 0x418000fd) (FP) (Branch target of P2262)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P2861
nop

TARGET2262:
ba RET2262
nop


P2861: !_MEMBAR (FP)
membar #StoreLoad

P2862: !_LD [33] (Int)
lduw [%i2 + 0], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

P2863: !_LD [3] (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 16] %asi, %f1
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2863
nop
RET2863:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2864: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2864
nop
RET2864:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2865: !_BST [0] (maybe <- 0x418000fe) (FP) (Branch target of P2254)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P2866
nop

TARGET2254:
ba RET2254
nop


P2866: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2866
nop
RET2866:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2867: !_REPLACEMENT [32] (Int) (Branch target of P2846)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
ba P2868
nop

TARGET2846:
ba RET2846
nop


P2868: !_ST [33] (maybe <- 0x41800103) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P2869: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2869
nop
RET2869:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2870: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P2871: !_MEMBAR (FP)

P2872: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P2873: !_LD [16] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 16] %asi, %f4
! 1 addresses covered

P2874: !_LD [18] (FP)
ld [%i2 + 128], %f5
! 1 addresses covered

P2875: !_MEMBAR (FP)
membar #StoreLoad

P2876: !_BLD [1] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f6
fmovd %f34, %f8
fmovd %f36, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P2877: !_MEMBAR (FP)

P2878: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P2879: !_MEMBAR (FP)

P2880: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P2881: !_MEMBAR (FP)

P2882: !_ST [1] (maybe <- 0x41800104) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P2883: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2884: !_BLD [22] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P2885: !_MEMBAR (FP) (Secondary ctx)

P2886: !_ST [27] (maybe <- 0x2000025) (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i3 + 160] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2886
nop
RET2886:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2887: !_MEMBAR (FP)

P2888: !_BSTC [5] (maybe <- 0x41800105) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P2889: !_MEMBAR (FP) (Branch target of P3063)
membar #StoreLoad
ba P2890
nop

TARGET3063:
ba RET3063
nop


P2890: !_REPLACEMENT [29] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P2891: !_MEMBAR (FP) (Secondary ctx)

P2892: !_BSTC [0] (maybe <- 0x41800107) (FP) (Secondary ctx) (Branch target of P2447)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P2893
nop

TARGET2447:
ba RET2447
nop


P2893: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2894: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P2895: !_MEMBAR (FP)

P2896: !_REPLACEMENT [25] (Int)
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P2897: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2898: !_BLD [28] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P2899: !_MEMBAR (FP) (Secondary ctx)

P2900: !_REPLACEMENT [32] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P2901: !_MEMBAR (FP) (Secondary ctx)

P2902: !_BST [4] (maybe <- 0x4180010c) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2903: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2904: !_ST [22] (maybe <- 0x2000026) (Int) (Branch target of P2995)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 4 ]
add   %l4, 1, %l4
ba P2905
nop

TARGET2995:
ba RET2995
nop


P2905: !_LD [20] (Int) (Branch target of P2780)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 256], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3
ba P2906
nop

TARGET2780:
ba RET2780
nop


P2906: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P2907: !_BLD [32] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P2908: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P2749)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2908
nop
RET2908:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2909
nop

TARGET2749:
ba RET2749
nop


P2909: !_BLD [31] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2909
nop
RET2909:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2910: !_MEMBAR (FP) (Branch target of P2560)
ba P2911
nop

TARGET2560:
ba RET2560
nop


P2911: !_BLD [7] (FP) (CBR) (Branch target of P2852)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2911
nop
RET2911:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2912
nop

TARGET2852:
ba RET2852
nop


P2912: !_MEMBAR (FP)

P2913: !_BLD [18] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2913
nop
RET2913:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2914: !_MEMBAR (FP) (Branch target of P2183)
ba P2915
nop

TARGET2183:
ba RET2183
nop


P2915: !_ST [30] (maybe <- 0x41800111) (FP) (Secondary ctx) (Branch target of P2320)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 128 ] %asi
ba P2916
nop

TARGET2320:
ba RET2320
nop


P2916: !_MEMBAR (FP)

P2917: !_BSTC [23] (maybe <- 0x41800112) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2918: !_MEMBAR (FP) (Branch target of P2279)
membar #StoreLoad
ba P2919
nop

TARGET2279:
ba RET2279
nop


P2919: !_ST [8] (maybe <- 0x41800115) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2919
nop
RET2919:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2920: !_MEMBAR (FP)

P2921: !_BSTC [25] (maybe <- 0x41800116) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2921
nop
RET2921:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2922: !_MEMBAR (FP) (Branch target of P2166)
ba P2923
nop

TARGET2166:
ba RET2166
nop


P2923: !_BST [23] (maybe <- 0x41800118) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2924: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2924
nop
RET2924:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2925: !_LD [30] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i2 + 128] %asi, %f9
! 1 addresses covered

P2926: !_IDC_FLIP [10] (Int) (CBR)
IDC_FLIP(2926, 17865, 4, 0x43800040, 0x40, %i1, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2926
nop
RET2926:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2927: !_PREFETCH [10] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
prefetcha [%i1 + 64] %asi, 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2927
nop
RET2927:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2928: !_LD [13] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 32], %f10
! 1 addresses covered

P2929: !_ST [27] (maybe <- 0x2000027) (Int) (LE)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %l6
srl %l6, 8, %l6
sll %l4, 8, %o5
and %o5, %l3, %o5
or %o5, %l6, %o5
srl %o5, 16, %l6
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l6, %o5
stwa   %o5, [%i3 + 160] %asi
add   %l4, 1, %l4

P2930: !_REPLACEMENT [2] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+8], %l3
st %l3, [%i3+8]
add %i3, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

P2931: !_LD [4] (FP)
ld [%i0 + 32], %f11
! 1 addresses covered

P2932: !_MEMBAR (FP)
membar #StoreLoad

P2933: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f12
fmovd %f40, %f14

P2934: !_MEMBAR (FP) (Branch target of P2999)
ba P2935
nop

TARGET2999:
ba RET2999
nop


P2935: !_BSTC [26] (maybe <- 0x4180011b) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P2936: !_MEMBAR (FP)
membar #StoreLoad

P2937: !_REPLACEMENT [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P2938: !_ST [20] (maybe <- 0x4180011d) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P2939: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2939
nop
RET2939:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2940: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f34, %f18
fmovs %f18, %f1
fmovd %f36, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P2941: !_MEMBAR (FP)

P2942: !_LD [5] (Int)
lduw [%i0 + 64], %l3
! move %l3(lower) -> %o3(lower)
or %l3, %o3, %o3

P2943: !_REPLACEMENT [30] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P2944: !_PREFETCH [20] (Int)
prefetch [%i3 + 256], 1

P2945: !_ST [28] (maybe <- 0x2000028) (Int) (CBR) (Branch target of P2257)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2945
nop
RET2945:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2946
nop

TARGET2257:
ba RET2257
nop


P2946: !_MEMBAR (FP) (Branch target of P2182)
membar #StoreLoad
ba P2947
nop

TARGET2182:
ba RET2182
nop


P2947: !_BLD [9] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f4
fmovd %f40, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2947
nop
RET2947:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2948: !_MEMBAR (FP)

P2949: !_BLD [23] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f6
fmovd %f40, %f8

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2949
nop
RET2949:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2950: !_MEMBAR (FP)

P2951: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P2952: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2952
nop
RET2952:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P2953: !_BST [4] (maybe <- 0x4180011e) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2954: !_MEMBAR (FP) (Secondary ctx)

P2955: !_BST [33] (maybe <- 0x41800123) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2956: !_MEMBAR (FP)
membar #StoreLoad

P2957: !_REPLACEMENT [3] (Int) (Secondary ctx) (Branch target of P2730)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
ba P2958
nop

TARGET2730:
ba RET2730
nop


P2958: !_IDC_FLIP [5] (Int)
IDC_FLIP(2958, 19235, 4, 0x43000040, 0x40, %i0, 0x40, %l6, %l7, %o5, %l3)

P2959: !_ST [17] (maybe <- 0x2000029) (Int) (Branch target of P2850)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 96 ]
add   %l4, 1, %l4
ba P2960
nop

TARGET2850:
ba RET2850
nop


P2960: !_REPLACEMENT [4] (Int) (CBR) (Branch target of P2224)
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2960
nop
RET2960:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2961
nop

TARGET2224:
ba RET2224
nop


P2961: !_MEMBAR (FP) (Branch target of P2330)
ba P2962
nop

TARGET2330:
ba RET2330
nop


P2962: !_BST [11] (maybe <- 0x41800124) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION2_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P2963: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2963
nop
RET2963:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2964: !_BST [0] (maybe <- 0x41800127) (FP) (CBR) (Secondary ctx) (Branch target of P2622)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2964
nop
RET2964:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P2965
nop

TARGET2622:
ba RET2622
nop


P2965: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P2483)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2965
nop
RET2965:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P2966
nop

TARGET2483:
ba RET2483
nop


P2966: !_ST [11] (maybe <- 0x200002a) (Int)
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P2967: !_REPLACEMENT [32] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P2968: !_LD [22] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P2969: !_ST [6] (maybe <- 0x4180012c) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 96 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2969
nop
RET2969:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2970: !_MEMBAR (FP)
membar #StoreLoad

P2971: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P2972: !_MEMBAR (FP)

P2973: !_REPLACEMENT [7] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2973
nop
RET2973:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2974: !_MEMBAR (FP)

P2975: !_BST [3] (maybe <- 0x4180012d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P2976: !_MEMBAR (FP)
membar #StoreLoad

P2977: !_ST [20] (maybe <- 0x200002b) (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 256 ]
add   %l4, 1, %l4

P2978: !_REPLACEMENT [14] (Int) (Branch target of P2909)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
ba P2979
nop

TARGET2909:
ba RET2909
nop


P2979: !_ST [13] (maybe <- 0x41800132) (FP) (CBR) (Branch target of P2291)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2979
nop
RET2979:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P2980
nop

TARGET2291:
ba RET2291
nop


P2980: !_LD [24] (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 64] %asi, %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P2981: !_ST [1] (maybe <- 0x41800133) (FP) (Branch target of P3030)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]
ba P2982
nop

TARGET3030:
ba RET3030
nop


P2982: !_MEMBAR (FP)
membar #StoreLoad

P2983: !_BLD [27] (FP) (Branch target of P3080)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2
ba P2984
nop

TARGET3080:
ba RET3080
nop


P2984: !_MEMBAR (FP) (Branch target of P2468)
ba P2985
nop

TARGET2468:
ba RET2468
nop


P2985: !_ST [3] (maybe <- 0x200002c) (Int)
stw   %l4, [%i0 + 16 ]
add   %l4, 1, %l4

P2986: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2986
nop
RET2986:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2987: !_BSTC [24] (maybe <- 0x41800134) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P2988: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2988
nop
RET2988:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P2989: !_LD [26] (Int)
lduw [%i2 + 128], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P2990: !_ST [21] (maybe <- 0x200002d) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 0] %asi
add   %l4, 1, %l4

P2991: !_MEMBAR (FP)

P2992: !_BST [11] (maybe <- 0x41800136) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P2993: !_MEMBAR (FP)
membar #StoreLoad

P2994: !_BLD [0] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2994
nop
RET2994:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P2995: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET2995
nop
RET2995:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P2996: !_REPLACEMENT [15] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P2997: !_ST [8] (maybe <- 0x41800139) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 0 ] %asi

P2998: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P2999: !_MEMBAR (FP) (CBR) (Branch target of P2516)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET2999
nop
RET2999:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3000
nop

TARGET2516:
ba RET2516
nop


P3000: !_BLD [31] (FP) (Branch target of P2601)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8
ba P3001
nop

TARGET2601:
ba RET2601
nop


P3001: !_MEMBAR (FP)

P3002: !_BST [12] (maybe <- 0x4180013a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3003: !_MEMBAR (FP)
membar #StoreLoad

P3004: !_BLD [24] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P3005: !_MEMBAR (FP) (Secondary ctx)

P3006: !_BLD [26] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P3007: !_MEMBAR (FP) (Secondary ctx)

P3008: !_BST [16] (maybe <- 0x4180013d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3009: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3009
nop
RET3009:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3010: !_BST [27] (maybe <- 0x4180013e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3011: !_MEMBAR (FP)
membar #StoreLoad

P3012: !_REPLACEMENT [13] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P3013: !_REPLACEMENT [24] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P3014: !_MEMBAR (FP) (Branch target of P2969)
ba P3015
nop

TARGET2969:
ba RET2969
nop


P3015: !_BST [6] (maybe <- 0x41800140) (FP) (Branch target of P2353)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P3016
nop

TARGET2353:
ba RET2353
nop


P3016: !_MEMBAR (FP)

P3017: !_BST [9] (maybe <- 0x41800142) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P3018: !_MEMBAR (FP) (Branch target of P2318)
membar #StoreLoad
ba P3019
nop

TARGET2318:
ba RET2318
nop


P3019: !_REPLACEMENT [14] (Int) (Branch target of P2703)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
ba P3020
nop

TARGET2703:
ba RET2703
nop


P3020: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3021: !_BLD [7] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P3022: !_MEMBAR (FP) (Secondary ctx)

P3023: !_PREFETCH [5] (Int)
prefetch [%i0 + 64], 1

P3024: !_ST [28] (maybe <- 0x200002e) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P3025: !_LD [16] (FP) (Secondary ctx) (Branch target of P2677)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 16] %asi, %f14
! 1 addresses covered
ba P3026
nop

TARGET2677:
ba RET2677
nop


P3026: !_REPLACEMENT [32] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P3027: !_ST [32] (maybe <- 0x41800144) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3027
nop
RET3027:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3028: !_MEMBAR (FP)

P3029: !_BST [9] (maybe <- 0x41800145) (FP) (CBR) (Branch target of P2314)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3029
nop
RET3029:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P3030
nop

TARGET2314:
ba RET2314
nop


P3030: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3030
nop
RET3030:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3031: !_PREFETCH [10] (Int) (CBR) (Branch target of P2302)
prefetch [%i1 + 64], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3031
nop
RET3031:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3032
nop

TARGET2302:
ba RET2302
nop


P3032: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P3033: !_LD [18] (Int) (Branch target of P2223)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduw [%i3 + 128], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0
ba P3034
nop

TARGET2223:
ba RET2223
nop


P3034: !_MEMBAR (FP) (Branch target of P3029)
ba P3035
nop

TARGET3029:
ba RET3029
nop


P3035: !_BST [16] (maybe <- 0x41800147) (FP) (Branch target of P2684)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P3036
nop

TARGET2684:
ba RET2684
nop


P3036: !_MEMBAR (FP)
membar #StoreLoad

P3037: !_BLD [12] (FP) (Branch target of P2842)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1
ba P3038
nop

TARGET2842:
ba RET2842
nop


P3038: !_MEMBAR (FP)

P3039: !_REPLACEMENT [3] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+16], %o5
st %o5, [%i3+16]
add %i3, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P3040: !_MEMBAR (FP)
membar #StoreLoad

P3041: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f2
fmovd %f34, %f4
fmovd %f36, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P3042: !_MEMBAR (FP) (Branch target of P2676)
ba P3043
nop

TARGET2676:
ba RET2676
nop


P3043: !_ST [1] (maybe <- 0x200002f) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 4] %asi
add   %l4, 1, %l4

P3044: !_ST [32] (maybe <- 0x41800148) (FP) (Branch target of P2986)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]
ba P3045
nop

TARGET2986:
ba RET2986
nop


P3045: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3045
nop
RET3045:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3046: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P3047: !_MEMBAR (FP)

P3048: !_PREFETCH [11] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetcha [%i2 + 0] %asi, 1

P3049: !_ST [19] (maybe <- 0x2000030) (Int) (Branch target of P2624)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4
ba P3050
nop

TARGET2624:
ba RET2624
nop


P3050: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P3051: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3051
nop
RET3051:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3052: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P3053: !_MEMBAR (FP) (CBR) (Branch target of P2374)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3053
nop
RET3053:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3054
nop

TARGET2374:
ba RET2374
nop


P3054: !_IDC_FLIP [26] (Int)
IDC_FLIP(3054, 31704, 4, 0x45800080, 0x80, %i3, 0x80, %l6, %l7, %o5, %l3)

P3055: !_REPLACEMENT [10] (Int) (Branch target of P2175)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P3056
nop

TARGET2175:
ba RET2175
nop


P3056: !_MEMBAR (FP)
membar #StoreLoad

P3057: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P3058: !_MEMBAR (FP) (CBR) (Branch target of P2556)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3058
nop
RET3058:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3059
nop

TARGET2556:
ba RET2556
nop


P3059: !_ST [25] (maybe <- 0x41800149) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 96 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3059
nop
RET3059:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3060: !_LD [4] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i0 + 32] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P3061: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %o5
ld [%i2+8], %l6
st %l6, [%i2+8]
add %i2, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]

P3062: !_REPLACEMENT [14] (Int)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3063: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3063
nop
RET3063:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3064: !_BST [15] (maybe <- 0x4180014a) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3064
nop
RET3064:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3065: !_MEMBAR (FP)
membar #StoreLoad

P3066: !_ST [23] (maybe <- 0x2000031) (Int) (Branch target of P2497)
stw   %l4, [%i3 + 32 ]
add   %l4, 1, %l4
ba P3067
nop

TARGET2497:
ba RET2497
nop


P3067: !_REPLACEMENT [32] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P3068: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3068
nop
RET3068:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3069: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P3070: !_MEMBAR (FP)

P3071: !_REPLACEMENT [7] (Int) (Secondary ctx) (Branch target of P2726)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P3072
nop

TARGET2726:
ba RET2726
nop


P3072: !_REPLACEMENT [13] (Int)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P3073: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3074: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3074
nop
RET3074:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3075: !_BST [24] (maybe <- 0x4180014b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P3076: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3076
nop
RET3076:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3077: !_BST [28] (maybe <- 0x4180014d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3078: !_MEMBAR (FP) (Branch target of P2132)
ba P3079
nop

TARGET2132:
ba RET2132
nop


P3079: !_BST [27] (maybe <- 0x4180014e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3080: !_MEMBAR (FP) (CBR) (Branch target of P2524)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3080
nop
RET3080:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3081
nop

TARGET2524:
ba RET2524
nop


P3081: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P3082: !_LD [30] (FP) (CBR)
ld [%i3 + 128], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3082
nop
RET3082:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3083: !_MEMBAR (FP)

P3084: !_BSTC [6] (maybe <- 0x41800150) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P3085: !_MEMBAR (FP)
membar #StoreLoad

P3086: !_LD [18] (Int) (Loop exit) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 128] %asi, %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--
loop_exit_4_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_4_1
nop

P3087: !_MEMBAR (Int) (Branch target of P2247)
membar #StoreLoad
ba END_NODES4
nop

TARGET2247:
ba RET2247
nop


END_NODES4: ! Test instruction sequence for CPU 4 ends
sethi %hi(0xdead0e0f), %l3
or    %l3, %lo(0xdead0e0f), %l3
! move %l3(lower) -> %o0(upper)
sllx %l3, 32, %o0
sethi %hi(0xdead0e0f), %l3
or    %l3, %lo(0xdead0e0f), %l3
stw %l3, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func5:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %o5
or    %o5, %lo(0xdeadbee0), %o5
stw   %o5, [%i5]
sethi %hi(0xdeadbee1), %o5
or    %o5, %lo(0xdeadbee1), %o5
stw   %o5, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x05deade1), %o5
or    %o5, %lo(0x05deade1), %o5
stw %o5, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x2800001), %l4
or    %l4, %lo(0x2800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x42000001), %o5
or    %o5, %lo(0x42000001), %o5
stw %o5, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x36800000), %o5
or    %o5, %lo(0x36800000), %o5
stw %o5, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x6a24^4
sethi %hi(0x6a24), %l0
or    %l0, %lo(0x6a24), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES5: ! Test instruction sequence for ISTREAM 5 begins

P3088: !_REPLACEMENT [18] (Int) (Loop entry)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_5_0:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P3089: !_REPLACEMENT [33] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3089
nop
RET3089:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3090: !_REPLACEMENT [19] (Int)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P3091: !_REPLACEMENT [11] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3091
nop
RET3091:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3092: !_REPLACEMENT [24] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3093: !_MEMBAR (FP)

P3094: !_BST [7] (maybe <- 0x42000001) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P3095: !_MEMBAR (FP) (Branch target of P3835)
ba P3096
nop

TARGET3835:
ba RET3835
nop


P3096: !_BST [17] (maybe <- 0x42000002) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P3097: !_MEMBAR (FP)

P3098: !_BST [28] (maybe <- 0x42000003) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3099: !_MEMBAR (FP) (Branch target of P3845)
membar #StoreLoad
ba P3100
nop

TARGET3845:
ba RET3845
nop


P3100: !_REPLACEMENT [3] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P3101: !_IDC_FLIP [31] (Int)
IDC_FLIP(3101, 4053, 5, 0x460000c0, 0xc0, %i2, 0xc0, %l6, %l7, %o5, %l3)

P3102: !_FLUSHI [22] (Int)
flush %g0 

P3103: !_LD [6] (Int) (Nucleus ctx) (Branch target of P3963)
wr %g0, 0x4, %asi
lduwa [%i0 + 96] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3104
nop

TARGET3963:
ba RET3963
nop


P3104: !_MEMBAR (FP) (Branch target of P3174)
membar #StoreLoad
ba P3105
nop

TARGET3174:
ba RET3174
nop


P3105: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 192] %asi, %f0
membar #Sync
! 1 addresses covered

P3106: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3106
nop
RET3106:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3107: !_LD [14] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3107
nop
RET3107:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3108: !_REPLACEMENT [23] (Int)
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P3109: !_ST [11] (maybe <- 0x42000004) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P3110: !_MEMBAR (FP)

P3111: !_BST [4] (maybe <- 0x42000005) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3112: !_MEMBAR (FP)
membar #StoreLoad

P3113: !_ST [28] (maybe <- 0x2800001) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P3114: !_REPLACEMENT [25] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P3115: !_LD [18] (FP) (Secondary ctx) (Branch target of P3567)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 128] %asi, %f1
! 1 addresses covered
ba P3116
nop

TARGET3567:
ba RET3567
nop


P3116: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P3117: !_LD [27] (FP) (Secondary ctx) (Branch target of P3119)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lda    [%i2 + 160] %asi, %f2
! 1 addresses covered
ba P3118
nop

TARGET3119:
ba RET3119
nop


P3118: !_ST [27] (maybe <- 0x2800002) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 160] %asi
add   %l4, 1, %l4

P3119: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3119
nop
RET3119:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3120: !_BLD [24] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P3121: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3121
nop
RET3121:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3122: !_LD [14] (Int) (CBR) (Secondary ctx) (Branch target of P3850)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 64] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3122
nop
RET3122:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3123
nop

TARGET3850:
ba RET3850
nop


P3123: !_REPLACEMENT [26] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3124: !_ST [4] (maybe <- 0x4200000a) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 32 ] %asi

P3125: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P3126: !_REPLACEMENT [1] (Int) (CBR) (Branch target of P3428)
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3126
nop
RET3126:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3127
nop

TARGET3428:
ba RET3428
nop


P3127: !_MEMBAR (FP)
membar #StoreLoad

P3128: !_BLD [5] (FP) (Branch target of P3354)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6
ba P3129
nop

TARGET3354:
ba RET3354
nop


P3129: !_MEMBAR (FP)

P3130: !_BST [5] (maybe <- 0x4200000b) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3130
nop
RET3130:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3131: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3131
nop
RET3131:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3132: !_BST [25] (maybe <- 0x4200000d) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P3133: !_MEMBAR (FP) (Secondary ctx)

P3134: !_BSTC [13] (maybe <- 0x4200000f) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3135: !_MEMBAR (FP)
membar #StoreLoad

P3136: !_REPLACEMENT [30] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3137: !_REPLACEMENT [16] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+16], %l7
st %l7, [%i3+16]
add %i3, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3137
nop
RET3137:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3138: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P3206)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3138
nop
RET3138:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3139
nop

TARGET3206:
ba RET3206
nop


P3139: !_BST [30] (maybe <- 0x42000012) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3140: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P3735)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3140
nop
RET3140:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3141
nop

TARGET3735:
ba RET3735
nop


P3141: !_LD [23] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 32], %f7
! 1 addresses covered

P3142: !_ST [28] (maybe <- 0x42000013) (FP) (CBR) (Branch target of P3791)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3142
nop
RET3142:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3143
nop

TARGET3791:
ba RET3791
nop


P3143: !_MEMBAR (FP)

P3144: !_BST [32] (maybe <- 0x42000014) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P3145: !_MEMBAR (FP)
membar #StoreLoad

P3146: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3146
nop
RET3146:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3147: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %l3
ld [%i2+256], %l7
st %l7, [%i2+256]
add %i2, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P3148: !_IDC_FLIP [20] (Int) (CBR)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(3148, 17957, 5, 0x45000100, 0x100, %i3, 0x100, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3148
nop
RET3148:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3149: !_IDC_FLIP [13] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(3149, 28969, 5, 0x44000020, 0x20, %i2, 0x20, %l6, %l7, %o5, %l3)

P3150: !_REPLACEMENT [4] (Int) (Branch target of P3311)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
ba P3151
nop

TARGET3311:
ba RET3311
nop


P3151: !_MEMBAR (FP) (Branch target of P3600)
ba P3152
nop

TARGET3600:
ba RET3600
nop


P3152: !_BST [32] (maybe <- 0x42000015) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

P3153: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3153
nop
RET3153:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3154: !_REPLACEMENT [30] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3155: !_REPLACEMENT [25] (Int) (Secondary ctx) (Branch target of P4014)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
ba P3156
nop

TARGET4014:
ba RET4014
nop


P3156: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P3157: !_MEMBAR (FP)

P3158: !_BSTC [15] (maybe <- 0x42000016) (FP) (Branch target of P3608)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi
ba P3159
nop

TARGET3608:
ba RET3608
nop


P3159: !_MEMBAR (FP) (Branch target of P3265)
membar #StoreLoad
ba P3160
nop

TARGET3265:
ba RET3265
nop


P3160: !_REPLACEMENT [33] (Int) (Branch target of P4086)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P3161
nop

TARGET4086:
ba RET4086
nop


P3161: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3161
nop
RET3161:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3162: !_BLD [19] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3162
nop
RET3162:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3163: !_MEMBAR (FP)

P3164: !_BST [15] (maybe <- 0x42000017) (FP) (Branch target of P3621)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P3165
nop

TARGET3621:
ba RET3621
nop


P3165: !_MEMBAR (FP)
membar #StoreLoad

P3166: !_REPLACEMENT [32] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3166
nop
RET3166:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3167: !_REPLACEMENT [22] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3167
nop
RET3167:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3168: !_PREFETCH [23] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 32], 1

P3169: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3169
nop
RET3169:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3170: !_LD [25] (Int)
lduw [%i2 + 96], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

P3171: !_LD [17] (FP) (Nucleus ctx) (Branch target of P3312)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 96] %asi, %f9
! 1 addresses covered
ba P3172
nop

TARGET3312:
ba RET3312
nop


P3172: !_ST [9] (maybe <- 0x42000018) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 32 ] %asi

P3173: !_LD [21] (Int)
lduw [%i2 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P3174: !_LD [33] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 0], %f10
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3174
nop
RET3174:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3175: !_REPLACEMENT [15] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3176: !_LD [11] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 0] %asi, %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

P3177: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P3178: !_MEMBAR (FP)
membar #StoreLoad

P3179: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P3180: !_MEMBAR (FP)

P3181: !_REPLACEMENT [23] (Int)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P3182: !_ST [32] (maybe <- 0x2800003) (Int) (LE) (Branch target of P3668)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l6
or %l6, %lo(0xff00ff00), %l6
and %l4, %l6, %l7
srl %l7, 8, %l7
sll %l4, 8, %l3
and %l3, %l6, %l3
or %l3, %l7, %l3
srl %l3, 16, %l7
sll %l3, 16, %l3
srl %l3, 0, %l3
or %l3, %l7, %l3
stwa   %l3, [%i3 + 256] %asi
add   %l4, 1, %l4
ba P3183
nop

TARGET3668:
ba RET3668
nop


P3183: !_LD [24] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 64], %f12
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3183
nop
RET3183:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3184: !_LD [1] (FP)
ld [%i0 + 4], %f13
! 1 addresses covered

P3185: !_REPLACEMENT [19] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P3186: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P3187: !_REPLACEMENT [2] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+8], %l3
st %l3, [%i3+8]
add %i3, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

P3188: !_MEMBAR (Int)

P3189: !_BST [4] (maybe <- 0x42000019) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3190: !_MEMBAR (FP) (Branch target of P3131)
membar #StoreLoad
ba P3191
nop

TARGET3131:
ba RET3131
nop


P3191: !_ST [7] (maybe <- 0x2800004) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P3192: !_LD [23] (Int) (CBR) (Secondary ctx) (Branch target of P4035)
wr %g0, 0x81, %asi
lduwa [%i2 + 32] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3192
nop
RET3192:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3193
nop

TARGET4035:
ba RET4035
nop


P3193: !_LD [13] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 32], %o5
! move %o5(lower) -> %o3(lower)
or %o5, %o3, %o3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3193
nop
RET3193:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3194: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P3195: !_MEMBAR (FP)

P3196: !_BST [1] (maybe <- 0x4200001e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3197: !_MEMBAR (FP)
membar #StoreLoad

P3198: !_ST [24] (maybe <- 0x42000023) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 64 ]

P3199: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3199
nop
RET3199:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3200: !_BLD [22] (FP) (Branch target of P4017)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0
ba P3201
nop

TARGET4017:
ba RET4017
nop


P3201: !_MEMBAR (FP) (Branch target of P3613)
ba P3202
nop

TARGET3613:
ba RET3613
nop


P3202: !_LD [7] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 128] %asi, %f1
! 1 addresses covered

P3203: !_LD [9] (FP) (CBR) (Branch target of P3902)
ld [%i1 + 32], %f2
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3203
nop
RET3203:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3204
nop

TARGET3902:
ba RET3902
nop


P3204: !_ST [20] (maybe <- 0x2800005) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stwa   %l4, [%i2 + 256] %asi
add   %l4, 1, %l4

P3205: !_MEMBAR (FP)

P3206: !_BST [18] (maybe <- 0x42000024) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3206
nop
RET3206:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3207: !_MEMBAR (FP)
membar #StoreLoad

P3208: !_REPLACEMENT [15] (Int) (Branch target of P4038)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
ba P3209
nop

TARGET4038:
ba RET4038
nop


P3209: !_ST [3] (maybe <- 0x42000025) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 16 ]

P3210: !_PREFETCH [13] (Int) (Branch target of P3989)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 32], 1
ba P3211
nop

TARGET3989:
ba RET3989
nop


P3211: !_REPLACEMENT [28] (Int) (Branch target of P3986)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P3212
nop

TARGET3986:
ba RET3986
nop


P3212: !_ST [24] (maybe <- 0x2800006) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P3213: !_MEMBAR (FP) (Branch target of P3440)
ba P3214
nop

TARGET3440:
ba RET3440
nop


P3214: !_BST [2] (maybe <- 0x42000026) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3215: !_MEMBAR (FP)
membar #StoreLoad

P3216: !_LD [12] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i3 + 4] %asi, %f3
! 1 addresses covered

P3217: !_ST [3] (maybe <- 0x2800007) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 16] %asi
add   %l4, 1, %l4

P3218: !_LD [6] (Int) (Branch target of P3306)
lduw [%i0 + 96], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4
ba P3219
nop

TARGET3306:
ba RET3306
nop


P3219: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3219
nop
RET3219:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3220: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P3221: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3221
nop
RET3221:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3222: !_REPLACEMENT [17] (Int) (Branch target of P3403)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
ba P3223
nop

TARGET3403:
ba RET3403
nop


P3223: !_REPLACEMENT [0] (Int) (Branch target of P3598)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P3224
nop

TARGET3598:
ba RET3598
nop


P3224: !_LD [4] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 32] %asi, %f5
! 1 addresses covered

P3225: !_MEMBAR (FP)
membar #StoreLoad

P3226: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P3227: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3227
nop
RET3227:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3228: !_LD [17] (FP) (Branch target of P3242)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 96], %f7
! 1 addresses covered
ba P3229
nop

TARGET3242:
ba RET3242
nop


P3229: !_ST [29] (maybe <- 0x4200002b) (FP) (CBR) (Branch target of P3447)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3229
nop
RET3229:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3230
nop

TARGET3447:
ba RET3447
nop


P3230: !_ST [12] (maybe <- 0x2800008) (Int) (Branch target of P3122)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4
ba P3231
nop

TARGET3122:
ba RET3122
nop


P3231: !_MEMBAR (FP) (Branch target of P3734)
membar #StoreLoad
ba P3232
nop

TARGET3734:
ba RET3734
nop


P3232: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P3233: !_MEMBAR (FP)

P3234: !_REPLACEMENT [21] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P3235: !_ST [3] (maybe <- 0x2800009) (Int)
stw   %l4, [%i0 + 16 ]
add   %l4, 1, %l4

P3236: !_MEMBAR (FP)

P3237: !_BST [2] (maybe <- 0x4200002c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3238: !_MEMBAR (FP)

P3239: !_BSTC [12] (maybe <- 0x42000031) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3240: !_MEMBAR (FP)
membar #StoreLoad

P3241: !_LD [17] (FP) (Branch target of P3785)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 96], %f10
! 1 addresses covered
ba P3242
nop

TARGET3785:
ba RET3785
nop


P3242: !_LD [29] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 64], %l6
! move %l6(lower) -> %o4(lower)
or %l6, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3242
nop
RET3242:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3243: !_ST [3] (maybe <- 0x280000a) (Int)
stw   %l4, [%i0 + 16 ]
add   %l4, 1, %l4

P3244: !_MEMBAR (FP)

P3245: !_BST [21] (maybe <- 0x42000034) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3246: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3246
nop
RET3246:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3247: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P3248: !_MEMBAR (FP) (Branch target of P3859)
ba P3249
nop

TARGET3859:
ba RET3859
nop


P3249: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P3250: !_MEMBAR (FP)

P3251: !_BST [18] (maybe <- 0x42000037) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3252: !_MEMBAR (FP)

P3253: !_BST [29] (maybe <- 0x42000038) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3253
nop
RET3253:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3254: !_MEMBAR (FP)
membar #StoreLoad

P3255: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P3256: !_MEMBAR (FP) (Branch target of P3309)
ba P3257
nop

TARGET3309:
ba RET3309
nop


P3257: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f0
membar #Sync
! 2 addresses covered
fmovs %f8, %f1

P3258: !_MEMBAR (FP)

P3259: !_BLD [17] (FP) (Branch target of P3909)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f2
ba P3260
nop

TARGET3909:
ba RET3909
nop


P3260: !_MEMBAR (FP)

P3261: !_REPLACEMENT [20] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P3262: !_MEMBAR (FP) (Branch target of P3508)
ba P3263
nop

TARGET3508:
ba RET3508
nop


P3263: !_BST [28] (maybe <- 0x42000039) (FP) (Branch target of P3532)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P3264
nop

TARGET3532:
ba RET3532
nop


P3264: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3264
nop
RET3264:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3265: !_LD [13] (FP) (CBR) (Branch target of P3855)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 32], %f3
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3265
nop
RET3265:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3266
nop

TARGET3855:
ba RET3855
nop


P3266: !_MEMBAR (FP)
membar #StoreLoad

P3267: !_BLD [31] (FP) (Branch target of P3344)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4
ba P3268
nop

TARGET3344:
ba RET3344
nop


P3268: !_MEMBAR (FP)

P3269: !_PREFETCH [10] (Int) (CBR)
prefetch [%i1 + 64], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3269
nop
RET3269:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3270: !_REPLACEMENT [16] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P3271: !_REPLACEMENT [6] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P3272: !_ST [2] (maybe <- 0x280000b) (Int)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4

P3273: !_ST [30] (maybe <- 0x4200003a) (FP) (Nucleus ctx) (Branch target of P4016)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 128 ] %asi
ba P3274
nop

TARGET4016:
ba RET4016
nop


P3274: !_ST [16] (maybe <- 0x4200003b) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 16 ] %asi

P3275: !_MEMBAR (FP) (Branch target of P3162)
membar #StoreLoad
ba P3276
nop

TARGET3162:
ba RET3162
nop


P3276: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P3277: !_MEMBAR (FP)

P3278: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P3279: !_MEMBAR (FP)

P3280: !_REPLACEMENT [13] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P3281: !_REPLACEMENT [32] (Int) (Branch target of P3993)
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
ba P3282
nop

TARGET3993:
ba RET3993
nop


P3282: !_REPLACEMENT [24] (Int)
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P3283: !_LD [8] (Int)
lduw [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P3284: !_MEMBAR (FP)
membar #StoreLoad

P3285: !_BLD [17] (FP) (Branch target of P3304)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f18
fmovs %f18, %f7
ba P3286
nop

TARGET3304:
ba RET3304
nop


P3286: !_MEMBAR (FP) (Branch target of P3146)
ba P3287
nop

TARGET3146:
ba RET3146
nop


P3287: !_ST [20] (maybe <- 0x4200003c) (FP) (Secondary ctx) (Branch target of P3760)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 256 ] %asi
ba P3288
nop

TARGET3760:
ba RET3760
nop


P3288: !_MEMBAR (FP)
membar #StoreLoad

P3289: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P3290: !_MEMBAR (FP)

P3291: !_IDC_FLIP [23] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
IDC_FLIP(3291, 32461, 5, 0x45800020, 0x20, %i3, 0x20, %l6, %l7, %o5, %l3)

P3292: !_MEMBAR (FP)
membar #StoreLoad

P3293: !_BLD [10] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3293
nop
RET3293:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3294: !_MEMBAR (FP) (Branch target of P3955)
ba P3295
nop

TARGET3955:
ba RET3955
nop


P3295: !_REPLACEMENT [17] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P3296: !_ST [1] (maybe <- 0x4200003d) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P3297: !_ST [22] (maybe <- 0x280000c) (Int)
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P3298: !_REPLACEMENT [8] (Int)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P3299: !_ST [7] (maybe <- 0x280000d) (Int) (CBR)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3299
nop
RET3299:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3300: !_MEMBAR (FP) (Branch target of P3477)
ba P3301
nop

TARGET3477:
ba RET3477
nop


P3301: !_BSTC [32] (maybe <- 0x4200003e) (FP) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3301
nop
RET3301:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3302: !_MEMBAR (FP)
membar #StoreLoad

P3303: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P3304: !_LD [13] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 32] %asi, %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3304
nop
RET3304:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3305: !_LD [12] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i2 + 4] %asi, %f10
! 1 addresses covered

P3306: !_REPLACEMENT [3] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+16], %l7
st %l7, [%i3+16]
add %i3, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3306
nop
RET3306:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3307: !_REPLACEMENT [8] (Int) (Branch target of P3786)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P3308
nop

TARGET3786:
ba RET3786
nop


P3308: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3309: !_ST [23] (maybe <- 0x4200003f) (FP) (CBR) (Branch target of P3647)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3309
nop
RET3309:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3310
nop

TARGET3647:
ba RET3647
nop


P3310: !_REPLACEMENT [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P3311: !_LD [28] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 0] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3311
nop
RET3311:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3312: !_LD [13] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 32], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3312
nop
RET3312:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3313: !_ST [24] (maybe <- 0x280000e) (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3313
nop
RET3313:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3314: !_REPLACEMENT [22] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3315: !_REPLACEMENT [4] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3315
nop
RET3315:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3316: !_LD [2] (Int) (Branch target of P3685)
lduw [%i0 + 8], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
ba P3317
nop

TARGET3685:
ba RET3685
nop


P3317: !_MEMBAR (FP)
membar #StoreLoad

P3318: !_BLD [13] (FP) (Branch target of P3269)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f40, %f18
fmovs %f18, %f13
ba P3319
nop

TARGET3269:
ba RET3269
nop


P3319: !_MEMBAR (FP) (Branch target of P3727)
ba P3320
nop

TARGET3727:
ba RET3727
nop


P3320: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f34, %f0
fmovd %f36, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P3321: !_MEMBAR (FP) (CBR) (Branch target of P3944)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3321
nop
RET3321:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3322
nop

TARGET3944:
ba RET3944
nop


P3322: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P3323: !_MEMBAR (FP)

P3324: !_BST [12] (maybe <- 0x42000040) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3325: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3326: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P3327: !_LD [1] (FP)
ld [%i0 + 4], %f8
! 1 addresses covered

P3328: !_IDC_FLIP [5] (Int) (CBR)
IDC_FLIP(3328, 4388, 5, 0x43000040, 0x40, %i0, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3328
nop
RET3328:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3329: !_MEMBAR (FP)

P3330: !_BST [11] (maybe <- 0x42000043) (FP) (Branch target of P3464)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P3331
nop

TARGET3464:
ba RET3464
nop


P3331: !_MEMBAR (FP)
membar #StoreLoad

P3332: !_ST [8] (maybe <- 0x42000046) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P3333: !_MEMBAR (FP) (Branch target of P3615)
membar #StoreLoad
ba P3334
nop

TARGET3615:
ba RET3615
nop


P3334: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P3335: !_MEMBAR (FP) (Branch target of P3393)
ba P3336
nop

TARGET3393:
ba RET3393
nop


P3336: !_BLD [19] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P3337: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3337
nop
RET3337:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3338: !_LD [5] (FP)
ld [%i0 + 64], %f12
! 1 addresses covered

P3339: !_MEMBAR (FP) (Branch target of P3315)
ba P3340
nop

TARGET3315:
ba RET3315
nop


P3340: !_BST [23] (maybe <- 0x42000047) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3341: !_MEMBAR (FP)

P3342: !_BST [13] (maybe <- 0x4200004a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3343: !_MEMBAR (FP)
membar #StoreLoad

P3344: !_REPLACEMENT [6] (Int) (CBR) (Branch target of P3301)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3344
nop
RET3344:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3345
nop

TARGET3301:
ba RET3301
nop


P3345: !_ST [26] (maybe <- 0x4200004d) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P3346: !_MEMBAR (FP) (Secondary ctx)

P3347: !_BSTC [5] (maybe <- 0x4200004e) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P3348: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3746)
membar #StoreLoad
ba P3349
nop

TARGET3746:
ba RET3746
nop


P3349: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P3350: !_MEMBAR (FP)

P3351: !_REPLACEMENT [29] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3352: !_MEMBAR (FP)

P3353: !_BST [32] (maybe <- 0x42000050) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P3354: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3354
nop
RET3354:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3355: !_PREFETCH [22] (Int) (Branch target of P3459)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
prefetch [%i2 + 4], 1
ba P3356
nop

TARGET3459:
ba RET3459
nop


P3356: !_REPLACEMENT [12] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P3357: !_MEMBAR (FP)

P3358: !_BST [12] (maybe <- 0x42000051) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3359: !_MEMBAR (FP)
membar #StoreLoad

P3360: !_ST [22] (maybe <- 0x42000054) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

P3361: !_REPLACEMENT [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P3362: !_ST [15] (maybe <- 0x280000f) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

P3363: !_MEMBAR (FP) (Branch target of P3744)
membar #StoreLoad
ba P3364
nop

TARGET3744:
ba RET3744
nop


P3364: !_BLD [33] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3364
nop
RET3364:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3365: !_MEMBAR (FP)

P3366: !_ST [10] (maybe <- 0x2800010) (Int) (LE)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %l4, %l7, %o5
srl %o5, 8, %o5
sll %l4, 8, %l6
and %l6, %l7, %l6
or %l6, %o5, %l6
srl %l6, 16, %o5
sll %l6, 16, %l6
srl %l6, 0, %l6
or %l6, %o5, %l6
stwa   %l6, [%i1 + 64] %asi
add   %l4, 1, %l4

P3367: !_REPLACEMENT [18] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3367
nop
RET3367:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3368: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P3369: !_LD [0] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 0] %asi, %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P3370: !_ST [28] (maybe <- 0x42000055) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P3371: !_MEMBAR (FP)

P3372: !_BST [9] (maybe <- 0x42000056) (FP) (Branch target of P3938)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P3373
nop

TARGET3938:
ba RET3938
nop


P3373: !_MEMBAR (FP)
membar #StoreLoad

P3374: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P3375: !_MEMBAR (FP)

P3376: !_ST [11] (maybe <- 0x42000058) (FP) (Branch target of P3997)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]
ba P3377
nop

TARGET3997:
ba RET3997
nop


P3377: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3377
nop
RET3377:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3378: !_MEMBAR (FP)

P3379: !_BST [30] (maybe <- 0x42000059) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3379
nop
RET3379:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3380: !_MEMBAR (FP)

P3381: !_BST [28] (maybe <- 0x4200005a) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3382: !_MEMBAR (FP)
membar #StoreLoad

P3383: !_REPLACEMENT [22] (Int)
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P3384: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P3385: !_MEMBAR (FP)

P3386: !_BST [14] (maybe <- 0x4200005b) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P3387: !_MEMBAR (FP)
membar #StoreLoad

P3388: !_BLD [5] (FP) (Branch target of P3130)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4
ba P3389
nop

TARGET3130:
ba RET3130
nop


P3389: !_MEMBAR (FP)

P3390: !_ST [11] (maybe <- 0x2800011) (Int) (Branch target of P3653)
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4
ba P3391
nop

TARGET3653:
ba RET3653
nop


P3391: !_MEMBAR (FP)
membar #StoreLoad

P3392: !_BLD [2] (FP) (CBR) (Branch target of P3708)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f34, %f18
fmovs %f18, %f7
fmovd %f36, %f8
fmovd %f40, %f18
fmovs %f18, %f9

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3392
nop
RET3392:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3393
nop

TARGET3708:
ba RET3708
nop


P3393: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3393
nop
RET3393:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3394: !_ST [7] (maybe <- 0x2800012) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 128] %asi
add   %l4, 1, %l4

P3395: !_MEMBAR (FP)
membar #StoreLoad

P3396: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P3397: !_MEMBAR (FP)

P3398: !_LD [19] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f11
! 1 addresses covered

P3399: !_MEMBAR (FP)
membar #StoreLoad

P3400: !_BLD [15] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P3401: !_MEMBAR (FP)

P3402: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P3403: !_ST [32] (maybe <- 0x4200005c) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3403
nop
RET3403:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3404: !_LD [11] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 0], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3404
nop
RET3404:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3405: !_ST [12] (maybe <- 0x2800013) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i3 + 4] %asi
add   %l4, 1, %l4

P3406: !_ST [15] (maybe <- 0x4200005d) (FP) (Branch target of P3193)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]
ba P3407
nop

TARGET3193:
ba RET3193
nop


P3407: !_REPLACEMENT [22] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3407
nop
RET3407:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3408: !_REPLACEMENT [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P3409: !_ST [3] (maybe <- 0x4200005e) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 16 ]

P3410: !_LD [14] (Int) (CBR) (Branch target of P3089)
lduw [%i3 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3410
nop
RET3410:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3411
nop

TARGET3089:
ba RET3089
nop


P3411: !_ST [5] (maybe <- 0x2800014) (Int) (Branch target of P3570)
stw   %l4, [%i0 + 64 ]
add   %l4, 1, %l4
ba P3412
nop

TARGET3570:
ba RET3570
nop


P3412: !_REPLACEMENT [20] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P3413: !_ST [6] (maybe <- 0x4200005f) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 96 ] %asi

P3414: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P3415: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3415
nop
RET3415:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3416: !_BST [27] (maybe <- 0x42000060) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3416
nop
RET3416:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3417: !_MEMBAR (FP)

P3418: !_BST [1] (maybe <- 0x42000062) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3419: !_MEMBAR (FP)
membar #StoreLoad

P3420: !_REPLACEMENT [27] (Int)
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]

P3421: !_MEMBAR (FP)

P3422: !_BST [30] (maybe <- 0x42000067) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3423: !_MEMBAR (FP) (Branch target of P3126)
membar #StoreLoad
ba P3424
nop

TARGET3126:
ba RET3126
nop


P3424: !_REPLACEMENT [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P3425: !_MEMBAR (FP)

P3426: !_BSTC [30] (maybe <- 0x42000068) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3427: !_MEMBAR (FP)
membar #StoreLoad

P3428: !_REPLACEMENT [18] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3428
nop
RET3428:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3429: !_ST [16] (maybe <- 0x2800015) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 16 ]
add   %l4, 1, %l4

P3430: !_MEMBAR (FP) (Branch target of P3829)
ba P3431
nop

TARGET3829:
ba RET3829
nop


P3431: !_BST [5] (maybe <- 0x42000069) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P3432: !_MEMBAR (FP) (Branch target of P3910)
membar #StoreLoad
ba P3433
nop

TARGET3910:
ba RET3910
nop


P3433: !_REPLACEMENT [30] (Int)
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P3434: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P3435: !_ST [28] (maybe <- 0x2800016) (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3435
nop
RET3435:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3436: !_REPLACEMENT [29] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3437: !_IDC_FLIP [33] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
IDC_FLIP(3437, 6651, 5, 0x46800000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)

P3438: !_IDC_FLIP [25] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
IDC_FLIP(3438, 19007, 5, 0x45800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3438
nop
RET3438:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3439: !_IDC_FLIP [25] (Int) (Branch target of P3153)
IDC_FLIP(3439, 25901, 5, 0x45800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)
ba P3440
nop

TARGET3153:
ba RET3153
nop


P3440: !_REPLACEMENT [20] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3440
nop
RET3440:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3441: !_LD [23] (FP)
ld [%i2 + 32], %f13
! 1 addresses covered

P3442: !_IDC_FLIP [18] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
IDC_FLIP(3442, 16057, 5, 0x44800080, 0x80, %i2, 0x80, %l6, %l7, %o5, %l3)

P3443: !_ST [6] (maybe <- 0x2800017) (Int) (Branch target of P3246)
stw   %l4, [%i0 + 96 ]
add   %l4, 1, %l4
ba P3444
nop

TARGET3246:
ba RET3246
nop


P3444: !_MEMBAR (FP)

P3445: !_BST [2] (maybe <- 0x4200006b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3446: !_MEMBAR (FP) (Branch target of P3607)
membar #StoreLoad
ba P3447
nop

TARGET3607:
ba RET3607
nop


P3447: !_REPLACEMENT [2] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+8], %l6
st %l6, [%i3+8]
add %i3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]
add %l3, %o5, %l3
ld [%l3+8], %l6
st %l6, [%l3+8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3447
nop
RET3447:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3448: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P3449: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

P3450: !_REPLACEMENT [18] (Int) (Branch target of P3377)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P3451
nop

TARGET3377:
ba RET3377
nop


P3451: !_ST [1] (maybe <- 0x2800018) (Int)
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4

P3452: !_ST [30] (maybe <- 0x42000070) (FP) (Branch target of P3392)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]
ba P3453
nop

TARGET3392:
ba RET3392
nop


P3453: !_ST [5] (maybe <- 0x2800019) (Int) (LE) (CBR)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %l4, %o5, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %o5, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
stwa   %l7, [%i0 + 64] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3453
nop
RET3453:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3454: !_ST [26] (maybe <- 0x280001a) (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3454
nop
RET3454:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3455: !_REPLACEMENT [26] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P3456: !_MEMBAR (FP)

P3457: !_BST [21] (maybe <- 0x42000071) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3458: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3458
nop
RET3458:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3459: !_IDC_FLIP [10] (Int) (CBR)
IDC_FLIP(3459, 32444, 5, 0x43800040, 0x40, %i1, 0x40, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3459
nop
RET3459:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3460: !_MEMBAR (FP)
membar #StoreLoad

P3461: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P3462: !_MEMBAR (FP)

P3463: !_ST [11] (maybe <- 0x280001b) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P3464: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3464
nop
RET3464:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3465: !_MEMBAR (FP)

P3466: !_BST [10] (maybe <- 0x42000074) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P3467: !_MEMBAR (FP) (CBR) (Branch target of P3707)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3467
nop
RET3467:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3468
nop

TARGET3707:
ba RET3707
nop


P3468: !_LD [27] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 160], %f0
! 1 addresses covered

P3469: !_REPLACEMENT [0] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P3470: !_ST [14] (maybe <- 0x42000075) (FP) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3470
nop
RET3470:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3471: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3472: !_BLD [30] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P3473: !_MEMBAR (FP) (Secondary ctx)

P3474: !_REPLACEMENT [29] (Int) (Secondary ctx) (Branch target of P3568)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P3475
nop

TARGET3568:
ba RET3568
nop


P3475: !_MEMBAR (FP) (Branch target of P3467)
ba P3476
nop

TARGET3467:
ba RET3467
nop


P3476: !_BST [25] (maybe <- 0x42000076) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P3477: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3477
nop
RET3477:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3478: !_LD [26] (FP)
ld [%i2 + 128], %f2
! 1 addresses covered

P3479: !_MEMBAR (FP)

P3480: !_BST [25] (maybe <- 0x42000078) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P3481: !_MEMBAR (FP) (Branch target of P3883)
membar #StoreLoad
ba P3482
nop

TARGET3883:
ba RET3883
nop


P3482: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P3483: !_REPLACEMENT [14] (Int)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3484: !_LD [2] (Int)
lduw [%i0 + 8], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

P3485: !_MEMBAR (FP) (Branch target of P3871)
ba P3486
nop

TARGET3871:
ba RET3871
nop


P3486: !_BST [18] (maybe <- 0x4200007a) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P3487: !_MEMBAR (FP)
membar #StoreLoad

P3488: !_ST [7] (maybe <- 0x280001c) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P3489: !_LD [11] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 0], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P3490: !_ST [7] (maybe <- 0x4200007b) (FP) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3490
nop
RET3490:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3491: !_LD [11] (FP)
ld [%i2 + 0], %f3
! 1 addresses covered

P3492: !_REPLACEMENT [32] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P3493: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P3494: !_LD [0] (Int) (CBR) (Branch target of P3106)
lduw [%i0 + 0], %l7
! move %l7(lower) -> %o4(lower)
or %l7, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3494
nop
RET3494:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3495
nop

TARGET3106:
ba RET3106
nop


P3495: !_MEMBAR (FP)

P3496: !_BST [0] (maybe <- 0x4200007c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3497: !_MEMBAR (FP)
membar #StoreLoad

P3498: !_LD [28] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 0], %f4
! 1 addresses covered

P3499: !_MEMBAR (FP)

P3500: !_BST [7] (maybe <- 0x42000081) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P3501: !_MEMBAR (FP)
membar #StoreLoad

P3502: !_LD [3] (Int) (Branch target of P3543)
lduw [%i0 + 16], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3503
nop

TARGET3543:
ba RET3543
nop


P3503: !_ST [18] (maybe <- 0x280001d) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

P3504: !_REPLACEMENT [26] (Int) (Branch target of P3693)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
ba P3505
nop

TARGET3693:
ba RET3693
nop


P3505: !_ST [30] (maybe <- 0x42000082) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P3506: !_PREFETCH [19] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 0], 1

P3507: !_LD [13] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 32], %f5
! 1 addresses covered

P3508: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3508
nop
RET3508:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3509: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P3510: !_MEMBAR (FP) (Branch target of P3740)
ba P3511
nop

TARGET3740:
ba RET3740
nop


P3511: !_LD [5] (Int) (Secondary ctx) (Branch target of P3838)
wr %g0, 0x81, %asi
lduwa [%i0 + 64] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0
ba P3512
nop

TARGET3838:
ba RET3838
nop


P3512: !_REPLACEMENT [23] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P3513: !_MEMBAR (FP) (Branch target of P3961)
membar #StoreLoad
ba P3514
nop

TARGET3961:
ba RET3961
nop


P3514: !_BLD [21] (FP) (Branch target of P3639)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f40, %f18
fmovs %f18, %f9
ba P3515
nop

TARGET3639:
ba RET3639
nop


P3515: !_MEMBAR (FP) (Branch target of P3913)
ba P3516
nop

TARGET3913:
ba RET3913
nop


P3516: !_REPLACEMENT [17] (Int) (Branch target of P3666)
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
ba P3517
nop

TARGET3666:
ba RET3666
nop


P3517: !_IDC_FLIP [25] (Int)
IDC_FLIP(3517, 21130, 5, 0x45800060, 0x60, %i2, 0x60, %l6, %l7, %o5, %l3)

P3518: !_LD [10] (Int)
lduw [%i1 + 64], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P3519: !_MEMBAR (FP)
membar #StoreLoad

P3520: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P3521: !_MEMBAR (FP) (Branch target of P3595)
ba P3522
nop

TARGET3595:
ba RET3595
nop


P3522: !_BST [27] (maybe <- 0x42000083) (FP) (Branch target of P3962)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P3523
nop

TARGET3962:
ba RET3962
nop


P3523: !_MEMBAR (FP)
membar #StoreLoad

P3524: !_ST [7] (maybe <- 0x42000085) (FP) (CBR) (Nucleus ctx) (Branch target of P3934)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3524
nop
RET3524:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3525
nop

TARGET3934:
ba RET3934
nop


P3525: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P3526: !_ST [18] (maybe <- 0x280001e) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

P3527: !_MEMBAR (FP)
membar #StoreLoad

P3528: !_BLD [1] (FP) (Branch target of P3658)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P3529
nop

TARGET3658:
ba RET3658
nop


P3529: !_MEMBAR (FP) (Branch target of P3862)
ba P3530
nop

TARGET3862:
ba RET3862
nop


P3530: !_LD [30] (FP) (CBR) (Branch target of P3219)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 128], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3530
nop
RET3530:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3531
nop

TARGET3219:
ba RET3219
nop


P3531: !_MEMBAR (FP)

P3532: !_BST [12] (maybe <- 0x42000086) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3532
nop
RET3532:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3533: !_MEMBAR (FP)
membar #StoreLoad

P3534: !_BLD [33] (FP) (Branch target of P3634)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
ba P3535
nop

TARGET3634:
ba RET3634
nop


P3535: !_MEMBAR (FP) (Branch target of P3438)
ba P3536
nop

TARGET3438:
ba RET3438
nop


P3536: !_IDC_FLIP [23] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
IDC_FLIP(3536, 3423, 5, 0x45800020, 0x20, %i3, 0x20, %l6, %l7, %o5, %l3)

P3537: !_REPLACEMENT [30] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3538: !_MEMBAR (FP)

P3539: !_BST [7] (maybe <- 0x42000089) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P3540: !_MEMBAR (FP)

P3541: !_BST [25] (maybe <- 0x4200008a) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P3542: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3543: !_REPLACEMENT [25] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3543
nop
RET3543:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3544: !_REPLACEMENT [24] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3545: !_REPLACEMENT [12] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P3546: !_ST [33] (maybe <- 0x280001f) (Int) (Nucleus ctx) (Branch target of P3680)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
stwa   %l4, [%i3 + 0] %asi
add   %l4, 1, %l4
ba P3547
nop

TARGET3680:
ba RET3680
nop


P3547: !_MEMBAR (FP)

P3548: !_BST [7] (maybe <- 0x4200008c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P3549: !_MEMBAR (FP) (CBR) (Branch target of P3665)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3549
nop
RET3549:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P3550
nop

TARGET3665:
ba RET3665
nop


P3550: !_ST [1] (maybe <- 0x4200008d) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P3551: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3551
nop
RET3551:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3552: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P3553: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3553
nop
RET3553:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3554: !_ST [0] (maybe <- 0x4200008e) (FP) (CBR) (Secondary ctx) (Branch target of P3907)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3554
nop
RET3554:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3555
nop

TARGET3907:
ba RET3907
nop


P3555: !_LD [29] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 64], %f4
! 1 addresses covered

P3556: !_LD [17] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 96], %f5
! 1 addresses covered

P3557: !_REPLACEMENT [15] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P3558: !_REPLACEMENT [7] (Int)
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P3559: !_MEMBAR (FP)

P3560: !_BST [26] (maybe <- 0x4200008f) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3560
nop
RET3560:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3561: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3561
nop
RET3561:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3562: !_BST [8] (maybe <- 0x42000091) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P3563: !_MEMBAR (FP) (Branch target of P3731)
membar #StoreLoad
ba P3564
nop

TARGET3731:
ba RET3731
nop


P3564: !_BLD [7] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P3565: !_MEMBAR (FP) (Secondary ctx)

P3566: !_BLD [2] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovs %f19, %f8
fmovd %f34, %f18
fmovs %f18, %f9
fmovd %f36, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P3567: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P3956)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3567
nop
RET3567:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P3568
nop

TARGET3956:
ba RET3956
nop


P3568: !_BLD [30] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3568
nop
RET3568:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3569: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3569
nop
RET3569:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3570: !_BST [26] (maybe <- 0x42000093) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3570
nop
RET3570:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3571: !_MEMBAR (FP)
membar #StoreLoad

P3572: !_REPLACEMENT [3] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P3573: !_REPLACEMENT [2] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+8], %l7
st %l7, [%i2+8]
add %i2, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]

P3574: !_REPLACEMENT [27] (Int) (Secondary ctx) (Branch target of P3561)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i2+160], %l6
st %l6, [%i2+160]
add %i2, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
ba P3575
nop

TARGET3561:
ba RET3561
nop


P3575: !_REPLACEMENT [7] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P3576: !_LD [23] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 32], %f13
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3576
nop
RET3576:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3577: !_REPLACEMENT [29] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3578: !_LD [3] (FP)
ld [%i0 + 16], %f14
! 1 addresses covered

P3579: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3579
nop
RET3579:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3580: !_BSTC [26] (maybe <- 0x42000095) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P3581: !_MEMBAR (FP) (Branch target of P3167)
membar #StoreLoad
ba P3582
nop

TARGET3167:
ba RET3167
nop


P3582: !_REPLACEMENT [16] (Int)
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P3583: !_MEMBAR (FP) (Branch target of P3458)
membar #StoreLoad
ba P3584
nop

TARGET3458:
ba RET3458
nop


P3584: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P3585: !_MEMBAR (FP) (Branch target of P3470)
ba P3586
nop

TARGET3470:
ba RET3470
nop


P3586: !_ST [16] (maybe <- 0x2800020) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 16] %asi
add   %l4, 1, %l4

P3587: !_LD [23] (FP) (CBR) (Branch target of P3161)
ld [%i3 + 32], %f2
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3587
nop
RET3587:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3588
nop

TARGET3161:
ba RET3161
nop


P3588: !_MEMBAR (FP)
membar #StoreLoad

P3589: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P3590: !_MEMBAR (FP) (Branch target of P3972)
ba P3591
nop

TARGET3972:
ba RET3972
nop


P3591: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

P3592: !_MEMBAR (FP)

P3593: !_LD [3] (FP) (Branch target of P3337)
ld [%i0 + 16], %f9
! 1 addresses covered
ba P3594
nop

TARGET3337:
ba RET3337
nop


P3594: !_PREFETCH [19] (Int)
prefetch [%i3 + 0], 1

P3595: !_ST [15] (maybe <- 0x2800021) (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3595
nop
RET3595:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3596: !_MEMBAR (FP)

P3597: !_BSTC [13] (maybe <- 0x42000097) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3598: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3598
nop
RET3598:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3599: !_LD [31] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 192], %f10
! 1 addresses covered

P3600: !_ST [16] (maybe <- 0x2800022) (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 16] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3600
nop
RET3600:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3601: !_REPLACEMENT [2] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P3602: !_LD [31] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 192] %asi, %f11
! 1 addresses covered

P3603: !_IDC_FLIP [0] (Int)
IDC_FLIP(3603, 463, 5, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P3604: !_REPLACEMENT [27] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+160], %o5
st %o5, [%i3+160]
add %i3, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]

P3605: !_MEMBAR (FP)
membar #StoreLoad

P3606: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P3607: !_MEMBAR (FP) (CBR) (Branch target of P3900)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3607
nop
RET3607:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3608
nop

TARGET3900:
ba RET3900
nop


P3608: !_ST [7] (maybe <- 0x4200009a) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 128 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3608
nop
RET3608:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3609: !_LD [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 96] %asi, %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

P3610: !_MEMBAR (FP)

P3611: !_BST [24] (maybe <- 0x4200009b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P3612: !_MEMBAR (FP) (Branch target of P3805)
membar #StoreLoad
ba P3613
nop

TARGET3805:
ba RET3805
nop


P3613: !_ST [33] (maybe <- 0x2800023) (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
stwa   %l4, [%i3 + 0] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3613
nop
RET3613:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3614: !_REPLACEMENT [9] (Int) (Nucleus ctx) (Branch target of P4030)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
ba P3615
nop

TARGET4030:
ba RET4030
nop


P3615: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3615
nop
RET3615:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3616: !_BST [1] (maybe <- 0x4200009d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3617: !_MEMBAR (FP)

P3618: !_BST [2] (maybe <- 0x420000a2) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3619: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3644)
membar #StoreLoad
ba P3620
nop

TARGET3644:
ba RET3644
nop


P3620: !_BLD [17] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f14

P3621: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3621
nop
RET3621:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3622: !_BST [1] (maybe <- 0x420000a7) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3623: !_MEMBAR (FP) (Branch target of P3221)
membar #StoreLoad
ba P3624
nop

TARGET3221:
ba RET3221
nop


P3624: !_LD [19] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 0], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P3625: !_ST [14] (maybe <- 0x2800024) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4

P3626: !_MEMBAR (FP)

P3627: !_BST [24] (maybe <- 0x420000ac) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P3628: !_MEMBAR (FP)
membar #StoreLoad

P3629: !_BLD [8] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P3630: !_MEMBAR (FP)

P3631: !_ST [24] (maybe <- 0x2800025) (Int)
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P3632: !_REPLACEMENT [32] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P3633: !_REPLACEMENT [14] (Int) (Branch target of P3415)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
ba P3634
nop

TARGET3415:
ba RET3415
nop


P3634: !_REPLACEMENT [18] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3634
nop
RET3634:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3635: !_MEMBAR (FP) (Branch target of P3107)
ba P3636
nop

TARGET3107:
ba RET3107
nop


P3636: !_BSTC [16] (maybe <- 0x420000ae) (FP) (Branch target of P3410)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P3637
nop

TARGET3410:
ba RET3410
nop


P3637: !_MEMBAR (FP)
membar #StoreLoad

P3638: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P3639: !_ST [32] (maybe <- 0x2800026) (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 256 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3639
nop
RET3639:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3640: !_MEMBAR (FP)

P3641: !_BST [28] (maybe <- 0x420000af) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3642: !_MEMBAR (FP)
membar #StoreLoad

P3643: !_ST [4] (maybe <- 0x2800027) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 32] %asi
add   %l4, 1, %l4

P3644: !_LD [5] (FP) (CBR) (Branch target of P3881)
ld [%i0 + 64], %f1
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3644
nop
RET3644:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3645
nop

TARGET3881:
ba RET3881
nop


P3645: !_ST [9] (maybe <- 0x2800028) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i1 + 32] %asi
add   %l4, 1, %l4

P3646: !_MEMBAR (FP)

P3647: !_BST [5] (maybe <- 0x420000b0) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3647
nop
RET3647:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3648: !_MEMBAR (FP) (Branch target of P3878)
membar #StoreLoad
ba P3649
nop

TARGET3878:
ba RET3878
nop


P3649: !_REPLACEMENT [30] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3650: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P3651: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P3652: !_ST [20] (maybe <- 0x420000b2) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P3653: !_MEMBAR (FP) (CBR) (Branch target of P3753)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3653
nop
RET3653:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3654
nop

TARGET3753:
ba RET3753
nop


P3654: !_BLD [2] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f2
fmovd %f34, %f4
fmovd %f36, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P3655: !_MEMBAR (FP)

P3656: !_LD [2] (FP)
ld [%i0 + 8], %f7
! 1 addresses covered

P3657: !_LD [10] (FP)
ld [%i1 + 64], %f8
! 1 addresses covered

P3658: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3658
nop
RET3658:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3659: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9

P3660: !_MEMBAR (FP)

P3661: !_BLD [11] (FP) (Secondary ctx) (Branch target of P3939)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f10
fmovd %f40, %f12
ba P3662
nop

TARGET3939:
ba RET3939
nop


P3662: !_MEMBAR (FP) (Secondary ctx)

P3663: !_REPLACEMENT [20] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P3664: !_MEMBAR (FP)

P3665: !_BST [16] (maybe <- 0x420000b3) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3665
nop
RET3665:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3666: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3666
nop
RET3666:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3667: !_BLD [5] (FP) (Branch target of P3995)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14
ba P3668
nop

TARGET3995:
ba RET3995
nop


P3668: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3668
nop
RET3668:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3669: !_LD [3] (FP)
ld [%i0 + 16], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P3670: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3671: !_BLD [23] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f0
membar #Sync
! 3 addresses covered
fmovd %f8, %f2

P3672: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3299)
ba P3673
nop

TARGET3299:
ba RET3299
nop


P3673: !_IDC_FLIP [30] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(3673, 5192, 5, 0x46000080, 0x80, %i2, 0x80, %l6, %l7, %o5, %l3)

P3674: !_MEMBAR (FP) (Branch target of P3867)
membar #StoreLoad
ba P3675
nop

TARGET3867:
ba RET3867
nop


P3675: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P3676: !_MEMBAR (FP)

P3677: !_ST [29] (maybe <- 0x420000b4) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

P3678: !_ST [17] (maybe <- 0x420000b5) (FP) (Branch target of P3569)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 96 ]
ba P3679
nop

TARGET3569:
ba RET3569
nop


P3679: !_MEMBAR (FP)
membar #StoreLoad

P3680: !_BLD [17] (FP) (CBR) (Branch target of P3407)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3680
nop
RET3680:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3681
nop

TARGET3407:
ba RET3407
nop


P3681: !_MEMBAR (FP)

P3682: !_LD [2] (Int) (CBR)
lduw [%i0 + 8], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3682
nop
RET3682:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3683: !_REPLACEMENT [26] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P3684: !_LD [25] (Int) (CBR) (Secondary ctx) (Branch target of P3929)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 96] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3684
nop
RET3684:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3685
nop

TARGET3929:
ba RET3929
nop


P3685: !_REPLACEMENT [24] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3685
nop
RET3685:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3686: !_ST [17] (maybe <- 0x2800029) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
stwa   %l4, [%i3 + 96] %asi
add   %l4, 1, %l4

P3687: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+32], %l7
st %l7, [%i2+32]
add %i2, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3687
nop
RET3687:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3688: !_ST [18] (maybe <- 0x420000b6) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P3689: !_ST [29] (maybe <- 0x280002a) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l3
or %l3, %lo(0xff00ff00), %l3
and %l4, %l3, %l6
srl %l6, 8, %l6
sll %l4, 8, %o5
and %o5, %l3, %o5
or %o5, %l6, %o5
srl %o5, 16, %l6
sll %o5, 16, %o5
srl %o5, 0, %o5
or %o5, %l6, %o5
stwa   %o5, [%i3 + 64] %asi
add   %l4, 1, %l4

P3690: !_MEMBAR (FP)

P3691: !_BST [3] (maybe <- 0x420000b7) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3691
nop
RET3691:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3692: !_MEMBAR (FP)
membar #StoreLoad

P3693: !_ST [29] (maybe <- 0x280002b) (Int) (CBR)
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3693
nop
RET3693:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3694: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3695: !_BLD [12] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P3696: !_MEMBAR (FP) (Secondary ctx)

P3697: !_LD [7] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 128] %asi, %f8
! 1 addresses covered

P3698: !_LD [22] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 4] %asi, %f9
! 1 addresses covered

P3699: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3700: !_BLD [10] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P3701: !_MEMBAR (FP) (Secondary ctx)

P3702: !_ST [26] (maybe <- 0x420000bc) (FP) (CBR) (Branch target of P3684)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3702
nop
RET3702:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3703
nop

TARGET3684:
ba RET3684
nop


P3703: !_REPLACEMENT [32] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+256], %l3
st %l3, [%i2+256]
add %i2, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P3704: !_MEMBAR (FP) (Secondary ctx)

P3705: !_BST [30] (maybe <- 0x420000bd) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P3706: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3524)
membar #StoreLoad
ba P3707
nop

TARGET3524:
ba RET3524
nop


P3707: !_LD [4] (FP) (CBR) (Branch target of P3328)
ld [%i0 + 32], %f11
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3707
nop
RET3707:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3708
nop

TARGET3328:
ba RET3328
nop


P3708: !_REPLACEMENT [18] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3708
nop
RET3708:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3709: !_LD [25] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 96], %f12
! 1 addresses covered

P3710: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3971)
membar #StoreLoad
ba P3711
nop

TARGET3971:
ba RET3971
nop


P3711: !_BLD [16] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f13

P3712: !_MEMBAR (FP) (Secondary ctx)

P3713: !_BLD [22] (FP) (Secondary ctx) (Branch target of P4028)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0
ba P3714
nop

TARGET4028:
ba RET4028
nop


P3714: !_MEMBAR (FP) (Secondary ctx)

P3715: !_BST [28] (maybe <- 0x420000be) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3716: !_MEMBAR (FP) (Branch target of P3914)
membar #StoreLoad
ba P3717
nop

TARGET3914:
ba RET3914
nop


P3717: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1

P3718: !_MEMBAR (FP)

P3719: !_BST [31] (maybe <- 0x420000bf) (FP) (Branch target of P3777)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi
ba P3720
nop

TARGET3777:
ba RET3777
nop


P3720: !_MEMBAR (FP) (Branch target of P3253)
membar #StoreLoad
ba P3721
nop

TARGET3253:
ba RET3253
nop


P3721: !_BLD [5] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P3722: !_MEMBAR (FP)

P3723: !_REPLACEMENT [23] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P3724: !_MEMBAR (FP)

P3725: !_BSTC [29] (maybe <- 0x420000c0) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P3726: !_MEMBAR (FP)
membar #StoreLoad

P3727: !_REPLACEMENT [27] (Int) (CBR) (Branch target of P3691)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+160], %l3
st %l3, [%i2+160]
add %i2, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3727
nop
RET3727:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3728
nop

TARGET3691:
ba RET3691
nop


P3728: !_MEMBAR (FP)

P3729: !_BSTC [16] (maybe <- 0x420000c1) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P3730: !_MEMBAR (FP)

P3731: !_BST [9] (maybe <- 0x420000c2) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3731
nop
RET3731:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3732: !_MEMBAR (FP)

P3733: !_BST [27] (maybe <- 0x420000c4) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3734: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3734
nop
RET3734:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3735: !_BST [18] (maybe <- 0x420000c6) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3735
nop
RET3735:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3736: !_MEMBAR (FP)
membar #StoreLoad

P3737: !_REPLACEMENT [0] (Int) (Nucleus ctx) (Branch target of P3682)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
ba P3738
nop

TARGET3682:
ba RET3682
nop


P3738: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P3739: !_LD [8] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i1 + 0] %asi, %f4
! 1 addresses covered

P3740: !_REPLACEMENT [0] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3740
nop
RET3740:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3741: !_MEMBAR (FP)

P3742: !_BST [9] (maybe <- 0x420000c7) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P3743: !_MEMBAR (FP)
membar #StoreLoad

P3744: !_REPLACEMENT [32] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3744
nop
RET3744:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3745: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P3746: !_MEMBAR (Int) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3746
nop
RET3746:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3747: !_REPLACEMENT [6] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P3748: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3748
nop
RET3748:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3749: !_BLD [12] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f40, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3749
nop
RET3749:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3750: !_MEMBAR (FP)

P3751: !_REPLACEMENT [27] (Int)
sethi %hi(0x2000), %o5
ld [%i3+160], %l6
st %l6, [%i3+160]
add %i3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]

P3752: !_IDC_FLIP [29] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(3752, 5214, 5, 0x46000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P3753: !_MEMBAR (FP) (CBR) (Branch target of P3765)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3753
nop
RET3753:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3754
nop

TARGET3765:
ba RET3765
nop


P3754: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f8
fmovd %f34, %f10
fmovd %f36, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P3755: !_MEMBAR (FP) (Branch target of P4053)
ba P3756
nop

TARGET4053:
ba RET4053
nop


P3756: !_BLD [16] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f13

P3757: !_MEMBAR (FP) (Branch target of P3166)
ba P3758
nop

TARGET3166:
ba RET3166
nop


P3758: !_REPLACEMENT [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P3759: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P3760: !_LD [14] (FP) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 64], %f14
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3760
nop
RET3760:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3761: !_MEMBAR (FP) (Branch target of P4008)
ba P3762
nop

TARGET4008:
ba RET4008
nop


P3762: !_BSTC [7] (maybe <- 0x420000c9) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P3763: !_MEMBAR (FP) (Branch target of P3227)
ba P3764
nop

TARGET3227:
ba RET3227
nop


P3764: !_BST [25] (maybe <- 0x420000ca) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P3765: !_MEMBAR (FP) (CBR) (Branch target of P3138)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3765
nop
RET3765:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3766
nop

TARGET3138:
ba RET3138
nop


P3766: !_LD [7] (Int) (LE) (Secondary ctx)
wr %g0, 0x89, %asi
lduwa [%i0 + 128] %asi, %l6
! move %l6(lower) -> %o3(lower)
or %l6, %o3, %o3

P3767: !_MEMBAR (FP)
membar #StoreLoad

P3768: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P3769: !_MEMBAR (FP)

P3770: !_REPLACEMENT [1] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3770
nop
RET3770:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3771: !_MEMBAR (FP)
membar #StoreLoad

P3772: !_BLD [18] (FP) (Branch target of P3137)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
ba P3773
nop

TARGET3137:
ba RET3137
nop


P3773: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3773
nop
RET3773:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3774: !_REPLACEMENT [23] (Int) (Branch target of P3494)
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
ba P3775
nop

TARGET3494:
ba RET3494
nop


P3775: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3776: !_BLD [17] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f2

P3777: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3777
nop
RET3777:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3778: !_ST [21] (maybe <- 0x280002c) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4

P3779: !_MEMBAR (FP)
membar #StoreLoad

P3780: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P3781: !_MEMBAR (FP) (Branch target of P4003)
ba P3782
nop

TARGET4003:
ba RET4003
nop


P3782: !_REPLACEMENT [25] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P3783: !_ST [28] (maybe <- 0x280002d) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 0] %asi
add   %l4, 1, %l4

P3784: !_IDC_FLIP [29] (Int) (Branch target of P3379)
IDC_FLIP(3784, 7943, 5, 0x46000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)
ba P3785
nop

TARGET3379:
ba RET3379
nop


P3785: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3785
nop
RET3785:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3786: !_BLD [27] (FP) (CBR) (Branch target of P3748)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f4
fmovd %f40, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3786
nop
RET3786:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P3787
nop

TARGET3748:
ba RET3748
nop


P3787: !_MEMBAR (FP)

P3788: !_BST [8] (maybe <- 0x420000cc) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3788
nop
RET3788:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3789: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3789
nop
RET3789:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3790: !_LD [30] (FP) (Secondary ctx) (Branch target of P3121)
wr %g0, 0x81, %asi
lda    [%i3 + 128] %asi, %f6
! 1 addresses covered
ba P3791
nop

TARGET3121:
ba RET3121
nop


P3791: !_REPLACEMENT [29] (Int) (CBR) (Branch target of P3773)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3791
nop
RET3791:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3792
nop

TARGET3773:
ba RET3773
nop


P3792: !_MEMBAR (FP)
membar #StoreLoad

P3793: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P3794: !_MEMBAR (FP) (Branch target of P3203)
ba P3795
nop

TARGET3203:
ba RET3203
nop


P3795: !_REPLACEMENT [0] (Int)
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P3796: !_IDC_FLIP [7] (Int)
IDC_FLIP(3796, 1663, 5, 0x43000080, 0x80, %i0, 0x80, %l6, %l7, %o5, %l3)

P3797: !_ST [19] (maybe <- 0x280002e) (Int) (LE) (Nucleus ctx)
wr %g0, 0xc, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %l7
or %l7, %lo(0xff00ff00), %l7
and %l4, %l7, %o5
srl %o5, 8, %o5
sll %l4, 8, %l6
and %l6, %l7, %l6
or %l6, %o5, %l6
srl %l6, 16, %o5
sll %l6, 16, %l6
srl %l6, 0, %l6
or %l6, %o5, %l6
stwa   %l6, [%i2 + 0] %asi
add   %l4, 1, %l4

P3798: !_LD [12] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 4], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P3799: !_ST [20] (maybe <- 0x420000ce) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 256 ]

P3800: !_MEMBAR (FP)

P3801: !_BST [26] (maybe <- 0x420000cf) (FP) (Branch target of P3313)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P3802
nop

TARGET3313:
ba RET3313
nop


P3802: !_MEMBAR (FP)
membar #StoreLoad

P3803: !_REPLACEMENT [0] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P3804: !_LD [29] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 64] %asi, %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P3805: !_LD [26] (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 128], %f9
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3805
nop
RET3805:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3806: !_LD [9] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i1 + 32] %asi, %f10
! 1 addresses covered

P3807: !_MEMBAR (FP)
membar #StoreLoad

P3808: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P3809: !_MEMBAR (FP)

P3810: !_LD [8] (FP)
ld [%i1 + 0], %f12
! 1 addresses covered

P3811: !_REPLACEMENT [2] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+8], %l3
st %l3, [%i2+8]
add %i2, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

P3812: !_LD [10] (FP)
ld [%i1 + 64], %f13
! 1 addresses covered

P3813: !_MEMBAR (FP)

P3814: !_BST [7] (maybe <- 0x420000d1) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P3815: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3815
nop
RET3815:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3816: !_REPLACEMENT [23] (Int) (Branch target of P3921)
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
ba P3817
nop

TARGET3921:
ba RET3921
nop


P3817: !_ST [5] (maybe <- 0x420000d2) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 64 ] %asi

P3818: !_ST [15] (maybe <- 0x280002f) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 128 ]
add   %l4, 1, %l4

P3819: !_MEMBAR (FP) (Branch target of P3554)
membar #StoreLoad
ba P3820
nop

TARGET3554:
ba RET3554
nop


P3820: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P3821: !_MEMBAR (FP)

P3822: !_REPLACEMENT [20] (Int) (Secondary ctx) (Branch target of P3490)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
ba P3823
nop

TARGET3490:
ba RET3490
nop


P3823: !_LD [20] (FP) (Branch target of P3863)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 256], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P3824
nop

TARGET3863:
ba RET3863
nop


P3824: !_LD [8] (FP) (Branch target of P3530)
ld [%i1 + 0], %f0
! 1 addresses covered
ba P3825
nop

TARGET3530:
ba RET3530
nop


P3825: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P3826: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3827: !_BLD [12] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P3828: !_MEMBAR (FP) (Secondary ctx)

P3829: !_BLD [33] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3829
nop
RET3829:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3830: !_MEMBAR (FP)

P3831: !_REPLACEMENT [29] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P3832: !_LD [19] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 0] %asi, %f5
! 1 addresses covered

P3833: !_ST [16] (maybe <- 0x420000d3) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 16 ] %asi

P3834: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3835: !_BLD [3] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f6
fmovd %f34, %f8
fmovd %f36, %f18
fmovs %f18, %f9
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3835
nop
RET3835:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3836: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3687)
ba P3837
nop

TARGET3687:
ba RET3687
nop


P3837: !_BST [12] (maybe <- 0x420000d4) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3838: !_MEMBAR (FP) (CBR) (Branch target of P3847)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3838
nop
RET3838:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3839
nop

TARGET3847:
ba RET3847
nop


P3839: !_IDC_FLIP [20] (Int)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(3839, 25114, 5, 0x45000100, 0x100, %i3, 0x100, %l6, %l7, %o5, %l3)

P3840: !_MEMBAR (FP)

P3841: !_BST [15] (maybe <- 0x420000d7) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3842: !_MEMBAR (FP)

P3843: !_BST [15] (maybe <- 0x420000d8) (FP) (Branch target of P4057)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P3844
nop

TARGET4057:
ba RET4057
nop


P3844: !_MEMBAR (FP)
membar #StoreLoad

P3845: !_PREFETCH [10] (Int) (CBR)
prefetch [%i1 + 64], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3845
nop
RET3845:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3846: !_LD [16] (Int) (Nucleus ctx) (Branch target of P3229)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 16] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P3847
nop

TARGET3229:
ba RET3229
nop


P3847: !_LD [26] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 128] %asi, %o5
! move %o5(lower) -> %o0(lower)
or %o5, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3847
nop
RET3847:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3848: !_ST [14] (maybe <- 0x420000d9) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 64 ] %asi

P3849: !_REPLACEMENT [6] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+96], %l7
st %l7, [%i3+96]
add %i3, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P3850: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P3364)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3850
nop
RET3850:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3851
nop

TARGET3364:
ba RET3364
nop


P3851: !_BST [3] (maybe <- 0x420000da) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3852: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3853: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P3854: !_MEMBAR (FP)

P3855: !_REPLACEMENT [8] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3855
nop
RET3855:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3856: !_REPLACEMENT [0] (Int)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P3857: !_REPLACEMENT [3] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P3858: !_LD [24] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 64], %f13
! 1 addresses covered

P3859: !_IDC_FLIP [32] (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(3859, 27615, 5, 0x46000100, 0x100, %i2, 0x100, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3859
nop
RET3859:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3860: !_IDC_FLIP [15] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(3860, 11888, 5, 0x44000080, 0x80, %i3, 0x80, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3860
nop
RET3860:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3861: !_LD [3] (Int)
lduw [%i0 + 16], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P3862: !_MEMBAR (FP) (CBR) (Branch target of P3999)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3862
nop
RET3862:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3863
nop

TARGET3999:
ba RET3999
nop


P3863: !_BST [13] (maybe <- 0x420000df) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3863
nop
RET3863:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3864: !_MEMBAR (FP)
membar #StoreLoad

P3865: !_REPLACEMENT [3] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]

P3866: !_ST [24] (maybe <- 0x2800030) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
stwa   %l4, [%i3 + 64] %asi
add   %l4, 1, %l4

P3867: !_MEMBAR (Int) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3867
nop
RET3867:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3868: !_REPLACEMENT [10] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P3869: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P3870: !_REPLACEMENT [12] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+4], %l3
st %l3, [%i2+4]
add %i2, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

P3871: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3871
nop
RET3871:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3872: !_BST [18] (maybe <- 0x420000e2) (FP) (Branch target of P3579)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi
ba P3873
nop

TARGET3579:
ba RET3579
nop


P3873: !_MEMBAR (FP)
membar #StoreLoad

P3874: !_LD [29] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 64], %f14
! 1 addresses covered

P3875: !_LD [7] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i0 + 128] %asi, %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

P3876: !_MEMBAR (FP)
membar #StoreLoad

P3877: !_BLD [7] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P3878: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3878
nop
RET3878:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3879: !_ST [2] (maybe <- 0x420000e3) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 8 ] %asi

P3880: !_LD [2] (FP)
ld [%i0 + 8], %f0
! 1 addresses covered

P3881: !_ST [21] (maybe <- 0x420000e4) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3881
nop
RET3881:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3882: !_LD [2] (FP)
ld [%i0 + 8], %f1
! 1 addresses covered

P3883: !_REPLACEMENT [15] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3883
nop
RET3883:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3884: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P3885: !_BLD [18] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3885
nop
RET3885:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3886: !_MEMBAR (FP) (Secondary ctx) (Branch target of P4047)
ba P3887
nop

TARGET4047:
ba RET4047
nop


P3887: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P3888: !_MEMBAR (FP)

P3889: !_IDC_FLIP [22] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
IDC_FLIP(3889, 14788, 5, 0x45800004, 0x4, %i2, 0x4, %l6, %l7, %o5, %l3)

P3890: !_REPLACEMENT [17] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P3891: !_LD [5] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 64] %asi, %f4
! 1 addresses covered

P3892: !_MEMBAR (FP)
membar #StoreLoad

P3893: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f34, %f18
fmovs %f18, %f7
fmovd %f36, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P3894: !_MEMBAR (FP)

P3895: !_BSTC [5] (maybe <- 0x420000e5) (FP) (Branch target of P4050)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P3896
nop

TARGET4050:
ba RET4050
nop


P3896: !_MEMBAR (FP) (Branch target of P3587)
ba P3897
nop

TARGET3587:
ba RET3587
nop


P3897: !_BST [30] (maybe <- 0x420000e7) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P3898: !_MEMBAR (FP)
membar #StoreLoad

P3899: !_ST [16] (maybe <- 0x2800031) (Int) (LE)
wr %g0, 0x88, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %l4, %o5, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %o5, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
stwa   %l7, [%i3 + 16] %asi
add   %l4, 1, %l4

P3900: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3900
nop
RET3900:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3901: !_BST [3] (maybe <- 0x420000e8) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3902: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3902
nop
RET3902:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3903: !_ST [14] (maybe <- 0x420000ed) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

P3904: !_REPLACEMENT [27] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+160], %o5
st %o5, [%i3+160]
add %i3, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]
add %l7, %l6, %l7
ld [%l7+160], %o5
st %o5, [%l7+160]

P3905: !_REPLACEMENT [20] (Int) (Branch target of P4061)
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
ba P3906
nop

TARGET4061:
ba RET4061
nop


P3906: !_LD [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 96] %asi, %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P3907: !_REPLACEMENT [4] (Int) (CBR) (Branch target of P3454)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3907
nop
RET3907:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3908
nop

TARGET3454:
ba RET3454
nop


P3908: !_MEMBAR (FP) (Secondary ctx)

P3909: !_BSTC [1] (maybe <- 0x420000ee) (FP) (CBR) (Secondary ctx)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3909
nop
RET3909:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3910: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3910
nop
RET3910:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3911: !_BST [30] (maybe <- 0x420000f3) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P3912: !_MEMBAR (FP)
membar #StoreLoad

P3913: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3913
nop
RET3913:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3914: !_IDC_FLIP [8] (Int) (CBR)
IDC_FLIP(3914, 14674, 5, 0x43800000, 0x0, %i1, 0x0, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3914
nop
RET3914:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3915: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l7
ld [%i2+256], %l3
st %l3, [%i2+256]
add %i2, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P3916: !_REPLACEMENT [26] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3917: !_MEMBAR (FP) (CBR) (Branch target of P3815)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3917
nop
RET3917:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P3918
nop

TARGET3815:
ba RET3815
nop


P3918: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P3919: !_MEMBAR (FP)

P3920: !_ST [29] (maybe <- 0x420000f4) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 64 ]

P3921: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P3924)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3921
nop
RET3921:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3922
nop

TARGET3924:
ba RET3924
nop


P3922: !_BLD [31] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P3923: !_MEMBAR (FP) (Secondary ctx)

P3924: !_BLD [10] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3924
nop
RET3924:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3925: !_MEMBAR (FP) (Branch target of P3789)
ba P3926
nop

TARGET3789:
ba RET3789
nop


P3926: !_REPLACEMENT [17] (Int) (Branch target of P3936)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
ba P3927
nop

TARGET3936:
ba RET3936
nop


P3927: !_IDC_FLIP [21] (Int) (Branch target of P4000)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
IDC_FLIP(3927, 25323, 5, 0x45800000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)
ba P3928
nop

TARGET4000:
ba RET4000
nop


P3928: !_MEMBAR (FP) (Branch target of P3576)
ba P3929
nop

TARGET3576:
ba RET3576
nop


P3929: !_BST [32] (maybe <- 0x420000f5) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3929
nop
RET3929:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3930: !_MEMBAR (FP)
membar #StoreLoad

P3931: !_REPLACEMENT [15] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P3932: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P3933: !_MEMBAR (FP)
membar #StoreLoad

P3934: !_BLD [18] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3934
nop
RET3934:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3935: !_MEMBAR (FP)

P3936: !_ST [22] (maybe <- 0x2800032) (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3936
nop
RET3936:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3937: !_LD [31] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 192], %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

P3938: !_REPLACEMENT [26] (Int) (CBR) (Branch target of P3917)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3938
nop
RET3938:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P3939
nop

TARGET3917:
ba RET3917
nop


P3939: !_LD [14] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3939
nop
RET3939:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3940: !_MEMBAR (FP)
membar #StoreLoad

P3941: !_BLD [3] (FP) (Branch target of P3404)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f34, %f0
fmovd %f36, %f18
fmovs %f18, %f1
fmovd %f40, %f2
ba P3942
nop

TARGET3404:
ba RET3404
nop


P3942: !_MEMBAR (FP)

P3943: !_BLD [9] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P3944: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3944
nop
RET3944:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P3945: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P3946: !_MEMBAR (FP) (Branch target of P3293)
ba P3947
nop

TARGET3293:
ba RET3293
nop


P3947: !_ST [31] (maybe <- 0x420000f6) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 192 ]

P3948: !_ST [33] (maybe <- 0x420000f7) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P3949: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3949
nop
RET3949:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3950: !_BLD [11] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f6
fmovd %f40, %f8

P3951: !_MEMBAR (FP)

P3952: !_REPLACEMENT [19] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P3953: !_MEMBAR (FP) (Branch target of P3453)
ba P3954
nop

TARGET3453:
ba RET3453
nop


P3954: !_BST [18] (maybe <- 0x420000f8) (FP) (Branch target of P3974)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi
ba P3955
nop

TARGET3974:
ba RET3974
nop


P3955: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3955
nop
RET3955:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3956: !_BST [3] (maybe <- 0x420000f9) (FP) (CBR) (Branch target of P4066)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3956
nop
RET3956:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P3957
nop

TARGET4066:
ba RET4066
nop


P3957: !_MEMBAR (FP) (Branch target of P3264)
ba P3958
nop

TARGET3264:
ba RET3264
nop


P3958: !_BST [23] (maybe <- 0x420000fe) (FP) (Branch target of P3975)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P3959
nop

TARGET3975:
ba RET3975
nop


P3959: !_MEMBAR (FP) (Branch target of P3967)
membar #StoreLoad
ba P3960
nop

TARGET3967:
ba RET3967
nop


P3960: !_REPLACEMENT [6] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P3961: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3961
nop
RET3961:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3962: !_BLD [1] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f34, %f18
fmovs %f18, %f11
fmovd %f36, %f12
fmovd %f40, %f18
fmovs %f18, %f13

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3962
nop
RET3962:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3963: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3963
nop
RET3963:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3964: !_BST [33] (maybe <- 0x42000101) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3965: !_MEMBAR (FP) (Branch target of P3140)
membar #StoreLoad
ba P3966
nop

TARGET3140:
ba RET3140
nop


P3966: !_BLD [17] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f14

P3967: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3967
nop
RET3967:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3968: !_LD [12] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 4] %asi, %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

P3969: !_MEMBAR (FP) (Branch target of P3949)
ba P3970
nop

TARGET3949:
ba RET3949
nop


P3970: !_BST [3] (maybe <- 0x42000102) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3971: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3971
nop
RET3971:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3972: !_REPLACEMENT [31] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+192], %l6
st %l6, [%i3+192]
add %i3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3972
nop
RET3972:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3973: !_MEMBAR (FP)
membar #StoreLoad

P3974: !_BLD [3] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f34, %f18
fmovs %f18, %f1
fmovd %f36, %f2
fmovd %f40, %f18
fmovs %f18, %f3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3974
nop
RET3974:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3975: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3975
nop
RET3975:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3976: !_BST [28] (maybe <- 0x42000107) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3977: !_MEMBAR (FP)
membar #StoreLoad

P3978: !_ST [12] (maybe <- 0x2800033) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 4 ]
add   %l4, 1, %l4

P3979: !_REPLACEMENT [0] (Int) (Branch target of P3885)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
ba P3980
nop

TARGET3885:
ba RET3885
nop


P3980: !_ST [10] (maybe <- 0x2800034) (Int) (Branch target of P3770)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4
ba P3981
nop

TARGET3770:
ba RET3770
nop


P3981: !_ST [25] (maybe <- 0x42000108) (FP) (Branch target of P3435)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 96 ]
ba P3982
nop

TARGET3435:
ba RET3435
nop


P3982: !_LD [9] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i1 + 32] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3982
nop
RET3982:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3983: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3169)
membar #StoreLoad
ba P3984
nop

TARGET3169:
ba RET3169
nop


P3984: !_BLD [13] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f4
fmovd %f40, %f6

P3985: !_MEMBAR (FP) (Secondary ctx)

P3986: !_LD [13] (FP) (CBR)
ld [%i2 + 32], %f7
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET3986
nop
RET3986:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P3987: !_REPLACEMENT [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P3988: !_MEMBAR (FP)

P3989: !_BST [1] (maybe <- 0x42000109) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3989
nop
RET3989:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P3990: !_MEMBAR (FP)
membar #StoreLoad

P3991: !_REPLACEMENT [19] (Int) (Branch target of P4026)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P3992
nop

TARGET4026:
ba RET4026
nop


P3992: !_ST [23] (maybe <- 0x4200010e) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

P3993: !_PREFETCH [32] (Int) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
prefetch [%i3 + 256], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3993
nop
RET3993:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3994: !_ST [28] (maybe <- 0x2800035) (Int)
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P3995: !_MEMBAR (FP) (CBR) (Branch target of P3183)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3995
nop
RET3995:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P3996
nop

TARGET3183:
ba RET3183
nop


P3996: !_BST [33] (maybe <- 0x4200010f) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P3997: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3997
nop
RET3997:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P3998: !_BST [1] (maybe <- 0x42000110) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P3999: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET3999
nop
RET3999:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4000: !_REPLACEMENT [26] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4000
nop
RET4000:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4001: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %o5
ld [%i3+96], %l6
st %l6, [%i3+96]
add %i3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P4002: !_MEMBAR (FP)
membar #StoreLoad

P4003: !_BLD [13] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4003
nop
RET4003:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4004: !_MEMBAR (FP)

P4005: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P4006: !_MEMBAR (FP)

P4007: !_LD [21] (Int) (Branch target of P3560)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 0], %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5
ba P4008
nop

TARGET3560:
ba RET3560
nop


P4008: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4008
nop
RET4008:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4009: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P4010: !_MEMBAR (FP)

P4011: !_ST [28] (maybe <- 0x2800036) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i3 + 0] %asi
add   %l4, 1, %l4

P4012: !_ST [7] (maybe <- 0x2800037) (Int)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

P4013: !_REPLACEMENT [20] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P4014: !_REPLACEMENT [30] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4014
nop
RET4014:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4015: !_MEMBAR (FP)
membar #StoreLoad

P4016: !_BLD [22] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovs %f19, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4016
nop
RET4016:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4017: !_MEMBAR (FP) (CBR) (Branch target of P3192)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4017
nop
RET4017:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4018
nop

TARGET3192:
ba RET3192
nop


P4018: !_BLD [17] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f0
membar #Sync
! 1 addresses covered
fmovd %f8, %f0

P4019: !_MEMBAR (FP) (Secondary ctx) (Branch target of P3788)
ba P4020
nop

TARGET3788:
ba RET3788
nop


P4020: !_REPLACEMENT [22] (Int)
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P4021: !_REPLACEMENT [21] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4022: !_MEMBAR (FP)

P4023: !_BST [17] (maybe <- 0x42000115) (FP) (Branch target of P3367)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi
ba P4024
nop

TARGET3367:
ba RET3367
nop


P4024: !_MEMBAR (FP)
membar #StoreLoad

P4025: !_ST [2] (maybe <- 0x42000116) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 8 ]

P4026: !_ST [28] (maybe <- 0x42000117) (FP) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4026
nop
RET4026:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4027: !_MEMBAR (FP) (Branch target of P3148)
ba P4028
nop

TARGET3148:
ba RET3148
nop


P4028: !_BST [12] (maybe <- 0x42000118) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4028
nop
RET4028:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4029: !_MEMBAR (FP) (Branch target of P3321)
membar #StoreLoad
ba P4030
nop

TARGET3321:
ba RET3321
nop


P4030: !_REPLACEMENT [5] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4030
nop
RET4030:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4031: !_PREFETCH [3] (Int)
prefetch [%i0 + 16], 1

P4032: !_LD [26] (Int) (Nucleus ctx) (Branch target of P3860)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 128] %asi, %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4033
nop

TARGET3860:
ba RET3860
nop


P4033: !_MEMBAR (FP) (Branch target of P3553)
ba P4034
nop

TARGET3553:
ba RET3553
nop


P4034: !_BST [19] (maybe <- 0x4200011b) (FP) (Branch target of P3549)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P4035
nop

TARGET3549:
ba RET3549
nop


P4035: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4035
nop
RET4035:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4036: !_BST [0] (maybe <- 0x4200011c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4037: !_MEMBAR (FP)

P4038: !_BST [4] (maybe <- 0x42000121) (FP) (CBR) (Secondary ctx) (Branch target of P3091)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4038
nop
RET4038:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4039
nop

TARGET3091:
ba RET3091
nop


P4039: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4040: !_ST [8] (maybe <- 0x42000126) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 0 ] %asi

P4041: !_MEMBAR (FP)

P4042: !_BST [2] (maybe <- 0x42000127) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4043: !_MEMBAR (FP)
membar #StoreLoad

P4044: !_LD [28] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 0] %asi, %f1
! 1 addresses covered

P4045: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4046: !_BLD [7] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

P4047: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4047
nop
RET4047:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4048: !_BSTC [33] (maybe <- 0x4200012c) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4049: !_MEMBAR (FP)

P4050: !_BST [18] (maybe <- 0x4200012d) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4050
nop
RET4050:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4051: !_MEMBAR (FP)
membar #StoreLoad

P4052: !_REPLACEMENT [2] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P4053: !_ST [18] (maybe <- 0x4200012e) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4053
nop
RET4053:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4054: !_ST [28] (maybe <- 0x4200012f) (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P4055: !_MEMBAR (FP)
membar #StoreLoad

P4056: !_BLD [32] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P4057: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4057
nop
RET4057:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4058: !_REPLACEMENT [20] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+256], %l7
st %l7, [%i3+256]
add %i3, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P4059: !_REPLACEMENT [0] (Int)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P4060: !_REPLACEMENT [23] (Int)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P4061: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4061
nop
RET4061:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4062: !_MEMBAR (FP)
membar #StoreLoad

P4063: !_BLD [22] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f4
fmovd %f40, %f6

P4064: !_MEMBAR (FP)

P4065: !_BST [25] (maybe <- 0x42000130) (FP) (Branch target of P3416)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P4066
nop

TARGET3416:
ba RET3416
nop


P4066: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4066
nop
RET4066:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4067: !_ST [3] (maybe <- 0x2800038) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i0 + 16] %asi
add   %l4, 1, %l4

P4068: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4069: !_BLD [28] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P4070: !_MEMBAR (FP) (Secondary ctx)

P4071: !_BST [7] (maybe <- 0x42000132) (FP) (Branch target of P3199)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi
ba P4072
nop

TARGET3199:
ba RET3199
nop


P4072: !_MEMBAR (FP) (Branch target of P3551)
membar #StoreLoad
ba P4073
nop

TARGET3551:
ba RET3551
nop


P4073: !_ST [2] (maybe <- 0x2800039) (Int) (Branch target of P3982)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4
ba P4074
nop

TARGET3982:
ba RET3982
nop


P4074: !_REPLACEMENT [18] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P4075: !_ST [32] (maybe <- 0x280003a) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 256 ]
add   %l4, 1, %l4

P4076: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P4077: !_MEMBAR (FP)
membar #StoreLoad

P4078: !_BLD [16] (FP) (Branch target of P3142)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f8
ba P4079
nop

TARGET3142:
ba RET3142
nop


P4079: !_MEMBAR (FP)

P4080: !_LD [32] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i3 + 256] %asi, %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0

P4081: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4082: !_ST [24] (maybe <- 0x42000133) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 64 ] %asi

P4083: !_MEMBAR (FP)

P4084: !_BST [25] (maybe <- 0x42000134) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P4085: !_MEMBAR (FP) (Branch target of P3749)
ba P4086
nop

TARGET3749:
ba RET3749
nop


P4086: !_BST [8] (maybe <- 0x42000136) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4086
nop
RET4086:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4087: !_MEMBAR (FP) (Loop exit) (Branch target of P3702)
membar #StoreLoad
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovs %f8, %f30
!--
loop_exit_5_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_5_0
nop
ba P4088
nop

TARGET3702:
ba RET3702
nop


P4088: !_MEMBAR (Int)
membar #StoreLoad

END_NODES5: ! Test instruction sequence for CPU 5 ends
sethi %hi(0xdead0e0f), %o5
or    %o5, %lo(0xdead0e0f), %o5
! move %o5(lower) -> %o0(upper)
sllx %o5, 32, %o0
sethi %hi(0xdead0e0f), %o5
or    %o5, %lo(0xdead0e0f), %o5
stw %o5, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func6:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l7
or    %l7, %lo(0xdeadbee0), %l7
stw   %l7, [%i5]
sethi %hi(0xdeadbee1), %l7
or    %l7, %lo(0xdeadbee1), %l7
stw   %l7, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x06deade1), %l7
or    %l7, %lo(0x06deade1), %l7
stw %l7, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x3000001), %l4
or    %l4, %lo(0x3000001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x42800001), %l7
or    %l7, %lo(0x42800001), %l7
stw %l7, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x37000000), %l7
or    %l7, %lo(0x37000000), %l7
stw %l7, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x1bab^4
sethi %hi(0x1bab), %l0
or    %l0, %lo(0x1bab), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES6: ! Test instruction sequence for ISTREAM 6 begins

P4089: !_REPLACEMENT [4] (Int) (Loop entry) (Branch target of P4388)
sethi %hi(0x6), %l2
or %l2, %lo(0x6),  %l2
loop_entry_6_0:
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
ba P4090
nop

TARGET4388:
ba RET4388
nop


P4090: !_LD [9] (Int)
lduw [%i1 + 32], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4091: !_LD [33] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 0], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

P4092: !_REPLACEMENT [26] (Int) (CBR) (Nucleus ctx) (Branch target of P4094)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4092
nop
RET4092:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4093
nop

TARGET4094:
ba RET4094
nop


P4093: !_IDC_FLIP [11] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(4093, 17772, 6, 0x44000000, 0x0, %i3, 0x0, %l6, %l7, %o5, %l3)

P4094: !_LD [22] (Int) (CBR) (Branch target of P4324)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4094
nop
RET4094:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4095
nop

TARGET4324:
ba RET4324
nop


P4095: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4095
nop
RET4095:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4096: !_BLD [5] (FP) (Branch target of P4418)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f0
membar #Sync
! 2 addresses covered
fmovs %f8, %f1
ba P4097
nop

TARGET4418:
ba RET4418
nop


P4097: !_MEMBAR (FP) (Branch target of P4127)
ba P4098
nop

TARGET4127:
ba RET4127
nop


P4098: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P4099: !_MEMBAR (FP)

P4100: !_ST [27] (maybe <- 0x3000001) (Int)
stw   %l4, [%i2 + 160 ]
add   %l4, 1, %l4

P4101: !_ST [29] (maybe <- 0x42800001) (FP) (Secondary ctx) (Branch target of P4224)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 64 ] %asi
ba P4102
nop

TARGET4224:
ba RET4224
nop


P4102: !_MEMBAR (FP)
membar #StoreLoad

P4103: !_BLD [33] (FP) (Branch target of P4133)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4
ba P4104
nop

TARGET4133:
ba RET4133
nop


P4104: !_MEMBAR (FP) (CBR) (Branch target of P4120)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4104
nop
RET4104:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4105
nop

TARGET4120:
ba RET4120
nop


P4105: !_LD [28] (Int)
lduw [%i3 + 0], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

P4106: !_REPLACEMENT [7] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P4107: !_LD [32] (Int) (Branch target of P4434)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 256], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
ba P4108
nop

TARGET4434:
ba RET4434
nop


P4108: !_MEMBAR (FP) (CBR) (Branch target of P4140)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4108
nop
RET4108:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4109
nop

TARGET4140:
ba RET4140
nop


P4109: !_BST [31] (maybe <- 0x42800002) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4109
nop
RET4109:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4110: !_MEMBAR (FP)
membar #StoreLoad

P4111: !_LD [20] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 256], %f5
! 1 addresses covered

P4112: !_MEMBAR (FP)

P4113: !_BST [31] (maybe <- 0x42800003) (FP) (Branch target of P4514)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi
ba P4114
nop

TARGET4514:
ba RET4514
nop


P4114: !_MEMBAR (FP)

P4115: !_BST [14] (maybe <- 0x42800004) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4115
nop
RET4115:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4116: !_MEMBAR (FP)

P4117: !_BST [9] (maybe <- 0x42800005) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P4118: !_MEMBAR (FP)
membar #StoreLoad

P4119: !_ST [25] (maybe <- 0x3000002) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 96 ]
add   %l4, 1, %l4

P4120: !_REPLACEMENT [14] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4120
nop
RET4120:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4121: !_REPLACEMENT [11] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4122: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4122
nop
RET4122:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4123: !_BST [10] (maybe <- 0x42800007) (FP) (Branch target of P4109)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi
ba P4124
nop

TARGET4109:
ba RET4109
nop


P4124: !_MEMBAR (FP) (Branch target of P4364)
ba P4125
nop

TARGET4364:
ba RET4364
nop


P4125: !_BST [28] (maybe <- 0x42800008) (FP) (CBR) (Branch target of P4520)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4125
nop
RET4125:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4126
nop

TARGET4520:
ba RET4520
nop


P4126: !_MEMBAR (FP)
membar #StoreLoad

P4127: !_ST [21] (maybe <- 0x42800009) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4127
nop
RET4127:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4128: !_MEMBAR (FP)

P4129: !_BST [22] (maybe <- 0x4280000a) (FP) (Branch target of P4385)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P4130
nop

TARGET4385:
ba RET4385
nop


P4130: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4130
nop
RET4130:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4131: !_REPLACEMENT [14] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4131
nop
RET4131:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4132: !_REPLACEMENT [31] (Int)
sethi %hi(0x2000), %l3
ld [%i3+192], %l7
st %l7, [%i3+192]
add %i3, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]
add %l6, %l3, %l6
ld [%l6+192], %l7
st %l7, [%l6+192]

P4133: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4133
nop
RET4133:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4134: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f6
fmovd %f34, %f8
fmovd %f36, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P4135: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4135
nop
RET4135:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4136: !_REPLACEMENT [30] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P4137: !_MEMBAR (FP)
membar #StoreLoad

P4138: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f40, %f18
fmovs %f18, %f13

P4139: !_MEMBAR (FP)

P4140: !_LD [30] (FP) (CBR)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 128], %f14
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4140
nop
RET4140:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4141: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4141
nop
RET4141:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4142: !_REPLACEMENT [4] (Int)
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P4143: !_IDC_FLIP [31] (Int) (CBR)
IDC_FLIP(4143, 20562, 6, 0x460000c0, 0xc0, %i3, 0xc0, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4143
nop
RET4143:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4144: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4144
nop
RET4144:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4145: !_BST [30] (maybe <- 0x4280000d) (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4145
nop
RET4145:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4146: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4147: !_ST [20] (maybe <- 0x4280000e) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 256 ]

P4148: !_ST [33] (maybe <- 0x4280000f) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P4149: !_MEMBAR (FP) (CBR) (Branch target of P4131)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4149
nop
RET4149:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4150
nop

TARGET4131:
ba RET4131
nop


P4150: !_BST [33] (maybe <- 0x42800010) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4151: !_MEMBAR (FP) (CBR) (Branch target of P4122)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4151
nop
RET4151:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4152
nop

TARGET4122:
ba RET4122
nop


P4152: !_REPLACEMENT [14] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P4153: !_LD [25] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 96], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2

P4154: !_MEMBAR (FP) (Secondary ctx)

P4155: !_BST [4] (maybe <- 0x42800011) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4156: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4157: !_REPLACEMENT [5] (Int) (Branch target of P4319)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
ba P4158
nop

TARGET4319:
ba RET4319
nop


P4158: !_REPLACEMENT [14] (Int)
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P4159: !_LD [29] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 64] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4159
nop
RET4159:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4160: !_MEMBAR (FP)
membar #StoreLoad

P4161: !_BLD [5] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4161
nop
RET4161:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4162: !_MEMBAR (FP)

P4163: !_ST [30] (maybe <- 0x42800016) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 128 ] %asi

P4164: !_REPLACEMENT [18] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P4165: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4165
nop
RET4165:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4166: !_BST [21] (maybe <- 0x42800017) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4167: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4167
nop
RET4167:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4168: !_BLD [17] (FP) (Branch target of P4399)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f18
fmovs %f18, %f1
ba P4169
nop

TARGET4399:
ba RET4399
nop


P4169: !_MEMBAR (FP)

P4170: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f2
fmovd %f40, %f4

P4171: !_MEMBAR (FP)

P4172: !_ST [22] (maybe <- 0x4280001a) (FP) (Branch target of P4340)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]
ba P4173
nop

TARGET4340:
ba RET4340
nop


P4173: !_ST [15] (maybe <- 0x4280001b) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 128 ] %asi

P4174: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4174
nop
RET4174:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4175: !_BST [30] (maybe <- 0x4280001c) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4175
nop
RET4175:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4176: !_MEMBAR (FP)
membar #StoreLoad

P4177: !_BLD [15] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4177
nop
RET4177:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4178: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4178
nop
RET4178:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4179: !_REPLACEMENT [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P4180: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4181: !_BLD [12] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f6
fmovd %f40, %f8

P4182: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4182
nop
RET4182:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4183: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P4184: !_REPLACEMENT [23] (Int)
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]

P4185: !_MEMBAR (Int)
membar #StoreLoad

P4186: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P4187: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4187
nop
RET4187:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4188: !_LD [27] (Int) (Branch target of P4231)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 160], %l6
! move %l6(lower) -> %o3(lower)
or %l6, %o3, %o3
ba P4189
nop

TARGET4231:
ba RET4231
nop


P4189: !_LD [8] (FP) (Secondary ctx) (Branch target of P4485)
wr %g0, 0x81, %asi
lda    [%i1 + 0] %asi, %f12
! 1 addresses covered
ba P4190
nop

TARGET4485:
ba RET4485
nop


P4190: !_IDC_FLIP [18] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
IDC_FLIP(4190, 29019, 6, 0x44800080, 0x80, %i3, 0x80, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4190
nop
RET4190:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4191: !_MEMBAR (FP)

P4192: !_BST [18] (maybe <- 0x4280001d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P4193: !_MEMBAR (FP)
membar #StoreLoad

P4194: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P4195: !_MEMBAR (FP)

P4196: !_REPLACEMENT [22] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4196
nop
RET4196:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4197: !_MEMBAR (Int)
membar #StoreLoad

P4198: !_ST [0] (maybe <- 0x4280001e) (FP) (Loop exit) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4198
nop
RET4198:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovs %f14, %f30
!--
loop_exit_6_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_0
nop

P4199: !_MEMBAR (FP) (Loop entry) (Branch target of P4332)
sethi %hi(0x1), %l2
or %l2, %lo(0x1),  %l2
loop_entry_6_1:
membar #StoreLoad
ba P4200
nop

TARGET4332:
ba RET4332
nop


P4200: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f0
membar #Sync
! 1 addresses covered

P4201: !_MEMBAR (FP)

P4202: !_BLD [33] (FP) (Secondary ctx) (Branch target of P4348)
wr %g0, 0xf1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
ba P4203
nop

TARGET4348:
ba RET4348
nop


P4203: !_MEMBAR (FP) (Secondary ctx)

P4204: !_REPLACEMENT [20] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

P4205: !_MEMBAR (FP)

P4206: !_BST [6] (maybe <- 0x4280001f) (FP) (Branch target of P4505)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P4207
nop

TARGET4505:
ba RET4505
nop


P4207: !_MEMBAR (FP) (Branch target of P4281)
membar #StoreLoad
ba P4208
nop

TARGET4281:
ba RET4281
nop


P4208: !_ST [9] (maybe <- 0x42800021) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 32 ] %asi

P4209: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4209
nop
RET4209:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4210: !_BLD [2] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f2
fmovd %f34, %f4
fmovd %f36, %f18
fmovs %f18, %f5
fmovd %f40, %f6

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4210
nop
RET4210:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4211: !_MEMBAR (FP) (CBR) (Branch target of P4237)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4211
nop
RET4211:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4212
nop

TARGET4237:
ba RET4237
nop


P4212: !_BST [28] (maybe <- 0x42800022) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4213: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4213
nop
RET4213:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4214: !_BST [30] (maybe <- 0x42800023) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4215: !_MEMBAR (FP) (Branch target of P4526)
membar #StoreLoad
ba P4216
nop

TARGET4526:
ba RET4526
nop


P4216: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4216
nop
RET4216:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4217: !_REPLACEMENT [24] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4217
nop
RET4217:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4218: !_LD [22] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 4], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4219: !_LD [14] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 64] %asi, %f7
! 1 addresses covered

P4220: !_MEMBAR (FP)

P4221: !_BST [0] (maybe <- 0x42800024) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4221
nop
RET4221:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4222: !_MEMBAR (FP)
membar #StoreLoad

P4223: !_REPLACEMENT [5] (Int) (Branch target of P4161)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+64], %l7
st %l7, [%i2+64]
add %i2, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
ba P4224
nop

TARGET4161:
ba RET4161
nop


P4224: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4224
nop
RET4224:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4225: !_BST [5] (maybe <- 0x42800029) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P4226: !_MEMBAR (FP) (Branch target of P4125)
ba P4227
nop

TARGET4125:
ba RET4125
nop


P4227: !_BST [16] (maybe <- 0x4280002b) (FP) (Branch target of P4248)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P4228
nop

TARGET4248:
ba RET4248
nop


P4228: !_MEMBAR (FP)
membar #StoreLoad

P4229: !_REPLACEMENT [30] (Int) (Nucleus ctx) (Branch target of P4151)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
ba P4230
nop

TARGET4151:
ba RET4151
nop


P4230: !_LD [4] (Int)
lduw [%i0 + 32], %l7
! move %l7(lower) -> %o0(lower)
or %l7, %o0, %o0

P4231: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4231
nop
RET4231:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4232: !_BSTC [13] (maybe <- 0x4280002c) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4233: !_MEMBAR (FP)
membar #StoreLoad

P4234: !_BLD [31] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f8

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4234
nop
RET4234:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4235: !_MEMBAR (FP)

P4236: !_LD [6] (Int) (Branch target of P4211)
lduw [%i0 + 96], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1
ba P4237
nop

TARGET4211:
ba RET4211
nop


P4237: !_LD [2] (FP) (CBR)
ld [%i0 + 8], %f9
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4237
nop
RET4237:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4238: !_MEMBAR (FP)
membar #StoreLoad

P4239: !_BLD [18] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P4240: !_MEMBAR (FP)

P4241: !_BLD [4] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P4242: !_MEMBAR (FP)

P4243: !_BST [32] (maybe <- 0x4280002f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

P4244: !_MEMBAR (FP)
membar #StoreLoad

P4245: !_LD [8] (FP)
ld [%i1 + 0], %f0
! 1 addresses covered

P4246: !_PREFETCH [31] (Int)
prefetch [%i3 + 192], 1

P4247: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4247
nop
RET4247:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4248: !_BLD [0] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f18, %f3
fmovd %f36, %f4
fmovd %f40, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4248
nop
RET4248:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4249: !_MEMBAR (FP)

P4250: !_ST [10] (maybe <- 0x3000003) (Int) (Secondary ctx) (Branch target of P4216)
wr %g0, 0x81, %asi
stwa   %l4, [%i1 + 64] %asi
add   %l4, 1, %l4
ba P4251
nop

TARGET4216:
ba RET4216
nop


P4251: !_ST [2] (maybe <- 0x3000004) (Int) (CBR)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4251
nop
RET4251:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4252: !_ST [30] (maybe <- 0x42800030) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 128 ]

P4253: !_REPLACEMENT [28] (Int) (Branch target of P4135)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
ba P4254
nop

TARGET4135:
ba RET4135
nop


P4254: !_PREFETCH [1] (Int)
prefetch [%i0 + 4], 1

P4255: !_REPLACEMENT [2] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+8], %o5
st %o5, [%i3+8]
add %i3, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4255
nop
RET4255:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4256: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %l6
ld [%i3+256], %o5
st %o5, [%i3+256]
add %i3, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P4257: !_ST [8] (maybe <- 0x42800031) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i1 + 0 ] %asi

P4258: !_REPLACEMENT [32] (Int)
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P4259: !_ST [23] (maybe <- 0x42800032) (FP) (Nucleus ctx) (Branch target of P4403)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION5_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 32 ] %asi
ba P4260
nop

TARGET4403:
ba RET4403
nop


P4260: !_MEMBAR (FP) (Secondary ctx) (Branch target of P4178)
ba P4261
nop

TARGET4178:
ba RET4178
nop


P4261: !_BSTC [28] (maybe <- 0x42800033) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4262: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4263: !_BLD [25] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f6
fmovd %f40, %f18
fmovs %f18, %f7

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4263
nop
RET4263:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4264: !_MEMBAR (FP) (Branch target of P4187)
ba P4265
nop

TARGET4187:
ba RET4187
nop


P4265: !_LD [2] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
lda    [%i0 + 8] %asi, %f8
! 1 addresses covered

P4266: !_ST [21] (maybe <- 0x3000005) (Int) (Branch target of P4165)
stw   %l4, [%i2 + 0 ]
add   %l4, 1, %l4
ba P4267
nop

TARGET4165:
ba RET4165
nop


P4267: !_ST [31] (maybe <- 0x42800034) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 192 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4267
nop
RET4267:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4268: !_MEMBAR (FP)

P4269: !_BST [25] (maybe <- 0x42800035) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4269
nop
RET4269:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4270: !_MEMBAR (FP)

P4271: !_BSTC [1] (maybe <- 0x42800037) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4271
nop
RET4271:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4272: !_MEMBAR (FP) (Branch target of P4095)
membar #StoreLoad
ba P4273
nop

TARGET4095:
ba RET4095
nop


P4273: !_ST [1] (maybe <- 0x4280003c) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P4274: !_REPLACEMENT [1] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4274
nop
RET4274:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4275: !_LD [10] (FP) (CBR)
ld [%i1 + 64], %f9
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4275
nop
RET4275:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4276: !_REPLACEMENT [26] (Int) (Branch target of P4217)
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
ba P4277
nop

TARGET4217:
ba RET4217
nop


P4277: !_REPLACEMENT [31] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+192], %l6
st %l6, [%i2+192]
add %i2, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4277
nop
RET4277:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4278: !_LD [8] (Int)
lduw [%i1 + 0], %l3
! move %l3(lower) -> %o1(lower)
or %l3, %o1, %o1

P4279: !_ST [8] (maybe <- 0x4280003d) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P4280: !_LD [26] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 128], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P4281: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4281
nop
RET4281:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4282: !_REPLACEMENT [1] (Int) (Branch target of P4130)
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
ba P4283
nop

TARGET4130:
ba RET4130
nop


P4283: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P4284: !_MEMBAR (FP)

P4285: !_BST [13] (maybe <- 0x4280003e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4286: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4286
nop
RET4286:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4287: !_PREFETCH [9] (Int)
prefetch [%i1 + 32], 1

P4288: !_LD [33] (FP) (Nucleus ctx) (Branch target of P4144)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 0] %asi, %f10
! 1 addresses covered
ba P4289
nop

TARGET4144:
ba RET4144
nop


P4289: !_MEMBAR (FP)
membar #StoreLoad

P4290: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11

P4291: !_MEMBAR (FP)

P4292: !_BLD [1] (FP) (CBR) (Branch target of P4352)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4292
nop
RET4292:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4293
nop

TARGET4352:
ba RET4352
nop


P4293: !_MEMBAR (FP)

P4294: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P4295: !_MEMBAR (FP)

P4296: !_BLD [25] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f4
fmovd %f40, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4296
nop
RET4296:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4297: !_MEMBAR (FP)

P4298: !_BST [11] (maybe <- 0x42800041) (FP) (Secondary ctx) (Branch target of P4362)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P4299
nop

TARGET4362:
ba RET4362
nop


P4299: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4300: !_LD [6] (FP)
ld [%i0 + 96], %f6
! 1 addresses covered

P4301: !_REPLACEMENT [27] (Int) (Branch target of P4537)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+160], %l3
st %l3, [%i3+160]
add %i3, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
add %o5, %l7, %o5
ld [%o5+160], %l3
st %l3, [%o5+160]
ba P4302
nop

TARGET4537:
ba RET4537
nop


P4302: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4303: !_BLD [7] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P4304: !_MEMBAR (FP) (Secondary ctx)

P4305: !_BLD [21] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P4306: !_MEMBAR (FP)

P4307: !_ST [1] (maybe <- 0x42800044) (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 4 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4307
nop
RET4307:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4308: !_MEMBAR (FP) (Branch target of P4307)
ba P4309
nop

TARGET4307:
ba RET4307
nop


P4309: !_BST [29] (maybe <- 0x42800045) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P4310: !_MEMBAR (FP)
membar #StoreLoad

P4311: !_BLD [10] (FP) (Branch target of P4115)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
ba P4312
nop

TARGET4115:
ba RET4115
nop


P4312: !_MEMBAR (FP)

P4313: !_BST [10] (maybe <- 0x42800046) (FP) (Branch target of P4424)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi
ba P4314
nop

TARGET4424:
ba RET4424
nop


P4314: !_MEMBAR (FP)
membar #StoreLoad

P4315: !_REPLACEMENT [21] (Int) (Branch target of P4382)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
ba P4316
nop

TARGET4382:
ba RET4382
nop


P4316: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P4317: !_MEMBAR (FP)
membar #StoreLoad

P4318: !_BLD [30] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P4319: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4319
nop
RET4319:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4320: !_BST [3] (maybe <- 0x42800047) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4321: !_MEMBAR (FP)

P4322: !_BST [16] (maybe <- 0x4280004c) (FP) (Branch target of P4251)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P4323
nop

TARGET4251:
ba RET4251
nop


P4323: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4323
nop
RET4323:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4324: !_REPLACEMENT [23] (Int) (CBR) (Branch target of P4331)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4324
nop
RET4324:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4325
nop

TARGET4331:
ba RET4331
nop


P4325: !_REPLACEMENT [5] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4326: !_REPLACEMENT [3] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P4327: !_LD [1] (Int) (Branch target of P4380)
lduw [%i0 + 4], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
ba P4328
nop

TARGET4380:
ba RET4380
nop


P4328: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P4329: !_MEMBAR (FP)
membar #StoreLoad

P4330: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P4331: !_MEMBAR (FP) (CBR) (Branch target of P4275)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4331
nop
RET4331:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4332
nop

TARGET4275:
ba RET4275
nop


P4332: !_REPLACEMENT [22] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+4], %o5
st %o5, [%i2+4]
add %i2, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4332
nop
RET4332:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4333: !_REPLACEMENT [20] (Int)
sethi %hi(0x2000), %l6
ld [%i2+256], %o5
st %o5, [%i2+256]
add %i2, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]
add %l7, %l6, %l7
ld [%l7+256], %o5
st %o5, [%l7+256]

P4334: !_REPLACEMENT [12] (Int)
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P4335: !_MEMBAR (FP)

P4336: !_BST [13] (maybe <- 0x4280004d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4337: !_MEMBAR (FP) (Branch target of P4210)
membar #StoreLoad
ba P4338
nop

TARGET4210:
ba RET4210
nop


P4338: !_ST [26] (maybe <- 0x3000006) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 128] %asi
add   %l4, 1, %l4

P4339: !_MEMBAR (FP)
membar #StoreLoad

P4340: !_BLD [33] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4340
nop
RET4340:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4341: !_MEMBAR (FP)

P4342: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P4343: !_MEMBAR (FP) (Branch target of P4104)
ba P4344
nop

TARGET4104:
ba RET4104
nop


P4344: !_PREFETCH [1] (Int) (CBR)
prefetch [%i0 + 4], 1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4344
nop
RET4344:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4345: !_LD [29] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 64], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P4346: !_MEMBAR (FP)

P4347: !_BST [14] (maybe <- 0x42800050) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P4348: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4348
nop
RET4348:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4349: !_LD [23] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 32] %asi, %f1
! 1 addresses covered

P4350: !_REPLACEMENT [24] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P4351: !_LD [24] (Int)
lduw [%i3 + 64], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

P4352: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4352
nop
RET4352:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4353: !_BST [11] (maybe <- 0x42800051) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4354: !_MEMBAR (FP)
membar #StoreLoad

P4355: !_ST [8] (maybe <- 0x3000007) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i1 + 0] %asi
add   %l4, 1, %l4

P4356: !_LD [4] (Int)
lduw [%i0 + 32], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

P4357: !_ST [6] (maybe <- 0x3000008) (Int)
stw   %l4, [%i0 + 96 ]
add   %l4, 1, %l4

P4358: !_MEMBAR (FP) (Branch target of P4477)
ba P4359
nop

TARGET4477:
ba RET4477
nop


P4359: !_BST [5] (maybe <- 0x42800054) (FP) (Branch target of P4344)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P4360
nop

TARGET4344:
ba RET4344
nop


P4360: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4360
nop
RET4360:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4361: !_BST [13] (maybe <- 0x42800056) (FP) (Branch target of P4196)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi
ba P4362
nop

TARGET4196:
ba RET4196
nop


P4362: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4362
nop
RET4362:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4363: !_REPLACEMENT [1] (Int)
sethi %hi(0x2000), %o5
ld [%i2+4], %l6
st %l6, [%i2+4]
add %i2, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]

P4364: !_REPLACEMENT [24] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i2+64], %l3
st %l3, [%i2+64]
add %i2, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4364
nop
RET4364:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4365: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %l7
ld [%i2+32], %l3
st %l3, [%i2+32]
add %i2, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P4366: !_REPLACEMENT [2] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+8], %o5
st %o5, [%i2+8]
add %i2, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4366
nop
RET4366:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4367: !_REPLACEMENT [24] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4368: !_ST [29] (maybe <- 0x3000009) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P4369: !_MEMBAR (FP) (Branch target of P4360)
ba P4370
nop

TARGET4360:
ba RET4360
nop


P4370: !_BST [17] (maybe <- 0x42800059) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4371: !_MEMBAR (FP) (Branch target of P4476)
membar #StoreLoad
ba P4372
nop

TARGET4476:
ba RET4476
nop


P4372: !_LD [17] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i3 + 96] %asi, %o5
! move %o5(lower) -> %o4(lower)
or %o5, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P4373: !_MEMBAR (FP) (Secondary ctx)

P4374: !_BST [21] (maybe <- 0x4280005a) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4375: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4376: !_LD [17] (FP)
ld [%i3 + 96], %f2
! 1 addresses covered

P4377: !_ST [12] (maybe <- 0x4280005d) (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 4 ]

P4378: !_LD [17] (Int) (Branch target of P4177)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduw [%i2 + 96], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0
ba P4379
nop

TARGET4177:
ba RET4177
nop


P4379: !_REPLACEMENT [29] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P4380: !_REPLACEMENT [20] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4380
nop
RET4380:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4381: !_REPLACEMENT [31] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+192], %l6
st %l6, [%i3+192]
add %i3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]

P4382: !_REPLACEMENT [3] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+16], %l3
st %l3, [%i3+16]
add %i3, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4382
nop
RET4382:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4383: !_MEMBAR (FP)
membar #StoreLoad

P4384: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovd %f40, %f4

P4385: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4385
nop
RET4385:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4386: !_ST [22] (maybe <- 0x4280005e) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 4 ]

P4387: !_ST [27] (maybe <- 0x300000a) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i2 + 160] %asi
add   %l4, 1, %l4

P4388: !_REPLACEMENT [4] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4388
nop
RET4388:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4389: !_MEMBAR (FP) (Branch target of P4323)
ba P4390
nop

TARGET4323:
ba RET4323
nop


P4390: !_BSTC [19] (maybe <- 0x4280005f) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4391: !_MEMBAR (FP)
membar #StoreLoad

P4392: !_REPLACEMENT [33] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4393: !_ST [10] (maybe <- 0x300000b) (Int)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4

P4394: !_MEMBAR (FP) (Branch target of P4527)
ba P4395
nop

TARGET4527:
ba RET4527
nop


P4395: !_BST [12] (maybe <- 0x42800060) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4396: !_MEMBAR (FP)
membar #StoreLoad

P4397: !_REPLACEMENT [24] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4398: !_ST [9] (maybe <- 0x42800063) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 32 ]

P4399: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4399
nop
RET4399:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4400: !_BLD [1] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f34, %f18
fmovs %f18, %f7
fmovd %f36, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P4401: !_MEMBAR (FP) (Secondary ctx)

P4402: !_LD [21] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 0], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

P4403: !_REPLACEMENT [17] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4403
nop
RET4403:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4404: !_MEMBAR (FP)

P4405: !_BST [0] (maybe <- 0x42800064) (FP) (Branch target of P4234)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P4406
nop

TARGET4234:
ba RET4234
nop


P4406: !_MEMBAR (FP) (Branch target of P4470)
membar #StoreLoad
ba P4407
nop

TARGET4470:
ba RET4470
nop


P4407: !_REPLACEMENT [17] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4407
nop
RET4407:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4408: !_MEMBAR (FP)

P4409: !_BST [11] (maybe <- 0x42800069) (FP) (CBR) (Branch target of P4501)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4409
nop
RET4409:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4410
nop

TARGET4501:
ba RET4501
nop


P4410: !_MEMBAR (FP) (Branch target of P4255)
membar #StoreLoad
ba P4411
nop

TARGET4255:
ba RET4255
nop


P4411: !_IDC_FLIP [3] (Int) (Branch target of P4459)
IDC_FLIP(4411, 15081, 6, 0x43000010, 0x10, %i0, 0x10, %l6, %l7, %o5, %l3)
ba P4412
nop

TARGET4459:
ba RET4459
nop


P4412: !_REPLACEMENT [9] (Int)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P4413: !_LD [14] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i2 + 64] %asi, %f10
! 1 addresses covered

P4414: !_ST [24] (maybe <- 0x300000c) (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4

P4415: !_MEMBAR (FP) (Branch target of P4286)
ba P4416
nop

TARGET4286:
ba RET4286
nop


P4416: !_BST [33] (maybe <- 0x4280006c) (FP) (Branch target of P4159)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P4417
nop

TARGET4159:
ba RET4159
nop


P4417: !_MEMBAR (FP) (Branch target of P4209)
ba P4418
nop

TARGET4209:
ba RET4209
nop


P4418: !_BST [9] (maybe <- 0x4280006d) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4418
nop
RET4418:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4419: !_MEMBAR (FP)
membar #StoreLoad

P4420: !_LD [15] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 128] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P4421: !_MEMBAR (FP)
membar #StoreLoad

P4422: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovs %f19, %f12
fmovd %f34, %f18
fmovs %f18, %f13
fmovd %f36, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P4423: !_MEMBAR (FP)

P4424: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4424
nop
RET4424:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4425: !_MEMBAR (FP) (Branch target of P4182)
ba P4426
nop

TARGET4182:
ba RET4182
nop


P4426: !_BST [18] (maybe <- 0x4280006f) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P4427: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4427
nop
RET4427:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4428: !_BST [19] (maybe <- 0x42800070) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4429: !_MEMBAR (FP)
membar #StoreLoad

P4430: !_BLD [16] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 0] %asi, %f0
membar #Sync
! 1 addresses covered
fmovd %f4, %f0

P4431: !_MEMBAR (FP) (Secondary ctx) (Branch target of P4198)
ba P4432
nop

TARGET4198:
ba RET4198
nop


P4432: !_BST [2] (maybe <- 0x42800071) (FP) (Branch target of P4277)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P4433
nop

TARGET4277:
ba RET4277
nop


P4433: !_MEMBAR (FP)
membar #StoreLoad

P4434: !_REPLACEMENT [20] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4434
nop
RET4434:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4435: !_ST [25] (maybe <- 0x42800076) (FP) (Secondary ctx) (Branch target of P4143)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 96 ] %asi
ba P4436
nop

TARGET4143:
ba RET4143
nop


P4436: !_LD [13] (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 32] %asi, %f1
! 1 addresses covered

P4437: !_REPLACEMENT [0] (Int) (CBR) (Branch target of P4267)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4437
nop
RET4437:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4438
nop

TARGET4267:
ba RET4267
nop


P4438: !_REPLACEMENT [0] (Int)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4439: !_LD [29] (Int) (Branch target of P4175)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 64], %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1
ba P4440
nop

TARGET4175:
ba RET4175
nop


P4440: !_MEMBAR (FP)

P4441: !_BST [7] (maybe <- 0x42800077) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i0 + 128 ] %asi

P4442: !_MEMBAR (FP)
membar #StoreLoad

P4443: !_BLD [24] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P4444: !_MEMBAR (FP)

P4445: !_BLD [29] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P4446: !_MEMBAR (FP) (Branch target of P4407)
ba P4447
nop

TARGET4407:
ba RET4407
nop


P4447: !_BLD [8] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

P4448: !_MEMBAR (FP) (Secondary ctx)

P4449: !_BST [15] (maybe <- 0x42800078) (FP) (Branch target of P4366)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi
ba P4450
nop

TARGET4366:
ba RET4366
nop


P4450: !_MEMBAR (FP)
membar #StoreLoad

P4451: !_PREFETCH [31] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 192], 1

P4452: !_REPLACEMENT [23] (Int) (Nucleus ctx) (Branch target of P4149)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+32], %l7
st %l7, [%i3+32]
add %i3, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
add %l6, %l3, %l6
ld [%l6+32], %l7
st %l7, [%l6+32]
ba P4453
nop

TARGET4149:
ba RET4149
nop


P4453: !_ST [2] (maybe <- 0x42800079) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 8 ]

P4454: !_IDC_FLIP [0] (Int)
IDC_FLIP(4454, 4965, 6, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P4455: !_REPLACEMENT [15] (Int) (Secondary ctx) (Branch target of P4274)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
ba P4456
nop

TARGET4274:
ba RET4274
nop


P4456: !_LD [30] (Int) (Secondary ctx) (Branch target of P4427)
wr %g0, 0x81, %asi
lduwa [%i2 + 128] %asi, %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2
ba P4457
nop

TARGET4427:
ba RET4427
nop


P4457: !_REPLACEMENT [13] (Int)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

P4458: !_MEMBAR (FP)
membar #StoreLoad

P4459: !_BLD [26] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4459
nop
RET4459:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4460: !_MEMBAR (FP) (Branch target of P4296)
ba P4461
nop

TARGET4296:
ba RET4296
nop


P4461: !_BSTC [1] (maybe <- 0x4280007a) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4462: !_MEMBAR (FP)
membar #StoreLoad

P4463: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11

P4464: !_MEMBAR (FP)

P4465: !_ST [16] (maybe <- 0x300000d) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 16] %asi
add   %l4, 1, %l4

P4466: !_MEMBAR (FP) (Secondary ctx) (Branch target of P4271)
ba P4467
nop

TARGET4271:
ba RET4271
nop


P4467: !_BST [25] (maybe <- 0x4280007f) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4468: !_MEMBAR (FP) (Secondary ctx) (Branch target of P4141)
membar #StoreLoad
ba P4469
nop

TARGET4141:
ba RET4141
nop


P4469: !_REPLACEMENT [19] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P4470: !_LD [25] (FP) (CBR)
ld [%i3 + 96], %f12
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4470
nop
RET4470:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4471: !_IDC_FLIP [14] (Int) (Branch target of P4409)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
IDC_FLIP(4471, 14255, 6, 0x44000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)
ba P4472
nop

TARGET4409:
ba RET4409
nop


P4472: !_MEMBAR (FP) (Branch target of P4247)
membar #StoreLoad
ba P4473
nop

TARGET4247:
ba RET4247
nop


P4473: !_BLD [28] (FP) (Branch target of P4108)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
ba P4474
nop

TARGET4108:
ba RET4108
nop


P4474: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4474
nop
RET4474:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4475: !_BLD [6] (FP) (Branch target of P4269)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P4476
nop

TARGET4269:
ba RET4269
nop


P4476: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4476
nop
RET4476:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4477: !_REPLACEMENT [10] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4477
nop
RET4477:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4478: !_LD [11] (FP) (Secondary ctx) (Branch target of P4437)
wr %g0, 0x81, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lda    [%i2 + 0] %asi, %f0
! 1 addresses covered
ba P4479
nop

TARGET4437:
ba RET4437
nop


P4479: !_LD [29] (FP)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 64], %f1
! 1 addresses covered

P4480: !_LD [20] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 256] %asi, %l6
! move %l6(lower) -> %o2(lower)
or %l6, %o2, %o2

P4481: !_REPLACEMENT [5] (Int) (Secondary ctx) (Branch target of P4190)
wr %g0, 0x81, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
ba P4482
nop

TARGET4190:
ba RET4190
nop


P4482: !_MEMBAR (FP)

P4483: !_BST [17] (maybe <- 0x42800081) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P4484: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4484
nop
RET4484:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4485: !_BLD [24] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f2
fmovd %f40, %f18
fmovs %f18, %f3

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4485
nop
RET4485:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4486: !_MEMBAR (FP)

P4487: !_PREFETCH [13] (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
prefetch [%i2 + 32], 1

P4488: !_MEMBAR (FP)

P4489: !_BST [24] (maybe <- 0x42800082) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4489
nop
RET4489:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4490: !_MEMBAR (FP)
membar #StoreLoad

P4491: !_REPLACEMENT [10] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+64], %l3
st %l3, [%i3+64]
add %i3, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]
add %o5, %l7, %o5
ld [%o5+64], %l3
st %l3, [%o5+64]

P4492: !_MEMBAR (FP)

P4493: !_BST [24] (maybe <- 0x42800084) (FP) (Branch target of P4489)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi
ba P4494
nop

TARGET4489:
ba RET4489
nop


P4494: !_MEMBAR (FP)
membar #StoreLoad

P4495: !_ST [28] (maybe <- 0x300000e) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P4496: !_LD [21] (Int) (LE)
wr %g0, 0x88, %asi
lduwa [%i2 + 0] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P4497: !_LD [5] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i0 + 64] %asi, %f4
! 1 addresses covered

P4498: !_LD [3] (Int)
lduw [%i0 + 16], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

P4499: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4500: !_BLD [11] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovs %f19, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P4501: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4501
nop
RET4501:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4502: !_REPLACEMENT [27] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+160], %l7
st %l7, [%i3+160]
add %i3, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]
add %l6, %l3, %l6
ld [%l6+160], %l7
st %l7, [%l6+160]

P4503: !_LD [16] (Int) (Secondary ctx) (Branch target of P4474)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
lduwa [%i2 + 16] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4
ba P4504
nop

TARGET4474:
ba RET4474
nop


P4504: !_LD [25] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 96], %f8
! 1 addresses covered

P4505: !_REPLACEMENT [6] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+96], %o5
st %o5, [%i2+96]
add %i2, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4505
nop
RET4505:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4506: !_REPLACEMENT [19] (Int)
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4507: !_MEMBAR (FP)
membar #StoreLoad

P4508: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9

P4509: !_MEMBAR (FP)

P4510: !_ST [32] (maybe <- 0x300000f) (Int)
stw   %l4, [%i3 + 256 ]
add   %l4, 1, %l4

P4511: !_REPLACEMENT [16] (Int) (Branch target of P4167)
sethi %hi(0x2000), %o5
ld [%i2+16], %l6
st %l6, [%i2+16]
add %i2, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
ba P4512
nop

TARGET4167:
ba RET4167
nop


P4512: !_MEMBAR (FP) (Secondary ctx)

P4513: !_BST [0] (maybe <- 0x42800086) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4514: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P4292)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4514
nop
RET4514:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4515
nop

TARGET4292:
ba RET4292
nop


P4515: !_REPLACEMENT [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+96], %l3
st %l3, [%i2+96]
add %i2, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P4516: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P4517: !_MEMBAR (FP)

P4518: !_BST [16] (maybe <- 0x4280008b) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4519: !_MEMBAR (FP) (Branch target of P4529)
membar #StoreLoad
ba P4520
nop

TARGET4529:
ba RET4529
nop


P4520: !_BLD [23] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f10
fmovd %f40, %f12

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4520
nop
RET4520:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4521: !_MEMBAR (FP)

P4522: !_BST [15] (maybe <- 0x4280008c) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4523: !_MEMBAR (FP)
membar #StoreLoad

P4524: !_REPLACEMENT [16] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P4525: !_MEMBAR (FP) (Branch target of P4092)
ba P4526
nop

TARGET4092:
ba RET4092
nop


P4526: !_BST [15] (maybe <- 0x4280008d) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4526
nop
RET4526:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4527: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4527
nop
RET4527:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4528: !_LD [17] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ld [%i2 + 96], %f13
! 1 addresses covered

P4529: !_REPLACEMENT [24] (Int) (CBR) (Branch target of P4263)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4529
nop
RET4529:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P4530
nop

TARGET4263:
ba RET4263
nop


P4530: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P4531: !_MEMBAR (FP) (Branch target of P4174)
membar #StoreLoad
ba P4532
nop

TARGET4174:
ba RET4174
nop


P4532: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f14
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f34, %f0
fmovd %f36, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P4533: !_MEMBAR (FP) (Branch target of P4221)
ba P4534
nop

TARGET4221:
ba RET4221
nop


P4534: !_BST [27] (maybe <- 0x4280008e) (FP) (Branch target of P4145)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi
ba P4535
nop

TARGET4145:
ba RET4145
nop


P4535: !_MEMBAR (FP) (Branch target of P4484)
membar #StoreLoad
ba P4536
nop

TARGET4484:
ba RET4484
nop


P4536: !_BLD [16] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f3

P4537: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4537
nop
RET4537:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4538: !_ST [25] (maybe <- 0x3000010) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i3 + 96] %asi
add   %l4, 1, %l4

P4539: !_LD [14] (Int) (Loop exit)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 64], %o5
! move %o5(lower) -> %o4(lower)
or %o5, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
!--
loop_exit_6_1:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_6_1
nop

P4540: !_MEMBAR (Int) (Branch target of P4213)
membar #StoreLoad
ba END_NODES6
nop

TARGET4213:
ba RET4213
nop


END_NODES6: ! Test instruction sequence for CPU 6 ends
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
! move %l6(lower) -> %o0(upper)
sllx %l6, 32, %o0
sethi %hi(0xdead0e0f), %l6
or    %l6, %lo(0xdead0e0f), %l6
stw %l6, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
!-----------------

! register usage:
! %i0 %i1 : base registers for first 2 regions
! %i2 %i3 : cache registers for 8 regions
! %i4 fixed pointer to per-cpu results area
! %l1 moving pointer to per-cpu FP results area
! %o7 moving pointer to per-cpu integer results area
! %i5 pointer to per-cpu private area
! %l0 holds lfsr, used as source of random bits 
! %l2 loop count register
! %f16 running counter for unique fp store values
! %f17 holds increment value for fp counter
! %l4 running counter for unique integer store values (increment value is always 1)
! %l5 move-to register for load values (simulation only)
! %f30 move-to register for FP values (simulation only)
! %i4 holds the instructions count which is used for interrupt ordering
! %i4 holds the thread_id (OBP only) 
! %l5 holds the moving pointer for interrupt bonus data (OBP only). Conflicts with RTL/simulation usage
! %l3 %l6 %l7 %o5 : 4 temporary registers
! %o0 %o1 %o2 %o3 %o4 : 5 integer results buffer registers
! %f0-f15 FP results buffer registers
! %f32-f47 FP block load/store registers

func7:
! instruction sequence begins
save   %sp, -192, %sp

! Force %i0-%i3 to be 64-byte aligned
add %i0, 63, %i0
andn %i0, 63, %i0

add %i1, 63, %i1
andn %i1, 63, %i1

add %i2, 63, %i2
andn %i2, 63, %i2

add %i3, 63, %i3
andn %i3, 63, %i3

add %i4, 63, %i4
andn %i4, 63, %i4

add %i5, 63, %i5
andn %i5, 63, %i5


! Initialize pointer to FP load results area
mov   %i4, %l1

! Initialize pointer to integer load results area
sethi %hi(0x80000), %o7
or    %o7, %lo(0x80000), %o7
add  %o7, %l1, %o7 

! Reinitialize i4 to 0. i4 will be used to keep the count of analyzable node info
mov 0x0, %i4

! Initialize %f0-%f62 to 0xdeadbee0deadbee1
sethi %hi(0xdeadbee0), %l3
or    %l3, %lo(0xdeadbee0), %l3
stw   %l3, [%i5]
sethi %hi(0xdeadbee1), %l3
or    %l3, %lo(0xdeadbee1), %l3
stw   %l3, [%i5+4]
ldd [%i5], %f0
fmovd %f0, %f2
fmovd %f0, %f4
fmovd %f0, %f6
fmovd %f0, %f8
fmovd %f0, %f10
fmovd %f0, %f12
fmovd %f0, %f14
fmovd %f0, %f16
fmovd %f0, %f18
fmovd %f0, %f20
fmovd %f0, %f22
fmovd %f0, %f24
fmovd %f0, %f26
fmovd %f0, %f28
fmovd %f0, %f30
fmovd %f0, %f32
fmovd %f0, %f34
fmovd %f0, %f36
fmovd %f0, %f38
fmovd %f0, %f40
fmovd %f0, %f42
fmovd %f0, %f44
fmovd %f0, %f46
fmovd %f0, %f48
fmovd %f0, %f50
fmovd %f0, %f52
fmovd %f0, %f54
fmovd %f0, %f56
fmovd %f0, %f58
fmovd %f0, %f60
fmovd %f0, %f62

! Signature for extract_loads script to start extracting load values for this stream
sethi %hi(0x07deade1), %l3
or    %l3, %lo(0x07deade1), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize running integer counter in register %l4
sethi %hi(0x3800001), %l4
or    %l4, %lo(0x3800001), %l4

! Initialize running FP counter in register %f16
sethi %hi(0x43000001), %l3
or    %l3, %lo(0x43000001), %l3
stw %l3, [%i5] 
ld [%i5], %f16

! Initialize FP counter increment value in register %f17 (constant)
sethi %hi(0x37800000), %l3
or    %l3, %lo(0x37800000), %l3
stw %l3, [%i5] 
ld [%i5], %f17 

! Initialize LFSR to 0x2263^4
sethi %hi(0x2263), %l0
or    %l0, %lo(0x2263), %l0
mulx  %l0, %l0, %l0
mulx  %l0, %l0, %l0

BEGIN_NODES7: ! Test instruction sequence for ISTREAM 7 begins

P4541: !_REPLACEMENT [19] (Int) (Loop entry)
sethi %hi(0x2), %l2
or %l2, %lo(0x2),  %l2
loop_entry_7_0:
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4542: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4542
nop
RET4542:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4543: !_BST [25] (maybe <- 0x43000001) (FP) (Branch target of P4992)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P4544
nop

TARGET4992:
ba RET4992
nop


P4544: !_MEMBAR (FP) (Branch target of P5036)
ba P4545
nop

TARGET5036:
ba RET5036
nop


P4545: !_BST [16] (maybe <- 0x43000003) (FP) (Secondary ctx) (Branch target of P4621)
wr %g0, 0xf1, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i2 + 0 ] %asi
ba P4546
nop

TARGET4621:
ba RET4621
nop


P4546: !_MEMBAR (FP) (Secondary ctx)

P4547: !_BST [24] (maybe <- 0x43000004) (FP) (Branch target of P4737)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P4548
nop

TARGET4737:
ba RET4737
nop


P4548: !_MEMBAR (FP) (Branch target of P4866)
membar #StoreLoad
ba P4549
nop

TARGET4866:
ba RET4866
nop


P4549: !_LD [8] (Int)
lduw [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4550: !_LD [22] (Int) (CBR)
lduw [%i3 + 4], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4550
nop
RET4550:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4551: !_ST [8] (maybe <- 0x43000006) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P4552: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4552
nop
RET4552:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4553: !_BSTC [27] (maybe <- 0x43000007) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P4554: !_MEMBAR (FP)
membar #StoreLoad

P4555: !_LD [29] (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 64], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P4556: !_REPLACEMENT [8] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4557: !_MEMBAR (FP)
membar #StoreLoad

P4558: !_BLD [2] (FP) (CBR) (Branch target of P4966)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f0
membar #Sync
! 5 addresses covered
fmovs %f4, %f3
fmovd %f8, %f4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4558
nop
RET4558:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4559
nop

TARGET4966:
ba RET4966
nop


P4559: !_MEMBAR (FP)

P4560: !_LD [31] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
lduwa [%i3 + 192] %asi, %l6
! move %l6(lower) -> %o1(lower)
or %l6, %o1, %o1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4560
nop
RET4560:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4561: !_ST [2] (maybe <- 0x3800001) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 8] %asi
add   %l4, 1, %l4

P4562: !_MEMBAR (FP) (Branch target of P4740)
ba P4563
nop

TARGET4740:
ba RET4740
nop


P4563: !_BST [14] (maybe <- 0x43000009) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4564: !_MEMBAR (FP)
membar #StoreLoad

P4565: !_LD [17] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduwa [%i2 + 96] %asi, %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P4566: !_LD [20] (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 256], %f5
! 1 addresses covered

P4567: !_MEMBAR (FP)
membar #StoreLoad

P4568: !_BLD [23] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f6
fmovd %f40, %f8

P4569: !_MEMBAR (FP)

P4570: !_LD [28] (Int) (Branch target of P5027)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduw [%i3 + 0], %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
ba P4571
nop

TARGET5027:
ba RET5027
nop


P4571: !_REPLACEMENT [4] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P4572: !_LD [18] (FP) (Branch target of P4661)
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 128], %f9
! 1 addresses covered
ba P4573
nop

TARGET4661:
ba RET4661
nop


P4573: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]

P4574: !_REPLACEMENT [13] (Int)
sethi %hi(0x2000), %o5
ld [%i2+32], %l6
st %l6, [%i2+32]
add %i2, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P4575: !_MEMBAR (FP)

P4576: !_BSTC [13] (maybe <- 0x4300000a) (FP) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4576
nop
RET4576:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4577: !_MEMBAR (FP) (Branch target of P4703)
membar #StoreLoad
ba P4578
nop

TARGET4703:
ba RET4703
nop


P4578: !_REPLACEMENT [15] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P4579: !_ST [23] (maybe <- 0x4300000d) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 32 ]

P4580: !_REPLACEMENT [22] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+4], %l7
st %l7, [%i3+4]
add %i3, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P4581: !_ST [8] (maybe <- 0x3800002) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i1 + 0] %asi
add   %l4, 1, %l4

P4582: !_ST [16] (maybe <- 0x3800003) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 16] %asi
add   %l4, 1, %l4

P4583: !_MEMBAR (FP) (Branch target of P4946)
membar #StoreLoad
ba P4584
nop

TARGET4946:
ba RET4946
nop


P4584: !_BLD [16] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f10

P4585: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4585
nop
RET4585:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4586: !_REPLACEMENT [19] (Int) (Nucleus ctx) (Branch target of P5032)
wr %g0, 0x4, %asi
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
ba P4587
nop

TARGET5032:
ba RET5032
nop


P4587: !_MEMBAR (FP)
membar #StoreLoad

P4588: !_BLD [6] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

P4589: !_MEMBAR (FP)

P4590: !_BST [28] (maybe <- 0x4300000e) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4591: !_MEMBAR (FP) (Secondary ctx) (Branch target of P4636)
ba P4592
nop

TARGET4636:
ba RET4636
nop


P4592: !_BSTC [18] (maybe <- 0x4300000f) (FP)
wr %g0, 0xe0, %asi
sethi %hi(REGION3_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4593: !_MEMBAR (FP)

P4594: !_BST [9] (maybe <- 0x43000010) (FP) (Branch target of P5006)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P4595
nop

TARGET5006:
ba RET5006
nop


P4595: !_MEMBAR (FP)

P4596: !_BST [25] (maybe <- 0x43000012) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4597: !_MEMBAR (FP)
membar #StoreLoad

P4598: !_BLD [25] (FP) (Branch target of P4630)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14
ba P4599
nop

TARGET4630:
ba RET4630
nop


P4599: !_MEMBAR (FP)

P4600: !_BLD [22] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4600
nop
RET4600:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4601: !_MEMBAR (FP) (CBR) (Branch target of P4611)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4601
nop
RET4601:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P4602
nop

TARGET4611:
ba RET4611
nop


P4602: !_REPLACEMENT [14] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P4603: !_IDC_FLIP [22] (Int)
IDC_FLIP(4603, 6990, 7, 0x45800004, 0x4, %i3, 0x4, %l6, %l7, %o5, %l3)

P4604: !_ST [16] (maybe <- 0x43000014) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 16 ]

P4605: !_MEMBAR (FP)

P4606: !_BST [23] (maybe <- 0x43000015) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4606
nop
RET4606:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4607: !_MEMBAR (FP)
membar #StoreLoad

P4608: !_REPLACEMENT [12] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

P4609: !_ST [23] (maybe <- 0x3800004) (Int)
stw   %l4, [%i2 + 32 ]
add   %l4, 1, %l4

P4610: !_REPLACEMENT [19] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4610
nop
RET4610:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4611: !_REPLACEMENT [14] (Int) (CBR) (Secondary ctx) (Branch target of P4898)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4611
nop
RET4611:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P4612
nop

TARGET4898:
ba RET4898
nop


P4612: !_REPLACEMENT [27] (Int)
sethi %hi(0x2000), %o5
ld [%i3+160], %l6
st %l6, [%i3+160]
add %i3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]

P4613: !_REPLACEMENT [6] (Int)
sethi %hi(0x2000), %l7
ld [%i3+96], %l3
st %l3, [%i3+96]
add %i3, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]
add %o5, %l7, %o5
ld [%o5+96], %l3
st %l3, [%o5+96]

P4614: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4615: !_ST [7] (maybe <- 0x43000018) (FP) (Branch target of P4705)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 128 ]
ba P4616
nop

TARGET4705:
ba RET4705
nop


P4616: !_ST [18] (maybe <- 0x43000019) (FP) (Branch target of P4973)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]
ba P4617
nop

TARGET4973:
ba RET4973
nop


P4617: !_REPLACEMENT [2] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+8], %l3
st %l3, [%i3+8]
add %i3, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]
add %o5, %l7, %o5
ld [%o5+8], %l3
st %l3, [%o5+8]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4617
nop
RET4617:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4618: !_REPLACEMENT [13] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4618
nop
RET4618:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4619: !_REPLACEMENT [0] (Int)
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P4620: !_PREFETCH [7] (Int)
prefetch [%i0 + 128], 1

P4621: !_ST [12] (maybe <- 0x3800005) (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stwa   %l4, [%i3 + 4] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4621
nop
RET4621:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4622: !_MEMBAR (FP)
membar #StoreLoad

P4623: !_BLD [12] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f2
fmovd %f40, %f4

P4624: !_MEMBAR (FP)

P4625: !_BLD [25] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5
fmovd %f40, %f6

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4625
nop
RET4625:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4626: !_MEMBAR (FP) (CBR) (Branch target of P4919)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4626
nop
RET4626:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P4627
nop

TARGET4919:
ba RET4919
nop


P4627: !_LD [15] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i3 + 128] %asi, %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4627
nop
RET4627:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4628: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4628
nop
RET4628:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4629: !_BSTC [17] (maybe <- 0x4300001a) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4630: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4630
nop
RET4630:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4631: !_LD [2] (Int)
lduw [%i0 + 8], %l3
! move %l3(lower) -> %o3(lower)
or %l3, %o3, %o3

P4632: !_REPLACEMENT [30] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4632
nop
RET4632:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4633: !_MEMBAR (FP)
membar #StoreLoad

P4634: !_BLD [33] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7

P4635: !_MEMBAR (FP)

P4636: !_LD [23] (FP) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 32], %f8
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4636
nop
RET4636:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4637: !_ST [2] (maybe <- 0x3800006) (Int) (Branch target of P4769)
stw   %l4, [%i0 + 8 ]
add   %l4, 1, %l4
ba P4638
nop

TARGET4769:
ba RET4769
nop


P4638: !_REPLACEMENT [18] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P4639: !_REPLACEMENT [33] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4640: !_MEMBAR (FP)

P4641: !_BST [32] (maybe <- 0x4300001b) (FP) (Branch target of P4576)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 256 ] %asi
ba P4642
nop

TARGET4576:
ba RET4576
nop


P4642: !_MEMBAR (FP)
membar #StoreLoad

P4643: !_LD [2] (Int) (Branch target of P4673)
lduw [%i0 + 8], %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4
ba P4644
nop

TARGET4673:
ba RET4673
nop


P4644: !_MEMBAR (FP)

P4645: !_BST [29] (maybe <- 0x4300001c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P4646: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4646
nop
RET4646:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4647: !_ST [3] (maybe <- 0x3800007) (Int)
stw   %l4, [%i0 + 16 ]
add   %l4, 1, %l4

P4648: !_MEMBAR (FP)

P4649: !_BST [29] (maybe <- 0x4300001d) (FP) (Branch target of P5021)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 64 ] %asi
ba P4650
nop

TARGET5021:
ba RET5021
nop


P4650: !_MEMBAR (FP)

P4651: !_BST [11] (maybe <- 0x4300001e) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P4652: !_MEMBAR (FP)
membar #StoreLoad

P4653: !_REPLACEMENT [13] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P4654: !_ST [16] (maybe <- 0x43000021) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 16 ]

P4655: !_LD [16] (Int)
lduw [%i3 + 16], %l3
! move %l3(lower) -> %o4(lower)
or %l3, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P4656: !_REPLACEMENT [10] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4657: !_LD [8] (Int)
lduw [%i1 + 0], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4658: !_MEMBAR (FP)
membar #StoreLoad

P4659: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovd %f40, %f10

P4660: !_MEMBAR (FP)

P4661: !_BST [15] (maybe <- 0x43000022) (FP) (CBR) (Branch target of P4920)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4661
nop
RET4661:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4662
nop

TARGET4920:
ba RET4920
nop


P4662: !_MEMBAR (FP)

P4663: !_BST [22] (maybe <- 0x43000023) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4664: !_MEMBAR (FP)

P4665: !_BST [14] (maybe <- 0x43000026) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4666: !_MEMBAR (FP) (Secondary ctx)

P4667: !_BST [24] (maybe <- 0x43000027) (FP) (Branch target of P4752)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi
ba P4668
nop

TARGET4752:
ba RET4752
nop


P4668: !_MEMBAR (FP)
membar #StoreLoad

P4669: !_REPLACEMENT [16] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P4670: !_ST [28] (maybe <- 0x3800008) (Int)
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P4671: !_MEMBAR (FP)

P4672: !_BST [24] (maybe <- 0x43000029) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4672
nop
RET4672:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4673: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4673
nop
RET4673:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4674: !_BLD [26] (FP) (CBR) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4674
nop
RET4674:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4675: !_MEMBAR (FP) (Secondary ctx)

P4676: !_BST [17] (maybe <- 0x4300002b) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4677: !_MEMBAR (FP) (Branch target of P4711)
membar #StoreLoad
ba P4678
nop

TARGET4711:
ba RET4711
nop


P4678: !_REPLACEMENT [26] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+128], %l6
st %l6, [%i2+128]
add %i2, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

P4679: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P4680: !_MEMBAR (FP)
membar #StoreLoad

P4681: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P4682: !_MEMBAR (FP) (Branch target of P4933)
ba P4683
nop

TARGET4933:
ba RET4933
nop


P4683: !_ST [4] (maybe <- 0x3800009) (Int)
stw   %l4, [%i0 + 32 ]
add   %l4, 1, %l4

P4684: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %l3
ld [%i2+0], %l7
st %l7, [%i2+0]
add %i2, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4685: !_MEMBAR (FP)
membar #StoreLoad

P4686: !_BLD [27] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f14
fmovd %f40, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--

P4687: !_MEMBAR (FP)

P4688: !_ST [17] (maybe <- 0x4300002c) (FP) (Branch target of P4764)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 96 ]
ba P4689
nop

TARGET4764:
ba RET4764
nop


P4689: !_ST [8] (maybe <- 0x380000a) (Int) (Branch target of P4991)
stw   %l4, [%i1 + 0 ]
add   %l4, 1, %l4
ba P4690
nop

TARGET4991:
ba RET4991
nop


P4690: !_MEMBAR (FP)

P4691: !_BSTC [2] (maybe <- 0x4300002d) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4691
nop
RET4691:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4692: !_MEMBAR (FP)
membar #StoreLoad

P4693: !_REPLACEMENT [17] (Int) (Branch target of P4897)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
ba P4694
nop

TARGET4897:
ba RET4897
nop


P4694: !_ST [19] (maybe <- 0x43000032) (FP)
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P4695: !_LD [22] (FP) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 4], %f0
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4695
nop
RET4695:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4696: !_LD [7] (Int)
lduw [%i0 + 128], %l6
! move %l6(lower) -> %o0(lower)
or %l6, %o0, %o0

P4697: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4698: !_BLD [26] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P4699: !_MEMBAR (FP) (Secondary ctx)

P4700: !_LD [6] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
lduwa [%i0 + 96] %asi, %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

P4701: !_IDC_FLIP [12] (Int) (CBR)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
IDC_FLIP(4701, 6514, 7, 0x44000004, 0x4, %i2, 0x4, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4701
nop
RET4701:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4702: !_MEMBAR (FP) (Branch target of P4922)
ba P4703
nop

TARGET4922:
ba RET4922
nop


P4703: !_BST [16] (maybe <- 0x43000033) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4703
nop
RET4703:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4704: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4704
nop
RET4704:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4705: !_BST [0] (maybe <- 0x43000034) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4705
nop
RET4705:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4706: !_MEMBAR (FP)
membar #StoreLoad

P4707: !_REPLACEMENT [5] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P4708: !_MEMBAR (FP)

P4709: !_BST [17] (maybe <- 0x43000039) (FP) (Branch target of P4864)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P4710
nop

TARGET4864:
ba RET4864
nop


P4710: !_MEMBAR (FP)
membar #StoreLoad

P4711: !_BLD [31] (FP) (CBR) (Branch target of P4628)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4711
nop
RET4711:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4712
nop

TARGET4628:
ba RET4628
nop


P4712: !_MEMBAR (FP)

P4713: !_BLD [10] (FP)
wr %g0, 0xf0, %asi
ldda [%i1 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P4714: !_MEMBAR (FP) (Branch target of P5014)
ba P4715
nop

TARGET5014:
ba RET5014
nop


P4715: !_LD [28] (Int)
lduw [%i3 + 0], %o5
! move %o5(lower) -> %o1(lower)
or %o5, %o1, %o1

P4716: !_LD [21] (FP) (Branch target of P4847)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ld [%i2 + 0], %f5
! 1 addresses covered
ba P4717
nop

TARGET4847:
ba RET4847
nop


P4717: !_ST [5] (maybe <- 0x4300003a) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 64 ] %asi

P4718: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P4719: !_MEMBAR (FP)

P4720: !_BST [27] (maybe <- 0x4300003b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4721: !_MEMBAR (FP)
membar #StoreLoad

P4722: !_PREFETCH [3] (Int)
prefetch [%i0 + 16], 1

P4723: !_MEMBAR (FP)

P4724: !_BST [1] (maybe <- 0x4300003d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4725: !_MEMBAR (FP) (Branch target of P4748)
membar #StoreLoad
ba P4726
nop

TARGET4748:
ba RET4748
nop


P4726: !_LD [22] (FP)
ld [%i2 + 4], %f6
! 1 addresses covered

P4727: !_MEMBAR (FP)

P4728: !_BST [30] (maybe <- 0x43000042) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION6_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4729: !_MEMBAR (FP)

P4730: !_BST [17] (maybe <- 0x43000043) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4731: !_MEMBAR (FP)

P4732: !_BST [31] (maybe <- 0x43000044) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 192 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4732
nop
RET4732:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4733: !_MEMBAR (FP) (Branch target of P4618)
membar #StoreLoad
ba P4734
nop

TARGET4618:
ba RET4618
nop


P4734: !_ST [1] (maybe <- 0x380000b) (Int)
stw   %l4, [%i0 + 4 ]
add   %l4, 1, %l4

P4735: !_ST [16] (maybe <- 0x43000045) (FP) (Branch target of P4925)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 16 ]
ba P4736
nop

TARGET4925:
ba RET4925
nop


P4736: !_REPLACEMENT [31] (Int) (CBR) (Secondary ctx) (Branch target of P4787)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+192], %o5
st %o5, [%i3+192]
add %i3, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4736
nop
RET4736:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4737
nop

TARGET4787:
ba RET4787
nop


P4737: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4737
nop
RET4737:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4738: !_BLD [33] (FP) (Branch target of P4995)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
ba P4739
nop

TARGET4995:
ba RET4995
nop


P4739: !_MEMBAR (FP)

P4740: !_REPLACEMENT [7] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4740
nop
RET4740:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4741: !_ST [1] (maybe <- 0x43000046) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i0 + 4 ] %asi

P4742: !_ST [31] (maybe <- 0x43000047) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i3 + 192 ] %asi

P4743: !_REPLACEMENT [32] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+256], %l7
st %l7, [%i2+256]
add %i2, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]
add %l6, %l3, %l6
ld [%l6+256], %l7
st %l7, [%l6+256]

P4744: !_MEMBAR (FP)

P4745: !_BST [27] (maybe <- 0x43000048) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4745
nop
RET4745:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4746: !_MEMBAR (FP)
membar #StoreLoad

P4747: !_BLD [21] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f8
fmovd %f40, %f10

P4748: !_MEMBAR (FP) (CBR) (Secondary ctx) (Branch target of P4606)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4748
nop
RET4748:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4749
nop

TARGET4606:
ba RET4606
nop


P4749: !_LD [21] (FP)
ld [%i3 + 0], %f11
! 1 addresses covered

P4750: !_ST [14] (maybe <- 0x380000c) (Int)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 64 ]
add   %l4, 1, %l4

P4751: !_REPLACEMENT [32] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+256], %l6
st %l6, [%i3+256]
add %i3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]
add %l3, %o5, %l3
ld [%l3+256], %l6
st %l6, [%l3+256]

P4752: !_REPLACEMENT [15] (Int) (CBR) (Branch target of P4822)
sethi %hi(0x2000), %l7
ld [%i3+128], %l3
st %l3, [%i3+128]
add %i3, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4752
nop
RET4752:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4753
nop

TARGET4822:
ba RET4822
nop


P4753: !_ST [10] (maybe <- 0x380000d) (Int)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4

P4754: !_MEMBAR (FP) (Branch target of P4786)
membar #StoreLoad
ba P4755
nop

TARGET4786:
ba RET4786
nop


P4755: !_BLD [32] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f12

P4756: !_MEMBAR (FP)

P4757: !_LD [3] (FP)
ld [%i0 + 16], %f13
! 1 addresses covered

P4758: !_MEMBAR (FP)
membar #StoreLoad

P4759: !_BLD [14] (FP) (CBR) (Branch target of P4560)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4759
nop
RET4759:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4760
nop

TARGET4560:
ba RET4560
nop


P4760: !_MEMBAR (FP)

P4761: !_ST [18] (maybe <- 0x380000e) (Int)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

P4762: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4763: !_BLD [13] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P4764: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4764
nop
RET4764:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4765: !_REPLACEMENT [8] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+0], %l3
st %l3, [%i3+0]
add %i3, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P4766: !_REPLACEMENT [33] (Int)
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4767: !_MEMBAR (FP) (Branch target of P4775)
ba P4768
nop

TARGET4775:
ba RET4775
nop


P4768: !_BST [17] (maybe <- 0x4300004a) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f40 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 64 ] %asi

P4769: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4769
nop
RET4769:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4770: !_ST [25] (maybe <- 0x380000f) (Int) (CBR)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4770
nop
RET4770:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4771: !_ST [31] (maybe <- 0x4300004b) (FP) (CBR) (Branch target of P4736)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 192 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4771
nop
RET4771:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4772
nop

TARGET4736:
ba RET4736
nop


P4772: !_MEMBAR (FP) (Branch target of P4610)
ba P4773
nop

TARGET4610:
ba RET4610
nop


P4773: !_BST [30] (maybe <- 0x4300004c) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P4774: !_MEMBAR (FP)
membar #StoreLoad

P4775: !_BLD [31] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4775
nop
RET4775:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4776: !_MEMBAR (FP) (Branch target of P4874)
ba P4777
nop

TARGET4874:
ba RET4874
nop


P4777: !_BST [29] (maybe <- 0x4300004d) (FP) (Secondary ctx) (Branch target of P4600)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi
ba P4778
nop

TARGET4600:
ba RET4600
nop


P4778: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4779: !_REPLACEMENT [5] (Int) (Branch target of P5015)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+64], %l6
st %l6, [%i2+64]
add %i2, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
ba P4780
nop

TARGET5015:
ba RET5015
nop


P4780: !_REPLACEMENT [30] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P4781: !_REPLACEMENT [5] (Int)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4782: !_REPLACEMENT [6] (Int) (Branch target of P5012)
sethi %hi(0x2000), %l3
ld [%i2+96], %l7
st %l7, [%i2+96]
add %i2, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
add %l6, %l3, %l6
ld [%l6+96], %l7
st %l7, [%l6+96]
ba P4783
nop

TARGET5012:
ba RET5012
nop


P4783: !_REPLACEMENT [21] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

P4784: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4784
nop
RET4784:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4785: !_BSTC [8] (maybe <- 0x4300004e) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4785
nop
RET4785:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4786: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4786
nop
RET4786:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4787: !_BST [15] (maybe <- 0x43000050) (FP) (CBR) (Branch target of P4843)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4787
nop
RET4787:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4788
nop

TARGET4843:
ba RET4843
nop


P4788: !_MEMBAR (FP)
membar #StoreLoad

P4789: !_BLD [2] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3
fmovs %f19, %f4
fmovd %f34, %f18
fmovs %f18, %f5
fmovd %f36, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P4790: !_MEMBAR (FP) (Secondary ctx)

P4791: !_LD [22] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 4], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P4792: !_LD [9] (Int) (CBR)
lduw [%i1 + 32], %o5
! move %o5(lower) -> %o2(lower)
or %o5, %o2, %o2

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4792
nop
RET4792:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4793: !_MEMBAR (FP)
membar #StoreLoad

P4794: !_BLD [26] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f8
fmovd %f40, %f18
fmovs %f18, %f9

P4795: !_MEMBAR (FP) (Branch target of P4672)
ba P4796
nop

TARGET4672:
ba RET4672
nop


P4796: !_REPLACEMENT [32] (Int) (Branch target of P4892)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
ba P4797
nop

TARGET4892:
ba RET4892
nop


P4797: !_MEMBAR (FP)
membar #StoreLoad

P4798: !_BLD [17] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f40, %f10

P4799: !_MEMBAR (FP)

P4800: !_REPLACEMENT [14] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4800
nop
RET4800:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4801: !_MEMBAR (FP)

P4802: !_BST [1] (maybe <- 0x43000051) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4803: !_MEMBAR (FP) (Branch target of P4998)
membar #StoreLoad
ba P4804
nop

TARGET4998:
ba RET4998
nop


P4804: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4805: !_MEMBAR (FP)

P4806: !_BST [14] (maybe <- 0x43000056) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4807: !_MEMBAR (FP)
membar #StoreLoad

P4808: !_LD [0] (FP)
ld [%i0 + 0], %f11
! 1 addresses covered

P4809: !_REPLACEMENT [11] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P4810: !_REPLACEMENT [9] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+32], %o5
st %o5, [%i2+32]
add %i2, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

P4811: !_REPLACEMENT [22] (Int)
sethi %hi(0x2000), %l3
ld [%i2+4], %l7
st %l7, [%i2+4]
add %i2, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]
add %l6, %l3, %l6
ld [%l6+4], %l7
st %l7, [%l6+4]

P4812: !_REPLACEMENT [27] (Int)
sethi %hi(0x2000), %o5
ld [%i2+160], %l6
st %l6, [%i2+160]
add %i2, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]
add %l3, %o5, %l3
ld [%l3+160], %l6
st %l6, [%l3+160]

P4813: !_MEMBAR (FP)

P4814: !_BST [18] (maybe <- 0x43000057) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P4815: !_MEMBAR (FP) (Branch target of P4784)
membar #StoreLoad
ba P4816
nop

TARGET4784:
ba RET4784
nop


P4816: !_REPLACEMENT [24] (Int) (Branch target of P4550)
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
ba P4817
nop

TARGET4550:
ba RET4550
nop


P4817: !_IDC_FLIP [9] (Int) (CBR)
IDC_FLIP(4817, 2522, 7, 0x43800020, 0x20, %i1, 0x20, %l6, %l7, %o5, %l3)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4817
nop
RET4817:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4818: !_REPLACEMENT [16] (Int) (Branch target of P4732)
sethi %hi(0x2000), %l7
ld [%i2+16], %l3
st %l3, [%i2+16]
add %i2, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
add %o5, %l7, %o5
ld [%o5+16], %l3
st %l3, [%o5+16]
ba P4819
nop

TARGET4732:
ba RET4732
nop


P4819: !_REPLACEMENT [24] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i2+64], %o5
st %o5, [%i2+64]
add %i2, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4819
nop
RET4819:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4820: !_MEMBAR (FP)
membar #StoreLoad

P4821: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f12
fmovd %f34, %f14
fmovd %f36, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovd %f40, %f0

P4822: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4822
nop
RET4822:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4823: !_REPLACEMENT [21] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P4824: !_REPLACEMENT [16] (Int) (Branch target of P5062)
sethi %hi(0x2000), %l6
ld [%i2+16], %o5
st %o5, [%i2+16]
add %i2, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
add %l7, %l6, %l7
ld [%l7+16], %o5
st %o5, [%l7+16]
ba P4825
nop

TARGET5062:
ba RET5062
nop


P4825: !_MEMBAR (FP)
membar #StoreLoad

P4826: !_BLD [0] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovs %f19, %f2
fmovd %f34, %f18
fmovs %f18, %f3
fmovd %f36, %f4
fmovd %f40, %f18
fmovs %f18, %f5

P4827: !_MEMBAR (FP)

P4828: !_ST [25] (maybe <- 0x43000058) (FP) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 96 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4828
nop
RET4828:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4829: !_REPLACEMENT [18] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P4830: !_ST [30] (maybe <- 0x43000059) (FP) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 128 ] %asi

P4831: !_MEMBAR (FP) (Branch target of P4552)
membar #StoreLoad
ba P4832
nop

TARGET4552:
ba RET4552
nop


P4832: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f6

P4833: !_MEMBAR (FP)

P4834: !_LD [17] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
lda    [%i3 + 96] %asi, %f7
! 1 addresses covered

P4835: !_ST [26] (maybe <- 0x4300005a) (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 128 ]

P4836: !_ST [33] (maybe <- 0x3800010) (Int) (Branch target of P4625)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4
ba P4837
nop

TARGET4625:
ba RET4625
nop


P4837: !_REPLACEMENT [18] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P4838: !_REPLACEMENT [21] (Int) (CBR)
sethi %hi(0x2000), %o5
ld [%i2+0], %l6
st %l6, [%i2+0]
add %i2, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4838
nop
RET4838:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4839: !_LD [11] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lda    [%i3 + 0] %asi, %f8
! 1 addresses covered

P4840: !_IDC_FLIP [14] (Int)
IDC_FLIP(4840, 22577, 7, 0x44000040, 0x40, %i3, 0x40, %l6, %l7, %o5, %l3)

P4841: !_MEMBAR (FP) (Secondary ctx)

P4842: !_BST [8] (maybe <- 0x4300005b) (FP) (Secondary ctx) (Branch target of P4674)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi
ba P4843
nop

TARGET4674:
ba RET4674
nop


P4843: !_MEMBAR (FP) (CBR) (Secondary ctx)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4843
nop
RET4843:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4844: !_BLD [23] (FP) (Branch target of P5069)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9
fmovs %f19, %f10
fmovd %f40, %f18
fmovs %f18, %f11
ba P4845
nop

TARGET5069:
ba RET5069
nop


P4845: !_MEMBAR (FP)

P4846: !_REPLACEMENT [28] (Int) (CBR)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4846
nop
RET4846:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4847: !_REPLACEMENT [12] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4847
nop
RET4847:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4848: !_LD [6] (Int)
lduw [%i0 + 96], %o3
! move %o3(lower) -> %o3(upper)
sllx %o3, 32, %o3

P4849: !_REPLACEMENT [16] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+16], %l6
st %l6, [%i3+16]
add %i3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]
add %l3, %o5, %l3
ld [%l3+16], %l6
st %l6, [%l3+16]

P4850: !_LD [9] (FP) (Branch target of P4873)
ld [%i1 + 32], %f12
! 1 addresses covered
ba P4851
nop

TARGET4873:
ba RET4873
nop


P4851: !_MEMBAR (FP)

P4852: !_BST [15] (maybe <- 0x4300005d) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4853: !_MEMBAR (FP)
membar #StoreLoad

P4854: !_BLD [5] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13
fmovd %f40, %f14

P4855: !_MEMBAR (FP)

P4856: !_LD [2] (FP) (Branch target of P4646)
ld [%i0 + 8], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P4857
nop

TARGET4646:
ba RET4646
nop


P4857: !_REPLACEMENT [14] (Int)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

P4858: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4858
nop
RET4858:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4859: !_BST [13] (maybe <- 0x4300005e) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4860: !_MEMBAR (FP)
membar #StoreLoad

P4861: !_BLD [5] (FP) (Branch target of P4999)
wr %g0, 0xf0, %asi
ldda [%i0 + 64] %asi, %f0
membar #Sync
! 2 addresses covered
fmovs %f8, %f1
ba P4862
nop

TARGET4999:
ba RET4999
nop


P4862: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4862
nop
RET4862:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4863: !_LD [9] (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
lda    [%i1 + 32] %asi, %f2
! 1 addresses covered

P4864: !_REPLACEMENT [22] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4864
nop
RET4864:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4865: !_LD [0] (FP)
ld [%i0 + 0], %f3
! 1 addresses covered

P4866: !_REPLACEMENT [9] (Int) (CBR)
sethi %hi(0x2000), %l7
ld [%i3+32], %l3
st %l3, [%i3+32]
add %i3, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]
add %o5, %l7, %o5
ld [%o5+32], %l3
st %l3, [%o5+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4866
nop
RET4866:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4867: !_REPLACEMENT [22] (Int) (CBR) (Secondary ctx) (Branch target of P4987)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l7
ld [%i3+4], %l3
st %l3, [%i3+4]
add %i3, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]
add %o5, %l7, %o5
ld [%o5+4], %l3
st %l3, [%o5+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4867
nop
RET4867:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4868
nop

TARGET4987:
ba RET4987
nop


P4868: !_MEMBAR (FP)

P4869: !_BST [26] (maybe <- 0x43000061) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 128 ] %asi

P4870: !_MEMBAR (FP)

P4871: !_BST [12] (maybe <- 0x43000063) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4872: !_MEMBAR (FP)
membar #StoreLoad

P4873: !_LD [5] (FP) (CBR) (Branch target of P4914)
ld [%i0 + 64], %f4
! 1 addresses covered

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4873
nop
RET4873:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4874
nop

TARGET4914:
ba RET4914
nop


P4874: !_REPLACEMENT [8] (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+0], %o5
st %o5, [%i2+0]
add %i2, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4874
nop
RET4874:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4875: !_ST [5] (maybe <- 0x3800011) (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i0 + 64] %asi
add   %l4, 1, %l4

P4876: !_ST [7] (maybe <- 0x3800012) (Int) (CBR)
stw   %l4, [%i0 + 128 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4876
nop
RET4876:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4877: !_REPLACEMENT [26] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i2+128], %l7
st %l7, [%i2+128]
add %i2, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

P4878: !_LD [16] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 16], %f5
! 1 addresses covered

P4879: !_ST [25] (maybe <- 0x43000066) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 96 ] %asi

P4880: !_MEMBAR (FP)
membar #StoreLoad

P4881: !_BLD [13] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f6
fmovd %f40, %f8

P4882: !_MEMBAR (FP) (Branch target of P4867)
ba P4883
nop

TARGET4867:
ba RET4867
nop


P4883: !_REPLACEMENT [7] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P4884: !_IDC_FLIP [8] (Int)
IDC_FLIP(4884, 25888, 7, 0x43800000, 0x0, %i1, 0x0, %l6, %l7, %o5, %l3)

P4885: !_LD [3] (FP)
ld [%i0 + 16], %f9
! 1 addresses covered

P4886: !_REPLACEMENT [15] (Int)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P4887: !_MEMBAR (FP) (Branch target of P4846)
membar #StoreLoad
ba P4888
nop

TARGET4846:
ba RET4846
nop


P4888: !_BLD [22] (FP) (Branch target of P4990)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f10
fmovd %f40, %f12
ba P4889
nop

TARGET4990:
ba RET4990
nop


P4889: !_MEMBAR (FP) (Branch target of P4601)
ba P4890
nop

TARGET4601:
ba RET4601
nop


P4890: !_REPLACEMENT [16] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %l3
ld [%i2+16], %l7
st %l7, [%i2+16]
add %i2, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]
add %l6, %l3, %l6
ld [%l6+16], %l7
st %l7, [%l6+16]

P4891: !_MEMBAR (FP)

P4892: !_BSTC [33] (maybe <- 0x43000067) (FP) (CBR)
wr %g0, 0xe0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i2 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4892
nop
RET4892:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4893: !_MEMBAR (FP)
membar #StoreLoad

P4894: !_BLD [31] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 192] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f13

P4895: !_MEMBAR (FP) (Branch target of P4932)
ba P4896
nop

TARGET4932:
ba RET4932
nop


P4896: !_BLD [32] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P4897: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4897
nop
RET4897:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4898: !_BSTC [4] (maybe <- 0x43000068) (FP) (CBR)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4898
nop
RET4898:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4899: !_MEMBAR (FP)
membar #StoreLoad

P4900: !_BLD [23] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f40, %f18
fmovs %f18, %f1

P4901: !_MEMBAR (FP)

P4902: !_ST [26] (maybe <- 0x3800013) (Int) (CBR) (Nucleus ctx)
wr %g0, 0x4, %asi
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4902
nop
RET4902:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4903: !_MEMBAR (FP)

P4904: !_BST [9] (maybe <- 0x4300006d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P4905: !_MEMBAR (FP) (Branch target of P4819)
membar #StoreLoad
ba P4906
nop

TARGET4819:
ba RET4819
nop


P4906: !_BLD [19] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f2

P4907: !_MEMBAR (FP) (Secondary ctx)

P4908: !_BST [3] (maybe <- 0x4300006f) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4909: !_MEMBAR (FP)
membar #StoreLoad

P4910: !_REPLACEMENT [28] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+0], %l3
st %l3, [%i2+0]
add %i2, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]
add %o5, %l7, %o5
ld [%o5+0], %l3
st %l3, [%o5+0]

P4911: !_MEMBAR (FP) (Secondary ctx)

P4912: !_BST [5] (maybe <- 0x43000074) (FP) (Secondary ctx) (Branch target of P4957)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi
ba P4913
nop

TARGET4957:
ba RET4957
nop


P4913: !_MEMBAR (FP) (Secondary ctx)

P4914: !_BST [16] (maybe <- 0x43000076) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4914
nop
RET4914:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4915: !_MEMBAR (FP) (Branch target of P4785)
membar #StoreLoad
ba P4916
nop

TARGET4785:
ba RET4785
nop


P4916: !_ST [8] (maybe <- 0x3800014) (Int) (CBR)
stw   %l4, [%i1 + 0 ]
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4916
nop
RET4916:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4917: !_MEMBAR (FP)
membar #StoreLoad

P4918: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f3

P4919: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4919
nop
RET4919:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4920: !_REPLACEMENT [19] (Int) (CBR) (Nucleus ctx) (Branch target of P4838)
wr %g0, 0x4, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4920
nop
RET4920:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0

ba P4921
nop

TARGET4838:
ba RET4838
nop


P4921: !_LD [27] (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
lduw [%i2 + 160], %l7
! move %l7(lower) -> %o3(lower)
or %l7, %o3, %o3

P4922: !_LD [29] (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
lduwa [%i3 + 64] %asi, %o4
! move %o4(lower) -> %o4(upper)
sllx %o4, 32, %o4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4922
nop
RET4922:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4923: !_ST [4] (maybe <- 0x43000077) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 32 ]

P4924: !_REPLACEMENT [15] (Int)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l7
ld [%i2+128], %l3
st %l3, [%i2+128]
add %i2, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]
add %o5, %l7, %o5
ld [%o5+128], %l3
st %l3, [%o5+128]

P4925: !_ST [5] (maybe <- 0x43000078) (FP) (CBR)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 64 ]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4925
nop
RET4925:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4926: !_MEMBAR (FP)
membar #StoreLoad

P4927: !_BLD [9] (FP) (CBR) (Branch target of P4800)
wr %g0, 0xf0, %asi
ldda [%i1 + 0] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f4
fmovd %f40, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4927
nop
RET4927:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P4928
nop

TARGET4800:
ba RET4800
nop


P4928: !_MEMBAR (FP) (Branch target of P4902)
ba P4929
nop

TARGET4902:
ba RET4902
nop


P4929: !_LD [13] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
lduwa [%i3 + 32] %asi, %o5
! move %o5(lower) -> %o4(lower)
or %o5, %o4, %o4
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
mov %o3, %l5
mov %o4, %l5

P4930: !_MEMBAR (FP) (Branch target of P4632)
ba P4931
nop

TARGET4632:
ba RET4632
nop


P4931: !_BST [10] (maybe <- 0x43000079) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P4932: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4932
nop
RET4932:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4933: !_ST [31] (maybe <- 0x3800015) (Int) (CBR) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
stwa   %l4, [%i2 + 192] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4933
nop
RET4933:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4934: !_MEMBAR (FP)

P4935: !_BSTC [10] (maybe <- 0x4300007a) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi

P4936: !_MEMBAR (FP)
membar #StoreLoad

P4937: !_ST [21] (maybe <- 0x3800016) (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
stw   %l4, [%i3 + 0 ]
add   %l4, 1, %l4

P4938: !_MEMBAR (FP)

P4939: !_BST [25] (maybe <- 0x4300007b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 64 ] %asi

P4940: !_MEMBAR (FP)
membar #StoreLoad

P4941: !_REPLACEMENT [2] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+8], %o5
st %o5, [%i2+8]
add %i2, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]
add %l7, %l6, %l7
ld [%l7+8], %o5
st %o5, [%l7+8]

P4942: !_MEMBAR (FP)
membar #StoreLoad

P4943: !_BLD [25] (FP)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f6
fmovd %f40, %f18
fmovs %f18, %f7

P4944: !_MEMBAR (FP) (Branch target of P5066)
ba P4945
nop

TARGET5066:
ba RET5066
nop


P4945: !_LD [33] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 0], %f8
! 1 addresses covered

P4946: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4946
nop
RET4946:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4947: !_BSTC [3] (maybe <- 0x4300007d) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P4948: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4949: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f9

P4950: !_MEMBAR (FP)

P4951: !_REPLACEMENT [10] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l3
ld [%i3+64], %l7
st %l7, [%i3+64]
add %i3, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]
add %l6, %l3, %l6
ld [%l6+64], %l7
st %l7, [%l6+64]

P4952: !_IDC_FLIP [31] (Int)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
IDC_FLIP(4952, 4911, 7, 0x460000c0, 0xc0, %i2, 0xc0, %l6, %l7, %o5, %l3)

P4953: !_MEMBAR (FP)
membar #StoreLoad

P4954: !_BLD [11] (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 3 addresses covered
fmovd %f32, %f10
fmovd %f40, %f12

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4954
nop
RET4954:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4955: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4955
nop
RET4955:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P4956: !_IDC_FLIP [0] (Int)
IDC_FLIP(4956, 16643, 7, 0x43000000, 0x0, %i0, 0x0, %l6, %l7, %o5, %l3)

P4957: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4957
nop
RET4957:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4958: !_BLD [16] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i2
sub %i0, %i2, %i2
ldda [%i2 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f36, %f18
fmovs %f18, %f13

P4959: !_MEMBAR (FP)

P4960: !_BLD [28] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
ldda [%i3 + 0] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P4961: !_MEMBAR (FP)

P4962: !_BST [27] (maybe <- 0x43000082) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 128 ] %asi

P4963: !_MEMBAR (FP)
membar #StoreLoad

P4964: !_LD [24] (FP) (Branch target of P5070)
ld [%i2 + 64], %f15
! 1 addresses covered
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
ba P4965
nop

TARGET5070:
ba RET5070
nop


P4965: !_REPLACEMENT [4] (Int) (Branch target of P4858)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
ba P4966
nop

TARGET4858:
ba RET4858
nop


P4966: !_REPLACEMENT [30] (Int) (CBR)
sethi %hi(0x2000), %l3
ld [%i3+128], %l7
st %l7, [%i3+128]
add %i3, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]
add %l6, %l3, %l6
ld [%l6+128], %l7
st %l7, [%l6+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4966
nop
RET4966:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P4967: !_MEMBAR (FP) (Branch target of P4617)
ba P4968
nop

TARGET4617:
ba RET4617
nop


P4968: !_BSTC [5] (maybe <- 0x43000084) (FP)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 64 ] %asi

P4969: !_MEMBAR (FP)
membar #StoreLoad

P4970: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f0
membar #Sync
! 1 addresses covered

P4971: !_MEMBAR (FP) (CBR) (Branch target of P4971)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4971
nop
RET4971:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0

ba P4972
nop

TARGET4971:
ba RET4971
nop


P4972: !_BLD [26] (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ldda [%i3 + 128] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f1
fmovd %f40, %f2

P4973: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4973
nop
RET4973:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4974: !_REPLACEMENT [31] (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i2
sub %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+192], %o5
st %o5, [%i2+192]
add %i2, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]

P4975: !_LD [14] (FP)
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 64], %f3
! 1 addresses covered

P4976: !_ST [28] (maybe <- 0x43000086) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 0 ]

P4977: !_REPLACEMENT [1] (Int) (Branch target of P4770)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+4], %l6
st %l6, [%i3+4]
add %i3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
add %l3, %o5, %l3
ld [%l3+4], %l6
st %l6, [%l3+4]
ba P4978
nop

TARGET4770:
ba RET4770
nop


P4978: !_LD [7] (Int)
lduw [%i0 + 128], %o0
! move %o0(lower) -> %o0(upper)
sllx %o0, 32, %o0

P4979: !_REPLACEMENT [33] (Int) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]

P4980: !_MEMBAR (FP)

P4981: !_BST [10] (maybe <- 0x43000087) (FP) (Branch target of P5037)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i1 + 64 ] %asi
ba P4982
nop

TARGET5037:
ba RET5037
nop


P4982: !_MEMBAR (FP)
membar #StoreLoad

P4983: !_ST [32] (maybe <- 0x3800017) (Int) (Branch target of P4817)
stw   %l4, [%i2 + 256 ]
add   %l4, 1, %l4
ba P4984
nop

TARGET4817:
ba RET4817
nop


P4984: !_REPLACEMENT [11] (Int)
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

P4985: !_LD [4] (FP) (Secondary ctx) (Branch target of P5028)
wr %g0, 0x81, %asi
lda    [%i0 + 32] %asi, %f4
! 1 addresses covered
ba P4986
nop

TARGET5028:
ba RET5028
nop


P4986: !_REPLACEMENT [11] (Int) (Branch target of P4954)
sethi %hi(0x2000), %l3
ld [%i3+0], %l7
st %l7, [%i3+0]
add %i3, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
add %l6, %l3, %l6
ld [%l6+0], %l7
st %l7, [%l6+0]
ba P4987
nop

TARGET4954:
ba RET4954
nop


P4987: !_REPLACEMENT [26] (Int) (CBR) (Secondary ctx) (Branch target of P4792)
wr %g0, 0x81, %asi
sethi %hi(0x2000), %o5
ld [%i3+128], %l6
st %l6, [%i3+128]
add %i3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]
add %l3, %o5, %l3
ld [%l3+128], %l6
st %l6, [%l3+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4987
nop
RET4987:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P4988
nop

TARGET4792:
ba RET4792
nop


P4988: !_ST [8] (maybe <- 0x43000088) (FP)
!-- Aliased access: Adjusting base register for region 1 (%i1) to use alias #1
!Logical addr: 8 

sethi %hi(0x20000), %o5
sub   %i1, %o5, %i1
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i1 + 0 ]

P4989: !_LD [32] (Int) (Branch target of P5073)
lduw [%i2 + 256], %l3
! move %l3(lower) -> %o0(lower)
or %l3, %o0, %o0
ba P4990
nop

TARGET5073:
ba RET5073
nop


P4990: !_REPLACEMENT [24] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4990
nop
RET4990:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4991: !_REPLACEMENT [29] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+64], %o5
st %o5, [%i3+64]
add %i3, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]
add %l7, %l6, %l7
ld [%l7+64], %o5
st %o5, [%l7+64]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4991
nop
RET4991:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4992: !_MEMBAR (FP) (CBR) (Secondary ctx)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4992
nop
RET4992:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4993: !_BSTC [11] (maybe <- 0x43000089) (FP) (Secondary ctx)
wr %g0, 0xe1, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P4994: !_MEMBAR (FP) (Secondary ctx)
membar #StoreLoad

P4995: !_BLD [15] (FP) (CBR)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4995
nop
RET4995:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0


P4996: !_MEMBAR (FP) (Branch target of P4862)
ba P4997
nop

TARGET4862:
ba RET4862
nop


P4997: !_ST [14] (maybe <- 0x3800018) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
stwa   %l4, [%i2 + 64] %asi
add   %l4, 1, %l4

P4998: !_REPLACEMENT [22] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+4], %o5
st %o5, [%i3+4]
add %i3, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]
add %l7, %l6, %l7
ld [%l7+4], %o5
st %o5, [%l7+4]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET4998
nop
RET4998:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P4999: !_REPLACEMENT [11] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+0], %o5
st %o5, [%i3+0]
add %i3, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]
add %l7, %l6, %l7
ld [%l7+0], %o5
st %o5, [%l7+0]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET4999
nop
RET4999:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5000: !_MEMBAR (FP) (Secondary ctx)

P5001: !_BST [12] (maybe <- 0x4300008c) (FP) (Secondary ctx)
wr %g0, 0xf1, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i2 + 0 ] %asi

P5002: !_MEMBAR (FP) (Secondary ctx)

P5003: !_BSTC [1] (maybe <- 0x4300008f) (FP) (Branch target of P4585)
wr %g0, 0xe0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi
ba P5004
nop

TARGET4585:
ba RET4585
nop


P5004: !_MEMBAR (FP) (Branch target of P4701)
membar #StoreLoad
ba P5005
nop

TARGET4701:
ba RET4701
nop


P5005: !_REPLACEMENT [13] (Int)
sethi %hi(0x2000), %o5
ld [%i3+32], %l6
st %l6, [%i3+32]
add %i3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]
add %l3, %o5, %l3
ld [%l3+32], %l6
st %l6, [%l3+32]

P5006: !_REPLACEMENT [20] (Int) (CBR) (Branch target of P4627)
sethi %hi(0x2000), %l7
ld [%i3+256], %l3
st %l3, [%i3+256]
add %i3, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]
add %o5, %l7, %o5
ld [%o5+256], %l3
st %l3, [%o5+256]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5006
nop
RET5006:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P5007
nop

TARGET4627:
ba RET4627
nop


P5007: !_MEMBAR (FP) (Branch target of P4558)
ba P5008
nop

TARGET4558:
ba RET4558
nop


P5008: !_BST [8] (maybe <- 0x43000094) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

P5009: !_MEMBAR (FP)
membar #StoreLoad

P5010: !_REPLACEMENT [18] (Int)
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P5011: !_ST [29] (maybe <- 0x3800019) (Int) (Branch target of P4695)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
stw   %l4, [%i3 + 64 ]
add   %l4, 1, %l4
ba P5012
nop

TARGET4695:
ba RET4695
nop


P5012: !_REPLACEMENT [31] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %o5
ld [%i2+192], %l6
st %l6, [%i2+192]
add %i2, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]
add %l3, %o5, %l3
ld [%l3+192], %l6
st %l6, [%l3+192]

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5012
nop
RET5012:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5013: !_REPLACEMENT [17] (Int) (Branch target of P4876)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
ba P5014
nop

TARGET4876:
ba RET4876
nop


P5014: !_LD [2] (Int) (CBR)
lduw [%i0 + 8], %o1
! move %o1(lower) -> %o1(upper)
sllx %o1, 32, %o1

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5014
nop
RET5014:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5015: !_REPLACEMENT [26] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5015
nop
RET5015:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5016: !_LD [16] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 16], %f6
! 1 addresses covered

P5017: !_MEMBAR (FP)
membar #StoreLoad

P5018: !_BLD [24] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f7
fmovd %f40, %f8

P5019: !_MEMBAR (FP) (Branch target of P4691)
ba P5020
nop

TARGET4691:
ba RET4691
nop


P5020: !_IDC_FLIP [7] (Int)
IDC_FLIP(5020, 24869, 7, 0x43000080, 0x80, %i0, 0x80, %l6, %l7, %o5, %l3)

P5021: !_ST [33] (maybe <- 0x43000096) (FP) (CBR)
sethi %hi(REGION0_ALIAS0_O-REGION7_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 0 ]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5021
nop
RET5021:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5022: !_REPLACEMENT [15] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
sethi %hi(0x2000), %l6
ld [%i2+128], %o5
st %o5, [%i2+128]
add %i2, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

P5023: !_ST [7] (maybe <- 0x43000097) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 128 ]

P5024: !_LD [23] (FP)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
ld [%i3 + 32], %f9
! 1 addresses covered

P5025: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %o5
ld [%i2+96], %l6
st %l6, [%i2+96]
add %i2, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]
add %l3, %o5, %l3
ld [%l3+96], %l6
st %l6, [%l3+96]

P5026: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5026
nop
RET5026:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5027: !_BST [23] (maybe <- 0x43000098) (FP) (CBR) (Branch target of P4828)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5027
nop
RET5027:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0

ba P5028
nop

TARGET4828:
ba RET4828
nop


P5028: !_MEMBAR (FP) (CBR)
membar #StoreLoad

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5028
nop
RET5028:

! lfsr step begin
srlx %l0, 1, %o5
xnor %o5, %l0, %o5
sllx %o5, 63, %o5
or  %o5, %l0, %l0
srlx %l0, 1, %l0


P5029: !_BLD [14] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 64] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f10

P5030: !_MEMBAR (FP)

P5031: !_BLD [24] (FP) (Branch target of P5026)
wr %g0, 0xf0, %asi
ldda [%i3 + 64] %asi, %f32
membar #Sync
! 2 addresses covered
fmovd %f32, %f18
fmovs %f18, %f11
fmovd %f40, %f12
ba P5032
nop

TARGET5026:
ba RET5026
nop


P5032: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5032
nop
RET5032:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5033: !_LD [8] (Int)
lduw [%i1 + 0], %l7
! move %l7(lower) -> %o1(lower)
or %l7, %o1, %o1

P5034: !_REPLACEMENT [24] (Int)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+64], %l6
st %l6, [%i3+64]
add %i3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]
add %l3, %o5, %l3
ld [%l3+64], %l6
st %l6, [%l3+64]

P5035: !_ST [26] (maybe <- 0x380001a) (Int) (Secondary ctx)
wr %g0, 0x81, %asi
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stwa   %l4, [%i2 + 128] %asi
add   %l4, 1, %l4

P5036: !_REPLACEMENT [31] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+192], %o5
st %o5, [%i3+192]
add %i3, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]
add %l7, %l6, %l7
ld [%l7+192], %o5
st %o5, [%l7+192]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5036
nop
RET5036:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5037: !_REPLACEMENT [9] (Int) (CBR)
sethi %hi(0x2000), %l6
ld [%i3+32], %o5
st %o5, [%i3+32]
add %i3, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]
add %l7, %l6, %l7
ld [%l7+32], %o5
st %o5, [%l7+32]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5037
nop
RET5037:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5038: !_ST [27] (maybe <- 0x380001b) (Int) (Secondary ctx) (Branch target of P4759)
wr %g0, 0x81, %asi
stwa   %l4, [%i2 + 160] %asi
add   %l4, 1, %l4
ba P5039
nop

TARGET4759:
ba RET4759
nop


P5039: !_IDC_FLIP [4] (Int)
IDC_FLIP(5039, 18764, 7, 0x43000020, 0x20, %i0, 0x20, %l6, %l7, %o5, %l3)

P5040: !_REPLACEMENT [17] (Int)
sethi %hi(0x2000), %l6
ld [%i3+96], %o5
st %o5, [%i3+96]
add %i3, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]
add %l7, %l6, %l7
ld [%l7+96], %o5
st %o5, [%l7+96]

P5041: !_ST [25] (maybe <- 0x380001c) (Int) (Branch target of P4955)
stw   %l4, [%i2 + 96 ]
add   %l4, 1, %l4
ba P5042
nop

TARGET4955:
ba RET4955
nop


P5042: !_LD [16] (FP)
sethi %hi(REGION0_ALIAS0_O-REGION3_ALIAS1_O), %i3
sub %i0, %i3, %i3
ld [%i3 + 16], %f13
! 1 addresses covered

P5043: !_MEMBAR (FP) (Branch target of P4704)
ba P5044
nop

TARGET4704:
ba RET4704
nop


P5044: !_BST [16] (maybe <- 0x4300009b) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f36 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f36
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P5045: !_MEMBAR (FP)
membar #StoreLoad

P5046: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f14

P5047: !_MEMBAR (FP)

P5048: !_ST [29] (maybe <- 0x4300009c) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i3
sub %i0, %i3, %i3
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i3 + 64 ]

P5049: !_MEMBAR (FP)

P5050: !_BST [4] (maybe <- 0x4300009d) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P5051: !_MEMBAR (FP)
membar #StoreLoad

P5052: !_BLD [3] (FP)
wr %g0, 0xf0, %asi
ldda [%i0 + 0] %asi, %f32
membar #Sync
! 5 addresses covered
fmovd %f32, %f18
fmovs %f18, %f15
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
fmovd %f6, %f30
fmovd %f8, %f30
fmovd %f10, %f30
fmovd %f12, %f30
fmovd %f14, %f30
!--
fmovs %f19, %f0
fmovd %f34, %f18
fmovs %f18, %f1
fmovd %f36, %f2
fmovd %f40, %f18
fmovs %f18, %f3

P5053: !_MEMBAR (FP)

P5054: !_ST [1] (maybe <- 0x430000a2) (FP)
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i0 + 4 ]

P5055: !_ST [15] (maybe <- 0x430000a3) (FP) (Nucleus ctx)
wr %g0, 0x4, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
sta   %f20, [%i2 + 128 ] %asi

P5056: !_ST [10] (maybe <- 0x380001d) (Int) (Branch target of P4916)
stw   %l4, [%i1 + 64 ]
add   %l4, 1, %l4
ba P5057
nop

TARGET4916:
ba RET4916
nop


P5057: !_MEMBAR (FP)
membar #StoreLoad

P5058: !_BLD [15] (FP)
wr %g0, 0xf0, %asi
ldda [%i2 + 128] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f4

P5059: !_MEMBAR (FP)

P5060: !_BST [4] (maybe <- 0x430000a4) (FP)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f34 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #3, next val will be in f36 
fmovd %f20, %f34
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #4, next val will be in f40 
fmovd %f20, %f36
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i0 + 0 ] %asi

P5061: !_MEMBAR (FP) (Branch target of P4626)
membar #StoreLoad
ba P5062
nop

TARGET4626:
ba RET4626
nop


P5062: !_REPLACEMENT [26] (Int) (CBR)
sethi %hi(REPLACEMENT0_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
sethi %hi(0x2000), %l6
ld [%i3+128], %o5
st %o5, [%i3+128]
add %i3, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]
add %l7, %l6, %l7
ld [%l7+128], %o5
st %o5, [%l7+128]

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5062
nop
RET5062:

! lfsr step begin
srlx %l0, 1, %l3
xnor %l3, %l0, %l3
sllx %l3, 63, %l3
or  %l3, %l0, %l0
srlx %l0, 1, %l0


P5063: !_ST [26] (maybe <- 0x380001e) (Int)
sethi %hi(REGION5_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
stw   %l4, [%i2 + 128 ]
add   %l4, 1, %l4

P5064: !_REPLACEMENT [2] (Int)
sethi %hi(0x2000), %l3
ld [%i3+8], %l7
st %l7, [%i3+8]
add %i3, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]
add %l6, %l3, %l6
ld [%l6+8], %l7
st %l7, [%l6+8]

P5065: !_MEMBAR (FP)

P5066: !_BST [20] (maybe <- 0x430000a9) (FP) (CBR)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f32
membar #Sync
stda %f32, [%i3 + 256 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5066
nop
RET5066:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5067: !_MEMBAR (FP)
membar #StoreLoad

P5068: !_ST [29] (maybe <- 0x430000aa) (FP)
sethi %hi(REGION0_ALIAS0_O-REGION6_ALIAS1_O), %i2
sub %i0, %i2, %i2
! preparing store val #0, next val will be in f20 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
st   %f20, [%i2 + 64 ]

P5069: !_MEMBAR (FP) (CBR)

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5069
nop
RET5069:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5070: !_BST [8] (maybe <- 0x430000ab) (FP) (CBR)
wr %g0, 0xf0, %asi
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i1 + 0 ] %asi

! cbranch
andcc %l0, 1, %g0
be,pt  %xcc, TARGET5070
nop
RET5070:

! lfsr step begin
srlx %l0, 1, %l7
xnor %l7, %l0, %l7
sllx %l7, 63, %l7
or  %l7, %l0, %l0
srlx %l0, 1, %l0


P5071: !_MEMBAR (FP)
membar #StoreLoad

P5072: !_REPLACEMENT [21] (Int) (Branch target of P4745)
sethi %hi(REGION0_ALIAS0_O-REPLACEMENT0_ALIAS1_O), %i3
sub %i0, %i3, %i3
sethi %hi(0x2000), %o5
ld [%i3+0], %l6
st %l6, [%i3+0]
add %i3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
add %l3, %o5, %l3
ld [%l3+0], %l6
st %l6, [%l3+0]
ba P5073
nop

TARGET4745:
ba RET4745
nop


P5073: !_ST [3] (maybe <- 0x380001f) (Int) (LE) (CBR) (Branch target of P4927)
wr %g0, 0x88, %asi
! Change single-word-level endianess (big endian <-> little endian) 
sethi %hi(0xff00ff00), %o5
or %o5, %lo(0xff00ff00), %o5
and %l4, %o5, %l3
srl %l3, 8, %l3
sll %l4, 8, %l7
and %l7, %o5, %l7
or %l7, %l3, %l7
srl %l7, 16, %l3
sll %l7, 16, %l7
srl %l7, 0, %l7
or %l7, %l3, %l7
stwa   %l7, [%i0 + 16] %asi
add   %l4, 1, %l4

! cbranch
andcc %l0, 1, %g0
be,pn  %xcc, TARGET5073
nop
RET5073:

! lfsr step begin
srlx %l0, 1, %l6
xnor %l6, %l0, %l6
sllx %l6, 63, %l6
or  %l6, %l0, %l0
srlx %l0, 1, %l0

ba P5074
nop

TARGET4927:
ba RET4927
nop


P5074: !_FLUSHI [26] (Int) (Branch target of P4771)
flush %g0 
ba P5075
nop

TARGET4771:
ba RET4771
nop


P5075: !_LD [5] (Int)
lduw [%i0 + 64], %o2
! move %o2(lower) -> %o2(upper)
sllx %o2, 32, %o2

P5076: !_MEMBAR (FP)
membar #StoreLoad

P5077: !_BLD [20] (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION4_ALIAS0_O-REGION0_ALIAS0_O), %i2
add %i0, %i2, %i2
ldda [%i2 + 256] %asi, %f32
membar #Sync
! 1 addresses covered
fmovd %f32, %f18
fmovs %f18, %f5

P5078: !_MEMBAR (FP)

P5079: !_BST [12] (maybe <- 0x430000ad) (FP)
wr %g0, 0xf0, %asi
sethi %hi(REGION2_ALIAS0_O-REGION0_ALIAS0_O), %i3
add %i0, %i3, %i3
! preparing store val #0, next val will be in f32 
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
! preparing store val #1, next val will be in f33 
fmovs  %f16, %f21
fadds  %f16, %f17, %f16
! preparing store val #2, next val will be in f40 
fmovd %f20, %f32
fmovs  %f16, %f20
fadds  %f16, %f17, %f16
fmovd %f20, %f40
membar #Sync
stda %f32, [%i3 + 0 ] %asi

P5080: !_MEMBAR (FP)
membar #StoreLoad

P5081: !_LD [7] (Int) (Loop exit) (LE) (Branch target of P4542)
wr %g0, 0x88, %asi
lduwa [%i0 + 128] %asi, %l3
! move %l3(lower) -> %o2(lower)
or %l3, %o2, %o2
!---- flushing int results buffer----
mov %o0, %l5
mov %o1, %l5
mov %o2, %l5
!---- flushing fp results buffer to %f30 ----
fmovd %f0, %f30
fmovd %f2, %f30
fmovd %f4, %f30
!--

sethi %hi(0x20000), %l6
add   %i1, %l6, %i1
!-- End Aliased access: base register for region 1 (%i1) restored
loop_exit_7_0:
sub %l2, 1, %l2
cmp %l2, 0
bg loop_entry_7_0
nop
ba P5082
nop

TARGET4542:
ba RET4542
nop


P5082: !_MEMBAR (Int)
membar #StoreLoad

END_NODES7: ! Test instruction sequence for CPU 7 ends
sethi %hi(0xdead0e0f), %l7
or    %l7, %lo(0xdead0e0f), %l7
! move %l7(lower) -> %o0(upper)
sllx %l7, 32, %o0
sethi %hi(0xdead0e0f), %l7
or    %l7, %lo(0xdead0e0f), %l7
stw %l7, [%i5] 
ld [%i5], %f0
!---- flushing int results buffer----
mov %o0, %l5
!---- flushing fp results buffer to %f30 ----
fmovs %f0, %f30
!--

restore
retl
nop
tsotool_text_end:


!#0 N1 P1 REPLACEMENT 23 Int BE Pri Loop_entry
!#0 N2 P2 ST 33 0x3f800001 FP BE Pri
!#0 N3 P3 LD 8 -1 FP BE Pri
!#0 N4 P4 REPLACEMENT 3 Int BE Pri
!#0 N5 P5 REPLACEMENT 1 Int BE Pri
!#0 N6 P6 MEMBAR
!#0 N7 P7 BST 8 0x3f800002 FP BE Pri
!#0 N8 P7 BST 9 0x3f800003 FP BE Pri
!#0 N9 P8 MEMBAR
!#0 N10 P9 ST 7 0x1 Int BE Pri
!#0 N11 P10 MEMBAR
!#0 N12 P11 BST 8 0x3f800004 FP BE Pri
!#0 N13 P11 BST 9 0x3f800005 FP BE Pri
!#0 N14 P12 MEMBAR
!#0 N15 P13 IDC_FLIP 16 Int BE Pri
!#0 N16 P14 MEMBAR
!#0 N17 P15 BST 17 0x3f800006 FP BE Pri
!#0 N18 P16 MEMBAR
!#0 N19 P17 LD 32 -1 Int BE Pri
!#0 N20 P18 ST 1 0x3f800007 FP BE Pri
!#0 N21 P19 REPLACEMENT 3 Int BE Pri
!#0 N22 P20 MEMBAR
!#0 N23 P21 BSTC 30 0x3f800008 FP BE Pri
!#0 N24 P22 MEMBAR
!#0 N25 P23 REPLACEMENT 29 Int BE Pri
!#0 N26 P24 REPLACEMENT 20 Int BE Pri
!#0 N27 P25 MEMBAR
!#0 N28 P26 BST 0 0x3f800009 FP BE Pri
!#0 N29 P26 BST 1 0x3f80000a FP BE Pri
!#A N28 N29
!#0 N30 P26 BST 2 0x3f80000b FP BE Pri
!#0 N31 P26 BST 3 0x3f80000c FP BE Pri
!#0 N32 P26 BST 4 0x3f80000d FP BE Pri
!#0 N33 P27 MEMBAR
!#0 N34 P28 ST 10 0x2 Int BE Pri
!#0 N35 P29 LD 1 -1 Int BE Pri
!#0 N36 P30 MEMBAR
!#0 N37 P31 BST 0 0x3f80000e FP BE Pri
!#0 N38 P31 BST 1 0x3f80000f FP BE Pri
!#A N37 N38
!#0 N39 P31 BST 2 0x3f800010 FP BE Pri
!#0 N40 P31 BST 3 0x3f800011 FP BE Pri
!#0 N41 P31 BST 4 0x3f800012 FP BE Pri
!#0 N42 P32 MEMBAR
!#0 N43 P33 BST 7 0x3f800013 FP BE Pri
!#0 N44 P34 MEMBAR
!#0 N45 P35 BST 0 0x3f800014 FP BE Pri
!#0 N46 P35 BST 1 0x3f800015 FP BE Pri
!#A N45 N46
!#0 N47 P35 BST 2 0x3f800016 FP BE Pri
!#0 N48 P35 BST 3 0x3f800017 FP BE Pri
!#0 N49 P35 BST 4 0x3f800018 FP BE Pri
!#0 N50 P36 MEMBAR
!#0 N51 P37 BSTC 32 0x3f800019 FP BE Sec
!#0 N52 P38 MEMBAR
!#0 N53 P39 REPLACEMENT 6 Int BE Sec
!#0 N54 P40 IDC_FLIP 25 Int BE Pri
!#0 N55 P41 ST 21 0x3 Int BE Nuc
!#0 N56 P42 MEMBAR
!#0 N57 P43 BST 28 0x3f80001a FP BE Pri
!#0 N58 P44 MEMBAR
!#0 N59 P45 BST 33 0x3f80001b FP BE Sec
!#0 N60 P46 MEMBAR
!#0 N61 P47 BLD 33 -1 FP BE Pri
!#0 N62 P48 MEMBAR
!#0 N63 P49 IDC_FLIP 29 Int BE Pri
!#0 N64 P50 MEMBAR
!#0 N65 P51 BST 7 0x3f80001c FP BE Pri
!#0 N66 P52 MEMBAR
!#0 N67 P53 LD 14 -1 FP BE Nuc
!#0 N68 P54 MEMBAR
!#0 N69 P55 BST 0 0x3f80001d FP BE Pri
!#0 N70 P55 BST 1 0x3f80001e FP BE Pri
!#A N69 N70
!#0 N71 P55 BST 2 0x3f80001f FP BE Pri
!#0 N72 P55 BST 3 0x3f800020 FP BE Pri
!#0 N73 P55 BST 4 0x3f800021 FP BE Pri
!#0 N74 P56 MEMBAR
!#0 N75 P57 LD 13 -1 FP BE Pri
!#0 N76 P58 MEMBAR
!#0 N77 P59 BST 24 0x3f800022 FP BE Pri
!#0 N78 P59 BST 25 0x3f800023 FP BE Pri
!#0 N79 P60 MEMBAR
!#0 N80 P61 REPLACEMENT 25 Int BE Pri
!#0 N81 P62 ST 23 0x3f800024 FP BE Pri
!#0 N82 P63 LD 16 -1 FP BE Pri
!#0 N83 P64 REPLACEMENT 27 Int BE Pri
!#0 N84 P65 REPLACEMENT 17 Int BE Pri
!#0 N85 P66 IDC_FLIP 16 Int BE Pri
!#0 N86 P67 MEMBAR
!#0 N87 P68 BLD 19 -1 FP BE Pri
!#0 N88 P69 MEMBAR
!#0 N89 P70 BLD 14 -1 FP BE Sec
!#0 N90 P71 MEMBAR
!#0 N91 P72 ST 9 0x3f800025 FP BE Pri
!#0 N92 P73 REPLACEMENT 18 Int BE Pri
!#0 N93 P74 ST 23 0x4 Int BE Sec
!#0 N94 P75 LD 33 -1 FP BE Pri
!#0 N95 P76 REPLACEMENT 3 Int BE Sec
!#0 N96 P77 REPLACEMENT 33 Int BE Pri
!#0 N97 P78 REPLACEMENT 3 Int BE Nuc
!#0 N98 P79 LD 25 -1 Int BE Sec
!#0 N99 P80 MEMBAR
!#0 N100 P81 BLD 26 -1 FP BE Pri
!#0 N101 P81 BLD 27 -1 FP BE Pri
!#0 N102 P82 MEMBAR
!#0 N103 P83 BST 10 0x3f800026 FP BE Pri
!#0 N104 P84 MEMBAR
!#0 N105 P85 ST 26 0x5 Int BE Sec
!#0 N106 P86 MEMBAR
!#0 N107 P87 BST 8 0x3f800027 FP BE Pri
!#0 N108 P87 BST 9 0x3f800028 FP BE Pri
!#0 N109 P88 MEMBAR
!#0 N110 P89 IDC_FLIP 32 Int BE Pri
!#0 N111 P90 MEMBAR
!#0 N112 P91 BSTC 10 0x3f800029 FP BE Pri
!#0 N113 P92 MEMBAR
!#0 N114 P93 BLD 24 -1 FP BE Sec
!#0 N115 P93 BLD 25 -1 FP BE Sec
!#0 N116 P94 MEMBAR
!#0 N117 P95 BLD 14 -1 FP BE Pri
!#0 N118 P96 MEMBAR
!#0 N119 P97 BST 24 0x3f80002a FP BE Pri
!#0 N120 P97 BST 25 0x3f80002b FP BE Pri
!#0 N121 P98 MEMBAR
!#0 N122 P99 LD 19 -1 Int BE Pri
!#0 N123 P100 ST 9 0x3f80002c FP BE Nuc
!#0 N124 P101 MEMBAR
!#0 N125 P102 BLD 8 -1 FP BE Pri
!#0 N126 P102 BLD 9 -1 FP BE Pri
!#0 N127 P103 MEMBAR
!#0 N128 P104 ST 13 0x3f80002d FP BE Pri
!#0 N129 P105 MEMBAR
!#0 N130 P106 BST 26 0x3f80002e FP BE Pri
!#0 N131 P106 BST 27 0x3f80002f FP BE Pri
!#0 N132 P107 MEMBAR
!#0 N133 P108 ST 2 0x3f800030 FP BE Pri
!#0 N134 P109 MEMBAR
!#0 N135 P110 BST 32 0x3f800031 FP BE Pri
!#0 N136 P111 MEMBAR
!#0 N137 P112 LD 24 -1 FP BE Pri
!#0 N138 P113 ST 28 0x3f800032 FP BE Nuc
!#0 N139 P114 MEMBAR
!#0 N140 P115 BLD 0 -1 FP BE Pri
!#0 N141 P115 BLD 1 -1 FP BE Pri
!#A N140 N141
!#0 N142 P115 BLD 2 -1 FP BE Pri
!#0 N143 P115 BLD 3 -1 FP BE Pri
!#0 N144 P115 BLD 4 -1 FP BE Pri
!#0 N145 P116 MEMBAR
!#0 N146 P117 REPLACEMENT 28 Int BE Pri
!#0 N147 P118 REPLACEMENT 4 Int BE Pri
!#0 N148 P119 LD 9 -1 FP BE Sec
!#0 N149 P120 MEMBAR
!#0 N150 P121 BST 19 0x3f800033 FP BE Pri
!#0 N151 P122 MEMBAR
!#0 N152 P123 BLD 33 -1 FP BE Pri
!#0 N153 P124 MEMBAR
!#0 N154 P125 LD 18 -1 FP BE Nuc
!#0 N155 P126 ST 11 0x6 Int BE Pri
!#0 N156 P127 REPLACEMENT 31 Int BE Pri
!#0 N157 P128 REPLACEMENT 9 Int BE Pri
!#0 N158 P129 REPLACEMENT 24 Int BE Nuc
!#0 N159 P130 REPLACEMENT 3 Int BE Sec
!#0 N160 P131 ST 29 0x7 Int BE Sec
!#0 N161 P132 MEMBAR
!#0 N162 P133 BST 29 0x3f800034 FP BE Pri
!#0 N163 P134 MEMBAR
!#0 N164 P135 BST 33 0x3f800035 FP BE Pri
!#0 N165 P136 MEMBAR
!#0 N166 P137 LD 28 -1 Int BE Pri
!#0 N167 P138 MEMBAR
!#0 N168 P139 BLD 21 -1 FP BE Pri
!#0 N169 P139 BLD 22 -1 FP BE Pri
!#A N168 N169
!#0 N170 P139 BLD 23 -1 FP BE Pri
!#0 N171 P140 MEMBAR
!#0 N172 P141 BLD 7 -1 FP BE Pri
!#0 N173 P142 MEMBAR
!#0 N174 P143 REPLACEMENT 14 Int BE Pri
!#0 N175 P144 IDC_FLIP 1 Int BE Pri
!#0 N176 P145 ST 28 0x8 Int BE Sec
!#0 N177 P146 MEMBAR
!#0 N178 P147 BLD 11 -1 FP BE Pri
!#0 N179 P147 BLD 12 -1 FP BE Pri
!#A N178 N179
!#0 N180 P147 BLD 13 -1 FP BE Pri
!#0 N181 P148 MEMBAR
!#0 N182 P149 BST 20 0x3f800036 FP BE Pri
!#0 N183 P150 MEMBAR
!#0 N184 P151 BLD 33 -1 FP BE Pri
!#0 N185 P152 MEMBAR
!#0 N186 P153 LD 29 -1 Int BE Nuc
!#0 N187 P154 LD 1 -1 Int BE Pri
!#0 N188 P155 LD 25 -1 FP BE Pri
!#0 N189 P156 LD 23 -1 FP BE Pri
!#0 N190 P157 MEMBAR
!#0 N191 P158 BLD 0 -1 FP BE Pri
!#0 N192 P158 BLD 1 -1 FP BE Pri
!#A N191 N192
!#0 N193 P158 BLD 2 -1 FP BE Pri
!#0 N194 P158 BLD 3 -1 FP BE Pri
!#0 N195 P158 BLD 4 -1 FP BE Pri
!#0 N196 P159 MEMBAR
!#0 N197 P160 REPLACEMENT 5 Int BE Pri
!#0 N198 P161 LD 32 -1 Int BE Pri
!#0 N199 P162 ST 4 0x3f800037 FP BE Pri
!#0 N200 P163 MEMBAR
!#0 N201 P164 BST 5 0x3f800038 FP BE Sec
!#0 N202 P164 BST 6 0x3f800039 FP BE Sec
!#0 N203 P165 MEMBAR
!#0 N204 P166 BST 21 0x3f80003a FP BE Pri
!#0 N205 P166 BST 22 0x3f80003b FP BE Pri
!#A N204 N205
!#0 N206 P166 BST 23 0x3f80003c FP BE Pri
!#0 N207 P167 MEMBAR
!#0 N208 P168 BST 17 0x3f80003d FP BE Pri
!#0 N209 P169 MEMBAR
!#0 N210 P170 LD 32 -1 FP BE Nuc
!#0 N211 P171 IDC_FLIP 15 Int BE Pri
!#0 N212 P172 LD 11 -1 FP BE Sec
!#0 N213 P173 MEMBAR
!#0 N214 P174 BST 11 0x3f80003e FP BE Pri
!#0 N215 P174 BST 12 0x3f80003f FP BE Pri
!#A N214 N215
!#0 N216 P174 BST 13 0x3f800040 FP BE Pri
!#0 N217 P175 MEMBAR
!#0 N218 P176 BST 16 0x3f800041 FP BE Pri
!#0 N219 P177 MEMBAR
!#0 N220 P178 PREFETCH 22 Int BE Pri
!#0 N221 P179 MEMBAR
!#0 N222 P180 BLD 0 -1 FP BE Pri
!#0 N223 P180 BLD 1 -1 FP BE Pri
!#A N222 N223
!#0 N224 P180 BLD 2 -1 FP BE Pri
!#0 N225 P180 BLD 3 -1 FP BE Pri
!#0 N226 P180 BLD 4 -1 FP BE Pri
!#0 N227 P181 MEMBAR
!#0 N228 P182 REPLACEMENT 19 Int BE Pri
!#0 N229 P183 ST 6 0x9 Int BE Pri
!#0 N230 P184 ST 7 0xa Int BE Pri
!#0 N231 P185 MEMBAR
!#0 N232 P186 BLD 19 -1 FP BE Pri
!#0 N233 P187 MEMBAR
!#0 N234 P188 REPLACEMENT 30 Int BE Pri
!#0 N235 P189 REPLACEMENT 26 Int BE Pri
!#0 N236 P190 IDC_FLIP 19 Int BE Pri
!#0 N237 P191 ST 30 0x3f800042 FP BE Pri
!#0 N238 P192 REPLACEMENT 26 Int BE Pri
!#0 N239 P193 REPLACEMENT 14 Int BE Pri
!#0 N240 P194 LD 23 -1 Int BE Sec
!#0 N241 P195 MEMBAR
!#0 N242 P196 BLD 33 -1 FP BE Pri
!#0 N243 P197 MEMBAR
!#0 N244 P198 BSTC 0 0x3f800043 FP BE Pri
!#0 N245 P198 BSTC 1 0x3f800044 FP BE Pri
!#A N244 N245
!#0 N246 P198 BSTC 2 0x3f800045 FP BE Pri
!#0 N247 P198 BSTC 3 0x3f800046 FP BE Pri
!#0 N248 P198 BSTC 4 0x3f800047 FP BE Pri
!#0 N249 P199 MEMBAR
!#0 N250 P200 LD 0 -1 FP BE Pri
!#0 N251 P201 MEMBAR
!#0 N252 P202 BST 8 0x3f800048 FP BE Pri
!#0 N253 P202 BST 9 0x3f800049 FP BE Pri
!#0 N254 P203 MEMBAR
!#0 N255 P204 ST 15 0xb Int BE Pri
!#0 N256 P205 MEMBAR
!#0 N257 P206 BST 19 0x3f80004a FP BE Pri
!#0 N258 P207 MEMBAR
!#0 N259 P208 BST 11 0x3f80004b FP BE Pri
!#0 N260 P208 BST 12 0x3f80004c FP BE Pri
!#A N259 N260
!#0 N261 P208 BST 13 0x3f80004d FP BE Pri
!#0 N262 P209 MEMBAR
!#0 N263 P210 ST 16 0x3f80004e FP BE Pri
!#0 N264 P211 ST 24 0x3f80004f FP BE Pri
!#0 N265 P212 MEMBAR
!#0 N266 P213 BST 32 0x3f800050 FP BE Sec
!#0 N267 P214 MEMBAR
!#0 N268 P215 REPLACEMENT 12 Int BE Pri
!#0 N269 P216 REPLACEMENT 13 Int BE Nuc
!#0 N270 P217 MEMBAR
!#0 N271 P218 BLD 33 -1 FP BE Pri
!#0 N272 P219 MEMBAR
!#0 N273 P220 BLD 5 -1 FP BE Pri
!#0 N274 P220 BLD 6 -1 FP BE Pri
!#0 N275 P221 MEMBAR
!#0 N276 P222 BLD 0 -1 FP BE Pri
!#0 N277 P222 BLD 1 -1 FP BE Pri
!#A N276 N277
!#0 N278 P222 BLD 2 -1 FP BE Pri
!#0 N279 P222 BLD 3 -1 FP BE Pri
!#0 N280 P222 BLD 4 -1 FP BE Pri
!#0 N281 P223 MEMBAR
!#0 N282 P224 LD 10 -1 Int BE Pri
!#0 N283 P225 REPLACEMENT 8 Int BE Pri
!#0 N284 P226 MEMBAR
!#0 N285 P227 BST 0 0x3f800051 FP BE Pri
!#0 N286 P227 BST 1 0x3f800052 FP BE Pri
!#A N285 N286
!#0 N287 P227 BST 2 0x3f800053 FP BE Pri
!#0 N288 P227 BST 3 0x3f800054 FP BE Pri
!#0 N289 P227 BST 4 0x3f800055 FP BE Pri
!#0 N290 P228 MEMBAR
!#0 N291 P229 BLD 26 -1 FP BE Pri
!#0 N292 P229 BLD 27 -1 FP BE Pri
!#0 N293 P230 MEMBAR
!#0 N294 P231 BST 31 0x3f800056 FP BE Pri
!#0 N295 P232 MEMBAR
!#0 N296 P233 REPLACEMENT 5 Int BE Pri
!#0 N297 P234 REPLACEMENT 2 Int BE Sec
!#0 N298 P235 REPLACEMENT 7 Int BE Pri
!#0 N299 P236 REPLACEMENT 3 Int BE Pri
!#0 N300 P237 ST 29 0xc Int BE Pri
!#0 N301 P238 MEMBAR
!#0 N302 P239 BSTC 14 0x3f800057 FP BE Pri
!#0 N303 P240 MEMBAR
!#0 N304 P241 BST 19 0x3f800058 FP BE Pri
!#0 N305 P242 MEMBAR
!#0 N306 P243 BLD 26 -1 FP BE Pri
!#0 N307 P243 BLD 27 -1 FP BE Pri
!#0 N308 P244 MEMBAR
!#0 N309 P245 BST 11 0x3f800059 FP BE Pri
!#0 N310 P245 BST 12 0x3f80005a FP BE Pri
!#A N309 N310
!#0 N311 P245 BST 13 0x3f80005b FP BE Pri
!#0 N312 P246 MEMBAR
!#0 N313 P247 LD 5 -1 FP BE Pri
!#0 N314 P248 LD 4 -1 Int BE Pri
!#0 N315 P249 MEMBAR
!#0 N316 P250 BST 8 0x3f80005c FP BE Pri
!#0 N317 P250 BST 9 0x3f80005d FP BE Pri
!#0 N318 P251 MEMBAR
!#0 N319 P252 BSTC 0 0x3f80005e FP BE Sec
!#0 N320 P252 BSTC 1 0x3f80005f FP BE Sec
!#A N319 N320
!#0 N321 P252 BSTC 2 0x3f800060 FP BE Sec
!#0 N322 P252 BSTC 3 0x3f800061 FP BE Sec
!#0 N323 P252 BSTC 4 0x3f800062 FP BE Sec
!#0 N324 P253 MEMBAR
!#0 N325 P254 ST 6 0x3f800063 FP BE Pri
!#0 N326 P255 ST 31 0x3f800064 FP BE Pri
!#0 N327 P256 REPLACEMENT 22 Int BE Pri
!#0 N328 P257 MEMBAR
!#0 N329 P258 BST 0 0x3f800065 FP BE Pri
!#0 N330 P258 BST 1 0x3f800066 FP BE Pri
!#A N329 N330
!#0 N331 P258 BST 2 0x3f800067 FP BE Pri
!#0 N332 P258 BST 3 0x3f800068 FP BE Pri
!#0 N333 P258 BST 4 0x3f800069 FP BE Pri
!#0 N334 P259 MEMBAR
!#0 N335 P260 BST 16 0x3f80006a FP BE Pri
!#0 N336 P261 MEMBAR
!#0 N337 P262 BLD 8 -1 FP BE Pri
!#0 N338 P262 BLD 9 -1 FP BE Pri
!#0 N339 P263 MEMBAR
!#0 N340 P264 BLD 19 -1 FP BE Pri
!#0 N341 P265 MEMBAR
!#0 N342 P266 FLUSHI 29 Int BE Pri
!#0 N343 P267 ST 22 0xd Int BE Pri
!#0 N344 P268 MEMBAR
!#0 N345 P269 BSTC 0 0x3f80006b FP BE Pri
!#0 N346 P269 BSTC 1 0x3f80006c FP BE Pri
!#A N345 N346
!#0 N347 P269 BSTC 2 0x3f80006d FP BE Pri
!#0 N348 P269 BSTC 3 0x3f80006e FP BE Pri
!#0 N349 P269 BSTC 4 0x3f80006f FP BE Pri
!#0 N350 P270 MEMBAR
!#0 N351 P271 LD 16 -1 FP BE Pri
!#0 N352 P272 ST 32 0x3f800070 FP BE Pri
!#0 N353 P273 ST 32 0x3f800071 FP BE Sec
!#0 N354 P274 MEMBAR
!#0 N355 P275 BST 21 0x3f800072 FP BE Pri
!#0 N356 P275 BST 22 0x3f800073 FP BE Pri
!#A N355 N356
!#0 N357 P275 BST 23 0x3f800074 FP BE Pri
!#0 N358 P276 MEMBAR
!#0 N359 P277 ST 7 0xe Int BE Pri
!#0 N360 P278 LD 29 -1 Int BE Sec
!#0 N361 P279 LD 31 -1 FP BE Pri
!#0 N362 P280 REPLACEMENT 6 Int BE Pri
!#0 N363 P281 REPLACEMENT 9 Int BE Pri
!#0 N364 P282 REPLACEMENT 11 Int BE Pri
!#0 N365 P283 MEMBAR
!#0 N366 P284 BLD 32 -1 FP BE Sec
!#0 N367 P285 MEMBAR
!#0 N368 P286 PREFETCH 15 Int LE Pri
!#0 N369 P287 ST 32 0xf Int LE Pri
!#0 N370 P288 LD 28 -1 FP BE Pri
!#0 N371 P289 REPLACEMENT 12 Int BE Pri
!#0 N372 P290 MEMBAR
!#0 N373 P291 BSTC 0 0x3f800075 FP BE Pri
!#0 N374 P291 BSTC 1 0x3f800076 FP BE Pri
!#A N373 N374
!#0 N375 P291 BSTC 2 0x3f800077 FP BE Pri
!#0 N376 P291 BSTC 3 0x3f800078 FP BE Pri
!#0 N377 P291 BSTC 4 0x3f800079 FP BE Pri
!#0 N378 P292 MEMBAR
!#0 N379 P293 IDC_FLIP 9 Int BE Pri
!#0 N380 P294 REPLACEMENT 17 Int BE Sec
!#0 N381 P295 REPLACEMENT 11 Int BE Sec
!#0 N382 P296 ST 27 0x10 Int BE Sec
!#0 N383 P297 MEMBAR
!#0 N384 P298 BST 15 0x3f80007a FP BE Sec
!#0 N385 P299 MEMBAR
!#0 N386 P300 REPLACEMENT 28 Int BE Pri
!#0 N387 P301 MEMBAR
!#0 N388 P302 BST 31 0x3f80007b FP BE Pri
!#0 N389 P303 MEMBAR
!#0 N390 P304 ST 20 0x11 Int BE Pri
!#0 N391 P305 LD 1 -1 Int BE Pri
!#0 N392 P306 LD 10 -1 FP BE Pri
!#0 N393 P307 REPLACEMENT 20 Int BE Nuc
!#0 N394 P308 LD 15 -1 FP BE Pri
!#0 N395 P309 MEMBAR
!#0 N396 P310 BLD 0 -1 FP BE Pri
!#0 N397 P310 BLD 1 -1 FP BE Pri
!#A N396 N397
!#0 N398 P310 BLD 2 -1 FP BE Pri
!#0 N399 P310 BLD 3 -1 FP BE Pri
!#0 N400 P310 BLD 4 -1 FP BE Pri
!#0 N401 P311 MEMBAR
!#0 N402 P312 REPLACEMENT 16 Int BE Pri
!#0 N403 P313 LD 15 -1 Int BE Pri
!#0 N404 P314 MEMBAR
!#0 N405 P315 BLD 0 -1 FP BE Pri
!#0 N406 P315 BLD 1 -1 FP BE Pri
!#A N405 N406
!#0 N407 P315 BLD 2 -1 FP BE Pri
!#0 N408 P315 BLD 3 -1 FP BE Pri
!#0 N409 P315 BLD 4 -1 FP BE Pri
!#0 N410 P316 MEMBAR
!#0 N411 P317 ST 21 0x12 Int BE Pri
!#0 N412 P318 LD 8 -1 FP BE Sec
!#0 N413 P319 REPLACEMENT 13 Int BE Sec
!#0 N414 P320 ST 33 0x3f80007c FP BE Pri
!#0 N415 P321 LD 0 -1 Int BE Pri
!#0 N416 P322 MEMBAR
!#0 N417 P323 BLD 11 -1 FP BE Pri
!#0 N418 P323 BLD 12 -1 FP BE Pri
!#A N417 N418
!#0 N419 P323 BLD 13 -1 FP BE Pri
!#0 N420 P324 MEMBAR
!#0 N421 P325 PREFETCH 14 Int BE Pri
!#0 N422 P326 REPLACEMENT 25 Int BE Pri
!#0 N423 P327 REPLACEMENT 12 Int BE Pri
!#0 N424 P328 MEMBAR
!#0 N425 P329 BLD 0 -1 FP BE Sec
!#0 N426 P329 BLD 1 -1 FP BE Sec
!#A N425 N426
!#0 N427 P329 BLD 2 -1 FP BE Sec
!#0 N428 P329 BLD 3 -1 FP BE Sec
!#0 N429 P329 BLD 4 -1 FP BE Sec
!#0 N430 P330 MEMBAR
!#0 N431 P331 BLD 33 -1 FP BE Pri
!#0 N432 P332 MEMBAR
!#0 N433 P333 IDC_FLIP 25 Int BE Pri
!#0 N434 P334 MEMBAR
!#0 N435 P335 BLD 0 -1 FP BE Pri
!#0 N436 P335 BLD 1 -1 FP BE Pri
!#A N435 N436
!#0 N437 P335 BLD 2 -1 FP BE Pri
!#0 N438 P335 BLD 3 -1 FP BE Pri
!#0 N439 P335 BLD 4 -1 FP BE Pri
!#0 N440 P336 MEMBAR
!#0 N441 P337 REPLACEMENT 15 Int BE Pri
!#0 N442 P338 REPLACEMENT 30 Int BE Pri
!#0 N443 P339 MEMBAR
!#0 N444 P340 BLD 11 -1 FP BE Pri
!#0 N445 P340 BLD 12 -1 FP BE Pri
!#A N444 N445
!#0 N446 P340 BLD 13 -1 FP BE Pri
!#0 N447 P341 MEMBAR
!#0 N448 P342 REPLACEMENT 32 Int BE Nuc
!#0 N449 P343 MEMBAR
!#0 N450 P344 BST 0 0x3f80007d FP BE Pri
!#0 N451 P344 BST 1 0x3f80007e FP BE Pri
!#A N450 N451
!#0 N452 P344 BST 2 0x3f80007f FP BE Pri
!#0 N453 P344 BST 3 0x3f800080 FP BE Pri
!#0 N454 P344 BST 4 0x3f800081 FP BE Pri
!#0 N455 P345 MEMBAR
!#0 N456 P346 BST 21 0x3f800082 FP BE Pri
!#0 N457 P346 BST 22 0x3f800083 FP BE Pri
!#A N456 N457
!#0 N458 P346 BST 23 0x3f800084 FP BE Pri
!#0 N459 P347 MEMBAR
!#0 N460 P348 REPLACEMENT 30 Int BE Pri
!#0 N461 P349 MEMBAR
!#0 N462 P350 BLD 29 -1 FP BE Sec
!#0 N463 P351 MEMBAR
!#0 N464 P352 REPLACEMENT 24 Int BE Pri
!#0 N465 P353 LD 33 -1 Int BE Sec
!#0 N466 P354 REPLACEMENT 6 Int BE Pri
!#0 N467 P355 REPLACEMENT 23 Int BE Pri
!#0 N468 P356 LD 17 -1 FP BE Pri
!#0 N469 P357 REPLACEMENT 1 Int BE Pri
!#0 N470 P358 IDC_FLIP 14 Int BE Pri
!#0 N471 P359 IDC_FLIP 29 Int BE Pri
!#0 N472 P360 REPLACEMENT 25 Int BE Pri
!#0 N473 P361 LD 8 -1 Int BE Pri
!#0 N474 P362 MEMBAR
!#0 N475 P363 BLD 31 -1 FP BE Pri
!#0 N476 P364 MEMBAR
!#0 N477 P365 LD 15 -1 FP BE Pri
!#0 N478 P366 MEMBAR
!#0 N479 P367 BST 8 0x3f800085 FP BE Sec
!#0 N480 P367 BST 9 0x3f800086 FP BE Sec
!#0 N481 P368 MEMBAR
!#0 N482 P369 BST 29 0x3f800087 FP BE Pri
!#0 N483 P370 MEMBAR
!#0 N484 P371 ST 22 0x3f800088 FP BE Pri
!#0 N485 P372 REPLACEMENT 6 Int BE Sec
!#0 N486 P373 LD 6 -1 Int BE Pri
!#0 N487 P374 MEMBAR
!#0 N488 P375 BSTC 31 0x3f800089 FP BE Pri
!#0 N489 P376 MEMBAR
!#0 N490 P377 ST 33 0x3f80008a FP BE Pri
!#0 N491 P378 LD 24 -1 FP BE Pri
!#0 N492 P379 REPLACEMENT 25 Int BE Sec
!#0 N493 P380 REPLACEMENT 25 Int BE Pri
!#0 N494 P381 MEMBAR
!#0 N495 P382 BLD 24 -1 FP BE Pri
!#0 N496 P382 BLD 25 -1 FP BE Pri
!#0 N497 P383 MEMBAR
!#0 N498 P384 REPLACEMENT 23 Int BE Pri
!#0 N499 P385 MEMBAR
!#0 N500 P386 BLD 19 -1 FP BE Pri
!#0 N501 P387 MEMBAR
!#0 N502 P388 REPLACEMENT 9 Int BE Pri
!#0 N503 P389 MEMBAR
!#0 N504 P390 BLD 31 -1 FP BE Pri
!#0 N505 P391 MEMBAR
!#0 N506 P392 REPLACEMENT 2 Int BE Pri
!#0 N507 P393 REPLACEMENT 13 Int BE Sec
!#0 N508 P394 MEMBAR
!#0 N509 P395 BSTC 5 0x3f80008b FP BE Pri
!#0 N510 P395 BSTC 6 0x3f80008c FP BE Pri
!#0 N511 P396 MEMBAR
!#0 N512 P397 BLD 29 -1 FP BE Pri
!#0 N513 P398 MEMBAR
!#0 N514 P399 BST 11 0x3f80008d FP BE Pri
!#0 N515 P399 BST 12 0x3f80008e FP BE Pri
!#A N514 N515
!#0 N516 P399 BST 13 0x3f80008f FP BE Pri
!#0 N517 P400 MEMBAR
!#0 N518 P401 BLD 8 -1 FP BE Pri
!#0 N519 P401 BLD 9 -1 FP BE Pri
!#0 N520 P402 MEMBAR
!#0 N521 P403 LD 1 -1 Int BE Pri
!#0 N522 P404 MEMBAR
!#0 N523 P405 BLD 33 -1 FP BE Pri
!#0 N524 P406 MEMBAR
!#0 N525 P407 ST 28 0x3f800090 FP BE Nuc
!#0 N526 P408 REPLACEMENT 6 Int BE Pri
!#0 N527 P409 MEMBAR
!#0 N528 P410 BLD 11 -1 FP BE Pri
!#0 N529 P410 BLD 12 -1 FP BE Pri
!#A N528 N529
!#0 N530 P410 BLD 13 -1 FP BE Pri
!#0 N531 P411 MEMBAR
!#0 N532 P412 REPLACEMENT 29 Int BE Pri
!#0 N533 P413 ST 20 0x3f800091 FP BE Pri
!#0 N534 P414 REPLACEMENT 17 Int BE Pri
!#0 N535 P415 REPLACEMENT 5 Int BE Pri
!#0 N536 P416 REPLACEMENT 3 Int BE Pri
!#0 N537 P417 LD 17 -1 Int BE Sec
!#0 N538 P418 REPLACEMENT 8 Int BE Pri
!#0 N539 P419 MEMBAR
!#0 N540 P420 BST 0 0x3f800092 FP BE Pri
!#0 N541 P420 BST 1 0x3f800093 FP BE Pri
!#A N540 N541
!#0 N542 P420 BST 2 0x3f800094 FP BE Pri
!#0 N543 P420 BST 3 0x3f800095 FP BE Pri
!#0 N544 P420 BST 4 0x3f800096 FP BE Pri
!#0 N545 P421 MEMBAR
!#0 N546 P422 ST 3 0x3f800097 FP BE Nuc
!#0 N547 P423 REPLACEMENT 22 Int BE Pri
!#0 N548 P424 ST 30 0x3f800098 FP BE Nuc
!#0 N549 P425 ST 7 0x13 Int BE Pri
!#0 N550 P426 MEMBAR
!#0 N551 P427 BSTC 24 0x3f800099 FP BE Pri
!#0 N552 P427 BSTC 25 0x3f80009a FP BE Pri
!#0 N553 P428 MEMBAR
!#0 N554 P429 BST 11 0x3f80009b FP BE Pri
!#0 N555 P429 BST 12 0x3f80009c FP BE Pri
!#A N554 N555
!#0 N556 P429 BST 13 0x3f80009d FP BE Pri
!#0 N557 P430 MEMBAR
!#0 N558 P431 BLD 10 -1 FP BE Pri
!#0 N559 P432 MEMBAR
!#0 N560 P433 BLD 10 -1 FP BE Sec
!#0 N561 P434 MEMBAR
!#0 N562 P435 ST 19 0x14 Int BE Pri
!#0 N563 P436 ST 3 0x3f80009e FP BE Pri
!#0 N564 P437 ST 5 0x15 Int BE Pri
!#0 N565 P438 MEMBAR
!#0 N566 P439 BST 26 0x3f80009f FP BE Pri
!#0 N567 P439 BST 27 0x3f8000a0 FP BE Pri
!#0 N568 P440 MEMBAR
!#0 N569 P441 BLD 32 -1 FP BE Pri
!#0 N570 P442 MEMBAR
!#0 N571 P443 BST 17 0x3f8000a1 FP BE Pri
!#0 N572 P444 MEMBAR
!#0 N573 P445 REPLACEMENT 28 Int BE Pri
!#0 N574 P446 ST 15 0x16 Int BE Pri
!#0 N575 P447 ST 32 0x17 Int BE Pri
!#0 N576 P448 ST 15 0x18 Int BE Pri
!#0 N577 P449 ST 25 0x19 Int BE Sec
!#0 N578 P450 MEMBAR
!#0 N579 P451 BLD 5 -1 FP BE Pri
!#0 N580 P451 BLD 6 -1 FP BE Pri
!#0 N581 P452 MEMBAR
!#0 N582 P453 FLUSHI 25 Int BE Pri
!#0 N583 P454 MEMBAR
!#0 N584 P455 BLD 18 -1 FP BE Pri
!#0 N585 P456 MEMBAR
!#0 N586 P457 REPLACEMENT 8 Int BE Pri
!#0 N587 P458 LD 7 -1 FP BE Pri
!#0 N588 P459 MEMBAR
!#0 N589 P460 BST 11 0x3f8000a2 FP BE Sec
!#0 N590 P460 BST 12 0x3f8000a3 FP BE Sec
!#A N589 N590
!#0 N591 P460 BST 13 0x3f8000a4 FP BE Sec
!#0 N592 P461 MEMBAR
!#0 N593 P462 BLD 11 -1 FP BE Sec
!#0 N594 P462 BLD 12 -1 FP BE Sec
!#A N593 N594
!#0 N595 P462 BLD 13 -1 FP BE Sec
!#0 N596 P463 MEMBAR
!#0 N597 P464 ST 1 0x1a Int BE Pri
!#0 N598 P465 MEMBAR
!#0 N599 P466 BST 8 0x3f8000a5 FP BE Pri
!#0 N600 P466 BST 9 0x3f8000a6 FP BE Pri
!#0 N601 P467 MEMBAR
!#0 N602 P468 REPLACEMENT 12 Int BE Sec
!#0 N603 P469 MEMBAR
!#0 N604 P470 BST 21 0x3f8000a7 FP BE Sec
!#0 N605 P470 BST 22 0x3f8000a8 FP BE Sec
!#A N604 N605
!#0 N606 P470 BST 23 0x3f8000a9 FP BE Sec
!#0 N607 P471 MEMBAR
!#0 N608 P472 BST 15 0x3f8000aa FP BE Pri
!#0 N609 P473 MEMBAR
!#0 N610 P474 IDC_FLIP 24 Int BE Pri
!#0 N611 P475 MEMBAR
!#0 N612 P476 BST 26 0x3f8000ab FP BE Pri
!#0 N613 P476 BST 27 0x3f8000ac FP BE Pri
!#0 N614 P477 MEMBAR
!#0 N615 P478 ST 27 0x3f8000ad FP BE Pri
!#0 N616 P479 LD 25 -1 Int BE Pri
!#0 N617 P480 REPLACEMENT 30 Int BE Pri
!#0 N618 P481 MEMBAR
!#0 N619 P482 BLD 26 -1 FP BE Pri
!#0 N620 P482 BLD 27 -1 FP BE Pri
!#0 N621 P483 MEMBAR
!#0 N622 P484 REPLACEMENT 20 Int BE Pri
!#0 N623 P485 MEMBAR
!#0 N624 P486 BST 17 0x3f8000ae FP BE Pri
!#0 N625 P487 MEMBAR
!#0 N626 P488 REPLACEMENT 0 Int BE Pri
!#0 N627 P489 ST 3 0x3f8000af FP BE Pri
!#0 N628 P490 REPLACEMENT 32 Int BE Pri
!#0 N629 P491 REPLACEMENT 19 Int BE Pri
!#0 N630 P492 ST 9 0x3f8000b0 FP BE Sec
!#0 N631 P493 IDC_FLIP 1 Int BE Pri
!#0 N632 P494 LD 2 -1 FP BE Pri
!#0 N633 P495 REPLACEMENT 10 Int BE Pri
!#0 N634 P496 REPLACEMENT 16 Int BE Pri
!#0 N635 P497 LD 19 -1 FP BE Pri
!#0 N636 P498 REPLACEMENT 19 Int BE Pri
!#0 N637 P499 MEMBAR
!#0 N638 P500 BLD 0 -1 FP BE Pri
!#0 N639 P500 BLD 1 -1 FP BE Pri
!#A N638 N639
!#0 N640 P500 BLD 2 -1 FP BE Pri
!#0 N641 P500 BLD 3 -1 FP BE Pri
!#0 N642 P500 BLD 4 -1 FP BE Pri
!#0 N643 P501 MEMBAR
!#0 N644 P502 REPLACEMENT 22 Int BE Pri
!#0 N645 P503 REPLACEMENT 14 Int BE Pri
!#0 N646 P504 IDC_FLIP 18 Int BE Pri
!#0 N647 P505 ST 9 0x1b Int BE Pri
!#0 N648 P506 REPLACEMENT 30 Int BE Pri
!#0 N649 P507 LD 4 -1 Int BE Sec
!#0 N650 P508 LD 5 -1 FP BE Pri
!#0 N651 P509 MEMBAR
!#0 N652 P510 BLD 17 -1 FP BE Pri
!#0 N653 P511 MEMBAR
!#0 N654 P512 ST 14 0x1c Int BE Sec
!#0 N655 P513 REPLACEMENT 22 Int BE Pri
!#0 N656 P514 REPLACEMENT 5 Int BE Nuc
!#0 N657 P515 MEMBAR
!#0 N658 P516 BST 5 0x3f8000b1 FP BE Pri
!#0 N659 P516 BST 6 0x3f8000b2 FP BE Pri
!#0 N660 P517 MEMBAR
!#0 N661 P518 BST 16 0x3f8000b3 FP BE Sec
!#0 N662 P519 MEMBAR
!#0 N663 P520 BLD 21 -1 FP BE Sec
!#0 N664 P520 BLD 22 -1 FP BE Sec
!#A N663 N664
!#0 N665 P520 BLD 23 -1 FP BE Sec
!#0 N666 P521 MEMBAR
!#0 N667 P522 BST 11 0x3f8000b4 FP BE Sec
!#0 N668 P522 BST 12 0x3f8000b5 FP BE Sec
!#A N667 N668
!#0 N669 P522 BST 13 0x3f8000b6 FP BE Sec
!#0 N670 P523 MEMBAR
!#0 N671 P524 REPLACEMENT 22 Int BE Pri
!#0 N672 P525 IDC_FLIP 31 Int BE Pri
!#0 N673 P526 MEMBAR
!#0 N674 P527 BLD 17 -1 FP BE Sec
!#0 N675 P528 MEMBAR
!#0 N676 P529 BLD 8 -1 FP BE Pri
!#0 N677 P529 BLD 9 -1 FP BE Pri
!#0 N678 P530 MEMBAR
!#0 N679 P531 REPLACEMENT 18 Int BE Pri
!#0 N680 P532 MEMBAR
!#0 N681 P533 BST 24 0x3f8000b7 FP BE Pri
!#0 N682 P533 BST 25 0x3f8000b8 FP BE Pri
!#0 N683 P534 MEMBAR
!#0 N684 P535 REPLACEMENT 20 Int BE Pri
!#0 N685 P536 MEMBAR
!#0 N686 P537 BST 21 0x3f8000b9 FP BE Pri
!#0 N687 P537 BST 22 0x3f8000ba FP BE Pri
!#A N686 N687
!#0 N688 P537 BST 23 0x3f8000bb FP BE Pri
!#0 N689 P538 MEMBAR
!#0 N690 P539 REPLACEMENT 27 Int BE Sec
!#0 N691 P540 MEMBAR
!#0 N692 P541 BST 30 0x3f8000bc FP BE Sec
!#0 N693 P542 MEMBAR
!#0 N694 P543 BST 8 0x3f8000bd FP BE Sec
!#0 N695 P543 BST 9 0x3f8000be FP BE Sec
!#0 N696 P544 MEMBAR
!#0 N697 P545 ST 17 0x3f8000bf FP BE Sec
!#0 N698 P546 MEMBAR
!#0 N699 P547 BST 28 0x3f8000c0 FP BE Pri
!#0 N700 P548 MEMBAR
!#0 N701 P549 LD 3 -1 Int BE Pri
!#0 N702 P550 ST 9 0x1d Int BE Pri
!#0 N703 P551 MEMBAR
!#0 N704 P552 BLD 21 -1 FP BE Pri
!#0 N705 P552 BLD 22 -1 FP BE Pri
!#A N704 N705
!#0 N706 P552 BLD 23 -1 FP BE Pri
!#0 N707 P553 MEMBAR
!#0 N708 P554 BLD 0 -1 FP BE Sec
!#0 N709 P554 BLD 1 -1 FP BE Sec
!#A N708 N709
!#0 N710 P554 BLD 2 -1 FP BE Sec
!#0 N711 P554 BLD 3 -1 FP BE Sec
!#0 N712 P554 BLD 4 -1 FP BE Sec
!#0 N713 P555 MEMBAR
!#0 N714 P556 REPLACEMENT 16 Int BE Pri
!#0 N715 P557 PREFETCH 17 Int BE Pri
!#0 N716 P558 MEMBAR
!#0 N717 P559 BLD 0 -1 FP BE Pri
!#0 N718 P559 BLD 1 -1 FP BE Pri
!#A N717 N718
!#0 N719 P559 BLD 2 -1 FP BE Pri
!#0 N720 P559 BLD 3 -1 FP BE Pri
!#0 N721 P559 BLD 4 -1 FP BE Pri
!#0 N722 P560 MEMBAR
!#0 N723 P561 BST 21 0x3f8000c1 FP BE Pri
!#0 N724 P561 BST 22 0x3f8000c2 FP BE Pri
!#A N723 N724
!#0 N725 P561 BST 23 0x3f8000c3 FP BE Pri
!#0 N726 P562 MEMBAR
!#0 N727 P563 PREFETCH 33 Int LE Pri
!#0 N728 P564 MEMBAR
!#0 N729 P565 BLD 11 -1 FP BE Pri
!#0 N730 P565 BLD 12 -1 FP BE Pri
!#A N729 N730
!#0 N731 P565 BLD 13 -1 FP BE Pri
!#0 N732 P566 MEMBAR
!#0 N733 P567 IDC_FLIP 11 Int BE Pri
!#0 N734 P568 REPLACEMENT 10 Int BE Pri
!#0 N735 P569 REPLACEMENT 8 Int BE Sec
!#0 N736 P570 MEMBAR
!#0 N737 P571 BLD 11 -1 FP BE Pri
!#0 N738 P571 BLD 12 -1 FP BE Pri
!#A N737 N738
!#0 N739 P571 BLD 13 -1 FP BE Pri
!#0 N740 P572 MEMBAR
!#0 N741 P573 LD 16 -1 Int BE Pri
!#0 N742 P574 ST 27 0x1e Int BE Pri
!#0 N743 P575 REPLACEMENT 12 Int BE Pri
!#0 N744 P576 IDC_FLIP 3 Int BE Pri
!#0 N745 P577 MEMBAR
!#0 N746 P578 BSTC 7 0x3f8000c4 FP BE Pri
!#0 N747 P579 MEMBAR
!#0 N748 P580 IDC_FLIP 4 Int BE Pri
!#0 N749 P581 REPLACEMENT 27 Int BE Pri
!#0 N750 P582 ST 31 0x3f8000c5 FP BE Pri
!#0 N751 P583 ST 15 0x3f8000c6 FP BE Pri
!#0 N752 P584 MEMBAR
!#0 N753 P585 BSTC 17 0x3f8000c7 FP BE Sec
!#0 N754 P586 MEMBAR
!#0 N755 P587 BSTC 0 0x3f8000c8 FP BE Pri
!#0 N756 P587 BSTC 1 0x3f8000c9 FP BE Pri
!#A N755 N756
!#0 N757 P587 BSTC 2 0x3f8000ca FP BE Pri
!#0 N758 P587 BSTC 3 0x3f8000cb FP BE Pri
!#0 N759 P587 BSTC 4 0x3f8000cc FP BE Pri
!#0 N760 P588 MEMBAR
!#0 N761 P589 LD 28 -1 FP BE Nuc
!#0 N762 P590 REPLACEMENT 20 Int BE Nuc
!#0 N763 P591 MEMBAR
!#0 N764 P592 BLD 19 -1 FP BE Pri
!#0 N765 P593 MEMBAR
!#0 N766 P594 REPLACEMENT 29 Int BE Pri
!#0 N767 P595 REPLACEMENT 17 Int BE Pri
!#0 N768 P596 MEMBAR
!#0 N769 P597 BST 8 0x3f8000cd FP BE Pri
!#0 N770 P597 BST 9 0x3f8000ce FP BE Pri
!#0 N771 P598 MEMBAR
!#0 N772 P599 IDC_FLIP 2 Int BE Pri
!#0 N773 P600 MEMBAR
!#0 N774 P601 BLD 26 -1 FP BE Pri
!#0 N775 P601 BLD 27 -1 FP BE Pri
!#0 N776 P602 MEMBAR
!#0 N777 P603 ST 33 0x1f Int BE Pri
!#0 N778 P604 LD 6 -1 Int BE Pri
!#0 N779 P605 MEMBAR
!#0 N780 P606 BLD 8 -1 FP BE Pri
!#0 N781 P606 BLD 9 -1 FP BE Pri
!#0 N782 P607 MEMBAR
!#0 N783 P608 REPLACEMENT 7 Int BE Pri
!#0 N784 P609 ST 17 0x3f8000cf FP BE Pri
!#0 N785 P610 REPLACEMENT 33 Int BE Sec
!#0 N786 P611 ST 15 0x3f8000d0 FP BE Sec
!#0 N787 P612 MEMBAR
!#0 N788 P613 ST 23 0x3f8000d1 FP BE Pri
!#0 N789 P614 MEMBAR
!#0 N790 P615 BST 32 0x3f8000d2 FP BE Sec
!#0 N791 P616 MEMBAR
!#0 N792 P617 BST 21 0x3f8000d3 FP BE Pri
!#0 N793 P617 BST 22 0x3f8000d4 FP BE Pri
!#A N792 N793
!#0 N794 P617 BST 23 0x3f8000d5 FP BE Pri
!#0 N795 P618 MEMBAR
!#0 N796 P619 REPLACEMENT 19 Int BE Pri
!#0 N797 P620 MEMBAR
!#0 N798 P621 BLD 11 -1 FP BE Pri
!#0 N799 P621 BLD 12 -1 FP BE Pri
!#A N798 N799
!#0 N800 P621 BLD 13 -1 FP BE Pri
!#0 N801 P622 MEMBAR
!#0 N802 P623 BLD 0 -1 FP BE Pri
!#0 N803 P623 BLD 1 -1 FP BE Pri
!#A N802 N803
!#0 N804 P623 BLD 2 -1 FP BE Pri
!#0 N805 P623 BLD 3 -1 FP BE Pri
!#0 N806 P623 BLD 4 -1 FP BE Pri
!#0 N807 P624 MEMBAR
!#0 N808 P625 REPLACEMENT 1 Int BE Pri
!#0 N809 P626 MEMBAR
!#0 N810 P627 BST 0 0x3f8000d6 FP BE Pri
!#0 N811 P627 BST 1 0x3f8000d7 FP BE Pri
!#A N810 N811
!#0 N812 P627 BST 2 0x3f8000d8 FP BE Pri
!#0 N813 P627 BST 3 0x3f8000d9 FP BE Pri
!#0 N814 P627 BST 4 0x3f8000da FP BE Pri
!#0 N815 P628 MEMBAR
!#0 N816 P629 REPLACEMENT 12 Int BE Pri
!#0 N817 P630 REPLACEMENT 30 Int BE Pri
!#0 N818 P631 LD 16 -1 FP BE Pri
!#0 N819 P632 IDC_FLIP 4 Int BE Pri
!#0 N820 P633 MEMBAR
!#0 N821 P634 BST 0 0x3f8000db FP BE Pri
!#0 N822 P634 BST 1 0x3f8000dc FP BE Pri
!#A N821 N822
!#0 N823 P634 BST 2 0x3f8000dd FP BE Pri
!#0 N824 P634 BST 3 0x3f8000de FP BE Pri
!#0 N825 P634 BST 4 0x3f8000df FP BE Pri
!#0 N826 P635 MEMBAR
!#0 N827 P636 ST 26 0x3f8000e0 FP BE Sec
!#0 N828 P637 ST 1 0x20 Int BE Pri
!#0 N829 P638 MEMBAR
!#0 N830 P639 BLD 26 -1 FP BE Pri
!#0 N831 P639 BLD 27 -1 FP BE Pri
!#0 N832 P640 MEMBAR
!#0 N833 P641 REPLACEMENT 28 Int BE Sec
!#0 N834 P642 MEMBAR
!#0 N835 P643 BLD 19 -1 FP BE Pri
!#0 N836 P644 MEMBAR
!#0 N837 P645 ST 0 0x21 Int BE Pri
!#0 N838 P646 MEMBAR
!#0 N839 P647 BST 33 0x3f8000e1 FP BE Pri
!#0 N840 P648 MEMBAR
!#0 N841 P649 BLD 29 -1 FP BE Pri
!#0 N842 P650 MEMBAR
!#0 N843 P651 ST 8 0x3f8000e2 FP BE Pri
!#0 N844 P652 LD 7 -1 FP BE Pri
!#0 N845 P653 ST 8 0x22 Int BE Pri
!#0 N846 P654 LD 5 -1 Int BE Pri
!#0 N847 P655 MEMBAR
!#0 N848 P656 BST 11 0x3f8000e3 FP BE Pri
!#0 N849 P656 BST 12 0x3f8000e4 FP BE Pri
!#A N848 N849
!#0 N850 P656 BST 13 0x3f8000e5 FP BE Pri
!#0 N851 P657 MEMBAR
!#0 N852 P658 BLD 5 -1 FP BE Pri
!#0 N853 P658 BLD 6 -1 FP BE Pri
!#0 N854 P659 MEMBAR
!#0 N855 P660 BLD 11 -1 FP BE Pri
!#0 N856 P660 BLD 12 -1 FP BE Pri
!#A N855 N856
!#0 N857 P660 BLD 13 -1 FP BE Pri
!#0 N858 P661 MEMBAR
!#0 N859 P662 BST 32 0x3f8000e6 FP BE Pri
!#0 N860 P663 MEMBAR
!#0 N861 P664 LD 26 -1 FP BE Pri
!#0 N862 P665 REPLACEMENT 33 Int BE Pri
!#0 N863 P666 REPLACEMENT 15 Int BE Pri
!#0 N864 P667 LD 24 -1 Int BE Sec
!#0 N865 P668 MEMBAR
!#0 N866 P669 BST 21 0x3f8000e7 FP BE Pri
!#0 N867 P669 BST 22 0x3f8000e8 FP BE Pri
!#A N866 N867
!#0 N868 P669 BST 23 0x3f8000e9 FP BE Pri
!#0 N869 P670 MEMBAR
!#0 N870 P671 REPLACEMENT 7 Int BE Pri
!#0 N871 P672 MEMBAR
!#0 N872 P673 BSTC 14 0x3f8000ea FP BE Pri
!#0 N873 P674 MEMBAR
!#0 N874 P675 LD 25 -1 FP BE Pri
!#0 N875 P676 PREFETCH 22 Int BE Pri
!#0 N876 P677 REPLACEMENT 31 Int BE Nuc
!#0 N877 P678 REPLACEMENT 28 Int BE Pri
!#0 N878 P679 MEMBAR
!#0 N879 P680 BST 21 0x3f8000eb FP BE Pri
!#0 N880 P680 BST 22 0x3f8000ec FP BE Pri
!#A N879 N880
!#0 N881 P680 BST 23 0x3f8000ed FP BE Pri
!#0 N882 P681 MEMBAR
!#0 N883 P682 REPLACEMENT 31 Int BE Pri
!#0 N884 P683 MEMBAR
!#0 N885 P684 BLD 21 -1 FP BE Pri
!#0 N886 P684 BLD 22 -1 FP BE Pri
!#A N885 N886
!#0 N887 P684 BLD 23 -1 FP BE Pri
!#0 N888 P685 MEMBAR
!#0 N889 P686 ST 19 0x3f8000ee FP BE Pri
!#0 N890 P687 MEMBAR
!#0 N891 P688 BSTC 24 0x3f8000ef FP BE Sec
!#0 N892 P688 BSTC 25 0x3f8000f0 FP BE Sec
!#0 N893 P689 MEMBAR
!#0 N894 P690 ST 25 0x23 Int BE Sec
!#0 N895 P691 LD 22 -1 FP BE Pri
!#0 N896 P692 REPLACEMENT 27 Int BE Pri
!#0 N897 P693 LD 14 -1 FP BE Sec
!#0 N898 P694 MEMBAR
!#0 N899 P695 BST 14 0x3f8000f1 FP BE Pri
!#0 N900 P696 MEMBAR
!#0 N901 P697 LD 31 -1 Int BE Pri
!#0 N902 P698 LD 22 -1 Int BE Pri
!#0 N903 P699 REPLACEMENT 15 Int BE Sec
!#0 N904 P700 LD 0 -1 Int BE Sec Loop_exit
!#0 N905 P1 REPLACEMENT 23 Int BE Pri Loop_entry
!#0 N906 P2 ST 33 0x3f8000f2 FP BE Pri
!#0 N907 P3 LD 8 -1 FP BE Pri
!#0 N908 P4 REPLACEMENT 3 Int BE Pri
!#0 N909 P5 REPLACEMENT 1 Int BE Pri
!#0 N910 P6 MEMBAR
!#0 N911 P7 BST 8 0x3f8000f3 FP BE Pri
!#0 N912 P7 BST 9 0x3f8000f4 FP BE Pri
!#0 N913 P8 MEMBAR
!#0 N914 P9 ST 7 0x24 Int BE Pri
!#0 N915 P10 MEMBAR
!#0 N916 P11 BST 8 0x3f8000f5 FP BE Pri
!#0 N917 P11 BST 9 0x3f8000f6 FP BE Pri
!#0 N918 P12 MEMBAR
!#0 N919 P13 IDC_FLIP 16 Int BE Pri
!#0 N920 P14 MEMBAR
!#0 N921 P15 BST 17 0x3f8000f7 FP BE Pri
!#0 N922 P16 MEMBAR
!#0 N923 P17 LD 32 -1 Int BE Pri
!#0 N924 P18 ST 1 0x3f8000f8 FP BE Pri
!#0 N925 P19 REPLACEMENT 3 Int BE Pri
!#0 N926 P20 MEMBAR
!#0 N927 P21 BSTC 30 0x3f8000f9 FP BE Pri
!#0 N928 P22 MEMBAR
!#0 N929 P23 REPLACEMENT 29 Int BE Pri
!#0 N930 P24 REPLACEMENT 20 Int BE Pri
!#0 N931 P25 MEMBAR
!#0 N932 P26 BST 0 0x3f8000fa FP BE Pri
!#0 N933 P26 BST 1 0x3f8000fb FP BE Pri
!#A N932 N933
!#0 N934 P26 BST 2 0x3f8000fc FP BE Pri
!#0 N935 P26 BST 3 0x3f8000fd FP BE Pri
!#0 N936 P26 BST 4 0x3f8000fe FP BE Pri
!#0 N937 P27 MEMBAR
!#0 N938 P28 ST 10 0x25 Int BE Pri
!#0 N939 P29 LD 1 -1 Int BE Pri
!#0 N940 P30 MEMBAR
!#0 N941 P31 BST 0 0x3f8000ff FP BE Pri
!#0 N942 P31 BST 1 0x3f800100 FP BE Pri
!#A N941 N942
!#0 N943 P31 BST 2 0x3f800101 FP BE Pri
!#0 N944 P31 BST 3 0x3f800102 FP BE Pri
!#0 N945 P31 BST 4 0x3f800103 FP BE Pri
!#0 N946 P32 MEMBAR
!#0 N947 P33 BST 7 0x3f800104 FP BE Pri
!#0 N948 P34 MEMBAR
!#0 N949 P35 BST 0 0x3f800105 FP BE Pri
!#0 N950 P35 BST 1 0x3f800106 FP BE Pri
!#A N949 N950
!#0 N951 P35 BST 2 0x3f800107 FP BE Pri
!#0 N952 P35 BST 3 0x3f800108 FP BE Pri
!#0 N953 P35 BST 4 0x3f800109 FP BE Pri
!#0 N954 P36 MEMBAR
!#0 N955 P37 BSTC 32 0x3f80010a FP BE Sec
!#0 N956 P38 MEMBAR
!#0 N957 P39 REPLACEMENT 6 Int BE Sec
!#0 N958 P40 IDC_FLIP 25 Int BE Pri
!#0 N959 P41 ST 21 0x26 Int BE Nuc
!#0 N960 P42 MEMBAR
!#0 N961 P43 BST 28 0x3f80010b FP BE Pri
!#0 N962 P44 MEMBAR
!#0 N963 P45 BST 33 0x3f80010c FP BE Sec
!#0 N964 P46 MEMBAR
!#0 N965 P47 BLD 33 -1 FP BE Pri
!#0 N966 P48 MEMBAR
!#0 N967 P49 IDC_FLIP 29 Int BE Pri
!#0 N968 P50 MEMBAR
!#0 N969 P51 BST 7 0x3f80010d FP BE Pri
!#0 N970 P52 MEMBAR
!#0 N971 P53 LD 14 -1 FP BE Nuc
!#0 N972 P54 MEMBAR
!#0 N973 P55 BST 0 0x3f80010e FP BE Pri
!#0 N974 P55 BST 1 0x3f80010f FP BE Pri
!#A N973 N974
!#0 N975 P55 BST 2 0x3f800110 FP BE Pri
!#0 N976 P55 BST 3 0x3f800111 FP BE Pri
!#0 N977 P55 BST 4 0x3f800112 FP BE Pri
!#0 N978 P56 MEMBAR
!#0 N979 P57 LD 13 -1 FP BE Pri
!#0 N980 P58 MEMBAR
!#0 N981 P59 BST 24 0x3f800113 FP BE Pri
!#0 N982 P59 BST 25 0x3f800114 FP BE Pri
!#0 N983 P60 MEMBAR
!#0 N984 P61 REPLACEMENT 25 Int BE Pri
!#0 N985 P62 ST 23 0x3f800115 FP BE Pri
!#0 N986 P63 LD 16 -1 FP BE Pri
!#0 N987 P64 REPLACEMENT 27 Int BE Pri
!#0 N988 P65 REPLACEMENT 17 Int BE Pri
!#0 N989 P66 IDC_FLIP 16 Int BE Pri
!#0 N990 P67 MEMBAR
!#0 N991 P68 BLD 19 -1 FP BE Pri
!#0 N992 P69 MEMBAR
!#0 N993 P70 BLD 14 -1 FP BE Sec
!#0 N994 P71 MEMBAR
!#0 N995 P72 ST 9 0x3f800116 FP BE Pri
!#0 N996 P73 REPLACEMENT 18 Int BE Pri
!#0 N997 P74 ST 23 0x27 Int BE Sec
!#0 N998 P75 LD 33 -1 FP BE Pri
!#0 N999 P76 REPLACEMENT 3 Int BE Sec
!#0 N1000 P77 REPLACEMENT 33 Int BE Pri
!#0 N1001 P78 REPLACEMENT 3 Int BE Nuc
!#0 N1002 P79 LD 25 -1 Int BE Sec
!#0 N1003 P80 MEMBAR
!#0 N1004 P81 BLD 26 -1 FP BE Pri
!#0 N1005 P81 BLD 27 -1 FP BE Pri
!#0 N1006 P82 MEMBAR
!#0 N1007 P83 BST 10 0x3f800117 FP BE Pri
!#0 N1008 P84 MEMBAR
!#0 N1009 P85 ST 26 0x28 Int BE Sec
!#0 N1010 P86 MEMBAR
!#0 N1011 P87 BST 8 0x3f800118 FP BE Pri
!#0 N1012 P87 BST 9 0x3f800119 FP BE Pri
!#0 N1013 P88 MEMBAR
!#0 N1014 P89 IDC_FLIP 32 Int BE Pri
!#0 N1015 P90 MEMBAR
!#0 N1016 P91 BSTC 10 0x3f80011a FP BE Pri
!#0 N1017 P92 MEMBAR
!#0 N1018 P93 BLD 24 -1 FP BE Sec
!#0 N1019 P93 BLD 25 -1 FP BE Sec
!#0 N1020 P94 MEMBAR
!#0 N1021 P95 BLD 14 -1 FP BE Pri
!#0 N1022 P96 MEMBAR
!#0 N1023 P97 BST 24 0x3f80011b FP BE Pri
!#0 N1024 P97 BST 25 0x3f80011c FP BE Pri
!#0 N1025 P98 MEMBAR
!#0 N1026 P99 LD 19 -1 Int BE Pri
!#0 N1027 P100 ST 9 0x3f80011d FP BE Nuc
!#0 N1028 P101 MEMBAR
!#0 N1029 P102 BLD 8 -1 FP BE Pri
!#0 N1030 P102 BLD 9 -1 FP BE Pri
!#0 N1031 P103 MEMBAR
!#0 N1032 P104 ST 13 0x3f80011e FP BE Pri
!#0 N1033 P105 MEMBAR
!#0 N1034 P106 BST 26 0x3f80011f FP BE Pri
!#0 N1035 P106 BST 27 0x3f800120 FP BE Pri
!#0 N1036 P107 MEMBAR
!#0 N1037 P108 ST 2 0x3f800121 FP BE Pri
!#0 N1038 P109 MEMBAR
!#0 N1039 P110 BST 32 0x3f800122 FP BE Pri
!#0 N1040 P111 MEMBAR
!#0 N1041 P112 LD 24 -1 FP BE Pri
!#0 N1042 P113 ST 28 0x3f800123 FP BE Nuc
!#0 N1043 P114 MEMBAR
!#0 N1044 P115 BLD 0 -1 FP BE Pri
!#0 N1045 P115 BLD 1 -1 FP BE Pri
!#A N1044 N1045
!#0 N1046 P115 BLD 2 -1 FP BE Pri
!#0 N1047 P115 BLD 3 -1 FP BE Pri
!#0 N1048 P115 BLD 4 -1 FP BE Pri
!#0 N1049 P116 MEMBAR
!#0 N1050 P117 REPLACEMENT 28 Int BE Pri
!#0 N1051 P118 REPLACEMENT 4 Int BE Pri
!#0 N1052 P119 LD 9 -1 FP BE Sec
!#0 N1053 P120 MEMBAR
!#0 N1054 P121 BST 19 0x3f800124 FP BE Pri
!#0 N1055 P122 MEMBAR
!#0 N1056 P123 BLD 33 -1 FP BE Pri
!#0 N1057 P124 MEMBAR
!#0 N1058 P125 LD 18 -1 FP BE Nuc
!#0 N1059 P126 ST 11 0x29 Int BE Pri
!#0 N1060 P127 REPLACEMENT 31 Int BE Pri
!#0 N1061 P128 REPLACEMENT 9 Int BE Pri
!#0 N1062 P129 REPLACEMENT 24 Int BE Nuc
!#0 N1063 P130 REPLACEMENT 3 Int BE Sec
!#0 N1064 P131 ST 29 0x2a Int BE Sec
!#0 N1065 P132 MEMBAR
!#0 N1066 P133 BST 29 0x3f800125 FP BE Pri
!#0 N1067 P134 MEMBAR
!#0 N1068 P135 BST 33 0x3f800126 FP BE Pri
!#0 N1069 P136 MEMBAR
!#0 N1070 P137 LD 28 -1 Int BE Pri
!#0 N1071 P138 MEMBAR
!#0 N1072 P139 BLD 21 -1 FP BE Pri
!#0 N1073 P139 BLD 22 -1 FP BE Pri
!#A N1072 N1073
!#0 N1074 P139 BLD 23 -1 FP BE Pri
!#0 N1075 P140 MEMBAR
!#0 N1076 P141 BLD 7 -1 FP BE Pri
!#0 N1077 P142 MEMBAR
!#0 N1078 P143 REPLACEMENT 14 Int BE Pri
!#0 N1079 P144 IDC_FLIP 1 Int BE Pri
!#0 N1080 P145 ST 28 0x2b Int BE Sec
!#0 N1081 P146 MEMBAR
!#0 N1082 P147 BLD 11 -1 FP BE Pri
!#0 N1083 P147 BLD 12 -1 FP BE Pri
!#A N1082 N1083
!#0 N1084 P147 BLD 13 -1 FP BE Pri
!#0 N1085 P148 MEMBAR
!#0 N1086 P149 BST 20 0x3f800127 FP BE Pri
!#0 N1087 P150 MEMBAR
!#0 N1088 P151 BLD 33 -1 FP BE Pri
!#0 N1089 P152 MEMBAR
!#0 N1090 P153 LD 29 -1 Int BE Nuc
!#0 N1091 P154 LD 1 -1 Int BE Pri
!#0 N1092 P155 LD 25 -1 FP BE Pri
!#0 N1093 P156 LD 23 -1 FP BE Pri
!#0 N1094 P157 MEMBAR
!#0 N1095 P158 BLD 0 -1 FP BE Pri
!#0 N1096 P158 BLD 1 -1 FP BE Pri
!#A N1095 N1096
!#0 N1097 P158 BLD 2 -1 FP BE Pri
!#0 N1098 P158 BLD 3 -1 FP BE Pri
!#0 N1099 P158 BLD 4 -1 FP BE Pri
!#0 N1100 P159 MEMBAR
!#0 N1101 P160 REPLACEMENT 5 Int BE Pri
!#0 N1102 P161 LD 32 -1 Int BE Pri
!#0 N1103 P162 ST 4 0x3f800128 FP BE Pri
!#0 N1104 P163 MEMBAR
!#0 N1105 P164 BST 5 0x3f800129 FP BE Sec
!#0 N1106 P164 BST 6 0x3f80012a FP BE Sec
!#0 N1107 P165 MEMBAR
!#0 N1108 P166 BST 21 0x3f80012b FP BE Pri
!#0 N1109 P166 BST 22 0x3f80012c FP BE Pri
!#A N1108 N1109
!#0 N1110 P166 BST 23 0x3f80012d FP BE Pri
!#0 N1111 P167 MEMBAR
!#0 N1112 P168 BST 17 0x3f80012e FP BE Pri
!#0 N1113 P169 MEMBAR
!#0 N1114 P170 LD 32 -1 FP BE Nuc
!#0 N1115 P171 IDC_FLIP 15 Int BE Pri
!#0 N1116 P172 LD 11 -1 FP BE Sec
!#0 N1117 P173 MEMBAR
!#0 N1118 P174 BST 11 0x3f80012f FP BE Pri
!#0 N1119 P174 BST 12 0x3f800130 FP BE Pri
!#A N1118 N1119
!#0 N1120 P174 BST 13 0x3f800131 FP BE Pri
!#0 N1121 P175 MEMBAR
!#0 N1122 P176 BST 16 0x3f800132 FP BE Pri
!#0 N1123 P177 MEMBAR
!#0 N1124 P178 PREFETCH 22 Int BE Pri
!#0 N1125 P179 MEMBAR
!#0 N1126 P180 BLD 0 -1 FP BE Pri
!#0 N1127 P180 BLD 1 -1 FP BE Pri
!#A N1126 N1127
!#0 N1128 P180 BLD 2 -1 FP BE Pri
!#0 N1129 P180 BLD 3 -1 FP BE Pri
!#0 N1130 P180 BLD 4 -1 FP BE Pri
!#0 N1131 P181 MEMBAR
!#0 N1132 P182 REPLACEMENT 19 Int BE Pri
!#0 N1133 P183 ST 6 0x2c Int BE Pri
!#0 N1134 P184 ST 7 0x2d Int BE Pri
!#0 N1135 P185 MEMBAR
!#0 N1136 P186 BLD 19 -1 FP BE Pri
!#0 N1137 P187 MEMBAR
!#0 N1138 P188 REPLACEMENT 30 Int BE Pri
!#0 N1139 P189 REPLACEMENT 26 Int BE Pri
!#0 N1140 P190 IDC_FLIP 19 Int BE Pri
!#0 N1141 P191 ST 30 0x3f800133 FP BE Pri
!#0 N1142 P192 REPLACEMENT 26 Int BE Pri
!#0 N1143 P193 REPLACEMENT 14 Int BE Pri
!#0 N1144 P194 LD 23 -1 Int BE Sec
!#0 N1145 P195 MEMBAR
!#0 N1146 P196 BLD 33 -1 FP BE Pri
!#0 N1147 P197 MEMBAR
!#0 N1148 P198 BSTC 0 0x3f800134 FP BE Pri
!#0 N1149 P198 BSTC 1 0x3f800135 FP BE Pri
!#A N1148 N1149
!#0 N1150 P198 BSTC 2 0x3f800136 FP BE Pri
!#0 N1151 P198 BSTC 3 0x3f800137 FP BE Pri
!#0 N1152 P198 BSTC 4 0x3f800138 FP BE Pri
!#0 N1153 P199 MEMBAR
!#0 N1154 P200 LD 0 -1 FP BE Pri
!#0 N1155 P201 MEMBAR
!#0 N1156 P202 BST 8 0x3f800139 FP BE Pri
!#0 N1157 P202 BST 9 0x3f80013a FP BE Pri
!#0 N1158 P203 MEMBAR
!#0 N1159 P204 ST 15 0x2e Int BE Pri
!#0 N1160 P205 MEMBAR
!#0 N1161 P206 BST 19 0x3f80013b FP BE Pri
!#0 N1162 P207 MEMBAR
!#0 N1163 P208 BST 11 0x3f80013c FP BE Pri
!#0 N1164 P208 BST 12 0x3f80013d FP BE Pri
!#A N1163 N1164
!#0 N1165 P208 BST 13 0x3f80013e FP BE Pri
!#0 N1166 P209 MEMBAR
!#0 N1167 P210 ST 16 0x3f80013f FP BE Pri
!#0 N1168 P211 ST 24 0x3f800140 FP BE Pri
!#0 N1169 P212 MEMBAR
!#0 N1170 P213 BST 32 0x3f800141 FP BE Sec
!#0 N1171 P214 MEMBAR
!#0 N1172 P215 REPLACEMENT 12 Int BE Pri
!#0 N1173 P216 REPLACEMENT 13 Int BE Nuc
!#0 N1174 P217 MEMBAR
!#0 N1175 P218 BLD 33 -1 FP BE Pri
!#0 N1176 P219 MEMBAR
!#0 N1177 P220 BLD 5 -1 FP BE Pri
!#0 N1178 P220 BLD 6 -1 FP BE Pri
!#0 N1179 P221 MEMBAR
!#0 N1180 P222 BLD 0 -1 FP BE Pri
!#0 N1181 P222 BLD 1 -1 FP BE Pri
!#A N1180 N1181
!#0 N1182 P222 BLD 2 -1 FP BE Pri
!#0 N1183 P222 BLD 3 -1 FP BE Pri
!#0 N1184 P222 BLD 4 -1 FP BE Pri
!#0 N1185 P223 MEMBAR
!#0 N1186 P224 LD 10 -1 Int BE Pri
!#0 N1187 P225 REPLACEMENT 8 Int BE Pri
!#0 N1188 P226 MEMBAR
!#0 N1189 P227 BST 0 0x3f800142 FP BE Pri
!#0 N1190 P227 BST 1 0x3f800143 FP BE Pri
!#A N1189 N1190
!#0 N1191 P227 BST 2 0x3f800144 FP BE Pri
!#0 N1192 P227 BST 3 0x3f800145 FP BE Pri
!#0 N1193 P227 BST 4 0x3f800146 FP BE Pri
!#0 N1194 P228 MEMBAR
!#0 N1195 P229 BLD 26 -1 FP BE Pri
!#0 N1196 P229 BLD 27 -1 FP BE Pri
!#0 N1197 P230 MEMBAR
!#0 N1198 P231 BST 31 0x3f800147 FP BE Pri
!#0 N1199 P232 MEMBAR
!#0 N1200 P233 REPLACEMENT 5 Int BE Pri
!#0 N1201 P234 REPLACEMENT 2 Int BE Sec
!#0 N1202 P235 REPLACEMENT 7 Int BE Pri
!#0 N1203 P236 REPLACEMENT 3 Int BE Pri
!#0 N1204 P237 ST 29 0x2f Int BE Pri
!#0 N1205 P238 MEMBAR
!#0 N1206 P239 BSTC 14 0x3f800148 FP BE Pri
!#0 N1207 P240 MEMBAR
!#0 N1208 P241 BST 19 0x3f800149 FP BE Pri
!#0 N1209 P242 MEMBAR
!#0 N1210 P243 BLD 26 -1 FP BE Pri
!#0 N1211 P243 BLD 27 -1 FP BE Pri
!#0 N1212 P244 MEMBAR
!#0 N1213 P245 BST 11 0x3f80014a FP BE Pri
!#0 N1214 P245 BST 12 0x3f80014b FP BE Pri
!#A N1213 N1214
!#0 N1215 P245 BST 13 0x3f80014c FP BE Pri
!#0 N1216 P246 MEMBAR
!#0 N1217 P247 LD 5 -1 FP BE Pri
!#0 N1218 P248 LD 4 -1 Int BE Pri
!#0 N1219 P249 MEMBAR
!#0 N1220 P250 BST 8 0x3f80014d FP BE Pri
!#0 N1221 P250 BST 9 0x3f80014e FP BE Pri
!#0 N1222 P251 MEMBAR
!#0 N1223 P252 BSTC 0 0x3f80014f FP BE Sec
!#0 N1224 P252 BSTC 1 0x3f800150 FP BE Sec
!#A N1223 N1224
!#0 N1225 P252 BSTC 2 0x3f800151 FP BE Sec
!#0 N1226 P252 BSTC 3 0x3f800152 FP BE Sec
!#0 N1227 P252 BSTC 4 0x3f800153 FP BE Sec
!#0 N1228 P253 MEMBAR
!#0 N1229 P254 ST 6 0x3f800154 FP BE Pri
!#0 N1230 P255 ST 31 0x3f800155 FP BE Pri
!#0 N1231 P256 REPLACEMENT 22 Int BE Pri
!#0 N1232 P257 MEMBAR
!#0 N1233 P258 BST 0 0x3f800156 FP BE Pri
!#0 N1234 P258 BST 1 0x3f800157 FP BE Pri
!#A N1233 N1234
!#0 N1235 P258 BST 2 0x3f800158 FP BE Pri
!#0 N1236 P258 BST 3 0x3f800159 FP BE Pri
!#0 N1237 P258 BST 4 0x3f80015a FP BE Pri
!#0 N1238 P259 MEMBAR
!#0 N1239 P260 BST 16 0x3f80015b FP BE Pri
!#0 N1240 P261 MEMBAR
!#0 N1241 P262 BLD 8 -1 FP BE Pri
!#0 N1242 P262 BLD 9 -1 FP BE Pri
!#0 N1243 P263 MEMBAR
!#0 N1244 P264 BLD 19 -1 FP BE Pri
!#0 N1245 P265 MEMBAR
!#0 N1246 P266 FLUSHI 29 Int BE Pri
!#0 N1247 P267 ST 22 0x30 Int BE Pri
!#0 N1248 P268 MEMBAR
!#0 N1249 P269 BSTC 0 0x3f80015c FP BE Pri
!#0 N1250 P269 BSTC 1 0x3f80015d FP BE Pri
!#A N1249 N1250
!#0 N1251 P269 BSTC 2 0x3f80015e FP BE Pri
!#0 N1252 P269 BSTC 3 0x3f80015f FP BE Pri
!#0 N1253 P269 BSTC 4 0x3f800160 FP BE Pri
!#0 N1254 P270 MEMBAR
!#0 N1255 P271 LD 16 -1 FP BE Pri
!#0 N1256 P272 ST 32 0x3f800161 FP BE Pri
!#0 N1257 P273 ST 32 0x3f800162 FP BE Sec
!#0 N1258 P274 MEMBAR
!#0 N1259 P275 BST 21 0x3f800163 FP BE Pri
!#0 N1260 P275 BST 22 0x3f800164 FP BE Pri
!#A N1259 N1260
!#0 N1261 P275 BST 23 0x3f800165 FP BE Pri
!#0 N1262 P276 MEMBAR
!#0 N1263 P277 ST 7 0x31 Int BE Pri
!#0 N1264 P278 LD 29 -1 Int BE Sec
!#0 N1265 P279 LD 31 -1 FP BE Pri
!#0 N1266 P280 REPLACEMENT 6 Int BE Pri
!#0 N1267 P281 REPLACEMENT 9 Int BE Pri
!#0 N1268 P282 REPLACEMENT 11 Int BE Pri
!#0 N1269 P283 MEMBAR
!#0 N1270 P284 BLD 32 -1 FP BE Sec
!#0 N1271 P285 MEMBAR
!#0 N1272 P286 PREFETCH 15 Int LE Pri
!#0 N1273 P287 ST 32 0x32 Int LE Pri
!#0 N1274 P288 LD 28 -1 FP BE Pri
!#0 N1275 P289 REPLACEMENT 12 Int BE Pri
!#0 N1276 P290 MEMBAR
!#0 N1277 P291 BSTC 0 0x3f800166 FP BE Pri
!#0 N1278 P291 BSTC 1 0x3f800167 FP BE Pri
!#A N1277 N1278
!#0 N1279 P291 BSTC 2 0x3f800168 FP BE Pri
!#0 N1280 P291 BSTC 3 0x3f800169 FP BE Pri
!#0 N1281 P291 BSTC 4 0x3f80016a FP BE Pri
!#0 N1282 P292 MEMBAR
!#0 N1283 P293 IDC_FLIP 9 Int BE Pri
!#0 N1284 P294 REPLACEMENT 17 Int BE Sec
!#0 N1285 P295 REPLACEMENT 11 Int BE Sec
!#0 N1286 P296 ST 27 0x33 Int BE Sec
!#0 N1287 P297 MEMBAR
!#0 N1288 P298 BST 15 0x3f80016b FP BE Sec
!#0 N1289 P299 MEMBAR
!#0 N1290 P300 REPLACEMENT 28 Int BE Pri
!#0 N1291 P301 MEMBAR
!#0 N1292 P302 BST 31 0x3f80016c FP BE Pri
!#0 N1293 P303 MEMBAR
!#0 N1294 P304 ST 20 0x34 Int BE Pri
!#0 N1295 P305 LD 1 -1 Int BE Pri
!#0 N1296 P306 LD 10 -1 FP BE Pri
!#0 N1297 P307 REPLACEMENT 20 Int BE Nuc
!#0 N1298 P308 LD 15 -1 FP BE Pri
!#0 N1299 P309 MEMBAR
!#0 N1300 P310 BLD 0 -1 FP BE Pri
!#0 N1301 P310 BLD 1 -1 FP BE Pri
!#A N1300 N1301
!#0 N1302 P310 BLD 2 -1 FP BE Pri
!#0 N1303 P310 BLD 3 -1 FP BE Pri
!#0 N1304 P310 BLD 4 -1 FP BE Pri
!#0 N1305 P311 MEMBAR
!#0 N1306 P312 REPLACEMENT 16 Int BE Pri
!#0 N1307 P313 LD 15 -1 Int BE Pri
!#0 N1308 P314 MEMBAR
!#0 N1309 P315 BLD 0 -1 FP BE Pri
!#0 N1310 P315 BLD 1 -1 FP BE Pri
!#A N1309 N1310
!#0 N1311 P315 BLD 2 -1 FP BE Pri
!#0 N1312 P315 BLD 3 -1 FP BE Pri
!#0 N1313 P315 BLD 4 -1 FP BE Pri
!#0 N1314 P316 MEMBAR
!#0 N1315 P317 ST 21 0x35 Int BE Pri
!#0 N1316 P318 LD 8 -1 FP BE Sec
!#0 N1317 P319 REPLACEMENT 13 Int BE Sec
!#0 N1318 P320 ST 33 0x3f80016d FP BE Pri
!#0 N1319 P321 LD 0 -1 Int BE Pri
!#0 N1320 P322 MEMBAR
!#0 N1321 P323 BLD 11 -1 FP BE Pri
!#0 N1322 P323 BLD 12 -1 FP BE Pri
!#A N1321 N1322
!#0 N1323 P323 BLD 13 -1 FP BE Pri
!#0 N1324 P324 MEMBAR
!#0 N1325 P325 PREFETCH 14 Int BE Pri
!#0 N1326 P326 REPLACEMENT 25 Int BE Pri
!#0 N1327 P327 REPLACEMENT 12 Int BE Pri
!#0 N1328 P328 MEMBAR
!#0 N1329 P329 BLD 0 -1 FP BE Sec
!#0 N1330 P329 BLD 1 -1 FP BE Sec
!#A N1329 N1330
!#0 N1331 P329 BLD 2 -1 FP BE Sec
!#0 N1332 P329 BLD 3 -1 FP BE Sec
!#0 N1333 P329 BLD 4 -1 FP BE Sec
!#0 N1334 P330 MEMBAR
!#0 N1335 P331 BLD 33 -1 FP BE Pri
!#0 N1336 P332 MEMBAR
!#0 N1337 P333 IDC_FLIP 25 Int BE Pri
!#0 N1338 P334 MEMBAR
!#0 N1339 P335 BLD 0 -1 FP BE Pri
!#0 N1340 P335 BLD 1 -1 FP BE Pri
!#A N1339 N1340
!#0 N1341 P335 BLD 2 -1 FP BE Pri
!#0 N1342 P335 BLD 3 -1 FP BE Pri
!#0 N1343 P335 BLD 4 -1 FP BE Pri
!#0 N1344 P336 MEMBAR
!#0 N1345 P337 REPLACEMENT 15 Int BE Pri
!#0 N1346 P338 REPLACEMENT 30 Int BE Pri
!#0 N1347 P339 MEMBAR
!#0 N1348 P340 BLD 11 -1 FP BE Pri
!#0 N1349 P340 BLD 12 -1 FP BE Pri
!#A N1348 N1349
!#0 N1350 P340 BLD 13 -1 FP BE Pri
!#0 N1351 P341 MEMBAR
!#0 N1352 P342 REPLACEMENT 32 Int BE Nuc
!#0 N1353 P343 MEMBAR
!#0 N1354 P344 BST 0 0x3f80016e FP BE Pri
!#0 N1355 P344 BST 1 0x3f80016f FP BE Pri
!#A N1354 N1355
!#0 N1356 P344 BST 2 0x3f800170 FP BE Pri
!#0 N1357 P344 BST 3 0x3f800171 FP BE Pri
!#0 N1358 P344 BST 4 0x3f800172 FP BE Pri
!#0 N1359 P345 MEMBAR
!#0 N1360 P346 BST 21 0x3f800173 FP BE Pri
!#0 N1361 P346 BST 22 0x3f800174 FP BE Pri
!#A N1360 N1361
!#0 N1362 P346 BST 23 0x3f800175 FP BE Pri
!#0 N1363 P347 MEMBAR
!#0 N1364 P348 REPLACEMENT 30 Int BE Pri
!#0 N1365 P349 MEMBAR
!#0 N1366 P350 BLD 29 -1 FP BE Sec
!#0 N1367 P351 MEMBAR
!#0 N1368 P352 REPLACEMENT 24 Int BE Pri
!#0 N1369 P353 LD 33 -1 Int BE Sec
!#0 N1370 P354 REPLACEMENT 6 Int BE Pri
!#0 N1371 P355 REPLACEMENT 23 Int BE Pri
!#0 N1372 P356 LD 17 -1 FP BE Pri
!#0 N1373 P357 REPLACEMENT 1 Int BE Pri
!#0 N1374 P358 IDC_FLIP 14 Int BE Pri
!#0 N1375 P359 IDC_FLIP 29 Int BE Pri
!#0 N1376 P360 REPLACEMENT 25 Int BE Pri
!#0 N1377 P361 LD 8 -1 Int BE Pri
!#0 N1378 P362 MEMBAR
!#0 N1379 P363 BLD 31 -1 FP BE Pri
!#0 N1380 P364 MEMBAR
!#0 N1381 P365 LD 15 -1 FP BE Pri
!#0 N1382 P366 MEMBAR
!#0 N1383 P367 BST 8 0x3f800176 FP BE Sec
!#0 N1384 P367 BST 9 0x3f800177 FP BE Sec
!#0 N1385 P368 MEMBAR
!#0 N1386 P369 BST 29 0x3f800178 FP BE Pri
!#0 N1387 P370 MEMBAR
!#0 N1388 P371 ST 22 0x3f800179 FP BE Pri
!#0 N1389 P372 REPLACEMENT 6 Int BE Sec
!#0 N1390 P373 LD 6 -1 Int BE Pri
!#0 N1391 P374 MEMBAR
!#0 N1392 P375 BSTC 31 0x3f80017a FP BE Pri
!#0 N1393 P376 MEMBAR
!#0 N1394 P377 ST 33 0x3f80017b FP BE Pri
!#0 N1395 P378 LD 24 -1 FP BE Pri
!#0 N1396 P379 REPLACEMENT 25 Int BE Sec
!#0 N1397 P380 REPLACEMENT 25 Int BE Pri
!#0 N1398 P381 MEMBAR
!#0 N1399 P382 BLD 24 -1 FP BE Pri
!#0 N1400 P382 BLD 25 -1 FP BE Pri
!#0 N1401 P383 MEMBAR
!#0 N1402 P384 REPLACEMENT 23 Int BE Pri
!#0 N1403 P385 MEMBAR
!#0 N1404 P386 BLD 19 -1 FP BE Pri
!#0 N1405 P387 MEMBAR
!#0 N1406 P388 REPLACEMENT 9 Int BE Pri
!#0 N1407 P389 MEMBAR
!#0 N1408 P390 BLD 31 -1 FP BE Pri
!#0 N1409 P391 MEMBAR
!#0 N1410 P392 REPLACEMENT 2 Int BE Pri
!#0 N1411 P393 REPLACEMENT 13 Int BE Sec
!#0 N1412 P394 MEMBAR
!#0 N1413 P395 BSTC 5 0x3f80017c FP BE Pri
!#0 N1414 P395 BSTC 6 0x3f80017d FP BE Pri
!#0 N1415 P396 MEMBAR
!#0 N1416 P397 BLD 29 -1 FP BE Pri
!#0 N1417 P398 MEMBAR
!#0 N1418 P399 BST 11 0x3f80017e FP BE Pri
!#0 N1419 P399 BST 12 0x3f80017f FP BE Pri
!#A N1418 N1419
!#0 N1420 P399 BST 13 0x3f800180 FP BE Pri
!#0 N1421 P400 MEMBAR
!#0 N1422 P401 BLD 8 -1 FP BE Pri
!#0 N1423 P401 BLD 9 -1 FP BE Pri
!#0 N1424 P402 MEMBAR
!#0 N1425 P403 LD 1 -1 Int BE Pri
!#0 N1426 P404 MEMBAR
!#0 N1427 P405 BLD 33 -1 FP BE Pri
!#0 N1428 P406 MEMBAR
!#0 N1429 P407 ST 28 0x3f800181 FP BE Nuc
!#0 N1430 P408 REPLACEMENT 6 Int BE Pri
!#0 N1431 P409 MEMBAR
!#0 N1432 P410 BLD 11 -1 FP BE Pri
!#0 N1433 P410 BLD 12 -1 FP BE Pri
!#A N1432 N1433
!#0 N1434 P410 BLD 13 -1 FP BE Pri
!#0 N1435 P411 MEMBAR
!#0 N1436 P412 REPLACEMENT 29 Int BE Pri
!#0 N1437 P413 ST 20 0x3f800182 FP BE Pri
!#0 N1438 P414 REPLACEMENT 17 Int BE Pri
!#0 N1439 P415 REPLACEMENT 5 Int BE Pri
!#0 N1440 P416 REPLACEMENT 3 Int BE Pri
!#0 N1441 P417 LD 17 -1 Int BE Sec
!#0 N1442 P418 REPLACEMENT 8 Int BE Pri
!#0 N1443 P419 MEMBAR
!#0 N1444 P420 BST 0 0x3f800183 FP BE Pri
!#0 N1445 P420 BST 1 0x3f800184 FP BE Pri
!#A N1444 N1445
!#0 N1446 P420 BST 2 0x3f800185 FP BE Pri
!#0 N1447 P420 BST 3 0x3f800186 FP BE Pri
!#0 N1448 P420 BST 4 0x3f800187 FP BE Pri
!#0 N1449 P421 MEMBAR
!#0 N1450 P422 ST 3 0x3f800188 FP BE Nuc
!#0 N1451 P423 REPLACEMENT 22 Int BE Pri
!#0 N1452 P424 ST 30 0x3f800189 FP BE Nuc
!#0 N1453 P425 ST 7 0x36 Int BE Pri
!#0 N1454 P426 MEMBAR
!#0 N1455 P427 BSTC 24 0x3f80018a FP BE Pri
!#0 N1456 P427 BSTC 25 0x3f80018b FP BE Pri
!#0 N1457 P428 MEMBAR
!#0 N1458 P429 BST 11 0x3f80018c FP BE Pri
!#0 N1459 P429 BST 12 0x3f80018d FP BE Pri
!#A N1458 N1459
!#0 N1460 P429 BST 13 0x3f80018e FP BE Pri
!#0 N1461 P430 MEMBAR
!#0 N1462 P431 BLD 10 -1 FP BE Pri
!#0 N1463 P432 MEMBAR
!#0 N1464 P433 BLD 10 -1 FP BE Sec
!#0 N1465 P434 MEMBAR
!#0 N1466 P435 ST 19 0x37 Int BE Pri
!#0 N1467 P436 ST 3 0x3f80018f FP BE Pri
!#0 N1468 P437 ST 5 0x38 Int BE Pri
!#0 N1469 P438 MEMBAR
!#0 N1470 P439 BST 26 0x3f800190 FP BE Pri
!#0 N1471 P439 BST 27 0x3f800191 FP BE Pri
!#0 N1472 P440 MEMBAR
!#0 N1473 P441 BLD 32 -1 FP BE Pri
!#0 N1474 P442 MEMBAR
!#0 N1475 P443 BST 17 0x3f800192 FP BE Pri
!#0 N1476 P444 MEMBAR
!#0 N1477 P445 REPLACEMENT 28 Int BE Pri
!#0 N1478 P446 ST 15 0x39 Int BE Pri
!#0 N1479 P447 ST 32 0x3a Int BE Pri
!#0 N1480 P448 ST 15 0x3b Int BE Pri
!#0 N1481 P449 ST 25 0x3c Int BE Sec
!#0 N1482 P450 MEMBAR
!#0 N1483 P451 BLD 5 -1 FP BE Pri
!#0 N1484 P451 BLD 6 -1 FP BE Pri
!#0 N1485 P452 MEMBAR
!#0 N1486 P453 FLUSHI 25 Int BE Pri
!#0 N1487 P454 MEMBAR
!#0 N1488 P455 BLD 18 -1 FP BE Pri
!#0 N1489 P456 MEMBAR
!#0 N1490 P457 REPLACEMENT 8 Int BE Pri
!#0 N1491 P458 LD 7 -1 FP BE Pri
!#0 N1492 P459 MEMBAR
!#0 N1493 P460 BST 11 0x3f800193 FP BE Sec
!#0 N1494 P460 BST 12 0x3f800194 FP BE Sec
!#A N1493 N1494
!#0 N1495 P460 BST 13 0x3f800195 FP BE Sec
!#0 N1496 P461 MEMBAR
!#0 N1497 P462 BLD 11 -1 FP BE Sec
!#0 N1498 P462 BLD 12 -1 FP BE Sec
!#A N1497 N1498
!#0 N1499 P462 BLD 13 -1 FP BE Sec
!#0 N1500 P463 MEMBAR
!#0 N1501 P464 ST 1 0x3d Int BE Pri
!#0 N1502 P465 MEMBAR
!#0 N1503 P466 BST 8 0x3f800196 FP BE Pri
!#0 N1504 P466 BST 9 0x3f800197 FP BE Pri
!#0 N1505 P467 MEMBAR
!#0 N1506 P468 REPLACEMENT 12 Int BE Sec
!#0 N1507 P469 MEMBAR
!#0 N1508 P470 BST 21 0x3f800198 FP BE Sec
!#0 N1509 P470 BST 22 0x3f800199 FP BE Sec
!#A N1508 N1509
!#0 N1510 P470 BST 23 0x3f80019a FP BE Sec
!#0 N1511 P471 MEMBAR
!#0 N1512 P472 BST 15 0x3f80019b FP BE Pri
!#0 N1513 P473 MEMBAR
!#0 N1514 P474 IDC_FLIP 24 Int BE Pri
!#0 N1515 P475 MEMBAR
!#0 N1516 P476 BST 26 0x3f80019c FP BE Pri
!#0 N1517 P476 BST 27 0x3f80019d FP BE Pri
!#0 N1518 P477 MEMBAR
!#0 N1519 P478 ST 27 0x3f80019e FP BE Pri
!#0 N1520 P479 LD 25 -1 Int BE Pri
!#0 N1521 P480 REPLACEMENT 30 Int BE Pri
!#0 N1522 P481 MEMBAR
!#0 N1523 P482 BLD 26 -1 FP BE Pri
!#0 N1524 P482 BLD 27 -1 FP BE Pri
!#0 N1525 P483 MEMBAR
!#0 N1526 P484 REPLACEMENT 20 Int BE Pri
!#0 N1527 P485 MEMBAR
!#0 N1528 P486 BST 17 0x3f80019f FP BE Pri
!#0 N1529 P487 MEMBAR
!#0 N1530 P488 REPLACEMENT 0 Int BE Pri
!#0 N1531 P489 ST 3 0x3f8001a0 FP BE Pri
!#0 N1532 P490 REPLACEMENT 32 Int BE Pri
!#0 N1533 P491 REPLACEMENT 19 Int BE Pri
!#0 N1534 P492 ST 9 0x3f8001a1 FP BE Sec
!#0 N1535 P493 IDC_FLIP 1 Int BE Pri
!#0 N1536 P494 LD 2 -1 FP BE Pri
!#0 N1537 P495 REPLACEMENT 10 Int BE Pri
!#0 N1538 P496 REPLACEMENT 16 Int BE Pri
!#0 N1539 P497 LD 19 -1 FP BE Pri
!#0 N1540 P498 REPLACEMENT 19 Int BE Pri
!#0 N1541 P499 MEMBAR
!#0 N1542 P500 BLD 0 -1 FP BE Pri
!#0 N1543 P500 BLD 1 -1 FP BE Pri
!#A N1542 N1543
!#0 N1544 P500 BLD 2 -1 FP BE Pri
!#0 N1545 P500 BLD 3 -1 FP BE Pri
!#0 N1546 P500 BLD 4 -1 FP BE Pri
!#0 N1547 P501 MEMBAR
!#0 N1548 P502 REPLACEMENT 22 Int BE Pri
!#0 N1549 P503 REPLACEMENT 14 Int BE Pri
!#0 N1550 P504 IDC_FLIP 18 Int BE Pri
!#0 N1551 P505 ST 9 0x3e Int BE Pri
!#0 N1552 P506 REPLACEMENT 30 Int BE Pri
!#0 N1553 P507 LD 4 -1 Int BE Sec
!#0 N1554 P508 LD 5 -1 FP BE Pri
!#0 N1555 P509 MEMBAR
!#0 N1556 P510 BLD 17 -1 FP BE Pri
!#0 N1557 P511 MEMBAR
!#0 N1558 P512 ST 14 0x3f Int BE Sec
!#0 N1559 P513 REPLACEMENT 22 Int BE Pri
!#0 N1560 P514 REPLACEMENT 5 Int BE Nuc
!#0 N1561 P515 MEMBAR
!#0 N1562 P516 BST 5 0x3f8001a2 FP BE Pri
!#0 N1563 P516 BST 6 0x3f8001a3 FP BE Pri
!#0 N1564 P517 MEMBAR
!#0 N1565 P518 BST 16 0x3f8001a4 FP BE Sec
!#0 N1566 P519 MEMBAR
!#0 N1567 P520 BLD 21 -1 FP BE Sec
!#0 N1568 P520 BLD 22 -1 FP BE Sec
!#A N1567 N1568
!#0 N1569 P520 BLD 23 -1 FP BE Sec
!#0 N1570 P521 MEMBAR
!#0 N1571 P522 BST 11 0x3f8001a5 FP BE Sec
!#0 N1572 P522 BST 12 0x3f8001a6 FP BE Sec
!#A N1571 N1572
!#0 N1573 P522 BST 13 0x3f8001a7 FP BE Sec
!#0 N1574 P523 MEMBAR
!#0 N1575 P524 REPLACEMENT 22 Int BE Pri
!#0 N1576 P525 IDC_FLIP 31 Int BE Pri
!#0 N1577 P526 MEMBAR
!#0 N1578 P527 BLD 17 -1 FP BE Sec
!#0 N1579 P528 MEMBAR
!#0 N1580 P529 BLD 8 -1 FP BE Pri
!#0 N1581 P529 BLD 9 -1 FP BE Pri
!#0 N1582 P530 MEMBAR
!#0 N1583 P531 REPLACEMENT 18 Int BE Pri
!#0 N1584 P532 MEMBAR
!#0 N1585 P533 BST 24 0x3f8001a8 FP BE Pri
!#0 N1586 P533 BST 25 0x3f8001a9 FP BE Pri
!#0 N1587 P534 MEMBAR
!#0 N1588 P535 REPLACEMENT 20 Int BE Pri
!#0 N1589 P536 MEMBAR
!#0 N1590 P537 BST 21 0x3f8001aa FP BE Pri
!#0 N1591 P537 BST 22 0x3f8001ab FP BE Pri
!#A N1590 N1591
!#0 N1592 P537 BST 23 0x3f8001ac FP BE Pri
!#0 N1593 P538 MEMBAR
!#0 N1594 P539 REPLACEMENT 27 Int BE Sec
!#0 N1595 P540 MEMBAR
!#0 N1596 P541 BST 30 0x3f8001ad FP BE Sec
!#0 N1597 P542 MEMBAR
!#0 N1598 P543 BST 8 0x3f8001ae FP BE Sec
!#0 N1599 P543 BST 9 0x3f8001af FP BE Sec
!#0 N1600 P544 MEMBAR
!#0 N1601 P545 ST 17 0x3f8001b0 FP BE Sec
!#0 N1602 P546 MEMBAR
!#0 N1603 P547 BST 28 0x3f8001b1 FP BE Pri
!#0 N1604 P548 MEMBAR
!#0 N1605 P549 LD 3 -1 Int BE Pri
!#0 N1606 P550 ST 9 0x40 Int BE Pri
!#0 N1607 P551 MEMBAR
!#0 N1608 P552 BLD 21 -1 FP BE Pri
!#0 N1609 P552 BLD 22 -1 FP BE Pri
!#A N1608 N1609
!#0 N1610 P552 BLD 23 -1 FP BE Pri
!#0 N1611 P553 MEMBAR
!#0 N1612 P554 BLD 0 -1 FP BE Sec
!#0 N1613 P554 BLD 1 -1 FP BE Sec
!#A N1612 N1613
!#0 N1614 P554 BLD 2 -1 FP BE Sec
!#0 N1615 P554 BLD 3 -1 FP BE Sec
!#0 N1616 P554 BLD 4 -1 FP BE Sec
!#0 N1617 P555 MEMBAR
!#0 N1618 P556 REPLACEMENT 16 Int BE Pri
!#0 N1619 P557 PREFETCH 17 Int BE Pri
!#0 N1620 P558 MEMBAR
!#0 N1621 P559 BLD 0 -1 FP BE Pri
!#0 N1622 P559 BLD 1 -1 FP BE Pri
!#A N1621 N1622
!#0 N1623 P559 BLD 2 -1 FP BE Pri
!#0 N1624 P559 BLD 3 -1 FP BE Pri
!#0 N1625 P559 BLD 4 -1 FP BE Pri
!#0 N1626 P560 MEMBAR
!#0 N1627 P561 BST 21 0x3f8001b2 FP BE Pri
!#0 N1628 P561 BST 22 0x3f8001b3 FP BE Pri
!#A N1627 N1628
!#0 N1629 P561 BST 23 0x3f8001b4 FP BE Pri
!#0 N1630 P562 MEMBAR
!#0 N1631 P563 PREFETCH 33 Int LE Pri
!#0 N1632 P564 MEMBAR
!#0 N1633 P565 BLD 11 -1 FP BE Pri
!#0 N1634 P565 BLD 12 -1 FP BE Pri
!#A N1633 N1634
!#0 N1635 P565 BLD 13 -1 FP BE Pri
!#0 N1636 P566 MEMBAR
!#0 N1637 P567 IDC_FLIP 11 Int BE Pri
!#0 N1638 P568 REPLACEMENT 10 Int BE Pri
!#0 N1639 P569 REPLACEMENT 8 Int BE Sec
!#0 N1640 P570 MEMBAR
!#0 N1641 P571 BLD 11 -1 FP BE Pri
!#0 N1642 P571 BLD 12 -1 FP BE Pri
!#A N1641 N1642
!#0 N1643 P571 BLD 13 -1 FP BE Pri
!#0 N1644 P572 MEMBAR
!#0 N1645 P573 LD 16 -1 Int BE Pri
!#0 N1646 P574 ST 27 0x41 Int BE Pri
!#0 N1647 P575 REPLACEMENT 12 Int BE Pri
!#0 N1648 P576 IDC_FLIP 3 Int BE Pri
!#0 N1649 P577 MEMBAR
!#0 N1650 P578 BSTC 7 0x3f8001b5 FP BE Pri
!#0 N1651 P579 MEMBAR
!#0 N1652 P580 IDC_FLIP 4 Int BE Pri
!#0 N1653 P581 REPLACEMENT 27 Int BE Pri
!#0 N1654 P582 ST 31 0x3f8001b6 FP BE Pri
!#0 N1655 P583 ST 15 0x3f8001b7 FP BE Pri
!#0 N1656 P584 MEMBAR
!#0 N1657 P585 BSTC 17 0x3f8001b8 FP BE Sec
!#0 N1658 P586 MEMBAR
!#0 N1659 P587 BSTC 0 0x3f8001b9 FP BE Pri
!#0 N1660 P587 BSTC 1 0x3f8001ba FP BE Pri
!#A N1659 N1660
!#0 N1661 P587 BSTC 2 0x3f8001bb FP BE Pri
!#0 N1662 P587 BSTC 3 0x3f8001bc FP BE Pri
!#0 N1663 P587 BSTC 4 0x3f8001bd FP BE Pri
!#0 N1664 P588 MEMBAR
!#0 N1665 P589 LD 28 -1 FP BE Nuc
!#0 N1666 P590 REPLACEMENT 20 Int BE Nuc
!#0 N1667 P591 MEMBAR
!#0 N1668 P592 BLD 19 -1 FP BE Pri
!#0 N1669 P593 MEMBAR
!#0 N1670 P594 REPLACEMENT 29 Int BE Pri
!#0 N1671 P595 REPLACEMENT 17 Int BE Pri
!#0 N1672 P596 MEMBAR
!#0 N1673 P597 BST 8 0x3f8001be FP BE Pri
!#0 N1674 P597 BST 9 0x3f8001bf FP BE Pri
!#0 N1675 P598 MEMBAR
!#0 N1676 P599 IDC_FLIP 2 Int BE Pri
!#0 N1677 P600 MEMBAR
!#0 N1678 P601 BLD 26 -1 FP BE Pri
!#0 N1679 P601 BLD 27 -1 FP BE Pri
!#0 N1680 P602 MEMBAR
!#0 N1681 P603 ST 33 0x42 Int BE Pri
!#0 N1682 P604 LD 6 -1 Int BE Pri
!#0 N1683 P605 MEMBAR
!#0 N1684 P606 BLD 8 -1 FP BE Pri
!#0 N1685 P606 BLD 9 -1 FP BE Pri
!#0 N1686 P607 MEMBAR
!#0 N1687 P608 REPLACEMENT 7 Int BE Pri
!#0 N1688 P609 ST 17 0x3f8001c0 FP BE Pri
!#0 N1689 P610 REPLACEMENT 33 Int BE Sec
!#0 N1690 P611 ST 15 0x3f8001c1 FP BE Sec
!#0 N1691 P612 MEMBAR
!#0 N1692 P613 ST 23 0x3f8001c2 FP BE Pri
!#0 N1693 P614 MEMBAR
!#0 N1694 P615 BST 32 0x3f8001c3 FP BE Sec
!#0 N1695 P616 MEMBAR
!#0 N1696 P617 BST 21 0x3f8001c4 FP BE Pri
!#0 N1697 P617 BST 22 0x3f8001c5 FP BE Pri
!#A N1696 N1697
!#0 N1698 P617 BST 23 0x3f8001c6 FP BE Pri
!#0 N1699 P618 MEMBAR
!#0 N1700 P619 REPLACEMENT 19 Int BE Pri
!#0 N1701 P620 MEMBAR
!#0 N1702 P621 BLD 11 -1 FP BE Pri
!#0 N1703 P621 BLD 12 -1 FP BE Pri
!#A N1702 N1703
!#0 N1704 P621 BLD 13 -1 FP BE Pri
!#0 N1705 P622 MEMBAR
!#0 N1706 P623 BLD 0 -1 FP BE Pri
!#0 N1707 P623 BLD 1 -1 FP BE Pri
!#A N1706 N1707
!#0 N1708 P623 BLD 2 -1 FP BE Pri
!#0 N1709 P623 BLD 3 -1 FP BE Pri
!#0 N1710 P623 BLD 4 -1 FP BE Pri
!#0 N1711 P624 MEMBAR
!#0 N1712 P625 REPLACEMENT 1 Int BE Pri
!#0 N1713 P626 MEMBAR
!#0 N1714 P627 BST 0 0x3f8001c7 FP BE Pri
!#0 N1715 P627 BST 1 0x3f8001c8 FP BE Pri
!#A N1714 N1715
!#0 N1716 P627 BST 2 0x3f8001c9 FP BE Pri
!#0 N1717 P627 BST 3 0x3f8001ca FP BE Pri
!#0 N1718 P627 BST 4 0x3f8001cb FP BE Pri
!#0 N1719 P628 MEMBAR
!#0 N1720 P629 REPLACEMENT 12 Int BE Pri
!#0 N1721 P630 REPLACEMENT 30 Int BE Pri
!#0 N1722 P631 LD 16 -1 FP BE Pri
!#0 N1723 P632 IDC_FLIP 4 Int BE Pri
!#0 N1724 P633 MEMBAR
!#0 N1725 P634 BST 0 0x3f8001cc FP BE Pri
!#0 N1726 P634 BST 1 0x3f8001cd FP BE Pri
!#A N1725 N1726
!#0 N1727 P634 BST 2 0x3f8001ce FP BE Pri
!#0 N1728 P634 BST 3 0x3f8001cf FP BE Pri
!#0 N1729 P634 BST 4 0x3f8001d0 FP BE Pri
!#0 N1730 P635 MEMBAR
!#0 N1731 P636 ST 26 0x3f8001d1 FP BE Sec
!#0 N1732 P637 ST 1 0x43 Int BE Pri
!#0 N1733 P638 MEMBAR
!#0 N1734 P639 BLD 26 -1 FP BE Pri
!#0 N1735 P639 BLD 27 -1 FP BE Pri
!#0 N1736 P640 MEMBAR
!#0 N1737 P641 REPLACEMENT 28 Int BE Sec
!#0 N1738 P642 MEMBAR
!#0 N1739 P643 BLD 19 -1 FP BE Pri
!#0 N1740 P644 MEMBAR
!#0 N1741 P645 ST 0 0x44 Int BE Pri
!#0 N1742 P646 MEMBAR
!#0 N1743 P647 BST 33 0x3f8001d2 FP BE Pri
!#0 N1744 P648 MEMBAR
!#0 N1745 P649 BLD 29 -1 FP BE Pri
!#0 N1746 P650 MEMBAR
!#0 N1747 P651 ST 8 0x3f8001d3 FP BE Pri
!#0 N1748 P652 LD 7 -1 FP BE Pri
!#0 N1749 P653 ST 8 0x45 Int BE Pri
!#0 N1750 P654 LD 5 -1 Int BE Pri
!#0 N1751 P655 MEMBAR
!#0 N1752 P656 BST 11 0x3f8001d4 FP BE Pri
!#0 N1753 P656 BST 12 0x3f8001d5 FP BE Pri
!#A N1752 N1753
!#0 N1754 P656 BST 13 0x3f8001d6 FP BE Pri
!#0 N1755 P657 MEMBAR
!#0 N1756 P658 BLD 5 -1 FP BE Pri
!#0 N1757 P658 BLD 6 -1 FP BE Pri
!#0 N1758 P659 MEMBAR
!#0 N1759 P660 BLD 11 -1 FP BE Pri
!#0 N1760 P660 BLD 12 -1 FP BE Pri
!#A N1759 N1760
!#0 N1761 P660 BLD 13 -1 FP BE Pri
!#0 N1762 P661 MEMBAR
!#0 N1763 P662 BST 32 0x3f8001d7 FP BE Pri
!#0 N1764 P663 MEMBAR
!#0 N1765 P664 LD 26 -1 FP BE Pri
!#0 N1766 P665 REPLACEMENT 33 Int BE Pri
!#0 N1767 P666 REPLACEMENT 15 Int BE Pri
!#0 N1768 P667 LD 24 -1 Int BE Sec
!#0 N1769 P668 MEMBAR
!#0 N1770 P669 BST 21 0x3f8001d8 FP BE Pri
!#0 N1771 P669 BST 22 0x3f8001d9 FP BE Pri
!#A N1770 N1771
!#0 N1772 P669 BST 23 0x3f8001da FP BE Pri
!#0 N1773 P670 MEMBAR
!#0 N1774 P671 REPLACEMENT 7 Int BE Pri
!#0 N1775 P672 MEMBAR
!#0 N1776 P673 BSTC 14 0x3f8001db FP BE Pri
!#0 N1777 P674 MEMBAR
!#0 N1778 P675 LD 25 -1 FP BE Pri
!#0 N1779 P676 PREFETCH 22 Int BE Pri
!#0 N1780 P677 REPLACEMENT 31 Int BE Nuc
!#0 N1781 P678 REPLACEMENT 28 Int BE Pri
!#0 N1782 P679 MEMBAR
!#0 N1783 P680 BST 21 0x3f8001dc FP BE Pri
!#0 N1784 P680 BST 22 0x3f8001dd FP BE Pri
!#A N1783 N1784
!#0 N1785 P680 BST 23 0x3f8001de FP BE Pri
!#0 N1786 P681 MEMBAR
!#0 N1787 P682 REPLACEMENT 31 Int BE Pri
!#0 N1788 P683 MEMBAR
!#0 N1789 P684 BLD 21 -1 FP BE Pri
!#0 N1790 P684 BLD 22 -1 FP BE Pri
!#A N1789 N1790
!#0 N1791 P684 BLD 23 -1 FP BE Pri
!#0 N1792 P685 MEMBAR
!#0 N1793 P686 ST 19 0x3f8001df FP BE Pri
!#0 N1794 P687 MEMBAR
!#0 N1795 P688 BSTC 24 0x3f8001e0 FP BE Sec
!#0 N1796 P688 BSTC 25 0x3f8001e1 FP BE Sec
!#0 N1797 P689 MEMBAR
!#0 N1798 P690 ST 25 0x46 Int BE Sec
!#0 N1799 P691 LD 22 -1 FP BE Pri
!#0 N1800 P692 REPLACEMENT 27 Int BE Pri
!#0 N1801 P693 LD 14 -1 FP BE Sec
!#0 N1802 P694 MEMBAR
!#0 N1803 P695 BST 14 0x3f8001e2 FP BE Pri
!#0 N1804 P696 MEMBAR
!#0 N1805 P697 LD 31 -1 Int BE Pri
!#0 N1806 P698 LD 22 -1 Int BE Pri
!#0 N1807 P699 REPLACEMENT 15 Int BE Sec
!#0 N1808 P700 LD 0 -1 Int BE Sec Loop_exit
!#0 N1809 P701 MEMBAR
!#1 N1810 P702 ST 30 0x40000001 FP BE Nuc Loop_entry
!#1 N1811 P703 MEMBAR
!#1 N1812 P704 BST 28 0x40000002 FP BE Sec
!#1 N1813 P705 MEMBAR
!#1 N1814 P706 REPLACEMENT 5 Int BE Pri
!#1 N1815 P707 MEMBAR
!#1 N1816 P708 BST 21 0x40000003 FP BE Pri
!#1 N1817 P708 BST 22 0x40000004 FP BE Pri
!#A N1816 N1817
!#1 N1818 P708 BST 23 0x40000005 FP BE Pri
!#1 N1819 P709 MEMBAR
!#1 N1820 P710 BLD 24 -1 FP BE Pri
!#1 N1821 P710 BLD 25 -1 FP BE Pri
!#1 N1822 P711 MEMBAR
!#1 N1823 P712 BST 0 0x40000006 FP BE Pri
!#1 N1824 P712 BST 1 0x40000007 FP BE Pri
!#A N1823 N1824
!#1 N1825 P712 BST 2 0x40000008 FP BE Pri
!#1 N1826 P712 BST 3 0x40000009 FP BE Pri
!#1 N1827 P712 BST 4 0x4000000a FP BE Pri
!#1 N1828 P713 MEMBAR
!#1 N1829 P714 REPLACEMENT 2 Int BE Pri
!#1 N1830 P715 ST 29 0x4000000b FP BE Pri
!#1 N1831 P716 MEMBAR
!#1 N1832 P717 BST 20 0x4000000c FP BE Pri
!#1 N1833 P718 MEMBAR
!#1 N1834 P719 LD 30 -1 Int BE Pri
!#1 N1835 P720 REPLACEMENT 9 Int BE Pri
!#1 N1836 P721 MEMBAR
!#1 N1837 P722 BST 19 0x4000000d FP BE Pri
!#1 N1838 P723 MEMBAR
!#1 N1839 P724 BLD 14 -1 FP BE Pri
!#1 N1840 P725 MEMBAR
!#1 N1841 P726 BLD 0 -1 FP BE Pri
!#1 N1842 P726 BLD 1 -1 FP BE Pri
!#A N1841 N1842
!#1 N1843 P726 BLD 2 -1 FP BE Pri
!#1 N1844 P726 BLD 3 -1 FP BE Pri
!#1 N1845 P726 BLD 4 -1 FP BE Pri
!#1 N1846 P727 MEMBAR
!#1 N1847 P728 REPLACEMENT 26 Int BE Pri
!#1 N1848 P729 ST 30 0x4000000e FP BE Sec
!#1 N1849 P730 LD 22 -1 Int BE Nuc
!#1 N1850 P731 ST 19 0x4000000f FP BE Sec
!#1 N1851 P732 REPLACEMENT 28 Int BE Pri
!#1 N1852 P733 LD 9 -1 Int LE Pri
!#1 N1853 P734 PREFETCH 14 Int BE Pri
!#1 N1854 P735 ST 4 0x40000010 FP BE Pri
!#1 N1855 P736 PREFETCH 2 Int BE Pri
!#1 N1856 P737 MEMBAR
!#1 N1857 P738 BST 0 0x40000011 FP BE Pri
!#1 N1858 P738 BST 1 0x40000012 FP BE Pri
!#A N1857 N1858
!#1 N1859 P738 BST 2 0x40000013 FP BE Pri
!#1 N1860 P738 BST 3 0x40000014 FP BE Pri
!#1 N1861 P738 BST 4 0x40000015 FP BE Pri
!#1 N1862 P739 MEMBAR
!#1 N1863 P740 LD 5 -1 Int BE Pri
!#1 N1864 P741 REPLACEMENT 30 Int BE Pri
!#1 N1865 P742 IDC_FLIP 4 Int BE Pri
!#1 N1866 P743 ST 12 0x800001 Int BE Nuc
!#1 N1867 P744 ST 11 0x40000016 FP BE Pri
!#1 N1868 P745 REPLACEMENT 10 Int BE Pri
!#1 N1869 P746 REPLACEMENT 27 Int BE Pri
!#1 N1870 P747 MEMBAR
!#1 N1871 P748 BST 0 0x40000017 FP BE Pri
!#1 N1872 P748 BST 1 0x40000018 FP BE Pri
!#A N1871 N1872
!#1 N1873 P748 BST 2 0x40000019 FP BE Pri
!#1 N1874 P748 BST 3 0x4000001a FP BE Pri
!#1 N1875 P748 BST 4 0x4000001b FP BE Pri
!#1 N1876 P749 MEMBAR
!#1 N1877 P750 BLD 33 -1 FP BE Pri
!#1 N1878 P751 MEMBAR
!#1 N1879 P752 BST 24 0x4000001c FP BE Pri
!#1 N1880 P752 BST 25 0x4000001d FP BE Pri
!#1 N1881 P753 MEMBAR
!#1 N1882 P754 REPLACEMENT 24 Int BE Pri
!#1 N1883 P755 REPLACEMENT 17 Int BE Pri
!#1 N1884 P756 LD 24 -1 Int BE Pri
!#1 N1885 P757 ST 24 0x800002 Int LE Pri
!#1 N1886 P758 LD 4 -1 FP BE Pri
!#1 N1887 P759 MEMBAR
!#1 N1888 P760 BLD 0 -1 FP BE Pri
!#1 N1889 P760 BLD 1 -1 FP BE Pri
!#A N1888 N1889
!#1 N1890 P760 BLD 2 -1 FP BE Pri
!#1 N1891 P760 BLD 3 -1 FP BE Pri
!#1 N1892 P760 BLD 4 -1 FP BE Pri
!#1 N1893 P761 MEMBAR
!#1 N1894 P762 REPLACEMENT 24 Int BE Sec
!#1 N1895 P763 MEMBAR
!#1 N1896 P764 BLD 11 -1 FP BE Sec
!#1 N1897 P764 BLD 12 -1 FP BE Sec
!#A N1896 N1897
!#1 N1898 P764 BLD 13 -1 FP BE Sec
!#1 N1899 P765 MEMBAR
!#1 N1900 P766 REPLACEMENT 20 Int BE Pri
!#1 N1901 P767 REPLACEMENT 8 Int BE Nuc
!#1 N1902 P768 MEMBAR
!#1 N1903 P769 BLD 21 -1 FP BE Pri
!#1 N1904 P769 BLD 22 -1 FP BE Pri
!#A N1903 N1904
!#1 N1905 P769 BLD 23 -1 FP BE Pri
!#1 N1906 P770 MEMBAR
!#1 N1907 P771 REPLACEMENT 25 Int BE Pri
!#1 N1908 P772 MEMBAR
!#1 N1909 P773 BST 33 0x4000001e FP BE Pri
!#1 N1910 P774 MEMBAR
!#1 N1911 P775 REPLACEMENT 0 Int BE Pri
!#1 N1912 P776 REPLACEMENT 29 Int BE Pri
!#1 N1913 P777 REPLACEMENT 29 Int BE Sec
!#1 N1914 P778 ST 5 0x800003 Int BE Pri
!#1 N1915 P779 LD 25 -1 Int BE Sec
!#1 N1916 P780 REPLACEMENT 29 Int BE Pri
!#1 N1917 P781 REPLACEMENT 0 Int BE Pri
!#1 N1918 P782 REPLACEMENT 11 Int BE Pri
!#1 N1919 P783 MEMBAR
!#1 N1920 P784 BST 24 0x4000001f FP BE Pri
!#1 N1921 P784 BST 25 0x40000020 FP BE Pri
!#1 N1922 P785 MEMBAR
!#1 N1923 P786 ST 32 0x800004 Int BE Pri
!#1 N1924 P787 REPLACEMENT 25 Int BE Pri
!#1 N1925 P788 ST 23 0x40000021 FP BE Sec
!#1 N1926 P789 MEMBAR
!#1 N1927 P790 BLD 21 -1 FP BE Pri
!#1 N1928 P790 BLD 22 -1 FP BE Pri
!#A N1927 N1928
!#1 N1929 P790 BLD 23 -1 FP BE Pri
!#1 N1930 P791 MEMBAR
!#1 N1931 P792 REPLACEMENT 28 Int BE Nuc
!#1 N1932 P793 MEMBAR
!#1 N1933 P794 BST 15 0x40000022 FP BE Sec
!#1 N1934 P795 MEMBAR
!#1 N1935 P796 IDC_FLIP 0 Int BE Pri
!#1 N1936 P797 MEMBAR
!#1 N1937 P798 BST 14 0x40000023 FP BE Pri
!#1 N1938 P799 MEMBAR
!#1 N1939 P800 BLD 26 -1 FP BE Pri
!#1 N1940 P800 BLD 27 -1 FP BE Pri
!#1 N1941 P801 MEMBAR
!#1 N1942 P802 BST 28 0x40000024 FP BE Sec
!#1 N1943 P803 MEMBAR
!#1 N1944 P804 LD 2 -1 Int BE Nuc
!#1 N1945 P805 ST 29 0x40000025 FP BE Pri
!#1 N1946 P806 REPLACEMENT 27 Int BE Sec
!#1 N1947 P807 MEMBAR
!#1 N1948 P808 BLD 7 -1 FP BE Pri
!#1 N1949 P809 MEMBAR
!#1 N1950 P810 REPLACEMENT 33 Int BE Pri
!#1 N1951 P811 LD 10 -1 Int BE Pri
!#1 N1952 P812 IDC_FLIP 16 Int BE Pri
!#1 N1953 P813 MEMBAR
!#1 N1954 P814 BST 26 0x40000026 FP BE Pri
!#1 N1955 P814 BST 27 0x40000027 FP BE Pri
!#1 N1956 P815 MEMBAR
!#1 N1957 P816 REPLACEMENT 7 Int BE Pri
!#1 N1958 P817 ST 7 0x800005 Int BE Pri
!#1 N1959 P818 IDC_FLIP 10 Int BE Pri
!#1 N1960 P819 MEMBAR
!#1 N1961 P820 BST 20 0x40000028 FP BE Pri
!#1 N1962 P821 MEMBAR
!#1 N1963 P822 BLD 24 -1 FP BE Pri
!#1 N1964 P822 BLD 25 -1 FP BE Pri
!#1 N1965 P823 MEMBAR
!#1 N1966 P824 BLD 18 -1 FP BE Pri
!#1 N1967 P825 MEMBAR
!#1 N1968 P826 ST 20 0x40000029 FP BE Pri
!#1 N1969 P827 LD 6 -1 FP BE Nuc
!#1 N1970 P828 LD 33 -1 Int BE Nuc
!#1 N1971 P829 MEMBAR
!#1 N1972 P830 BST 8 0x4000002a FP BE Pri
!#1 N1973 P830 BST 9 0x4000002b FP BE Pri
!#1 N1974 P831 MEMBAR
!#1 N1975 P832 PREFETCH 5 Int BE Pri
!#1 N1976 P833 MEMBAR
!#1 N1977 P834 BST 0 0x4000002c FP BE Pri
!#1 N1978 P834 BST 1 0x4000002d FP BE Pri
!#A N1977 N1978
!#1 N1979 P834 BST 2 0x4000002e FP BE Pri
!#1 N1980 P834 BST 3 0x4000002f FP BE Pri
!#1 N1981 P834 BST 4 0x40000030 FP BE Pri
!#1 N1982 P835 MEMBAR
!#1 N1983 P836 REPLACEMENT 28 Int BE Sec
!#1 N1984 P837 LD 21 -1 Int BE Sec
!#1 N1985 P838 MEMBAR
!#1 N1986 P839 BST 16 0x40000031 FP BE Pri
!#1 N1987 P840 MEMBAR
!#1 N1988 P841 BSTC 14 0x40000032 FP BE Pri
!#1 N1989 P842 MEMBAR
!#1 N1990 P843 BST 26 0x40000033 FP BE Sec
!#1 N1991 P843 BST 27 0x40000034 FP BE Sec
!#1 N1992 P844 MEMBAR
!#1 N1993 P845 BLD 0 -1 FP BE Pri
!#1 N1994 P845 BLD 1 -1 FP BE Pri
!#A N1993 N1994
!#1 N1995 P845 BLD 2 -1 FP BE Pri
!#1 N1996 P845 BLD 3 -1 FP BE Pri
!#1 N1997 P845 BLD 4 -1 FP BE Pri
!#1 N1998 P846 MEMBAR
!#1 N1999 P702 ST 30 0x40000035 FP BE Nuc Loop_entry
!#1 N2000 P703 MEMBAR
!#1 N2001 P704 BST 28 0x40000036 FP BE Sec
!#1 N2002 P705 MEMBAR
!#1 N2003 P706 REPLACEMENT 5 Int BE Pri
!#1 N2004 P707 MEMBAR
!#1 N2005 P708 BST 21 0x40000037 FP BE Pri
!#1 N2006 P708 BST 22 0x40000038 FP BE Pri
!#A N2005 N2006
!#1 N2007 P708 BST 23 0x40000039 FP BE Pri
!#1 N2008 P709 MEMBAR
!#1 N2009 P710 BLD 24 -1 FP BE Pri
!#1 N2010 P710 BLD 25 -1 FP BE Pri
!#1 N2011 P711 MEMBAR
!#1 N2012 P712 BST 0 0x4000003a FP BE Pri
!#1 N2013 P712 BST 1 0x4000003b FP BE Pri
!#A N2012 N2013
!#1 N2014 P712 BST 2 0x4000003c FP BE Pri
!#1 N2015 P712 BST 3 0x4000003d FP BE Pri
!#1 N2016 P712 BST 4 0x4000003e FP BE Pri
!#1 N2017 P713 MEMBAR
!#1 N2018 P714 REPLACEMENT 2 Int BE Pri
!#1 N2019 P715 ST 29 0x4000003f FP BE Pri
!#1 N2020 P716 MEMBAR
!#1 N2021 P717 BST 20 0x40000040 FP BE Pri
!#1 N2022 P718 MEMBAR
!#1 N2023 P719 LD 30 -1 Int BE Pri
!#1 N2024 P720 REPLACEMENT 9 Int BE Pri
!#1 N2025 P721 MEMBAR
!#1 N2026 P722 BST 19 0x40000041 FP BE Pri
!#1 N2027 P723 MEMBAR
!#1 N2028 P724 BLD 14 -1 FP BE Pri
!#1 N2029 P725 MEMBAR
!#1 N2030 P726 BLD 0 -1 FP BE Pri
!#1 N2031 P726 BLD 1 -1 FP BE Pri
!#A N2030 N2031
!#1 N2032 P726 BLD 2 -1 FP BE Pri
!#1 N2033 P726 BLD 3 -1 FP BE Pri
!#1 N2034 P726 BLD 4 -1 FP BE Pri
!#1 N2035 P727 MEMBAR
!#1 N2036 P728 REPLACEMENT 26 Int BE Pri
!#1 N2037 P729 ST 30 0x40000042 FP BE Sec
!#1 N2038 P730 LD 22 -1 Int BE Nuc
!#1 N2039 P731 ST 19 0x40000043 FP BE Sec
!#1 N2040 P732 REPLACEMENT 28 Int BE Pri
!#1 N2041 P733 LD 9 -1 Int LE Pri
!#1 N2042 P734 PREFETCH 14 Int BE Pri
!#1 N2043 P735 ST 4 0x40000044 FP BE Pri
!#1 N2044 P736 PREFETCH 2 Int BE Pri
!#1 N2045 P737 MEMBAR
!#1 N2046 P738 BST 0 0x40000045 FP BE Pri
!#1 N2047 P738 BST 1 0x40000046 FP BE Pri
!#A N2046 N2047
!#1 N2048 P738 BST 2 0x40000047 FP BE Pri
!#1 N2049 P738 BST 3 0x40000048 FP BE Pri
!#1 N2050 P738 BST 4 0x40000049 FP BE Pri
!#1 N2051 P739 MEMBAR
!#1 N2052 P740 LD 5 -1 Int BE Pri
!#1 N2053 P741 REPLACEMENT 30 Int BE Pri
!#1 N2054 P742 IDC_FLIP 4 Int BE Pri
!#1 N2055 P743 ST 12 0x800006 Int BE Nuc
!#1 N2056 P744 ST 11 0x4000004a FP BE Pri
!#1 N2057 P745 REPLACEMENT 10 Int BE Pri
!#1 N2058 P746 REPLACEMENT 27 Int BE Pri
!#1 N2059 P747 MEMBAR
!#1 N2060 P748 BST 0 0x4000004b FP BE Pri
!#1 N2061 P748 BST 1 0x4000004c FP BE Pri
!#A N2060 N2061
!#1 N2062 P748 BST 2 0x4000004d FP BE Pri
!#1 N2063 P748 BST 3 0x4000004e FP BE Pri
!#1 N2064 P748 BST 4 0x4000004f FP BE Pri
!#1 N2065 P749 MEMBAR
!#1 N2066 P750 BLD 33 -1 FP BE Pri
!#1 N2067 P751 MEMBAR
!#1 N2068 P752 BST 24 0x40000050 FP BE Pri
!#1 N2069 P752 BST 25 0x40000051 FP BE Pri
!#1 N2070 P753 MEMBAR
!#1 N2071 P754 REPLACEMENT 24 Int BE Pri
!#1 N2072 P755 REPLACEMENT 17 Int BE Pri
!#1 N2073 P756 LD 24 -1 Int BE Pri
!#1 N2074 P757 ST 24 0x800007 Int LE Pri
!#1 N2075 P758 LD 4 -1 FP BE Pri
!#1 N2076 P759 MEMBAR
!#1 N2077 P760 BLD 0 -1 FP BE Pri
!#1 N2078 P760 BLD 1 -1 FP BE Pri
!#A N2077 N2078
!#1 N2079 P760 BLD 2 -1 FP BE Pri
!#1 N2080 P760 BLD 3 -1 FP BE Pri
!#1 N2081 P760 BLD 4 -1 FP BE Pri
!#1 N2082 P761 MEMBAR
!#1 N2083 P762 REPLACEMENT 24 Int BE Sec
!#1 N2084 P763 MEMBAR
!#1 N2085 P764 BLD 11 -1 FP BE Sec
!#1 N2086 P764 BLD 12 -1 FP BE Sec
!#A N2085 N2086
!#1 N2087 P764 BLD 13 -1 FP BE Sec
!#1 N2088 P765 MEMBAR
!#1 N2089 P766 REPLACEMENT 20 Int BE Pri
!#1 N2090 P767 REPLACEMENT 8 Int BE Nuc
!#1 N2091 P768 MEMBAR
!#1 N2092 P769 BLD 21 -1 FP BE Pri
!#1 N2093 P769 BLD 22 -1 FP BE Pri
!#A N2092 N2093
!#1 N2094 P769 BLD 23 -1 FP BE Pri
!#1 N2095 P770 MEMBAR
!#1 N2096 P771 REPLACEMENT 25 Int BE Pri
!#1 N2097 P772 MEMBAR
!#1 N2098 P773 BST 33 0x40000052 FP BE Pri
!#1 N2099 P774 MEMBAR
!#1 N2100 P775 REPLACEMENT 0 Int BE Pri
!#1 N2101 P776 REPLACEMENT 29 Int BE Pri
!#1 N2102 P777 REPLACEMENT 29 Int BE Sec
!#1 N2103 P778 ST 5 0x800008 Int BE Pri
!#1 N2104 P779 LD 25 -1 Int BE Sec
!#1 N2105 P780 REPLACEMENT 29 Int BE Pri
!#1 N2106 P781 REPLACEMENT 0 Int BE Pri
!#1 N2107 P782 REPLACEMENT 11 Int BE Pri
!#1 N2108 P783 MEMBAR
!#1 N2109 P784 BST 24 0x40000053 FP BE Pri
!#1 N2110 P784 BST 25 0x40000054 FP BE Pri
!#1 N2111 P785 MEMBAR
!#1 N2112 P786 ST 32 0x800009 Int BE Pri
!#1 N2113 P787 REPLACEMENT 25 Int BE Pri
!#1 N2114 P788 ST 23 0x40000055 FP BE Sec
!#1 N2115 P789 MEMBAR
!#1 N2116 P790 BLD 21 -1 FP BE Pri
!#1 N2117 P790 BLD 22 -1 FP BE Pri
!#A N2116 N2117
!#1 N2118 P790 BLD 23 -1 FP BE Pri
!#1 N2119 P791 MEMBAR
!#1 N2120 P792 REPLACEMENT 28 Int BE Nuc
!#1 N2121 P793 MEMBAR
!#1 N2122 P794 BST 15 0x40000056 FP BE Sec
!#1 N2123 P795 MEMBAR
!#1 N2124 P796 IDC_FLIP 0 Int BE Pri
!#1 N2125 P797 MEMBAR
!#1 N2126 P798 BST 14 0x40000057 FP BE Pri
!#1 N2127 P799 MEMBAR
!#1 N2128 P800 BLD 26 -1 FP BE Pri
!#1 N2129 P800 BLD 27 -1 FP BE Pri
!#1 N2130 P801 MEMBAR
!#1 N2131 P802 BST 28 0x40000058 FP BE Sec
!#1 N2132 P803 MEMBAR
!#1 N2133 P804 LD 2 -1 Int BE Nuc
!#1 N2134 P805 ST 29 0x40000059 FP BE Pri
!#1 N2135 P806 REPLACEMENT 27 Int BE Sec
!#1 N2136 P807 MEMBAR
!#1 N2137 P808 BLD 7 -1 FP BE Pri
!#1 N2138 P809 MEMBAR
!#1 N2139 P810 REPLACEMENT 33 Int BE Pri
!#1 N2140 P811 LD 10 -1 Int BE Pri
!#1 N2141 P812 IDC_FLIP 16 Int BE Pri
!#1 N2142 P813 MEMBAR
!#1 N2143 P814 BST 26 0x4000005a FP BE Pri
!#1 N2144 P814 BST 27 0x4000005b FP BE Pri
!#1 N2145 P815 MEMBAR
!#1 N2146 P816 REPLACEMENT 7 Int BE Pri
!#1 N2147 P817 ST 7 0x80000a Int BE Pri
!#1 N2148 P818 IDC_FLIP 10 Int BE Pri
!#1 N2149 P819 MEMBAR
!#1 N2150 P820 BST 20 0x4000005c FP BE Pri
!#1 N2151 P821 MEMBAR
!#1 N2152 P822 BLD 24 -1 FP BE Pri
!#1 N2153 P822 BLD 25 -1 FP BE Pri
!#1 N2154 P823 MEMBAR
!#1 N2155 P824 BLD 18 -1 FP BE Pri
!#1 N2156 P825 MEMBAR
!#1 N2157 P826 ST 20 0x4000005d FP BE Pri
!#1 N2158 P827 LD 6 -1 FP BE Nuc
!#1 N2159 P828 LD 33 -1 Int BE Nuc
!#1 N2160 P829 MEMBAR
!#1 N2161 P830 BST 8 0x4000005e FP BE Pri
!#1 N2162 P830 BST 9 0x4000005f FP BE Pri
!#1 N2163 P831 MEMBAR
!#1 N2164 P832 PREFETCH 5 Int BE Pri
!#1 N2165 P833 MEMBAR
!#1 N2166 P834 BST 0 0x40000060 FP BE Pri
!#1 N2167 P834 BST 1 0x40000061 FP BE Pri
!#A N2166 N2167
!#1 N2168 P834 BST 2 0x40000062 FP BE Pri
!#1 N2169 P834 BST 3 0x40000063 FP BE Pri
!#1 N2170 P834 BST 4 0x40000064 FP BE Pri
!#1 N2171 P835 MEMBAR
!#1 N2172 P836 REPLACEMENT 28 Int BE Sec
!#1 N2173 P837 LD 21 -1 Int BE Sec
!#1 N2174 P838 MEMBAR
!#1 N2175 P839 BST 16 0x40000065 FP BE Pri
!#1 N2176 P840 MEMBAR
!#1 N2177 P841 BSTC 14 0x40000066 FP BE Pri
!#1 N2178 P842 MEMBAR
!#1 N2179 P843 BST 26 0x40000067 FP BE Sec
!#1 N2180 P843 BST 27 0x40000068 FP BE Sec
!#1 N2181 P844 MEMBAR
!#1 N2182 P845 BLD 0 -1 FP BE Pri
!#1 N2183 P845 BLD 1 -1 FP BE Pri
!#A N2182 N2183
!#1 N2184 P845 BLD 2 -1 FP BE Pri
!#1 N2185 P845 BLD 3 -1 FP BE Pri
!#1 N2186 P845 BLD 4 -1 FP BE Pri
!#1 N2187 P846 MEMBAR
!#1 N2188 P702 ST 30 0x40000069 FP BE Nuc Loop_entry
!#1 N2189 P703 MEMBAR
!#1 N2190 P704 BST 28 0x4000006a FP BE Sec
!#1 N2191 P705 MEMBAR
!#1 N2192 P706 REPLACEMENT 5 Int BE Pri
!#1 N2193 P707 MEMBAR
!#1 N2194 P708 BST 21 0x4000006b FP BE Pri
!#1 N2195 P708 BST 22 0x4000006c FP BE Pri
!#A N2194 N2195
!#1 N2196 P708 BST 23 0x4000006d FP BE Pri
!#1 N2197 P709 MEMBAR
!#1 N2198 P710 BLD 24 -1 FP BE Pri
!#1 N2199 P710 BLD 25 -1 FP BE Pri
!#1 N2200 P711 MEMBAR
!#1 N2201 P712 BST 0 0x4000006e FP BE Pri
!#1 N2202 P712 BST 1 0x4000006f FP BE Pri
!#A N2201 N2202
!#1 N2203 P712 BST 2 0x40000070 FP BE Pri
!#1 N2204 P712 BST 3 0x40000071 FP BE Pri
!#1 N2205 P712 BST 4 0x40000072 FP BE Pri
!#1 N2206 P713 MEMBAR
!#1 N2207 P714 REPLACEMENT 2 Int BE Pri
!#1 N2208 P715 ST 29 0x40000073 FP BE Pri
!#1 N2209 P716 MEMBAR
!#1 N2210 P717 BST 20 0x40000074 FP BE Pri
!#1 N2211 P718 MEMBAR
!#1 N2212 P719 LD 30 -1 Int BE Pri
!#1 N2213 P720 REPLACEMENT 9 Int BE Pri
!#1 N2214 P721 MEMBAR
!#1 N2215 P722 BST 19 0x40000075 FP BE Pri
!#1 N2216 P723 MEMBAR
!#1 N2217 P724 BLD 14 -1 FP BE Pri
!#1 N2218 P725 MEMBAR
!#1 N2219 P726 BLD 0 -1 FP BE Pri
!#1 N2220 P726 BLD 1 -1 FP BE Pri
!#A N2219 N2220
!#1 N2221 P726 BLD 2 -1 FP BE Pri
!#1 N2222 P726 BLD 3 -1 FP BE Pri
!#1 N2223 P726 BLD 4 -1 FP BE Pri
!#1 N2224 P727 MEMBAR
!#1 N2225 P728 REPLACEMENT 26 Int BE Pri
!#1 N2226 P729 ST 30 0x40000076 FP BE Sec
!#1 N2227 P730 LD 22 -1 Int BE Nuc
!#1 N2228 P731 ST 19 0x40000077 FP BE Sec
!#1 N2229 P732 REPLACEMENT 28 Int BE Pri
!#1 N2230 P733 LD 9 -1 Int LE Pri
!#1 N2231 P734 PREFETCH 14 Int BE Pri
!#1 N2232 P735 ST 4 0x40000078 FP BE Pri
!#1 N2233 P736 PREFETCH 2 Int BE Pri
!#1 N2234 P737 MEMBAR
!#1 N2235 P738 BST 0 0x40000079 FP BE Pri
!#1 N2236 P738 BST 1 0x4000007a FP BE Pri
!#A N2235 N2236
!#1 N2237 P738 BST 2 0x4000007b FP BE Pri
!#1 N2238 P738 BST 3 0x4000007c FP BE Pri
!#1 N2239 P738 BST 4 0x4000007d FP BE Pri
!#1 N2240 P739 MEMBAR
!#1 N2241 P740 LD 5 -1 Int BE Pri
!#1 N2242 P741 REPLACEMENT 30 Int BE Pri
!#1 N2243 P742 IDC_FLIP 4 Int BE Pri
!#1 N2244 P743 ST 12 0x80000b Int BE Nuc
!#1 N2245 P744 ST 11 0x4000007e FP BE Pri
!#1 N2246 P745 REPLACEMENT 10 Int BE Pri
!#1 N2247 P746 REPLACEMENT 27 Int BE Pri
!#1 N2248 P747 MEMBAR
!#1 N2249 P748 BST 0 0x4000007f FP BE Pri
!#1 N2250 P748 BST 1 0x40000080 FP BE Pri
!#A N2249 N2250
!#1 N2251 P748 BST 2 0x40000081 FP BE Pri
!#1 N2252 P748 BST 3 0x40000082 FP BE Pri
!#1 N2253 P748 BST 4 0x40000083 FP BE Pri
!#1 N2254 P749 MEMBAR
!#1 N2255 P750 BLD 33 -1 FP BE Pri
!#1 N2256 P751 MEMBAR
!#1 N2257 P752 BST 24 0x40000084 FP BE Pri
!#1 N2258 P752 BST 25 0x40000085 FP BE Pri
!#1 N2259 P753 MEMBAR
!#1 N2260 P754 REPLACEMENT 24 Int BE Pri
!#1 N2261 P755 REPLACEMENT 17 Int BE Pri
!#1 N2262 P756 LD 24 -1 Int BE Pri
!#1 N2263 P757 ST 24 0x80000c Int LE Pri
!#1 N2264 P758 LD 4 -1 FP BE Pri
!#1 N2265 P759 MEMBAR
!#1 N2266 P760 BLD 0 -1 FP BE Pri
!#1 N2267 P760 BLD 1 -1 FP BE Pri
!#A N2266 N2267
!#1 N2268 P760 BLD 2 -1 FP BE Pri
!#1 N2269 P760 BLD 3 -1 FP BE Pri
!#1 N2270 P760 BLD 4 -1 FP BE Pri
!#1 N2271 P761 MEMBAR
!#1 N2272 P762 REPLACEMENT 24 Int BE Sec
!#1 N2273 P763 MEMBAR
!#1 N2274 P764 BLD 11 -1 FP BE Sec
!#1 N2275 P764 BLD 12 -1 FP BE Sec
!#A N2274 N2275
!#1 N2276 P764 BLD 13 -1 FP BE Sec
!#1 N2277 P765 MEMBAR
!#1 N2278 P766 REPLACEMENT 20 Int BE Pri
!#1 N2279 P767 REPLACEMENT 8 Int BE Nuc
!#1 N2280 P768 MEMBAR
!#1 N2281 P769 BLD 21 -1 FP BE Pri
!#1 N2282 P769 BLD 22 -1 FP BE Pri
!#A N2281 N2282
!#1 N2283 P769 BLD 23 -1 FP BE Pri
!#1 N2284 P770 MEMBAR
!#1 N2285 P771 REPLACEMENT 25 Int BE Pri
!#1 N2286 P772 MEMBAR
!#1 N2287 P773 BST 33 0x40000086 FP BE Pri
!#1 N2288 P774 MEMBAR
!#1 N2289 P775 REPLACEMENT 0 Int BE Pri
!#1 N2290 P776 REPLACEMENT 29 Int BE Pri
!#1 N2291 P777 REPLACEMENT 29 Int BE Sec
!#1 N2292 P778 ST 5 0x80000d Int BE Pri
!#1 N2293 P779 LD 25 -1 Int BE Sec
!#1 N2294 P780 REPLACEMENT 29 Int BE Pri
!#1 N2295 P781 REPLACEMENT 0 Int BE Pri
!#1 N2296 P782 REPLACEMENT 11 Int BE Pri
!#1 N2297 P783 MEMBAR
!#1 N2298 P784 BST 24 0x40000087 FP BE Pri
!#1 N2299 P784 BST 25 0x40000088 FP BE Pri
!#1 N2300 P785 MEMBAR
!#1 N2301 P786 ST 32 0x80000e Int BE Pri
!#1 N2302 P787 REPLACEMENT 25 Int BE Pri
!#1 N2303 P788 ST 23 0x40000089 FP BE Sec
!#1 N2304 P789 MEMBAR
!#1 N2305 P790 BLD 21 -1 FP BE Pri
!#1 N2306 P790 BLD 22 -1 FP BE Pri
!#A N2305 N2306
!#1 N2307 P790 BLD 23 -1 FP BE Pri
!#1 N2308 P791 MEMBAR
!#1 N2309 P792 REPLACEMENT 28 Int BE Nuc
!#1 N2310 P793 MEMBAR
!#1 N2311 P794 BST 15 0x4000008a FP BE Sec
!#1 N2312 P795 MEMBAR
!#1 N2313 P796 IDC_FLIP 0 Int BE Pri
!#1 N2314 P797 MEMBAR
!#1 N2315 P798 BST 14 0x4000008b FP BE Pri
!#1 N2316 P799 MEMBAR
!#1 N2317 P800 BLD 26 -1 FP BE Pri
!#1 N2318 P800 BLD 27 -1 FP BE Pri
!#1 N2319 P801 MEMBAR
!#1 N2320 P802 BST 28 0x4000008c FP BE Sec
!#1 N2321 P803 MEMBAR
!#1 N2322 P804 LD 2 -1 Int BE Nuc
!#1 N2323 P805 ST 29 0x4000008d FP BE Pri
!#1 N2324 P806 REPLACEMENT 27 Int BE Sec
!#1 N2325 P807 MEMBAR
!#1 N2326 P808 BLD 7 -1 FP BE Pri
!#1 N2327 P809 MEMBAR
!#1 N2328 P810 REPLACEMENT 33 Int BE Pri
!#1 N2329 P811 LD 10 -1 Int BE Pri
!#1 N2330 P812 IDC_FLIP 16 Int BE Pri
!#1 N2331 P813 MEMBAR
!#1 N2332 P814 BST 26 0x4000008e FP BE Pri
!#1 N2333 P814 BST 27 0x4000008f FP BE Pri
!#1 N2334 P815 MEMBAR
!#1 N2335 P816 REPLACEMENT 7 Int BE Pri
!#1 N2336 P817 ST 7 0x80000f Int BE Pri
!#1 N2337 P818 IDC_FLIP 10 Int BE Pri
!#1 N2338 P819 MEMBAR
!#1 N2339 P820 BST 20 0x40000090 FP BE Pri
!#1 N2340 P821 MEMBAR
!#1 N2341 P822 BLD 24 -1 FP BE Pri
!#1 N2342 P822 BLD 25 -1 FP BE Pri
!#1 N2343 P823 MEMBAR
!#1 N2344 P824 BLD 18 -1 FP BE Pri
!#1 N2345 P825 MEMBAR
!#1 N2346 P826 ST 20 0x40000091 FP BE Pri
!#1 N2347 P827 LD 6 -1 FP BE Nuc
!#1 N2348 P828 LD 33 -1 Int BE Nuc
!#1 N2349 P829 MEMBAR
!#1 N2350 P830 BST 8 0x40000092 FP BE Pri
!#1 N2351 P830 BST 9 0x40000093 FP BE Pri
!#1 N2352 P831 MEMBAR
!#1 N2353 P832 PREFETCH 5 Int BE Pri
!#1 N2354 P833 MEMBAR
!#1 N2355 P834 BST 0 0x40000094 FP BE Pri
!#1 N2356 P834 BST 1 0x40000095 FP BE Pri
!#A N2355 N2356
!#1 N2357 P834 BST 2 0x40000096 FP BE Pri
!#1 N2358 P834 BST 3 0x40000097 FP BE Pri
!#1 N2359 P834 BST 4 0x40000098 FP BE Pri
!#1 N2360 P835 MEMBAR
!#1 N2361 P836 REPLACEMENT 28 Int BE Sec
!#1 N2362 P837 LD 21 -1 Int BE Sec
!#1 N2363 P838 MEMBAR
!#1 N2364 P839 BST 16 0x40000099 FP BE Pri
!#1 N2365 P840 MEMBAR
!#1 N2366 P841 BSTC 14 0x4000009a FP BE Pri
!#1 N2367 P842 MEMBAR
!#1 N2368 P843 BST 26 0x4000009b FP BE Sec
!#1 N2369 P843 BST 27 0x4000009c FP BE Sec
!#1 N2370 P844 MEMBAR
!#1 N2371 P845 BLD 0 -1 FP BE Pri
!#1 N2372 P845 BLD 1 -1 FP BE Pri
!#A N2371 N2372
!#1 N2373 P845 BLD 2 -1 FP BE Pri
!#1 N2374 P845 BLD 3 -1 FP BE Pri
!#1 N2375 P845 BLD 4 -1 FP BE Pri
!#1 N2376 P846 MEMBAR
!#1 N2377 P702 ST 30 0x4000009d FP BE Nuc Loop_entry
!#1 N2378 P703 MEMBAR
!#1 N2379 P704 BST 28 0x4000009e FP BE Sec
!#1 N2380 P705 MEMBAR
!#1 N2381 P706 REPLACEMENT 5 Int BE Pri
!#1 N2382 P707 MEMBAR
!#1 N2383 P708 BST 21 0x4000009f FP BE Pri
!#1 N2384 P708 BST 22 0x400000a0 FP BE Pri
!#A N2383 N2384
!#1 N2385 P708 BST 23 0x400000a1 FP BE Pri
!#1 N2386 P709 MEMBAR
!#1 N2387 P710 BLD 24 -1 FP BE Pri
!#1 N2388 P710 BLD 25 -1 FP BE Pri
!#1 N2389 P711 MEMBAR
!#1 N2390 P712 BST 0 0x400000a2 FP BE Pri
!#1 N2391 P712 BST 1 0x400000a3 FP BE Pri
!#A N2390 N2391
!#1 N2392 P712 BST 2 0x400000a4 FP BE Pri
!#1 N2393 P712 BST 3 0x400000a5 FP BE Pri
!#1 N2394 P712 BST 4 0x400000a6 FP BE Pri
!#1 N2395 P713 MEMBAR
!#1 N2396 P714 REPLACEMENT 2 Int BE Pri
!#1 N2397 P715 ST 29 0x400000a7 FP BE Pri
!#1 N2398 P716 MEMBAR
!#1 N2399 P717 BST 20 0x400000a8 FP BE Pri
!#1 N2400 P718 MEMBAR
!#1 N2401 P719 LD 30 -1 Int BE Pri
!#1 N2402 P720 REPLACEMENT 9 Int BE Pri
!#1 N2403 P721 MEMBAR
!#1 N2404 P722 BST 19 0x400000a9 FP BE Pri
!#1 N2405 P723 MEMBAR
!#1 N2406 P724 BLD 14 -1 FP BE Pri
!#1 N2407 P725 MEMBAR
!#1 N2408 P726 BLD 0 -1 FP BE Pri
!#1 N2409 P726 BLD 1 -1 FP BE Pri
!#A N2408 N2409
!#1 N2410 P726 BLD 2 -1 FP BE Pri
!#1 N2411 P726 BLD 3 -1 FP BE Pri
!#1 N2412 P726 BLD 4 -1 FP BE Pri
!#1 N2413 P727 MEMBAR
!#1 N2414 P728 REPLACEMENT 26 Int BE Pri
!#1 N2415 P729 ST 30 0x400000aa FP BE Sec
!#1 N2416 P730 LD 22 -1 Int BE Nuc
!#1 N2417 P731 ST 19 0x400000ab FP BE Sec
!#1 N2418 P732 REPLACEMENT 28 Int BE Pri
!#1 N2419 P733 LD 9 -1 Int LE Pri
!#1 N2420 P734 PREFETCH 14 Int BE Pri
!#1 N2421 P735 ST 4 0x400000ac FP BE Pri
!#1 N2422 P736 PREFETCH 2 Int BE Pri
!#1 N2423 P737 MEMBAR
!#1 N2424 P738 BST 0 0x400000ad FP BE Pri
!#1 N2425 P738 BST 1 0x400000ae FP BE Pri
!#A N2424 N2425
!#1 N2426 P738 BST 2 0x400000af FP BE Pri
!#1 N2427 P738 BST 3 0x400000b0 FP BE Pri
!#1 N2428 P738 BST 4 0x400000b1 FP BE Pri
!#1 N2429 P739 MEMBAR
!#1 N2430 P740 LD 5 -1 Int BE Pri
!#1 N2431 P741 REPLACEMENT 30 Int BE Pri
!#1 N2432 P742 IDC_FLIP 4 Int BE Pri
!#1 N2433 P743 ST 12 0x800010 Int BE Nuc
!#1 N2434 P744 ST 11 0x400000b2 FP BE Pri
!#1 N2435 P745 REPLACEMENT 10 Int BE Pri
!#1 N2436 P746 REPLACEMENT 27 Int BE Pri
!#1 N2437 P747 MEMBAR
!#1 N2438 P748 BST 0 0x400000b3 FP BE Pri
!#1 N2439 P748 BST 1 0x400000b4 FP BE Pri
!#A N2438 N2439
!#1 N2440 P748 BST 2 0x400000b5 FP BE Pri
!#1 N2441 P748 BST 3 0x400000b6 FP BE Pri
!#1 N2442 P748 BST 4 0x400000b7 FP BE Pri
!#1 N2443 P749 MEMBAR
!#1 N2444 P750 BLD 33 -1 FP BE Pri
!#1 N2445 P751 MEMBAR
!#1 N2446 P752 BST 24 0x400000b8 FP BE Pri
!#1 N2447 P752 BST 25 0x400000b9 FP BE Pri
!#1 N2448 P753 MEMBAR
!#1 N2449 P754 REPLACEMENT 24 Int BE Pri
!#1 N2450 P755 REPLACEMENT 17 Int BE Pri
!#1 N2451 P756 LD 24 -1 Int BE Pri
!#1 N2452 P757 ST 24 0x800011 Int LE Pri
!#1 N2453 P758 LD 4 -1 FP BE Pri
!#1 N2454 P759 MEMBAR
!#1 N2455 P760 BLD 0 -1 FP BE Pri
!#1 N2456 P760 BLD 1 -1 FP BE Pri
!#A N2455 N2456
!#1 N2457 P760 BLD 2 -1 FP BE Pri
!#1 N2458 P760 BLD 3 -1 FP BE Pri
!#1 N2459 P760 BLD 4 -1 FP BE Pri
!#1 N2460 P761 MEMBAR
!#1 N2461 P762 REPLACEMENT 24 Int BE Sec
!#1 N2462 P763 MEMBAR
!#1 N2463 P764 BLD 11 -1 FP BE Sec
!#1 N2464 P764 BLD 12 -1 FP BE Sec
!#A N2463 N2464
!#1 N2465 P764 BLD 13 -1 FP BE Sec
!#1 N2466 P765 MEMBAR
!#1 N2467 P766 REPLACEMENT 20 Int BE Pri
!#1 N2468 P767 REPLACEMENT 8 Int BE Nuc
!#1 N2469 P768 MEMBAR
!#1 N2470 P769 BLD 21 -1 FP BE Pri
!#1 N2471 P769 BLD 22 -1 FP BE Pri
!#A N2470 N2471
!#1 N2472 P769 BLD 23 -1 FP BE Pri
!#1 N2473 P770 MEMBAR
!#1 N2474 P771 REPLACEMENT 25 Int BE Pri
!#1 N2475 P772 MEMBAR
!#1 N2476 P773 BST 33 0x400000ba FP BE Pri
!#1 N2477 P774 MEMBAR
!#1 N2478 P775 REPLACEMENT 0 Int BE Pri
!#1 N2479 P776 REPLACEMENT 29 Int BE Pri
!#1 N2480 P777 REPLACEMENT 29 Int BE Sec
!#1 N2481 P778 ST 5 0x800012 Int BE Pri
!#1 N2482 P779 LD 25 -1 Int BE Sec
!#1 N2483 P780 REPLACEMENT 29 Int BE Pri
!#1 N2484 P781 REPLACEMENT 0 Int BE Pri
!#1 N2485 P782 REPLACEMENT 11 Int BE Pri
!#1 N2486 P783 MEMBAR
!#1 N2487 P784 BST 24 0x400000bb FP BE Pri
!#1 N2488 P784 BST 25 0x400000bc FP BE Pri
!#1 N2489 P785 MEMBAR
!#1 N2490 P786 ST 32 0x800013 Int BE Pri
!#1 N2491 P787 REPLACEMENT 25 Int BE Pri
!#1 N2492 P788 ST 23 0x400000bd FP BE Sec
!#1 N2493 P789 MEMBAR
!#1 N2494 P790 BLD 21 -1 FP BE Pri
!#1 N2495 P790 BLD 22 -1 FP BE Pri
!#A N2494 N2495
!#1 N2496 P790 BLD 23 -1 FP BE Pri
!#1 N2497 P791 MEMBAR
!#1 N2498 P792 REPLACEMENT 28 Int BE Nuc
!#1 N2499 P793 MEMBAR
!#1 N2500 P794 BST 15 0x400000be FP BE Sec
!#1 N2501 P795 MEMBAR
!#1 N2502 P796 IDC_FLIP 0 Int BE Pri
!#1 N2503 P797 MEMBAR
!#1 N2504 P798 BST 14 0x400000bf FP BE Pri
!#1 N2505 P799 MEMBAR
!#1 N2506 P800 BLD 26 -1 FP BE Pri
!#1 N2507 P800 BLD 27 -1 FP BE Pri
!#1 N2508 P801 MEMBAR
!#1 N2509 P802 BST 28 0x400000c0 FP BE Sec
!#1 N2510 P803 MEMBAR
!#1 N2511 P804 LD 2 -1 Int BE Nuc
!#1 N2512 P805 ST 29 0x400000c1 FP BE Pri
!#1 N2513 P806 REPLACEMENT 27 Int BE Sec
!#1 N2514 P807 MEMBAR
!#1 N2515 P808 BLD 7 -1 FP BE Pri
!#1 N2516 P809 MEMBAR
!#1 N2517 P810 REPLACEMENT 33 Int BE Pri
!#1 N2518 P811 LD 10 -1 Int BE Pri
!#1 N2519 P812 IDC_FLIP 16 Int BE Pri
!#1 N2520 P813 MEMBAR
!#1 N2521 P814 BST 26 0x400000c2 FP BE Pri
!#1 N2522 P814 BST 27 0x400000c3 FP BE Pri
!#1 N2523 P815 MEMBAR
!#1 N2524 P816 REPLACEMENT 7 Int BE Pri
!#1 N2525 P817 ST 7 0x800014 Int BE Pri
!#1 N2526 P818 IDC_FLIP 10 Int BE Pri
!#1 N2527 P819 MEMBAR
!#1 N2528 P820 BST 20 0x400000c4 FP BE Pri
!#1 N2529 P821 MEMBAR
!#1 N2530 P822 BLD 24 -1 FP BE Pri
!#1 N2531 P822 BLD 25 -1 FP BE Pri
!#1 N2532 P823 MEMBAR
!#1 N2533 P824 BLD 18 -1 FP BE Pri
!#1 N2534 P825 MEMBAR
!#1 N2535 P826 ST 20 0x400000c5 FP BE Pri
!#1 N2536 P827 LD 6 -1 FP BE Nuc
!#1 N2537 P828 LD 33 -1 Int BE Nuc
!#1 N2538 P829 MEMBAR
!#1 N2539 P830 BST 8 0x400000c6 FP BE Pri
!#1 N2540 P830 BST 9 0x400000c7 FP BE Pri
!#1 N2541 P831 MEMBAR
!#1 N2542 P832 PREFETCH 5 Int BE Pri
!#1 N2543 P833 MEMBAR
!#1 N2544 P834 BST 0 0x400000c8 FP BE Pri
!#1 N2545 P834 BST 1 0x400000c9 FP BE Pri
!#A N2544 N2545
!#1 N2546 P834 BST 2 0x400000ca FP BE Pri
!#1 N2547 P834 BST 3 0x400000cb FP BE Pri
!#1 N2548 P834 BST 4 0x400000cc FP BE Pri
!#1 N2549 P835 MEMBAR
!#1 N2550 P836 REPLACEMENT 28 Int BE Sec
!#1 N2551 P837 LD 21 -1 Int BE Sec
!#1 N2552 P838 MEMBAR
!#1 N2553 P839 BST 16 0x400000cd FP BE Pri
!#1 N2554 P840 MEMBAR
!#1 N2555 P841 BSTC 14 0x400000ce FP BE Pri
!#1 N2556 P842 MEMBAR
!#1 N2557 P843 BST 26 0x400000cf FP BE Sec
!#1 N2558 P843 BST 27 0x400000d0 FP BE Sec
!#1 N2559 P844 MEMBAR
!#1 N2560 P845 BLD 0 -1 FP BE Pri
!#1 N2561 P845 BLD 1 -1 FP BE Pri
!#A N2560 N2561
!#1 N2562 P845 BLD 2 -1 FP BE Pri
!#1 N2563 P845 BLD 3 -1 FP BE Pri
!#1 N2564 P845 BLD 4 -1 FP BE Pri
!#1 N2565 P846 MEMBAR
!#1 N2566 P702 ST 30 0x400000d1 FP BE Nuc Loop_entry
!#1 N2567 P703 MEMBAR
!#1 N2568 P704 BST 28 0x400000d2 FP BE Sec
!#1 N2569 P705 MEMBAR
!#1 N2570 P706 REPLACEMENT 5 Int BE Pri
!#1 N2571 P707 MEMBAR
!#1 N2572 P708 BST 21 0x400000d3 FP BE Pri
!#1 N2573 P708 BST 22 0x400000d4 FP BE Pri
!#A N2572 N2573
!#1 N2574 P708 BST 23 0x400000d5 FP BE Pri
!#1 N2575 P709 MEMBAR
!#1 N2576 P710 BLD 24 -1 FP BE Pri
!#1 N2577 P710 BLD 25 -1 FP BE Pri
!#1 N2578 P711 MEMBAR
!#1 N2579 P712 BST 0 0x400000d6 FP BE Pri
!#1 N2580 P712 BST 1 0x400000d7 FP BE Pri
!#A N2579 N2580
!#1 N2581 P712 BST 2 0x400000d8 FP BE Pri
!#1 N2582 P712 BST 3 0x400000d9 FP BE Pri
!#1 N2583 P712 BST 4 0x400000da FP BE Pri
!#1 N2584 P713 MEMBAR
!#1 N2585 P714 REPLACEMENT 2 Int BE Pri
!#1 N2586 P715 ST 29 0x400000db FP BE Pri
!#1 N2587 P716 MEMBAR
!#1 N2588 P717 BST 20 0x400000dc FP BE Pri
!#1 N2589 P718 MEMBAR
!#1 N2590 P719 LD 30 -1 Int BE Pri
!#1 N2591 P720 REPLACEMENT 9 Int BE Pri
!#1 N2592 P721 MEMBAR
!#1 N2593 P722 BST 19 0x400000dd FP BE Pri
!#1 N2594 P723 MEMBAR
!#1 N2595 P724 BLD 14 -1 FP BE Pri
!#1 N2596 P725 MEMBAR
!#1 N2597 P726 BLD 0 -1 FP BE Pri
!#1 N2598 P726 BLD 1 -1 FP BE Pri
!#A N2597 N2598
!#1 N2599 P726 BLD 2 -1 FP BE Pri
!#1 N2600 P726 BLD 3 -1 FP BE Pri
!#1 N2601 P726 BLD 4 -1 FP BE Pri
!#1 N2602 P727 MEMBAR
!#1 N2603 P728 REPLACEMENT 26 Int BE Pri
!#1 N2604 P729 ST 30 0x400000de FP BE Sec
!#1 N2605 P730 LD 22 -1 Int BE Nuc
!#1 N2606 P731 ST 19 0x400000df FP BE Sec
!#1 N2607 P732 REPLACEMENT 28 Int BE Pri
!#1 N2608 P733 LD 9 -1 Int LE Pri
!#1 N2609 P734 PREFETCH 14 Int BE Pri
!#1 N2610 P735 ST 4 0x400000e0 FP BE Pri
!#1 N2611 P736 PREFETCH 2 Int BE Pri
!#1 N2612 P737 MEMBAR
!#1 N2613 P738 BST 0 0x400000e1 FP BE Pri
!#1 N2614 P738 BST 1 0x400000e2 FP BE Pri
!#A N2613 N2614
!#1 N2615 P738 BST 2 0x400000e3 FP BE Pri
!#1 N2616 P738 BST 3 0x400000e4 FP BE Pri
!#1 N2617 P738 BST 4 0x400000e5 FP BE Pri
!#1 N2618 P739 MEMBAR
!#1 N2619 P740 LD 5 -1 Int BE Pri
!#1 N2620 P741 REPLACEMENT 30 Int BE Pri
!#1 N2621 P742 IDC_FLIP 4 Int BE Pri
!#1 N2622 P743 ST 12 0x800015 Int BE Nuc
!#1 N2623 P744 ST 11 0x400000e6 FP BE Pri
!#1 N2624 P745 REPLACEMENT 10 Int BE Pri
!#1 N2625 P746 REPLACEMENT 27 Int BE Pri
!#1 N2626 P747 MEMBAR
!#1 N2627 P748 BST 0 0x400000e7 FP BE Pri
!#1 N2628 P748 BST 1 0x400000e8 FP BE Pri
!#A N2627 N2628
!#1 N2629 P748 BST 2 0x400000e9 FP BE Pri
!#1 N2630 P748 BST 3 0x400000ea FP BE Pri
!#1 N2631 P748 BST 4 0x400000eb FP BE Pri
!#1 N2632 P749 MEMBAR
!#1 N2633 P750 BLD 33 -1 FP BE Pri
!#1 N2634 P751 MEMBAR
!#1 N2635 P752 BST 24 0x400000ec FP BE Pri
!#1 N2636 P752 BST 25 0x400000ed FP BE Pri
!#1 N2637 P753 MEMBAR
!#1 N2638 P754 REPLACEMENT 24 Int BE Pri
!#1 N2639 P755 REPLACEMENT 17 Int BE Pri
!#1 N2640 P756 LD 24 -1 Int BE Pri
!#1 N2641 P757 ST 24 0x800016 Int LE Pri
!#1 N2642 P758 LD 4 -1 FP BE Pri
!#1 N2643 P759 MEMBAR
!#1 N2644 P760 BLD 0 -1 FP BE Pri
!#1 N2645 P760 BLD 1 -1 FP BE Pri
!#A N2644 N2645
!#1 N2646 P760 BLD 2 -1 FP BE Pri
!#1 N2647 P760 BLD 3 -1 FP BE Pri
!#1 N2648 P760 BLD 4 -1 FP BE Pri
!#1 N2649 P761 MEMBAR
!#1 N2650 P762 REPLACEMENT 24 Int BE Sec
!#1 N2651 P763 MEMBAR
!#1 N2652 P764 BLD 11 -1 FP BE Sec
!#1 N2653 P764 BLD 12 -1 FP BE Sec
!#A N2652 N2653
!#1 N2654 P764 BLD 13 -1 FP BE Sec
!#1 N2655 P765 MEMBAR
!#1 N2656 P766 REPLACEMENT 20 Int BE Pri
!#1 N2657 P767 REPLACEMENT 8 Int BE Nuc
!#1 N2658 P768 MEMBAR
!#1 N2659 P769 BLD 21 -1 FP BE Pri
!#1 N2660 P769 BLD 22 -1 FP BE Pri
!#A N2659 N2660
!#1 N2661 P769 BLD 23 -1 FP BE Pri
!#1 N2662 P770 MEMBAR
!#1 N2663 P771 REPLACEMENT 25 Int BE Pri
!#1 N2664 P772 MEMBAR
!#1 N2665 P773 BST 33 0x400000ee FP BE Pri
!#1 N2666 P774 MEMBAR
!#1 N2667 P775 REPLACEMENT 0 Int BE Pri
!#1 N2668 P776 REPLACEMENT 29 Int BE Pri
!#1 N2669 P777 REPLACEMENT 29 Int BE Sec
!#1 N2670 P778 ST 5 0x800017 Int BE Pri
!#1 N2671 P779 LD 25 -1 Int BE Sec
!#1 N2672 P780 REPLACEMENT 29 Int BE Pri
!#1 N2673 P781 REPLACEMENT 0 Int BE Pri
!#1 N2674 P782 REPLACEMENT 11 Int BE Pri
!#1 N2675 P783 MEMBAR
!#1 N2676 P784 BST 24 0x400000ef FP BE Pri
!#1 N2677 P784 BST 25 0x400000f0 FP BE Pri
!#1 N2678 P785 MEMBAR
!#1 N2679 P786 ST 32 0x800018 Int BE Pri
!#1 N2680 P787 REPLACEMENT 25 Int BE Pri
!#1 N2681 P788 ST 23 0x400000f1 FP BE Sec
!#1 N2682 P789 MEMBAR
!#1 N2683 P790 BLD 21 -1 FP BE Pri
!#1 N2684 P790 BLD 22 -1 FP BE Pri
!#A N2683 N2684
!#1 N2685 P790 BLD 23 -1 FP BE Pri
!#1 N2686 P791 MEMBAR
!#1 N2687 P792 REPLACEMENT 28 Int BE Nuc
!#1 N2688 P793 MEMBAR
!#1 N2689 P794 BST 15 0x400000f2 FP BE Sec
!#1 N2690 P795 MEMBAR
!#1 N2691 P796 IDC_FLIP 0 Int BE Pri
!#1 N2692 P797 MEMBAR
!#1 N2693 P798 BST 14 0x400000f3 FP BE Pri
!#1 N2694 P799 MEMBAR
!#1 N2695 P800 BLD 26 -1 FP BE Pri
!#1 N2696 P800 BLD 27 -1 FP BE Pri
!#1 N2697 P801 MEMBAR
!#1 N2698 P802 BST 28 0x400000f4 FP BE Sec
!#1 N2699 P803 MEMBAR
!#1 N2700 P804 LD 2 -1 Int BE Nuc
!#1 N2701 P805 ST 29 0x400000f5 FP BE Pri
!#1 N2702 P806 REPLACEMENT 27 Int BE Sec
!#1 N2703 P807 MEMBAR
!#1 N2704 P808 BLD 7 -1 FP BE Pri
!#1 N2705 P809 MEMBAR
!#1 N2706 P810 REPLACEMENT 33 Int BE Pri
!#1 N2707 P811 LD 10 -1 Int BE Pri
!#1 N2708 P812 IDC_FLIP 16 Int BE Pri
!#1 N2709 P813 MEMBAR
!#1 N2710 P814 BST 26 0x400000f6 FP BE Pri
!#1 N2711 P814 BST 27 0x400000f7 FP BE Pri
!#1 N2712 P815 MEMBAR
!#1 N2713 P816 REPLACEMENT 7 Int BE Pri
!#1 N2714 P817 ST 7 0x800019 Int BE Pri
!#1 N2715 P818 IDC_FLIP 10 Int BE Pri
!#1 N2716 P819 MEMBAR
!#1 N2717 P820 BST 20 0x400000f8 FP BE Pri
!#1 N2718 P821 MEMBAR
!#1 N2719 P822 BLD 24 -1 FP BE Pri
!#1 N2720 P822 BLD 25 -1 FP BE Pri
!#1 N2721 P823 MEMBAR
!#1 N2722 P824 BLD 18 -1 FP BE Pri
!#1 N2723 P825 MEMBAR
!#1 N2724 P826 ST 20 0x400000f9 FP BE Pri
!#1 N2725 P827 LD 6 -1 FP BE Nuc
!#1 N2726 P828 LD 33 -1 Int BE Nuc
!#1 N2727 P829 MEMBAR
!#1 N2728 P830 BST 8 0x400000fa FP BE Pri
!#1 N2729 P830 BST 9 0x400000fb FP BE Pri
!#1 N2730 P831 MEMBAR
!#1 N2731 P832 PREFETCH 5 Int BE Pri
!#1 N2732 P833 MEMBAR
!#1 N2733 P834 BST 0 0x400000fc FP BE Pri
!#1 N2734 P834 BST 1 0x400000fd FP BE Pri
!#A N2733 N2734
!#1 N2735 P834 BST 2 0x400000fe FP BE Pri
!#1 N2736 P834 BST 3 0x400000ff FP BE Pri
!#1 N2737 P834 BST 4 0x40000100 FP BE Pri
!#1 N2738 P835 MEMBAR
!#1 N2739 P836 REPLACEMENT 28 Int BE Sec
!#1 N2740 P837 LD 21 -1 Int BE Sec
!#1 N2741 P838 MEMBAR
!#1 N2742 P839 BST 16 0x40000101 FP BE Pri
!#1 N2743 P840 MEMBAR
!#1 N2744 P841 BSTC 14 0x40000102 FP BE Pri
!#1 N2745 P842 MEMBAR
!#1 N2746 P843 BST 26 0x40000103 FP BE Sec
!#1 N2747 P843 BST 27 0x40000104 FP BE Sec
!#1 N2748 P844 MEMBAR
!#1 N2749 P845 BLD 0 -1 FP BE Pri
!#1 N2750 P845 BLD 1 -1 FP BE Pri
!#A N2749 N2750
!#1 N2751 P845 BLD 2 -1 FP BE Pri
!#1 N2752 P845 BLD 3 -1 FP BE Pri
!#1 N2753 P845 BLD 4 -1 FP BE Pri
!#1 N2754 P846 MEMBAR
!#1 N2755 P702 ST 30 0x40000105 FP BE Nuc Loop_entry
!#1 N2756 P703 MEMBAR
!#1 N2757 P704 BST 28 0x40000106 FP BE Sec
!#1 N2758 P705 MEMBAR
!#1 N2759 P706 REPLACEMENT 5 Int BE Pri
!#1 N2760 P707 MEMBAR
!#1 N2761 P708 BST 21 0x40000107 FP BE Pri
!#1 N2762 P708 BST 22 0x40000108 FP BE Pri
!#A N2761 N2762
!#1 N2763 P708 BST 23 0x40000109 FP BE Pri
!#1 N2764 P709 MEMBAR
!#1 N2765 P710 BLD 24 -1 FP BE Pri
!#1 N2766 P710 BLD 25 -1 FP BE Pri
!#1 N2767 P711 MEMBAR
!#1 N2768 P712 BST 0 0x4000010a FP BE Pri
!#1 N2769 P712 BST 1 0x4000010b FP BE Pri
!#A N2768 N2769
!#1 N2770 P712 BST 2 0x4000010c FP BE Pri
!#1 N2771 P712 BST 3 0x4000010d FP BE Pri
!#1 N2772 P712 BST 4 0x4000010e FP BE Pri
!#1 N2773 P713 MEMBAR
!#1 N2774 P714 REPLACEMENT 2 Int BE Pri
!#1 N2775 P715 ST 29 0x4000010f FP BE Pri
!#1 N2776 P716 MEMBAR
!#1 N2777 P717 BST 20 0x40000110 FP BE Pri
!#1 N2778 P718 MEMBAR
!#1 N2779 P719 LD 30 -1 Int BE Pri
!#1 N2780 P720 REPLACEMENT 9 Int BE Pri
!#1 N2781 P721 MEMBAR
!#1 N2782 P722 BST 19 0x40000111 FP BE Pri
!#1 N2783 P723 MEMBAR
!#1 N2784 P724 BLD 14 -1 FP BE Pri
!#1 N2785 P725 MEMBAR
!#1 N2786 P726 BLD 0 -1 FP BE Pri
!#1 N2787 P726 BLD 1 -1 FP BE Pri
!#A N2786 N2787
!#1 N2788 P726 BLD 2 -1 FP BE Pri
!#1 N2789 P726 BLD 3 -1 FP BE Pri
!#1 N2790 P726 BLD 4 -1 FP BE Pri
!#1 N2791 P727 MEMBAR
!#1 N2792 P728 REPLACEMENT 26 Int BE Pri
!#1 N2793 P729 ST 30 0x40000112 FP BE Sec
!#1 N2794 P730 LD 22 -1 Int BE Nuc
!#1 N2795 P731 ST 19 0x40000113 FP BE Sec
!#1 N2796 P732 REPLACEMENT 28 Int BE Pri
!#1 N2797 P733 LD 9 -1 Int LE Pri
!#1 N2798 P734 PREFETCH 14 Int BE Pri
!#1 N2799 P735 ST 4 0x40000114 FP BE Pri
!#1 N2800 P736 PREFETCH 2 Int BE Pri
!#1 N2801 P737 MEMBAR
!#1 N2802 P738 BST 0 0x40000115 FP BE Pri
!#1 N2803 P738 BST 1 0x40000116 FP BE Pri
!#A N2802 N2803
!#1 N2804 P738 BST 2 0x40000117 FP BE Pri
!#1 N2805 P738 BST 3 0x40000118 FP BE Pri
!#1 N2806 P738 BST 4 0x40000119 FP BE Pri
!#1 N2807 P739 MEMBAR
!#1 N2808 P740 LD 5 -1 Int BE Pri
!#1 N2809 P741 REPLACEMENT 30 Int BE Pri
!#1 N2810 P742 IDC_FLIP 4 Int BE Pri
!#1 N2811 P743 ST 12 0x80001a Int BE Nuc
!#1 N2812 P744 ST 11 0x4000011a FP BE Pri
!#1 N2813 P745 REPLACEMENT 10 Int BE Pri
!#1 N2814 P746 REPLACEMENT 27 Int BE Pri
!#1 N2815 P747 MEMBAR
!#1 N2816 P748 BST 0 0x4000011b FP BE Pri
!#1 N2817 P748 BST 1 0x4000011c FP BE Pri
!#A N2816 N2817
!#1 N2818 P748 BST 2 0x4000011d FP BE Pri
!#1 N2819 P748 BST 3 0x4000011e FP BE Pri
!#1 N2820 P748 BST 4 0x4000011f FP BE Pri
!#1 N2821 P749 MEMBAR
!#1 N2822 P750 BLD 33 -1 FP BE Pri
!#1 N2823 P751 MEMBAR
!#1 N2824 P752 BST 24 0x40000120 FP BE Pri
!#1 N2825 P752 BST 25 0x40000121 FP BE Pri
!#1 N2826 P753 MEMBAR
!#1 N2827 P754 REPLACEMENT 24 Int BE Pri
!#1 N2828 P755 REPLACEMENT 17 Int BE Pri
!#1 N2829 P756 LD 24 -1 Int BE Pri
!#1 N2830 P757 ST 24 0x80001b Int LE Pri
!#1 N2831 P758 LD 4 -1 FP BE Pri
!#1 N2832 P759 MEMBAR
!#1 N2833 P760 BLD 0 -1 FP BE Pri
!#1 N2834 P760 BLD 1 -1 FP BE Pri
!#A N2833 N2834
!#1 N2835 P760 BLD 2 -1 FP BE Pri
!#1 N2836 P760 BLD 3 -1 FP BE Pri
!#1 N2837 P760 BLD 4 -1 FP BE Pri
!#1 N2838 P761 MEMBAR
!#1 N2839 P762 REPLACEMENT 24 Int BE Sec
!#1 N2840 P763 MEMBAR
!#1 N2841 P764 BLD 11 -1 FP BE Sec
!#1 N2842 P764 BLD 12 -1 FP BE Sec
!#A N2841 N2842
!#1 N2843 P764 BLD 13 -1 FP BE Sec
!#1 N2844 P765 MEMBAR
!#1 N2845 P766 REPLACEMENT 20 Int BE Pri
!#1 N2846 P767 REPLACEMENT 8 Int BE Nuc
!#1 N2847 P768 MEMBAR
!#1 N2848 P769 BLD 21 -1 FP BE Pri
!#1 N2849 P769 BLD 22 -1 FP BE Pri
!#A N2848 N2849
!#1 N2850 P769 BLD 23 -1 FP BE Pri
!#1 N2851 P770 MEMBAR
!#1 N2852 P771 REPLACEMENT 25 Int BE Pri
!#1 N2853 P772 MEMBAR
!#1 N2854 P773 BST 33 0x40000122 FP BE Pri
!#1 N2855 P774 MEMBAR
!#1 N2856 P775 REPLACEMENT 0 Int BE Pri
!#1 N2857 P776 REPLACEMENT 29 Int BE Pri
!#1 N2858 P777 REPLACEMENT 29 Int BE Sec
!#1 N2859 P778 ST 5 0x80001c Int BE Pri
!#1 N2860 P779 LD 25 -1 Int BE Sec
!#1 N2861 P780 REPLACEMENT 29 Int BE Pri
!#1 N2862 P781 REPLACEMENT 0 Int BE Pri
!#1 N2863 P782 REPLACEMENT 11 Int BE Pri
!#1 N2864 P783 MEMBAR
!#1 N2865 P784 BST 24 0x40000123 FP BE Pri
!#1 N2866 P784 BST 25 0x40000124 FP BE Pri
!#1 N2867 P785 MEMBAR
!#1 N2868 P786 ST 32 0x80001d Int BE Pri
!#1 N2869 P787 REPLACEMENT 25 Int BE Pri
!#1 N2870 P788 ST 23 0x40000125 FP BE Sec
!#1 N2871 P789 MEMBAR
!#1 N2872 P790 BLD 21 -1 FP BE Pri
!#1 N2873 P790 BLD 22 -1 FP BE Pri
!#A N2872 N2873
!#1 N2874 P790 BLD 23 -1 FP BE Pri
!#1 N2875 P791 MEMBAR
!#1 N2876 P792 REPLACEMENT 28 Int BE Nuc
!#1 N2877 P793 MEMBAR
!#1 N2878 P794 BST 15 0x40000126 FP BE Sec
!#1 N2879 P795 MEMBAR
!#1 N2880 P796 IDC_FLIP 0 Int BE Pri
!#1 N2881 P797 MEMBAR
!#1 N2882 P798 BST 14 0x40000127 FP BE Pri
!#1 N2883 P799 MEMBAR
!#1 N2884 P800 BLD 26 -1 FP BE Pri
!#1 N2885 P800 BLD 27 -1 FP BE Pri
!#1 N2886 P801 MEMBAR
!#1 N2887 P802 BST 28 0x40000128 FP BE Sec
!#1 N2888 P803 MEMBAR
!#1 N2889 P804 LD 2 -1 Int BE Nuc
!#1 N2890 P805 ST 29 0x40000129 FP BE Pri
!#1 N2891 P806 REPLACEMENT 27 Int BE Sec
!#1 N2892 P807 MEMBAR
!#1 N2893 P808 BLD 7 -1 FP BE Pri
!#1 N2894 P809 MEMBAR
!#1 N2895 P810 REPLACEMENT 33 Int BE Pri
!#1 N2896 P811 LD 10 -1 Int BE Pri
!#1 N2897 P812 IDC_FLIP 16 Int BE Pri
!#1 N2898 P813 MEMBAR
!#1 N2899 P814 BST 26 0x4000012a FP BE Pri
!#1 N2900 P814 BST 27 0x4000012b FP BE Pri
!#1 N2901 P815 MEMBAR
!#1 N2902 P816 REPLACEMENT 7 Int BE Pri
!#1 N2903 P817 ST 7 0x80001e Int BE Pri
!#1 N2904 P818 IDC_FLIP 10 Int BE Pri
!#1 N2905 P819 MEMBAR
!#1 N2906 P820 BST 20 0x4000012c FP BE Pri
!#1 N2907 P821 MEMBAR
!#1 N2908 P822 BLD 24 -1 FP BE Pri
!#1 N2909 P822 BLD 25 -1 FP BE Pri
!#1 N2910 P823 MEMBAR
!#1 N2911 P824 BLD 18 -1 FP BE Pri
!#1 N2912 P825 MEMBAR
!#1 N2913 P826 ST 20 0x4000012d FP BE Pri
!#1 N2914 P827 LD 6 -1 FP BE Nuc
!#1 N2915 P828 LD 33 -1 Int BE Nuc
!#1 N2916 P829 MEMBAR
!#1 N2917 P830 BST 8 0x4000012e FP BE Pri
!#1 N2918 P830 BST 9 0x4000012f FP BE Pri
!#1 N2919 P831 MEMBAR
!#1 N2920 P832 PREFETCH 5 Int BE Pri
!#1 N2921 P833 MEMBAR
!#1 N2922 P834 BST 0 0x40000130 FP BE Pri
!#1 N2923 P834 BST 1 0x40000131 FP BE Pri
!#A N2922 N2923
!#1 N2924 P834 BST 2 0x40000132 FP BE Pri
!#1 N2925 P834 BST 3 0x40000133 FP BE Pri
!#1 N2926 P834 BST 4 0x40000134 FP BE Pri
!#1 N2927 P835 MEMBAR
!#1 N2928 P836 REPLACEMENT 28 Int BE Sec
!#1 N2929 P837 LD 21 -1 Int BE Sec
!#1 N2930 P838 MEMBAR
!#1 N2931 P839 BST 16 0x40000135 FP BE Pri
!#1 N2932 P840 MEMBAR
!#1 N2933 P841 BSTC 14 0x40000136 FP BE Pri
!#1 N2934 P842 MEMBAR
!#1 N2935 P843 BST 26 0x40000137 FP BE Sec
!#1 N2936 P843 BST 27 0x40000138 FP BE Sec
!#1 N2937 P844 MEMBAR
!#1 N2938 P845 BLD 0 -1 FP BE Pri
!#1 N2939 P845 BLD 1 -1 FP BE Pri
!#A N2938 N2939
!#1 N2940 P845 BLD 2 -1 FP BE Pri
!#1 N2941 P845 BLD 3 -1 FP BE Pri
!#1 N2942 P845 BLD 4 -1 FP BE Pri
!#1 N2943 P846 MEMBAR
!#1 N2944 P702 ST 30 0x40000139 FP BE Nuc Loop_entry
!#1 N2945 P703 MEMBAR
!#1 N2946 P704 BST 28 0x4000013a FP BE Sec
!#1 N2947 P705 MEMBAR
!#1 N2948 P706 REPLACEMENT 5 Int BE Pri
!#1 N2949 P707 MEMBAR
!#1 N2950 P708 BST 21 0x4000013b FP BE Pri
!#1 N2951 P708 BST 22 0x4000013c FP BE Pri
!#A N2950 N2951
!#1 N2952 P708 BST 23 0x4000013d FP BE Pri
!#1 N2953 P709 MEMBAR
!#1 N2954 P710 BLD 24 -1 FP BE Pri
!#1 N2955 P710 BLD 25 -1 FP BE Pri
!#1 N2956 P711 MEMBAR
!#1 N2957 P712 BST 0 0x4000013e FP BE Pri
!#1 N2958 P712 BST 1 0x4000013f FP BE Pri
!#A N2957 N2958
!#1 N2959 P712 BST 2 0x40000140 FP BE Pri
!#1 N2960 P712 BST 3 0x40000141 FP BE Pri
!#1 N2961 P712 BST 4 0x40000142 FP BE Pri
!#1 N2962 P713 MEMBAR
!#1 N2963 P714 REPLACEMENT 2 Int BE Pri
!#1 N2964 P715 ST 29 0x40000143 FP BE Pri
!#1 N2965 P716 MEMBAR
!#1 N2966 P717 BST 20 0x40000144 FP BE Pri
!#1 N2967 P718 MEMBAR
!#1 N2968 P719 LD 30 -1 Int BE Pri
!#1 N2969 P720 REPLACEMENT 9 Int BE Pri
!#1 N2970 P721 MEMBAR
!#1 N2971 P722 BST 19 0x40000145 FP BE Pri
!#1 N2972 P723 MEMBAR
!#1 N2973 P724 BLD 14 -1 FP BE Pri
!#1 N2974 P725 MEMBAR
!#1 N2975 P726 BLD 0 -1 FP BE Pri
!#1 N2976 P726 BLD 1 -1 FP BE Pri
!#A N2975 N2976
!#1 N2977 P726 BLD 2 -1 FP BE Pri
!#1 N2978 P726 BLD 3 -1 FP BE Pri
!#1 N2979 P726 BLD 4 -1 FP BE Pri
!#1 N2980 P727 MEMBAR
!#1 N2981 P728 REPLACEMENT 26 Int BE Pri
!#1 N2982 P729 ST 30 0x40000146 FP BE Sec
!#1 N2983 P730 LD 22 -1 Int BE Nuc
!#1 N2984 P731 ST 19 0x40000147 FP BE Sec
!#1 N2985 P732 REPLACEMENT 28 Int BE Pri
!#1 N2986 P733 LD 9 -1 Int LE Pri
!#1 N2987 P734 PREFETCH 14 Int BE Pri
!#1 N2988 P735 ST 4 0x40000148 FP BE Pri
!#1 N2989 P736 PREFETCH 2 Int BE Pri
!#1 N2990 P737 MEMBAR
!#1 N2991 P738 BST 0 0x40000149 FP BE Pri
!#1 N2992 P738 BST 1 0x4000014a FP BE Pri
!#A N2991 N2992
!#1 N2993 P738 BST 2 0x4000014b FP BE Pri
!#1 N2994 P738 BST 3 0x4000014c FP BE Pri
!#1 N2995 P738 BST 4 0x4000014d FP BE Pri
!#1 N2996 P739 MEMBAR
!#1 N2997 P740 LD 5 -1 Int BE Pri
!#1 N2998 P741 REPLACEMENT 30 Int BE Pri
!#1 N2999 P742 IDC_FLIP 4 Int BE Pri
!#1 N3000 P743 ST 12 0x80001f Int BE Nuc
!#1 N3001 P744 ST 11 0x4000014e FP BE Pri
!#1 N3002 P745 REPLACEMENT 10 Int BE Pri
!#1 N3003 P746 REPLACEMENT 27 Int BE Pri
!#1 N3004 P747 MEMBAR
!#1 N3005 P748 BST 0 0x4000014f FP BE Pri
!#1 N3006 P748 BST 1 0x40000150 FP BE Pri
!#A N3005 N3006
!#1 N3007 P748 BST 2 0x40000151 FP BE Pri
!#1 N3008 P748 BST 3 0x40000152 FP BE Pri
!#1 N3009 P748 BST 4 0x40000153 FP BE Pri
!#1 N3010 P749 MEMBAR
!#1 N3011 P750 BLD 33 -1 FP BE Pri
!#1 N3012 P751 MEMBAR
!#1 N3013 P752 BST 24 0x40000154 FP BE Pri
!#1 N3014 P752 BST 25 0x40000155 FP BE Pri
!#1 N3015 P753 MEMBAR
!#1 N3016 P754 REPLACEMENT 24 Int BE Pri
!#1 N3017 P755 REPLACEMENT 17 Int BE Pri
!#1 N3018 P756 LD 24 -1 Int BE Pri
!#1 N3019 P757 ST 24 0x800020 Int LE Pri
!#1 N3020 P758 LD 4 -1 FP BE Pri
!#1 N3021 P759 MEMBAR
!#1 N3022 P760 BLD 0 -1 FP BE Pri
!#1 N3023 P760 BLD 1 -1 FP BE Pri
!#A N3022 N3023
!#1 N3024 P760 BLD 2 -1 FP BE Pri
!#1 N3025 P760 BLD 3 -1 FP BE Pri
!#1 N3026 P760 BLD 4 -1 FP BE Pri
!#1 N3027 P761 MEMBAR
!#1 N3028 P762 REPLACEMENT 24 Int BE Sec
!#1 N3029 P763 MEMBAR
!#1 N3030 P764 BLD 11 -1 FP BE Sec
!#1 N3031 P764 BLD 12 -1 FP BE Sec
!#A N3030 N3031
!#1 N3032 P764 BLD 13 -1 FP BE Sec
!#1 N3033 P765 MEMBAR
!#1 N3034 P766 REPLACEMENT 20 Int BE Pri
!#1 N3035 P767 REPLACEMENT 8 Int BE Nuc
!#1 N3036 P768 MEMBAR
!#1 N3037 P769 BLD 21 -1 FP BE Pri
!#1 N3038 P769 BLD 22 -1 FP BE Pri
!#A N3037 N3038
!#1 N3039 P769 BLD 23 -1 FP BE Pri
!#1 N3040 P770 MEMBAR
!#1 N3041 P771 REPLACEMENT 25 Int BE Pri
!#1 N3042 P772 MEMBAR
!#1 N3043 P773 BST 33 0x40000156 FP BE Pri
!#1 N3044 P774 MEMBAR
!#1 N3045 P775 REPLACEMENT 0 Int BE Pri
!#1 N3046 P776 REPLACEMENT 29 Int BE Pri
!#1 N3047 P777 REPLACEMENT 29 Int BE Sec
!#1 N3048 P778 ST 5 0x800021 Int BE Pri
!#1 N3049 P779 LD 25 -1 Int BE Sec
!#1 N3050 P780 REPLACEMENT 29 Int BE Pri
!#1 N3051 P781 REPLACEMENT 0 Int BE Pri
!#1 N3052 P782 REPLACEMENT 11 Int BE Pri
!#1 N3053 P783 MEMBAR
!#1 N3054 P784 BST 24 0x40000157 FP BE Pri
!#1 N3055 P784 BST 25 0x40000158 FP BE Pri
!#1 N3056 P785 MEMBAR
!#1 N3057 P786 ST 32 0x800022 Int BE Pri
!#1 N3058 P787 REPLACEMENT 25 Int BE Pri
!#1 N3059 P788 ST 23 0x40000159 FP BE Sec
!#1 N3060 P789 MEMBAR
!#1 N3061 P790 BLD 21 -1 FP BE Pri
!#1 N3062 P790 BLD 22 -1 FP BE Pri
!#A N3061 N3062
!#1 N3063 P790 BLD 23 -1 FP BE Pri
!#1 N3064 P791 MEMBAR
!#1 N3065 P792 REPLACEMENT 28 Int BE Nuc
!#1 N3066 P793 MEMBAR
!#1 N3067 P794 BST 15 0x4000015a FP BE Sec
!#1 N3068 P795 MEMBAR
!#1 N3069 P796 IDC_FLIP 0 Int BE Pri
!#1 N3070 P797 MEMBAR
!#1 N3071 P798 BST 14 0x4000015b FP BE Pri
!#1 N3072 P799 MEMBAR
!#1 N3073 P800 BLD 26 -1 FP BE Pri
!#1 N3074 P800 BLD 27 -1 FP BE Pri
!#1 N3075 P801 MEMBAR
!#1 N3076 P802 BST 28 0x4000015c FP BE Sec
!#1 N3077 P803 MEMBAR
!#1 N3078 P804 LD 2 -1 Int BE Nuc
!#1 N3079 P805 ST 29 0x4000015d FP BE Pri
!#1 N3080 P806 REPLACEMENT 27 Int BE Sec
!#1 N3081 P807 MEMBAR
!#1 N3082 P808 BLD 7 -1 FP BE Pri
!#1 N3083 P809 MEMBAR
!#1 N3084 P810 REPLACEMENT 33 Int BE Pri
!#1 N3085 P811 LD 10 -1 Int BE Pri
!#1 N3086 P812 IDC_FLIP 16 Int BE Pri
!#1 N3087 P813 MEMBAR
!#1 N3088 P814 BST 26 0x4000015e FP BE Pri
!#1 N3089 P814 BST 27 0x4000015f FP BE Pri
!#1 N3090 P815 MEMBAR
!#1 N3091 P816 REPLACEMENT 7 Int BE Pri
!#1 N3092 P817 ST 7 0x800023 Int BE Pri
!#1 N3093 P818 IDC_FLIP 10 Int BE Pri
!#1 N3094 P819 MEMBAR
!#1 N3095 P820 BST 20 0x40000160 FP BE Pri
!#1 N3096 P821 MEMBAR
!#1 N3097 P822 BLD 24 -1 FP BE Pri
!#1 N3098 P822 BLD 25 -1 FP BE Pri
!#1 N3099 P823 MEMBAR
!#1 N3100 P824 BLD 18 -1 FP BE Pri
!#1 N3101 P825 MEMBAR
!#1 N3102 P826 ST 20 0x40000161 FP BE Pri
!#1 N3103 P827 LD 6 -1 FP BE Nuc
!#1 N3104 P828 LD 33 -1 Int BE Nuc
!#1 N3105 P829 MEMBAR
!#1 N3106 P830 BST 8 0x40000162 FP BE Pri
!#1 N3107 P830 BST 9 0x40000163 FP BE Pri
!#1 N3108 P831 MEMBAR
!#1 N3109 P832 PREFETCH 5 Int BE Pri
!#1 N3110 P833 MEMBAR
!#1 N3111 P834 BST 0 0x40000164 FP BE Pri
!#1 N3112 P834 BST 1 0x40000165 FP BE Pri
!#A N3111 N3112
!#1 N3113 P834 BST 2 0x40000166 FP BE Pri
!#1 N3114 P834 BST 3 0x40000167 FP BE Pri
!#1 N3115 P834 BST 4 0x40000168 FP BE Pri
!#1 N3116 P835 MEMBAR
!#1 N3117 P836 REPLACEMENT 28 Int BE Sec
!#1 N3118 P837 LD 21 -1 Int BE Sec
!#1 N3119 P838 MEMBAR
!#1 N3120 P839 BST 16 0x40000169 FP BE Pri
!#1 N3121 P840 MEMBAR
!#1 N3122 P841 BSTC 14 0x4000016a FP BE Pri
!#1 N3123 P842 MEMBAR
!#1 N3124 P843 BST 26 0x4000016b FP BE Sec
!#1 N3125 P843 BST 27 0x4000016c FP BE Sec
!#1 N3126 P844 MEMBAR
!#1 N3127 P845 BLD 0 -1 FP BE Pri
!#1 N3128 P845 BLD 1 -1 FP BE Pri
!#A N3127 N3128
!#1 N3129 P845 BLD 2 -1 FP BE Pri
!#1 N3130 P845 BLD 3 -1 FP BE Pri
!#1 N3131 P845 BLD 4 -1 FP BE Pri
!#1 N3132 P846 MEMBAR
!#1 N3133 P847 MEMBAR
!#2 N3134 P848 ST 27 0x40800001 FP BE Sec Loop_entry
!#2 N3135 P849 REPLACEMENT 4 Int BE Pri
!#2 N3136 P850 MEMBAR
!#2 N3137 P851 BLD 14 -1 FP BE Pri
!#2 N3138 P852 MEMBAR
!#2 N3139 P853 LD 8 -1 Int BE Pri
!#2 N3140 P854 IDC_FLIP 21 Int BE Pri
!#2 N3141 P855 REPLACEMENT 23 Int BE Pri
!#2 N3142 P856 LD 22 -1 Int BE Pri
!#2 N3143 P857 MEMBAR
!#2 N3144 P858 BLD 5 -1 FP BE Sec
!#2 N3145 P858 BLD 6 -1 FP BE Sec
!#2 N3146 P859 MEMBAR
!#2 N3147 P860 LD 12 -1 FP BE Sec
!#2 N3148 P861 REPLACEMENT 24 Int BE Pri
!#2 N3149 P862 LD 28 -1 FP BE Pri
!#2 N3150 P863 MEMBAR
!#2 N3151 P864 BST 16 0x40800002 FP BE Pri
!#2 N3152 P865 MEMBAR
!#2 N3153 P866 LD 4 -1 FP BE Pri
!#2 N3154 P867 REPLACEMENT 4 Int BE Pri
!#2 N3155 P868 IDC_FLIP 11 Int BE Pri
!#2 N3156 P869 ST 16 0x1000001 Int BE Pri
!#2 N3157 P870 MEMBAR
!#2 N3158 P871 BST 11 0x40800003 FP BE Sec
!#2 N3159 P871 BST 12 0x40800004 FP BE Sec
!#A N3158 N3159
!#2 N3160 P871 BST 13 0x40800005 FP BE Sec
!#2 N3161 P872 MEMBAR
!#2 N3162 P873 BLD 33 -1 FP BE Pri
!#2 N3163 P874 MEMBAR
!#2 N3164 P875 REPLACEMENT 31 Int BE Pri
!#2 N3165 P876 MEMBAR
!#2 N3166 P877 BLD 0 -1 FP BE Pri
!#2 N3167 P877 BLD 1 -1 FP BE Pri
!#A N3166 N3167
!#2 N3168 P877 BLD 2 -1 FP BE Pri
!#2 N3169 P877 BLD 3 -1 FP BE Pri
!#2 N3170 P877 BLD 4 -1 FP BE Pri
!#2 N3171 P878 MEMBAR
!#2 N3172 P879 ST 8 0x40800006 FP BE Pri
!#2 N3173 P880 LD 0 -1 Int BE Sec
!#2 N3174 P881 LD 33 -1 FP BE Pri
!#2 N3175 P882 MEMBAR
!#2 N3176 P883 BST 11 0x40800007 FP BE Pri
!#2 N3177 P883 BST 12 0x40800008 FP BE Pri
!#A N3176 N3177
!#2 N3178 P883 BST 13 0x40800009 FP BE Pri
!#2 N3179 P884 MEMBAR
!#2 N3180 P885 ST 14 0x1000002 Int BE Pri
!#2 N3181 P886 ST 18 0x1000003 Int BE Nuc
!#2 N3182 P887 ST 15 0x1000004 Int BE Nuc
!#2 N3183 P888 MEMBAR
!#2 N3184 P889 BLD 24 -1 FP BE Pri
!#2 N3185 P889 BLD 25 -1 FP BE Pri
!#2 N3186 P890 MEMBAR
!#2 N3187 P891 BSTC 21 0x4080000a FP BE Pri
!#2 N3188 P891 BSTC 22 0x4080000b FP BE Pri
!#A N3187 N3188
!#2 N3189 P891 BSTC 23 0x4080000c FP BE Pri
!#2 N3190 P892 MEMBAR
!#2 N3191 P893 ST 19 0x4080000d FP BE Pri
!#2 N3192 P894 MEMBAR
!#2 N3193 P895 BLD 24 -1 FP BE Pri
!#2 N3194 P895 BLD 25 -1 FP BE Pri
!#2 N3195 P896 MEMBAR
!#2 N3196 P897 REPLACEMENT 28 Int BE Sec
!#2 N3197 P898 MEMBAR
!#2 N3198 P899 BLD 14 -1 FP BE Pri
!#2 N3199 P900 MEMBAR
!#2 N3200 P901 REPLACEMENT 16 Int BE Pri
!#2 N3201 P902 MEMBAR
!#2 N3202 P903 BST 15 0x4080000e FP BE Sec
!#2 N3203 P904 MEMBAR
!#2 N3204 P905 REPLACEMENT 9 Int BE Pri
!#2 N3205 P906 LD 5 -1 Int BE Nuc
!#2 N3206 P907 REPLACEMENT 5 Int BE Pri
!#2 N3207 P908 REPLACEMENT 14 Int BE Sec
!#2 N3208 P909 LD 2 -1 Int BE Pri
!#2 N3209 P910 REPLACEMENT 31 Int BE Pri
!#2 N3210 P911 MEMBAR
!#2 N3211 P912 BST 21 0x4080000f FP BE Pri
!#2 N3212 P912 BST 22 0x40800010 FP BE Pri
!#A N3211 N3212
!#2 N3213 P912 BST 23 0x40800011 FP BE Pri
!#2 N3214 P913 MEMBAR
!#2 N3215 P914 BLD 17 -1 FP BE Pri
!#2 N3216 P915 MEMBAR
!#2 N3217 P916 ST 0 0x1000005 Int BE Sec
!#2 N3218 P917 ST 17 0x40800012 FP BE Pri
!#2 N3219 P918 ST 4 0x40800013 FP BE Pri
!#2 N3220 P919 ST 21 0x40800014 FP BE Pri
!#2 N3221 P920 MEMBAR
!#2 N3222 P921 BLD 31 -1 FP BE Pri
!#2 N3223 P922 MEMBAR
!#2 N3224 P923 BLD 0 -1 FP BE Pri
!#2 N3225 P923 BLD 1 -1 FP BE Pri
!#A N3224 N3225
!#2 N3226 P923 BLD 2 -1 FP BE Pri
!#2 N3227 P923 BLD 3 -1 FP BE Pri
!#2 N3228 P923 BLD 4 -1 FP BE Pri
!#2 N3229 P924 MEMBAR
!#2 N3230 P925 REPLACEMENT 27 Int BE Pri
!#2 N3231 P926 REPLACEMENT 12 Int BE Pri
!#2 N3232 P927 REPLACEMENT 23 Int BE Pri
!#2 N3233 P928 MEMBAR
!#2 N3234 P929 BST 19 0x40800015 FP BE Pri
!#2 N3235 P930 MEMBAR
!#2 N3236 P931 LD 29 -1 Int BE Pri
!#2 N3237 P932 REPLACEMENT 29 Int BE Nuc
!#2 N3238 P933 REPLACEMENT 16 Int BE Pri
!#2 N3239 P934 LD 21 -1 FP BE Nuc
!#2 N3240 P935 MEMBAR
!#2 N3241 P936 BST 17 0x40800016 FP BE Pri
!#2 N3242 P937 MEMBAR
!#2 N3243 P938 BLD 20 -1 FP BE Pri
!#2 N3244 P939 MEMBAR
!#2 N3245 P940 BLD 30 -1 FP BE Pri
!#2 N3246 P941 MEMBAR
!#2 N3247 P942 IDC_FLIP 29 Int BE Pri
!#2 N3248 P943 MEMBAR
!#2 N3249 P944 BLD 8 -1 FP BE Pri
!#2 N3250 P944 BLD 9 -1 FP BE Pri
!#2 N3251 P945 MEMBAR
!#2 N3252 P946 BLD 21 -1 FP BE Pri
!#2 N3253 P946 BLD 22 -1 FP BE Pri
!#A N3252 N3253
!#2 N3254 P946 BLD 23 -1 FP BE Pri
!#2 N3255 P947 MEMBAR
!#2 N3256 P948 REPLACEMENT 31 Int BE Pri
!#2 N3257 P949 MEMBAR
!#2 N3258 P950 BST 5 0x40800017 FP BE Sec
!#2 N3259 P950 BST 6 0x40800018 FP BE Sec
!#2 N3260 P951 MEMBAR
!#2 N3261 P952 BST 0 0x40800019 FP BE Pri
!#2 N3262 P952 BST 1 0x4080001a FP BE Pri
!#A N3261 N3262
!#2 N3263 P952 BST 2 0x4080001b FP BE Pri
!#2 N3264 P952 BST 3 0x4080001c FP BE Pri
!#2 N3265 P952 BST 4 0x4080001d FP BE Pri
!#2 N3266 P953 MEMBAR
!#2 N3267 P954 REPLACEMENT 21 Int BE Pri
!#2 N3268 P955 ST 7 0x1000006 Int BE Pri
!#2 N3269 P956 MEMBAR
!#2 N3270 P957 BST 29 0x4080001e FP BE Pri
!#2 N3271 P958 MEMBAR
!#2 N3272 P959 REPLACEMENT 5 Int BE Pri
!#2 N3273 P960 MEMBAR
!#2 N3274 P961 BST 21 0x4080001f FP BE Sec
!#2 N3275 P961 BST 22 0x40800020 FP BE Sec
!#A N3274 N3275
!#2 N3276 P961 BST 23 0x40800021 FP BE Sec
!#2 N3277 P962 MEMBAR
!#2 N3278 P963 BST 15 0x40800022 FP BE Pri
!#2 N3279 P964 MEMBAR
!#2 N3280 P965 BST 0 0x40800023 FP BE Pri
!#2 N3281 P965 BST 1 0x40800024 FP BE Pri
!#A N3280 N3281
!#2 N3282 P965 BST 2 0x40800025 FP BE Pri
!#2 N3283 P965 BST 3 0x40800026 FP BE Pri
!#2 N3284 P965 BST 4 0x40800027 FP BE Pri
!#2 N3285 P966 MEMBAR
!#2 N3286 P967 BLD 24 -1 FP BE Pri
!#2 N3287 P967 BLD 25 -1 FP BE Pri
!#2 N3288 P968 MEMBAR
!#2 N3289 P969 ST 31 0x40800028 FP BE Pri
!#2 N3290 P970 MEMBAR
!#2 N3291 P971 BST 31 0x40800029 FP BE Pri
!#2 N3292 P972 MEMBAR
!#2 N3293 P973 LD 0 -1 FP BE Sec
!#2 N3294 P974 REPLACEMENT 25 Int BE Pri
!#2 N3295 P975 REPLACEMENT 10 Int BE Pri
!#2 N3296 P976 REPLACEMENT 5 Int BE Pri
!#2 N3297 P977 ST 28 0x4080002a FP BE Pri
!#2 N3298 P978 MEMBAR
!#2 N3299 P979 BST 32 0x4080002b FP BE Sec
!#2 N3300 P980 MEMBAR
!#2 N3301 P981 LD 5 -1 Int BE Pri
!#2 N3302 P982 ST 9 0x1000007 Int BE Sec
!#2 N3303 P983 MEMBAR
!#2 N3304 P984 BSTC 18 0x4080002c FP BE Pri
!#2 N3305 P985 MEMBAR
!#2 N3306 P986 REPLACEMENT 16 Int BE Pri
!#2 N3307 P987 MEMBAR
!#2 N3308 P988 BLD 17 -1 FP BE Pri
!#2 N3309 P989 MEMBAR
!#2 N3310 P990 IDC_FLIP 24 Int BE Pri
!#2 N3311 P991 REPLACEMENT 2 Int BE Pri
!#2 N3312 P992 MEMBAR
!#2 N3313 P993 BST 0 0x4080002d FP BE Pri
!#2 N3314 P993 BST 1 0x4080002e FP BE Pri
!#A N3313 N3314
!#2 N3315 P993 BST 2 0x4080002f FP BE Pri
!#2 N3316 P993 BST 3 0x40800030 FP BE Pri
!#2 N3317 P993 BST 4 0x40800031 FP BE Pri
!#2 N3318 P994 MEMBAR
!#2 N3319 P995 REPLACEMENT 5 Int BE Pri
!#2 N3320 P996 ST 30 0x40800032 FP BE Pri
!#2 N3321 P997 MEMBAR
!#2 N3322 P998 BST 8 0x40800033 FP BE Pri
!#2 N3323 P998 BST 9 0x40800034 FP BE Pri
!#2 N3324 P999 MEMBAR
!#2 N3325 P1000 LD 4 -1 Int BE Pri
!#2 N3326 P1001 LD 8 -1 FP BE Pri
!#2 N3327 P1002 ST 26 0x1000008 Int BE Pri
!#2 N3328 P1003 REPLACEMENT 26 Int BE Sec
!#2 N3329 P1004 LD 33 -1 FP BE Pri
!#2 N3330 P1005 LD 11 -1 Int BE Pri
!#2 N3331 P1006 ST 17 0x1000009 Int BE Pri
!#2 N3332 P1007 IDC_FLIP 1 Int BE Pri
!#2 N3333 P1008 MEMBAR
!#2 N3334 P1009 BLD 20 -1 FP BE Pri
!#2 N3335 P1010 MEMBAR
!#2 N3336 P1011 BLD 21 -1 FP BE Pri
!#2 N3337 P1011 BLD 22 -1 FP BE Pri
!#A N3336 N3337
!#2 N3338 P1011 BLD 23 -1 FP BE Pri
!#2 N3339 P1012 MEMBAR
!#2 N3340 P1013 REPLACEMENT 14 Int BE Pri
!#2 N3341 P1014 MEMBAR
!#2 N3342 P1015 BLD 31 -1 FP BE Pri
!#2 N3343 P1016 MEMBAR
!#2 N3344 P1017 BST 21 0x40800035 FP BE Sec
!#2 N3345 P1017 BST 22 0x40800036 FP BE Sec
!#A N3344 N3345
!#2 N3346 P1017 BST 23 0x40800037 FP BE Sec
!#2 N3347 P1018 MEMBAR
!#2 N3348 P1019 LD 18 -1 Int BE Pri
!#2 N3349 P1020 REPLACEMENT 22 Int BE Pri
!#2 N3350 P1021 MEMBAR
!#2 N3351 P1022 BST 0 0x40800038 FP BE Pri
!#2 N3352 P1022 BST 1 0x40800039 FP BE Pri
!#A N3351 N3352
!#2 N3353 P1022 BST 2 0x4080003a FP BE Pri
!#2 N3354 P1022 BST 3 0x4080003b FP BE Pri
!#2 N3355 P1022 BST 4 0x4080003c FP BE Pri
!#2 N3356 P1023 MEMBAR
!#2 N3357 P1024 REPLACEMENT 9 Int BE Pri
!#2 N3358 P1025 REPLACEMENT 9 Int BE Pri
!#2 N3359 P1026 ST 10 0x4080003d FP BE Pri
!#2 N3360 P1027 REPLACEMENT 21 Int BE Pri
!#2 N3361 P1028 ST 14 0x100000a Int BE Sec
!#2 N3362 P1029 ST 2 0x100000b Int BE Pri
!#2 N3363 P1030 REPLACEMENT 13 Int BE Pri
!#2 N3364 P1031 MEMBAR
!#2 N3365 P1032 BLD 5 -1 FP BE Pri
!#2 N3366 P1032 BLD 6 -1 FP BE Pri
!#2 N3367 P1033 MEMBAR
!#2 N3368 P1034 REPLACEMENT 16 Int BE Pri
!#2 N3369 P1035 IDC_FLIP 22 Int BE Pri
!#2 N3370 P1036 MEMBAR
!#2 N3371 P1037 BST 24 0x4080003e FP BE Pri
!#2 N3372 P1037 BST 25 0x4080003f FP BE Pri
!#2 N3373 P1038 MEMBAR
!#2 N3374 P1039 ST 0 0x40800040 FP BE Nuc
!#2 N3375 P1040 REPLACEMENT 6 Int BE Pri
!#2 N3376 P1041 REPLACEMENT 6 Int BE Pri
!#2 N3377 P1042 MEMBAR
!#2 N3378 P1043 BST 0 0x40800041 FP BE Pri
!#2 N3379 P1043 BST 1 0x40800042 FP BE Pri
!#A N3378 N3379
!#2 N3380 P1043 BST 2 0x40800043 FP BE Pri
!#2 N3381 P1043 BST 3 0x40800044 FP BE Pri
!#2 N3382 P1043 BST 4 0x40800045 FP BE Pri
!#2 N3383 P1044 MEMBAR
!#2 N3384 P1045 BLD 0 -1 FP BE Pri
!#2 N3385 P1045 BLD 1 -1 FP BE Pri
!#A N3384 N3385
!#2 N3386 P1045 BLD 2 -1 FP BE Pri
!#2 N3387 P1045 BLD 3 -1 FP BE Pri
!#2 N3388 P1045 BLD 4 -1 FP BE Pri
!#2 N3389 P1046 MEMBAR
!#2 N3390 P1047 REPLACEMENT 7 Int BE Pri
!#2 N3391 P1048 REPLACEMENT 26 Int BE Pri
!#2 N3392 P1049 REPLACEMENT 8 Int BE Pri
!#2 N3393 P1050 REPLACEMENT 14 Int BE Pri
!#2 N3394 P1051 MEMBAR
!#2 N3395 P1052 BLD 16 -1 FP BE Pri
!#2 N3396 P1053 MEMBAR
!#2 N3397 P1054 REPLACEMENT 18 Int BE Pri
!#2 N3398 P1055 IDC_FLIP 28 Int BE Pri
!#2 N3399 P1056 LD 26 -1 FP BE Sec
!#2 N3400 P1057 LD 29 -1 FP BE Sec
!#2 N3401 P1058 MEMBAR
!#2 N3402 P1059 BLD 14 -1 FP BE Sec
!#2 N3403 P1060 MEMBAR
!#2 N3404 P1061 LD 17 -1 FP BE Sec
!#2 N3405 P1062 MEMBAR
!#2 N3406 P1063 BST 29 0x40800046 FP BE Pri
!#2 N3407 P1064 MEMBAR
!#2 N3408 P1065 ST 33 0x40800047 FP BE Pri
!#2 N3409 P1066 IDC_FLIP 3 Int BE Pri
!#2 N3410 P1067 REPLACEMENT 16 Int BE Pri
!#2 N3411 P1068 LD 12 -1 Int BE Pri
!#2 N3412 P1069 MEMBAR
!#2 N3413 P1070 BLD 8 -1 FP BE Pri
!#2 N3414 P1070 BLD 9 -1 FP BE Pri
!#2 N3415 P1071 MEMBAR
!#2 N3416 P1072 ST 17 0x100000c Int BE Pri
!#2 N3417 P1073 MEMBAR
!#2 N3418 P1074 BLD 24 -1 FP BE Pri
!#2 N3419 P1074 BLD 25 -1 FP BE Pri
!#2 N3420 P1075 MEMBAR
!#2 N3421 P1076 REPLACEMENT 18 Int BE Pri
!#2 N3422 P1077 REPLACEMENT 16 Int BE Pri
!#2 N3423 P1078 LD 7 -1 Int BE Pri
!#2 N3424 P1079 MEMBAR
!#2 N3425 P1080 BLD 24 -1 FP BE Pri
!#2 N3426 P1080 BLD 25 -1 FP BE Pri
!#2 N3427 P1081 MEMBAR
!#2 N3428 P1082 ST 5 0x100000d Int BE Pri
!#2 N3429 P1083 MEMBAR
!#2 N3430 P1084 BST 0 0x40800048 FP BE Pri
!#2 N3431 P1084 BST 1 0x40800049 FP BE Pri
!#A N3430 N3431
!#2 N3432 P1084 BST 2 0x4080004a FP BE Pri
!#2 N3433 P1084 BST 3 0x4080004b FP BE Pri
!#2 N3434 P1084 BST 4 0x4080004c FP BE Pri
!#2 N3435 P1085 MEMBAR
!#2 N3436 P1086 LD 19 -1 FP BE Sec
!#2 N3437 P1087 REPLACEMENT 18 Int BE Pri
!#2 N3438 P1088 LD 18 -1 Int BE Pri
!#2 N3439 P1089 ST 27 0x4080004d FP BE Pri
!#2 N3440 P1090 REPLACEMENT 21 Int BE Nuc
!#2 N3441 P1091 REPLACEMENT 16 Int BE Sec
!#2 N3442 P1092 REPLACEMENT 7 Int BE Pri
!#2 N3443 P1093 MEMBAR
!#2 N3444 P1094 BLD 11 -1 FP BE Pri
!#2 N3445 P1094 BLD 12 -1 FP BE Pri
!#A N3444 N3445
!#2 N3446 P1094 BLD 13 -1 FP BE Pri
!#2 N3447 P1095 MEMBAR
!#2 N3448 P1096 REPLACEMENT 24 Int BE Sec
!#2 N3449 P1097 REPLACEMENT 30 Int BE Pri
!#2 N3450 P1098 ST 25 0x100000e Int BE Pri
!#2 N3451 P1099 MEMBAR
!#2 N3452 P1100 BST 29 0x4080004e FP BE Sec
!#2 N3453 P1101 MEMBAR
!#2 N3454 P1102 BST 15 0x4080004f FP BE Pri
!#2 N3455 P1103 MEMBAR
!#2 N3456 P1104 LD 11 -1 Int BE Pri
!#2 N3457 P1105 REPLACEMENT 0 Int BE Pri
!#2 N3458 P1106 REPLACEMENT 18 Int BE Pri
!#2 N3459 P1107 MEMBAR
!#2 N3460 P1108 BLD 8 -1 FP BE Pri
!#2 N3461 P1108 BLD 9 -1 FP BE Pri
!#2 N3462 P1109 MEMBAR
!#2 N3463 P1110 LD 6 -1 FP BE Pri
!#2 N3464 P1111 MEMBAR
!#2 N3465 P1112 BST 24 0x40800050 FP BE Sec
!#2 N3466 P1112 BST 25 0x40800051 FP BE Sec
!#2 N3467 P1113 MEMBAR
!#2 N3468 P1114 BST 21 0x40800052 FP BE Pri
!#2 N3469 P1114 BST 22 0x40800053 FP BE Pri
!#A N3468 N3469
!#2 N3470 P1114 BST 23 0x40800054 FP BE Pri
!#2 N3471 P1115 MEMBAR
!#2 N3472 P1116 BST 8 0x40800055 FP BE Pri
!#2 N3473 P1116 BST 9 0x40800056 FP BE Pri
!#2 N3474 P1117 MEMBAR
!#2 N3475 P1118 BLD 7 -1 FP BE Pri
!#2 N3476 P1119 MEMBAR
!#2 N3477 P1120 REPLACEMENT 12 Int BE Pri
!#2 N3478 P1121 REPLACEMENT 28 Int BE Pri
!#2 N3479 P1122 LD 4 -1 Int BE Pri
!#2 N3480 P1123 MEMBAR
!#2 N3481 P1124 BLD 17 -1 FP BE Pri
!#2 N3482 P1125 MEMBAR
!#2 N3483 P1126 BLD 0 -1 FP BE Pri
!#2 N3484 P1126 BLD 1 -1 FP BE Pri
!#A N3483 N3484
!#2 N3485 P1126 BLD 2 -1 FP BE Pri
!#2 N3486 P1126 BLD 3 -1 FP BE Pri
!#2 N3487 P1126 BLD 4 -1 FP BE Pri
!#2 N3488 P1127 MEMBAR
!#2 N3489 P1128 REPLACEMENT 20 Int BE Pri
!#2 N3490 P1129 REPLACEMENT 15 Int BE Pri
!#2 N3491 P1130 LD 2 -1 FP BE Pri
!#2 N3492 P1131 MEMBAR
!#2 N3493 P1132 BST 29 0x40800057 FP BE Pri
!#2 N3494 P1133 MEMBAR
!#2 N3495 P1134 REPLACEMENT 15 Int BE Sec
!#2 N3496 P1135 LD 9 -1 Int LE Pri
!#2 N3497 P1136 REPLACEMENT 13 Int BE Pri
!#2 N3498 P1137 IDC_FLIP 10 Int BE Pri
!#2 N3499 P1138 ST 27 0x40800058 FP BE Pri
!#2 N3500 P1139 MEMBAR
!#2 N3501 P1140 BLD 0 -1 FP BE Pri
!#2 N3502 P1140 BLD 1 -1 FP BE Pri
!#A N3501 N3502
!#2 N3503 P1140 BLD 2 -1 FP BE Pri
!#2 N3504 P1140 BLD 3 -1 FP BE Pri
!#2 N3505 P1140 BLD 4 -1 FP BE Pri
!#2 N3506 P1141 MEMBAR
!#2 N3507 P1142 ST 12 0x100000f Int BE Pri
!#2 N3508 P1143 MEMBAR
!#2 N3509 P1144 BLD 8 -1 FP BE Pri
!#2 N3510 P1144 BLD 9 -1 FP BE Pri
!#2 N3511 P1145 MEMBAR
!#2 N3512 P1146 BST 21 0x40800059 FP BE Sec
!#2 N3513 P1146 BST 22 0x4080005a FP BE Sec
!#A N3512 N3513
!#2 N3514 P1146 BST 23 0x4080005b FP BE Sec
!#2 N3515 P1147 MEMBAR
!#2 N3516 P1148 BLD 11 -1 FP BE Pri
!#2 N3517 P1148 BLD 12 -1 FP BE Pri
!#A N3516 N3517
!#2 N3518 P1148 BLD 13 -1 FP BE Pri
!#2 N3519 P1149 MEMBAR
!#2 N3520 P1150 LD 18 -1 Int BE Pri
!#2 N3521 P1151 REPLACEMENT 5 Int BE Pri
!#2 N3522 P1152 MEMBAR
!#2 N3523 P1153 BLD 7 -1 FP BE Pri
!#2 N3524 P1154 MEMBAR
!#2 N3525 P1155 REPLACEMENT 20 Int BE Pri
!#2 N3526 P1156 LD 8 -1 Int BE Pri
!#2 N3527 P1157 MEMBAR
!#2 N3528 P1158 BST 24 0x4080005c FP BE Pri
!#2 N3529 P1158 BST 25 0x4080005d FP BE Pri
!#2 N3530 P1159 MEMBAR
!#2 N3531 P1160 REPLACEMENT 10 Int BE Pri
!#2 N3532 P1161 REPLACEMENT 7 Int BE Pri
!#2 N3533 P1162 IDC_FLIP 30 Int BE Pri
!#2 N3534 P1163 LD 32 -1 Int BE Pri
!#2 N3535 P1164 REPLACEMENT 20 Int BE Pri
!#2 N3536 P1165 MEMBAR
!#2 N3537 P1166 BLD 33 -1 FP BE Sec
!#2 N3538 P1167 MEMBAR
!#2 N3539 P1168 REPLACEMENT 26 Int BE Nuc
!#2 N3540 P1169 ST 16 0x1000010 Int BE Pri
!#2 N3541 P1170 MEMBAR
!#2 N3542 P1171 BLD 21 -1 FP BE Pri
!#2 N3543 P1171 BLD 22 -1 FP BE Pri
!#A N3542 N3543
!#2 N3544 P1171 BLD 23 -1 FP BE Pri
!#2 N3545 P1172 MEMBAR
!#2 N3546 P1173 PREFETCH 4 Int BE Pri
!#2 N3547 P1174 IDC_FLIP 23 Int BE Pri
!#2 N3548 P1175 REPLACEMENT 20 Int BE Pri
!#2 N3549 P1176 REPLACEMENT 20 Int BE Sec
!#2 N3550 P1177 IDC_FLIP 6 Int BE Pri
!#2 N3551 P1178 REPLACEMENT 11 Int BE Pri
!#2 N3552 P1179 REPLACEMENT 18 Int BE Pri
!#2 N3553 P1180 ST 29 0x4080005e FP BE Nuc
!#2 N3554 P1181 LD 24 -1 Int BE Pri
!#2 N3555 P1182 LD 10 -1 Int BE Pri
!#2 N3556 P1183 MEMBAR
!#2 N3557 P1184 BLD 20 -1 FP BE Pri
!#2 N3558 P1185 MEMBAR
!#2 N3559 P1186 REPLACEMENT 23 Int BE Pri
!#2 N3560 P1187 ST 30 0x4080005f FP BE Pri
!#2 N3561 P1188 LD 29 -1 FP BE Pri
!#2 N3562 P1189 MEMBAR
!#2 N3563 P1190 BLD 5 -1 FP BE Pri
!#2 N3564 P1190 BLD 6 -1 FP BE Pri
!#2 N3565 P1191 MEMBAR
!#2 N3566 P1192 BLD 11 -1 FP BE Pri
!#2 N3567 P1192 BLD 12 -1 FP BE Pri
!#A N3566 N3567
!#2 N3568 P1192 BLD 13 -1 FP BE Pri
!#2 N3569 P1193 MEMBAR
!#2 N3570 P1194 ST 8 0x1000011 Int BE Nuc
!#2 N3571 P1195 REPLACEMENT 31 Int BE Pri
!#2 N3572 P1196 MEMBAR
!#2 N3573 P1197 BST 19 0x40800060 FP BE Pri
!#2 N3574 P1198 MEMBAR
!#2 N3575 P1199 IDC_FLIP 4 Int BE Pri
!#2 N3576 P1200 LD 10 -1 Int BE Pri
!#2 N3577 P1201 REPLACEMENT 7 Int BE Pri
!#2 N3578 P1202 MEMBAR
!#2 N3579 P1203 BLD 10 -1 FP BE Pri
!#2 N3580 P1204 MEMBAR
!#2 N3581 P1205 BST 0 0x40800061 FP BE Pri
!#2 N3582 P1205 BST 1 0x40800062 FP BE Pri
!#A N3581 N3582
!#2 N3583 P1205 BST 2 0x40800063 FP BE Pri
!#2 N3584 P1205 BST 3 0x40800064 FP BE Pri
!#2 N3585 P1205 BST 4 0x40800065 FP BE Pri
!#2 N3586 P1206 MEMBAR
!#2 N3587 P1207 REPLACEMENT 5 Int BE Pri
!#2 N3588 P1208 ST 9 0x40800066 FP BE Pri
!#2 N3589 P1209 LD 9 -1 Int BE Sec
!#2 N3590 P1210 LD 23 -1 Int BE Pri
!#2 N3591 P1211 MEMBAR
!#2 N3592 P1212 BST 28 0x40800067 FP BE Pri
!#2 N3593 P1213 MEMBAR
!#2 N3594 P1214 REPLACEMENT 0 Int BE Nuc
!#2 N3595 P1215 REPLACEMENT 5 Int BE Nuc
!#2 N3596 P1216 LD 19 -1 FP BE Pri
!#2 N3597 P1217 ST 23 0x1000012 Int BE Sec
!#2 N3598 P1218 REPLACEMENT 24 Int BE Pri
!#2 N3599 P1219 LD 20 -1 FP BE Pri
!#2 N3600 P1220 ST 4 0x40800068 FP BE Pri
!#2 N3601 P1221 ST 18 0x40800069 FP BE Pri
!#2 N3602 P1222 MEMBAR
!#2 N3603 P1223 BST 29 0x4080006a FP BE Pri
!#2 N3604 P1224 MEMBAR
!#2 N3605 P1225 BST 11 0x4080006b FP BE Sec
!#2 N3606 P1225 BST 12 0x4080006c FP BE Sec
!#A N3605 N3606
!#2 N3607 P1225 BST 13 0x4080006d FP BE Sec
!#2 N3608 P1226 MEMBAR
!#2 N3609 P1227 BLD 10 -1 FP BE Pri
!#2 N3610 P1228 MEMBAR
!#2 N3611 P1229 ST 18 0x4080006e FP BE Pri
!#2 N3612 P1230 MEMBAR
!#2 N3613 P1231 BST 0 0x4080006f FP BE Pri
!#2 N3614 P1231 BST 1 0x40800070 FP BE Pri
!#A N3613 N3614
!#2 N3615 P1231 BST 2 0x40800071 FP BE Pri
!#2 N3616 P1231 BST 3 0x40800072 FP BE Pri
!#2 N3617 P1231 BST 4 0x40800073 FP BE Pri
!#2 N3618 P1232 MEMBAR
!#2 N3619 P1233 ST 27 0x40800074 FP BE Sec
!#2 N3620 P1234 REPLACEMENT 9 Int BE Sec
!#2 N3621 P1235 ST 30 0x40800075 FP BE Pri
!#2 N3622 P1236 MEMBAR
!#2 N3623 P1237 BST 0 0x40800076 FP BE Pri
!#2 N3624 P1237 BST 1 0x40800077 FP BE Pri
!#A N3623 N3624
!#2 N3625 P1237 BST 2 0x40800078 FP BE Pri
!#2 N3626 P1237 BST 3 0x40800079 FP BE Pri
!#2 N3627 P1237 BST 4 0x4080007a FP BE Pri
!#2 N3628 P1238 MEMBAR
!#2 N3629 P1239 REPLACEMENT 20 Int BE Pri
!#2 N3630 P1240 LD 19 -1 Int BE Sec
!#2 N3631 P1241 REPLACEMENT 29 Int BE Sec
!#2 N3632 P1242 REPLACEMENT 12 Int BE Sec
!#2 N3633 P1243 MEMBAR
!#2 N3634 P1244 BLD 26 -1 FP BE Pri
!#2 N3635 P1244 BLD 27 -1 FP BE Pri
!#2 N3636 P1245 MEMBAR
!#2 N3637 P1246 LD 8 -1 Int BE Pri
!#2 N3638 P1247 MEMBAR
!#2 N3639 P1248 BLD 17 -1 FP BE Pri
!#2 N3640 P1249 MEMBAR
!#2 N3641 P1250 ST 12 0x4080007b FP BE Nuc
!#2 N3642 P1251 LD 18 -1 Int BE Pri
!#2 N3643 P1252 IDC_FLIP 25 Int BE Pri
!#2 N3644 P1253 LD 2 -1 Int BE Pri
!#2 N3645 P1254 MEMBAR
!#2 N3646 P1255 BST 16 0x4080007c FP BE Pri
!#2 N3647 P1256 MEMBAR
!#2 N3648 P1257 LD 14 -1 Int BE Pri
!#2 N3649 P1258 MEMBAR
!#2 N3650 P1259 BLD 15 -1 FP BE Pri
!#2 N3651 P1260 MEMBAR
!#2 N3652 P1261 LD 17 -1 Int BE Pri
!#2 N3653 P1262 REPLACEMENT 19 Int BE Pri
!#2 N3654 P1263 ST 21 0x1000013 Int BE Pri
!#2 N3655 P1264 MEMBAR
!#2 N3656 P1265 BSTC 0 0x4080007d FP BE Pri
!#2 N3657 P1265 BSTC 1 0x4080007e FP BE Pri
!#A N3656 N3657
!#2 N3658 P1265 BSTC 2 0x4080007f FP BE Pri
!#2 N3659 P1265 BSTC 3 0x40800080 FP BE Pri
!#2 N3660 P1265 BSTC 4 0x40800081 FP BE Pri
!#2 N3661 P1266 MEMBAR
!#2 N3662 P1267 LD 8 -1 Int BE Pri
!#2 N3663 P1268 MEMBAR
!#2 N3664 P1269 BLD 0 -1 FP BE Sec
!#2 N3665 P1269 BLD 1 -1 FP BE Sec
!#A N3664 N3665
!#2 N3666 P1269 BLD 2 -1 FP BE Sec
!#2 N3667 P1269 BLD 3 -1 FP BE Sec
!#2 N3668 P1269 BLD 4 -1 FP BE Sec
!#2 N3669 P1270 MEMBAR
!#2 N3670 P1271 ST 21 0x40800082 FP BE Nuc
!#2 N3671 P1272 MEMBAR
!#2 N3672 P1273 BLD 0 -1 FP BE Pri
!#2 N3673 P1273 BLD 1 -1 FP BE Pri
!#A N3672 N3673
!#2 N3674 P1273 BLD 2 -1 FP BE Pri
!#2 N3675 P1273 BLD 3 -1 FP BE Pri
!#2 N3676 P1273 BLD 4 -1 FP BE Pri
!#2 N3677 P1274 MEMBAR
!#2 N3678 P1275 LD 18 -1 FP BE Pri
!#2 N3679 P1276 LD 30 -1 Int BE Nuc
!#2 N3680 P1277 ST 4 0x40800083 FP BE Pri
!#2 N3681 P1278 LD 29 -1 Int BE Sec
!#2 N3682 P1279 MEMBAR
!#2 N3683 P1280 BST 19 0x40800084 FP BE Pri
!#2 N3684 P1281 MEMBAR
!#2 N3685 P1282 LD 8 -1 FP BE Pri
!#2 N3686 P1283 LD 14 -1 Int BE Pri
!#2 N3687 P1284 IDC_FLIP 17 Int BE Pri
!#2 N3688 P1285 MEMBAR
!#2 N3689 P1286 BST 14 0x40800085 FP BE Pri
!#2 N3690 P1287 MEMBAR
!#2 N3691 P1288 ST 13 0x1000014 Int BE Pri
!#2 N3692 P1289 MEMBAR
!#2 N3693 P1290 BLD 11 -1 FP BE Pri
!#2 N3694 P1290 BLD 12 -1 FP BE Pri
!#A N3693 N3694
!#2 N3695 P1290 BLD 13 -1 FP BE Pri
!#2 N3696 P1291 MEMBAR
!#2 N3697 P1292 REPLACEMENT 12 Int BE Nuc
!#2 N3698 P1293 REPLACEMENT 28 Int BE Pri
!#2 N3699 P1294 MEMBAR
!#2 N3700 P1295 BST 17 0x40800086 FP BE Pri
!#2 N3701 P1296 MEMBAR
!#2 N3702 P1297 BSTC 10 0x40800087 FP BE Pri
!#2 N3703 P1298 MEMBAR
!#2 N3704 P1299 IDC_FLIP 20 Int BE Pri
!#2 N3705 P1300 LD 14 -1 Int BE Pri
!#2 N3706 P1301 REPLACEMENT 3 Int BE Pri
!#2 N3707 P1302 MEMBAR
!#2 N3708 P1303 BLD 15 -1 FP BE Sec
!#2 N3709 P1304 MEMBAR
!#2 N3710 P1305 BLD 16 -1 FP BE Pri
!#2 N3711 P1306 MEMBAR
!#2 N3712 P1307 REPLACEMENT 6 Int BE Sec
!#2 N3713 P1308 LD 14 -1 FP BE Pri
!#2 N3714 P1309 MEMBAR
!#2 N3715 P1310 BST 33 0x40800088 FP BE Pri
!#2 N3716 P1311 MEMBAR
!#2 N3717 P1312 IDC_FLIP 0 Int BE Pri
!#2 N3718 P1313 REPLACEMENT 3 Int BE Pri
!#2 N3719 P1314 ST 32 0x1000015 Int BE Nuc
!#2 N3720 P1315 REPLACEMENT 19 Int BE Pri
!#2 N3721 P1316 MEMBAR
!#2 N3722 P1317 BLD 10 -1 FP BE Pri
!#2 N3723 P1318 MEMBAR
!#2 N3724 P1319 REPLACEMENT 10 Int BE Pri
!#2 N3725 P1320 REPLACEMENT 10 Int BE Pri
!#2 N3726 P1321 ST 14 0x40800089 FP BE Sec
!#2 N3727 P1322 MEMBAR
!#2 N3728 P1323 BST 21 0x4080008a FP BE Pri
!#2 N3729 P1323 BST 22 0x4080008b FP BE Pri
!#A N3728 N3729
!#2 N3730 P1323 BST 23 0x4080008c FP BE Pri
!#2 N3731 P1324 MEMBAR
!#2 N3732 P1325 REPLACEMENT 1 Int BE Sec
!#2 N3733 P1326 LD 28 -1 Int BE Pri
!#2 N3734 P1327 REPLACEMENT 30 Int BE Pri
!#2 N3735 P1328 MEMBAR
!#2 N3736 P1329 BLD 0 -1 FP BE Pri
!#2 N3737 P1329 BLD 1 -1 FP BE Pri
!#A N3736 N3737
!#2 N3738 P1329 BLD 2 -1 FP BE Pri
!#2 N3739 P1329 BLD 3 -1 FP BE Pri
!#2 N3740 P1329 BLD 4 -1 FP BE Pri
!#2 N3741 P1330 MEMBAR
!#2 N3742 P1331 BST 24 0x4080008d FP BE Pri
!#2 N3743 P1331 BST 25 0x4080008e FP BE Pri
!#2 N3744 P1332 MEMBAR
!#2 N3745 P1333 LD 17 -1 FP BE Pri
!#2 N3746 P1334 REPLACEMENT 18 Int BE Pri
!#2 N3747 P1335 MEMBAR
!#2 N3748 P1336 BST 8 0x4080008f FP BE Pri
!#2 N3749 P1336 BST 9 0x40800090 FP BE Pri
!#2 N3750 P1337 MEMBAR
!#2 N3751 P1338 BSTC 0 0x40800091 FP BE Pri
!#2 N3752 P1338 BSTC 1 0x40800092 FP BE Pri
!#A N3751 N3752
!#2 N3753 P1338 BSTC 2 0x40800093 FP BE Pri
!#2 N3754 P1338 BSTC 3 0x40800094 FP BE Pri
!#2 N3755 P1338 BSTC 4 0x40800095 FP BE Pri
!#2 N3756 P1339 MEMBAR
!#2 N3757 P1340 BLD 0 -1 FP BE Pri
!#2 N3758 P1340 BLD 1 -1 FP BE Pri
!#A N3757 N3758
!#2 N3759 P1340 BLD 2 -1 FP BE Pri
!#2 N3760 P1340 BLD 3 -1 FP BE Pri
!#2 N3761 P1340 BLD 4 -1 FP BE Pri
!#2 N3762 P1341 MEMBAR
!#2 N3763 P1342 REPLACEMENT 7 Int BE Pri
!#2 N3764 P1343 REPLACEMENT 3 Int BE Pri
!#2 N3765 P1344 REPLACEMENT 13 Int BE Pri
!#2 N3766 P1345 REPLACEMENT 16 Int BE Pri
!#2 N3767 P1346 REPLACEMENT 2 Int BE Pri
!#2 N3768 P1347 MEMBAR
!#2 N3769 P1348 BST 15 0x40800096 FP BE Pri
!#2 N3770 P1349 MEMBAR
!#2 N3771 P1350 REPLACEMENT 13 Int BE Pri
!#2 N3772 P1351 MEMBAR
!#2 N3773 P1352 BST 0 0x40800097 FP BE Pri
!#2 N3774 P1352 BST 1 0x40800098 FP BE Pri
!#A N3773 N3774
!#2 N3775 P1352 BST 2 0x40800099 FP BE Pri
!#2 N3776 P1352 BST 3 0x4080009a FP BE Pri
!#2 N3777 P1352 BST 4 0x4080009b FP BE Pri
!#2 N3778 P1353 MEMBAR
!#2 N3779 P1354 REPLACEMENT 17 Int BE Pri
!#2 N3780 P1355 REPLACEMENT 31 Int BE Pri
!#2 N3781 P1356 LD 1 -1 FP BE Pri
!#2 N3782 P1357 IDC_FLIP 14 Int BE Pri
!#2 N3783 P1358 REPLACEMENT 32 Int BE Pri
!#2 N3784 P1359 MEMBAR
!#2 N3785 P1360 BST 30 0x4080009c FP BE Sec
!#2 N3786 P1361 MEMBAR
!#2 N3787 P1362 BST 14 0x4080009d FP BE Sec
!#2 N3788 P1363 MEMBAR
!#2 N3789 P1364 REPLACEMENT 7 Int BE Pri
!#2 N3790 P1365 MEMBAR
!#2 N3791 P1366 BST 15 0x4080009e FP BE Pri
!#2 N3792 P1367 MEMBAR
!#2 N3793 P1368 REPLACEMENT 24 Int BE Pri
!#2 N3794 P1369 LD 13 -1 FP BE Pri
!#2 N3795 P1370 LD 1 -1 FP BE Pri
!#2 N3796 P1371 LD 28 -1 FP BE Pri
!#2 N3797 P1372 MEMBAR
!#2 N3798 P1373 BST 31 0x4080009f FP BE Pri
!#2 N3799 P1374 MEMBAR
!#2 N3800 P1375 BLD 28 -1 FP BE Pri
!#2 N3801 P1376 MEMBAR
!#2 N3802 P1377 REPLACEMENT 13 Int BE Pri
!#2 N3803 P1378 REPLACEMENT 26 Int BE Pri
!#2 N3804 P1379 REPLACEMENT 33 Int BE Pri
!#2 N3805 P1380 MEMBAR
!#2 N3806 P1381 BST 21 0x408000a0 FP BE Sec
!#2 N3807 P1381 BST 22 0x408000a1 FP BE Sec
!#A N3806 N3807
!#2 N3808 P1381 BST 23 0x408000a2 FP BE Sec
!#2 N3809 P1382 MEMBAR
!#2 N3810 P1383 BSTC 20 0x408000a3 FP BE Pri
!#2 N3811 P1384 MEMBAR
!#2 N3812 P1385 ST 1 0x1000016 Int BE Sec
!#2 N3813 P1386 REPLACEMENT 9 Int BE Pri
!#2 N3814 P1387 LD 26 -1 FP BE Pri
!#2 N3815 P1388 IDC_FLIP 19 Int BE Pri
!#2 N3816 P1389 LD 10 -1 Int BE Pri
!#2 N3817 P1390 MEMBAR
!#2 N3818 P1391 BLD 26 -1 FP BE Sec
!#2 N3819 P1391 BLD 27 -1 FP BE Sec
!#2 N3820 P1392 MEMBAR
!#2 N3821 P1393 REPLACEMENT 12 Int BE Pri
!#2 N3822 P1394 LD 29 -1 FP BE Sec
!#2 N3823 P1395 LD 3 -1 FP BE Nuc
!#2 N3824 P1396 REPLACEMENT 9 Int BE Pri
!#2 N3825 P1397 ST 9 0x1000017 Int BE Sec
!#2 N3826 P1398 ST 19 0x408000a4 FP BE Pri
!#2 N3827 P1399 MEMBAR
!#2 N3828 P1400 BLD 18 -1 FP BE Pri
!#2 N3829 P1401 MEMBAR
!#2 N3830 P1402 REPLACEMENT 1 Int BE Sec
!#2 N3831 P1403 MEMBAR
!#2 N3832 P1404 BSTC 0 0x408000a5 FP BE Pri
!#2 N3833 P1404 BSTC 1 0x408000a6 FP BE Pri
!#A N3832 N3833
!#2 N3834 P1404 BSTC 2 0x408000a7 FP BE Pri
!#2 N3835 P1404 BSTC 3 0x408000a8 FP BE Pri
!#2 N3836 P1404 BSTC 4 0x408000a9 FP BE Pri
!#2 N3837 P1405 MEMBAR
!#2 N3838 P1406 REPLACEMENT 1 Int BE Pri
!#2 N3839 P1407 REPLACEMENT 13 Int BE Nuc
!#2 N3840 P1408 ST 20 0x408000aa FP BE Pri
!#2 N3841 P1409 LD 20 -1 FP BE Pri
!#2 N3842 P1410 REPLACEMENT 30 Int BE Pri
!#2 N3843 P1411 LD 26 -1 FP BE Pri
!#2 N3844 P1412 MEMBAR
!#2 N3845 P1413 BLD 32 -1 FP BE Pri
!#2 N3846 P1414 MEMBAR
!#2 N3847 P1415 LD 3 -1 Int BE Nuc
!#2 N3848 P1416 MEMBAR
!#2 N3849 P1417 BLD 5 -1 FP BE Pri
!#2 N3850 P1417 BLD 6 -1 FP BE Pri
!#2 N3851 P1418 MEMBAR
!#2 N3852 P1419 BST 16 0x408000ab FP BE Sec
!#2 N3853 P1420 MEMBAR
!#2 N3854 P1421 BST 20 0x408000ac FP BE Pri
!#2 N3855 P1422 MEMBAR
!#2 N3856 P1423 LD 23 -1 Int BE Pri
!#2 N3857 P1424 REPLACEMENT 5 Int BE Pri
!#2 N3858 P1425 LD 27 -1 Int BE Nuc
!#2 N3859 P1426 REPLACEMENT 10 Int BE Pri
!#2 N3860 P1427 REPLACEMENT 3 Int BE Pri
!#2 N3861 P1428 MEMBAR
!#2 N3862 P1429 BLD 26 -1 FP BE Pri
!#2 N3863 P1429 BLD 27 -1 FP BE Pri
!#2 N3864 P1430 MEMBAR
!#2 N3865 P1431 BLD 21 -1 FP BE Pri
!#2 N3866 P1431 BLD 22 -1 FP BE Pri
!#A N3865 N3866
!#2 N3867 P1431 BLD 23 -1 FP BE Pri
!#2 N3868 P1432 MEMBAR
!#2 N3869 P1433 BST 5 0x408000ad FP BE Pri
!#2 N3870 P1433 BST 6 0x408000ae FP BE Pri
!#2 N3871 P1434 MEMBAR
!#2 N3872 P1435 LD 1 -1 Int BE Pri
!#2 N3873 P1436 MEMBAR
!#2 N3874 P1437 BST 8 0x408000af FP BE Pri
!#2 N3875 P1437 BST 9 0x408000b0 FP BE Pri
!#2 N3876 P1438 MEMBAR
!#2 N3877 P1439 BLD 11 -1 FP BE Pri
!#2 N3878 P1439 BLD 12 -1 FP BE Pri
!#A N3877 N3878
!#2 N3879 P1439 BLD 13 -1 FP BE Pri
!#2 N3880 P1440 MEMBAR
!#2 N3881 P1441 ST 11 0x1000018 Int BE Pri
!#2 N3882 P1442 ST 2 0x1000019 Int BE Pri
!#2 N3883 P1443 REPLACEMENT 29 Int BE Nuc
!#2 N3884 P1444 REPLACEMENT 6 Int BE Pri
!#2 N3885 P1445 PREFETCH 23 Int BE Sec
!#2 N3886 P1446 MEMBAR
!#2 N3887 P1447 BLD 11 -1 FP BE Pri
!#2 N3888 P1447 BLD 12 -1 FP BE Pri
!#A N3887 N3888
!#2 N3889 P1447 BLD 13 -1 FP BE Pri
!#2 N3890 P1448 MEMBAR
!#2 N3891 P1449 BLD 0 -1 FP BE Pri
!#2 N3892 P1449 BLD 1 -1 FP BE Pri
!#A N3891 N3892
!#2 N3893 P1449 BLD 2 -1 FP BE Pri
!#2 N3894 P1449 BLD 3 -1 FP BE Pri
!#2 N3895 P1449 BLD 4 -1 FP BE Pri
!#2 N3896 P1450 MEMBAR
!#2 N3897 P1451 LD 6 -1 Int BE Nuc Loop_exit
!#2 N3898 P848 ST 27 0x408000b1 FP BE Sec Loop_entry
!#2 N3899 P849 REPLACEMENT 4 Int BE Pri
!#2 N3900 P850 MEMBAR
!#2 N3901 P851 BLD 14 -1 FP BE Pri
!#2 N3902 P852 MEMBAR
!#2 N3903 P853 LD 8 -1 Int BE Pri
!#2 N3904 P854 IDC_FLIP 21 Int BE Pri
!#2 N3905 P855 REPLACEMENT 23 Int BE Pri
!#2 N3906 P856 LD 22 -1 Int BE Pri
!#2 N3907 P857 MEMBAR
!#2 N3908 P858 BLD 5 -1 FP BE Sec
!#2 N3909 P858 BLD 6 -1 FP BE Sec
!#2 N3910 P859 MEMBAR
!#2 N3911 P860 LD 12 -1 FP BE Sec
!#2 N3912 P861 REPLACEMENT 24 Int BE Pri
!#2 N3913 P862 LD 28 -1 FP BE Pri
!#2 N3914 P863 MEMBAR
!#2 N3915 P864 BST 16 0x408000b2 FP BE Pri
!#2 N3916 P865 MEMBAR
!#2 N3917 P866 LD 4 -1 FP BE Pri
!#2 N3918 P867 REPLACEMENT 4 Int BE Pri
!#2 N3919 P868 IDC_FLIP 11 Int BE Pri
!#2 N3920 P869 ST 16 0x100001a Int BE Pri
!#2 N3921 P870 MEMBAR
!#2 N3922 P871 BST 11 0x408000b3 FP BE Sec
!#2 N3923 P871 BST 12 0x408000b4 FP BE Sec
!#A N3922 N3923
!#2 N3924 P871 BST 13 0x408000b5 FP BE Sec
!#2 N3925 P872 MEMBAR
!#2 N3926 P873 BLD 33 -1 FP BE Pri
!#2 N3927 P874 MEMBAR
!#2 N3928 P875 REPLACEMENT 31 Int BE Pri
!#2 N3929 P876 MEMBAR
!#2 N3930 P877 BLD 0 -1 FP BE Pri
!#2 N3931 P877 BLD 1 -1 FP BE Pri
!#A N3930 N3931
!#2 N3932 P877 BLD 2 -1 FP BE Pri
!#2 N3933 P877 BLD 3 -1 FP BE Pri
!#2 N3934 P877 BLD 4 -1 FP BE Pri
!#2 N3935 P878 MEMBAR
!#2 N3936 P879 ST 8 0x408000b6 FP BE Pri
!#2 N3937 P880 LD 0 -1 Int BE Sec
!#2 N3938 P881 LD 33 -1 FP BE Pri
!#2 N3939 P882 MEMBAR
!#2 N3940 P883 BST 11 0x408000b7 FP BE Pri
!#2 N3941 P883 BST 12 0x408000b8 FP BE Pri
!#A N3940 N3941
!#2 N3942 P883 BST 13 0x408000b9 FP BE Pri
!#2 N3943 P884 MEMBAR
!#2 N3944 P885 ST 14 0x100001b Int BE Pri
!#2 N3945 P886 ST 18 0x100001c Int BE Nuc
!#2 N3946 P887 ST 15 0x100001d Int BE Nuc
!#2 N3947 P888 MEMBAR
!#2 N3948 P889 BLD 24 -1 FP BE Pri
!#2 N3949 P889 BLD 25 -1 FP BE Pri
!#2 N3950 P890 MEMBAR
!#2 N3951 P891 BSTC 21 0x408000ba FP BE Pri
!#2 N3952 P891 BSTC 22 0x408000bb FP BE Pri
!#A N3951 N3952
!#2 N3953 P891 BSTC 23 0x408000bc FP BE Pri
!#2 N3954 P892 MEMBAR
!#2 N3955 P893 ST 19 0x408000bd FP BE Pri
!#2 N3956 P894 MEMBAR
!#2 N3957 P895 BLD 24 -1 FP BE Pri
!#2 N3958 P895 BLD 25 -1 FP BE Pri
!#2 N3959 P896 MEMBAR
!#2 N3960 P897 REPLACEMENT 28 Int BE Sec
!#2 N3961 P898 MEMBAR
!#2 N3962 P899 BLD 14 -1 FP BE Pri
!#2 N3963 P900 MEMBAR
!#2 N3964 P901 REPLACEMENT 16 Int BE Pri
!#2 N3965 P902 MEMBAR
!#2 N3966 P903 BST 15 0x408000be FP BE Sec
!#2 N3967 P904 MEMBAR
!#2 N3968 P905 REPLACEMENT 9 Int BE Pri
!#2 N3969 P906 LD 5 -1 Int BE Nuc
!#2 N3970 P907 REPLACEMENT 5 Int BE Pri
!#2 N3971 P908 REPLACEMENT 14 Int BE Sec
!#2 N3972 P909 LD 2 -1 Int BE Pri
!#2 N3973 P910 REPLACEMENT 31 Int BE Pri
!#2 N3974 P911 MEMBAR
!#2 N3975 P912 BST 21 0x408000bf FP BE Pri
!#2 N3976 P912 BST 22 0x408000c0 FP BE Pri
!#A N3975 N3976
!#2 N3977 P912 BST 23 0x408000c1 FP BE Pri
!#2 N3978 P913 MEMBAR
!#2 N3979 P914 BLD 17 -1 FP BE Pri
!#2 N3980 P915 MEMBAR
!#2 N3981 P916 ST 0 0x100001e Int BE Sec
!#2 N3982 P917 ST 17 0x408000c2 FP BE Pri
!#2 N3983 P918 ST 4 0x408000c3 FP BE Pri
!#2 N3984 P919 ST 21 0x408000c4 FP BE Pri
!#2 N3985 P920 MEMBAR
!#2 N3986 P921 BLD 31 -1 FP BE Pri
!#2 N3987 P922 MEMBAR
!#2 N3988 P923 BLD 0 -1 FP BE Pri
!#2 N3989 P923 BLD 1 -1 FP BE Pri
!#A N3988 N3989
!#2 N3990 P923 BLD 2 -1 FP BE Pri
!#2 N3991 P923 BLD 3 -1 FP BE Pri
!#2 N3992 P923 BLD 4 -1 FP BE Pri
!#2 N3993 P924 MEMBAR
!#2 N3994 P925 REPLACEMENT 27 Int BE Pri
!#2 N3995 P926 REPLACEMENT 12 Int BE Pri
!#2 N3996 P927 REPLACEMENT 23 Int BE Pri
!#2 N3997 P928 MEMBAR
!#2 N3998 P929 BST 19 0x408000c5 FP BE Pri
!#2 N3999 P930 MEMBAR
!#2 N4000 P931 LD 29 -1 Int BE Pri
!#2 N4001 P932 REPLACEMENT 29 Int BE Nuc
!#2 N4002 P933 REPLACEMENT 16 Int BE Pri
!#2 N4003 P934 LD 21 -1 FP BE Nuc
!#2 N4004 P935 MEMBAR
!#2 N4005 P936 BST 17 0x408000c6 FP BE Pri
!#2 N4006 P937 MEMBAR
!#2 N4007 P938 BLD 20 -1 FP BE Pri
!#2 N4008 P939 MEMBAR
!#2 N4009 P940 BLD 30 -1 FP BE Pri
!#2 N4010 P941 MEMBAR
!#2 N4011 P942 IDC_FLIP 29 Int BE Pri
!#2 N4012 P943 MEMBAR
!#2 N4013 P944 BLD 8 -1 FP BE Pri
!#2 N4014 P944 BLD 9 -1 FP BE Pri
!#2 N4015 P945 MEMBAR
!#2 N4016 P946 BLD 21 -1 FP BE Pri
!#2 N4017 P946 BLD 22 -1 FP BE Pri
!#A N4016 N4017
!#2 N4018 P946 BLD 23 -1 FP BE Pri
!#2 N4019 P947 MEMBAR
!#2 N4020 P948 REPLACEMENT 31 Int BE Pri
!#2 N4021 P949 MEMBAR
!#2 N4022 P950 BST 5 0x408000c7 FP BE Sec
!#2 N4023 P950 BST 6 0x408000c8 FP BE Sec
!#2 N4024 P951 MEMBAR
!#2 N4025 P952 BST 0 0x408000c9 FP BE Pri
!#2 N4026 P952 BST 1 0x408000ca FP BE Pri
!#A N4025 N4026
!#2 N4027 P952 BST 2 0x408000cb FP BE Pri
!#2 N4028 P952 BST 3 0x408000cc FP BE Pri
!#2 N4029 P952 BST 4 0x408000cd FP BE Pri
!#2 N4030 P953 MEMBAR
!#2 N4031 P954 REPLACEMENT 21 Int BE Pri
!#2 N4032 P955 ST 7 0x100001f Int BE Pri
!#2 N4033 P956 MEMBAR
!#2 N4034 P957 BST 29 0x408000ce FP BE Pri
!#2 N4035 P958 MEMBAR
!#2 N4036 P959 REPLACEMENT 5 Int BE Pri
!#2 N4037 P960 MEMBAR
!#2 N4038 P961 BST 21 0x408000cf FP BE Sec
!#2 N4039 P961 BST 22 0x408000d0 FP BE Sec
!#A N4038 N4039
!#2 N4040 P961 BST 23 0x408000d1 FP BE Sec
!#2 N4041 P962 MEMBAR
!#2 N4042 P963 BST 15 0x408000d2 FP BE Pri
!#2 N4043 P964 MEMBAR
!#2 N4044 P965 BST 0 0x408000d3 FP BE Pri
!#2 N4045 P965 BST 1 0x408000d4 FP BE Pri
!#A N4044 N4045
!#2 N4046 P965 BST 2 0x408000d5 FP BE Pri
!#2 N4047 P965 BST 3 0x408000d6 FP BE Pri
!#2 N4048 P965 BST 4 0x408000d7 FP BE Pri
!#2 N4049 P966 MEMBAR
!#2 N4050 P967 BLD 24 -1 FP BE Pri
!#2 N4051 P967 BLD 25 -1 FP BE Pri
!#2 N4052 P968 MEMBAR
!#2 N4053 P969 ST 31 0x408000d8 FP BE Pri
!#2 N4054 P970 MEMBAR
!#2 N4055 P971 BST 31 0x408000d9 FP BE Pri
!#2 N4056 P972 MEMBAR
!#2 N4057 P973 LD 0 -1 FP BE Sec
!#2 N4058 P974 REPLACEMENT 25 Int BE Pri
!#2 N4059 P975 REPLACEMENT 10 Int BE Pri
!#2 N4060 P976 REPLACEMENT 5 Int BE Pri
!#2 N4061 P977 ST 28 0x408000da FP BE Pri
!#2 N4062 P978 MEMBAR
!#2 N4063 P979 BST 32 0x408000db FP BE Sec
!#2 N4064 P980 MEMBAR
!#2 N4065 P981 LD 5 -1 Int BE Pri
!#2 N4066 P982 ST 9 0x1000020 Int BE Sec
!#2 N4067 P983 MEMBAR
!#2 N4068 P984 BSTC 18 0x408000dc FP BE Pri
!#2 N4069 P985 MEMBAR
!#2 N4070 P986 REPLACEMENT 16 Int BE Pri
!#2 N4071 P987 MEMBAR
!#2 N4072 P988 BLD 17 -1 FP BE Pri
!#2 N4073 P989 MEMBAR
!#2 N4074 P990 IDC_FLIP 24 Int BE Pri
!#2 N4075 P991 REPLACEMENT 2 Int BE Pri
!#2 N4076 P992 MEMBAR
!#2 N4077 P993 BST 0 0x408000dd FP BE Pri
!#2 N4078 P993 BST 1 0x408000de FP BE Pri
!#A N4077 N4078
!#2 N4079 P993 BST 2 0x408000df FP BE Pri
!#2 N4080 P993 BST 3 0x408000e0 FP BE Pri
!#2 N4081 P993 BST 4 0x408000e1 FP BE Pri
!#2 N4082 P994 MEMBAR
!#2 N4083 P995 REPLACEMENT 5 Int BE Pri
!#2 N4084 P996 ST 30 0x408000e2 FP BE Pri
!#2 N4085 P997 MEMBAR
!#2 N4086 P998 BST 8 0x408000e3 FP BE Pri
!#2 N4087 P998 BST 9 0x408000e4 FP BE Pri
!#2 N4088 P999 MEMBAR
!#2 N4089 P1000 LD 4 -1 Int BE Pri
!#2 N4090 P1001 LD 8 -1 FP BE Pri
!#2 N4091 P1002 ST 26 0x1000021 Int BE Pri
!#2 N4092 P1003 REPLACEMENT 26 Int BE Sec
!#2 N4093 P1004 LD 33 -1 FP BE Pri
!#2 N4094 P1005 LD 11 -1 Int BE Pri
!#2 N4095 P1006 ST 17 0x1000022 Int BE Pri
!#2 N4096 P1007 IDC_FLIP 1 Int BE Pri
!#2 N4097 P1008 MEMBAR
!#2 N4098 P1009 BLD 20 -1 FP BE Pri
!#2 N4099 P1010 MEMBAR
!#2 N4100 P1011 BLD 21 -1 FP BE Pri
!#2 N4101 P1011 BLD 22 -1 FP BE Pri
!#A N4100 N4101
!#2 N4102 P1011 BLD 23 -1 FP BE Pri
!#2 N4103 P1012 MEMBAR
!#2 N4104 P1013 REPLACEMENT 14 Int BE Pri
!#2 N4105 P1014 MEMBAR
!#2 N4106 P1015 BLD 31 -1 FP BE Pri
!#2 N4107 P1016 MEMBAR
!#2 N4108 P1017 BST 21 0x408000e5 FP BE Sec
!#2 N4109 P1017 BST 22 0x408000e6 FP BE Sec
!#A N4108 N4109
!#2 N4110 P1017 BST 23 0x408000e7 FP BE Sec
!#2 N4111 P1018 MEMBAR
!#2 N4112 P1019 LD 18 -1 Int BE Pri
!#2 N4113 P1020 REPLACEMENT 22 Int BE Pri
!#2 N4114 P1021 MEMBAR
!#2 N4115 P1022 BST 0 0x408000e8 FP BE Pri
!#2 N4116 P1022 BST 1 0x408000e9 FP BE Pri
!#A N4115 N4116
!#2 N4117 P1022 BST 2 0x408000ea FP BE Pri
!#2 N4118 P1022 BST 3 0x408000eb FP BE Pri
!#2 N4119 P1022 BST 4 0x408000ec FP BE Pri
!#2 N4120 P1023 MEMBAR
!#2 N4121 P1024 REPLACEMENT 9 Int BE Pri
!#2 N4122 P1025 REPLACEMENT 9 Int BE Pri
!#2 N4123 P1026 ST 10 0x408000ed FP BE Pri
!#2 N4124 P1027 REPLACEMENT 21 Int BE Pri
!#2 N4125 P1028 ST 14 0x1000023 Int BE Sec
!#2 N4126 P1029 ST 2 0x1000024 Int BE Pri
!#2 N4127 P1030 REPLACEMENT 13 Int BE Pri
!#2 N4128 P1031 MEMBAR
!#2 N4129 P1032 BLD 5 -1 FP BE Pri
!#2 N4130 P1032 BLD 6 -1 FP BE Pri
!#2 N4131 P1033 MEMBAR
!#2 N4132 P1034 REPLACEMENT 16 Int BE Pri
!#2 N4133 P1035 IDC_FLIP 22 Int BE Pri
!#2 N4134 P1036 MEMBAR
!#2 N4135 P1037 BST 24 0x408000ee FP BE Pri
!#2 N4136 P1037 BST 25 0x408000ef FP BE Pri
!#2 N4137 P1038 MEMBAR
!#2 N4138 P1039 ST 0 0x408000f0 FP BE Nuc
!#2 N4139 P1040 REPLACEMENT 6 Int BE Pri
!#2 N4140 P1041 REPLACEMENT 6 Int BE Pri
!#2 N4141 P1042 MEMBAR
!#2 N4142 P1043 BST 0 0x408000f1 FP BE Pri
!#2 N4143 P1043 BST 1 0x408000f2 FP BE Pri
!#A N4142 N4143
!#2 N4144 P1043 BST 2 0x408000f3 FP BE Pri
!#2 N4145 P1043 BST 3 0x408000f4 FP BE Pri
!#2 N4146 P1043 BST 4 0x408000f5 FP BE Pri
!#2 N4147 P1044 MEMBAR
!#2 N4148 P1045 BLD 0 -1 FP BE Pri
!#2 N4149 P1045 BLD 1 -1 FP BE Pri
!#A N4148 N4149
!#2 N4150 P1045 BLD 2 -1 FP BE Pri
!#2 N4151 P1045 BLD 3 -1 FP BE Pri
!#2 N4152 P1045 BLD 4 -1 FP BE Pri
!#2 N4153 P1046 MEMBAR
!#2 N4154 P1047 REPLACEMENT 7 Int BE Pri
!#2 N4155 P1048 REPLACEMENT 26 Int BE Pri
!#2 N4156 P1049 REPLACEMENT 8 Int BE Pri
!#2 N4157 P1050 REPLACEMENT 14 Int BE Pri
!#2 N4158 P1051 MEMBAR
!#2 N4159 P1052 BLD 16 -1 FP BE Pri
!#2 N4160 P1053 MEMBAR
!#2 N4161 P1054 REPLACEMENT 18 Int BE Pri
!#2 N4162 P1055 IDC_FLIP 28 Int BE Pri
!#2 N4163 P1056 LD 26 -1 FP BE Sec
!#2 N4164 P1057 LD 29 -1 FP BE Sec
!#2 N4165 P1058 MEMBAR
!#2 N4166 P1059 BLD 14 -1 FP BE Sec
!#2 N4167 P1060 MEMBAR
!#2 N4168 P1061 LD 17 -1 FP BE Sec
!#2 N4169 P1062 MEMBAR
!#2 N4170 P1063 BST 29 0x408000f6 FP BE Pri
!#2 N4171 P1064 MEMBAR
!#2 N4172 P1065 ST 33 0x408000f7 FP BE Pri
!#2 N4173 P1066 IDC_FLIP 3 Int BE Pri
!#2 N4174 P1067 REPLACEMENT 16 Int BE Pri
!#2 N4175 P1068 LD 12 -1 Int BE Pri
!#2 N4176 P1069 MEMBAR
!#2 N4177 P1070 BLD 8 -1 FP BE Pri
!#2 N4178 P1070 BLD 9 -1 FP BE Pri
!#2 N4179 P1071 MEMBAR
!#2 N4180 P1072 ST 17 0x1000025 Int BE Pri
!#2 N4181 P1073 MEMBAR
!#2 N4182 P1074 BLD 24 -1 FP BE Pri
!#2 N4183 P1074 BLD 25 -1 FP BE Pri
!#2 N4184 P1075 MEMBAR
!#2 N4185 P1076 REPLACEMENT 18 Int BE Pri
!#2 N4186 P1077 REPLACEMENT 16 Int BE Pri
!#2 N4187 P1078 LD 7 -1 Int BE Pri
!#2 N4188 P1079 MEMBAR
!#2 N4189 P1080 BLD 24 -1 FP BE Pri
!#2 N4190 P1080 BLD 25 -1 FP BE Pri
!#2 N4191 P1081 MEMBAR
!#2 N4192 P1082 ST 5 0x1000026 Int BE Pri
!#2 N4193 P1083 MEMBAR
!#2 N4194 P1084 BST 0 0x408000f8 FP BE Pri
!#2 N4195 P1084 BST 1 0x408000f9 FP BE Pri
!#A N4194 N4195
!#2 N4196 P1084 BST 2 0x408000fa FP BE Pri
!#2 N4197 P1084 BST 3 0x408000fb FP BE Pri
!#2 N4198 P1084 BST 4 0x408000fc FP BE Pri
!#2 N4199 P1085 MEMBAR
!#2 N4200 P1086 LD 19 -1 FP BE Sec
!#2 N4201 P1087 REPLACEMENT 18 Int BE Pri
!#2 N4202 P1088 LD 18 -1 Int BE Pri
!#2 N4203 P1089 ST 27 0x408000fd FP BE Pri
!#2 N4204 P1090 REPLACEMENT 21 Int BE Nuc
!#2 N4205 P1091 REPLACEMENT 16 Int BE Sec
!#2 N4206 P1092 REPLACEMENT 7 Int BE Pri
!#2 N4207 P1093 MEMBAR
!#2 N4208 P1094 BLD 11 -1 FP BE Pri
!#2 N4209 P1094 BLD 12 -1 FP BE Pri
!#A N4208 N4209
!#2 N4210 P1094 BLD 13 -1 FP BE Pri
!#2 N4211 P1095 MEMBAR
!#2 N4212 P1096 REPLACEMENT 24 Int BE Sec
!#2 N4213 P1097 REPLACEMENT 30 Int BE Pri
!#2 N4214 P1098 ST 25 0x1000027 Int BE Pri
!#2 N4215 P1099 MEMBAR
!#2 N4216 P1100 BST 29 0x408000fe FP BE Sec
!#2 N4217 P1101 MEMBAR
!#2 N4218 P1102 BST 15 0x408000ff FP BE Pri
!#2 N4219 P1103 MEMBAR
!#2 N4220 P1104 LD 11 -1 Int BE Pri
!#2 N4221 P1105 REPLACEMENT 0 Int BE Pri
!#2 N4222 P1106 REPLACEMENT 18 Int BE Pri
!#2 N4223 P1107 MEMBAR
!#2 N4224 P1108 BLD 8 -1 FP BE Pri
!#2 N4225 P1108 BLD 9 -1 FP BE Pri
!#2 N4226 P1109 MEMBAR
!#2 N4227 P1110 LD 6 -1 FP BE Pri
!#2 N4228 P1111 MEMBAR
!#2 N4229 P1112 BST 24 0x40800100 FP BE Sec
!#2 N4230 P1112 BST 25 0x40800101 FP BE Sec
!#2 N4231 P1113 MEMBAR
!#2 N4232 P1114 BST 21 0x40800102 FP BE Pri
!#2 N4233 P1114 BST 22 0x40800103 FP BE Pri
!#A N4232 N4233
!#2 N4234 P1114 BST 23 0x40800104 FP BE Pri
!#2 N4235 P1115 MEMBAR
!#2 N4236 P1116 BST 8 0x40800105 FP BE Pri
!#2 N4237 P1116 BST 9 0x40800106 FP BE Pri
!#2 N4238 P1117 MEMBAR
!#2 N4239 P1118 BLD 7 -1 FP BE Pri
!#2 N4240 P1119 MEMBAR
!#2 N4241 P1120 REPLACEMENT 12 Int BE Pri
!#2 N4242 P1121 REPLACEMENT 28 Int BE Pri
!#2 N4243 P1122 LD 4 -1 Int BE Pri
!#2 N4244 P1123 MEMBAR
!#2 N4245 P1124 BLD 17 -1 FP BE Pri
!#2 N4246 P1125 MEMBAR
!#2 N4247 P1126 BLD 0 -1 FP BE Pri
!#2 N4248 P1126 BLD 1 -1 FP BE Pri
!#A N4247 N4248
!#2 N4249 P1126 BLD 2 -1 FP BE Pri
!#2 N4250 P1126 BLD 3 -1 FP BE Pri
!#2 N4251 P1126 BLD 4 -1 FP BE Pri
!#2 N4252 P1127 MEMBAR
!#2 N4253 P1128 REPLACEMENT 20 Int BE Pri
!#2 N4254 P1129 REPLACEMENT 15 Int BE Pri
!#2 N4255 P1130 LD 2 -1 FP BE Pri
!#2 N4256 P1131 MEMBAR
!#2 N4257 P1132 BST 29 0x40800107 FP BE Pri
!#2 N4258 P1133 MEMBAR
!#2 N4259 P1134 REPLACEMENT 15 Int BE Sec
!#2 N4260 P1135 LD 9 -1 Int LE Pri
!#2 N4261 P1136 REPLACEMENT 13 Int BE Pri
!#2 N4262 P1137 IDC_FLIP 10 Int BE Pri
!#2 N4263 P1138 ST 27 0x40800108 FP BE Pri
!#2 N4264 P1139 MEMBAR
!#2 N4265 P1140 BLD 0 -1 FP BE Pri
!#2 N4266 P1140 BLD 1 -1 FP BE Pri
!#A N4265 N4266
!#2 N4267 P1140 BLD 2 -1 FP BE Pri
!#2 N4268 P1140 BLD 3 -1 FP BE Pri
!#2 N4269 P1140 BLD 4 -1 FP BE Pri
!#2 N4270 P1141 MEMBAR
!#2 N4271 P1142 ST 12 0x1000028 Int BE Pri
!#2 N4272 P1143 MEMBAR
!#2 N4273 P1144 BLD 8 -1 FP BE Pri
!#2 N4274 P1144 BLD 9 -1 FP BE Pri
!#2 N4275 P1145 MEMBAR
!#2 N4276 P1146 BST 21 0x40800109 FP BE Sec
!#2 N4277 P1146 BST 22 0x4080010a FP BE Sec
!#A N4276 N4277
!#2 N4278 P1146 BST 23 0x4080010b FP BE Sec
!#2 N4279 P1147 MEMBAR
!#2 N4280 P1148 BLD 11 -1 FP BE Pri
!#2 N4281 P1148 BLD 12 -1 FP BE Pri
!#A N4280 N4281
!#2 N4282 P1148 BLD 13 -1 FP BE Pri
!#2 N4283 P1149 MEMBAR
!#2 N4284 P1150 LD 18 -1 Int BE Pri
!#2 N4285 P1151 REPLACEMENT 5 Int BE Pri
!#2 N4286 P1152 MEMBAR
!#2 N4287 P1153 BLD 7 -1 FP BE Pri
!#2 N4288 P1154 MEMBAR
!#2 N4289 P1155 REPLACEMENT 20 Int BE Pri
!#2 N4290 P1156 LD 8 -1 Int BE Pri
!#2 N4291 P1157 MEMBAR
!#2 N4292 P1158 BST 24 0x4080010c FP BE Pri
!#2 N4293 P1158 BST 25 0x4080010d FP BE Pri
!#2 N4294 P1159 MEMBAR
!#2 N4295 P1160 REPLACEMENT 10 Int BE Pri
!#2 N4296 P1161 REPLACEMENT 7 Int BE Pri
!#2 N4297 P1162 IDC_FLIP 30 Int BE Pri
!#2 N4298 P1163 LD 32 -1 Int BE Pri
!#2 N4299 P1164 REPLACEMENT 20 Int BE Pri
!#2 N4300 P1165 MEMBAR
!#2 N4301 P1166 BLD 33 -1 FP BE Sec
!#2 N4302 P1167 MEMBAR
!#2 N4303 P1168 REPLACEMENT 26 Int BE Nuc
!#2 N4304 P1169 ST 16 0x1000029 Int BE Pri
!#2 N4305 P1170 MEMBAR
!#2 N4306 P1171 BLD 21 -1 FP BE Pri
!#2 N4307 P1171 BLD 22 -1 FP BE Pri
!#A N4306 N4307
!#2 N4308 P1171 BLD 23 -1 FP BE Pri
!#2 N4309 P1172 MEMBAR
!#2 N4310 P1173 PREFETCH 4 Int BE Pri
!#2 N4311 P1174 IDC_FLIP 23 Int BE Pri
!#2 N4312 P1175 REPLACEMENT 20 Int BE Pri
!#2 N4313 P1176 REPLACEMENT 20 Int BE Sec
!#2 N4314 P1177 IDC_FLIP 6 Int BE Pri
!#2 N4315 P1178 REPLACEMENT 11 Int BE Pri
!#2 N4316 P1179 REPLACEMENT 18 Int BE Pri
!#2 N4317 P1180 ST 29 0x4080010e FP BE Nuc
!#2 N4318 P1181 LD 24 -1 Int BE Pri
!#2 N4319 P1182 LD 10 -1 Int BE Pri
!#2 N4320 P1183 MEMBAR
!#2 N4321 P1184 BLD 20 -1 FP BE Pri
!#2 N4322 P1185 MEMBAR
!#2 N4323 P1186 REPLACEMENT 23 Int BE Pri
!#2 N4324 P1187 ST 30 0x4080010f FP BE Pri
!#2 N4325 P1188 LD 29 -1 FP BE Pri
!#2 N4326 P1189 MEMBAR
!#2 N4327 P1190 BLD 5 -1 FP BE Pri
!#2 N4328 P1190 BLD 6 -1 FP BE Pri
!#2 N4329 P1191 MEMBAR
!#2 N4330 P1192 BLD 11 -1 FP BE Pri
!#2 N4331 P1192 BLD 12 -1 FP BE Pri
!#A N4330 N4331
!#2 N4332 P1192 BLD 13 -1 FP BE Pri
!#2 N4333 P1193 MEMBAR
!#2 N4334 P1194 ST 8 0x100002a Int BE Nuc
!#2 N4335 P1195 REPLACEMENT 31 Int BE Pri
!#2 N4336 P1196 MEMBAR
!#2 N4337 P1197 BST 19 0x40800110 FP BE Pri
!#2 N4338 P1198 MEMBAR
!#2 N4339 P1199 IDC_FLIP 4 Int BE Pri
!#2 N4340 P1200 LD 10 -1 Int BE Pri
!#2 N4341 P1201 REPLACEMENT 7 Int BE Pri
!#2 N4342 P1202 MEMBAR
!#2 N4343 P1203 BLD 10 -1 FP BE Pri
!#2 N4344 P1204 MEMBAR
!#2 N4345 P1205 BST 0 0x40800111 FP BE Pri
!#2 N4346 P1205 BST 1 0x40800112 FP BE Pri
!#A N4345 N4346
!#2 N4347 P1205 BST 2 0x40800113 FP BE Pri
!#2 N4348 P1205 BST 3 0x40800114 FP BE Pri
!#2 N4349 P1205 BST 4 0x40800115 FP BE Pri
!#2 N4350 P1206 MEMBAR
!#2 N4351 P1207 REPLACEMENT 5 Int BE Pri
!#2 N4352 P1208 ST 9 0x40800116 FP BE Pri
!#2 N4353 P1209 LD 9 -1 Int BE Sec
!#2 N4354 P1210 LD 23 -1 Int BE Pri
!#2 N4355 P1211 MEMBAR
!#2 N4356 P1212 BST 28 0x40800117 FP BE Pri
!#2 N4357 P1213 MEMBAR
!#2 N4358 P1214 REPLACEMENT 0 Int BE Nuc
!#2 N4359 P1215 REPLACEMENT 5 Int BE Nuc
!#2 N4360 P1216 LD 19 -1 FP BE Pri
!#2 N4361 P1217 ST 23 0x100002b Int BE Sec
!#2 N4362 P1218 REPLACEMENT 24 Int BE Pri
!#2 N4363 P1219 LD 20 -1 FP BE Pri
!#2 N4364 P1220 ST 4 0x40800118 FP BE Pri
!#2 N4365 P1221 ST 18 0x40800119 FP BE Pri
!#2 N4366 P1222 MEMBAR
!#2 N4367 P1223 BST 29 0x4080011a FP BE Pri
!#2 N4368 P1224 MEMBAR
!#2 N4369 P1225 BST 11 0x4080011b FP BE Sec
!#2 N4370 P1225 BST 12 0x4080011c FP BE Sec
!#A N4369 N4370
!#2 N4371 P1225 BST 13 0x4080011d FP BE Sec
!#2 N4372 P1226 MEMBAR
!#2 N4373 P1227 BLD 10 -1 FP BE Pri
!#2 N4374 P1228 MEMBAR
!#2 N4375 P1229 ST 18 0x4080011e FP BE Pri
!#2 N4376 P1230 MEMBAR
!#2 N4377 P1231 BST 0 0x4080011f FP BE Pri
!#2 N4378 P1231 BST 1 0x40800120 FP BE Pri
!#A N4377 N4378
!#2 N4379 P1231 BST 2 0x40800121 FP BE Pri
!#2 N4380 P1231 BST 3 0x40800122 FP BE Pri
!#2 N4381 P1231 BST 4 0x40800123 FP BE Pri
!#2 N4382 P1232 MEMBAR
!#2 N4383 P1233 ST 27 0x40800124 FP BE Sec
!#2 N4384 P1234 REPLACEMENT 9 Int BE Sec
!#2 N4385 P1235 ST 30 0x40800125 FP BE Pri
!#2 N4386 P1236 MEMBAR
!#2 N4387 P1237 BST 0 0x40800126 FP BE Pri
!#2 N4388 P1237 BST 1 0x40800127 FP BE Pri
!#A N4387 N4388
!#2 N4389 P1237 BST 2 0x40800128 FP BE Pri
!#2 N4390 P1237 BST 3 0x40800129 FP BE Pri
!#2 N4391 P1237 BST 4 0x4080012a FP BE Pri
!#2 N4392 P1238 MEMBAR
!#2 N4393 P1239 REPLACEMENT 20 Int BE Pri
!#2 N4394 P1240 LD 19 -1 Int BE Sec
!#2 N4395 P1241 REPLACEMENT 29 Int BE Sec
!#2 N4396 P1242 REPLACEMENT 12 Int BE Sec
!#2 N4397 P1243 MEMBAR
!#2 N4398 P1244 BLD 26 -1 FP BE Pri
!#2 N4399 P1244 BLD 27 -1 FP BE Pri
!#2 N4400 P1245 MEMBAR
!#2 N4401 P1246 LD 8 -1 Int BE Pri
!#2 N4402 P1247 MEMBAR
!#2 N4403 P1248 BLD 17 -1 FP BE Pri
!#2 N4404 P1249 MEMBAR
!#2 N4405 P1250 ST 12 0x4080012b FP BE Nuc
!#2 N4406 P1251 LD 18 -1 Int BE Pri
!#2 N4407 P1252 IDC_FLIP 25 Int BE Pri
!#2 N4408 P1253 LD 2 -1 Int BE Pri
!#2 N4409 P1254 MEMBAR
!#2 N4410 P1255 BST 16 0x4080012c FP BE Pri
!#2 N4411 P1256 MEMBAR
!#2 N4412 P1257 LD 14 -1 Int BE Pri
!#2 N4413 P1258 MEMBAR
!#2 N4414 P1259 BLD 15 -1 FP BE Pri
!#2 N4415 P1260 MEMBAR
!#2 N4416 P1261 LD 17 -1 Int BE Pri
!#2 N4417 P1262 REPLACEMENT 19 Int BE Pri
!#2 N4418 P1263 ST 21 0x100002c Int BE Pri
!#2 N4419 P1264 MEMBAR
!#2 N4420 P1265 BSTC 0 0x4080012d FP BE Pri
!#2 N4421 P1265 BSTC 1 0x4080012e FP BE Pri
!#A N4420 N4421
!#2 N4422 P1265 BSTC 2 0x4080012f FP BE Pri
!#2 N4423 P1265 BSTC 3 0x40800130 FP BE Pri
!#2 N4424 P1265 BSTC 4 0x40800131 FP BE Pri
!#2 N4425 P1266 MEMBAR
!#2 N4426 P1267 LD 8 -1 Int BE Pri
!#2 N4427 P1268 MEMBAR
!#2 N4428 P1269 BLD 0 -1 FP BE Sec
!#2 N4429 P1269 BLD 1 -1 FP BE Sec
!#A N4428 N4429
!#2 N4430 P1269 BLD 2 -1 FP BE Sec
!#2 N4431 P1269 BLD 3 -1 FP BE Sec
!#2 N4432 P1269 BLD 4 -1 FP BE Sec
!#2 N4433 P1270 MEMBAR
!#2 N4434 P1271 ST 21 0x40800132 FP BE Nuc
!#2 N4435 P1272 MEMBAR
!#2 N4436 P1273 BLD 0 -1 FP BE Pri
!#2 N4437 P1273 BLD 1 -1 FP BE Pri
!#A N4436 N4437
!#2 N4438 P1273 BLD 2 -1 FP BE Pri
!#2 N4439 P1273 BLD 3 -1 FP BE Pri
!#2 N4440 P1273 BLD 4 -1 FP BE Pri
!#2 N4441 P1274 MEMBAR
!#2 N4442 P1275 LD 18 -1 FP BE Pri
!#2 N4443 P1276 LD 30 -1 Int BE Nuc
!#2 N4444 P1277 ST 4 0x40800133 FP BE Pri
!#2 N4445 P1278 LD 29 -1 Int BE Sec
!#2 N4446 P1279 MEMBAR
!#2 N4447 P1280 BST 19 0x40800134 FP BE Pri
!#2 N4448 P1281 MEMBAR
!#2 N4449 P1282 LD 8 -1 FP BE Pri
!#2 N4450 P1283 LD 14 -1 Int BE Pri
!#2 N4451 P1284 IDC_FLIP 17 Int BE Pri
!#2 N4452 P1285 MEMBAR
!#2 N4453 P1286 BST 14 0x40800135 FP BE Pri
!#2 N4454 P1287 MEMBAR
!#2 N4455 P1288 ST 13 0x100002d Int BE Pri
!#2 N4456 P1289 MEMBAR
!#2 N4457 P1290 BLD 11 -1 FP BE Pri
!#2 N4458 P1290 BLD 12 -1 FP BE Pri
!#A N4457 N4458
!#2 N4459 P1290 BLD 13 -1 FP BE Pri
!#2 N4460 P1291 MEMBAR
!#2 N4461 P1292 REPLACEMENT 12 Int BE Nuc
!#2 N4462 P1293 REPLACEMENT 28 Int BE Pri
!#2 N4463 P1294 MEMBAR
!#2 N4464 P1295 BST 17 0x40800136 FP BE Pri
!#2 N4465 P1296 MEMBAR
!#2 N4466 P1297 BSTC 10 0x40800137 FP BE Pri
!#2 N4467 P1298 MEMBAR
!#2 N4468 P1299 IDC_FLIP 20 Int BE Pri
!#2 N4469 P1300 LD 14 -1 Int BE Pri
!#2 N4470 P1301 REPLACEMENT 3 Int BE Pri
!#2 N4471 P1302 MEMBAR
!#2 N4472 P1303 BLD 15 -1 FP BE Sec
!#2 N4473 P1304 MEMBAR
!#2 N4474 P1305 BLD 16 -1 FP BE Pri
!#2 N4475 P1306 MEMBAR
!#2 N4476 P1307 REPLACEMENT 6 Int BE Sec
!#2 N4477 P1308 LD 14 -1 FP BE Pri
!#2 N4478 P1309 MEMBAR
!#2 N4479 P1310 BST 33 0x40800138 FP BE Pri
!#2 N4480 P1311 MEMBAR
!#2 N4481 P1312 IDC_FLIP 0 Int BE Pri
!#2 N4482 P1313 REPLACEMENT 3 Int BE Pri
!#2 N4483 P1314 ST 32 0x100002e Int BE Nuc
!#2 N4484 P1315 REPLACEMENT 19 Int BE Pri
!#2 N4485 P1316 MEMBAR
!#2 N4486 P1317 BLD 10 -1 FP BE Pri
!#2 N4487 P1318 MEMBAR
!#2 N4488 P1319 REPLACEMENT 10 Int BE Pri
!#2 N4489 P1320 REPLACEMENT 10 Int BE Pri
!#2 N4490 P1321 ST 14 0x40800139 FP BE Sec
!#2 N4491 P1322 MEMBAR
!#2 N4492 P1323 BST 21 0x4080013a FP BE Pri
!#2 N4493 P1323 BST 22 0x4080013b FP BE Pri
!#A N4492 N4493
!#2 N4494 P1323 BST 23 0x4080013c FP BE Pri
!#2 N4495 P1324 MEMBAR
!#2 N4496 P1325 REPLACEMENT 1 Int BE Sec
!#2 N4497 P1326 LD 28 -1 Int BE Pri
!#2 N4498 P1327 REPLACEMENT 30 Int BE Pri
!#2 N4499 P1328 MEMBAR
!#2 N4500 P1329 BLD 0 -1 FP BE Pri
!#2 N4501 P1329 BLD 1 -1 FP BE Pri
!#A N4500 N4501
!#2 N4502 P1329 BLD 2 -1 FP BE Pri
!#2 N4503 P1329 BLD 3 -1 FP BE Pri
!#2 N4504 P1329 BLD 4 -1 FP BE Pri
!#2 N4505 P1330 MEMBAR
!#2 N4506 P1331 BST 24 0x4080013d FP BE Pri
!#2 N4507 P1331 BST 25 0x4080013e FP BE Pri
!#2 N4508 P1332 MEMBAR
!#2 N4509 P1333 LD 17 -1 FP BE Pri
!#2 N4510 P1334 REPLACEMENT 18 Int BE Pri
!#2 N4511 P1335 MEMBAR
!#2 N4512 P1336 BST 8 0x4080013f FP BE Pri
!#2 N4513 P1336 BST 9 0x40800140 FP BE Pri
!#2 N4514 P1337 MEMBAR
!#2 N4515 P1338 BSTC 0 0x40800141 FP BE Pri
!#2 N4516 P1338 BSTC 1 0x40800142 FP BE Pri
!#A N4515 N4516
!#2 N4517 P1338 BSTC 2 0x40800143 FP BE Pri
!#2 N4518 P1338 BSTC 3 0x40800144 FP BE Pri
!#2 N4519 P1338 BSTC 4 0x40800145 FP BE Pri
!#2 N4520 P1339 MEMBAR
!#2 N4521 P1340 BLD 0 -1 FP BE Pri
!#2 N4522 P1340 BLD 1 -1 FP BE Pri
!#A N4521 N4522
!#2 N4523 P1340 BLD 2 -1 FP BE Pri
!#2 N4524 P1340 BLD 3 -1 FP BE Pri
!#2 N4525 P1340 BLD 4 -1 FP BE Pri
!#2 N4526 P1341 MEMBAR
!#2 N4527 P1342 REPLACEMENT 7 Int BE Pri
!#2 N4528 P1343 REPLACEMENT 3 Int BE Pri
!#2 N4529 P1344 REPLACEMENT 13 Int BE Pri
!#2 N4530 P1345 REPLACEMENT 16 Int BE Pri
!#2 N4531 P1346 REPLACEMENT 2 Int BE Pri
!#2 N4532 P1347 MEMBAR
!#2 N4533 P1348 BST 15 0x40800146 FP BE Pri
!#2 N4534 P1349 MEMBAR
!#2 N4535 P1350 REPLACEMENT 13 Int BE Pri
!#2 N4536 P1351 MEMBAR
!#2 N4537 P1352 BST 0 0x40800147 FP BE Pri
!#2 N4538 P1352 BST 1 0x40800148 FP BE Pri
!#A N4537 N4538
!#2 N4539 P1352 BST 2 0x40800149 FP BE Pri
!#2 N4540 P1352 BST 3 0x4080014a FP BE Pri
!#2 N4541 P1352 BST 4 0x4080014b FP BE Pri
!#2 N4542 P1353 MEMBAR
!#2 N4543 P1354 REPLACEMENT 17 Int BE Pri
!#2 N4544 P1355 REPLACEMENT 31 Int BE Pri
!#2 N4545 P1356 LD 1 -1 FP BE Pri
!#2 N4546 P1357 IDC_FLIP 14 Int BE Pri
!#2 N4547 P1358 REPLACEMENT 32 Int BE Pri
!#2 N4548 P1359 MEMBAR
!#2 N4549 P1360 BST 30 0x4080014c FP BE Sec
!#2 N4550 P1361 MEMBAR
!#2 N4551 P1362 BST 14 0x4080014d FP BE Sec
!#2 N4552 P1363 MEMBAR
!#2 N4553 P1364 REPLACEMENT 7 Int BE Pri
!#2 N4554 P1365 MEMBAR
!#2 N4555 P1366 BST 15 0x4080014e FP BE Pri
!#2 N4556 P1367 MEMBAR
!#2 N4557 P1368 REPLACEMENT 24 Int BE Pri
!#2 N4558 P1369 LD 13 -1 FP BE Pri
!#2 N4559 P1370 LD 1 -1 FP BE Pri
!#2 N4560 P1371 LD 28 -1 FP BE Pri
!#2 N4561 P1372 MEMBAR
!#2 N4562 P1373 BST 31 0x4080014f FP BE Pri
!#2 N4563 P1374 MEMBAR
!#2 N4564 P1375 BLD 28 -1 FP BE Pri
!#2 N4565 P1376 MEMBAR
!#2 N4566 P1377 REPLACEMENT 13 Int BE Pri
!#2 N4567 P1378 REPLACEMENT 26 Int BE Pri
!#2 N4568 P1379 REPLACEMENT 33 Int BE Pri
!#2 N4569 P1380 MEMBAR
!#2 N4570 P1381 BST 21 0x40800150 FP BE Sec
!#2 N4571 P1381 BST 22 0x40800151 FP BE Sec
!#A N4570 N4571
!#2 N4572 P1381 BST 23 0x40800152 FP BE Sec
!#2 N4573 P1382 MEMBAR
!#2 N4574 P1383 BSTC 20 0x40800153 FP BE Pri
!#2 N4575 P1384 MEMBAR
!#2 N4576 P1385 ST 1 0x100002f Int BE Sec
!#2 N4577 P1386 REPLACEMENT 9 Int BE Pri
!#2 N4578 P1387 LD 26 -1 FP BE Pri
!#2 N4579 P1388 IDC_FLIP 19 Int BE Pri
!#2 N4580 P1389 LD 10 -1 Int BE Pri
!#2 N4581 P1390 MEMBAR
!#2 N4582 P1391 BLD 26 -1 FP BE Sec
!#2 N4583 P1391 BLD 27 -1 FP BE Sec
!#2 N4584 P1392 MEMBAR
!#2 N4585 P1393 REPLACEMENT 12 Int BE Pri
!#2 N4586 P1394 LD 29 -1 FP BE Sec
!#2 N4587 P1395 LD 3 -1 FP BE Nuc
!#2 N4588 P1396 REPLACEMENT 9 Int BE Pri
!#2 N4589 P1397 ST 9 0x1000030 Int BE Sec
!#2 N4590 P1398 ST 19 0x40800154 FP BE Pri
!#2 N4591 P1399 MEMBAR
!#2 N4592 P1400 BLD 18 -1 FP BE Pri
!#2 N4593 P1401 MEMBAR
!#2 N4594 P1402 REPLACEMENT 1 Int BE Sec
!#2 N4595 P1403 MEMBAR
!#2 N4596 P1404 BSTC 0 0x40800155 FP BE Pri
!#2 N4597 P1404 BSTC 1 0x40800156 FP BE Pri
!#A N4596 N4597
!#2 N4598 P1404 BSTC 2 0x40800157 FP BE Pri
!#2 N4599 P1404 BSTC 3 0x40800158 FP BE Pri
!#2 N4600 P1404 BSTC 4 0x40800159 FP BE Pri
!#2 N4601 P1405 MEMBAR
!#2 N4602 P1406 REPLACEMENT 1 Int BE Pri
!#2 N4603 P1407 REPLACEMENT 13 Int BE Nuc
!#2 N4604 P1408 ST 20 0x4080015a FP BE Pri
!#2 N4605 P1409 LD 20 -1 FP BE Pri
!#2 N4606 P1410 REPLACEMENT 30 Int BE Pri
!#2 N4607 P1411 LD 26 -1 FP BE Pri
!#2 N4608 P1412 MEMBAR
!#2 N4609 P1413 BLD 32 -1 FP BE Pri
!#2 N4610 P1414 MEMBAR
!#2 N4611 P1415 LD 3 -1 Int BE Nuc
!#2 N4612 P1416 MEMBAR
!#2 N4613 P1417 BLD 5 -1 FP BE Pri
!#2 N4614 P1417 BLD 6 -1 FP BE Pri
!#2 N4615 P1418 MEMBAR
!#2 N4616 P1419 BST 16 0x4080015b FP BE Sec
!#2 N4617 P1420 MEMBAR
!#2 N4618 P1421 BST 20 0x4080015c FP BE Pri
!#2 N4619 P1422 MEMBAR
!#2 N4620 P1423 LD 23 -1 Int BE Pri
!#2 N4621 P1424 REPLACEMENT 5 Int BE Pri
!#2 N4622 P1425 LD 27 -1 Int BE Nuc
!#2 N4623 P1426 REPLACEMENT 10 Int BE Pri
!#2 N4624 P1427 REPLACEMENT 3 Int BE Pri
!#2 N4625 P1428 MEMBAR
!#2 N4626 P1429 BLD 26 -1 FP BE Pri
!#2 N4627 P1429 BLD 27 -1 FP BE Pri
!#2 N4628 P1430 MEMBAR
!#2 N4629 P1431 BLD 21 -1 FP BE Pri
!#2 N4630 P1431 BLD 22 -1 FP BE Pri
!#A N4629 N4630
!#2 N4631 P1431 BLD 23 -1 FP BE Pri
!#2 N4632 P1432 MEMBAR
!#2 N4633 P1433 BST 5 0x4080015d FP BE Pri
!#2 N4634 P1433 BST 6 0x4080015e FP BE Pri
!#2 N4635 P1434 MEMBAR
!#2 N4636 P1435 LD 1 -1 Int BE Pri
!#2 N4637 P1436 MEMBAR
!#2 N4638 P1437 BST 8 0x4080015f FP BE Pri
!#2 N4639 P1437 BST 9 0x40800160 FP BE Pri
!#2 N4640 P1438 MEMBAR
!#2 N4641 P1439 BLD 11 -1 FP BE Pri
!#2 N4642 P1439 BLD 12 -1 FP BE Pri
!#A N4641 N4642
!#2 N4643 P1439 BLD 13 -1 FP BE Pri
!#2 N4644 P1440 MEMBAR
!#2 N4645 P1441 ST 11 0x1000031 Int BE Pri
!#2 N4646 P1442 ST 2 0x1000032 Int BE Pri
!#2 N4647 P1443 REPLACEMENT 29 Int BE Nuc
!#2 N4648 P1444 REPLACEMENT 6 Int BE Pri
!#2 N4649 P1445 PREFETCH 23 Int BE Sec
!#2 N4650 P1446 MEMBAR
!#2 N4651 P1447 BLD 11 -1 FP BE Pri
!#2 N4652 P1447 BLD 12 -1 FP BE Pri
!#A N4651 N4652
!#2 N4653 P1447 BLD 13 -1 FP BE Pri
!#2 N4654 P1448 MEMBAR
!#2 N4655 P1449 BLD 0 -1 FP BE Pri
!#2 N4656 P1449 BLD 1 -1 FP BE Pri
!#A N4655 N4656
!#2 N4657 P1449 BLD 2 -1 FP BE Pri
!#2 N4658 P1449 BLD 3 -1 FP BE Pri
!#2 N4659 P1449 BLD 4 -1 FP BE Pri
!#2 N4660 P1450 MEMBAR
!#2 N4661 P1451 LD 6 -1 Int BE Nuc Loop_exit
!#2 N4662 P1452 MEMBAR
!#3 N4663 P1453 MEMBAR
!#3 N4664 P1454 BLD 7 -1 FP BE Pri
!#3 N4665 P1455 MEMBAR
!#3 N4666 P1456 BLD 5 -1 FP BE Pri
!#3 N4667 P1456 BLD 6 -1 FP BE Pri
!#3 N4668 P1457 MEMBAR
!#3 N4669 P1458 BLD 8 -1 FP BE Pri
!#3 N4670 P1458 BLD 9 -1 FP BE Pri
!#3 N4671 P1459 MEMBAR
!#3 N4672 P1460 ST 21 0x41000001 FP BE Sec
!#3 N4673 P1461 MEMBAR
!#3 N4674 P1462 BSTC 32 0x41000002 FP BE Pri
!#3 N4675 P1463 MEMBAR
!#3 N4676 P1464 REPLACEMENT 16 Int BE Pri
!#3 N4677 P1465 MEMBAR
!#3 N4678 P1466 BLD 28 -1 FP BE Pri
!#3 N4679 P1467 MEMBAR
!#3 N4680 P1468 IDC_FLIP 31 Int BE Pri
!#3 N4681 P1469 MEMBAR
!#3 N4682 P1470 BST 26 0x41000003 FP BE Pri
!#3 N4683 P1470 BST 27 0x41000004 FP BE Pri
!#3 N4684 P1471 MEMBAR
!#3 N4685 P1472 REPLACEMENT 18 Int BE Pri
!#3 N4686 P1473 MEMBAR
!#3 N4687 P1474 BLD 0 -1 FP BE Pri
!#3 N4688 P1474 BLD 1 -1 FP BE Pri
!#A N4687 N4688
!#3 N4689 P1474 BLD 2 -1 FP BE Pri
!#3 N4690 P1474 BLD 3 -1 FP BE Pri
!#3 N4691 P1474 BLD 4 -1 FP BE Pri
!#3 N4692 P1475 MEMBAR
!#3 N4693 P1476 LD 11 -1 FP BE Sec
!#3 N4694 P1477 REPLACEMENT 16 Int BE Pri
!#3 N4695 P1478 REPLACEMENT 7 Int BE Sec
!#3 N4696 P1479 LD 11 -1 FP BE Pri
!#3 N4697 P1480 REPLACEMENT 7 Int BE Pri
!#3 N4698 P1481 ST 16 0x1800001 Int BE Sec
!#3 N4699 P1482 REPLACEMENT 26 Int BE Nuc
!#3 N4700 P1483 MEMBAR
!#3 N4701 P1484 BLD 26 -1 FP BE Pri
!#3 N4702 P1484 BLD 27 -1 FP BE Pri
!#3 N4703 P1485 MEMBAR
!#3 N4704 P1486 ST 3 0x41000005 FP BE Pri
!#3 N4705 P1487 MEMBAR
!#3 N4706 P1488 BSTC 5 0x41000006 FP BE Pri
!#3 N4707 P1488 BSTC 6 0x41000007 FP BE Pri
!#3 N4708 P1489 MEMBAR
!#3 N4709 P1490 REPLACEMENT 1 Int BE Pri
!#3 N4710 P1491 ST 26 0x41000008 FP BE Pri
!#3 N4711 P1492 MEMBAR
!#3 N4712 P1493 BLD 29 -1 FP BE Pri
!#3 N4713 P1494 MEMBAR
!#3 N4714 P1495 REPLACEMENT 14 Int BE Nuc
!#3 N4715 P1496 REPLACEMENT 24 Int BE Pri
!#3 N4716 P1497 MEMBAR
!#3 N4717 P1498 BST 21 0x41000009 FP BE Pri
!#3 N4718 P1498 BST 22 0x4100000a FP BE Pri
!#A N4717 N4718
!#3 N4719 P1498 BST 23 0x4100000b FP BE Pri
!#3 N4720 P1499 MEMBAR
!#3 N4721 P1500 LD 23 -1 FP BE Pri
!#3 N4722 P1501 LD 21 -1 FP BE Pri
!#3 N4723 P1502 ST 19 0x4100000c FP BE Nuc
!#3 N4724 P1503 MEMBAR
!#3 N4725 P1504 BLD 5 -1 FP BE Pri
!#3 N4726 P1504 BLD 6 -1 FP BE Pri
!#3 N4727 P1505 MEMBAR
!#3 N4728 P1506 MEMBAR
!#3 N4729 P1507 REPLACEMENT 5 Int BE Sec
!#3 N4730 P1508 ST 17 0x1800002 Int BE Pri
!#3 N4731 P1509 REPLACEMENT 6 Int BE Pri
!#3 N4732 P1510 ST 7 0x4100000d FP BE Pri
!#3 N4733 P1511 MEMBAR
!#3 N4734 P1512 BST 28 0x4100000e FP BE Pri
!#3 N4735 P1513 MEMBAR
!#3 N4736 P1514 BST 0 0x4100000f FP BE Pri
!#3 N4737 P1514 BST 1 0x41000010 FP BE Pri
!#A N4736 N4737
!#3 N4738 P1514 BST 2 0x41000011 FP BE Pri
!#3 N4739 P1514 BST 3 0x41000012 FP BE Pri
!#3 N4740 P1514 BST 4 0x41000013 FP BE Pri
!#3 N4741 P1515 MEMBAR
!#3 N4742 P1516 LD 2 -1 FP BE Nuc
!#3 N4743 P1517 ST 26 0x41000014 FP BE Pri
!#3 N4744 P1518 MEMBAR
!#3 N4745 P1519 BST 11 0x41000015 FP BE Pri
!#3 N4746 P1519 BST 12 0x41000016 FP BE Pri
!#A N4745 N4746
!#3 N4747 P1519 BST 13 0x41000017 FP BE Pri
!#3 N4748 P1520 MEMBAR
!#3 N4749 P1521 REPLACEMENT 12 Int BE Pri
!#3 N4750 P1522 IDC_FLIP 2 Int BE Pri
!#3 N4751 P1523 REPLACEMENT 20 Int BE Pri
!#3 N4752 P1524 ST 17 0x1800003 Int BE Pri
!#3 N4753 P1525 REPLACEMENT 29 Int BE Nuc
!#3 N4754 P1526 REPLACEMENT 32 Int BE Pri
!#3 N4755 P1527 REPLACEMENT 10 Int BE Pri
!#3 N4756 P1528 MEMBAR
!#3 N4757 P1529 BLD 31 -1 FP BE Pri
!#3 N4758 P1530 MEMBAR
!#3 N4759 P1531 REPLACEMENT 8 Int BE Sec
!#3 N4760 P1532 MEMBAR
!#3 N4761 P1533 BST 0 0x41000018 FP BE Pri
!#3 N4762 P1533 BST 1 0x41000019 FP BE Pri
!#A N4761 N4762
!#3 N4763 P1533 BST 2 0x4100001a FP BE Pri
!#3 N4764 P1533 BST 3 0x4100001b FP BE Pri
!#3 N4765 P1533 BST 4 0x4100001c FP BE Pri
!#3 N4766 P1534 MEMBAR
!#3 N4767 P1535 BLD 5 -1 FP BE Pri
!#3 N4768 P1535 BLD 6 -1 FP BE Pri
!#3 N4769 P1536 MEMBAR
!#3 N4770 P1537 IDC_FLIP 0 Int BE Pri
!#3 N4771 P1538 MEMBAR
!#3 N4772 P1539 BSTC 0 0x4100001d FP BE Pri
!#3 N4773 P1539 BSTC 1 0x4100001e FP BE Pri
!#A N4772 N4773
!#3 N4774 P1539 BSTC 2 0x4100001f FP BE Pri
!#3 N4775 P1539 BSTC 3 0x41000020 FP BE Pri
!#3 N4776 P1539 BSTC 4 0x41000021 FP BE Pri
!#3 N4777 P1540 MEMBAR
!#3 N4778 P1541 BST 31 0x41000022 FP BE Pri
!#3 N4779 P1542 MEMBAR
!#3 N4780 P1543 REPLACEMENT 17 Int BE Pri
!#3 N4781 P1544 MEMBAR
!#3 N4782 P1545 BSTC 16 0x41000023 FP BE Pri
!#3 N4783 P1546 MEMBAR
!#3 N4784 P1547 BLD 0 -1 FP BE Pri
!#3 N4785 P1547 BLD 1 -1 FP BE Pri
!#A N4784 N4785
!#3 N4786 P1547 BLD 2 -1 FP BE Pri
!#3 N4787 P1547 BLD 3 -1 FP BE Pri
!#3 N4788 P1547 BLD 4 -1 FP BE Pri
!#3 N4789 P1548 MEMBAR
!#3 N4790 P1549 REPLACEMENT 2 Int BE Pri
!#3 N4791 P1550 LD 27 -1 Int BE Pri
!#3 N4792 P1551 MEMBAR
!#3 N4793 P1552 BLD 26 -1 FP BE Pri
!#3 N4794 P1552 BLD 27 -1 FP BE Pri
!#3 N4795 P1553 MEMBAR
!#3 N4796 P1554 BLD 32 -1 FP BE Pri
!#3 N4797 P1555 MEMBAR
!#3 N4798 P1556 ST 9 0x41000024 FP BE Pri
!#3 N4799 P1557 ST 12 0x41000025 FP BE Pri
!#3 N4800 P1558 MEMBAR
!#3 N4801 P1559 BST 29 0x41000026 FP BE Pri
!#3 N4802 P1560 MEMBAR
!#3 N4803 P1561 REPLACEMENT 11 Int BE Pri
!#3 N4804 P1562 REPLACEMENT 7 Int BE Pri
!#3 N4805 P1563 REPLACEMENT 18 Int BE Pri
!#3 N4806 P1564 MEMBAR
!#3 N4807 P1565 BST 21 0x41000027 FP BE Pri
!#3 N4808 P1565 BST 22 0x41000028 FP BE Pri
!#A N4807 N4808
!#3 N4809 P1565 BST 23 0x41000029 FP BE Pri
!#3 N4810 P1566 MEMBAR
!#3 N4811 P1567 LD 1 -1 Int BE Pri
!#3 N4812 P1568 LD 21 -1 Int LE Sec
!#3 N4813 P1569 MEMBAR
!#3 N4814 P1570 BST 26 0x4100002a FP BE Pri
!#3 N4815 P1570 BST 27 0x4100002b FP BE Pri
!#3 N4816 P1571 MEMBAR
!#3 N4817 P1572 ST 20 0x4100002c FP BE Sec
!#3 N4818 P1573 LD 1 -1 FP BE Pri
!#3 N4819 P1574 MEMBAR
!#3 N4820 P1575 BLD 11 -1 FP BE Pri
!#3 N4821 P1575 BLD 12 -1 FP BE Pri
!#A N4820 N4821
!#3 N4822 P1575 BLD 13 -1 FP BE Pri
!#3 N4823 P1576 MEMBAR
!#3 N4824 P1577 REPLACEMENT 29 Int BE Pri
!#3 N4825 P1578 REPLACEMENT 2 Int BE Pri
!#3 N4826 P1579 REPLACEMENT 1 Int BE Pri
!#3 N4827 P1580 LD 21 -1 FP BE Pri
!#3 N4828 P1581 MEMBAR
!#3 N4829 P1582 BST 32 0x4100002d FP BE Pri
!#3 N4830 P1583 MEMBAR
!#3 N4831 P1584 BST 11 0x4100002e FP BE Pri
!#3 N4832 P1584 BST 12 0x4100002f FP BE Pri
!#A N4831 N4832
!#3 N4833 P1584 BST 13 0x41000030 FP BE Pri
!#3 N4834 P1585 MEMBAR
!#3 N4835 P1586 BLD 29 -1 FP BE Pri
!#3 N4836 P1587 MEMBAR
!#3 N4837 P1588 BLD 16 -1 FP BE Pri
!#3 N4838 P1589 MEMBAR
!#3 N4839 P1590 REPLACEMENT 10 Int BE Sec
!#3 N4840 P1591 MEMBAR
!#3 N4841 P1592 BST 17 0x41000031 FP BE Sec
!#3 N4842 P1593 MEMBAR
!#3 N4843 P1594 REPLACEMENT 26 Int BE Pri
!#3 N4844 P1595 MEMBAR
!#3 N4845 P1596 BST 7 0x41000032 FP BE Pri
!#3 N4846 P1597 MEMBAR
!#3 N4847 P1598 BST 19 0x41000033 FP BE Pri
!#3 N4848 P1599 MEMBAR
!#3 N4849 P1600 BST 5 0x41000034 FP BE Pri
!#3 N4850 P1600 BST 6 0x41000035 FP BE Pri
!#3 N4851 P1601 MEMBAR
!#3 N4852 P1602 REPLACEMENT 26 Int BE Pri
!#3 N4853 P1603 ST 15 0x41000036 FP BE Pri
!#3 N4854 P1604 ST 15 0x1800004 Int BE Nuc
!#3 N4855 P1605 ST 32 0x1800005 Int BE Sec
!#3 N4856 P1606 IDC_FLIP 20 Int BE Pri
!#3 N4857 P1607 REPLACEMENT 25 Int BE Sec
!#3 N4858 P1608 REPLACEMENT 1 Int BE Pri
!#3 N4859 P1609 IDC_FLIP 4 Int BE Pri
!#3 N4860 P1610 MEMBAR
!#3 N4861 P1611 BST 31 0x41000037 FP BE Pri
!#3 N4862 P1612 MEMBAR
!#3 N4863 P1613 IDC_FLIP 3 Int BE Pri
!#3 N4864 P1614 REPLACEMENT 30 Int BE Pri
!#3 N4865 P1615 MEMBAR
!#3 N4866 P1616 BLD 30 -1 FP BE Sec
!#3 N4867 P1617 MEMBAR
!#3 N4868 P1618 BST 0 0x41000038 FP BE Sec
!#3 N4869 P1618 BST 1 0x41000039 FP BE Sec
!#A N4868 N4869
!#3 N4870 P1618 BST 2 0x4100003a FP BE Sec
!#3 N4871 P1618 BST 3 0x4100003b FP BE Sec
!#3 N4872 P1618 BST 4 0x4100003c FP BE Sec
!#3 N4873 P1619 MEMBAR
!#3 N4874 P1620 REPLACEMENT 17 Int BE Sec
!#3 N4875 P1621 MEMBAR
!#3 N4876 P1622 BST 26 0x4100003d FP BE Pri
!#3 N4877 P1622 BST 27 0x4100003e FP BE Pri
!#3 N4878 P1623 MEMBAR
!#3 N4879 P1624 BST 28 0x4100003f FP BE Pri
!#3 N4880 P1625 MEMBAR
!#3 N4881 P1626 REPLACEMENT 24 Int BE Pri
!#3 N4882 P1627 MEMBAR
!#3 N4883 P1628 BLD 7 -1 FP BE Pri
!#3 N4884 P1629 MEMBAR
!#3 N4885 P1630 BLD 24 -1 FP BE Pri
!#3 N4886 P1630 BLD 25 -1 FP BE Pri
!#3 N4887 P1631 MEMBAR
!#3 N4888 P1632 BLD 21 -1 FP BE Pri
!#3 N4889 P1632 BLD 22 -1 FP BE Pri
!#A N4888 N4889
!#3 N4890 P1632 BLD 23 -1 FP BE Pri
!#3 N4891 P1633 MEMBAR
!#3 N4892 P1634 BST 26 0x41000040 FP BE Pri
!#3 N4893 P1634 BST 27 0x41000041 FP BE Pri
!#3 N4894 P1635 MEMBAR
!#3 N4895 P1636 REPLACEMENT 18 Int BE Pri
!#3 N4896 P1637 MEMBAR
!#3 N4897 P1638 BLD 11 -1 FP BE Pri
!#3 N4898 P1638 BLD 12 -1 FP BE Pri
!#A N4897 N4898
!#3 N4899 P1638 BLD 13 -1 FP BE Pri
!#3 N4900 P1639 MEMBAR
!#3 N4901 P1640 BLD 26 -1 FP BE Pri
!#3 N4902 P1640 BLD 27 -1 FP BE Pri
!#3 N4903 P1641 MEMBAR
!#3 N4904 P1642 IDC_FLIP 11 Int BE Pri
!#3 N4905 P1643 ST 30 0x41000042 FP BE Sec
!#3 N4906 P1644 REPLACEMENT 30 Int BE Nuc
!#3 N4907 P1645 IDC_FLIP 13 Int BE Pri
!#3 N4908 P1646 MEMBAR
!#3 N4909 P1647 BST 0 0x41000043 FP BE Pri
!#3 N4910 P1647 BST 1 0x41000044 FP BE Pri
!#A N4909 N4910
!#3 N4911 P1647 BST 2 0x41000045 FP BE Pri
!#3 N4912 P1647 BST 3 0x41000046 FP BE Pri
!#3 N4913 P1647 BST 4 0x41000047 FP BE Pri
!#3 N4914 P1648 MEMBAR
!#3 N4915 P1649 ST 14 0x1800006 Int BE Sec
!#3 N4916 P1650 MEMBAR
!#3 N4917 P1651 BLD 28 -1 FP BE Pri
!#3 N4918 P1652 MEMBAR
!#3 N4919 P1653 LD 1 -1 FP BE Pri
!#3 N4920 P1654 MEMBAR
!#3 N4921 P1655 BLD 11 -1 FP BE Pri
!#3 N4922 P1655 BLD 12 -1 FP BE Pri
!#A N4921 N4922
!#3 N4923 P1655 BLD 13 -1 FP BE Pri
!#3 N4924 P1656 MEMBAR
!#3 N4925 P1657 REPLACEMENT 18 Int BE Pri
!#3 N4926 P1658 IDC_FLIP 6 Int BE Pri
!#3 N4927 P1659 REPLACEMENT 17 Int BE Pri
!#3 N4928 P1660 REPLACEMENT 30 Int BE Nuc
!#3 N4929 P1661 ST 10 0x1800007 Int BE Sec
!#3 N4930 P1662 ST 33 0x1800008 Int BE Pri
!#3 N4931 P1663 MEMBAR
!#3 N4932 P1664 BLD 11 -1 FP BE Pri
!#3 N4933 P1664 BLD 12 -1 FP BE Pri
!#A N4932 N4933
!#3 N4934 P1664 BLD 13 -1 FP BE Pri
!#3 N4935 P1665 MEMBAR
!#3 N4936 P1666 BLD 15 -1 FP BE Sec
!#3 N4937 P1667 MEMBAR
!#3 N4938 P1668 BSTC 24 0x41000048 FP BE Pri
!#3 N4939 P1668 BSTC 25 0x41000049 FP BE Pri
!#3 N4940 P1669 MEMBAR
!#3 N4941 P1670 ST 2 0x4100004a FP BE Pri
!#3 N4942 P1671 LD 0 -1 FP BE Sec
!#3 N4943 P1672 MEMBAR
!#3 N4944 P1673 BLD 10 -1 FP BE Pri
!#3 N4945 P1674 MEMBAR
!#3 N4946 P1675 REPLACEMENT 16 Int BE Pri
!#3 N4947 P1676 REPLACEMENT 29 Int BE Pri
!#3 N4948 P1677 MEMBAR
!#3 N4949 P1678 BST 0 0x4100004b FP BE Pri
!#3 N4950 P1678 BST 1 0x4100004c FP BE Pri
!#A N4949 N4950
!#3 N4951 P1678 BST 2 0x4100004d FP BE Pri
!#3 N4952 P1678 BST 3 0x4100004e FP BE Pri
!#3 N4953 P1678 BST 4 0x4100004f FP BE Pri
!#3 N4954 P1679 MEMBAR
!#3 N4955 P1680 BST 0 0x41000050 FP BE Pri
!#3 N4956 P1680 BST 1 0x41000051 FP BE Pri
!#A N4955 N4956
!#3 N4957 P1680 BST 2 0x41000052 FP BE Pri
!#3 N4958 P1680 BST 3 0x41000053 FP BE Pri
!#3 N4959 P1680 BST 4 0x41000054 FP BE Pri
!#3 N4960 P1681 MEMBAR
!#3 N4961 P1682 REPLACEMENT 11 Int BE Pri
!#3 N4962 P1683 MEMBAR
!#3 N4963 P1684 BLD 0 -1 FP BE Pri
!#3 N4964 P1684 BLD 1 -1 FP BE Pri
!#A N4963 N4964
!#3 N4965 P1684 BLD 2 -1 FP BE Pri
!#3 N4966 P1684 BLD 3 -1 FP BE Pri
!#3 N4967 P1684 BLD 4 -1 FP BE Pri
!#3 N4968 P1685 MEMBAR
!#3 N4969 P1686 REPLACEMENT 16 Int BE Nuc
!#3 N4970 P1687 MEMBAR
!#3 N4971 P1688 BLD 0 -1 FP BE Pri
!#3 N4972 P1688 BLD 1 -1 FP BE Pri
!#A N4971 N4972
!#3 N4973 P1688 BLD 2 -1 FP BE Pri
!#3 N4974 P1688 BLD 3 -1 FP BE Pri
!#3 N4975 P1688 BLD 4 -1 FP BE Pri
!#3 N4976 P1689 MEMBAR
!#3 N4977 P1690 ST 27 0x41000055 FP BE Pri
!#3 N4978 P1691 LD 22 -1 Int BE Sec
!#3 N4979 P1692 MEMBAR
!#3 N4980 P1693 BST 21 0x41000056 FP BE Sec
!#3 N4981 P1693 BST 22 0x41000057 FP BE Sec
!#A N4980 N4981
!#3 N4982 P1693 BST 23 0x41000058 FP BE Sec
!#3 N4983 P1694 MEMBAR
!#3 N4984 P1695 BST 20 0x41000059 FP BE Pri
!#3 N4985 P1696 MEMBAR
!#3 N4986 P1697 REPLACEMENT 20 Int BE Pri
!#3 N4987 P1698 LD 11 -1 Int BE Pri
!#3 N4988 P1699 REPLACEMENT 6 Int BE Nuc
!#3 N4989 P1700 MEMBAR
!#3 N4990 P1701 BST 11 0x4100005a FP BE Pri
!#3 N4991 P1701 BST 12 0x4100005b FP BE Pri
!#A N4990 N4991
!#3 N4992 P1701 BST 13 0x4100005c FP BE Pri
!#3 N4993 P1702 MEMBAR
!#3 N4994 P1703 ST 32 0x1800009 Int BE Nuc
!#3 N4995 P1704 LD 14 -1 FP BE Pri
!#3 N4996 P1705 MEMBAR
!#3 N4997 P1706 BST 8 0x4100005d FP BE Pri
!#3 N4998 P1706 BST 9 0x4100005e FP BE Pri
!#3 N4999 P1707 MEMBAR
!#3 N5000 P1708 BLD 11 -1 FP BE Pri
!#3 N5001 P1708 BLD 12 -1 FP BE Pri
!#A N5000 N5001
!#3 N5002 P1708 BLD 13 -1 FP BE Pri
!#3 N5003 P1709 MEMBAR
!#3 N5004 P1710 BLD 7 -1 FP BE Pri
!#3 N5005 P1711 MEMBAR
!#3 N5006 P1712 REPLACEMENT 0 Int BE Pri
!#3 N5007 P1713 REPLACEMENT 12 Int BE Sec
!#3 N5008 P1714 ST 24 0x4100005f FP BE Nuc
!#3 N5009 P1715 REPLACEMENT 27 Int BE Pri
!#3 N5010 P1716 LD 12 -1 Int BE Pri
!#3 N5011 P1717 MEMBAR
!#3 N5012 P1718 BST 21 0x41000060 FP BE Pri
!#3 N5013 P1718 BST 22 0x41000061 FP BE Pri
!#A N5012 N5013
!#3 N5014 P1718 BST 23 0x41000062 FP BE Pri
!#3 N5015 P1719 MEMBAR
!#3 N5016 P1720 REPLACEMENT 21 Int BE Pri
!#3 N5017 P1721 ST 6 0x180000a Int BE Sec
!#3 N5018 P1722 MEMBAR
!#3 N5019 P1723 BST 11 0x41000063 FP BE Pri
!#3 N5020 P1723 BST 12 0x41000064 FP BE Pri
!#A N5019 N5020
!#3 N5021 P1723 BST 13 0x41000065 FP BE Pri
!#3 N5022 P1724 MEMBAR
!#3 N5023 P1725 IDC_FLIP 15 Int BE Pri
!#3 N5024 P1726 MEMBAR
!#3 N5025 P1727 BST 11 0x41000066 FP BE Sec
!#3 N5026 P1727 BST 12 0x41000067 FP BE Sec
!#A N5025 N5026
!#3 N5027 P1727 BST 13 0x41000068 FP BE Sec
!#3 N5028 P1728 MEMBAR
!#3 N5029 P1729 BLD 7 -1 FP BE Pri
!#3 N5030 P1730 MEMBAR
!#3 N5031 P1731 IDC_FLIP 28 Int BE Pri
!#3 N5032 P1732 MEMBAR
!#3 N5033 P1733 BLD 14 -1 FP BE Pri
!#3 N5034 P1734 MEMBAR
!#3 N5035 P1735 BST 20 0x41000069 FP BE Pri
!#3 N5036 P1736 MEMBAR
!#3 N5037 P1737 REPLACEMENT 31 Int BE Pri
!#3 N5038 P1738 ST 31 0x180000b Int BE Pri
!#3 N5039 P1739 MEMBAR
!#3 N5040 P1740 BSTC 18 0x4100006a FP BE Sec
!#3 N5041 P1741 MEMBAR
!#3 N5042 P1742 BLD 28 -1 FP BE Sec
!#3 N5043 P1743 MEMBAR
!#3 N5044 P1744 ST 11 0x4100006b FP BE Pri
!#3 N5045 P1745 LD 14 -1 Int BE Pri
!#3 N5046 P1746 REPLACEMENT 11 Int BE Pri
!#3 N5047 P1747 LD 30 -1 FP BE Pri
!#3 N5048 P1748 LD 2 -1 FP BE Nuc
!#3 N5049 P1749 ST 5 0x180000c Int BE Pri
!#3 N5050 P1750 MEMBAR
!#3 N5051 P1751 BST 29 0x4100006c FP BE Pri
!#3 N5052 P1752 MEMBAR
!#3 N5053 P1753 ST 9 0x4100006d FP BE Pri
!#3 N5054 P1754 REPLACEMENT 31 Int BE Sec
!#3 N5055 P1755 MEMBAR
!#3 N5056 P1756 BLD 21 -1 FP BE Pri
!#3 N5057 P1756 BLD 22 -1 FP BE Pri
!#A N5056 N5057
!#3 N5058 P1756 BLD 23 -1 FP BE Pri
!#3 N5059 P1757 MEMBAR
!#3 N5060 P1758 MEMBAR
!#3 N5061 P1759 LD 19 -1 FP BE Pri
!#3 N5062 P1760 LD 18 -1 FP BE Pri
!#3 N5063 P1761 REPLACEMENT 23 Int BE Pri
!#3 N5064 P1762 MEMBAR
!#3 N5065 P1763 BST 14 0x4100006e FP BE Pri
!#3 N5066 P1764 MEMBAR
!#3 N5067 P1765 LD 16 -1 FP BE Pri
!#3 N5068 P1766 REPLACEMENT 20 Int BE Pri
!#3 N5069 P1767 MEMBAR
!#3 N5070 P1768 BLD 10 -1 FP BE Sec
!#3 N5071 P1769 MEMBAR
!#3 N5072 P1770 BST 15 0x4100006f FP BE Pri
!#3 N5073 P1771 MEMBAR
!#3 N5074 P1772 REPLACEMENT 7 Int BE Pri
!#3 N5075 P1773 REPLACEMENT 4 Int BE Pri
!#3 N5076 P1774 MEMBAR
!#3 N5077 P1775 BLD 24 -1 FP BE Sec
!#3 N5078 P1775 BLD 25 -1 FP BE Sec
!#3 N5079 P1776 MEMBAR
!#3 N5080 P1777 REPLACEMENT 0 Int BE Pri
!#3 N5081 P1778 ST 3 0x180000d Int BE Pri
!#3 N5082 P1779 MEMBAR
!#3 N5083 P1780 BLD 33 -1 FP BE Pri
!#3 N5084 P1781 MEMBAR
!#3 N5085 P1782 BST 0 0x41000070 FP BE Pri
!#3 N5086 P1782 BST 1 0x41000071 FP BE Pri
!#A N5085 N5086
!#3 N5087 P1782 BST 2 0x41000072 FP BE Pri
!#3 N5088 P1782 BST 3 0x41000073 FP BE Pri
!#3 N5089 P1782 BST 4 0x41000074 FP BE Pri
!#3 N5090 P1783 MEMBAR
!#3 N5091 P1784 BST 26 0x41000075 FP BE Sec
!#3 N5092 P1784 BST 27 0x41000076 FP BE Sec
!#3 N5093 P1785 MEMBAR
!#3 N5094 P1786 BLD 21 -1 FP BE Pri
!#3 N5095 P1786 BLD 22 -1 FP BE Pri
!#A N5094 N5095
!#3 N5096 P1786 BLD 23 -1 FP BE Pri
!#3 N5097 P1787 MEMBAR
!#3 N5098 P1788 BLD 5 -1 FP BE Sec
!#3 N5099 P1788 BLD 6 -1 FP BE Sec
!#3 N5100 P1789 MEMBAR
!#3 N5101 P1790 REPLACEMENT 29 Int BE Pri
!#3 N5102 P1791 LD 28 -1 Int BE Pri
!#3 N5103 P1792 MEMBAR
!#3 N5104 P1793 BLD 0 -1 FP BE Pri
!#3 N5105 P1793 BLD 1 -1 FP BE Pri
!#A N5104 N5105
!#3 N5106 P1793 BLD 2 -1 FP BE Pri
!#3 N5107 P1793 BLD 3 -1 FP BE Pri
!#3 N5108 P1793 BLD 4 -1 FP BE Pri
!#3 N5109 P1794 MEMBAR
!#3 N5110 P1795 BST 0 0x41000077 FP BE Sec
!#3 N5111 P1795 BST 1 0x41000078 FP BE Sec
!#A N5110 N5111
!#3 N5112 P1795 BST 2 0x41000079 FP BE Sec
!#3 N5113 P1795 BST 3 0x4100007a FP BE Sec
!#3 N5114 P1795 BST 4 0x4100007b FP BE Sec
!#3 N5115 P1796 MEMBAR
!#3 N5116 P1797 ST 2 0x4100007c FP BE Sec
!#3 N5117 P1798 REPLACEMENT 29 Int BE Nuc
!#3 N5118 P1799 REPLACEMENT 23 Int BE Pri
!#3 N5119 P1800 MEMBAR
!#3 N5120 P1801 BLD 26 -1 FP BE Pri
!#3 N5121 P1801 BLD 27 -1 FP BE Pri
!#3 N5122 P1802 MEMBAR
!#3 N5123 P1803 LD 14 -1 FP BE Pri
!#3 N5124 P1804 ST 30 0x180000e Int BE Pri
!#3 N5125 P1805 ST 31 0x180000f Int BE Pri
!#3 N5126 P1806 MEMBAR
!#3 N5127 P1807 BST 10 0x4100007d FP BE Pri
!#3 N5128 P1808 MEMBAR
!#3 N5129 P1809 BLD 0 -1 FP BE Pri
!#3 N5130 P1809 BLD 1 -1 FP BE Pri
!#A N5129 N5130
!#3 N5131 P1809 BLD 2 -1 FP BE Pri
!#3 N5132 P1809 BLD 3 -1 FP BE Pri
!#3 N5133 P1809 BLD 4 -1 FP BE Pri
!#3 N5134 P1810 MEMBAR
!#3 N5135 P1811 LD 4 -1 FP BE Pri
!#3 N5136 P1812 ST 8 0x1800010 Int BE Pri
!#3 N5137 P1813 MEMBAR
!#3 N5138 P1814 BST 26 0x4100007e FP BE Pri
!#3 N5139 P1814 BST 27 0x4100007f FP BE Pri
!#3 N5140 P1815 MEMBAR
!#3 N5141 P1816 REPLACEMENT 4 Int BE Pri
!#3 N5142 P1817 MEMBAR
!#3 N5143 P1818 BST 28 0x41000080 FP BE Pri
!#3 N5144 P1819 MEMBAR
!#3 N5145 P1820 REPLACEMENT 13 Int BE Pri
!#3 N5146 P1821 REPLACEMENT 15 Int BE Pri
!#3 N5147 P1822 ST 23 0x41000081 FP BE Pri
!#3 N5148 P1823 REPLACEMENT 9 Int BE Pri
!#3 N5149 P1824 MEMBAR
!#3 N5150 P1825 BST 0 0x41000082 FP BE Pri
!#3 N5151 P1825 BST 1 0x41000083 FP BE Pri
!#A N5150 N5151
!#3 N5152 P1825 BST 2 0x41000084 FP BE Pri
!#3 N5153 P1825 BST 3 0x41000085 FP BE Pri
!#3 N5154 P1825 BST 4 0x41000086 FP BE Pri
!#3 N5155 P1826 MEMBAR
!#3 N5156 P1827 REPLACEMENT 22 Int BE Pri
!#3 N5157 P1828 MEMBAR
!#3 N5158 P1829 BLD 0 -1 FP BE Pri
!#3 N5159 P1829 BLD 1 -1 FP BE Pri
!#A N5158 N5159
!#3 N5160 P1829 BLD 2 -1 FP BE Pri
!#3 N5161 P1829 BLD 3 -1 FP BE Pri
!#3 N5162 P1829 BLD 4 -1 FP BE Pri
!#3 N5163 P1830 MEMBAR
!#3 N5164 P1831 BST 5 0x41000087 FP BE Pri
!#3 N5165 P1831 BST 6 0x41000088 FP BE Pri
!#3 N5166 P1832 MEMBAR
!#3 N5167 P1833 ST 24 0x1800011 Int BE Pri
!#3 N5168 P1834 LD 4 -1 Int LE Pri
!#3 N5169 P1835 REPLACEMENT 9 Int BE Nuc
!#3 N5170 P1836 MEMBAR
!#3 N5171 P1837 BST 0 0x41000089 FP BE Pri
!#3 N5172 P1837 BST 1 0x4100008a FP BE Pri
!#A N5171 N5172
!#3 N5173 P1837 BST 2 0x4100008b FP BE Pri
!#3 N5174 P1837 BST 3 0x4100008c FP BE Pri
!#3 N5175 P1837 BST 4 0x4100008d FP BE Pri
!#3 N5176 P1838 MEMBAR
!#3 N5177 P1839 BLD 11 -1 FP BE Pri
!#3 N5178 P1839 BLD 12 -1 FP BE Pri
!#A N5177 N5178
!#3 N5179 P1839 BLD 13 -1 FP BE Pri
!#3 N5180 P1840 MEMBAR
!#3 N5181 P1841 BSTC 0 0x4100008e FP BE Pri
!#3 N5182 P1841 BSTC 1 0x4100008f FP BE Pri
!#A N5181 N5182
!#3 N5183 P1841 BSTC 2 0x41000090 FP BE Pri
!#3 N5184 P1841 BSTC 3 0x41000091 FP BE Pri
!#3 N5185 P1841 BSTC 4 0x41000092 FP BE Pri
!#3 N5186 P1842 MEMBAR
!#3 N5187 P1843 LD 10 -1 Int BE Pri
!#3 N5188 P1844 MEMBAR
!#3 N5189 P1845 BST 24 0x41000093 FP BE Pri
!#3 N5190 P1845 BST 25 0x41000094 FP BE Pri
!#3 N5191 P1846 MEMBAR
!#3 N5192 P1847 REPLACEMENT 20 Int BE Nuc
!#3 N5193 P1848 MEMBAR
!#3 N5194 P1849 BLD 0 -1 FP BE Sec
!#3 N5195 P1849 BLD 1 -1 FP BE Sec
!#A N5194 N5195
!#3 N5196 P1849 BLD 2 -1 FP BE Sec
!#3 N5197 P1849 BLD 3 -1 FP BE Sec
!#3 N5198 P1849 BLD 4 -1 FP BE Sec
!#3 N5199 P1850 MEMBAR
!#3 N5200 P1851 ST 14 0x41000095 FP BE Sec
!#3 N5201 P1852 REPLACEMENT 18 Int BE Pri
!#3 N5202 P1853 ST 0 0x41000096 FP BE Pri
!#3 N5203 P1854 FLUSHI 3 Int BE Pri
!#3 N5204 P1855 MEMBAR
!#3 N5205 P1856 BLD 0 -1 FP BE Pri
!#3 N5206 P1856 BLD 1 -1 FP BE Pri
!#A N5205 N5206
!#3 N5207 P1856 BLD 2 -1 FP BE Pri
!#3 N5208 P1856 BLD 3 -1 FP BE Pri
!#3 N5209 P1856 BLD 4 -1 FP BE Pri
!#3 N5210 P1857 MEMBAR
!#3 N5211 P1858 REPLACEMENT 12 Int BE Pri
!#3 N5212 P1859 LD 1 -1 Int BE Pri
!#3 N5213 P1860 LD 16 -1 FP BE Pri
!#3 N5214 P1861 REPLACEMENT 9 Int BE Pri
!#3 N5215 P1862 LD 3 -1 FP BE Pri
!#3 N5216 P1863 LD 33 -1 Int BE Pri
!#3 N5217 P1864 REPLACEMENT 12 Int BE Pri
!#3 N5218 P1865 MEMBAR
!#3 N5219 P1866 BSTC 5 0x41000097 FP BE Sec
!#3 N5220 P1866 BSTC 6 0x41000098 FP BE Sec
!#3 N5221 P1867 MEMBAR
!#3 N5222 P1868 BLD 8 -1 FP BE Sec
!#3 N5223 P1868 BLD 9 -1 FP BE Sec
!#3 N5224 P1869 MEMBAR
!#3 N5225 P1870 BST 0 0x41000099 FP BE Pri
!#3 N5226 P1870 BST 1 0x4100009a FP BE Pri
!#A N5225 N5226
!#3 N5227 P1870 BST 2 0x4100009b FP BE Pri
!#3 N5228 P1870 BST 3 0x4100009c FP BE Pri
!#3 N5229 P1870 BST 4 0x4100009d FP BE Pri
!#3 N5230 P1871 MEMBAR
!#3 N5231 P1872 ST 10 0x1800012 Int BE Pri
!#3 N5232 P1873 ST 21 0x4100009e FP BE Sec
!#3 N5233 P1874 LD 2 -1 FP BE Pri
!#3 N5234 P1875 REPLACEMENT 20 Int BE Pri
!#3 N5235 P1876 REPLACEMENT 17 Int BE Pri
!#3 N5236 P1877 LD 13 -1 FP BE Pri
!#3 N5237 P1878 ST 3 0x1800013 Int BE Sec
!#3 N5238 P1879 MEMBAR
!#3 N5239 P1880 BLD 0 -1 FP BE Pri
!#3 N5240 P1880 BLD 1 -1 FP BE Pri
!#A N5239 N5240
!#3 N5241 P1880 BLD 2 -1 FP BE Pri
!#3 N5242 P1880 BLD 3 -1 FP BE Pri
!#3 N5243 P1880 BLD 4 -1 FP BE Pri
!#3 N5244 P1881 MEMBAR
!#3 N5245 P1882 BLD 0 -1 FP BE Pri
!#3 N5246 P1882 BLD 1 -1 FP BE Pri
!#A N5245 N5246
!#3 N5247 P1882 BLD 2 -1 FP BE Pri
!#3 N5248 P1882 BLD 3 -1 FP BE Pri
!#3 N5249 P1882 BLD 4 -1 FP BE Pri
!#3 N5250 P1883 MEMBAR
!#3 N5251 P1884 BSTC 19 0x4100009f FP BE Pri
!#3 N5252 P1885 MEMBAR
!#3 N5253 P1886 ST 12 0x410000a0 FP BE Nuc
!#3 N5254 P1887 MEMBAR
!#3 N5255 P1888 BST 17 0x410000a1 FP BE Pri
!#3 N5256 P1889 MEMBAR
!#3 N5257 P1890 PREFETCH 18 Int BE Pri
!#3 N5258 P1891 MEMBAR
!#3 N5259 P1892 BLD 28 -1 FP BE Sec
!#3 N5260 P1893 MEMBAR
!#3 N5261 P1894 ST 17 0x410000a2 FP BE Sec
!#3 N5262 P1895 LD 11 -1 Int BE Pri
!#3 N5263 P1896 LD 28 -1 Int BE Pri
!#3 N5264 P1897 REPLACEMENT 12 Int BE Pri
!#3 N5265 P1898 MEMBAR
!#3 N5266 P1899 BST 31 0x410000a3 FP BE Pri
!#3 N5267 P1900 MEMBAR
!#3 N5268 P1901 LD 24 -1 Int BE Sec
!#3 N5269 P1902 MEMBAR
!#3 N5270 P1903 BSTC 26 0x410000a4 FP BE Pri
!#3 N5271 P1903 BSTC 27 0x410000a5 FP BE Pri
!#3 N5272 P1904 MEMBAR
!#3 N5273 P1905 REPLACEMENT 2 Int BE Nuc
!#3 N5274 P1906 REPLACEMENT 23 Int BE Pri
!#3 N5275 P1907 ST 26 0x1800014 Int BE Pri
!#3 N5276 P1908 MEMBAR
!#3 N5277 P1909 BST 19 0x410000a6 FP BE Pri
!#3 N5278 P1910 MEMBAR
!#3 N5279 P1911 LD 0 -1 Int BE Sec
!#3 N5280 P1912 REPLACEMENT 6 Int BE Pri
!#3 N5281 P1913 MEMBAR
!#3 N5282 P1914 BST 0 0x410000a7 FP BE Pri
!#3 N5283 P1914 BST 1 0x410000a8 FP BE Pri
!#A N5282 N5283
!#3 N5284 P1914 BST 2 0x410000a9 FP BE Pri
!#3 N5285 P1914 BST 3 0x410000aa FP BE Pri
!#3 N5286 P1914 BST 4 0x410000ab FP BE Pri
!#3 N5287 P1915 MEMBAR
!#3 N5288 P1916 BLD 30 -1 FP BE Pri
!#3 N5289 P1917 MEMBAR
!#3 N5290 P1918 BSTC 28 0x410000ac FP BE Pri
!#3 N5291 P1919 MEMBAR
!#3 N5292 P1920 REPLACEMENT 13 Int BE Pri
!#3 N5293 P1921 MEMBAR
!#3 N5294 P1922 BLD 24 -1 FP BE Sec
!#3 N5295 P1922 BLD 25 -1 FP BE Sec
!#3 N5296 P1923 MEMBAR
!#3 N5297 P1924 REPLACEMENT 7 Int BE Pri
!#3 N5298 P1925 REPLACEMENT 26 Int BE Pri
!#3 N5299 P1926 ST 32 0x410000ad FP BE Pri
!#3 N5300 P1927 LD 21 -1 FP BE Pri
!#3 N5301 P1928 REPLACEMENT 0 Int BE Pri
!#3 N5302 P1929 ST 28 0x1800015 Int BE Pri
!#3 N5303 P1930 MEMBAR
!#3 N5304 P1931 BST 0 0x410000ae FP BE Pri
!#3 N5305 P1931 BST 1 0x410000af FP BE Pri
!#A N5304 N5305
!#3 N5306 P1931 BST 2 0x410000b0 FP BE Pri
!#3 N5307 P1931 BST 3 0x410000b1 FP BE Pri
!#3 N5308 P1931 BST 4 0x410000b2 FP BE Pri
!#3 N5309 P1932 MEMBAR
!#3 N5310 P1933 REPLACEMENT 15 Int BE Pri
!#3 N5311 P1934 REPLACEMENT 7 Int BE Pri
!#3 N5312 P1935 MEMBAR
!#3 N5313 P1936 BLD 28 -1 FP BE Pri
!#3 N5314 P1937 MEMBAR
!#3 N5315 P1938 BLD 18 -1 FP BE Pri
!#3 N5316 P1939 MEMBAR
!#3 N5317 P1940 REPLACEMENT 10 Int BE Pri
!#3 N5318 P1941 REPLACEMENT 20 Int BE Sec
!#3 N5319 P1942 REPLACEMENT 28 Int BE Pri
!#3 N5320 P1943 MEMBAR
!#3 N5321 P1944 BST 18 0x410000b3 FP BE Pri
!#3 N5322 P1945 MEMBAR
!#3 N5323 P1946 BST 8 0x410000b4 FP BE Pri
!#3 N5324 P1946 BST 9 0x410000b5 FP BE Pri
!#3 N5325 P1947 MEMBAR
!#3 N5326 P1948 REPLACEMENT 28 Int BE Pri
!#3 N5327 P1949 MEMBAR
!#3 N5328 P1950 BST 28 0x410000b6 FP BE Pri
!#3 N5329 P1951 MEMBAR
!#3 N5330 P1952 BST 26 0x410000b7 FP BE Pri
!#3 N5331 P1952 BST 27 0x410000b8 FP BE Pri
!#3 N5332 P1953 MEMBAR
!#3 N5333 P1954 BLD 11 -1 FP BE Pri
!#3 N5334 P1954 BLD 12 -1 FP BE Pri
!#A N5333 N5334
!#3 N5335 P1954 BLD 13 -1 FP BE Pri
!#3 N5336 P1955 MEMBAR
!#3 N5337 P1956 BST 5 0x410000b9 FP BE Sec
!#3 N5338 P1956 BST 6 0x410000ba FP BE Sec
!#3 N5339 P1957 MEMBAR
!#3 N5340 P1958 LD 6 -1 Int BE Pri
!#3 N5341 P1959 REPLACEMENT 9 Int BE Pri
!#3 N5342 P1960 LD 32 -1 FP BE Nuc
!#3 N5343 P1961 MEMBAR
!#3 N5344 P1962 BST 19 0x410000bb FP BE Pri
!#3 N5345 P1963 MEMBAR
!#3 N5346 P1964 REPLACEMENT 33 Int BE Pri
!#3 N5347 P1965 MEMBAR
!#3 N5348 P1966 BSTC 10 0x410000bc FP BE Pri
!#3 N5349 P1967 MEMBAR
!#3 N5350 P1968 BSTC 32 0x410000bd FP BE Pri
!#3 N5351 P1969 MEMBAR
!#3 N5352 P1970 REPLACEMENT 12 Int BE Pri
!#3 N5353 P1971 MEMBAR
!#3 N5354 P1972 BLD 24 -1 FP BE Pri
!#3 N5355 P1972 BLD 25 -1 FP BE Pri
!#3 N5356 P1973 MEMBAR
!#3 N5357 P1974 REPLACEMENT 11 Int BE Pri
!#3 N5358 P1975 MEMBAR
!#3 N5359 P1976 BLD 5 -1 FP BE Pri
!#3 N5360 P1976 BLD 6 -1 FP BE Pri
!#3 N5361 P1977 MEMBAR
!#3 N5362 P1978 LD 12 -1 Int BE Pri
!#3 N5363 P1979 LD 22 -1 FP BE Pri
!#3 N5364 P1980 REPLACEMENT 2 Int BE Pri
!#3 N5365 P1981 ST 7 0x1800016 Int BE Pri
!#3 N5366 P1982 LD 28 -1 FP BE Pri
!#3 N5367 P1983 REPLACEMENT 32 Int BE Pri
!#3 N5368 P1984 REPLACEMENT 20 Int BE Nuc
!#3 N5369 P1985 REPLACEMENT 22 Int BE Pri
!#3 N5370 P1986 ST 4 0x1800017 Int BE Pri
!#3 N5371 P1987 MEMBAR
!#3 N5372 P1988 BLD 15 -1 FP BE Pri
!#3 N5373 P1989 MEMBAR
!#3 N5374 P1990 BST 31 0x410000be FP BE Pri
!#3 N5375 P1991 MEMBAR
!#3 N5376 P1992 IDC_FLIP 28 Int BE Pri
!#3 N5377 P1993 LD 32 -1 FP BE Pri
!#3 N5378 P1994 REPLACEMENT 32 Int BE Pri
!#3 N5379 P1995 MEMBAR
!#3 N5380 P1996 BLD 0 -1 FP BE Pri
!#3 N5381 P1996 BLD 1 -1 FP BE Pri
!#A N5380 N5381
!#3 N5382 P1996 BLD 2 -1 FP BE Pri
!#3 N5383 P1996 BLD 3 -1 FP BE Pri
!#3 N5384 P1996 BLD 4 -1 FP BE Pri
!#3 N5385 P1997 MEMBAR
!#3 N5386 P1998 LD 17 -1 Int BE Sec
!#3 N5387 P1999 MEMBAR
!#3 N5388 P2000 BST 18 0x410000bf FP BE Pri
!#3 N5389 P2001 MEMBAR
!#3 N5390 P2002 REPLACEMENT 11 Int BE Pri
!#3 N5391 P2003 REPLACEMENT 29 Int BE Pri
!#3 N5392 P2004 LD 32 -1 FP BE Pri
!#3 N5393 P2005 MEMBAR
!#3 N5394 P2006 BLD 17 -1 FP BE Pri
!#3 N5395 P2007 MEMBAR
!#3 N5396 P2008 BLD 0 -1 FP BE Pri
!#3 N5397 P2008 BLD 1 -1 FP BE Pri
!#A N5396 N5397
!#3 N5398 P2008 BLD 2 -1 FP BE Pri
!#3 N5399 P2008 BLD 3 -1 FP BE Pri
!#3 N5400 P2008 BLD 4 -1 FP BE Pri
!#3 N5401 P2009 MEMBAR
!#3 N5402 P2010 BLD 28 -1 FP BE Sec
!#3 N5403 P2011 MEMBAR
!#3 N5404 P2012 REPLACEMENT 32 Int BE Pri
!#3 N5405 P2013 REPLACEMENT 32 Int BE Pri
!#3 N5406 P2014 ST 5 0x1800018 Int LE Pri
!#3 N5407 P2015 MEMBAR
!#3 N5408 P2016 BLD 29 -1 FP BE Pri
!#3 N5409 P2017 MEMBAR
!#3 N5410 P2018 REPLACEMENT 26 Int BE Pri
!#3 N5411 P2019 MEMBAR
!#3 N5412 P2020 BST 29 0x410000c0 FP BE Pri
!#3 N5413 P2021 MEMBAR
!#3 N5414 P2022 BST 0 0x410000c1 FP BE Pri
!#3 N5415 P2022 BST 1 0x410000c2 FP BE Pri
!#A N5414 N5415
!#3 N5416 P2022 BST 2 0x410000c3 FP BE Pri
!#3 N5417 P2022 BST 3 0x410000c4 FP BE Pri
!#3 N5418 P2022 BST 4 0x410000c5 FP BE Pri
!#3 N5419 P2023 MEMBAR
!#3 N5420 P2024 ST 29 0x1800019 Int BE Nuc
!#3 N5421 P2025 LD 15 -1 Int BE Pri
!#3 N5422 P2026 ST 7 0x410000c6 FP BE Sec
!#3 N5423 P2027 MEMBAR
!#3 N5424 P2028 BLD 0 -1 FP BE Sec
!#3 N5425 P2028 BLD 1 -1 FP BE Sec
!#A N5424 N5425
!#3 N5426 P2028 BLD 2 -1 FP BE Sec
!#3 N5427 P2028 BLD 3 -1 FP BE Sec
!#3 N5428 P2028 BLD 4 -1 FP BE Sec
!#3 N5429 P2029 MEMBAR
!#3 N5430 P2030 IDC_FLIP 1 Int BE Pri
!#3 N5431 P2031 REPLACEMENT 23 Int BE Sec
!#3 N5432 P2032 MEMBAR
!#3 N5433 P2033 BLD 19 -1 FP BE Pri
!#3 N5434 P2034 MEMBAR
!#3 N5435 P2035 IDC_FLIP 14 Int BE Pri
!#3 N5436 P2036 ST 5 0x410000c7 FP BE Pri
!#3 N5437 P2037 REPLACEMENT 2 Int BE Pri
!#3 N5438 P2038 MEMBAR
!#3 N5439 P2039 BLD 15 -1 FP BE Pri
!#3 N5440 P2040 MEMBAR
!#3 N5441 P2041 PREFETCH 1 Int BE Pri
!#3 N5442 P2042 REPLACEMENT 12 Int BE Pri
!#3 N5443 P2043 MEMBAR
!#3 N5444 P2044 BST 29 0x410000c8 FP BE Pri
!#3 N5445 P2045 MEMBAR
!#3 N5446 P2046 ST 25 0x180001a Int BE Pri
!#3 N5447 P2047 LD 18 -1 FP BE Sec
!#3 N5448 P2048 LD 3 -1 FP BE Pri
!#3 N5449 P2049 REPLACEMENT 21 Int BE Pri
!#3 N5450 P2050 MEMBAR
!#3 N5451 P2051 BST 0 0x410000c9 FP BE Pri
!#3 N5452 P2051 BST 1 0x410000ca FP BE Pri
!#A N5451 N5452
!#3 N5453 P2051 BST 2 0x410000cb FP BE Pri
!#3 N5454 P2051 BST 3 0x410000cc FP BE Pri
!#3 N5455 P2051 BST 4 0x410000cd FP BE Pri
!#3 N5456 P2052 MEMBAR
!#3 N5457 P2053 ST 11 0x410000ce FP BE Pri
!#3 N5458 P2054 MEMBAR
!#3 N5459 P2055 BST 21 0x410000cf FP BE Pri
!#3 N5460 P2055 BST 22 0x410000d0 FP BE Pri
!#A N5459 N5460
!#3 N5461 P2055 BST 23 0x410000d1 FP BE Pri
!#3 N5462 P2056 MEMBAR
!#3 N5463 P2057 ST 33 0x410000d2 FP BE Pri
!#3 N5464 P2058 ST 23 0x410000d3 FP BE Pri
!#3 N5465 P2059 MEMBAR
!#3 N5466 P2060 BLD 21 -1 FP BE Pri
!#3 N5467 P2060 BLD 22 -1 FP BE Pri
!#A N5466 N5467
!#3 N5468 P2060 BLD 23 -1 FP BE Pri
!#3 N5469 P2061 MEMBAR
!#3 N5470 P2062 BST 20 0x410000d4 FP BE Pri
!#3 N5471 P2063 MEMBAR
!#3 N5472 P2064 BSTC 32 0x410000d5 FP BE Pri
!#3 N5473 P2065 MEMBAR
!#3 N5474 P2066 LD 23 -1 Int BE Pri
!#3 N5475 P2067 MEMBAR
!#3 N5476 P2068 BST 24 0x410000d6 FP BE Pri
!#3 N5477 P2068 BST 25 0x410000d7 FP BE Pri
!#3 N5478 P2069 MEMBAR
!#3 N5479 P2070 BLD 21 -1 FP BE Pri
!#3 N5480 P2070 BLD 22 -1 FP BE Pri
!#A N5479 N5480
!#3 N5481 P2070 BLD 23 -1 FP BE Pri
!#3 N5482 P2071 MEMBAR
!#3 N5483 P2072 ST 26 0x410000d8 FP BE Pri
!#3 N5484 P2073 MEMBAR
!#3 N5485 P2074 BLD 21 -1 FP BE Pri
!#3 N5486 P2074 BLD 22 -1 FP BE Pri
!#A N5485 N5486
!#3 N5487 P2074 BLD 23 -1 FP BE Pri
!#3 N5488 P2075 MEMBAR
!#3 N5489 P2076 REPLACEMENT 28 Int BE Sec
!#3 N5490 P2077 ST 4 0x180001b Int BE Nuc
!#3 N5491 P2078 ST 3 0x410000d9 FP BE Pri
!#3 N5492 P2079 MEMBAR
!#3 N5493 P2080 BST 7 0x410000da FP BE Pri
!#3 N5494 P2081 MEMBAR
!#3 N5495 P2082 LD 23 -1 Int BE Pri Loop_exit
!#3 N5496 P1453 MEMBAR
!#3 N5497 P1454 BLD 7 -1 FP BE Pri
!#3 N5498 P1455 MEMBAR
!#3 N5499 P1456 BLD 5 -1 FP BE Pri
!#3 N5500 P1456 BLD 6 -1 FP BE Pri
!#3 N5501 P1457 MEMBAR
!#3 N5502 P1458 BLD 8 -1 FP BE Pri
!#3 N5503 P1458 BLD 9 -1 FP BE Pri
!#3 N5504 P1459 MEMBAR
!#3 N5505 P1460 ST 21 0x410000db FP BE Sec
!#3 N5506 P1461 MEMBAR
!#3 N5507 P1462 BSTC 32 0x410000dc FP BE Pri
!#3 N5508 P1463 MEMBAR
!#3 N5509 P1464 REPLACEMENT 16 Int BE Pri
!#3 N5510 P1465 MEMBAR
!#3 N5511 P1466 BLD 28 -1 FP BE Pri
!#3 N5512 P1467 MEMBAR
!#3 N5513 P1468 IDC_FLIP 31 Int BE Pri
!#3 N5514 P1469 MEMBAR
!#3 N5515 P1470 BST 26 0x410000dd FP BE Pri
!#3 N5516 P1470 BST 27 0x410000de FP BE Pri
!#3 N5517 P1471 MEMBAR
!#3 N5518 P1472 REPLACEMENT 18 Int BE Pri
!#3 N5519 P1473 MEMBAR
!#3 N5520 P1474 BLD 0 -1 FP BE Pri
!#3 N5521 P1474 BLD 1 -1 FP BE Pri
!#A N5520 N5521
!#3 N5522 P1474 BLD 2 -1 FP BE Pri
!#3 N5523 P1474 BLD 3 -1 FP BE Pri
!#3 N5524 P1474 BLD 4 -1 FP BE Pri
!#3 N5525 P1475 MEMBAR
!#3 N5526 P1476 LD 11 -1 FP BE Sec
!#3 N5527 P1477 REPLACEMENT 16 Int BE Pri
!#3 N5528 P1478 REPLACEMENT 7 Int BE Sec
!#3 N5529 P1479 LD 11 -1 FP BE Pri
!#3 N5530 P1480 REPLACEMENT 7 Int BE Pri
!#3 N5531 P1481 ST 16 0x180001c Int BE Sec
!#3 N5532 P1482 REPLACEMENT 26 Int BE Nuc
!#3 N5533 P1483 MEMBAR
!#3 N5534 P1484 BLD 26 -1 FP BE Pri
!#3 N5535 P1484 BLD 27 -1 FP BE Pri
!#3 N5536 P1485 MEMBAR
!#3 N5537 P1486 ST 3 0x410000df FP BE Pri
!#3 N5538 P1487 MEMBAR
!#3 N5539 P1488 BSTC 5 0x410000e0 FP BE Pri
!#3 N5540 P1488 BSTC 6 0x410000e1 FP BE Pri
!#3 N5541 P1489 MEMBAR
!#3 N5542 P1490 REPLACEMENT 1 Int BE Pri
!#3 N5543 P1491 ST 26 0x410000e2 FP BE Pri
!#3 N5544 P1492 MEMBAR
!#3 N5545 P1493 BLD 29 -1 FP BE Pri
!#3 N5546 P1494 MEMBAR
!#3 N5547 P1495 REPLACEMENT 14 Int BE Nuc
!#3 N5548 P1496 REPLACEMENT 24 Int BE Pri
!#3 N5549 P1497 MEMBAR
!#3 N5550 P1498 BST 21 0x410000e3 FP BE Pri
!#3 N5551 P1498 BST 22 0x410000e4 FP BE Pri
!#A N5550 N5551
!#3 N5552 P1498 BST 23 0x410000e5 FP BE Pri
!#3 N5553 P1499 MEMBAR
!#3 N5554 P1500 LD 23 -1 FP BE Pri
!#3 N5555 P1501 LD 21 -1 FP BE Pri
!#3 N5556 P1502 ST 19 0x410000e6 FP BE Nuc
!#3 N5557 P1503 MEMBAR
!#3 N5558 P1504 BLD 5 -1 FP BE Pri
!#3 N5559 P1504 BLD 6 -1 FP BE Pri
!#3 N5560 P1505 MEMBAR
!#3 N5561 P1506 MEMBAR
!#3 N5562 P1507 REPLACEMENT 5 Int BE Sec
!#3 N5563 P1508 ST 17 0x180001d Int BE Pri
!#3 N5564 P1509 REPLACEMENT 6 Int BE Pri
!#3 N5565 P1510 ST 7 0x410000e7 FP BE Pri
!#3 N5566 P1511 MEMBAR
!#3 N5567 P1512 BST 28 0x410000e8 FP BE Pri
!#3 N5568 P1513 MEMBAR
!#3 N5569 P1514 BST 0 0x410000e9 FP BE Pri
!#3 N5570 P1514 BST 1 0x410000ea FP BE Pri
!#A N5569 N5570
!#3 N5571 P1514 BST 2 0x410000eb FP BE Pri
!#3 N5572 P1514 BST 3 0x410000ec FP BE Pri
!#3 N5573 P1514 BST 4 0x410000ed FP BE Pri
!#3 N5574 P1515 MEMBAR
!#3 N5575 P1516 LD 2 -1 FP BE Nuc
!#3 N5576 P1517 ST 26 0x410000ee FP BE Pri
!#3 N5577 P1518 MEMBAR
!#3 N5578 P1519 BST 11 0x410000ef FP BE Pri
!#3 N5579 P1519 BST 12 0x410000f0 FP BE Pri
!#A N5578 N5579
!#3 N5580 P1519 BST 13 0x410000f1 FP BE Pri
!#3 N5581 P1520 MEMBAR
!#3 N5582 P1521 REPLACEMENT 12 Int BE Pri
!#3 N5583 P1522 IDC_FLIP 2 Int BE Pri
!#3 N5584 P1523 REPLACEMENT 20 Int BE Pri
!#3 N5585 P1524 ST 17 0x180001e Int BE Pri
!#3 N5586 P1525 REPLACEMENT 29 Int BE Nuc
!#3 N5587 P1526 REPLACEMENT 32 Int BE Pri
!#3 N5588 P1527 REPLACEMENT 10 Int BE Pri
!#3 N5589 P1528 MEMBAR
!#3 N5590 P1529 BLD 31 -1 FP BE Pri
!#3 N5591 P1530 MEMBAR
!#3 N5592 P1531 REPLACEMENT 8 Int BE Sec
!#3 N5593 P1532 MEMBAR
!#3 N5594 P1533 BST 0 0x410000f2 FP BE Pri
!#3 N5595 P1533 BST 1 0x410000f3 FP BE Pri
!#A N5594 N5595
!#3 N5596 P1533 BST 2 0x410000f4 FP BE Pri
!#3 N5597 P1533 BST 3 0x410000f5 FP BE Pri
!#3 N5598 P1533 BST 4 0x410000f6 FP BE Pri
!#3 N5599 P1534 MEMBAR
!#3 N5600 P1535 BLD 5 -1 FP BE Pri
!#3 N5601 P1535 BLD 6 -1 FP BE Pri
!#3 N5602 P1536 MEMBAR
!#3 N5603 P1537 IDC_FLIP 0 Int BE Pri
!#3 N5604 P1538 MEMBAR
!#3 N5605 P1539 BSTC 0 0x410000f7 FP BE Pri
!#3 N5606 P1539 BSTC 1 0x410000f8 FP BE Pri
!#A N5605 N5606
!#3 N5607 P1539 BSTC 2 0x410000f9 FP BE Pri
!#3 N5608 P1539 BSTC 3 0x410000fa FP BE Pri
!#3 N5609 P1539 BSTC 4 0x410000fb FP BE Pri
!#3 N5610 P1540 MEMBAR
!#3 N5611 P1541 BST 31 0x410000fc FP BE Pri
!#3 N5612 P1542 MEMBAR
!#3 N5613 P1543 REPLACEMENT 17 Int BE Pri
!#3 N5614 P1544 MEMBAR
!#3 N5615 P1545 BSTC 16 0x410000fd FP BE Pri
!#3 N5616 P1546 MEMBAR
!#3 N5617 P1547 BLD 0 -1 FP BE Pri
!#3 N5618 P1547 BLD 1 -1 FP BE Pri
!#A N5617 N5618
!#3 N5619 P1547 BLD 2 -1 FP BE Pri
!#3 N5620 P1547 BLD 3 -1 FP BE Pri
!#3 N5621 P1547 BLD 4 -1 FP BE Pri
!#3 N5622 P1548 MEMBAR
!#3 N5623 P1549 REPLACEMENT 2 Int BE Pri
!#3 N5624 P1550 LD 27 -1 Int BE Pri
!#3 N5625 P1551 MEMBAR
!#3 N5626 P1552 BLD 26 -1 FP BE Pri
!#3 N5627 P1552 BLD 27 -1 FP BE Pri
!#3 N5628 P1553 MEMBAR
!#3 N5629 P1554 BLD 32 -1 FP BE Pri
!#3 N5630 P1555 MEMBAR
!#3 N5631 P1556 ST 9 0x410000fe FP BE Pri
!#3 N5632 P1557 ST 12 0x410000ff FP BE Pri
!#3 N5633 P1558 MEMBAR
!#3 N5634 P1559 BST 29 0x41000100 FP BE Pri
!#3 N5635 P1560 MEMBAR
!#3 N5636 P1561 REPLACEMENT 11 Int BE Pri
!#3 N5637 P1562 REPLACEMENT 7 Int BE Pri
!#3 N5638 P1563 REPLACEMENT 18 Int BE Pri
!#3 N5639 P1564 MEMBAR
!#3 N5640 P1565 BST 21 0x41000101 FP BE Pri
!#3 N5641 P1565 BST 22 0x41000102 FP BE Pri
!#A N5640 N5641
!#3 N5642 P1565 BST 23 0x41000103 FP BE Pri
!#3 N5643 P1566 MEMBAR
!#3 N5644 P1567 LD 1 -1 Int BE Pri
!#3 N5645 P1568 LD 21 -1 Int LE Sec
!#3 N5646 P1569 MEMBAR
!#3 N5647 P1570 BST 26 0x41000104 FP BE Pri
!#3 N5648 P1570 BST 27 0x41000105 FP BE Pri
!#3 N5649 P1571 MEMBAR
!#3 N5650 P1572 ST 20 0x41000106 FP BE Sec
!#3 N5651 P1573 LD 1 -1 FP BE Pri
!#3 N5652 P1574 MEMBAR
!#3 N5653 P1575 BLD 11 -1 FP BE Pri
!#3 N5654 P1575 BLD 12 -1 FP BE Pri
!#A N5653 N5654
!#3 N5655 P1575 BLD 13 -1 FP BE Pri
!#3 N5656 P1576 MEMBAR
!#3 N5657 P1577 REPLACEMENT 29 Int BE Pri
!#3 N5658 P1578 REPLACEMENT 2 Int BE Pri
!#3 N5659 P1579 REPLACEMENT 1 Int BE Pri
!#3 N5660 P1580 LD 21 -1 FP BE Pri
!#3 N5661 P1581 MEMBAR
!#3 N5662 P1582 BST 32 0x41000107 FP BE Pri
!#3 N5663 P1583 MEMBAR
!#3 N5664 P1584 BST 11 0x41000108 FP BE Pri
!#3 N5665 P1584 BST 12 0x41000109 FP BE Pri
!#A N5664 N5665
!#3 N5666 P1584 BST 13 0x4100010a FP BE Pri
!#3 N5667 P1585 MEMBAR
!#3 N5668 P1586 BLD 29 -1 FP BE Pri
!#3 N5669 P1587 MEMBAR
!#3 N5670 P1588 BLD 16 -1 FP BE Pri
!#3 N5671 P1589 MEMBAR
!#3 N5672 P1590 REPLACEMENT 10 Int BE Sec
!#3 N5673 P1591 MEMBAR
!#3 N5674 P1592 BST 17 0x4100010b FP BE Sec
!#3 N5675 P1593 MEMBAR
!#3 N5676 P1594 REPLACEMENT 26 Int BE Pri
!#3 N5677 P1595 MEMBAR
!#3 N5678 P1596 BST 7 0x4100010c FP BE Pri
!#3 N5679 P1597 MEMBAR
!#3 N5680 P1598 BST 19 0x4100010d FP BE Pri
!#3 N5681 P1599 MEMBAR
!#3 N5682 P1600 BST 5 0x4100010e FP BE Pri
!#3 N5683 P1600 BST 6 0x4100010f FP BE Pri
!#3 N5684 P1601 MEMBAR
!#3 N5685 P1602 REPLACEMENT 26 Int BE Pri
!#3 N5686 P1603 ST 15 0x41000110 FP BE Pri
!#3 N5687 P1604 ST 15 0x180001f Int BE Nuc
!#3 N5688 P1605 ST 32 0x1800020 Int BE Sec
!#3 N5689 P1606 IDC_FLIP 20 Int BE Pri
!#3 N5690 P1607 REPLACEMENT 25 Int BE Sec
!#3 N5691 P1608 REPLACEMENT 1 Int BE Pri
!#3 N5692 P1609 IDC_FLIP 4 Int BE Pri
!#3 N5693 P1610 MEMBAR
!#3 N5694 P1611 BST 31 0x41000111 FP BE Pri
!#3 N5695 P1612 MEMBAR
!#3 N5696 P1613 IDC_FLIP 3 Int BE Pri
!#3 N5697 P1614 REPLACEMENT 30 Int BE Pri
!#3 N5698 P1615 MEMBAR
!#3 N5699 P1616 BLD 30 -1 FP BE Sec
!#3 N5700 P1617 MEMBAR
!#3 N5701 P1618 BST 0 0x41000112 FP BE Sec
!#3 N5702 P1618 BST 1 0x41000113 FP BE Sec
!#A N5701 N5702
!#3 N5703 P1618 BST 2 0x41000114 FP BE Sec
!#3 N5704 P1618 BST 3 0x41000115 FP BE Sec
!#3 N5705 P1618 BST 4 0x41000116 FP BE Sec
!#3 N5706 P1619 MEMBAR
!#3 N5707 P1620 REPLACEMENT 17 Int BE Sec
!#3 N5708 P1621 MEMBAR
!#3 N5709 P1622 BST 26 0x41000117 FP BE Pri
!#3 N5710 P1622 BST 27 0x41000118 FP BE Pri
!#3 N5711 P1623 MEMBAR
!#3 N5712 P1624 BST 28 0x41000119 FP BE Pri
!#3 N5713 P1625 MEMBAR
!#3 N5714 P1626 REPLACEMENT 24 Int BE Pri
!#3 N5715 P1627 MEMBAR
!#3 N5716 P1628 BLD 7 -1 FP BE Pri
!#3 N5717 P1629 MEMBAR
!#3 N5718 P1630 BLD 24 -1 FP BE Pri
!#3 N5719 P1630 BLD 25 -1 FP BE Pri
!#3 N5720 P1631 MEMBAR
!#3 N5721 P1632 BLD 21 -1 FP BE Pri
!#3 N5722 P1632 BLD 22 -1 FP BE Pri
!#A N5721 N5722
!#3 N5723 P1632 BLD 23 -1 FP BE Pri
!#3 N5724 P1633 MEMBAR
!#3 N5725 P1634 BST 26 0x4100011a FP BE Pri
!#3 N5726 P1634 BST 27 0x4100011b FP BE Pri
!#3 N5727 P1635 MEMBAR
!#3 N5728 P1636 REPLACEMENT 18 Int BE Pri
!#3 N5729 P1637 MEMBAR
!#3 N5730 P1638 BLD 11 -1 FP BE Pri
!#3 N5731 P1638 BLD 12 -1 FP BE Pri
!#A N5730 N5731
!#3 N5732 P1638 BLD 13 -1 FP BE Pri
!#3 N5733 P1639 MEMBAR
!#3 N5734 P1640 BLD 26 -1 FP BE Pri
!#3 N5735 P1640 BLD 27 -1 FP BE Pri
!#3 N5736 P1641 MEMBAR
!#3 N5737 P1642 IDC_FLIP 11 Int BE Pri
!#3 N5738 P1643 ST 30 0x4100011c FP BE Sec
!#3 N5739 P1644 REPLACEMENT 30 Int BE Nuc
!#3 N5740 P1645 IDC_FLIP 13 Int BE Pri
!#3 N5741 P1646 MEMBAR
!#3 N5742 P1647 BST 0 0x4100011d FP BE Pri
!#3 N5743 P1647 BST 1 0x4100011e FP BE Pri
!#A N5742 N5743
!#3 N5744 P1647 BST 2 0x4100011f FP BE Pri
!#3 N5745 P1647 BST 3 0x41000120 FP BE Pri
!#3 N5746 P1647 BST 4 0x41000121 FP BE Pri
!#3 N5747 P1648 MEMBAR
!#3 N5748 P1649 ST 14 0x1800021 Int BE Sec
!#3 N5749 P1650 MEMBAR
!#3 N5750 P1651 BLD 28 -1 FP BE Pri
!#3 N5751 P1652 MEMBAR
!#3 N5752 P1653 LD 1 -1 FP BE Pri
!#3 N5753 P1654 MEMBAR
!#3 N5754 P1655 BLD 11 -1 FP BE Pri
!#3 N5755 P1655 BLD 12 -1 FP BE Pri
!#A N5754 N5755
!#3 N5756 P1655 BLD 13 -1 FP BE Pri
!#3 N5757 P1656 MEMBAR
!#3 N5758 P1657 REPLACEMENT 18 Int BE Pri
!#3 N5759 P1658 IDC_FLIP 6 Int BE Pri
!#3 N5760 P1659 REPLACEMENT 17 Int BE Pri
!#3 N5761 P1660 REPLACEMENT 30 Int BE Nuc
!#3 N5762 P1661 ST 10 0x1800022 Int BE Sec
!#3 N5763 P1662 ST 33 0x1800023 Int BE Pri
!#3 N5764 P1663 MEMBAR
!#3 N5765 P1664 BLD 11 -1 FP BE Pri
!#3 N5766 P1664 BLD 12 -1 FP BE Pri
!#A N5765 N5766
!#3 N5767 P1664 BLD 13 -1 FP BE Pri
!#3 N5768 P1665 MEMBAR
!#3 N5769 P1666 BLD 15 -1 FP BE Sec
!#3 N5770 P1667 MEMBAR
!#3 N5771 P1668 BSTC 24 0x41000122 FP BE Pri
!#3 N5772 P1668 BSTC 25 0x41000123 FP BE Pri
!#3 N5773 P1669 MEMBAR
!#3 N5774 P1670 ST 2 0x41000124 FP BE Pri
!#3 N5775 P1671 LD 0 -1 FP BE Sec
!#3 N5776 P1672 MEMBAR
!#3 N5777 P1673 BLD 10 -1 FP BE Pri
!#3 N5778 P1674 MEMBAR
!#3 N5779 P1675 REPLACEMENT 16 Int BE Pri
!#3 N5780 P1676 REPLACEMENT 29 Int BE Pri
!#3 N5781 P1677 MEMBAR
!#3 N5782 P1678 BST 0 0x41000125 FP BE Pri
!#3 N5783 P1678 BST 1 0x41000126 FP BE Pri
!#A N5782 N5783
!#3 N5784 P1678 BST 2 0x41000127 FP BE Pri
!#3 N5785 P1678 BST 3 0x41000128 FP BE Pri
!#3 N5786 P1678 BST 4 0x41000129 FP BE Pri
!#3 N5787 P1679 MEMBAR
!#3 N5788 P1680 BST 0 0x4100012a FP BE Pri
!#3 N5789 P1680 BST 1 0x4100012b FP BE Pri
!#A N5788 N5789
!#3 N5790 P1680 BST 2 0x4100012c FP BE Pri
!#3 N5791 P1680 BST 3 0x4100012d FP BE Pri
!#3 N5792 P1680 BST 4 0x4100012e FP BE Pri
!#3 N5793 P1681 MEMBAR
!#3 N5794 P1682 REPLACEMENT 11 Int BE Pri
!#3 N5795 P1683 MEMBAR
!#3 N5796 P1684 BLD 0 -1 FP BE Pri
!#3 N5797 P1684 BLD 1 -1 FP BE Pri
!#A N5796 N5797
!#3 N5798 P1684 BLD 2 -1 FP BE Pri
!#3 N5799 P1684 BLD 3 -1 FP BE Pri
!#3 N5800 P1684 BLD 4 -1 FP BE Pri
!#3 N5801 P1685 MEMBAR
!#3 N5802 P1686 REPLACEMENT 16 Int BE Nuc
!#3 N5803 P1687 MEMBAR
!#3 N5804 P1688 BLD 0 -1 FP BE Pri
!#3 N5805 P1688 BLD 1 -1 FP BE Pri
!#A N5804 N5805
!#3 N5806 P1688 BLD 2 -1 FP BE Pri
!#3 N5807 P1688 BLD 3 -1 FP BE Pri
!#3 N5808 P1688 BLD 4 -1 FP BE Pri
!#3 N5809 P1689 MEMBAR
!#3 N5810 P1690 ST 27 0x4100012f FP BE Pri
!#3 N5811 P1691 LD 22 -1 Int BE Sec
!#3 N5812 P1692 MEMBAR
!#3 N5813 P1693 BST 21 0x41000130 FP BE Sec
!#3 N5814 P1693 BST 22 0x41000131 FP BE Sec
!#A N5813 N5814
!#3 N5815 P1693 BST 23 0x41000132 FP BE Sec
!#3 N5816 P1694 MEMBAR
!#3 N5817 P1695 BST 20 0x41000133 FP BE Pri
!#3 N5818 P1696 MEMBAR
!#3 N5819 P1697 REPLACEMENT 20 Int BE Pri
!#3 N5820 P1698 LD 11 -1 Int BE Pri
!#3 N5821 P1699 REPLACEMENT 6 Int BE Nuc
!#3 N5822 P1700 MEMBAR
!#3 N5823 P1701 BST 11 0x41000134 FP BE Pri
!#3 N5824 P1701 BST 12 0x41000135 FP BE Pri
!#A N5823 N5824
!#3 N5825 P1701 BST 13 0x41000136 FP BE Pri
!#3 N5826 P1702 MEMBAR
!#3 N5827 P1703 ST 32 0x1800024 Int BE Nuc
!#3 N5828 P1704 LD 14 -1 FP BE Pri
!#3 N5829 P1705 MEMBAR
!#3 N5830 P1706 BST 8 0x41000137 FP BE Pri
!#3 N5831 P1706 BST 9 0x41000138 FP BE Pri
!#3 N5832 P1707 MEMBAR
!#3 N5833 P1708 BLD 11 -1 FP BE Pri
!#3 N5834 P1708 BLD 12 -1 FP BE Pri
!#A N5833 N5834
!#3 N5835 P1708 BLD 13 -1 FP BE Pri
!#3 N5836 P1709 MEMBAR
!#3 N5837 P1710 BLD 7 -1 FP BE Pri
!#3 N5838 P1711 MEMBAR
!#3 N5839 P1712 REPLACEMENT 0 Int BE Pri
!#3 N5840 P1713 REPLACEMENT 12 Int BE Sec
!#3 N5841 P1714 ST 24 0x41000139 FP BE Nuc
!#3 N5842 P1715 REPLACEMENT 27 Int BE Pri
!#3 N5843 P1716 LD 12 -1 Int BE Pri
!#3 N5844 P1717 MEMBAR
!#3 N5845 P1718 BST 21 0x4100013a FP BE Pri
!#3 N5846 P1718 BST 22 0x4100013b FP BE Pri
!#A N5845 N5846
!#3 N5847 P1718 BST 23 0x4100013c FP BE Pri
!#3 N5848 P1719 MEMBAR
!#3 N5849 P1720 REPLACEMENT 21 Int BE Pri
!#3 N5850 P1721 ST 6 0x1800025 Int BE Sec
!#3 N5851 P1722 MEMBAR
!#3 N5852 P1723 BST 11 0x4100013d FP BE Pri
!#3 N5853 P1723 BST 12 0x4100013e FP BE Pri
!#A N5852 N5853
!#3 N5854 P1723 BST 13 0x4100013f FP BE Pri
!#3 N5855 P1724 MEMBAR
!#3 N5856 P1725 IDC_FLIP 15 Int BE Pri
!#3 N5857 P1726 MEMBAR
!#3 N5858 P1727 BST 11 0x41000140 FP BE Sec
!#3 N5859 P1727 BST 12 0x41000141 FP BE Sec
!#A N5858 N5859
!#3 N5860 P1727 BST 13 0x41000142 FP BE Sec
!#3 N5861 P1728 MEMBAR
!#3 N5862 P1729 BLD 7 -1 FP BE Pri
!#3 N5863 P1730 MEMBAR
!#3 N5864 P1731 IDC_FLIP 28 Int BE Pri
!#3 N5865 P1732 MEMBAR
!#3 N5866 P1733 BLD 14 -1 FP BE Pri
!#3 N5867 P1734 MEMBAR
!#3 N5868 P1735 BST 20 0x41000143 FP BE Pri
!#3 N5869 P1736 MEMBAR
!#3 N5870 P1737 REPLACEMENT 31 Int BE Pri
!#3 N5871 P1738 ST 31 0x1800026 Int BE Pri
!#3 N5872 P1739 MEMBAR
!#3 N5873 P1740 BSTC 18 0x41000144 FP BE Sec
!#3 N5874 P1741 MEMBAR
!#3 N5875 P1742 BLD 28 -1 FP BE Sec
!#3 N5876 P1743 MEMBAR
!#3 N5877 P1744 ST 11 0x41000145 FP BE Pri
!#3 N5878 P1745 LD 14 -1 Int BE Pri
!#3 N5879 P1746 REPLACEMENT 11 Int BE Pri
!#3 N5880 P1747 LD 30 -1 FP BE Pri
!#3 N5881 P1748 LD 2 -1 FP BE Nuc
!#3 N5882 P1749 ST 5 0x1800027 Int BE Pri
!#3 N5883 P1750 MEMBAR
!#3 N5884 P1751 BST 29 0x41000146 FP BE Pri
!#3 N5885 P1752 MEMBAR
!#3 N5886 P1753 ST 9 0x41000147 FP BE Pri
!#3 N5887 P1754 REPLACEMENT 31 Int BE Sec
!#3 N5888 P1755 MEMBAR
!#3 N5889 P1756 BLD 21 -1 FP BE Pri
!#3 N5890 P1756 BLD 22 -1 FP BE Pri
!#A N5889 N5890
!#3 N5891 P1756 BLD 23 -1 FP BE Pri
!#3 N5892 P1757 MEMBAR
!#3 N5893 P1758 MEMBAR
!#3 N5894 P1759 LD 19 -1 FP BE Pri
!#3 N5895 P1760 LD 18 -1 FP BE Pri
!#3 N5896 P1761 REPLACEMENT 23 Int BE Pri
!#3 N5897 P1762 MEMBAR
!#3 N5898 P1763 BST 14 0x41000148 FP BE Pri
!#3 N5899 P1764 MEMBAR
!#3 N5900 P1765 LD 16 -1 FP BE Pri
!#3 N5901 P1766 REPLACEMENT 20 Int BE Pri
!#3 N5902 P1767 MEMBAR
!#3 N5903 P1768 BLD 10 -1 FP BE Sec
!#3 N5904 P1769 MEMBAR
!#3 N5905 P1770 BST 15 0x41000149 FP BE Pri
!#3 N5906 P1771 MEMBAR
!#3 N5907 P1772 REPLACEMENT 7 Int BE Pri
!#3 N5908 P1773 REPLACEMENT 4 Int BE Pri
!#3 N5909 P1774 MEMBAR
!#3 N5910 P1775 BLD 24 -1 FP BE Sec
!#3 N5911 P1775 BLD 25 -1 FP BE Sec
!#3 N5912 P1776 MEMBAR
!#3 N5913 P1777 REPLACEMENT 0 Int BE Pri
!#3 N5914 P1778 ST 3 0x1800028 Int BE Pri
!#3 N5915 P1779 MEMBAR
!#3 N5916 P1780 BLD 33 -1 FP BE Pri
!#3 N5917 P1781 MEMBAR
!#3 N5918 P1782 BST 0 0x4100014a FP BE Pri
!#3 N5919 P1782 BST 1 0x4100014b FP BE Pri
!#A N5918 N5919
!#3 N5920 P1782 BST 2 0x4100014c FP BE Pri
!#3 N5921 P1782 BST 3 0x4100014d FP BE Pri
!#3 N5922 P1782 BST 4 0x4100014e FP BE Pri
!#3 N5923 P1783 MEMBAR
!#3 N5924 P1784 BST 26 0x4100014f FP BE Sec
!#3 N5925 P1784 BST 27 0x41000150 FP BE Sec
!#3 N5926 P1785 MEMBAR
!#3 N5927 P1786 BLD 21 -1 FP BE Pri
!#3 N5928 P1786 BLD 22 -1 FP BE Pri
!#A N5927 N5928
!#3 N5929 P1786 BLD 23 -1 FP BE Pri
!#3 N5930 P1787 MEMBAR
!#3 N5931 P1788 BLD 5 -1 FP BE Sec
!#3 N5932 P1788 BLD 6 -1 FP BE Sec
!#3 N5933 P1789 MEMBAR
!#3 N5934 P1790 REPLACEMENT 29 Int BE Pri
!#3 N5935 P1791 LD 28 -1 Int BE Pri
!#3 N5936 P1792 MEMBAR
!#3 N5937 P1793 BLD 0 -1 FP BE Pri
!#3 N5938 P1793 BLD 1 -1 FP BE Pri
!#A N5937 N5938
!#3 N5939 P1793 BLD 2 -1 FP BE Pri
!#3 N5940 P1793 BLD 3 -1 FP BE Pri
!#3 N5941 P1793 BLD 4 -1 FP BE Pri
!#3 N5942 P1794 MEMBAR
!#3 N5943 P1795 BST 0 0x41000151 FP BE Sec
!#3 N5944 P1795 BST 1 0x41000152 FP BE Sec
!#A N5943 N5944
!#3 N5945 P1795 BST 2 0x41000153 FP BE Sec
!#3 N5946 P1795 BST 3 0x41000154 FP BE Sec
!#3 N5947 P1795 BST 4 0x41000155 FP BE Sec
!#3 N5948 P1796 MEMBAR
!#3 N5949 P1797 ST 2 0x41000156 FP BE Sec
!#3 N5950 P1798 REPLACEMENT 29 Int BE Nuc
!#3 N5951 P1799 REPLACEMENT 23 Int BE Pri
!#3 N5952 P1800 MEMBAR
!#3 N5953 P1801 BLD 26 -1 FP BE Pri
!#3 N5954 P1801 BLD 27 -1 FP BE Pri
!#3 N5955 P1802 MEMBAR
!#3 N5956 P1803 LD 14 -1 FP BE Pri
!#3 N5957 P1804 ST 30 0x1800029 Int BE Pri
!#3 N5958 P1805 ST 31 0x180002a Int BE Pri
!#3 N5959 P1806 MEMBAR
!#3 N5960 P1807 BST 10 0x41000157 FP BE Pri
!#3 N5961 P1808 MEMBAR
!#3 N5962 P1809 BLD 0 -1 FP BE Pri
!#3 N5963 P1809 BLD 1 -1 FP BE Pri
!#A N5962 N5963
!#3 N5964 P1809 BLD 2 -1 FP BE Pri
!#3 N5965 P1809 BLD 3 -1 FP BE Pri
!#3 N5966 P1809 BLD 4 -1 FP BE Pri
!#3 N5967 P1810 MEMBAR
!#3 N5968 P1811 LD 4 -1 FP BE Pri
!#3 N5969 P1812 ST 8 0x180002b Int BE Pri
!#3 N5970 P1813 MEMBAR
!#3 N5971 P1814 BST 26 0x41000158 FP BE Pri
!#3 N5972 P1814 BST 27 0x41000159 FP BE Pri
!#3 N5973 P1815 MEMBAR
!#3 N5974 P1816 REPLACEMENT 4 Int BE Pri
!#3 N5975 P1817 MEMBAR
!#3 N5976 P1818 BST 28 0x4100015a FP BE Pri
!#3 N5977 P1819 MEMBAR
!#3 N5978 P1820 REPLACEMENT 13 Int BE Pri
!#3 N5979 P1821 REPLACEMENT 15 Int BE Pri
!#3 N5980 P1822 ST 23 0x4100015b FP BE Pri
!#3 N5981 P1823 REPLACEMENT 9 Int BE Pri
!#3 N5982 P1824 MEMBAR
!#3 N5983 P1825 BST 0 0x4100015c FP BE Pri
!#3 N5984 P1825 BST 1 0x4100015d FP BE Pri
!#A N5983 N5984
!#3 N5985 P1825 BST 2 0x4100015e FP BE Pri
!#3 N5986 P1825 BST 3 0x4100015f FP BE Pri
!#3 N5987 P1825 BST 4 0x41000160 FP BE Pri
!#3 N5988 P1826 MEMBAR
!#3 N5989 P1827 REPLACEMENT 22 Int BE Pri
!#3 N5990 P1828 MEMBAR
!#3 N5991 P1829 BLD 0 -1 FP BE Pri
!#3 N5992 P1829 BLD 1 -1 FP BE Pri
!#A N5991 N5992
!#3 N5993 P1829 BLD 2 -1 FP BE Pri
!#3 N5994 P1829 BLD 3 -1 FP BE Pri
!#3 N5995 P1829 BLD 4 -1 FP BE Pri
!#3 N5996 P1830 MEMBAR
!#3 N5997 P1831 BST 5 0x41000161 FP BE Pri
!#3 N5998 P1831 BST 6 0x41000162 FP BE Pri
!#3 N5999 P1832 MEMBAR
!#3 N6000 P1833 ST 24 0x180002c Int BE Pri
!#3 N6001 P1834 LD 4 -1 Int LE Pri
!#3 N6002 P1835 REPLACEMENT 9 Int BE Nuc
!#3 N6003 P1836 MEMBAR
!#3 N6004 P1837 BST 0 0x41000163 FP BE Pri
!#3 N6005 P1837 BST 1 0x41000164 FP BE Pri
!#A N6004 N6005
!#3 N6006 P1837 BST 2 0x41000165 FP BE Pri
!#3 N6007 P1837 BST 3 0x41000166 FP BE Pri
!#3 N6008 P1837 BST 4 0x41000167 FP BE Pri
!#3 N6009 P1838 MEMBAR
!#3 N6010 P1839 BLD 11 -1 FP BE Pri
!#3 N6011 P1839 BLD 12 -1 FP BE Pri
!#A N6010 N6011
!#3 N6012 P1839 BLD 13 -1 FP BE Pri
!#3 N6013 P1840 MEMBAR
!#3 N6014 P1841 BSTC 0 0x41000168 FP BE Pri
!#3 N6015 P1841 BSTC 1 0x41000169 FP BE Pri
!#A N6014 N6015
!#3 N6016 P1841 BSTC 2 0x4100016a FP BE Pri
!#3 N6017 P1841 BSTC 3 0x4100016b FP BE Pri
!#3 N6018 P1841 BSTC 4 0x4100016c FP BE Pri
!#3 N6019 P1842 MEMBAR
!#3 N6020 P1843 LD 10 -1 Int BE Pri
!#3 N6021 P1844 MEMBAR
!#3 N6022 P1845 BST 24 0x4100016d FP BE Pri
!#3 N6023 P1845 BST 25 0x4100016e FP BE Pri
!#3 N6024 P1846 MEMBAR
!#3 N6025 P1847 REPLACEMENT 20 Int BE Nuc
!#3 N6026 P1848 MEMBAR
!#3 N6027 P1849 BLD 0 -1 FP BE Sec
!#3 N6028 P1849 BLD 1 -1 FP BE Sec
!#A N6027 N6028
!#3 N6029 P1849 BLD 2 -1 FP BE Sec
!#3 N6030 P1849 BLD 3 -1 FP BE Sec
!#3 N6031 P1849 BLD 4 -1 FP BE Sec
!#3 N6032 P1850 MEMBAR
!#3 N6033 P1851 ST 14 0x4100016f FP BE Sec
!#3 N6034 P1852 REPLACEMENT 18 Int BE Pri
!#3 N6035 P1853 ST 0 0x41000170 FP BE Pri
!#3 N6036 P1854 FLUSHI 3 Int BE Pri
!#3 N6037 P1855 MEMBAR
!#3 N6038 P1856 BLD 0 -1 FP BE Pri
!#3 N6039 P1856 BLD 1 -1 FP BE Pri
!#A N6038 N6039
!#3 N6040 P1856 BLD 2 -1 FP BE Pri
!#3 N6041 P1856 BLD 3 -1 FP BE Pri
!#3 N6042 P1856 BLD 4 -1 FP BE Pri
!#3 N6043 P1857 MEMBAR
!#3 N6044 P1858 REPLACEMENT 12 Int BE Pri
!#3 N6045 P1859 LD 1 -1 Int BE Pri
!#3 N6046 P1860 LD 16 -1 FP BE Pri
!#3 N6047 P1861 REPLACEMENT 9 Int BE Pri
!#3 N6048 P1862 LD 3 -1 FP BE Pri
!#3 N6049 P1863 LD 33 -1 Int BE Pri
!#3 N6050 P1864 REPLACEMENT 12 Int BE Pri
!#3 N6051 P1865 MEMBAR
!#3 N6052 P1866 BSTC 5 0x41000171 FP BE Sec
!#3 N6053 P1866 BSTC 6 0x41000172 FP BE Sec
!#3 N6054 P1867 MEMBAR
!#3 N6055 P1868 BLD 8 -1 FP BE Sec
!#3 N6056 P1868 BLD 9 -1 FP BE Sec
!#3 N6057 P1869 MEMBAR
!#3 N6058 P1870 BST 0 0x41000173 FP BE Pri
!#3 N6059 P1870 BST 1 0x41000174 FP BE Pri
!#A N6058 N6059
!#3 N6060 P1870 BST 2 0x41000175 FP BE Pri
!#3 N6061 P1870 BST 3 0x41000176 FP BE Pri
!#3 N6062 P1870 BST 4 0x41000177 FP BE Pri
!#3 N6063 P1871 MEMBAR
!#3 N6064 P1872 ST 10 0x180002d Int BE Pri
!#3 N6065 P1873 ST 21 0x41000178 FP BE Sec
!#3 N6066 P1874 LD 2 -1 FP BE Pri
!#3 N6067 P1875 REPLACEMENT 20 Int BE Pri
!#3 N6068 P1876 REPLACEMENT 17 Int BE Pri
!#3 N6069 P1877 LD 13 -1 FP BE Pri
!#3 N6070 P1878 ST 3 0x180002e Int BE Sec
!#3 N6071 P1879 MEMBAR
!#3 N6072 P1880 BLD 0 -1 FP BE Pri
!#3 N6073 P1880 BLD 1 -1 FP BE Pri
!#A N6072 N6073
!#3 N6074 P1880 BLD 2 -1 FP BE Pri
!#3 N6075 P1880 BLD 3 -1 FP BE Pri
!#3 N6076 P1880 BLD 4 -1 FP BE Pri
!#3 N6077 P1881 MEMBAR
!#3 N6078 P1882 BLD 0 -1 FP BE Pri
!#3 N6079 P1882 BLD 1 -1 FP BE Pri
!#A N6078 N6079
!#3 N6080 P1882 BLD 2 -1 FP BE Pri
!#3 N6081 P1882 BLD 3 -1 FP BE Pri
!#3 N6082 P1882 BLD 4 -1 FP BE Pri
!#3 N6083 P1883 MEMBAR
!#3 N6084 P1884 BSTC 19 0x41000179 FP BE Pri
!#3 N6085 P1885 MEMBAR
!#3 N6086 P1886 ST 12 0x4100017a FP BE Nuc
!#3 N6087 P1887 MEMBAR
!#3 N6088 P1888 BST 17 0x4100017b FP BE Pri
!#3 N6089 P1889 MEMBAR
!#3 N6090 P1890 PREFETCH 18 Int BE Pri
!#3 N6091 P1891 MEMBAR
!#3 N6092 P1892 BLD 28 -1 FP BE Sec
!#3 N6093 P1893 MEMBAR
!#3 N6094 P1894 ST 17 0x4100017c FP BE Sec
!#3 N6095 P1895 LD 11 -1 Int BE Pri
!#3 N6096 P1896 LD 28 -1 Int BE Pri
!#3 N6097 P1897 REPLACEMENT 12 Int BE Pri
!#3 N6098 P1898 MEMBAR
!#3 N6099 P1899 BST 31 0x4100017d FP BE Pri
!#3 N6100 P1900 MEMBAR
!#3 N6101 P1901 LD 24 -1 Int BE Sec
!#3 N6102 P1902 MEMBAR
!#3 N6103 P1903 BSTC 26 0x4100017e FP BE Pri
!#3 N6104 P1903 BSTC 27 0x4100017f FP BE Pri
!#3 N6105 P1904 MEMBAR
!#3 N6106 P1905 REPLACEMENT 2 Int BE Nuc
!#3 N6107 P1906 REPLACEMENT 23 Int BE Pri
!#3 N6108 P1907 ST 26 0x180002f Int BE Pri
!#3 N6109 P1908 MEMBAR
!#3 N6110 P1909 BST 19 0x41000180 FP BE Pri
!#3 N6111 P1910 MEMBAR
!#3 N6112 P1911 LD 0 -1 Int BE Sec
!#3 N6113 P1912 REPLACEMENT 6 Int BE Pri
!#3 N6114 P1913 MEMBAR
!#3 N6115 P1914 BST 0 0x41000181 FP BE Pri
!#3 N6116 P1914 BST 1 0x41000182 FP BE Pri
!#A N6115 N6116
!#3 N6117 P1914 BST 2 0x41000183 FP BE Pri
!#3 N6118 P1914 BST 3 0x41000184 FP BE Pri
!#3 N6119 P1914 BST 4 0x41000185 FP BE Pri
!#3 N6120 P1915 MEMBAR
!#3 N6121 P1916 BLD 30 -1 FP BE Pri
!#3 N6122 P1917 MEMBAR
!#3 N6123 P1918 BSTC 28 0x41000186 FP BE Pri
!#3 N6124 P1919 MEMBAR
!#3 N6125 P1920 REPLACEMENT 13 Int BE Pri
!#3 N6126 P1921 MEMBAR
!#3 N6127 P1922 BLD 24 -1 FP BE Sec
!#3 N6128 P1922 BLD 25 -1 FP BE Sec
!#3 N6129 P1923 MEMBAR
!#3 N6130 P1924 REPLACEMENT 7 Int BE Pri
!#3 N6131 P1925 REPLACEMENT 26 Int BE Pri
!#3 N6132 P1926 ST 32 0x41000187 FP BE Pri
!#3 N6133 P1927 LD 21 -1 FP BE Pri
!#3 N6134 P1928 REPLACEMENT 0 Int BE Pri
!#3 N6135 P1929 ST 28 0x1800030 Int BE Pri
!#3 N6136 P1930 MEMBAR
!#3 N6137 P1931 BST 0 0x41000188 FP BE Pri
!#3 N6138 P1931 BST 1 0x41000189 FP BE Pri
!#A N6137 N6138
!#3 N6139 P1931 BST 2 0x4100018a FP BE Pri
!#3 N6140 P1931 BST 3 0x4100018b FP BE Pri
!#3 N6141 P1931 BST 4 0x4100018c FP BE Pri
!#3 N6142 P1932 MEMBAR
!#3 N6143 P1933 REPLACEMENT 15 Int BE Pri
!#3 N6144 P1934 REPLACEMENT 7 Int BE Pri
!#3 N6145 P1935 MEMBAR
!#3 N6146 P1936 BLD 28 -1 FP BE Pri
!#3 N6147 P1937 MEMBAR
!#3 N6148 P1938 BLD 18 -1 FP BE Pri
!#3 N6149 P1939 MEMBAR
!#3 N6150 P1940 REPLACEMENT 10 Int BE Pri
!#3 N6151 P1941 REPLACEMENT 20 Int BE Sec
!#3 N6152 P1942 REPLACEMENT 28 Int BE Pri
!#3 N6153 P1943 MEMBAR
!#3 N6154 P1944 BST 18 0x4100018d FP BE Pri
!#3 N6155 P1945 MEMBAR
!#3 N6156 P1946 BST 8 0x4100018e FP BE Pri
!#3 N6157 P1946 BST 9 0x4100018f FP BE Pri
!#3 N6158 P1947 MEMBAR
!#3 N6159 P1948 REPLACEMENT 28 Int BE Pri
!#3 N6160 P1949 MEMBAR
!#3 N6161 P1950 BST 28 0x41000190 FP BE Pri
!#3 N6162 P1951 MEMBAR
!#3 N6163 P1952 BST 26 0x41000191 FP BE Pri
!#3 N6164 P1952 BST 27 0x41000192 FP BE Pri
!#3 N6165 P1953 MEMBAR
!#3 N6166 P1954 BLD 11 -1 FP BE Pri
!#3 N6167 P1954 BLD 12 -1 FP BE Pri
!#A N6166 N6167
!#3 N6168 P1954 BLD 13 -1 FP BE Pri
!#3 N6169 P1955 MEMBAR
!#3 N6170 P1956 BST 5 0x41000193 FP BE Sec
!#3 N6171 P1956 BST 6 0x41000194 FP BE Sec
!#3 N6172 P1957 MEMBAR
!#3 N6173 P1958 LD 6 -1 Int BE Pri
!#3 N6174 P1959 REPLACEMENT 9 Int BE Pri
!#3 N6175 P1960 LD 32 -1 FP BE Nuc
!#3 N6176 P1961 MEMBAR
!#3 N6177 P1962 BST 19 0x41000195 FP BE Pri
!#3 N6178 P1963 MEMBAR
!#3 N6179 P1964 REPLACEMENT 33 Int BE Pri
!#3 N6180 P1965 MEMBAR
!#3 N6181 P1966 BSTC 10 0x41000196 FP BE Pri
!#3 N6182 P1967 MEMBAR
!#3 N6183 P1968 BSTC 32 0x41000197 FP BE Pri
!#3 N6184 P1969 MEMBAR
!#3 N6185 P1970 REPLACEMENT 12 Int BE Pri
!#3 N6186 P1971 MEMBAR
!#3 N6187 P1972 BLD 24 -1 FP BE Pri
!#3 N6188 P1972 BLD 25 -1 FP BE Pri
!#3 N6189 P1973 MEMBAR
!#3 N6190 P1974 REPLACEMENT 11 Int BE Pri
!#3 N6191 P1975 MEMBAR
!#3 N6192 P1976 BLD 5 -1 FP BE Pri
!#3 N6193 P1976 BLD 6 -1 FP BE Pri
!#3 N6194 P1977 MEMBAR
!#3 N6195 P1978 LD 12 -1 Int BE Pri
!#3 N6196 P1979 LD 22 -1 FP BE Pri
!#3 N6197 P1980 REPLACEMENT 2 Int BE Pri
!#3 N6198 P1981 ST 7 0x1800031 Int BE Pri
!#3 N6199 P1982 LD 28 -1 FP BE Pri
!#3 N6200 P1983 REPLACEMENT 32 Int BE Pri
!#3 N6201 P1984 REPLACEMENT 20 Int BE Nuc
!#3 N6202 P1985 REPLACEMENT 22 Int BE Pri
!#3 N6203 P1986 ST 4 0x1800032 Int BE Pri
!#3 N6204 P1987 MEMBAR
!#3 N6205 P1988 BLD 15 -1 FP BE Pri
!#3 N6206 P1989 MEMBAR
!#3 N6207 P1990 BST 31 0x41000198 FP BE Pri
!#3 N6208 P1991 MEMBAR
!#3 N6209 P1992 IDC_FLIP 28 Int BE Pri
!#3 N6210 P1993 LD 32 -1 FP BE Pri
!#3 N6211 P1994 REPLACEMENT 32 Int BE Pri
!#3 N6212 P1995 MEMBAR
!#3 N6213 P1996 BLD 0 -1 FP BE Pri
!#3 N6214 P1996 BLD 1 -1 FP BE Pri
!#A N6213 N6214
!#3 N6215 P1996 BLD 2 -1 FP BE Pri
!#3 N6216 P1996 BLD 3 -1 FP BE Pri
!#3 N6217 P1996 BLD 4 -1 FP BE Pri
!#3 N6218 P1997 MEMBAR
!#3 N6219 P1998 LD 17 -1 Int BE Sec
!#3 N6220 P1999 MEMBAR
!#3 N6221 P2000 BST 18 0x41000199 FP BE Pri
!#3 N6222 P2001 MEMBAR
!#3 N6223 P2002 REPLACEMENT 11 Int BE Pri
!#3 N6224 P2003 REPLACEMENT 29 Int BE Pri
!#3 N6225 P2004 LD 32 -1 FP BE Pri
!#3 N6226 P2005 MEMBAR
!#3 N6227 P2006 BLD 17 -1 FP BE Pri
!#3 N6228 P2007 MEMBAR
!#3 N6229 P2008 BLD 0 -1 FP BE Pri
!#3 N6230 P2008 BLD 1 -1 FP BE Pri
!#A N6229 N6230
!#3 N6231 P2008 BLD 2 -1 FP BE Pri
!#3 N6232 P2008 BLD 3 -1 FP BE Pri
!#3 N6233 P2008 BLD 4 -1 FP BE Pri
!#3 N6234 P2009 MEMBAR
!#3 N6235 P2010 BLD 28 -1 FP BE Sec
!#3 N6236 P2011 MEMBAR
!#3 N6237 P2012 REPLACEMENT 32 Int BE Pri
!#3 N6238 P2013 REPLACEMENT 32 Int BE Pri
!#3 N6239 P2014 ST 5 0x1800033 Int LE Pri
!#3 N6240 P2015 MEMBAR
!#3 N6241 P2016 BLD 29 -1 FP BE Pri
!#3 N6242 P2017 MEMBAR
!#3 N6243 P2018 REPLACEMENT 26 Int BE Pri
!#3 N6244 P2019 MEMBAR
!#3 N6245 P2020 BST 29 0x4100019a FP BE Pri
!#3 N6246 P2021 MEMBAR
!#3 N6247 P2022 BST 0 0x4100019b FP BE Pri
!#3 N6248 P2022 BST 1 0x4100019c FP BE Pri
!#A N6247 N6248
!#3 N6249 P2022 BST 2 0x4100019d FP BE Pri
!#3 N6250 P2022 BST 3 0x4100019e FP BE Pri
!#3 N6251 P2022 BST 4 0x4100019f FP BE Pri
!#3 N6252 P2023 MEMBAR
!#3 N6253 P2024 ST 29 0x1800034 Int BE Nuc
!#3 N6254 P2025 LD 15 -1 Int BE Pri
!#3 N6255 P2026 ST 7 0x410001a0 FP BE Sec
!#3 N6256 P2027 MEMBAR
!#3 N6257 P2028 BLD 0 -1 FP BE Sec
!#3 N6258 P2028 BLD 1 -1 FP BE Sec
!#A N6257 N6258
!#3 N6259 P2028 BLD 2 -1 FP BE Sec
!#3 N6260 P2028 BLD 3 -1 FP BE Sec
!#3 N6261 P2028 BLD 4 -1 FP BE Sec
!#3 N6262 P2029 MEMBAR
!#3 N6263 P2030 IDC_FLIP 1 Int BE Pri
!#3 N6264 P2031 REPLACEMENT 23 Int BE Sec
!#3 N6265 P2032 MEMBAR
!#3 N6266 P2033 BLD 19 -1 FP BE Pri
!#3 N6267 P2034 MEMBAR
!#3 N6268 P2035 IDC_FLIP 14 Int BE Pri
!#3 N6269 P2036 ST 5 0x410001a1 FP BE Pri
!#3 N6270 P2037 REPLACEMENT 2 Int BE Pri
!#3 N6271 P2038 MEMBAR
!#3 N6272 P2039 BLD 15 -1 FP BE Pri
!#3 N6273 P2040 MEMBAR
!#3 N6274 P2041 PREFETCH 1 Int BE Pri
!#3 N6275 P2042 REPLACEMENT 12 Int BE Pri
!#3 N6276 P2043 MEMBAR
!#3 N6277 P2044 BST 29 0x410001a2 FP BE Pri
!#3 N6278 P2045 MEMBAR
!#3 N6279 P2046 ST 25 0x1800035 Int BE Pri
!#3 N6280 P2047 LD 18 -1 FP BE Sec
!#3 N6281 P2048 LD 3 -1 FP BE Pri
!#3 N6282 P2049 REPLACEMENT 21 Int BE Pri
!#3 N6283 P2050 MEMBAR
!#3 N6284 P2051 BST 0 0x410001a3 FP BE Pri
!#3 N6285 P2051 BST 1 0x410001a4 FP BE Pri
!#A N6284 N6285
!#3 N6286 P2051 BST 2 0x410001a5 FP BE Pri
!#3 N6287 P2051 BST 3 0x410001a6 FP BE Pri
!#3 N6288 P2051 BST 4 0x410001a7 FP BE Pri
!#3 N6289 P2052 MEMBAR
!#3 N6290 P2053 ST 11 0x410001a8 FP BE Pri
!#3 N6291 P2054 MEMBAR
!#3 N6292 P2055 BST 21 0x410001a9 FP BE Pri
!#3 N6293 P2055 BST 22 0x410001aa FP BE Pri
!#A N6292 N6293
!#3 N6294 P2055 BST 23 0x410001ab FP BE Pri
!#3 N6295 P2056 MEMBAR
!#3 N6296 P2057 ST 33 0x410001ac FP BE Pri
!#3 N6297 P2058 ST 23 0x410001ad FP BE Pri
!#3 N6298 P2059 MEMBAR
!#3 N6299 P2060 BLD 21 -1 FP BE Pri
!#3 N6300 P2060 BLD 22 -1 FP BE Pri
!#A N6299 N6300
!#3 N6301 P2060 BLD 23 -1 FP BE Pri
!#3 N6302 P2061 MEMBAR
!#3 N6303 P2062 BST 20 0x410001ae FP BE Pri
!#3 N6304 P2063 MEMBAR
!#3 N6305 P2064 BSTC 32 0x410001af FP BE Pri
!#3 N6306 P2065 MEMBAR
!#3 N6307 P2066 LD 23 -1 Int BE Pri
!#3 N6308 P2067 MEMBAR
!#3 N6309 P2068 BST 24 0x410001b0 FP BE Pri
!#3 N6310 P2068 BST 25 0x410001b1 FP BE Pri
!#3 N6311 P2069 MEMBAR
!#3 N6312 P2070 BLD 21 -1 FP BE Pri
!#3 N6313 P2070 BLD 22 -1 FP BE Pri
!#A N6312 N6313
!#3 N6314 P2070 BLD 23 -1 FP BE Pri
!#3 N6315 P2071 MEMBAR
!#3 N6316 P2072 ST 26 0x410001b2 FP BE Pri
!#3 N6317 P2073 MEMBAR
!#3 N6318 P2074 BLD 21 -1 FP BE Pri
!#3 N6319 P2074 BLD 22 -1 FP BE Pri
!#A N6318 N6319
!#3 N6320 P2074 BLD 23 -1 FP BE Pri
!#3 N6321 P2075 MEMBAR
!#3 N6322 P2076 REPLACEMENT 28 Int BE Sec
!#3 N6323 P2077 ST 4 0x1800036 Int BE Nuc
!#3 N6324 P2078 ST 3 0x410001b3 FP BE Pri
!#3 N6325 P2079 MEMBAR
!#3 N6326 P2080 BST 7 0x410001b4 FP BE Pri
!#3 N6327 P2081 MEMBAR
!#3 N6328 P2082 LD 23 -1 Int BE Pri Loop_exit
!#3 N6329 P2083 MEMBAR
!#4 N6330 P2084 IDC_FLIP 18 Int BE Pri Loop_entry
!#4 N6331 P2085 REPLACEMENT 24 Int BE Pri
!#4 N6332 P2086 LD 32 -1 Int BE Pri
!#4 N6333 P2087 LD 29 -1 FP BE Pri
!#4 N6334 P2088 MEMBAR
!#4 N6335 P2089 BSTC 21 0x41800001 FP BE Pri
!#4 N6336 P2089 BSTC 22 0x41800002 FP BE Pri
!#A N6335 N6336
!#4 N6337 P2089 BSTC 23 0x41800003 FP BE Pri
!#4 N6338 P2090 MEMBAR
!#4 N6339 P2091 REPLACEMENT 13 Int BE Pri
!#4 N6340 P2092 REPLACEMENT 15 Int BE Pri
!#4 N6341 P2093 MEMBAR
!#4 N6342 P2094 BST 21 0x41800004 FP BE Pri
!#4 N6343 P2094 BST 22 0x41800005 FP BE Pri
!#A N6342 N6343
!#4 N6344 P2094 BST 23 0x41800006 FP BE Pri
!#4 N6345 P2095 MEMBAR
!#4 N6346 P2096 BLD 33 -1 FP BE Sec
!#4 N6347 P2097 MEMBAR
!#4 N6348 P2098 LD 17 -1 FP BE Pri
!#4 N6349 P2099 MEMBAR
!#4 N6350 P2100 BST 33 0x41800007 FP BE Pri
!#4 N6351 P2101 MEMBAR
!#4 N6352 P2102 BST 33 0x41800008 FP BE Sec
!#4 N6353 P2103 MEMBAR
!#4 N6354 P2104 PREFETCH 16 Int BE Pri
!#4 N6355 P2105 REPLACEMENT 5 Int BE Pri
!#4 N6356 P2106 MEMBAR
!#4 N6357 P2107 BLD 5 -1 FP BE Pri
!#4 N6358 P2107 BLD 6 -1 FP BE Pri
!#4 N6359 P2108 MEMBAR
!#4 N6360 P2109 LD 6 -1 Int BE Pri
!#4 N6361 P2110 LD 10 -1 Int BE Pri
!#4 N6362 P2111 MEMBAR
!#4 N6363 P2112 BST 0 0x41800009 FP BE Pri
!#4 N6364 P2112 BST 1 0x4180000a FP BE Pri
!#A N6363 N6364
!#4 N6365 P2112 BST 2 0x4180000b FP BE Pri
!#4 N6366 P2112 BST 3 0x4180000c FP BE Pri
!#4 N6367 P2112 BST 4 0x4180000d FP BE Pri
!#4 N6368 P2113 MEMBAR
!#4 N6369 P2114 LD 6 -1 Int BE Sec
!#4 N6370 P2115 MEMBAR
!#4 N6371 P2116 BLD 17 -1 FP BE Sec
!#4 N6372 P2117 MEMBAR
!#4 N6373 P2118 PREFETCH 14 Int BE Pri
!#4 N6374 P2119 MEMBAR
!#4 N6375 P2120 BLD 31 -1 FP BE Pri
!#4 N6376 P2121 MEMBAR
!#4 N6377 P2122 LD 11 -1 Int BE Pri
!#4 N6378 P2123 MEMBAR
!#4 N6379 P2124 BST 11 0x4180000e FP BE Sec
!#4 N6380 P2124 BST 12 0x4180000f FP BE Sec
!#A N6379 N6380
!#4 N6381 P2124 BST 13 0x41800010 FP BE Sec
!#4 N6382 P2125 MEMBAR
!#4 N6383 P2126 REPLACEMENT 4 Int BE Pri
!#4 N6384 P2127 ST 9 0x41800011 FP BE Sec
!#4 N6385 P2128 MEMBAR
!#4 N6386 P2129 BLD 18 -1 FP BE Pri
!#4 N6387 P2130 MEMBAR
!#4 N6388 P2131 LD 7 -1 FP BE Nuc
!#4 N6389 P2132 REPLACEMENT 10 Int BE Pri
!#4 N6390 P2133 MEMBAR
!#4 N6391 P2134 BLD 5 -1 FP BE Pri
!#4 N6392 P2134 BLD 6 -1 FP BE Pri
!#4 N6393 P2135 MEMBAR
!#4 N6394 P2136 LD 9 -1 Int BE Pri
!#4 N6395 P2137 REPLACEMENT 25 Int BE Pri
!#4 N6396 P2138 REPLACEMENT 14 Int BE Pri
!#4 N6397 P2139 MEMBAR
!#4 N6398 P2140 BST 8 0x41800012 FP BE Pri
!#4 N6399 P2140 BST 9 0x41800013 FP BE Pri
!#4 N6400 P2141 MEMBAR
!#4 N6401 P2142 BST 8 0x41800014 FP BE Pri
!#4 N6402 P2142 BST 9 0x41800015 FP BE Pri
!#4 N6403 P2143 MEMBAR
!#4 N6404 P2144 REPLACEMENT 11 Int BE Nuc
!#4 N6405 P2145 MEMBAR
!#4 N6406 P2146 BST 5 0x41800016 FP BE Pri
!#4 N6407 P2146 BST 6 0x41800017 FP BE Pri
!#4 N6408 P2147 MEMBAR
!#4 N6409 P2148 BSTC 32 0x41800018 FP BE Pri
!#4 N6410 P2149 MEMBAR
!#4 N6411 P2150 ST 18 0x2000001 Int BE Nuc
!#4 N6412 P2151 IDC_FLIP 10 Int BE Pri
!#4 N6413 P2152 LD 20 -1 FP BE Pri
!#4 N6414 P2153 REPLACEMENT 21 Int BE Sec
!#4 N6415 P2154 ST 23 0x2000002 Int BE Pri
!#4 N6416 P2155 REPLACEMENT 11 Int BE Pri
!#4 N6417 P2156 PREFETCH 28 Int BE Pri
!#4 N6418 P2157 MEMBAR
!#4 N6419 P2158 BLD 21 -1 FP BE Sec
!#4 N6420 P2158 BLD 22 -1 FP BE Sec
!#A N6419 N6420
!#4 N6421 P2158 BLD 23 -1 FP BE Sec
!#4 N6422 P2159 MEMBAR
!#4 N6423 P2160 BSTC 0 0x41800019 FP BE Pri
!#4 N6424 P2160 BSTC 1 0x4180001a FP BE Pri
!#A N6423 N6424
!#4 N6425 P2160 BSTC 2 0x4180001b FP BE Pri
!#4 N6426 P2160 BSTC 3 0x4180001c FP BE Pri
!#4 N6427 P2160 BSTC 4 0x4180001d FP BE Pri
!#4 N6428 P2161 MEMBAR
!#4 N6429 P2162 ST 21 0x4180001e FP BE Pri
!#4 N6430 P2163 ST 33 0x2000003 Int BE Pri
!#4 N6431 P2164 ST 33 0x4180001f FP BE Pri
!#4 N6432 P2165 MEMBAR
!#4 N6433 P2166 BST 29 0x41800020 FP BE Pri
!#4 N6434 P2167 MEMBAR
!#4 N6435 P2168 ST 1 0x41800021 FP BE Pri
!#4 N6436 P2169 LD 24 -1 Int BE Pri
!#4 N6437 P2170 REPLACEMENT 22 Int BE Pri
!#4 N6438 P2171 REPLACEMENT 19 Int BE Pri
!#4 N6439 P2172 LD 17 -1 FP BE Pri
!#4 N6440 P2173 LD 25 -1 FP BE Nuc
!#4 N6441 P2174 PREFETCH 14 Int BE Pri
!#4 N6442 P2175 REPLACEMENT 6 Int BE Pri
!#4 N6443 P2176 REPLACEMENT 18 Int BE Pri
!#4 N6444 P2177 REPLACEMENT 33 Int BE Pri
!#4 N6445 P2178 REPLACEMENT 26 Int BE Pri
!#4 N6446 P2179 MEMBAR
!#4 N6447 P2180 BLD 11 -1 FP BE Pri
!#4 N6448 P2180 BLD 12 -1 FP BE Pri
!#A N6447 N6448
!#4 N6449 P2180 BLD 13 -1 FP BE Pri
!#4 N6450 P2181 MEMBAR
!#4 N6451 P2182 BST 31 0x41800022 FP BE Pri
!#4 N6452 P2183 MEMBAR
!#4 N6453 P2184 REPLACEMENT 18 Int BE Sec
!#4 N6454 P2185 MEMBAR
!#4 N6455 P2186 BST 5 0x41800023 FP BE Pri
!#4 N6456 P2186 BST 6 0x41800024 FP BE Pri
!#4 N6457 P2187 MEMBAR
!#4 N6458 P2188 BST 11 0x41800025 FP BE Pri
!#4 N6459 P2188 BST 12 0x41800026 FP BE Pri
!#A N6458 N6459
!#4 N6460 P2188 BST 13 0x41800027 FP BE Pri
!#4 N6461 P2189 MEMBAR
!#4 N6462 P2190 BLD 11 -1 FP BE Pri
!#4 N6463 P2190 BLD 12 -1 FP BE Pri
!#A N6462 N6463
!#4 N6464 P2190 BLD 13 -1 FP BE Pri
!#4 N6465 P2191 MEMBAR
!#4 N6466 P2192 LD 5 -1 Int BE Pri
!#4 N6467 P2193 MEMBAR
!#4 N6468 P2194 BST 11 0x41800028 FP BE Pri
!#4 N6469 P2194 BST 12 0x41800029 FP BE Pri
!#A N6468 N6469
!#4 N6470 P2194 BST 13 0x4180002a FP BE Pri
!#4 N6471 P2195 MEMBAR
!#4 N6472 P2196 REPLACEMENT 0 Int BE Sec
!#4 N6473 P2197 LD 14 -1 Int BE Sec
!#4 N6474 P2198 MEMBAR
!#4 N6475 P2199 BST 8 0x4180002b FP BE Pri
!#4 N6476 P2199 BST 9 0x4180002c FP BE Pri
!#4 N6477 P2200 MEMBAR
!#4 N6478 P2201 ST 27 0x4180002d FP BE Pri
!#4 N6479 P2202 ST 5 0x4180002e FP BE Nuc
!#4 N6480 P2203 IDC_FLIP 8 Int BE Pri
!#4 N6481 P2204 MEMBAR
!#4 N6482 P2205 BLD 24 -1 FP BE Pri
!#4 N6483 P2205 BLD 25 -1 FP BE Pri
!#4 N6484 P2206 MEMBAR
!#4 N6485 P2207 BLD 21 -1 FP BE Pri
!#4 N6486 P2207 BLD 22 -1 FP BE Pri
!#A N6485 N6486
!#4 N6487 P2207 BLD 23 -1 FP BE Pri
!#4 N6488 P2208 MEMBAR
!#4 N6489 P2209 ST 19 0x2000004 Int BE Pri
!#4 N6490 P2210 MEMBAR
!#4 N6491 P2211 BLD 15 -1 FP BE Pri
!#4 N6492 P2212 MEMBAR
!#4 N6493 P2213 REPLACEMENT 21 Int BE Sec
!#4 N6494 P2214 REPLACEMENT 3 Int BE Nuc
!#4 N6495 P2215 REPLACEMENT 28 Int BE Pri
!#4 N6496 P2216 MEMBAR
!#4 N6497 P2217 BST 0 0x4180002f FP BE Pri
!#4 N6498 P2217 BST 1 0x41800030 FP BE Pri
!#A N6497 N6498
!#4 N6499 P2217 BST 2 0x41800031 FP BE Pri
!#4 N6500 P2217 BST 3 0x41800032 FP BE Pri
!#4 N6501 P2217 BST 4 0x41800033 FP BE Pri
!#4 N6502 P2218 MEMBAR
!#4 N6503 P2219 BSTC 16 0x41800034 FP BE Pri
!#4 N6504 P2220 MEMBAR
!#4 N6505 P2221 BLD 7 -1 FP BE Pri
!#4 N6506 P2222 MEMBAR
!#4 N6507 P2223 ST 30 0x2000005 Int BE Pri
!#4 N6508 P2224 REPLACEMENT 0 Int BE Pri
!#4 N6509 P2225 REPLACEMENT 5 Int BE Pri
!#4 N6510 P2226 ST 33 0x2000006 Int BE Pri
!#4 N6511 P2227 MEMBAR
!#4 N6512 P2228 BST 15 0x41800035 FP BE Pri
!#4 N6513 P2229 MEMBAR
!#4 N6514 P2230 BST 26 0x41800036 FP BE Pri
!#4 N6515 P2230 BST 27 0x41800037 FP BE Pri
!#4 N6516 P2231 MEMBAR
!#4 N6517 P2232 BLD 30 -1 FP BE Pri
!#4 N6518 P2233 MEMBAR
!#4 N6519 P2234 LD 30 -1 FP BE Pri
!#4 N6520 P2235 MEMBAR
!#4 N6521 P2236 BLD 0 -1 FP BE Pri
!#4 N6522 P2236 BLD 1 -1 FP BE Pri
!#A N6521 N6522
!#4 N6523 P2236 BLD 2 -1 FP BE Pri
!#4 N6524 P2236 BLD 3 -1 FP BE Pri
!#4 N6525 P2236 BLD 4 -1 FP BE Pri
!#4 N6526 P2237 MEMBAR
!#4 N6527 P2238 ST 21 0x41800038 FP BE Pri
!#4 N6528 P2239 LD 20 -1 Int BE Pri
!#4 N6529 P2240 LD 3 -1 FP BE Pri
!#4 N6530 P2241 MEMBAR
!#4 N6531 P2242 BST 17 0x41800039 FP BE Pri
!#4 N6532 P2243 MEMBAR
!#4 N6533 P2244 ST 17 0x4180003a FP BE Nuc
!#4 N6534 P2245 ST 27 0x2000007 Int BE Sec
!#4 N6535 P2246 ST 5 0x4180003b FP BE Sec
!#4 N6536 P2247 IDC_FLIP 25 Int BE Pri
!#4 N6537 P2248 REPLACEMENT 12 Int BE Pri
!#4 N6538 P2249 LD 17 -1 FP BE Sec
!#4 N6539 P2250 MEMBAR
!#4 N6540 P2251 BSTC 21 0x4180003c FP BE Pri
!#4 N6541 P2251 BSTC 22 0x4180003d FP BE Pri
!#A N6540 N6541
!#4 N6542 P2251 BSTC 23 0x4180003e FP BE Pri
!#4 N6543 P2252 MEMBAR
!#4 N6544 P2253 LD 1 -1 Int BE Pri
!#4 N6545 P2254 MEMBAR
!#4 N6546 P2255 BLD 29 -1 FP BE Pri
!#4 N6547 P2256 MEMBAR
!#4 N6548 P2257 BLD 15 -1 FP BE Pri
!#4 N6549 P2258 MEMBAR
!#4 N6550 P2259 BLD 33 -1 FP BE Pri
!#4 N6551 P2260 MEMBAR
!#4 N6552 P2261 REPLACEMENT 25 Int BE Sec
!#4 N6553 P2262 MEMBAR
!#4 N6554 P2263 BLD 21 -1 FP BE Pri
!#4 N6555 P2263 BLD 22 -1 FP BE Pri
!#A N6554 N6555
!#4 N6556 P2263 BLD 23 -1 FP BE Pri
!#4 N6557 P2264 MEMBAR
!#4 N6558 P2265 REPLACEMENT 14 Int BE Nuc
!#4 N6559 P2266 IDC_FLIP 31 Int BE Pri
!#4 N6560 P2267 REPLACEMENT 21 Int BE Sec
!#4 N6561 P2268 MEMBAR
!#4 N6562 P2269 BST 0 0x4180003f FP BE Pri
!#4 N6563 P2269 BST 1 0x41800040 FP BE Pri
!#A N6562 N6563
!#4 N6564 P2269 BST 2 0x41800041 FP BE Pri
!#4 N6565 P2269 BST 3 0x41800042 FP BE Pri
!#4 N6566 P2269 BST 4 0x41800043 FP BE Pri
!#4 N6567 P2270 MEMBAR
!#4 N6568 P2271 ST 26 0x2000008 Int BE Sec
!#4 N6569 P2272 ST 26 0x41800044 FP BE Pri
!#4 N6570 P2273 REPLACEMENT 2 Int BE Pri
!#4 N6571 P2274 REPLACEMENT 6 Int BE Pri
!#4 N6572 P2275 LD 8 -1 FP BE Pri
!#4 N6573 P2276 MEMBAR
!#4 N6574 P2277 BST 8 0x41800045 FP BE Pri
!#4 N6575 P2277 BST 9 0x41800046 FP BE Pri
!#4 N6576 P2278 MEMBAR
!#4 N6577 P2279 BLD 32 -1 FP BE Sec
!#4 N6578 P2280 MEMBAR
!#4 N6579 P2281 ST 16 0x2000009 Int BE Pri
!#4 N6580 P2282 ST 26 0x41800047 FP BE Pri
!#4 N6581 P2283 ST 20 0x41800048 FP BE Pri
!#4 N6582 P2284 REPLACEMENT 30 Int BE Sec
!#4 N6583 P2285 ST 4 0x41800049 FP BE Sec
!#4 N6584 P2286 MEMBAR
!#4 N6585 P2287 BLD 21 -1 FP BE Sec
!#4 N6586 P2287 BLD 22 -1 FP BE Sec
!#A N6585 N6586
!#4 N6587 P2287 BLD 23 -1 FP BE Sec
!#4 N6588 P2288 MEMBAR
!#4 N6589 P2289 LD 17 -1 FP BE Nuc
!#4 N6590 P2290 IDC_FLIP 10 Int BE Pri
!#4 N6591 P2291 REPLACEMENT 6 Int BE Pri
!#4 N6592 P2292 LD 5 -1 FP BE Pri
!#4 N6593 P2293 MEMBAR
!#4 N6594 P2294 BLD 28 -1 FP BE Pri
!#4 N6595 P2295 MEMBAR
!#4 N6596 P2296 REPLACEMENT 28 Int BE Pri
!#4 N6597 P2297 MEMBAR
!#4 N6598 P2298 BST 5 0x4180004a FP BE Pri
!#4 N6599 P2298 BST 6 0x4180004b FP BE Pri
!#4 N6600 P2299 MEMBAR
!#4 N6601 P2300 BST 32 0x4180004c FP BE Pri
!#4 N6602 P2301 MEMBAR
!#4 N6603 P2302 PREFETCH 18 Int BE Sec
!#4 N6604 P2303 IDC_FLIP 16 Int BE Pri
!#4 N6605 P2304 MEMBAR
!#4 N6606 P2305 BLD 5 -1 FP BE Pri
!#4 N6607 P2305 BLD 6 -1 FP BE Pri
!#4 N6608 P2306 MEMBAR
!#4 N6609 P2307 BST 5 0x4180004d FP BE Sec
!#4 N6610 P2307 BST 6 0x4180004e FP BE Sec
!#4 N6611 P2308 MEMBAR
!#4 N6612 P2309 ST 5 0x4180004f FP BE Pri
!#4 N6613 P2310 REPLACEMENT 25 Int BE Pri
!#4 N6614 P2311 LD 30 -1 FP BE Pri
!#4 N6615 P2312 MEMBAR
!#4 N6616 P2313 BLD 0 -1 FP BE Pri
!#4 N6617 P2313 BLD 1 -1 FP BE Pri
!#A N6616 N6617
!#4 N6618 P2313 BLD 2 -1 FP BE Pri
!#4 N6619 P2313 BLD 3 -1 FP BE Pri
!#4 N6620 P2313 BLD 4 -1 FP BE Pri
!#4 N6621 P2314 MEMBAR
!#4 N6622 P2315 BLD 0 -1 FP BE Pri
!#4 N6623 P2315 BLD 1 -1 FP BE Pri
!#A N6622 N6623
!#4 N6624 P2315 BLD 2 -1 FP BE Pri
!#4 N6625 P2315 BLD 3 -1 FP BE Pri
!#4 N6626 P2315 BLD 4 -1 FP BE Pri
!#4 N6627 P2316 MEMBAR
!#4 N6628 P2317 LD 0 -1 FP BE Pri
!#4 N6629 P2318 REPLACEMENT 18 Int BE Nuc
!#4 N6630 P2319 REPLACEMENT 23 Int BE Pri
!#4 N6631 P2320 MEMBAR
!#4 N6632 P2321 BLD 0 -1 FP BE Pri
!#4 N6633 P2321 BLD 1 -1 FP BE Pri
!#A N6632 N6633
!#4 N6634 P2321 BLD 2 -1 FP BE Pri
!#4 N6635 P2321 BLD 3 -1 FP BE Pri
!#4 N6636 P2321 BLD 4 -1 FP BE Pri
!#4 N6637 P2322 MEMBAR
!#4 N6638 P2323 BLD 0 -1 FP BE Pri
!#4 N6639 P2323 BLD 1 -1 FP BE Pri
!#A N6638 N6639
!#4 N6640 P2323 BLD 2 -1 FP BE Pri
!#4 N6641 P2323 BLD 3 -1 FP BE Pri
!#4 N6642 P2323 BLD 4 -1 FP BE Pri
!#4 N6643 P2324 MEMBAR
!#4 N6644 P2325 LD 2 -1 FP BE Pri
!#4 N6645 P2326 MEMBAR
!#4 N6646 P2327 BSTC 11 0x41800050 FP BE Pri
!#4 N6647 P2327 BSTC 12 0x41800051 FP BE Pri
!#A N6646 N6647
!#4 N6648 P2327 BSTC 13 0x41800052 FP BE Pri
!#4 N6649 P2328 MEMBAR
!#4 N6650 P2329 BLD 31 -1 FP BE Sec
!#4 N6651 P2330 MEMBAR
!#4 N6652 P2331 REPLACEMENT 6 Int BE Pri
!#4 N6653 P2332 REPLACEMENT 8 Int BE Nuc
!#4 N6654 P2333 MEMBAR
!#4 N6655 P2334 BST 20 0x41800053 FP BE Pri
!#4 N6656 P2335 MEMBAR
!#4 N6657 P2336 REPLACEMENT 4 Int BE Nuc
!#4 N6658 P2337 REPLACEMENT 3 Int BE Pri
!#4 N6659 P2338 REPLACEMENT 2 Int BE Sec
!#4 N6660 P2339 MEMBAR
!#4 N6661 P2340 BST 24 0x41800054 FP BE Pri
!#4 N6662 P2340 BST 25 0x41800055 FP BE Pri
!#4 N6663 P2341 MEMBAR
!#4 N6664 P2342 BLD 10 -1 FP BE Pri
!#4 N6665 P2343 MEMBAR
!#4 N6666 P2344 IDC_FLIP 8 Int BE Pri
!#4 N6667 P2345 REPLACEMENT 10 Int BE Pri
!#4 N6668 P2346 MEMBAR
!#4 N6669 P2347 BLD 11 -1 FP BE Pri
!#4 N6670 P2347 BLD 12 -1 FP BE Pri
!#A N6669 N6670
!#4 N6671 P2347 BLD 13 -1 FP BE Pri
!#4 N6672 P2348 MEMBAR
!#4 N6673 P2349 ST 17 0x41800056 FP BE Pri
!#4 N6674 P2350 MEMBAR
!#4 N6675 P2351 BST 17 0x41800057 FP BE Pri
!#4 N6676 P2352 MEMBAR
!#4 N6677 P2353 LD 17 -1 Int BE Pri
!#4 N6678 P2354 LD 23 -1 Int BE Sec
!#4 N6679 P2355 REPLACEMENT 5 Int BE Pri
!#4 N6680 P2356 MEMBAR
!#4 N6681 P2357 BST 15 0x41800058 FP BE Pri
!#4 N6682 P2358 MEMBAR
!#4 N6683 P2359 BST 0 0x41800059 FP BE Sec
!#4 N6684 P2359 BST 1 0x4180005a FP BE Sec
!#A N6683 N6684
!#4 N6685 P2359 BST 2 0x4180005b FP BE Sec
!#4 N6686 P2359 BST 3 0x4180005c FP BE Sec
!#4 N6687 P2359 BST 4 0x4180005d FP BE Sec
!#4 N6688 P2360 MEMBAR
!#4 N6689 P2361 LD 26 -1 Int BE Pri
!#4 N6690 P2362 LD 3 -1 FP BE Sec
!#4 N6691 P2363 MEMBAR
!#4 N6692 P2364 BST 15 0x4180005e FP BE Pri
!#4 N6693 P2365 MEMBAR
!#4 N6694 P2366 ST 13 0x4180005f FP BE Pri
!#4 N6695 P2367 MEMBAR
!#4 N6696 P2368 BLD 29 -1 FP BE Pri
!#4 N6697 P2369 MEMBAR
!#4 N6698 P2370 ST 30 0x200000a Int BE Sec
!#4 N6699 P2371 REPLACEMENT 32 Int BE Sec
!#4 N6700 P2372 REPLACEMENT 15 Int BE Sec
!#4 N6701 P2373 ST 6 0x41800060 FP BE Pri
!#4 N6702 P2374 MEMBAR
!#4 N6703 P2375 BLD 0 -1 FP BE Pri
!#4 N6704 P2375 BLD 1 -1 FP BE Pri
!#A N6703 N6704
!#4 N6705 P2375 BLD 2 -1 FP BE Pri
!#4 N6706 P2375 BLD 3 -1 FP BE Pri
!#4 N6707 P2375 BLD 4 -1 FP BE Pri
!#4 N6708 P2376 MEMBAR
!#4 N6709 P2377 REPLACEMENT 25 Int BE Sec
!#4 N6710 P2378 LD 29 -1 FP BE Pri
!#4 N6711 P2379 MEMBAR
!#4 N6712 P2380 BLD 5 -1 FP BE Pri
!#4 N6713 P2380 BLD 6 -1 FP BE Pri
!#4 N6714 P2381 MEMBAR
!#4 N6715 P2382 ST 14 0x41800061 FP BE Pri
!#4 N6716 P2383 ST 0 0x41800062 FP BE Pri
!#4 N6717 P2384 ST 11 0x41800063 FP BE Pri
!#4 N6718 P2385 REPLACEMENT 17 Int BE Sec
!#4 N6719 P2386 REPLACEMENT 12 Int BE Pri
!#4 N6720 P2387 REPLACEMENT 2 Int BE Pri
!#4 N6721 P2388 REPLACEMENT 9 Int BE Pri
!#4 N6722 P2389 LD 8 -1 Int BE Pri
!#4 N6723 P2390 MEMBAR
!#4 N6724 P2391 BLD 0 -1 FP BE Pri
!#4 N6725 P2391 BLD 1 -1 FP BE Pri
!#A N6724 N6725
!#4 N6726 P2391 BLD 2 -1 FP BE Pri
!#4 N6727 P2391 BLD 3 -1 FP BE Pri
!#4 N6728 P2391 BLD 4 -1 FP BE Pri
!#4 N6729 P2392 MEMBAR
!#4 N6730 P2393 REPLACEMENT 19 Int BE Pri
!#4 N6731 P2394 LD 28 -1 FP BE Pri
!#4 N6732 P2395 MEMBAR
!#4 N6733 P2396 BST 28 0x41800064 FP BE Pri
!#4 N6734 P2397 MEMBAR
!#4 N6735 P2398 ST 27 0x200000b Int BE Sec
!#4 N6736 P2399 ST 17 0x41800065 FP BE Pri
!#4 N6737 P2400 MEMBAR
!#4 N6738 P2401 BLD 30 -1 FP BE Sec
!#4 N6739 P2402 MEMBAR
!#4 N6740 P2403 REPLACEMENT 7 Int BE Sec
!#4 N6741 P2404 MEMBAR
!#4 N6742 P2405 BLD 11 -1 FP BE Pri
!#4 N6743 P2405 BLD 12 -1 FP BE Pri
!#A N6742 N6743
!#4 N6744 P2405 BLD 13 -1 FP BE Pri
!#4 N6745 P2406 MEMBAR
!#4 N6746 P2407 IDC_FLIP 0 Int BE Pri
!#4 N6747 P2408 LD 25 -1 FP BE Pri
!#4 N6748 P2409 REPLACEMENT 14 Int BE Pri
!#4 N6749 P2410 ST 32 0x41800066 FP BE Pri
!#4 N6750 P2411 REPLACEMENT 29 Int BE Pri
!#4 N6751 P2412 MEMBAR
!#4 N6752 P2413 BLD 10 -1 FP BE Pri
!#4 N6753 P2414 MEMBAR
!#4 N6754 P2415 LD 4 -1 FP BE Pri
!#4 N6755 P2416 MEMBAR
!#4 N6756 P2417 BST 0 0x41800067 FP BE Sec
!#4 N6757 P2417 BST 1 0x41800068 FP BE Sec
!#A N6756 N6757
!#4 N6758 P2417 BST 2 0x41800069 FP BE Sec
!#4 N6759 P2417 BST 3 0x4180006a FP BE Sec
!#4 N6760 P2417 BST 4 0x4180006b FP BE Sec
!#4 N6761 P2418 MEMBAR
!#4 N6762 P2419 BLD 31 -1 FP BE Pri
!#4 N6763 P2420 MEMBAR
!#4 N6764 P2421 LD 26 -1 Int BE Pri
!#4 N6765 P2422 PREFETCH 13 Int BE Pri
!#4 N6766 P2423 REPLACEMENT 15 Int BE Pri
!#4 N6767 P2424 MEMBAR
!#4 N6768 P2425 BLD 18 -1 FP BE Pri
!#4 N6769 P2426 MEMBAR
!#4 N6770 P2427 ST 8 0x4180006c FP BE Pri
!#4 N6771 P2428 LD 23 -1 FP BE Sec
!#4 N6772 P2429 IDC_FLIP 32 Int BE Pri
!#4 N6773 P2430 REPLACEMENT 29 Int BE Nuc
!#4 N6774 P2431 MEMBAR
!#4 N6775 P2432 BLD 31 -1 FP BE Pri
!#4 N6776 P2433 MEMBAR
!#4 N6777 P2434 ST 5 0x200000c Int BE Pri
!#4 N6778 P2435 REPLACEMENT 11 Int BE Pri
!#4 N6779 P2436 ST 4 0x4180006d FP BE Pri
!#4 N6780 P2437 LD 18 -1 Int BE Pri
!#4 N6781 P2438 FLUSHI 10 Int BE Pri
!#4 N6782 P2439 LD 22 -1 Int BE Pri
!#4 N6783 P2440 REPLACEMENT 5 Int BE Sec
!#4 N6784 P2441 ST 14 0x200000d Int BE Pri
!#4 N6785 P2442 MEMBAR
!#4 N6786 P2443 BST 31 0x4180006e FP BE Pri
!#4 N6787 P2444 MEMBAR
!#4 N6788 P2445 ST 3 0x200000e Int BE Pri
!#4 N6789 P2446 FLUSHI 7 Int BE Pri
!#4 N6790 P2447 ST 1 0x4180006f FP BE Pri
!#4 N6791 P2448 MEMBAR
!#4 N6792 P2449 BLD 8 -1 FP BE Pri
!#4 N6793 P2449 BLD 9 -1 FP BE Pri
!#4 N6794 P2450 MEMBAR
!#4 N6795 P2451 IDC_FLIP 0 Int BE Pri
!#4 N6796 P2452 MEMBAR
!#4 N6797 P2453 BST 11 0x41800070 FP BE Pri
!#4 N6798 P2453 BST 12 0x41800071 FP BE Pri
!#A N6797 N6798
!#4 N6799 P2453 BST 13 0x41800072 FP BE Pri
!#4 N6800 P2454 MEMBAR
!#4 N6801 P2455 BLD 15 -1 FP BE Pri
!#4 N6802 P2456 MEMBAR
!#4 N6803 P2457 REPLACEMENT 29 Int BE Sec
!#4 N6804 P2458 MEMBAR
!#4 N6805 P2459 BLD 19 -1 FP BE Pri
!#4 N6806 P2460 MEMBAR
!#4 N6807 P2461 BST 5 0x41800073 FP BE Pri
!#4 N6808 P2461 BST 6 0x41800074 FP BE Pri
!#4 N6809 P2462 MEMBAR
!#4 N6810 P2463 BLD 19 -1 FP BE Pri
!#4 N6811 P2464 MEMBAR
!#4 N6812 P2465 ST 18 0x200000f Int BE Nuc
!#4 N6813 P2466 REPLACEMENT 24 Int BE Pri
!#4 N6814 P2467 LD 1 -1 FP BE Pri
!#4 N6815 P2468 REPLACEMENT 30 Int BE Sec
!#4 N6816 P2469 LD 6 -1 Int BE Pri
!#4 N6817 P2470 LD 5 -1 FP BE Pri
!#4 N6818 P2471 REPLACEMENT 18 Int BE Nuc
!#4 N6819 P2472 MEMBAR
!#4 N6820 P2473 BST 26 0x41800075 FP BE Pri
!#4 N6821 P2473 BST 27 0x41800076 FP BE Pri
!#4 N6822 P2474 MEMBAR
!#4 N6823 P2475 BLD 24 -1 FP BE Pri
!#4 N6824 P2475 BLD 25 -1 FP BE Pri
!#4 N6825 P2476 MEMBAR
!#4 N6826 P2477 ST 8 0x41800077 FP BE Pri
!#4 N6827 P2478 MEMBAR
!#4 N6828 P2479 BLD 10 -1 FP BE Pri
!#4 N6829 P2480 MEMBAR
!#4 N6830 P2481 BLD 0 -1 FP BE Sec
!#4 N6831 P2481 BLD 1 -1 FP BE Sec
!#A N6830 N6831
!#4 N6832 P2481 BLD 2 -1 FP BE Sec
!#4 N6833 P2481 BLD 3 -1 FP BE Sec
!#4 N6834 P2481 BLD 4 -1 FP BE Sec
!#4 N6835 P2482 MEMBAR
!#4 N6836 P2483 BLD 0 -1 FP BE Pri
!#4 N6837 P2483 BLD 1 -1 FP BE Pri
!#A N6836 N6837
!#4 N6838 P2483 BLD 2 -1 FP BE Pri
!#4 N6839 P2483 BLD 3 -1 FP BE Pri
!#4 N6840 P2483 BLD 4 -1 FP BE Pri
!#4 N6841 P2484 MEMBAR
!#4 N6842 P2485 REPLACEMENT 7 Int BE Sec
!#4 N6843 P2486 MEMBAR
!#4 N6844 P2487 BLD 11 -1 FP BE Pri
!#4 N6845 P2487 BLD 12 -1 FP BE Pri
!#A N6844 N6845
!#4 N6846 P2487 BLD 13 -1 FP BE Pri
!#4 N6847 P2488 MEMBAR
!#4 N6848 P2489 BST 26 0x41800078 FP BE Pri
!#4 N6849 P2489 BST 27 0x41800079 FP BE Pri
!#4 N6850 P2490 MEMBAR
!#4 N6851 P2491 IDC_FLIP 16 Int BE Pri
!#4 N6852 P2492 REPLACEMENT 14 Int BE Sec
!#4 N6853 P2493 MEMBAR
!#4 N6854 P2494 BST 0 0x4180007a FP BE Pri
!#4 N6855 P2494 BST 1 0x4180007b FP BE Pri
!#A N6854 N6855
!#4 N6856 P2494 BST 2 0x4180007c FP BE Pri
!#4 N6857 P2494 BST 3 0x4180007d FP BE Pri
!#4 N6858 P2494 BST 4 0x4180007e FP BE Pri
!#4 N6859 P2495 MEMBAR
!#4 N6860 P2496 BST 0 0x4180007f FP BE Pri
!#4 N6861 P2496 BST 1 0x41800080 FP BE Pri
!#A N6860 N6861
!#4 N6862 P2496 BST 2 0x41800081 FP BE Pri
!#4 N6863 P2496 BST 3 0x41800082 FP BE Pri
!#4 N6864 P2496 BST 4 0x41800083 FP BE Pri
!#4 N6865 P2497 MEMBAR
!#4 N6866 P2498 BST 0 0x41800084 FP BE Pri
!#4 N6867 P2498 BST 1 0x41800085 FP BE Pri
!#A N6866 N6867
!#4 N6868 P2498 BST 2 0x41800086 FP BE Pri
!#4 N6869 P2498 BST 3 0x41800087 FP BE Pri
!#4 N6870 P2498 BST 4 0x41800088 FP BE Pri
!#4 N6871 P2499 MEMBAR
!#4 N6872 P2500 BLD 26 -1 FP BE Pri
!#4 N6873 P2500 BLD 27 -1 FP BE Pri
!#4 N6874 P2501 MEMBAR
!#4 N6875 P2502 BST 28 0x41800089 FP BE Pri
!#4 N6876 P2503 MEMBAR
!#4 N6877 P2504 BST 11 0x4180008a FP BE Pri
!#4 N6878 P2504 BST 12 0x4180008b FP BE Pri
!#A N6877 N6878
!#4 N6879 P2504 BST 13 0x4180008c FP BE Pri
!#4 N6880 P2505 MEMBAR
!#4 N6881 P2506 BST 19 0x4180008d FP BE Sec
!#4 N6882 P2507 MEMBAR
!#4 N6883 P2508 REPLACEMENT 28 Int BE Pri
!#4 N6884 P2509 MEMBAR
!#4 N6885 P2510 BST 21 0x4180008e FP BE Pri
!#4 N6886 P2510 BST 22 0x4180008f FP BE Pri
!#A N6885 N6886
!#4 N6887 P2510 BST 23 0x41800090 FP BE Pri
!#4 N6888 P2511 MEMBAR
!#4 N6889 P2512 ST 31 0x41800091 FP BE Pri
!#4 N6890 P2513 MEMBAR
!#4 N6891 P2514 BST 0 0x41800092 FP BE Pri
!#4 N6892 P2514 BST 1 0x41800093 FP BE Pri
!#A N6891 N6892
!#4 N6893 P2514 BST 2 0x41800094 FP BE Pri
!#4 N6894 P2514 BST 3 0x41800095 FP BE Pri
!#4 N6895 P2514 BST 4 0x41800096 FP BE Pri
!#4 N6896 P2515 MEMBAR
!#4 N6897 P2516 ST 12 0x41800097 FP BE Pri
!#4 N6898 P2517 MEMBAR
!#4 N6899 P2518 BST 5 0x41800098 FP BE Pri
!#4 N6900 P2518 BST 6 0x41800099 FP BE Pri
!#4 N6901 P2519 MEMBAR
!#4 N6902 P2520 REPLACEMENT 7 Int BE Pri
!#4 N6903 P2521 LD 0 -1 Int BE Pri
!#4 N6904 P2522 MEMBAR
!#4 N6905 P2523 BSTC 31 0x4180009a FP BE Pri
!#4 N6906 P2524 MEMBAR
!#4 N6907 P2525 REPLACEMENT 29 Int BE Sec
!#4 N6908 P2526 REPLACEMENT 5 Int BE Pri
!#4 N6909 P2527 ST 26 0x4180009b FP BE Pri
!#4 N6910 P2528 LD 8 -1 Int BE Pri
!#4 N6911 P2529 MEMBAR
!#4 N6912 P2530 BLD 8 -1 FP BE Pri
!#4 N6913 P2530 BLD 9 -1 FP BE Pri
!#4 N6914 P2531 MEMBAR
!#4 N6915 P2532 REPLACEMENT 30 Int BE Pri
!#4 N6916 P2533 MEMBAR
!#4 N6917 P2534 BLD 7 -1 FP BE Pri
!#4 N6918 P2535 MEMBAR
!#4 N6919 P2536 BST 21 0x4180009c FP BE Pri
!#4 N6920 P2536 BST 22 0x4180009d FP BE Pri
!#A N6919 N6920
!#4 N6921 P2536 BST 23 0x4180009e FP BE Pri
!#4 N6922 P2537 MEMBAR
!#4 N6923 P2538 BST 32 0x4180009f FP BE Pri
!#4 N6924 P2539 MEMBAR
!#4 N6925 P2540 BLD 8 -1 FP BE Pri
!#4 N6926 P2540 BLD 9 -1 FP BE Pri
!#4 N6927 P2541 MEMBAR
!#4 N6928 P2542 BLD 0 -1 FP BE Pri
!#4 N6929 P2542 BLD 1 -1 FP BE Pri
!#A N6928 N6929
!#4 N6930 P2542 BLD 2 -1 FP BE Pri
!#4 N6931 P2542 BLD 3 -1 FP BE Pri
!#4 N6932 P2542 BLD 4 -1 FP BE Pri
!#4 N6933 P2543 MEMBAR
!#4 N6934 P2544 LD 5 -1 Int BE Pri
!#4 N6935 P2545 REPLACEMENT 13 Int BE Pri
!#4 N6936 P2546 MEMBAR
!#4 N6937 P2547 BLD 20 -1 FP BE Pri
!#4 N6938 P2548 MEMBAR
!#4 N6939 P2549 ST 19 0x2000010 Int BE Sec
!#4 N6940 P2550 MEMBAR
!#4 N6941 P2551 BLD 5 -1 FP BE Pri
!#4 N6942 P2551 BLD 6 -1 FP BE Pri
!#4 N6943 P2552 MEMBAR
!#4 N6944 P2553 LD 11 -1 FP BE Pri
!#4 N6945 P2554 REPLACEMENT 30 Int BE Pri
!#4 N6946 P2555 MEMBAR
!#4 N6947 P2556 BST 8 0x418000a0 FP BE Pri
!#4 N6948 P2556 BST 9 0x418000a1 FP BE Pri
!#4 N6949 P2557 MEMBAR
!#4 N6950 P2558 BST 10 0x418000a2 FP BE Pri
!#4 N6951 P2559 MEMBAR
!#4 N6952 P2560 IDC_FLIP 28 Int BE Pri
!#4 N6953 P2561 MEMBAR
!#4 N6954 P2562 BLD 26 -1 FP BE Pri
!#4 N6955 P2562 BLD 27 -1 FP BE Pri
!#4 N6956 P2563 MEMBAR
!#4 N6957 P2564 BLD 16 -1 FP BE Pri
!#4 N6958 P2565 MEMBAR
!#4 N6959 P2566 BST 19 0x418000a3 FP BE Pri
!#4 N6960 P2567 MEMBAR
!#4 N6961 P2568 ST 18 0x2000011 Int BE Nuc
!#4 N6962 P2569 LD 3 -1 Int BE Pri
!#4 N6963 P2570 MEMBAR
!#4 N6964 P2571 BST 11 0x418000a4 FP BE Sec
!#4 N6965 P2571 BST 12 0x418000a5 FP BE Sec
!#A N6964 N6965
!#4 N6966 P2571 BST 13 0x418000a6 FP BE Sec
!#4 N6967 P2572 MEMBAR
!#4 N6968 P2573 LD 20 -1 FP BE Sec
!#4 N6969 P2574 MEMBAR
!#4 N6970 P2575 BLD 28 -1 FP BE Pri
!#4 N6971 P2576 MEMBAR
!#4 N6972 P2577 REPLACEMENT 1 Int BE Sec
!#4 N6973 P2578 REPLACEMENT 25 Int BE Pri
!#4 N6974 P2579 MEMBAR
!#4 N6975 P2580 BLD 18 -1 FP BE Pri
!#4 N6976 P2581 MEMBAR
!#4 N6977 P2582 LD 5 -1 Int BE Pri
!#4 N6978 P2583 LD 20 -1 FP BE Pri
!#4 N6979 P2584 MEMBAR
!#4 N6980 P2585 BSTC 31 0x418000a7 FP BE Pri
!#4 N6981 P2586 MEMBAR
!#4 N6982 P2587 REPLACEMENT 17 Int BE Pri
!#4 N6983 P2588 REPLACEMENT 20 Int BE Pri
!#4 N6984 P2589 REPLACEMENT 0 Int BE Sec
!#4 N6985 P2590 MEMBAR
!#4 N6986 P2591 BSTC 8 0x418000a8 FP BE Pri
!#4 N6987 P2591 BSTC 9 0x418000a9 FP BE Pri
!#4 N6988 P2592 MEMBAR
!#4 N6989 P2593 ST 24 0x2000012 Int BE Sec
!#4 N6990 P2594 MEMBAR
!#4 N6991 P2595 BLD 24 -1 FP BE Pri
!#4 N6992 P2595 BLD 25 -1 FP BE Pri
!#4 N6993 P2596 MEMBAR
!#4 N6994 P2597 LD 32 -1 Int BE Pri
!#4 N6995 P2598 MEMBAR
!#4 N6996 P2599 BLD 5 -1 FP BE Pri
!#4 N6997 P2599 BLD 6 -1 FP BE Pri
!#4 N6998 P2600 MEMBAR
!#4 N6999 P2601 LD 7 -1 Int BE Pri
!#4 N7000 P2602 MEMBAR
!#4 N7001 P2603 BLD 20 -1 FP BE Pri
!#4 N7002 P2604 MEMBAR
!#4 N7003 P2605 BST 11 0x418000aa FP BE Pri
!#4 N7004 P2605 BST 12 0x418000ab FP BE Pri
!#A N7003 N7004
!#4 N7005 P2605 BST 13 0x418000ac FP BE Pri
!#4 N7006 P2606 MEMBAR
!#4 N7007 P2607 ST 11 0x2000013 Int BE Pri
!#4 N7008 P2608 IDC_FLIP 28 Int BE Pri
!#4 N7009 P2609 ST 12 0x2000014 Int BE Pri
!#4 N7010 P2610 REPLACEMENT 13 Int BE Pri
!#4 N7011 P2611 MEMBAR
!#4 N7012 P2612 BSTC 21 0x418000ad FP BE Pri
!#4 N7013 P2612 BSTC 22 0x418000ae FP BE Pri
!#A N7012 N7013
!#4 N7014 P2612 BSTC 23 0x418000af FP BE Pri
!#4 N7015 P2613 MEMBAR
!#4 N7016 P2614 IDC_FLIP 19 Int BE Pri
!#4 N7017 P2615 REPLACEMENT 21 Int BE Pri
!#4 N7018 P2616 LD 5 -1 FP BE Pri
!#4 N7019 P2617 PREFETCH 17 Int BE Pri
!#4 N7020 P2618 ST 21 0x418000b0 FP BE Pri
!#4 N7021 P2619 REPLACEMENT 21 Int BE Pri
!#4 N7022 P2620 REPLACEMENT 20 Int BE Nuc
!#4 N7023 P2621 ST 14 0x2000015 Int BE Pri
!#4 N7024 P2622 REPLACEMENT 2 Int BE Sec
!#4 N7025 P2623 LD 10 -1 FP BE Pri
!#4 N7026 P2624 MEMBAR
!#4 N7027 P2625 BST 19 0x418000b1 FP BE Pri
!#4 N7028 P2626 MEMBAR
!#4 N7029 P2627 ST 1 0x418000b2 FP BE Pri
!#4 N7030 P2628 MEMBAR
!#4 N7031 P2629 BLD 31 -1 FP BE Pri
!#4 N7032 P2630 MEMBAR
!#4 N7033 P2631 BST 31 0x418000b3 FP BE Pri
!#4 N7034 P2632 MEMBAR
!#4 N7035 P2633 ST 13 0x2000016 Int BE Pri
!#4 N7036 P2634 REPLACEMENT 10 Int BE Pri
!#4 N7037 P2635 MEMBAR
!#4 N7038 P2636 BST 5 0x418000b4 FP BE Pri
!#4 N7039 P2636 BST 6 0x418000b5 FP BE Pri
!#4 N7040 P2637 MEMBAR
!#4 N7041 P2638 REPLACEMENT 7 Int BE Pri
!#4 N7042 P2639 MEMBAR
!#4 N7043 P2640 BLD 32 -1 FP BE Pri
!#4 N7044 P2641 MEMBAR
!#4 N7045 P2642 MEMBAR
!#4 N7046 P2643 BLD 0 -1 FP BE Pri
!#4 N7047 P2643 BLD 1 -1 FP BE Pri
!#A N7046 N7047
!#4 N7048 P2643 BLD 2 -1 FP BE Pri
!#4 N7049 P2643 BLD 3 -1 FP BE Pri
!#4 N7050 P2643 BLD 4 -1 FP BE Pri
!#4 N7051 P2644 MEMBAR
!#4 N7052 P2645 ST 29 0x418000b6 FP BE Pri
!#4 N7053 P2646 LD 33 -1 FP BE Pri
!#4 N7054 P2647 MEMBAR
!#4 N7055 P2648 BST 10 0x418000b7 FP BE Pri
!#4 N7056 P2649 MEMBAR
!#4 N7057 P2650 BST 11 0x418000b8 FP BE Pri
!#4 N7058 P2650 BST 12 0x418000b9 FP BE Pri
!#A N7057 N7058
!#4 N7059 P2650 BST 13 0x418000ba FP BE Pri
!#4 N7060 P2651 MEMBAR
!#4 N7061 P2652 BST 0 0x418000bb FP BE Sec
!#4 N7062 P2652 BST 1 0x418000bc FP BE Sec
!#A N7061 N7062
!#4 N7063 P2652 BST 2 0x418000bd FP BE Sec
!#4 N7064 P2652 BST 3 0x418000be FP BE Sec
!#4 N7065 P2652 BST 4 0x418000bf FP BE Sec
!#4 N7066 P2653 MEMBAR
!#4 N7067 P2654 ST 10 0x2000017 Int BE Pri
!#4 N7068 P2655 MEMBAR
!#4 N7069 P2656 BLD 10 -1 FP BE Sec
!#4 N7070 P2657 MEMBAR
!#4 N7071 P2658 REPLACEMENT 2 Int BE Sec
!#4 N7072 P2659 ST 24 0x418000c0 FP BE Pri
!#4 N7073 P2660 FLUSHI 15 Int BE Pri
!#4 N7074 P2661 REPLACEMENT 21 Int BE Pri
!#4 N7075 P2662 MEMBAR
!#4 N7076 P2663 BLD 26 -1 FP BE Sec
!#4 N7077 P2663 BLD 27 -1 FP BE Sec
!#4 N7078 P2664 MEMBAR
!#4 N7079 P2665 ST 2 0x2000018 Int BE Pri
!#4 N7080 P2666 ST 30 0x2000019 Int BE Pri
!#4 N7081 P2667 ST 10 0x200001a Int BE Pri
!#4 N7082 P2668 MEMBAR
!#4 N7083 P2669 BST 26 0x418000c1 FP BE Pri
!#4 N7084 P2669 BST 27 0x418000c2 FP BE Pri
!#4 N7085 P2670 MEMBAR
!#4 N7086 P2671 LD 10 -1 Int BE Pri
!#4 N7087 P2672 MEMBAR
!#4 N7088 P2673 BST 0 0x418000c3 FP BE Sec
!#4 N7089 P2673 BST 1 0x418000c4 FP BE Sec
!#A N7088 N7089
!#4 N7090 P2673 BST 2 0x418000c5 FP BE Sec
!#4 N7091 P2673 BST 3 0x418000c6 FP BE Sec
!#4 N7092 P2673 BST 4 0x418000c7 FP BE Sec
!#4 N7093 P2674 MEMBAR
!#4 N7094 P2675 LD 26 -1 FP BE Pri
!#4 N7095 P2676 IDC_FLIP 9 Int BE Pri
!#4 N7096 P2677 MEMBAR
!#4 N7097 P2678 BST 29 0x418000c8 FP BE Pri
!#4 N7098 P2679 MEMBAR
!#4 N7099 P2680 BSTC 28 0x418000c9 FP BE Pri
!#4 N7100 P2681 MEMBAR
!#4 N7101 P2682 BLD 26 -1 FP BE Pri
!#4 N7102 P2682 BLD 27 -1 FP BE Pri
!#4 N7103 P2683 MEMBAR
!#4 N7104 P2684 REPLACEMENT 24 Int BE Pri
!#4 N7105 P2685 IDC_FLIP 12 Int BE Pri
!#4 N7106 P2686 MEMBAR
!#4 N7107 P2687 BST 0 0x418000ca FP BE Pri
!#4 N7108 P2687 BST 1 0x418000cb FP BE Pri
!#A N7107 N7108
!#4 N7109 P2687 BST 2 0x418000cc FP BE Pri
!#4 N7110 P2687 BST 3 0x418000cd FP BE Pri
!#4 N7111 P2687 BST 4 0x418000ce FP BE Pri
!#4 N7112 P2688 MEMBAR
!#4 N7113 P2689 FLUSHI 4 Int BE Pri
!#4 N7114 P2690 ST 33 0x418000cf FP BE Nuc
!#4 N7115 P2691 MEMBAR
!#4 N7116 P2692 BST 21 0x418000d0 FP BE Pri
!#4 N7117 P2692 BST 22 0x418000d1 FP BE Pri
!#A N7116 N7117
!#4 N7118 P2692 BST 23 0x418000d2 FP BE Pri
!#4 N7119 P2693 MEMBAR
!#4 N7120 P2694 REPLACEMENT 31 Int BE Pri
!#4 N7121 P2695 MEMBAR
!#4 N7122 P2696 BLD 8 -1 FP BE Sec
!#4 N7123 P2696 BLD 9 -1 FP BE Sec
!#4 N7124 P2697 MEMBAR
!#4 N7125 P2698 BLD 31 -1 FP BE Pri
!#4 N7126 P2699 MEMBAR
!#4 N7127 P2700 REPLACEMENT 7 Int BE Sec
!#4 N7128 P2701 LD 0 -1 Int LE Pri
!#4 N7129 P2702 REPLACEMENT 17 Int BE Pri
!#4 N7130 P2703 REPLACEMENT 12 Int BE Pri
!#4 N7131 P2704 IDC_FLIP 17 Int BE Pri
!#4 N7132 P2705 MEMBAR
!#4 N7133 P2706 BSTC 11 0x418000d3 FP BE Pri
!#4 N7134 P2706 BSTC 12 0x418000d4 FP BE Pri
!#A N7133 N7134
!#4 N7135 P2706 BSTC 13 0x418000d5 FP BE Pri
!#4 N7136 P2707 MEMBAR
!#4 N7137 P2708 REPLACEMENT 22 Int BE Pri
!#4 N7138 P2709 REPLACEMENT 12 Int BE Sec
!#4 N7139 P2710 MEMBAR
!#4 N7140 P2711 BSTC 7 0x418000d6 FP BE Pri
!#4 N7141 P2712 MEMBAR
!#4 N7142 P2713 BST 16 0x418000d7 FP BE Pri
!#4 N7143 P2714 MEMBAR
!#4 N7144 P2715 REPLACEMENT 25 Int BE Sec
!#4 N7145 P2716 REPLACEMENT 29 Int BE Pri
!#4 N7146 P2717 MEMBAR
!#4 N7147 P2718 BLD 21 -1 FP BE Sec
!#4 N7148 P2718 BLD 22 -1 FP BE Sec
!#A N7147 N7148
!#4 N7149 P2718 BLD 23 -1 FP BE Sec
!#4 N7150 P2719 MEMBAR
!#4 N7151 P2720 REPLACEMENT 18 Int BE Pri
!#4 N7152 P2721 ST 29 0x200001b Int BE Pri
!#4 N7153 P2722 LD 26 -1 Int BE Sec
!#4 N7154 P2723 LD 26 -1 Int LE Pri
!#4 N7155 P2724 MEMBAR
!#4 N7156 P2725 BST 0 0x418000d8 FP BE Pri
!#4 N7157 P2725 BST 1 0x418000d9 FP BE Pri
!#A N7156 N7157
!#4 N7158 P2725 BST 2 0x418000da FP BE Pri
!#4 N7159 P2725 BST 3 0x418000db FP BE Pri
!#4 N7160 P2725 BST 4 0x418000dc FP BE Pri
!#4 N7161 P2726 MEMBAR
!#4 N7162 P2727 REPLACEMENT 16 Int BE Pri
!#4 N7163 P2728 MEMBAR
!#4 N7164 P2729 BLD 24 -1 FP BE Pri
!#4 N7165 P2729 BLD 25 -1 FP BE Pri
!#4 N7166 P2730 MEMBAR
!#4 N7167 P2731 BLD 8 -1 FP BE Pri
!#4 N7168 P2731 BLD 9 -1 FP BE Pri
!#4 N7169 P2732 MEMBAR
!#4 N7170 P2733 REPLACEMENT 6 Int BE Pri
!#4 N7171 P2734 MEMBAR
!#4 N7172 P2735 BST 5 0x418000dd FP BE Pri
!#4 N7173 P2735 BST 6 0x418000de FP BE Pri
!#4 N7174 P2736 MEMBAR
!#4 N7175 P2737 BST 21 0x418000df FP BE Sec
!#4 N7176 P2737 BST 22 0x418000e0 FP BE Sec
!#A N7175 N7176
!#4 N7177 P2737 BST 23 0x418000e1 FP BE Sec
!#4 N7178 P2738 MEMBAR
!#4 N7179 P2739 ST 20 0x418000e2 FP BE Pri
!#4 N7180 P2740 MEMBAR
!#4 N7181 P2741 BST 5 0x418000e3 FP BE Pri
!#4 N7182 P2741 BST 6 0x418000e4 FP BE Pri
!#4 N7183 P2742 MEMBAR
!#4 N7184 P2743 LD 17 -1 Int BE Pri
!#4 N7185 P2744 ST 9 0x200001c Int BE Pri
!#4 N7186 P2745 ST 27 0x200001d Int BE Sec
!#4 N7187 P2746 REPLACEMENT 26 Int BE Pri
!#4 N7188 P2747 ST 25 0x200001e Int BE Pri
!#4 N7189 P2748 LD 0 -1 Int BE Pri
!#4 N7190 P2749 LD 25 -1 FP BE Sec
!#4 N7191 P2750 LD 27 -1 FP BE Pri
!#4 N7192 P2751 MEMBAR
!#4 N7193 P2752 BST 24 0x418000e5 FP BE Sec
!#4 N7194 P2752 BST 25 0x418000e6 FP BE Sec
!#4 N7195 P2753 MEMBAR
!#4 N7196 P2754 LD 7 -1 FP BE Pri
!#4 N7197 P2755 MEMBAR
!#4 N7198 P2756 BST 16 0x418000e7 FP BE Pri
!#4 N7199 P2757 MEMBAR
!#4 N7200 P2758 LD 18 -1 Int BE Pri
!#4 N7201 P2759 MEMBAR
!#4 N7202 P2760 BST 29 0x418000e8 FP BE Pri
!#4 N7203 P2761 MEMBAR
!#4 N7204 P2762 REPLACEMENT 16 Int BE Pri
!#4 N7205 P2763 REPLACEMENT 7 Int BE Pri
!#4 N7206 P2764 ST 12 0x200001f Int BE Sec
!#4 N7207 P2765 LD 19 -1 FP BE Pri
!#4 N7208 P2766 MEMBAR
!#4 N7209 P2767 BSTC 15 0x418000e9 FP BE Pri
!#4 N7210 P2768 MEMBAR
!#4 N7211 P2769 BST 30 0x418000ea FP BE Sec
!#4 N7212 P2770 MEMBAR
!#4 N7213 P2771 ST 20 0x418000eb FP BE Pri
!#4 N7214 P2772 ST 30 0x2000020 Int BE Pri
!#4 N7215 P2773 IDC_FLIP 28 Int BE Pri
!#4 N7216 P2774 MEMBAR
!#4 N7217 P2775 BST 31 0x418000ec FP BE Pri
!#4 N7218 P2776 MEMBAR
!#4 N7219 P2777 REPLACEMENT 11 Int BE Pri
!#4 N7220 P2778 LD 27 -1 FP BE Pri
!#4 N7221 P2779 ST 18 0x418000ed FP BE Pri
!#4 N7222 P2780 REPLACEMENT 17 Int BE Pri
!#4 N7223 P2781 LD 29 -1 Int BE Pri
!#4 N7224 P2782 REPLACEMENT 24 Int BE Sec
!#4 N7225 P2783 REPLACEMENT 4 Int BE Pri
!#4 N7226 P2784 LD 31 -1 Int BE Pri
!#4 N7227 P2785 MEMBAR
!#4 N7228 P2786 BLD 0 -1 FP BE Sec
!#4 N7229 P2786 BLD 1 -1 FP BE Sec
!#A N7228 N7229
!#4 N7230 P2786 BLD 2 -1 FP BE Sec
!#4 N7231 P2786 BLD 3 -1 FP BE Sec
!#4 N7232 P2786 BLD 4 -1 FP BE Sec
!#4 N7233 P2787 MEMBAR
!#4 N7234 P2788 REPLACEMENT 2 Int BE Nuc
!#4 N7235 P2789 MEMBAR
!#4 N7236 P2790 BST 5 0x418000ee FP BE Sec
!#4 N7237 P2790 BST 6 0x418000ef FP BE Sec
!#4 N7238 P2791 MEMBAR
!#4 N7239 P2792 LD 25 -1 Int BE Pri
!#4 N7240 P2793 REPLACEMENT 13 Int BE Pri
!#4 N7241 P2794 ST 2 0x2000021 Int BE Pri
!#4 N7242 P2795 MEMBAR
!#4 N7243 P2796 BLD 8 -1 FP BE Pri
!#4 N7244 P2796 BLD 9 -1 FP BE Pri
!#4 N7245 P2797 MEMBAR
!#4 N7246 P2798 REPLACEMENT 11 Int BE Pri
!#4 N7247 P2799 REPLACEMENT 21 Int BE Nuc
!#4 N7248 P2800 MEMBAR
!#4 N7249 P2801 BSTC 18 0x418000f0 FP BE Sec
!#4 N7250 P2802 MEMBAR
!#4 N7251 P2803 REPLACEMENT 32 Int BE Sec
!#4 N7252 P2804 REPLACEMENT 12 Int BE Pri
!#4 N7253 P2805 ST 10 0x2000022 Int BE Pri
!#4 N7254 P2806 REPLACEMENT 31 Int BE Pri
!#4 N7255 P2807 ST 24 0x418000f1 FP BE Nuc
!#4 N7256 P2808 LD 26 -1 Int BE Nuc
!#4 N7257 P2809 REPLACEMENT 12 Int BE Pri
!#4 N7258 P2810 ST 0 0x2000023 Int BE Sec
!#4 N7259 P2811 REPLACEMENT 20 Int BE Pri
!#4 N7260 P2812 LD 3 -1 Int BE Sec
!#4 N7261 P2813 MEMBAR
!#4 N7262 P2814 BST 15 0x418000f2 FP BE Pri
!#4 N7263 P2815 MEMBAR
!#4 N7264 P2816 REPLACEMENT 13 Int BE Pri
!#4 N7265 P2817 ST 0 0x2000024 Int BE Nuc
!#4 N7266 P2818 REPLACEMENT 11 Int BE Nuc
!#4 N7267 P2819 REPLACEMENT 4 Int BE Sec
!#4 N7268 P2820 MEMBAR
!#4 N7269 P2821 BST 15 0x418000f3 FP BE Pri
!#4 N7270 P2822 MEMBAR
!#4 N7271 P2823 REPLACEMENT 5 Int BE Pri
!#4 N7272 P2824 MEMBAR
!#4 N7273 P2825 BLD 30 -1 FP BE Pri
!#4 N7274 P2826 MEMBAR
!#4 N7275 P2827 REPLACEMENT 17 Int BE Nuc
!#4 N7276 P2828 MEMBAR
!#4 N7277 P2829 BST 5 0x418000f4 FP BE Pri
!#4 N7278 P2829 BST 6 0x418000f5 FP BE Pri
!#4 N7279 P2830 MEMBAR
!#4 N7280 P2831 PREFETCH 22 Int BE Nuc
!#4 N7281 P2832 ST 16 0x418000f6 FP BE Pri
!#4 N7282 P2833 MEMBAR
!#4 N7283 P2834 BLD 5 -1 FP BE Pri
!#4 N7284 P2834 BLD 6 -1 FP BE Pri
!#4 N7285 P2835 MEMBAR
!#4 N7286 P2836 BLD 0 -1 FP BE Pri
!#4 N7287 P2836 BLD 1 -1 FP BE Pri
!#A N7286 N7287
!#4 N7288 P2836 BLD 2 -1 FP BE Pri
!#4 N7289 P2836 BLD 3 -1 FP BE Pri
!#4 N7290 P2836 BLD 4 -1 FP BE Pri
!#4 N7291 P2837 MEMBAR
!#4 N7292 P2838 BLD 0 -1 FP BE Pri
!#4 N7293 P2838 BLD 1 -1 FP BE Pri
!#A N7292 N7293
!#4 N7294 P2838 BLD 2 -1 FP BE Pri
!#4 N7295 P2838 BLD 3 -1 FP BE Pri
!#4 N7296 P2838 BLD 4 -1 FP BE Pri
!#4 N7297 P2839 MEMBAR
!#4 N7298 P2840 LD 22 -1 FP BE Pri
!#4 N7299 P2841 REPLACEMENT 21 Int BE Pri
!#4 N7300 P2842 LD 28 -1 Int LE Pri
!#4 N7301 P2843 MEMBAR
!#4 N7302 P2844 BST 10 0x418000f7 FP BE Pri
!#4 N7303 P2845 MEMBAR
!#4 N7304 P2846 ST 13 0x418000f8 FP BE Pri
!#4 N7305 P2847 MEMBAR
!#4 N7306 P2848 BST 21 0x418000f9 FP BE Pri
!#4 N7307 P2848 BST 22 0x418000fa FP BE Pri
!#A N7306 N7307
!#4 N7308 P2848 BST 23 0x418000fb FP BE Pri
!#4 N7309 P2849 MEMBAR
!#4 N7310 P2850 REPLACEMENT 27 Int BE Pri
!#4 N7311 P2851 LD 13 -1 Int BE Pri
!#4 N7312 P2852 REPLACEMENT 24 Int BE Pri
!#4 N7313 P2853 REPLACEMENT 4 Int BE Nuc
!#4 N7314 P2854 REPLACEMENT 2 Int BE Nuc
!#4 N7315 P2855 REPLACEMENT 1 Int BE Sec
!#4 N7316 P2856 LD 10 -1 Int BE Pri
!#4 N7317 P2857 LD 14 -1 FP BE Pri
!#4 N7318 P2858 ST 18 0x418000fc FP BE Pri
!#4 N7319 P2859 MEMBAR
!#4 N7320 P2860 BST 33 0x418000fd FP BE Pri
!#4 N7321 P2861 MEMBAR
!#4 N7322 P2862 LD 33 -1 Int BE Pri
!#4 N7323 P2863 LD 3 -1 FP BE Sec
!#4 N7324 P2864 MEMBAR
!#4 N7325 P2865 BST 0 0x418000fe FP BE Pri
!#4 N7326 P2865 BST 1 0x418000ff FP BE Pri
!#A N7325 N7326
!#4 N7327 P2865 BST 2 0x41800100 FP BE Pri
!#4 N7328 P2865 BST 3 0x41800101 FP BE Pri
!#4 N7329 P2865 BST 4 0x41800102 FP BE Pri
!#4 N7330 P2866 MEMBAR
!#4 N7331 P2867 REPLACEMENT 32 Int BE Pri
!#4 N7332 P2868 ST 33 0x41800103 FP BE Pri
!#4 N7333 P2869 MEMBAR
!#4 N7334 P2870 BLD 8 -1 FP BE Pri
!#4 N7335 P2870 BLD 9 -1 FP BE Pri
!#4 N7336 P2871 MEMBAR
!#4 N7337 P2872 REPLACEMENT 32 Int BE Pri
!#4 N7338 P2873 LD 16 -1 FP BE Nuc
!#4 N7339 P2874 LD 18 -1 FP BE Pri
!#4 N7340 P2875 MEMBAR
!#4 N7341 P2876 BLD 0 -1 FP BE Pri
!#4 N7342 P2876 BLD 1 -1 FP BE Pri
!#A N7341 N7342
!#4 N7343 P2876 BLD 2 -1 FP BE Pri
!#4 N7344 P2876 BLD 3 -1 FP BE Pri
!#4 N7345 P2876 BLD 4 -1 FP BE Pri
!#4 N7346 P2877 MEMBAR
!#4 N7347 P2878 BLD 26 -1 FP BE Pri
!#4 N7348 P2878 BLD 27 -1 FP BE Pri
!#4 N7349 P2879 MEMBAR
!#4 N7350 P2880 BLD 21 -1 FP BE Pri
!#4 N7351 P2880 BLD 22 -1 FP BE Pri
!#A N7350 N7351
!#4 N7352 P2880 BLD 23 -1 FP BE Pri
!#4 N7353 P2881 MEMBAR
!#4 N7354 P2882 ST 1 0x41800104 FP BE Pri
!#4 N7355 P2883 MEMBAR
!#4 N7356 P2884 BLD 21 -1 FP BE Sec
!#4 N7357 P2884 BLD 22 -1 FP BE Sec
!#A N7356 N7357
!#4 N7358 P2884 BLD 23 -1 FP BE Sec
!#4 N7359 P2885 MEMBAR
!#4 N7360 P2886 ST 27 0x2000025 Int BE Nuc
!#4 N7361 P2887 MEMBAR
!#4 N7362 P2888 BSTC 5 0x41800105 FP BE Pri
!#4 N7363 P2888 BSTC 6 0x41800106 FP BE Pri
!#4 N7364 P2889 MEMBAR
!#4 N7365 P2890 REPLACEMENT 29 Int BE Pri
!#4 N7366 P2891 MEMBAR
!#4 N7367 P2892 BSTC 0 0x41800107 FP BE Sec
!#4 N7368 P2892 BSTC 1 0x41800108 FP BE Sec
!#A N7367 N7368
!#4 N7369 P2892 BSTC 2 0x41800109 FP BE Sec
!#4 N7370 P2892 BSTC 3 0x4180010a FP BE Sec
!#4 N7371 P2892 BSTC 4 0x4180010b FP BE Sec
!#4 N7372 P2893 MEMBAR
!#4 N7373 P2894 BLD 7 -1 FP BE Pri
!#4 N7374 P2895 MEMBAR
!#4 N7375 P2896 REPLACEMENT 25 Int BE Pri
!#4 N7376 P2897 MEMBAR
!#4 N7377 P2898 BLD 28 -1 FP BE Sec
!#4 N7378 P2899 MEMBAR
!#4 N7379 P2900 REPLACEMENT 32 Int BE Sec
!#4 N7380 P2901 MEMBAR
!#4 N7381 P2902 BST 0 0x4180010c FP BE Sec
!#4 N7382 P2902 BST 1 0x4180010d FP BE Sec
!#A N7381 N7382
!#4 N7383 P2902 BST 2 0x4180010e FP BE Sec
!#4 N7384 P2902 BST 3 0x4180010f FP BE Sec
!#4 N7385 P2902 BST 4 0x41800110 FP BE Sec
!#4 N7386 P2903 MEMBAR
!#4 N7387 P2904 ST 22 0x2000026 Int BE Pri
!#4 N7388 P2905 LD 20 -1 Int BE Pri
!#4 N7389 P2906 MEMBAR
!#4 N7390 P2907 BLD 32 -1 FP BE Sec
!#4 N7391 P2908 MEMBAR
!#4 N7392 P2909 BLD 31 -1 FP BE Pri
!#4 N7393 P2910 MEMBAR
!#4 N7394 P2911 BLD 7 -1 FP BE Pri
!#4 N7395 P2912 MEMBAR
!#4 N7396 P2913 BLD 18 -1 FP BE Pri
!#4 N7397 P2914 MEMBAR
!#4 N7398 P2915 ST 30 0x41800111 FP BE Sec
!#4 N7399 P2916 MEMBAR
!#4 N7400 P2917 BSTC 21 0x41800112 FP BE Pri
!#4 N7401 P2917 BSTC 22 0x41800113 FP BE Pri
!#A N7400 N7401
!#4 N7402 P2917 BSTC 23 0x41800114 FP BE Pri
!#4 N7403 P2918 MEMBAR
!#4 N7404 P2919 ST 8 0x41800115 FP BE Pri
!#4 N7405 P2920 MEMBAR
!#4 N7406 P2921 BSTC 24 0x41800116 FP BE Pri
!#4 N7407 P2921 BSTC 25 0x41800117 FP BE Pri
!#4 N7408 P2922 MEMBAR
!#4 N7409 P2923 BST 21 0x41800118 FP BE Pri
!#4 N7410 P2923 BST 22 0x41800119 FP BE Pri
!#A N7409 N7410
!#4 N7411 P2923 BST 23 0x4180011a FP BE Pri
!#4 N7412 P2924 MEMBAR
!#4 N7413 P2925 LD 30 -1 FP BE Nuc
!#4 N7414 P2926 IDC_FLIP 10 Int BE Pri
!#4 N7415 P2927 PREFETCH 10 Int BE Sec
!#4 N7416 P2928 LD 13 -1 FP BE Pri
!#4 N7417 P2929 ST 27 0x2000027 Int LE Pri
!#4 N7418 P2930 REPLACEMENT 2 Int BE Pri
!#4 N7419 P2931 LD 4 -1 FP BE Pri
!#4 N7420 P2932 MEMBAR
!#4 N7421 P2933 BLD 11 -1 FP BE Pri
!#4 N7422 P2933 BLD 12 -1 FP BE Pri
!#A N7421 N7422
!#4 N7423 P2933 BLD 13 -1 FP BE Pri
!#4 N7424 P2934 MEMBAR
!#4 N7425 P2935 BSTC 26 0x4180011b FP BE Pri
!#4 N7426 P2935 BSTC 27 0x4180011c FP BE Pri
!#4 N7427 P2936 MEMBAR
!#4 N7428 P2937 REPLACEMENT 29 Int BE Sec
!#4 N7429 P2938 ST 20 0x4180011d FP BE Pri
!#4 N7430 P2939 MEMBAR
!#4 N7431 P2940 BLD 0 -1 FP BE Pri
!#4 N7432 P2940 BLD 1 -1 FP BE Pri
!#A N7431 N7432
!#4 N7433 P2940 BLD 2 -1 FP BE Pri
!#4 N7434 P2940 BLD 3 -1 FP BE Pri
!#4 N7435 P2940 BLD 4 -1 FP BE Pri
!#4 N7436 P2941 MEMBAR
!#4 N7437 P2942 LD 5 -1 Int BE Pri
!#4 N7438 P2943 REPLACEMENT 30 Int BE Pri
!#4 N7439 P2944 PREFETCH 20 Int BE Pri
!#4 N7440 P2945 ST 28 0x2000028 Int BE Pri
!#4 N7441 P2946 MEMBAR
!#4 N7442 P2947 BLD 8 -1 FP BE Pri
!#4 N7443 P2947 BLD 9 -1 FP BE Pri
!#4 N7444 P2948 MEMBAR
!#4 N7445 P2949 BLD 21 -1 FP BE Pri
!#4 N7446 P2949 BLD 22 -1 FP BE Pri
!#A N7445 N7446
!#4 N7447 P2949 BLD 23 -1 FP BE Pri
!#4 N7448 P2950 MEMBAR
!#4 N7449 P2951 BLD 21 -1 FP BE Pri
!#4 N7450 P2951 BLD 22 -1 FP BE Pri
!#A N7449 N7450
!#4 N7451 P2951 BLD 23 -1 FP BE Pri
!#4 N7452 P2952 MEMBAR
!#4 N7453 P2953 BST 0 0x4180011e FP BE Sec
!#4 N7454 P2953 BST 1 0x4180011f FP BE Sec
!#A N7453 N7454
!#4 N7455 P2953 BST 2 0x41800120 FP BE Sec
!#4 N7456 P2953 BST 3 0x41800121 FP BE Sec
!#4 N7457 P2953 BST 4 0x41800122 FP BE Sec
!#4 N7458 P2954 MEMBAR
!#4 N7459 P2955 BST 33 0x41800123 FP BE Pri
!#4 N7460 P2956 MEMBAR
!#4 N7461 P2957 REPLACEMENT 3 Int BE Sec
!#4 N7462 P2958 IDC_FLIP 5 Int BE Pri
!#4 N7463 P2959 ST 17 0x2000029 Int BE Pri
!#4 N7464 P2960 REPLACEMENT 4 Int BE Pri
!#4 N7465 P2961 MEMBAR
!#4 N7466 P2962 BST 11 0x41800124 FP BE Pri
!#4 N7467 P2962 BST 12 0x41800125 FP BE Pri
!#A N7466 N7467
!#4 N7468 P2962 BST 13 0x41800126 FP BE Pri
!#4 N7469 P2963 MEMBAR
!#4 N7470 P2964 BST 0 0x41800127 FP BE Sec
!#4 N7471 P2964 BST 1 0x41800128 FP BE Sec
!#A N7470 N7471
!#4 N7472 P2964 BST 2 0x41800129 FP BE Sec
!#4 N7473 P2964 BST 3 0x4180012a FP BE Sec
!#4 N7474 P2964 BST 4 0x4180012b FP BE Sec
!#4 N7475 P2965 MEMBAR
!#4 N7476 P2966 ST 11 0x200002a Int BE Pri
!#4 N7477 P2967 REPLACEMENT 32 Int BE Pri
!#4 N7478 P2968 LD 22 -1 Int BE Pri
!#4 N7479 P2969 ST 6 0x4180012c FP BE Pri
!#4 N7480 P2970 MEMBAR
!#4 N7481 P2971 BLD 0 -1 FP BE Pri
!#4 N7482 P2971 BLD 1 -1 FP BE Pri
!#A N7481 N7482
!#4 N7483 P2971 BLD 2 -1 FP BE Pri
!#4 N7484 P2971 BLD 3 -1 FP BE Pri
!#4 N7485 P2971 BLD 4 -1 FP BE Pri
!#4 N7486 P2972 MEMBAR
!#4 N7487 P2973 REPLACEMENT 7 Int BE Pri
!#4 N7488 P2974 MEMBAR
!#4 N7489 P2975 BST 0 0x4180012d FP BE Pri
!#4 N7490 P2975 BST 1 0x4180012e FP BE Pri
!#A N7489 N7490
!#4 N7491 P2975 BST 2 0x4180012f FP BE Pri
!#4 N7492 P2975 BST 3 0x41800130 FP BE Pri
!#4 N7493 P2975 BST 4 0x41800131 FP BE Pri
!#4 N7494 P2976 MEMBAR
!#4 N7495 P2977 ST 20 0x200002b Int BE Pri
!#4 N7496 P2978 REPLACEMENT 14 Int BE Pri
!#4 N7497 P2979 ST 13 0x41800132 FP BE Pri
!#4 N7498 P2980 LD 24 -1 Int LE Pri
!#4 N7499 P2981 ST 1 0x41800133 FP BE Pri
!#4 N7500 P2982 MEMBAR
!#4 N7501 P2983 BLD 26 -1 FP BE Pri
!#4 N7502 P2983 BLD 27 -1 FP BE Pri
!#4 N7503 P2984 MEMBAR
!#4 N7504 P2985 ST 3 0x200002c Int BE Pri
!#4 N7505 P2986 MEMBAR
!#4 N7506 P2987 BSTC 24 0x41800134 FP BE Pri
!#4 N7507 P2987 BSTC 25 0x41800135 FP BE Pri
!#4 N7508 P2988 MEMBAR
!#4 N7509 P2989 LD 26 -1 Int BE Pri
!#4 N7510 P2990 ST 21 0x200002d Int BE Nuc
!#4 N7511 P2991 MEMBAR
!#4 N7512 P2992 BST 11 0x41800136 FP BE Pri
!#4 N7513 P2992 BST 12 0x41800137 FP BE Pri
!#A N7512 N7513
!#4 N7514 P2992 BST 13 0x41800138 FP BE Pri
!#4 N7515 P2993 MEMBAR
!#4 N7516 P2994 BLD 0 -1 FP BE Pri
!#4 N7517 P2994 BLD 1 -1 FP BE Pri
!#A N7516 N7517
!#4 N7518 P2994 BLD 2 -1 FP BE Pri
!#4 N7519 P2994 BLD 3 -1 FP BE Pri
!#4 N7520 P2994 BLD 4 -1 FP BE Pri
!#4 N7521 P2995 MEMBAR
!#4 N7522 P2996 REPLACEMENT 15 Int BE Sec
!#4 N7523 P2997 ST 8 0x41800139 FP BE Sec
!#4 N7524 P2998 REPLACEMENT 18 Int BE Pri
!#4 N7525 P2999 MEMBAR
!#4 N7526 P3000 BLD 31 -1 FP BE Pri
!#4 N7527 P3001 MEMBAR
!#4 N7528 P3002 BST 11 0x4180013a FP BE Pri
!#4 N7529 P3002 BST 12 0x4180013b FP BE Pri
!#A N7528 N7529
!#4 N7530 P3002 BST 13 0x4180013c FP BE Pri
!#4 N7531 P3003 MEMBAR
!#4 N7532 P3004 BLD 24 -1 FP BE Sec
!#4 N7533 P3004 BLD 25 -1 FP BE Sec
!#4 N7534 P3005 MEMBAR
!#4 N7535 P3006 BLD 26 -1 FP BE Sec
!#4 N7536 P3006 BLD 27 -1 FP BE Sec
!#4 N7537 P3007 MEMBAR
!#4 N7538 P3008 BST 16 0x4180013d FP BE Pri
!#4 N7539 P3009 MEMBAR
!#4 N7540 P3010 BST 26 0x4180013e FP BE Pri
!#4 N7541 P3010 BST 27 0x4180013f FP BE Pri
!#4 N7542 P3011 MEMBAR
!#4 N7543 P3012 REPLACEMENT 13 Int BE Pri
!#4 N7544 P3013 REPLACEMENT 24 Int BE Pri
!#4 N7545 P3014 MEMBAR
!#4 N7546 P3015 BST 5 0x41800140 FP BE Pri
!#4 N7547 P3015 BST 6 0x41800141 FP BE Pri
!#4 N7548 P3016 MEMBAR
!#4 N7549 P3017 BST 8 0x41800142 FP BE Pri
!#4 N7550 P3017 BST 9 0x41800143 FP BE Pri
!#4 N7551 P3018 MEMBAR
!#4 N7552 P3019 REPLACEMENT 14 Int BE Pri
!#4 N7553 P3020 MEMBAR
!#4 N7554 P3021 BLD 7 -1 FP BE Sec
!#4 N7555 P3022 MEMBAR
!#4 N7556 P3023 PREFETCH 5 Int BE Pri
!#4 N7557 P3024 ST 28 0x200002e Int BE Pri
!#4 N7558 P3025 LD 16 -1 FP BE Sec
!#4 N7559 P3026 REPLACEMENT 32 Int BE Pri
!#4 N7560 P3027 ST 32 0x41800144 FP BE Pri
!#4 N7561 P3028 MEMBAR
!#4 N7562 P3029 BST 8 0x41800145 FP BE Pri
!#4 N7563 P3029 BST 9 0x41800146 FP BE Pri
!#4 N7564 P3030 MEMBAR
!#4 N7565 P3031 PREFETCH 10 Int BE Pri
!#4 N7566 P3032 REPLACEMENT 5 Int BE Pri
!#4 N7567 P3033 LD 18 -1 Int BE Pri
!#4 N7568 P3034 MEMBAR
!#4 N7569 P3035 BST 16 0x41800147 FP BE Pri
!#4 N7570 P3036 MEMBAR
!#4 N7571 P3037 BLD 11 -1 FP BE Pri
!#4 N7572 P3037 BLD 12 -1 FP BE Pri
!#A N7571 N7572
!#4 N7573 P3037 BLD 13 -1 FP BE Pri
!#4 N7574 P3038 MEMBAR
!#4 N7575 P3039 REPLACEMENT 3 Int BE Nuc
!#4 N7576 P3040 MEMBAR
!#4 N7577 P3041 BLD 0 -1 FP BE Pri
!#4 N7578 P3041 BLD 1 -1 FP BE Pri
!#A N7577 N7578
!#4 N7579 P3041 BLD 2 -1 FP BE Pri
!#4 N7580 P3041 BLD 3 -1 FP BE Pri
!#4 N7581 P3041 BLD 4 -1 FP BE Pri
!#4 N7582 P3042 MEMBAR
!#4 N7583 P3043 ST 1 0x200002f Int BE Nuc
!#4 N7584 P3044 ST 32 0x41800148 FP BE Pri
!#4 N7585 P3045 MEMBAR
!#4 N7586 P3046 BLD 33 -1 FP BE Pri
!#4 N7587 P3047 MEMBAR
!#4 N7588 P3048 PREFETCH 11 Int BE Sec
!#4 N7589 P3049 ST 19 0x2000030 Int BE Pri
!#4 N7590 P3050 REPLACEMENT 5 Int BE Pri
!#4 N7591 P3051 MEMBAR
!#4 N7592 P3052 BLD 21 -1 FP BE Pri
!#4 N7593 P3052 BLD 22 -1 FP BE Pri
!#A N7592 N7593
!#4 N7594 P3052 BLD 23 -1 FP BE Pri
!#4 N7595 P3053 MEMBAR
!#4 N7596 P3054 IDC_FLIP 26 Int BE Pri
!#4 N7597 P3055 REPLACEMENT 10 Int BE Pri
!#4 N7598 P3056 MEMBAR
!#4 N7599 P3057 BLD 26 -1 FP BE Pri
!#4 N7600 P3057 BLD 27 -1 FP BE Pri
!#4 N7601 P3058 MEMBAR
!#4 N7602 P3059 ST 25 0x41800149 FP BE Pri
!#4 N7603 P3060 LD 4 -1 Int BE Sec
!#4 N7604 P3061 REPLACEMENT 2 Int BE Pri
!#4 N7605 P3062 REPLACEMENT 14 Int BE Pri
!#4 N7606 P3063 MEMBAR
!#4 N7607 P3064 BST 15 0x4180014a FP BE Pri
!#4 N7608 P3065 MEMBAR
!#4 N7609 P3066 ST 23 0x2000031 Int BE Pri
!#4 N7610 P3067 REPLACEMENT 32 Int BE Nuc
!#4 N7611 P3068 MEMBAR
!#4 N7612 P3069 BLD 21 -1 FP BE Pri
!#4 N7613 P3069 BLD 22 -1 FP BE Pri
!#A N7612 N7613
!#4 N7614 P3069 BLD 23 -1 FP BE Pri
!#4 N7615 P3070 MEMBAR
!#4 N7616 P3071 REPLACEMENT 7 Int BE Sec
!#4 N7617 P3072 REPLACEMENT 13 Int BE Pri
!#4 N7618 P3073 REPLACEMENT 12 Int BE Pri
!#4 N7619 P3074 MEMBAR
!#4 N7620 P3075 BST 24 0x4180014b FP BE Pri
!#4 N7621 P3075 BST 25 0x4180014c FP BE Pri
!#4 N7622 P3076 MEMBAR
!#4 N7623 P3077 BST 28 0x4180014d FP BE Pri
!#4 N7624 P3078 MEMBAR
!#4 N7625 P3079 BST 26 0x4180014e FP BE Pri
!#4 N7626 P3079 BST 27 0x4180014f FP BE Pri
!#4 N7627 P3080 MEMBAR
!#4 N7628 P3081 REPLACEMENT 4 Int BE Pri
!#4 N7629 P3082 LD 30 -1 FP BE Pri
!#4 N7630 P3083 MEMBAR
!#4 N7631 P3084 BSTC 5 0x41800150 FP BE Pri
!#4 N7632 P3084 BSTC 6 0x41800151 FP BE Pri
!#4 N7633 P3085 MEMBAR
!#4 N7634 P3086 LD 18 -1 Int BE Nuc Loop_exit
!#4 N7635 P3087 MEMBAR
!#5 N7636 P3088 REPLACEMENT 18 Int BE Pri Loop_entry
!#5 N7637 P3089 REPLACEMENT 33 Int BE Pri
!#5 N7638 P3090 REPLACEMENT 19 Int BE Pri
!#5 N7639 P3091 REPLACEMENT 11 Int BE Sec
!#5 N7640 P3092 REPLACEMENT 24 Int BE Sec
!#5 N7641 P3093 MEMBAR
!#5 N7642 P3094 BST 7 0x42000001 FP BE Pri
!#5 N7643 P3095 MEMBAR
!#5 N7644 P3096 BST 17 0x42000002 FP BE Pri
!#5 N7645 P3097 MEMBAR
!#5 N7646 P3098 BST 28 0x42000003 FP BE Pri
!#5 N7647 P3099 MEMBAR
!#5 N7648 P3100 REPLACEMENT 3 Int BE Sec
!#5 N7649 P3101 IDC_FLIP 31 Int BE Pri
!#5 N7650 P3102 FLUSHI 22 Int BE Pri
!#5 N7651 P3103 LD 6 -1 Int BE Nuc
!#5 N7652 P3104 MEMBAR
!#5 N7653 P3105 BLD 31 -1 FP BE Pri
!#5 N7654 P3106 MEMBAR
!#5 N7655 P3107 LD 14 -1 Int BE Pri
!#5 N7656 P3108 REPLACEMENT 23 Int BE Pri
!#5 N7657 P3109 ST 11 0x42000004 FP BE Pri
!#5 N7658 P3110 MEMBAR
!#5 N7659 P3111 BST 0 0x42000005 FP BE Pri
!#5 N7660 P3111 BST 1 0x42000006 FP BE Pri
!#A N7659 N7660
!#5 N7661 P3111 BST 2 0x42000007 FP BE Pri
!#5 N7662 P3111 BST 3 0x42000008 FP BE Pri
!#5 N7663 P3111 BST 4 0x42000009 FP BE Pri
!#5 N7664 P3112 MEMBAR
!#5 N7665 P3113 ST 28 0x2800001 Int BE Pri
!#5 N7666 P3114 REPLACEMENT 25 Int BE Pri
!#5 N7667 P3115 LD 18 -1 FP BE Sec
!#5 N7668 P3116 REPLACEMENT 21 Int BE Pri
!#5 N7669 P3117 LD 27 -1 FP BE Sec
!#5 N7670 P3118 ST 27 0x2800002 Int BE Nuc
!#5 N7671 P3119 MEMBAR
!#5 N7672 P3120 BLD 24 -1 FP BE Pri
!#5 N7673 P3120 BLD 25 -1 FP BE Pri
!#5 N7674 P3121 MEMBAR
!#5 N7675 P3122 LD 14 -1 Int BE Sec
!#5 N7676 P3123 REPLACEMENT 26 Int BE Pri
!#5 N7677 P3124 ST 4 0x4200000a FP BE Sec
!#5 N7678 P3125 REPLACEMENT 21 Int BE Pri
!#5 N7679 P3126 REPLACEMENT 1 Int BE Pri
!#5 N7680 P3127 MEMBAR
!#5 N7681 P3128 BLD 5 -1 FP BE Pri
!#5 N7682 P3128 BLD 6 -1 FP BE Pri
!#5 N7683 P3129 MEMBAR
!#5 N7684 P3130 BST 5 0x4200000b FP BE Pri
!#5 N7685 P3130 BST 6 0x4200000c FP BE Pri
!#5 N7686 P3131 MEMBAR
!#5 N7687 P3132 BST 24 0x4200000d FP BE Sec
!#5 N7688 P3132 BST 25 0x4200000e FP BE Sec
!#5 N7689 P3133 MEMBAR
!#5 N7690 P3134 BSTC 11 0x4200000f FP BE Pri
!#5 N7691 P3134 BSTC 12 0x42000010 FP BE Pri
!#A N7690 N7691
!#5 N7692 P3134 BSTC 13 0x42000011 FP BE Pri
!#5 N7693 P3135 MEMBAR
!#5 N7694 P3136 REPLACEMENT 30 Int BE Sec
!#5 N7695 P3137 REPLACEMENT 16 Int BE Sec
!#5 N7696 P3138 MEMBAR
!#5 N7697 P3139 BST 30 0x42000012 FP BE Sec
!#5 N7698 P3140 MEMBAR
!#5 N7699 P3141 LD 23 -1 FP BE Pri
!#5 N7700 P3142 ST 28 0x42000013 FP BE Pri
!#5 N7701 P3143 MEMBAR
!#5 N7702 P3144 BST 32 0x42000014 FP BE Pri
!#5 N7703 P3145 MEMBAR
!#5 N7704 P3146 REPLACEMENT 6 Int BE Pri
!#5 N7705 P3147 REPLACEMENT 32 Int BE Pri
!#5 N7706 P3148 IDC_FLIP 20 Int BE Pri
!#5 N7707 P3149 IDC_FLIP 13 Int BE Pri
!#5 N7708 P3150 REPLACEMENT 4 Int BE Pri
!#5 N7709 P3151 MEMBAR
!#5 N7710 P3152 BST 32 0x42000015 FP BE Pri
!#5 N7711 P3153 MEMBAR
!#5 N7712 P3154 REPLACEMENT 30 Int BE Sec
!#5 N7713 P3155 REPLACEMENT 25 Int BE Sec
!#5 N7714 P3156 REPLACEMENT 9 Int BE Pri
!#5 N7715 P3157 MEMBAR
!#5 N7716 P3158 BSTC 15 0x42000016 FP BE Pri
!#5 N7717 P3159 MEMBAR
!#5 N7718 P3160 REPLACEMENT 33 Int BE Pri
!#5 N7719 P3161 MEMBAR
!#5 N7720 P3162 BLD 19 -1 FP BE Pri
!#5 N7721 P3163 MEMBAR
!#5 N7722 P3164 BST 15 0x42000017 FP BE Pri
!#5 N7723 P3165 MEMBAR
!#5 N7724 P3166 REPLACEMENT 32 Int BE Pri
!#5 N7725 P3167 REPLACEMENT 22 Int BE Sec
!#5 N7726 P3168 PREFETCH 23 Int BE Pri
!#5 N7727 P3169 REPLACEMENT 4 Int BE Pri
!#5 N7728 P3170 LD 25 -1 Int BE Pri
!#5 N7729 P3171 LD 17 -1 FP BE Nuc
!#5 N7730 P3172 ST 9 0x42000018 FP BE Sec
!#5 N7731 P3173 LD 21 -1 Int BE Pri
!#5 N7732 P3174 LD 33 -1 FP BE Pri
!#5 N7733 P3175 REPLACEMENT 15 Int BE Pri
!#5 N7734 P3176 LD 11 -1 Int BE Nuc
!#5 N7735 P3177 REPLACEMENT 32 Int BE Pri
!#5 N7736 P3178 MEMBAR
!#5 N7737 P3179 BLD 7 -1 FP BE Pri
!#5 N7738 P3180 MEMBAR
!#5 N7739 P3181 REPLACEMENT 23 Int BE Pri
!#5 N7740 P3182 ST 32 0x2800003 Int LE Pri
!#5 N7741 P3183 LD 24 -1 FP BE Pri
!#5 N7742 P3184 LD 1 -1 FP BE Pri
!#5 N7743 P3185 REPLACEMENT 19 Int BE Pri
!#5 N7744 P3186 REPLACEMENT 33 Int BE Pri
!#5 N7745 P3187 REPLACEMENT 2 Int BE Sec
!#5 N7746 P3188 MEMBAR
!#5 N7747 P3189 BST 0 0x42000019 FP BE Pri
!#5 N7748 P3189 BST 1 0x4200001a FP BE Pri
!#A N7747 N7748
!#5 N7749 P3189 BST 2 0x4200001b FP BE Pri
!#5 N7750 P3189 BST 3 0x4200001c FP BE Pri
!#5 N7751 P3189 BST 4 0x4200001d FP BE Pri
!#5 N7752 P3190 MEMBAR
!#5 N7753 P3191 ST 7 0x2800004 Int BE Pri
!#5 N7754 P3192 LD 23 -1 Int BE Sec
!#5 N7755 P3193 LD 13 -1 Int BE Pri
!#5 N7756 P3194 REPLACEMENT 21 Int BE Pri
!#5 N7757 P3195 MEMBAR
!#5 N7758 P3196 BST 0 0x4200001e FP BE Pri
!#5 N7759 P3196 BST 1 0x4200001f FP BE Pri
!#A N7758 N7759
!#5 N7760 P3196 BST 2 0x42000020 FP BE Pri
!#5 N7761 P3196 BST 3 0x42000021 FP BE Pri
!#5 N7762 P3196 BST 4 0x42000022 FP BE Pri
!#5 N7763 P3197 MEMBAR
!#5 N7764 P3198 ST 24 0x42000023 FP BE Pri
!#5 N7765 P3199 MEMBAR
!#5 N7766 P3200 BLD 21 -1 FP BE Pri
!#5 N7767 P3200 BLD 22 -1 FP BE Pri
!#A N7766 N7767
!#5 N7768 P3200 BLD 23 -1 FP BE Pri
!#5 N7769 P3201 MEMBAR
!#5 N7770 P3202 LD 7 -1 FP BE Nuc
!#5 N7771 P3203 LD 9 -1 FP BE Pri
!#5 N7772 P3204 ST 20 0x2800005 Int BE Nuc
!#5 N7773 P3205 MEMBAR
!#5 N7774 P3206 BST 18 0x42000024 FP BE Pri
!#5 N7775 P3207 MEMBAR
!#5 N7776 P3208 REPLACEMENT 15 Int BE Pri
!#5 N7777 P3209 ST 3 0x42000025 FP BE Pri
!#5 N7778 P3210 PREFETCH 13 Int BE Pri
!#5 N7779 P3211 REPLACEMENT 28 Int BE Pri
!#5 N7780 P3212 ST 24 0x2800006 Int BE Pri
!#5 N7781 P3213 MEMBAR
!#5 N7782 P3214 BST 0 0x42000026 FP BE Pri
!#5 N7783 P3214 BST 1 0x42000027 FP BE Pri
!#A N7782 N7783
!#5 N7784 P3214 BST 2 0x42000028 FP BE Pri
!#5 N7785 P3214 BST 3 0x42000029 FP BE Pri
!#5 N7786 P3214 BST 4 0x4200002a FP BE Pri
!#5 N7787 P3215 MEMBAR
!#5 N7788 P3216 LD 12 -1 FP BE Nuc
!#5 N7789 P3217 ST 3 0x2800007 Int BE Nuc
!#5 N7790 P3218 LD 6 -1 Int BE Pri
!#5 N7791 P3219 MEMBAR
!#5 N7792 P3220 BLD 31 -1 FP BE Pri
!#5 N7793 P3221 MEMBAR
!#5 N7794 P3222 REPLACEMENT 17 Int BE Pri
!#5 N7795 P3223 REPLACEMENT 0 Int BE Pri
!#5 N7796 P3224 LD 4 -1 FP BE Sec
!#5 N7797 P3225 MEMBAR
!#5 N7798 P3226 BLD 31 -1 FP BE Pri
!#5 N7799 P3227 MEMBAR
!#5 N7800 P3228 LD 17 -1 FP BE Pri
!#5 N7801 P3229 ST 29 0x4200002b FP BE Pri
!#5 N7802 P3230 ST 12 0x2800008 Int BE Pri
!#5 N7803 P3231 MEMBAR
!#5 N7804 P3232 BLD 24 -1 FP BE Pri
!#5 N7805 P3232 BLD 25 -1 FP BE Pri
!#5 N7806 P3233 MEMBAR
!#5 N7807 P3234 REPLACEMENT 21 Int BE Pri
!#5 N7808 P3235 ST 3 0x2800009 Int BE Pri
!#5 N7809 P3236 MEMBAR
!#5 N7810 P3237 BST 0 0x4200002c FP BE Pri
!#5 N7811 P3237 BST 1 0x4200002d FP BE Pri
!#A N7810 N7811
!#5 N7812 P3237 BST 2 0x4200002e FP BE Pri
!#5 N7813 P3237 BST 3 0x4200002f FP BE Pri
!#5 N7814 P3237 BST 4 0x42000030 FP BE Pri
!#5 N7815 P3238 MEMBAR
!#5 N7816 P3239 BSTC 11 0x42000031 FP BE Pri
!#5 N7817 P3239 BSTC 12 0x42000032 FP BE Pri
!#A N7816 N7817
!#5 N7818 P3239 BSTC 13 0x42000033 FP BE Pri
!#5 N7819 P3240 MEMBAR
!#5 N7820 P3241 LD 17 -1 FP BE Pri
!#5 N7821 P3242 LD 29 -1 Int BE Pri
!#5 N7822 P3243 ST 3 0x280000a Int BE Pri
!#5 N7823 P3244 MEMBAR
!#5 N7824 P3245 BST 21 0x42000034 FP BE Pri
!#5 N7825 P3245 BST 22 0x42000035 FP BE Pri
!#A N7824 N7825
!#5 N7826 P3245 BST 23 0x42000036 FP BE Pri
!#5 N7827 P3246 MEMBAR
!#5 N7828 P3247 BLD 24 -1 FP BE Pri
!#5 N7829 P3247 BLD 25 -1 FP BE Pri
!#5 N7830 P3248 MEMBAR
!#5 N7831 P3249 BLD 5 -1 FP BE Pri
!#5 N7832 P3249 BLD 6 -1 FP BE Pri
!#5 N7833 P3250 MEMBAR
!#5 N7834 P3251 BST 18 0x42000037 FP BE Pri
!#5 N7835 P3252 MEMBAR
!#5 N7836 P3253 BST 29 0x42000038 FP BE Pri
!#5 N7837 P3254 MEMBAR
!#5 N7838 P3255 BLD 31 -1 FP BE Pri
!#5 N7839 P3256 MEMBAR
!#5 N7840 P3257 BLD 5 -1 FP BE Pri
!#5 N7841 P3257 BLD 6 -1 FP BE Pri
!#5 N7842 P3258 MEMBAR
!#5 N7843 P3259 BLD 17 -1 FP BE Pri
!#5 N7844 P3260 MEMBAR
!#5 N7845 P3261 REPLACEMENT 20 Int BE Nuc
!#5 N7846 P3262 MEMBAR
!#5 N7847 P3263 BST 28 0x42000039 FP BE Pri
!#5 N7848 P3264 MEMBAR
!#5 N7849 P3265 LD 13 -1 FP BE Pri
!#5 N7850 P3266 MEMBAR
!#5 N7851 P3267 BLD 31 -1 FP BE Pri
!#5 N7852 P3268 MEMBAR
!#5 N7853 P3269 PREFETCH 10 Int BE Pri
!#5 N7854 P3270 REPLACEMENT 16 Int BE Pri
!#5 N7855 P3271 REPLACEMENT 6 Int BE Sec
!#5 N7856 P3272 ST 2 0x280000b Int BE Pri
!#5 N7857 P3273 ST 30 0x4200003a FP BE Nuc
!#5 N7858 P3274 ST 16 0x4200003b FP BE Sec
!#5 N7859 P3275 MEMBAR
!#5 N7860 P3276 BLD 19 -1 FP BE Pri
!#5 N7861 P3277 MEMBAR
!#5 N7862 P3278 BLD 33 -1 FP BE Pri
!#5 N7863 P3279 MEMBAR
!#5 N7864 P3280 REPLACEMENT 13 Int BE Nuc
!#5 N7865 P3281 REPLACEMENT 32 Int BE Pri
!#5 N7866 P3282 REPLACEMENT 24 Int BE Pri
!#5 N7867 P3283 LD 8 -1 Int BE Pri
!#5 N7868 P3284 MEMBAR
!#5 N7869 P3285 BLD 17 -1 FP BE Pri
!#5 N7870 P3286 MEMBAR
!#5 N7871 P3287 ST 20 0x4200003c FP BE Sec
!#5 N7872 P3288 MEMBAR
!#5 N7873 P3289 BLD 33 -1 FP BE Pri
!#5 N7874 P3290 MEMBAR
!#5 N7875 P3291 IDC_FLIP 23 Int BE Pri
!#5 N7876 P3292 MEMBAR
!#5 N7877 P3293 BLD 10 -1 FP BE Pri
!#5 N7878 P3294 MEMBAR
!#5 N7879 P3295 REPLACEMENT 17 Int BE Pri
!#5 N7880 P3296 ST 1 0x4200003d FP BE Pri
!#5 N7881 P3297 ST 22 0x280000c Int BE Pri
!#5 N7882 P3298 REPLACEMENT 8 Int BE Pri
!#5 N7883 P3299 ST 7 0x280000d Int BE Pri
!#5 N7884 P3300 MEMBAR
!#5 N7885 P3301 BSTC 32 0x4200003e FP BE Pri
!#5 N7886 P3302 MEMBAR
!#5 N7887 P3303 REPLACEMENT 4 Int BE Pri
!#5 N7888 P3304 LD 13 -1 Int BE Nuc
!#5 N7889 P3305 LD 12 -1 FP BE Sec
!#5 N7890 P3306 REPLACEMENT 3 Int BE Pri
!#5 N7891 P3307 REPLACEMENT 8 Int BE Pri
!#5 N7892 P3308 REPLACEMENT 12 Int BE Pri
!#5 N7893 P3309 ST 23 0x4200003f FP BE Pri
!#5 N7894 P3310 REPLACEMENT 17 Int BE Sec
!#5 N7895 P3311 LD 28 -1 Int BE Sec
!#5 N7896 P3312 LD 13 -1 Int BE Pri
!#5 N7897 P3313 ST 24 0x280000e Int BE Pri
!#5 N7898 P3314 REPLACEMENT 22 Int BE Nuc
!#5 N7899 P3315 REPLACEMENT 4 Int BE Nuc
!#5 N7900 P3316 LD 2 -1 Int BE Pri
!#5 N7901 P3317 MEMBAR
!#5 N7902 P3318 BLD 11 -1 FP BE Pri
!#5 N7903 P3318 BLD 12 -1 FP BE Pri
!#A N7902 N7903
!#5 N7904 P3318 BLD 13 -1 FP BE Pri
!#5 N7905 P3319 MEMBAR
!#5 N7906 P3320 BLD 0 -1 FP BE Pri
!#5 N7907 P3320 BLD 1 -1 FP BE Pri
!#A N7906 N7907
!#5 N7908 P3320 BLD 2 -1 FP BE Pri
!#5 N7909 P3320 BLD 3 -1 FP BE Pri
!#5 N7910 P3320 BLD 4 -1 FP BE Pri
!#5 N7911 P3321 MEMBAR
!#5 N7912 P3322 BLD 0 -1 FP BE Pri
!#5 N7913 P3322 BLD 1 -1 FP BE Pri
!#A N7912 N7913
!#5 N7914 P3322 BLD 2 -1 FP BE Pri
!#5 N7915 P3322 BLD 3 -1 FP BE Pri
!#5 N7916 P3322 BLD 4 -1 FP BE Pri
!#5 N7917 P3323 MEMBAR
!#5 N7918 P3324 BST 11 0x42000040 FP BE Sec
!#5 N7919 P3324 BST 12 0x42000041 FP BE Sec
!#A N7918 N7919
!#5 N7920 P3324 BST 13 0x42000042 FP BE Sec
!#5 N7921 P3325 MEMBAR
!#5 N7922 P3326 REPLACEMENT 11 Int BE Pri
!#5 N7923 P3327 LD 1 -1 FP BE Pri
!#5 N7924 P3328 IDC_FLIP 5 Int BE Pri
!#5 N7925 P3329 MEMBAR
!#5 N7926 P3330 BST 11 0x42000043 FP BE Pri
!#5 N7927 P3330 BST 12 0x42000044 FP BE Pri
!#A N7926 N7927
!#5 N7928 P3330 BST 13 0x42000045 FP BE Pri
!#5 N7929 P3331 MEMBAR
!#5 N7930 P3332 ST 8 0x42000046 FP BE Pri
!#5 N7931 P3333 MEMBAR
!#5 N7932 P3334 BLD 5 -1 FP BE Pri
!#5 N7933 P3334 BLD 6 -1 FP BE Pri
!#5 N7934 P3335 MEMBAR
!#5 N7935 P3336 BLD 19 -1 FP BE Pri
!#5 N7936 P3337 MEMBAR
!#5 N7937 P3338 LD 5 -1 FP BE Pri
!#5 N7938 P3339 MEMBAR
!#5 N7939 P3340 BST 21 0x42000047 FP BE Pri
!#5 N7940 P3340 BST 22 0x42000048 FP BE Pri
!#A N7939 N7940
!#5 N7941 P3340 BST 23 0x42000049 FP BE Pri
!#5 N7942 P3341 MEMBAR
!#5 N7943 P3342 BST 11 0x4200004a FP BE Pri
!#5 N7944 P3342 BST 12 0x4200004b FP BE Pri
!#A N7943 N7944
!#5 N7945 P3342 BST 13 0x4200004c FP BE Pri
!#5 N7946 P3343 MEMBAR
!#5 N7947 P3344 REPLACEMENT 6 Int BE Pri
!#5 N7948 P3345 ST 26 0x4200004d FP BE Pri
!#5 N7949 P3346 MEMBAR
!#5 N7950 P3347 BSTC 5 0x4200004e FP BE Sec
!#5 N7951 P3347 BSTC 6 0x4200004f FP BE Sec
!#5 N7952 P3348 MEMBAR
!#5 N7953 P3349 BLD 33 -1 FP BE Pri
!#5 N7954 P3350 MEMBAR
!#5 N7955 P3351 REPLACEMENT 29 Int BE Pri
!#5 N7956 P3352 MEMBAR
!#5 N7957 P3353 BST 32 0x42000050 FP BE Pri
!#5 N7958 P3354 MEMBAR
!#5 N7959 P3355 PREFETCH 22 Int BE Pri
!#5 N7960 P3356 REPLACEMENT 12 Int BE Pri
!#5 N7961 P3357 MEMBAR
!#5 N7962 P3358 BST 11 0x42000051 FP BE Pri
!#5 N7963 P3358 BST 12 0x42000052 FP BE Pri
!#A N7962 N7963
!#5 N7964 P3358 BST 13 0x42000053 FP BE Pri
!#5 N7965 P3359 MEMBAR
!#5 N7966 P3360 ST 22 0x42000054 FP BE Pri
!#5 N7967 P3361 REPLACEMENT 15 Int BE Pri
!#5 N7968 P3362 ST 15 0x280000f Int BE Pri
!#5 N7969 P3363 MEMBAR
!#5 N7970 P3364 BLD 33 -1 FP BE Pri
!#5 N7971 P3365 MEMBAR
!#5 N7972 P3366 ST 10 0x2800010 Int LE Pri
!#5 N7973 P3367 REPLACEMENT 18 Int BE Pri
!#5 N7974 P3368 REPLACEMENT 4 Int BE Pri
!#5 N7975 P3369 LD 0 -1 FP BE Sec
!#5 N7976 P3370 ST 28 0x42000055 FP BE Pri
!#5 N7977 P3371 MEMBAR
!#5 N7978 P3372 BST 8 0x42000056 FP BE Pri
!#5 N7979 P3372 BST 9 0x42000057 FP BE Pri
!#5 N7980 P3373 MEMBAR
!#5 N7981 P3374 BLD 21 -1 FP BE Pri
!#5 N7982 P3374 BLD 22 -1 FP BE Pri
!#A N7981 N7982
!#5 N7983 P3374 BLD 23 -1 FP BE Pri
!#5 N7984 P3375 MEMBAR
!#5 N7985 P3376 ST 11 0x42000058 FP BE Pri
!#5 N7986 P3377 REPLACEMENT 4 Int BE Pri
!#5 N7987 P3378 MEMBAR
!#5 N7988 P3379 BST 30 0x42000059 FP BE Pri
!#5 N7989 P3380 MEMBAR
!#5 N7990 P3381 BST 28 0x4200005a FP BE Pri
!#5 N7991 P3382 MEMBAR
!#5 N7992 P3383 REPLACEMENT 22 Int BE Pri
!#5 N7993 P3384 REPLACEMENT 20 Int BE Pri
!#5 N7994 P3385 MEMBAR
!#5 N7995 P3386 BST 14 0x4200005b FP BE Pri
!#5 N7996 P3387 MEMBAR
!#5 N7997 P3388 BLD 5 -1 FP BE Pri
!#5 N7998 P3388 BLD 6 -1 FP BE Pri
!#5 N7999 P3389 MEMBAR
!#5 N8000 P3390 ST 11 0x2800011 Int BE Pri
!#5 N8001 P3391 MEMBAR
!#5 N8002 P3392 BLD 0 -1 FP BE Pri
!#5 N8003 P3392 BLD 1 -1 FP BE Pri
!#A N8002 N8003
!#5 N8004 P3392 BLD 2 -1 FP BE Pri
!#5 N8005 P3392 BLD 3 -1 FP BE Pri
!#5 N8006 P3392 BLD 4 -1 FP BE Pri
!#5 N8007 P3393 MEMBAR
!#5 N8008 P3394 ST 7 0x2800012 Int BE Nuc
!#5 N8009 P3395 MEMBAR
!#5 N8010 P3396 BLD 14 -1 FP BE Pri
!#5 N8011 P3397 MEMBAR
!#5 N8012 P3398 LD 19 -1 FP BE Pri
!#5 N8013 P3399 MEMBAR
!#5 N8014 P3400 BLD 15 -1 FP BE Pri
!#5 N8015 P3401 MEMBAR
!#5 N8016 P3402 REPLACEMENT 11 Int BE Pri
!#5 N8017 P3403 ST 32 0x4200005c FP BE Pri
!#5 N8018 P3404 LD 11 -1 Int BE Pri
!#5 N8019 P3405 ST 12 0x2800013 Int BE Nuc
!#5 N8020 P3406 ST 15 0x4200005d FP BE Pri
!#5 N8021 P3407 REPLACEMENT 22 Int BE Pri
!#5 N8022 P3408 REPLACEMENT 29 Int BE Sec
!#5 N8023 P3409 ST 3 0x4200005e FP BE Pri
!#5 N8024 P3410 LD 14 -1 Int BE Pri
!#5 N8025 P3411 ST 5 0x2800014 Int BE Pri
!#5 N8026 P3412 REPLACEMENT 20 Int BE Sec
!#5 N8027 P3413 ST 6 0x4200005f FP BE Nuc
!#5 N8028 P3414 REPLACEMENT 4 Int BE Pri
!#5 N8029 P3415 MEMBAR
!#5 N8030 P3416 BST 26 0x42000060 FP BE Pri
!#5 N8031 P3416 BST 27 0x42000061 FP BE Pri
!#5 N8032 P3417 MEMBAR
!#5 N8033 P3418 BST 0 0x42000062 FP BE Pri
!#5 N8034 P3418 BST 1 0x42000063 FP BE Pri
!#A N8033 N8034
!#5 N8035 P3418 BST 2 0x42000064 FP BE Pri
!#5 N8036 P3418 BST 3 0x42000065 FP BE Pri
!#5 N8037 P3418 BST 4 0x42000066 FP BE Pri
!#5 N8038 P3419 MEMBAR
!#5 N8039 P3420 REPLACEMENT 27 Int BE Pri
!#5 N8040 P3421 MEMBAR
!#5 N8041 P3422 BST 30 0x42000067 FP BE Pri
!#5 N8042 P3423 MEMBAR
!#5 N8043 P3424 REPLACEMENT 6 Int BE Pri
!#5 N8044 P3425 MEMBAR
!#5 N8045 P3426 BSTC 30 0x42000068 FP BE Pri
!#5 N8046 P3427 MEMBAR
!#5 N8047 P3428 REPLACEMENT 18 Int BE Pri
!#5 N8048 P3429 ST 16 0x2800015 Int BE Pri
!#5 N8049 P3430 MEMBAR
!#5 N8050 P3431 BST 5 0x42000069 FP BE Pri
!#5 N8051 P3431 BST 6 0x4200006a FP BE Pri
!#5 N8052 P3432 MEMBAR
!#5 N8053 P3433 REPLACEMENT 30 Int BE Pri
!#5 N8054 P3434 REPLACEMENT 32 Int BE Pri
!#5 N8055 P3435 ST 28 0x2800016 Int BE Pri
!#5 N8056 P3436 REPLACEMENT 29 Int BE Pri
!#5 N8057 P3437 IDC_FLIP 33 Int BE Pri
!#5 N8058 P3438 IDC_FLIP 25 Int BE Pri
!#5 N8059 P3439 IDC_FLIP 25 Int BE Pri
!#5 N8060 P3440 REPLACEMENT 20 Int BE Pri
!#5 N8061 P3441 LD 23 -1 FP BE Pri
!#5 N8062 P3442 IDC_FLIP 18 Int BE Pri
!#5 N8063 P3443 ST 6 0x2800017 Int BE Pri
!#5 N8064 P3444 MEMBAR
!#5 N8065 P3445 BST 0 0x4200006b FP BE Pri
!#5 N8066 P3445 BST 1 0x4200006c FP BE Pri
!#A N8065 N8066
!#5 N8067 P3445 BST 2 0x4200006d FP BE Pri
!#5 N8068 P3445 BST 3 0x4200006e FP BE Pri
!#5 N8069 P3445 BST 4 0x4200006f FP BE Pri
!#5 N8070 P3446 MEMBAR
!#5 N8071 P3447 REPLACEMENT 2 Int BE Pri
!#5 N8072 P3448 REPLACEMENT 18 Int BE Pri
!#5 N8073 P3449 REPLACEMENT 16 Int BE Pri
!#5 N8074 P3450 REPLACEMENT 18 Int BE Pri
!#5 N8075 P3451 ST 1 0x2800018 Int BE Pri
!#5 N8076 P3452 ST 30 0x42000070 FP BE Pri
!#5 N8077 P3453 ST 5 0x2800019 Int LE Pri
!#5 N8078 P3454 ST 26 0x280001a Int BE Pri
!#5 N8079 P3455 REPLACEMENT 26 Int BE Pri
!#5 N8080 P3456 MEMBAR
!#5 N8081 P3457 BST 21 0x42000071 FP BE Pri
!#5 N8082 P3457 BST 22 0x42000072 FP BE Pri
!#A N8081 N8082
!#5 N8083 P3457 BST 23 0x42000073 FP BE Pri
!#5 N8084 P3458 MEMBAR
!#5 N8085 P3459 IDC_FLIP 10 Int BE Pri
!#5 N8086 P3460 MEMBAR
!#5 N8087 P3461 BLD 26 -1 FP BE Pri
!#5 N8088 P3461 BLD 27 -1 FP BE Pri
!#5 N8089 P3462 MEMBAR
!#5 N8090 P3463 ST 11 0x280001b Int BE Pri
!#5 N8091 P3464 REPLACEMENT 29 Int BE Pri
!#5 N8092 P3465 MEMBAR
!#5 N8093 P3466 BST 10 0x42000074 FP BE Pri
!#5 N8094 P3467 MEMBAR
!#5 N8095 P3468 LD 27 -1 FP BE Pri
!#5 N8096 P3469 REPLACEMENT 0 Int BE Pri
!#5 N8097 P3470 ST 14 0x42000075 FP BE Pri
!#5 N8098 P3471 MEMBAR
!#5 N8099 P3472 BLD 30 -1 FP BE Sec
!#5 N8100 P3473 MEMBAR
!#5 N8101 P3474 REPLACEMENT 29 Int BE Sec
!#5 N8102 P3475 MEMBAR
!#5 N8103 P3476 BST 24 0x42000076 FP BE Pri
!#5 N8104 P3476 BST 25 0x42000077 FP BE Pri
!#5 N8105 P3477 MEMBAR
!#5 N8106 P3478 LD 26 -1 FP BE Pri
!#5 N8107 P3479 MEMBAR
!#5 N8108 P3480 BST 24 0x42000078 FP BE Pri
!#5 N8109 P3480 BST 25 0x42000079 FP BE Pri
!#5 N8110 P3481 MEMBAR
!#5 N8111 P3482 REPLACEMENT 10 Int BE Pri
!#5 N8112 P3483 REPLACEMENT 14 Int BE Pri
!#5 N8113 P3484 LD 2 -1 Int BE Pri
!#5 N8114 P3485 MEMBAR
!#5 N8115 P3486 BST 18 0x4200007a FP BE Pri
!#5 N8116 P3487 MEMBAR
!#5 N8117 P3488 ST 7 0x280001c Int BE Pri
!#5 N8118 P3489 LD 11 -1 Int BE Pri
!#5 N8119 P3490 ST 7 0x4200007b FP BE Nuc
!#5 N8120 P3491 LD 11 -1 FP BE Pri
!#5 N8121 P3492 REPLACEMENT 32 Int BE Pri
!#5 N8122 P3493 REPLACEMENT 6 Int BE Pri
!#5 N8123 P3494 LD 0 -1 Int BE Pri
!#5 N8124 P3495 MEMBAR
!#5 N8125 P3496 BST 0 0x4200007c FP BE Pri
!#5 N8126 P3496 BST 1 0x4200007d FP BE Pri
!#A N8125 N8126
!#5 N8127 P3496 BST 2 0x4200007e FP BE Pri
!#5 N8128 P3496 BST 3 0x4200007f FP BE Pri
!#5 N8129 P3496 BST 4 0x42000080 FP BE Pri
!#5 N8130 P3497 MEMBAR
!#5 N8131 P3498 LD 28 -1 FP BE Pri
!#5 N8132 P3499 MEMBAR
!#5 N8133 P3500 BST 7 0x42000081 FP BE Pri
!#5 N8134 P3501 MEMBAR
!#5 N8135 P3502 LD 3 -1 Int BE Pri
!#5 N8136 P3503 ST 18 0x280001d Int BE Pri
!#5 N8137 P3504 REPLACEMENT 26 Int BE Pri
!#5 N8138 P3505 ST 30 0x42000082 FP BE Pri
!#5 N8139 P3506 PREFETCH 19 Int BE Pri
!#5 N8140 P3507 LD 13 -1 FP BE Pri
!#5 N8141 P3508 MEMBAR
!#5 N8142 P3509 BLD 28 -1 FP BE Pri
!#5 N8143 P3510 MEMBAR
!#5 N8144 P3511 LD 5 -1 Int BE Sec
!#5 N8145 P3512 REPLACEMENT 23 Int BE Pri
!#5 N8146 P3513 MEMBAR
!#5 N8147 P3514 BLD 21 -1 FP BE Pri
!#5 N8148 P3514 BLD 22 -1 FP BE Pri
!#A N8147 N8148
!#5 N8149 P3514 BLD 23 -1 FP BE Pri
!#5 N8150 P3515 MEMBAR
!#5 N8151 P3516 REPLACEMENT 17 Int BE Pri
!#5 N8152 P3517 IDC_FLIP 25 Int BE Pri
!#5 N8153 P3518 LD 10 -1 Int BE Pri
!#5 N8154 P3519 MEMBAR
!#5 N8155 P3520 BLD 30 -1 FP BE Pri
!#5 N8156 P3521 MEMBAR
!#5 N8157 P3522 BST 26 0x42000083 FP BE Pri
!#5 N8158 P3522 BST 27 0x42000084 FP BE Pri
!#5 N8159 P3523 MEMBAR
!#5 N8160 P3524 ST 7 0x42000085 FP BE Nuc
!#5 N8161 P3525 REPLACEMENT 11 Int BE Pri
!#5 N8162 P3526 ST 18 0x280001e Int BE Pri
!#5 N8163 P3527 MEMBAR
!#5 N8164 P3528 BLD 0 -1 FP BE Pri
!#5 N8165 P3528 BLD 1 -1 FP BE Pri
!#A N8164 N8165
!#5 N8166 P3528 BLD 2 -1 FP BE Pri
!#5 N8167 P3528 BLD 3 -1 FP BE Pri
!#5 N8168 P3528 BLD 4 -1 FP BE Pri
!#5 N8169 P3529 MEMBAR
!#5 N8170 P3530 LD 30 -1 FP BE Pri
!#5 N8171 P3531 MEMBAR
!#5 N8172 P3532 BST 11 0x42000086 FP BE Pri
!#5 N8173 P3532 BST 12 0x42000087 FP BE Pri
!#A N8172 N8173
!#5 N8174 P3532 BST 13 0x42000088 FP BE Pri
!#5 N8175 P3533 MEMBAR
!#5 N8176 P3534 BLD 33 -1 FP BE Pri
!#5 N8177 P3535 MEMBAR
!#5 N8178 P3536 IDC_FLIP 23 Int BE Pri
!#5 N8179 P3537 REPLACEMENT 30 Int BE Pri
!#5 N8180 P3538 MEMBAR
!#5 N8181 P3539 BST 7 0x42000089 FP BE Pri
!#5 N8182 P3540 MEMBAR
!#5 N8183 P3541 BST 24 0x4200008a FP BE Sec
!#5 N8184 P3541 BST 25 0x4200008b FP BE Sec
!#5 N8185 P3542 MEMBAR
!#5 N8186 P3543 REPLACEMENT 25 Int BE Pri
!#5 N8187 P3544 REPLACEMENT 24 Int BE Sec
!#5 N8188 P3545 REPLACEMENT 12 Int BE Sec
!#5 N8189 P3546 ST 33 0x280001f Int BE Nuc
!#5 N8190 P3547 MEMBAR
!#5 N8191 P3548 BST 7 0x4200008c FP BE Pri
!#5 N8192 P3549 MEMBAR
!#5 N8193 P3550 ST 1 0x4200008d FP BE Pri
!#5 N8194 P3551 MEMBAR
!#5 N8195 P3552 BLD 26 -1 FP BE Pri
!#5 N8196 P3552 BLD 27 -1 FP BE Pri
!#5 N8197 P3553 MEMBAR
!#5 N8198 P3554 ST 0 0x4200008e FP BE Sec
!#5 N8199 P3555 LD 29 -1 FP BE Pri
!#5 N8200 P3556 LD 17 -1 FP BE Pri
!#5 N8201 P3557 REPLACEMENT 15 Int BE Sec
!#5 N8202 P3558 REPLACEMENT 7 Int BE Pri
!#5 N8203 P3559 MEMBAR
!#5 N8204 P3560 BST 26 0x4200008f FP BE Pri
!#5 N8205 P3560 BST 27 0x42000090 FP BE Pri
!#5 N8206 P3561 MEMBAR
!#5 N8207 P3562 BST 8 0x42000091 FP BE Pri
!#5 N8208 P3562 BST 9 0x42000092 FP BE Pri
!#5 N8209 P3563 MEMBAR
!#5 N8210 P3564 BLD 7 -1 FP BE Sec
!#5 N8211 P3565 MEMBAR
!#5 N8212 P3566 BLD 0 -1 FP BE Sec
!#5 N8213 P3566 BLD 1 -1 FP BE Sec
!#A N8212 N8213
!#5 N8214 P3566 BLD 2 -1 FP BE Sec
!#5 N8215 P3566 BLD 3 -1 FP BE Sec
!#5 N8216 P3566 BLD 4 -1 FP BE Sec
!#5 N8217 P3567 MEMBAR
!#5 N8218 P3568 BLD 30 -1 FP BE Sec
!#5 N8219 P3569 MEMBAR
!#5 N8220 P3570 BST 26 0x42000093 FP BE Pri
!#5 N8221 P3570 BST 27 0x42000094 FP BE Pri
!#5 N8222 P3571 MEMBAR
!#5 N8223 P3572 REPLACEMENT 3 Int BE Pri
!#5 N8224 P3573 REPLACEMENT 2 Int BE Sec
!#5 N8225 P3574 REPLACEMENT 27 Int BE Sec
!#5 N8226 P3575 REPLACEMENT 7 Int BE Sec
!#5 N8227 P3576 LD 23 -1 FP BE Pri
!#5 N8228 P3577 REPLACEMENT 29 Int BE Nuc
!#5 N8229 P3578 LD 3 -1 FP BE Pri
!#5 N8230 P3579 MEMBAR
!#5 N8231 P3580 BSTC 26 0x42000095 FP BE Pri
!#5 N8232 P3580 BSTC 27 0x42000096 FP BE Pri
!#5 N8233 P3581 MEMBAR
!#5 N8234 P3582 REPLACEMENT 16 Int BE Pri
!#5 N8235 P3583 MEMBAR
!#5 N8236 P3584 BLD 21 -1 FP BE Pri
!#5 N8237 P3584 BLD 22 -1 FP BE Pri
!#A N8236 N8237
!#5 N8238 P3584 BLD 23 -1 FP BE Pri
!#5 N8239 P3585 MEMBAR
!#5 N8240 P3586 ST 16 0x2800020 Int BE Nuc
!#5 N8241 P3587 LD 23 -1 FP BE Pri
!#5 N8242 P3588 MEMBAR
!#5 N8243 P3589 BLD 0 -1 FP BE Pri
!#5 N8244 P3589 BLD 1 -1 FP BE Pri
!#A N8243 N8244
!#5 N8245 P3589 BLD 2 -1 FP BE Pri
!#5 N8246 P3589 BLD 3 -1 FP BE Pri
!#5 N8247 P3589 BLD 4 -1 FP BE Pri
!#5 N8248 P3590 MEMBAR
!#5 N8249 P3591 BLD 20 -1 FP BE Pri
!#5 N8250 P3592 MEMBAR
!#5 N8251 P3593 LD 3 -1 FP BE Pri
!#5 N8252 P3594 PREFETCH 19 Int BE Pri
!#5 N8253 P3595 ST 15 0x2800021 Int BE Pri
!#5 N8254 P3596 MEMBAR
!#5 N8255 P3597 BSTC 11 0x42000097 FP BE Pri
!#5 N8256 P3597 BSTC 12 0x42000098 FP BE Pri
!#A N8255 N8256
!#5 N8257 P3597 BSTC 13 0x42000099 FP BE Pri
!#5 N8258 P3598 MEMBAR
!#5 N8259 P3599 LD 31 -1 FP BE Pri
!#5 N8260 P3600 ST 16 0x2800022 Int BE Sec
!#5 N8261 P3601 REPLACEMENT 2 Int BE Pri
!#5 N8262 P3602 LD 31 -1 FP BE Nuc
!#5 N8263 P3603 IDC_FLIP 0 Int BE Pri
!#5 N8264 P3604 REPLACEMENT 27 Int BE Sec
!#5 N8265 P3605 MEMBAR
!#5 N8266 P3606 BLD 24 -1 FP BE Pri
!#5 N8267 P3606 BLD 25 -1 FP BE Pri
!#5 N8268 P3607 MEMBAR
!#5 N8269 P3608 ST 7 0x4200009a FP BE Pri
!#5 N8270 P3609 LD 17 -1 Int BE Sec
!#5 N8271 P3610 MEMBAR
!#5 N8272 P3611 BST 24 0x4200009b FP BE Pri
!#5 N8273 P3611 BST 25 0x4200009c FP BE Pri
!#5 N8274 P3612 MEMBAR
!#5 N8275 P3613 ST 33 0x2800023 Int BE Sec
!#5 N8276 P3614 REPLACEMENT 9 Int BE Nuc
!#5 N8277 P3615 MEMBAR
!#5 N8278 P3616 BST 0 0x4200009d FP BE Pri
!#5 N8279 P3616 BST 1 0x4200009e FP BE Pri
!#A N8278 N8279
!#5 N8280 P3616 BST 2 0x4200009f FP BE Pri
!#5 N8281 P3616 BST 3 0x420000a0 FP BE Pri
!#5 N8282 P3616 BST 4 0x420000a1 FP BE Pri
!#5 N8283 P3617 MEMBAR
!#5 N8284 P3618 BST 0 0x420000a2 FP BE Sec
!#5 N8285 P3618 BST 1 0x420000a3 FP BE Sec
!#A N8284 N8285
!#5 N8286 P3618 BST 2 0x420000a4 FP BE Sec
!#5 N8287 P3618 BST 3 0x420000a5 FP BE Sec
!#5 N8288 P3618 BST 4 0x420000a6 FP BE Sec
!#5 N8289 P3619 MEMBAR
!#5 N8290 P3620 BLD 17 -1 FP BE Pri
!#5 N8291 P3621 MEMBAR
!#5 N8292 P3622 BST 0 0x420000a7 FP BE Pri
!#5 N8293 P3622 BST 1 0x420000a8 FP BE Pri
!#A N8292 N8293
!#5 N8294 P3622 BST 2 0x420000a9 FP BE Pri
!#5 N8295 P3622 BST 3 0x420000aa FP BE Pri
!#5 N8296 P3622 BST 4 0x420000ab FP BE Pri
!#5 N8297 P3623 MEMBAR
!#5 N8298 P3624 LD 19 -1 Int BE Pri
!#5 N8299 P3625 ST 14 0x2800024 Int BE Pri
!#5 N8300 P3626 MEMBAR
!#5 N8301 P3627 BST 24 0x420000ac FP BE Pri
!#5 N8302 P3627 BST 25 0x420000ad FP BE Pri
!#5 N8303 P3628 MEMBAR
!#5 N8304 P3629 BLD 8 -1 FP BE Pri
!#5 N8305 P3629 BLD 9 -1 FP BE Pri
!#5 N8306 P3630 MEMBAR
!#5 N8307 P3631 ST 24 0x2800025 Int BE Pri
!#5 N8308 P3632 REPLACEMENT 32 Int BE Pri
!#5 N8309 P3633 REPLACEMENT 14 Int BE Pri
!#5 N8310 P3634 REPLACEMENT 18 Int BE Pri
!#5 N8311 P3635 MEMBAR
!#5 N8312 P3636 BSTC 16 0x420000ae FP BE Pri
!#5 N8313 P3637 MEMBAR
!#5 N8314 P3638 REPLACEMENT 20 Int BE Pri
!#5 N8315 P3639 ST 32 0x2800026 Int BE Pri
!#5 N8316 P3640 MEMBAR
!#5 N8317 P3641 BST 28 0x420000af FP BE Pri
!#5 N8318 P3642 MEMBAR
!#5 N8319 P3643 ST 4 0x2800027 Int BE Nuc
!#5 N8320 P3644 LD 5 -1 FP BE Pri
!#5 N8321 P3645 ST 9 0x2800028 Int BE Nuc
!#5 N8322 P3646 MEMBAR
!#5 N8323 P3647 BST 5 0x420000b0 FP BE Pri
!#5 N8324 P3647 BST 6 0x420000b1 FP BE Pri
!#5 N8325 P3648 MEMBAR
!#5 N8326 P3649 REPLACEMENT 30 Int BE Pri
!#5 N8327 P3650 REPLACEMENT 15 Int BE Pri
!#5 N8328 P3651 REPLACEMENT 10 Int BE Pri
!#5 N8329 P3652 ST 20 0x420000b2 FP BE Pri
!#5 N8330 P3653 MEMBAR
!#5 N8331 P3654 BLD 0 -1 FP BE Pri
!#5 N8332 P3654 BLD 1 -1 FP BE Pri
!#A N8331 N8332
!#5 N8333 P3654 BLD 2 -1 FP BE Pri
!#5 N8334 P3654 BLD 3 -1 FP BE Pri
!#5 N8335 P3654 BLD 4 -1 FP BE Pri
!#5 N8336 P3655 MEMBAR
!#5 N8337 P3656 LD 2 -1 FP BE Pri
!#5 N8338 P3657 LD 10 -1 FP BE Pri
!#5 N8339 P3658 MEMBAR
!#5 N8340 P3659 BLD 7 -1 FP BE Pri
!#5 N8341 P3660 MEMBAR
!#5 N8342 P3661 BLD 11 -1 FP BE Sec
!#5 N8343 P3661 BLD 12 -1 FP BE Sec
!#A N8342 N8343
!#5 N8344 P3661 BLD 13 -1 FP BE Sec
!#5 N8345 P3662 MEMBAR
!#5 N8346 P3663 REPLACEMENT 20 Int BE Pri
!#5 N8347 P3664 MEMBAR
!#5 N8348 P3665 BST 16 0x420000b3 FP BE Pri
!#5 N8349 P3666 MEMBAR
!#5 N8350 P3667 BLD 5 -1 FP BE Pri
!#5 N8351 P3667 BLD 6 -1 FP BE Pri
!#5 N8352 P3668 MEMBAR
!#5 N8353 P3669 LD 3 -1 FP BE Pri
!#5 N8354 P3670 MEMBAR
!#5 N8355 P3671 BLD 21 -1 FP BE Sec
!#5 N8356 P3671 BLD 22 -1 FP BE Sec
!#A N8355 N8356
!#5 N8357 P3671 BLD 23 -1 FP BE Sec
!#5 N8358 P3672 MEMBAR
!#5 N8359 P3673 IDC_FLIP 30 Int BE Pri
!#5 N8360 P3674 MEMBAR
!#5 N8361 P3675 BLD 14 -1 FP BE Pri
!#5 N8362 P3676 MEMBAR
!#5 N8363 P3677 ST 29 0x420000b4 FP BE Pri
!#5 N8364 P3678 ST 17 0x420000b5 FP BE Pri
!#5 N8365 P3679 MEMBAR
!#5 N8366 P3680 BLD 17 -1 FP BE Pri
!#5 N8367 P3681 MEMBAR
!#5 N8368 P3682 LD 2 -1 Int BE Pri
!#5 N8369 P3683 REPLACEMENT 26 Int BE Pri
!#5 N8370 P3684 LD 25 -1 Int BE Sec
!#5 N8371 P3685 REPLACEMENT 24 Int BE Pri
!#5 N8372 P3686 ST 17 0x2800029 Int BE Nuc
!#5 N8373 P3687 REPLACEMENT 4 Int BE Pri
!#5 N8374 P3688 ST 18 0x420000b6 FP BE Pri
!#5 N8375 P3689 ST 29 0x280002a Int LE Pri
!#5 N8376 P3690 MEMBAR
!#5 N8377 P3691 BST 0 0x420000b7 FP BE Pri
!#5 N8378 P3691 BST 1 0x420000b8 FP BE Pri
!#A N8377 N8378
!#5 N8379 P3691 BST 2 0x420000b9 FP BE Pri
!#5 N8380 P3691 BST 3 0x420000ba FP BE Pri
!#5 N8381 P3691 BST 4 0x420000bb FP BE Pri
!#5 N8382 P3692 MEMBAR
!#5 N8383 P3693 ST 29 0x280002b Int BE Pri
!#5 N8384 P3694 MEMBAR
!#5 N8385 P3695 BLD 11 -1 FP BE Sec
!#5 N8386 P3695 BLD 12 -1 FP BE Sec
!#A N8385 N8386
!#5 N8387 P3695 BLD 13 -1 FP BE Sec
!#5 N8388 P3696 MEMBAR
!#5 N8389 P3697 LD 7 -1 FP BE Sec
!#5 N8390 P3698 LD 22 -1 FP BE Sec
!#5 N8391 P3699 MEMBAR
!#5 N8392 P3700 BLD 10 -1 FP BE Sec
!#5 N8393 P3701 MEMBAR
!#5 N8394 P3702 ST 26 0x420000bc FP BE Pri
!#5 N8395 P3703 REPLACEMENT 32 Int BE Pri
!#5 N8396 P3704 MEMBAR
!#5 N8397 P3705 BST 30 0x420000bd FP BE Sec
!#5 N8398 P3706 MEMBAR
!#5 N8399 P3707 LD 4 -1 FP BE Pri
!#5 N8400 P3708 REPLACEMENT 18 Int BE Pri
!#5 N8401 P3709 LD 25 -1 FP BE Pri
!#5 N8402 P3710 MEMBAR
!#5 N8403 P3711 BLD 16 -1 FP BE Sec
!#5 N8404 P3712 MEMBAR
!#5 N8405 P3713 BLD 21 -1 FP BE Sec
!#5 N8406 P3713 BLD 22 -1 FP BE Sec
!#A N8405 N8406
!#5 N8407 P3713 BLD 23 -1 FP BE Sec
!#5 N8408 P3714 MEMBAR
!#5 N8409 P3715 BST 28 0x420000be FP BE Pri
!#5 N8410 P3716 MEMBAR
!#5 N8411 P3717 BLD 7 -1 FP BE Pri
!#5 N8412 P3718 MEMBAR
!#5 N8413 P3719 BST 31 0x420000bf FP BE Pri
!#5 N8414 P3720 MEMBAR
!#5 N8415 P3721 BLD 5 -1 FP BE Pri
!#5 N8416 P3721 BLD 6 -1 FP BE Pri
!#5 N8417 P3722 MEMBAR
!#5 N8418 P3723 REPLACEMENT 23 Int BE Pri
!#5 N8419 P3724 MEMBAR
!#5 N8420 P3725 BSTC 29 0x420000c0 FP BE Pri
!#5 N8421 P3726 MEMBAR
!#5 N8422 P3727 REPLACEMENT 27 Int BE Pri
!#5 N8423 P3728 MEMBAR
!#5 N8424 P3729 BSTC 16 0x420000c1 FP BE Pri
!#5 N8425 P3730 MEMBAR
!#5 N8426 P3731 BST 8 0x420000c2 FP BE Pri
!#5 N8427 P3731 BST 9 0x420000c3 FP BE Pri
!#5 N8428 P3732 MEMBAR
!#5 N8429 P3733 BST 26 0x420000c4 FP BE Pri
!#5 N8430 P3733 BST 27 0x420000c5 FP BE Pri
!#5 N8431 P3734 MEMBAR
!#5 N8432 P3735 BST 18 0x420000c6 FP BE Pri
!#5 N8433 P3736 MEMBAR
!#5 N8434 P3737 REPLACEMENT 0 Int BE Nuc
!#5 N8435 P3738 REPLACEMENT 17 Int BE Pri
!#5 N8436 P3739 LD 8 -1 FP BE Sec
!#5 N8437 P3740 REPLACEMENT 0 Int BE Pri
!#5 N8438 P3741 MEMBAR
!#5 N8439 P3742 BST 8 0x420000c7 FP BE Pri
!#5 N8440 P3742 BST 9 0x420000c8 FP BE Pri
!#5 N8441 P3743 MEMBAR
!#5 N8442 P3744 REPLACEMENT 32 Int BE Nuc
!#5 N8443 P3745 REPLACEMENT 20 Int BE Pri
!#5 N8444 P3746 MEMBAR
!#5 N8445 P3747 REPLACEMENT 6 Int BE Sec
!#5 N8446 P3748 MEMBAR
!#5 N8447 P3749 BLD 11 -1 FP BE Pri
!#5 N8448 P3749 BLD 12 -1 FP BE Pri
!#A N8447 N8448
!#5 N8449 P3749 BLD 13 -1 FP BE Pri
!#5 N8450 P3750 MEMBAR
!#5 N8451 P3751 REPLACEMENT 27 Int BE Pri
!#5 N8452 P3752 IDC_FLIP 29 Int BE Pri
!#5 N8453 P3753 MEMBAR
!#5 N8454 P3754 BLD 0 -1 FP BE Pri
!#5 N8455 P3754 BLD 1 -1 FP BE Pri
!#A N8454 N8455
!#5 N8456 P3754 BLD 2 -1 FP BE Pri
!#5 N8457 P3754 BLD 3 -1 FP BE Pri
!#5 N8458 P3754 BLD 4 -1 FP BE Pri
!#5 N8459 P3755 MEMBAR
!#5 N8460 P3756 BLD 16 -1 FP BE Pri
!#5 N8461 P3757 MEMBAR
!#5 N8462 P3758 REPLACEMENT 14 Int BE Pri
!#5 N8463 P3759 REPLACEMENT 17 Int BE Pri
!#5 N8464 P3760 LD 14 -1 FP BE Pri
!#5 N8465 P3761 MEMBAR
!#5 N8466 P3762 BSTC 7 0x420000c9 FP BE Pri
!#5 N8467 P3763 MEMBAR
!#5 N8468 P3764 BST 24 0x420000ca FP BE Pri
!#5 N8469 P3764 BST 25 0x420000cb FP BE Pri
!#5 N8470 P3765 MEMBAR
!#5 N8471 P3766 LD 7 -1 Int LE Sec
!#5 N8472 P3767 MEMBAR
!#5 N8473 P3768 BLD 26 -1 FP BE Pri
!#5 N8474 P3768 BLD 27 -1 FP BE Pri
!#5 N8475 P3769 MEMBAR
!#5 N8476 P3770 REPLACEMENT 1 Int BE Pri
!#5 N8477 P3771 MEMBAR
!#5 N8478 P3772 BLD 18 -1 FP BE Pri
!#5 N8479 P3773 MEMBAR
!#5 N8480 P3774 REPLACEMENT 23 Int BE Pri
!#5 N8481 P3775 MEMBAR
!#5 N8482 P3776 BLD 17 -1 FP BE Sec
!#5 N8483 P3777 MEMBAR
!#5 N8484 P3778 ST 21 0x280002c Int BE Pri
!#5 N8485 P3779 MEMBAR
!#5 N8486 P3780 BLD 33 -1 FP BE Pri
!#5 N8487 P3781 MEMBAR
!#5 N8488 P3782 REPLACEMENT 25 Int BE Sec
!#5 N8489 P3783 ST 28 0x280002d Int BE Nuc
!#5 N8490 P3784 IDC_FLIP 29 Int BE Pri
!#5 N8491 P3785 MEMBAR
!#5 N8492 P3786 BLD 26 -1 FP BE Pri
!#5 N8493 P3786 BLD 27 -1 FP BE Pri
!#5 N8494 P3787 MEMBAR
!#5 N8495 P3788 BST 8 0x420000cc FP BE Pri
!#5 N8496 P3788 BST 9 0x420000cd FP BE Pri
!#5 N8497 P3789 MEMBAR
!#5 N8498 P3790 LD 30 -1 FP BE Sec
!#5 N8499 P3791 REPLACEMENT 29 Int BE Pri
!#5 N8500 P3792 MEMBAR
!#5 N8501 P3793 BLD 8 -1 FP BE Pri
!#5 N8502 P3793 BLD 9 -1 FP BE Pri
!#5 N8503 P3794 MEMBAR
!#5 N8504 P3795 REPLACEMENT 0 Int BE Pri
!#5 N8505 P3796 IDC_FLIP 7 Int BE Pri
!#5 N8506 P3797 ST 19 0x280002e Int LE Nuc
!#5 N8507 P3798 LD 12 -1 Int BE Pri
!#5 N8508 P3799 ST 20 0x420000ce FP BE Pri
!#5 N8509 P3800 MEMBAR
!#5 N8510 P3801 BST 26 0x420000cf FP BE Pri
!#5 N8511 P3801 BST 27 0x420000d0 FP BE Pri
!#5 N8512 P3802 MEMBAR
!#5 N8513 P3803 REPLACEMENT 0 Int BE Sec
!#5 N8514 P3804 LD 29 -1 Int BE Sec
!#5 N8515 P3805 LD 26 -1 FP BE Pri
!#5 N8516 P3806 LD 9 -1 FP BE Nuc
!#5 N8517 P3807 MEMBAR
!#5 N8518 P3808 BLD 29 -1 FP BE Pri
!#5 N8519 P3809 MEMBAR
!#5 N8520 P3810 LD 8 -1 FP BE Pri
!#5 N8521 P3811 REPLACEMENT 2 Int BE Pri
!#5 N8522 P3812 LD 10 -1 FP BE Pri
!#5 N8523 P3813 MEMBAR
!#5 N8524 P3814 BST 7 0x420000d1 FP BE Pri
!#5 N8525 P3815 MEMBAR
!#5 N8526 P3816 REPLACEMENT 23 Int BE Pri
!#5 N8527 P3817 ST 5 0x420000d2 FP BE Sec
!#5 N8528 P3818 ST 15 0x280002f Int BE Pri
!#5 N8529 P3819 MEMBAR
!#5 N8530 P3820 BLD 18 -1 FP BE Pri
!#5 N8531 P3821 MEMBAR
!#5 N8532 P3822 REPLACEMENT 20 Int BE Sec
!#5 N8533 P3823 LD 20 -1 FP BE Pri
!#5 N8534 P3824 LD 8 -1 FP BE Pri
!#5 N8535 P3825 REPLACEMENT 2 Int BE Pri
!#5 N8536 P3826 MEMBAR
!#5 N8537 P3827 BLD 11 -1 FP BE Sec
!#5 N8538 P3827 BLD 12 -1 FP BE Sec
!#A N8537 N8538
!#5 N8539 P3827 BLD 13 -1 FP BE Sec
!#5 N8540 P3828 MEMBAR
!#5 N8541 P3829 BLD 33 -1 FP BE Pri
!#5 N8542 P3830 MEMBAR
!#5 N8543 P3831 REPLACEMENT 29 Int BE Pri
!#5 N8544 P3832 LD 19 -1 FP BE Sec
!#5 N8545 P3833 ST 16 0x420000d3 FP BE Sec
!#5 N8546 P3834 MEMBAR
!#5 N8547 P3835 BLD 0 -1 FP BE Sec
!#5 N8548 P3835 BLD 1 -1 FP BE Sec
!#A N8547 N8548
!#5 N8549 P3835 BLD 2 -1 FP BE Sec
!#5 N8550 P3835 BLD 3 -1 FP BE Sec
!#5 N8551 P3835 BLD 4 -1 FP BE Sec
!#5 N8552 P3836 MEMBAR
!#5 N8553 P3837 BST 11 0x420000d4 FP BE Pri
!#5 N8554 P3837 BST 12 0x420000d5 FP BE Pri
!#A N8553 N8554
!#5 N8555 P3837 BST 13 0x420000d6 FP BE Pri
!#5 N8556 P3838 MEMBAR
!#5 N8557 P3839 IDC_FLIP 20 Int BE Pri
!#5 N8558 P3840 MEMBAR
!#5 N8559 P3841 BST 15 0x420000d7 FP BE Pri
!#5 N8560 P3842 MEMBAR
!#5 N8561 P3843 BST 15 0x420000d8 FP BE Pri
!#5 N8562 P3844 MEMBAR
!#5 N8563 P3845 PREFETCH 10 Int BE Pri
!#5 N8564 P3846 LD 16 -1 Int BE Nuc
!#5 N8565 P3847 LD 26 -1 Int BE Nuc
!#5 N8566 P3848 ST 14 0x420000d9 FP BE Sec
!#5 N8567 P3849 REPLACEMENT 6 Int BE Nuc
!#5 N8568 P3850 MEMBAR
!#5 N8569 P3851 BST 0 0x420000da FP BE Sec
!#5 N8570 P3851 BST 1 0x420000db FP BE Sec
!#A N8569 N8570
!#5 N8571 P3851 BST 2 0x420000dc FP BE Sec
!#5 N8572 P3851 BST 3 0x420000dd FP BE Sec
!#5 N8573 P3851 BST 4 0x420000de FP BE Sec
!#5 N8574 P3852 MEMBAR
!#5 N8575 P3853 BLD 5 -1 FP BE Pri
!#5 N8576 P3853 BLD 6 -1 FP BE Pri
!#5 N8577 P3854 MEMBAR
!#5 N8578 P3855 REPLACEMENT 8 Int BE Pri
!#5 N8579 P3856 REPLACEMENT 0 Int BE Pri
!#5 N8580 P3857 REPLACEMENT 3 Int BE Sec
!#5 N8581 P3858 LD 24 -1 FP BE Pri
!#5 N8582 P3859 IDC_FLIP 32 Int BE Pri
!#5 N8583 P3860 IDC_FLIP 15 Int BE Pri
!#5 N8584 P3861 LD 3 -1 Int BE Pri
!#5 N8585 P3862 MEMBAR
!#5 N8586 P3863 BST 11 0x420000df FP BE Pri
!#5 N8587 P3863 BST 12 0x420000e0 FP BE Pri
!#A N8586 N8587
!#5 N8588 P3863 BST 13 0x420000e1 FP BE Pri
!#5 N8589 P3864 MEMBAR
!#5 N8590 P3865 REPLACEMENT 3 Int BE Nuc
!#5 N8591 P3866 ST 24 0x2800030 Int BE Nuc
!#5 N8592 P3867 MEMBAR
!#5 N8593 P3868 REPLACEMENT 10 Int BE Sec
!#5 N8594 P3869 REPLACEMENT 15 Int BE Pri
!#5 N8595 P3870 REPLACEMENT 12 Int BE Sec
!#5 N8596 P3871 MEMBAR
!#5 N8597 P3872 BST 18 0x420000e2 FP BE Pri
!#5 N8598 P3873 MEMBAR
!#5 N8599 P3874 LD 29 -1 FP BE Pri
!#5 N8600 P3875 LD 7 -1 Int BE Sec
!#5 N8601 P3876 MEMBAR
!#5 N8602 P3877 BLD 7 -1 FP BE Pri
!#5 N8603 P3878 MEMBAR
!#5 N8604 P3879 ST 2 0x420000e3 FP BE Sec
!#5 N8605 P3880 LD 2 -1 FP BE Pri
!#5 N8606 P3881 ST 21 0x420000e4 FP BE Pri
!#5 N8607 P3882 LD 2 -1 FP BE Pri
!#5 N8608 P3883 REPLACEMENT 15 Int BE Pri
!#5 N8609 P3884 MEMBAR
!#5 N8610 P3885 BLD 18 -1 FP BE Sec
!#5 N8611 P3886 MEMBAR
!#5 N8612 P3887 BLD 30 -1 FP BE Pri
!#5 N8613 P3888 MEMBAR
!#5 N8614 P3889 IDC_FLIP 22 Int BE Pri
!#5 N8615 P3890 REPLACEMENT 17 Int BE Pri
!#5 N8616 P3891 LD 5 -1 FP BE Nuc
!#5 N8617 P3892 MEMBAR
!#5 N8618 P3893 BLD 0 -1 FP BE Pri
!#5 N8619 P3893 BLD 1 -1 FP BE Pri
!#A N8618 N8619
!#5 N8620 P3893 BLD 2 -1 FP BE Pri
!#5 N8621 P3893 BLD 3 -1 FP BE Pri
!#5 N8622 P3893 BLD 4 -1 FP BE Pri
!#5 N8623 P3894 MEMBAR
!#5 N8624 P3895 BSTC 5 0x420000e5 FP BE Pri
!#5 N8625 P3895 BSTC 6 0x420000e6 FP BE Pri
!#5 N8626 P3896 MEMBAR
!#5 N8627 P3897 BST 30 0x420000e7 FP BE Pri
!#5 N8628 P3898 MEMBAR
!#5 N8629 P3899 ST 16 0x2800031 Int LE Pri
!#5 N8630 P3900 MEMBAR
!#5 N8631 P3901 BST 0 0x420000e8 FP BE Sec
!#5 N8632 P3901 BST 1 0x420000e9 FP BE Sec
!#A N8631 N8632
!#5 N8633 P3901 BST 2 0x420000ea FP BE Sec
!#5 N8634 P3901 BST 3 0x420000eb FP BE Sec
!#5 N8635 P3901 BST 4 0x420000ec FP BE Sec
!#5 N8636 P3902 MEMBAR
!#5 N8637 P3903 ST 14 0x420000ed FP BE Pri
!#5 N8638 P3904 REPLACEMENT 27 Int BE Pri
!#5 N8639 P3905 REPLACEMENT 20 Int BE Pri
!#5 N8640 P3906 LD 17 -1 Int BE Sec
!#5 N8641 P3907 REPLACEMENT 4 Int BE Pri
!#5 N8642 P3908 MEMBAR
!#5 N8643 P3909 BSTC 0 0x420000ee FP BE Sec
!#5 N8644 P3909 BSTC 1 0x420000ef FP BE Sec
!#A N8643 N8644
!#5 N8645 P3909 BSTC 2 0x420000f0 FP BE Sec
!#5 N8646 P3909 BSTC 3 0x420000f1 FP BE Sec
!#5 N8647 P3909 BSTC 4 0x420000f2 FP BE Sec
!#5 N8648 P3910 MEMBAR
!#5 N8649 P3911 BST 30 0x420000f3 FP BE Pri
!#5 N8650 P3912 MEMBAR
!#5 N8651 P3913 REPLACEMENT 4 Int BE Pri
!#5 N8652 P3914 IDC_FLIP 8 Int BE Pri
!#5 N8653 P3915 REPLACEMENT 20 Int BE Pri
!#5 N8654 P3916 REPLACEMENT 26 Int BE Sec
!#5 N8655 P3917 MEMBAR
!#5 N8656 P3918 BLD 31 -1 FP BE Pri
!#5 N8657 P3919 MEMBAR
!#5 N8658 P3920 ST 29 0x420000f4 FP BE Pri
!#5 N8659 P3921 MEMBAR
!#5 N8660 P3922 BLD 31 -1 FP BE Sec
!#5 N8661 P3923 MEMBAR
!#5 N8662 P3924 BLD 10 -1 FP BE Pri
!#5 N8663 P3925 MEMBAR
!#5 N8664 P3926 REPLACEMENT 17 Int BE Pri
!#5 N8665 P3927 IDC_FLIP 21 Int BE Pri
!#5 N8666 P3928 MEMBAR
!#5 N8667 P3929 BST 32 0x420000f5 FP BE Pri
!#5 N8668 P3930 MEMBAR
!#5 N8669 P3931 REPLACEMENT 15 Int BE Pri
!#5 N8670 P3932 REPLACEMENT 4 Int BE Pri
!#5 N8671 P3933 MEMBAR
!#5 N8672 P3934 BLD 18 -1 FP BE Pri
!#5 N8673 P3935 MEMBAR
!#5 N8674 P3936 ST 22 0x2800032 Int BE Pri
!#5 N8675 P3937 LD 31 -1 Int BE Pri
!#5 N8676 P3938 REPLACEMENT 26 Int BE Pri
!#5 N8677 P3939 LD 14 -1 Int BE Pri
!#5 N8678 P3940 MEMBAR
!#5 N8679 P3941 BLD 0 -1 FP BE Pri
!#5 N8680 P3941 BLD 1 -1 FP BE Pri
!#A N8679 N8680
!#5 N8681 P3941 BLD 2 -1 FP BE Pri
!#5 N8682 P3941 BLD 3 -1 FP BE Pri
!#5 N8683 P3941 BLD 4 -1 FP BE Pri
!#5 N8684 P3942 MEMBAR
!#5 N8685 P3943 BLD 8 -1 FP BE Pri
!#5 N8686 P3943 BLD 9 -1 FP BE Pri
!#5 N8687 P3944 MEMBAR
!#5 N8688 P3945 BLD 10 -1 FP BE Pri
!#5 N8689 P3946 MEMBAR
!#5 N8690 P3947 ST 31 0x420000f6 FP BE Pri
!#5 N8691 P3948 ST 33 0x420000f7 FP BE Pri
!#5 N8692 P3949 MEMBAR
!#5 N8693 P3950 BLD 11 -1 FP BE Pri
!#5 N8694 P3950 BLD 12 -1 FP BE Pri
!#A N8693 N8694
!#5 N8695 P3950 BLD 13 -1 FP BE Pri
!#5 N8696 P3951 MEMBAR
!#5 N8697 P3952 REPLACEMENT 19 Int BE Nuc
!#5 N8698 P3953 MEMBAR
!#5 N8699 P3954 BST 18 0x420000f8 FP BE Pri
!#5 N8700 P3955 MEMBAR
!#5 N8701 P3956 BST 0 0x420000f9 FP BE Pri
!#5 N8702 P3956 BST 1 0x420000fa FP BE Pri
!#A N8701 N8702
!#5 N8703 P3956 BST 2 0x420000fb FP BE Pri
!#5 N8704 P3956 BST 3 0x420000fc FP BE Pri
!#5 N8705 P3956 BST 4 0x420000fd FP BE Pri
!#5 N8706 P3957 MEMBAR
!#5 N8707 P3958 BST 21 0x420000fe FP BE Pri
!#5 N8708 P3958 BST 22 0x420000ff FP BE Pri
!#A N8707 N8708
!#5 N8709 P3958 BST 23 0x42000100 FP BE Pri
!#5 N8710 P3959 MEMBAR
!#5 N8711 P3960 REPLACEMENT 6 Int BE Pri
!#5 N8712 P3961 MEMBAR
!#5 N8713 P3962 BLD 0 -1 FP BE Pri
!#5 N8714 P3962 BLD 1 -1 FP BE Pri
!#A N8713 N8714
!#5 N8715 P3962 BLD 2 -1 FP BE Pri
!#5 N8716 P3962 BLD 3 -1 FP BE Pri
!#5 N8717 P3962 BLD 4 -1 FP BE Pri
!#5 N8718 P3963 MEMBAR
!#5 N8719 P3964 BST 33 0x42000101 FP BE Pri
!#5 N8720 P3965 MEMBAR
!#5 N8721 P3966 BLD 17 -1 FP BE Pri
!#5 N8722 P3967 MEMBAR
!#5 N8723 P3968 LD 12 -1 Int BE Sec
!#5 N8724 P3969 MEMBAR
!#5 N8725 P3970 BST 0 0x42000102 FP BE Pri
!#5 N8726 P3970 BST 1 0x42000103 FP BE Pri
!#A N8725 N8726
!#5 N8727 P3970 BST 2 0x42000104 FP BE Pri
!#5 N8728 P3970 BST 3 0x42000105 FP BE Pri
!#5 N8729 P3970 BST 4 0x42000106 FP BE Pri
!#5 N8730 P3971 MEMBAR
!#5 N8731 P3972 REPLACEMENT 31 Int BE Sec
!#5 N8732 P3973 MEMBAR
!#5 N8733 P3974 BLD 0 -1 FP BE Pri
!#5 N8734 P3974 BLD 1 -1 FP BE Pri
!#A N8733 N8734
!#5 N8735 P3974 BLD 2 -1 FP BE Pri
!#5 N8736 P3974 BLD 3 -1 FP BE Pri
!#5 N8737 P3974 BLD 4 -1 FP BE Pri
!#5 N8738 P3975 MEMBAR
!#5 N8739 P3976 BST 28 0x42000107 FP BE Pri
!#5 N8740 P3977 MEMBAR
!#5 N8741 P3978 ST 12 0x2800033 Int BE Pri
!#5 N8742 P3979 REPLACEMENT 0 Int BE Pri
!#5 N8743 P3980 ST 10 0x2800034 Int BE Pri
!#5 N8744 P3981 ST 25 0x42000108 FP BE Pri
!#5 N8745 P3982 LD 9 -1 Int BE Nuc
!#5 N8746 P3983 MEMBAR
!#5 N8747 P3984 BLD 11 -1 FP BE Sec
!#5 N8748 P3984 BLD 12 -1 FP BE Sec
!#A N8747 N8748
!#5 N8749 P3984 BLD 13 -1 FP BE Sec
!#5 N8750 P3985 MEMBAR
!#5 N8751 P3986 LD 13 -1 FP BE Pri
!#5 N8752 P3987 REPLACEMENT 17 Int BE Sec
!#5 N8753 P3988 MEMBAR
!#5 N8754 P3989 BST 0 0x42000109 FP BE Pri
!#5 N8755 P3989 BST 1 0x4200010a FP BE Pri
!#A N8754 N8755
!#5 N8756 P3989 BST 2 0x4200010b FP BE Pri
!#5 N8757 P3989 BST 3 0x4200010c FP BE Pri
!#5 N8758 P3989 BST 4 0x4200010d FP BE Pri
!#5 N8759 P3990 MEMBAR
!#5 N8760 P3991 REPLACEMENT 19 Int BE Pri
!#5 N8761 P3992 ST 23 0x4200010e FP BE Pri
!#5 N8762 P3993 PREFETCH 32 Int BE Pri
!#5 N8763 P3994 ST 28 0x2800035 Int BE Pri
!#5 N8764 P3995 MEMBAR
!#5 N8765 P3996 BST 33 0x4200010f FP BE Pri
!#5 N8766 P3997 MEMBAR
!#5 N8767 P3998 BST 0 0x42000110 FP BE Pri
!#5 N8768 P3998 BST 1 0x42000111 FP BE Pri
!#A N8767 N8768
!#5 N8769 P3998 BST 2 0x42000112 FP BE Pri
!#5 N8770 P3998 BST 3 0x42000113 FP BE Pri
!#5 N8771 P3998 BST 4 0x42000114 FP BE Pri
!#5 N8772 P3999 MEMBAR
!#5 N8773 P4000 REPLACEMENT 26 Int BE Pri
!#5 N8774 P4001 REPLACEMENT 17 Int BE Pri
!#5 N8775 P4002 MEMBAR
!#5 N8776 P4003 BLD 11 -1 FP BE Pri
!#5 N8777 P4003 BLD 12 -1 FP BE Pri
!#A N8776 N8777
!#5 N8778 P4003 BLD 13 -1 FP BE Pri
!#5 N8779 P4004 MEMBAR
!#5 N8780 P4005 BLD 29 -1 FP BE Pri
!#5 N8781 P4006 MEMBAR
!#5 N8782 P4007 LD 21 -1 Int BE Pri
!#5 N8783 P4008 MEMBAR
!#5 N8784 P4009 BLD 29 -1 FP BE Pri
!#5 N8785 P4010 MEMBAR
!#5 N8786 P4011 ST 28 0x2800036 Int BE Nuc
!#5 N8787 P4012 ST 7 0x2800037 Int BE Pri
!#5 N8788 P4013 REPLACEMENT 20 Int BE Pri
!#5 N8789 P4014 REPLACEMENT 30 Int BE Pri
!#5 N8790 P4015 MEMBAR
!#5 N8791 P4016 BLD 21 -1 FP BE Pri
!#5 N8792 P4016 BLD 22 -1 FP BE Pri
!#A N8791 N8792
!#5 N8793 P4016 BLD 23 -1 FP BE Pri
!#5 N8794 P4017 MEMBAR
!#5 N8795 P4018 BLD 17 -1 FP BE Sec
!#5 N8796 P4019 MEMBAR
!#5 N8797 P4020 REPLACEMENT 22 Int BE Pri
!#5 N8798 P4021 REPLACEMENT 21 Int BE Pri
!#5 N8799 P4022 MEMBAR
!#5 N8800 P4023 BST 17 0x42000115 FP BE Pri
!#5 N8801 P4024 MEMBAR
!#5 N8802 P4025 ST 2 0x42000116 FP BE Pri
!#5 N8803 P4026 ST 28 0x42000117 FP BE Pri
!#5 N8804 P4027 MEMBAR
!#5 N8805 P4028 BST 11 0x42000118 FP BE Pri
!#5 N8806 P4028 BST 12 0x42000119 FP BE Pri
!#A N8805 N8806
!#5 N8807 P4028 BST 13 0x4200011a FP BE Pri
!#5 N8808 P4029 MEMBAR
!#5 N8809 P4030 REPLACEMENT 5 Int BE Nuc
!#5 N8810 P4031 PREFETCH 3 Int BE Pri
!#5 N8811 P4032 LD 26 -1 Int BE Nuc
!#5 N8812 P4033 MEMBAR
!#5 N8813 P4034 BST 19 0x4200011b FP BE Pri
!#5 N8814 P4035 MEMBAR
!#5 N8815 P4036 BST 0 0x4200011c FP BE Pri
!#5 N8816 P4036 BST 1 0x4200011d FP BE Pri
!#A N8815 N8816
!#5 N8817 P4036 BST 2 0x4200011e FP BE Pri
!#5 N8818 P4036 BST 3 0x4200011f FP BE Pri
!#5 N8819 P4036 BST 4 0x42000120 FP BE Pri
!#5 N8820 P4037 MEMBAR
!#5 N8821 P4038 BST 0 0x42000121 FP BE Sec
!#5 N8822 P4038 BST 1 0x42000122 FP BE Sec
!#A N8821 N8822
!#5 N8823 P4038 BST 2 0x42000123 FP BE Sec
!#5 N8824 P4038 BST 3 0x42000124 FP BE Sec
!#5 N8825 P4038 BST 4 0x42000125 FP BE Sec
!#5 N8826 P4039 MEMBAR
!#5 N8827 P4040 ST 8 0x42000126 FP BE Nuc
!#5 N8828 P4041 MEMBAR
!#5 N8829 P4042 BST 0 0x42000127 FP BE Pri
!#5 N8830 P4042 BST 1 0x42000128 FP BE Pri
!#A N8829 N8830
!#5 N8831 P4042 BST 2 0x42000129 FP BE Pri
!#5 N8832 P4042 BST 3 0x4200012a FP BE Pri
!#5 N8833 P4042 BST 4 0x4200012b FP BE Pri
!#5 N8834 P4043 MEMBAR
!#5 N8835 P4044 LD 28 -1 FP BE Nuc
!#5 N8836 P4045 MEMBAR
!#5 N8837 P4046 BLD 7 -1 FP BE Sec
!#5 N8838 P4047 MEMBAR
!#5 N8839 P4048 BSTC 33 0x4200012c FP BE Pri
!#5 N8840 P4049 MEMBAR
!#5 N8841 P4050 BST 18 0x4200012d FP BE Pri
!#5 N8842 P4051 MEMBAR
!#5 N8843 P4052 REPLACEMENT 2 Int BE Pri
!#5 N8844 P4053 ST 18 0x4200012e FP BE Pri
!#5 N8845 P4054 ST 28 0x4200012f FP BE Pri
!#5 N8846 P4055 MEMBAR
!#5 N8847 P4056 BLD 32 -1 FP BE Pri
!#5 N8848 P4057 MEMBAR
!#5 N8849 P4058 REPLACEMENT 20 Int BE Nuc
!#5 N8850 P4059 REPLACEMENT 0 Int BE Pri
!#5 N8851 P4060 REPLACEMENT 23 Int BE Pri
!#5 N8852 P4061 REPLACEMENT 6 Int BE Pri
!#5 N8853 P4062 MEMBAR
!#5 N8854 P4063 BLD 21 -1 FP BE Pri
!#5 N8855 P4063 BLD 22 -1 FP BE Pri
!#A N8854 N8855
!#5 N8856 P4063 BLD 23 -1 FP BE Pri
!#5 N8857 P4064 MEMBAR
!#5 N8858 P4065 BST 24 0x42000130 FP BE Pri
!#5 N8859 P4065 BST 25 0x42000131 FP BE Pri
!#5 N8860 P4066 MEMBAR
!#5 N8861 P4067 ST 3 0x2800038 Int BE Sec
!#5 N8862 P4068 MEMBAR
!#5 N8863 P4069 BLD 28 -1 FP BE Sec
!#5 N8864 P4070 MEMBAR
!#5 N8865 P4071 BST 7 0x42000132 FP BE Pri
!#5 N8866 P4072 MEMBAR
!#5 N8867 P4073 ST 2 0x2800039 Int BE Pri
!#5 N8868 P4074 REPLACEMENT 18 Int BE Sec
!#5 N8869 P4075 ST 32 0x280003a Int BE Pri
!#5 N8870 P4076 REPLACEMENT 5 Int BE Pri
!#5 N8871 P4077 MEMBAR
!#5 N8872 P4078 BLD 16 -1 FP BE Pri
!#5 N8873 P4079 MEMBAR
!#5 N8874 P4080 LD 32 -1 Int BE Nuc
!#5 N8875 P4081 REPLACEMENT 11 Int BE Pri
!#5 N8876 P4082 ST 24 0x42000133 FP BE Nuc
!#5 N8877 P4083 MEMBAR
!#5 N8878 P4084 BST 24 0x42000134 FP BE Pri
!#5 N8879 P4084 BST 25 0x42000135 FP BE Pri
!#5 N8880 P4085 MEMBAR
!#5 N8881 P4086 BST 8 0x42000136 FP BE Pri
!#5 N8882 P4086 BST 9 0x42000137 FP BE Pri
!#5 N8883 P4087 MEMBAR
!#5 N8884 P4088 MEMBAR
!#6 N8885 P4089 REPLACEMENT 4 Int BE Pri Loop_entry
!#6 N8886 P4090 LD 9 -1 Int BE Pri
!#6 N8887 P4091 LD 33 -1 Int BE Pri
!#6 N8888 P4092 REPLACEMENT 26 Int BE Nuc
!#6 N8889 P4093 IDC_FLIP 11 Int BE Pri
!#6 N8890 P4094 LD 22 -1 Int BE Pri
!#6 N8891 P4095 MEMBAR
!#6 N8892 P4096 BLD 5 -1 FP BE Pri
!#6 N8893 P4096 BLD 6 -1 FP BE Pri
!#6 N8894 P4097 MEMBAR
!#6 N8895 P4098 BLD 5 -1 FP BE Pri
!#6 N8896 P4098 BLD 6 -1 FP BE Pri
!#6 N8897 P4099 MEMBAR
!#6 N8898 P4100 ST 27 0x3000001 Int BE Pri
!#6 N8899 P4101 ST 29 0x42800001 FP BE Sec
!#6 N8900 P4102 MEMBAR
!#6 N8901 P4103 BLD 33 -1 FP BE Pri
!#6 N8902 P4104 MEMBAR
!#6 N8903 P4105 LD 28 -1 Int BE Pri
!#6 N8904 P4106 REPLACEMENT 7 Int BE Pri
!#6 N8905 P4107 LD 32 -1 Int BE Pri
!#6 N8906 P4108 MEMBAR
!#6 N8907 P4109 BST 31 0x42800002 FP BE Pri
!#6 N8908 P4110 MEMBAR
!#6 N8909 P4111 LD 20 -1 FP BE Pri
!#6 N8910 P4112 MEMBAR
!#6 N8911 P4113 BST 31 0x42800003 FP BE Pri
!#6 N8912 P4114 MEMBAR
!#6 N8913 P4115 BST 14 0x42800004 FP BE Pri
!#6 N8914 P4116 MEMBAR
!#6 N8915 P4117 BST 8 0x42800005 FP BE Pri
!#6 N8916 P4117 BST 9 0x42800006 FP BE Pri
!#6 N8917 P4118 MEMBAR
!#6 N8918 P4119 ST 25 0x3000002 Int BE Pri
!#6 N8919 P4120 REPLACEMENT 14 Int BE Sec
!#6 N8920 P4121 REPLACEMENT 11 Int BE Nuc
!#6 N8921 P4122 MEMBAR
!#6 N8922 P4123 BST 10 0x42800007 FP BE Pri
!#6 N8923 P4124 MEMBAR
!#6 N8924 P4125 BST 28 0x42800008 FP BE Pri
!#6 N8925 P4126 MEMBAR
!#6 N8926 P4127 ST 21 0x42800009 FP BE Pri
!#6 N8927 P4128 MEMBAR
!#6 N8928 P4129 BST 21 0x4280000a FP BE Pri
!#6 N8929 P4129 BST 22 0x4280000b FP BE Pri
!#A N8928 N8929
!#6 N8930 P4129 BST 23 0x4280000c FP BE Pri
!#6 N8931 P4130 MEMBAR
!#6 N8932 P4131 REPLACEMENT 14 Int BE Pri
!#6 N8933 P4132 REPLACEMENT 31 Int BE Pri
!#6 N8934 P4133 MEMBAR
!#6 N8935 P4134 BLD 0 -1 FP BE Pri
!#6 N8936 P4134 BLD 1 -1 FP BE Pri
!#A N8935 N8936
!#6 N8937 P4134 BLD 2 -1 FP BE Pri
!#6 N8938 P4134 BLD 3 -1 FP BE Pri
!#6 N8939 P4134 BLD 4 -1 FP BE Pri
!#6 N8940 P4135 MEMBAR
!#6 N8941 P4136 REPLACEMENT 30 Int BE Sec
!#6 N8942 P4137 MEMBAR
!#6 N8943 P4138 BLD 11 -1 FP BE Pri
!#6 N8944 P4138 BLD 12 -1 FP BE Pri
!#A N8943 N8944
!#6 N8945 P4138 BLD 13 -1 FP BE Pri
!#6 N8946 P4139 MEMBAR
!#6 N8947 P4140 LD 30 -1 FP BE Pri
!#6 N8948 P4141 REPLACEMENT 4 Int BE Pri
!#6 N8949 P4142 REPLACEMENT 4 Int BE Pri
!#6 N8950 P4143 IDC_FLIP 31 Int BE Pri
!#6 N8951 P4144 MEMBAR
!#6 N8952 P4145 BST 30 0x4280000d FP BE Sec
!#6 N8953 P4146 MEMBAR
!#6 N8954 P4147 ST 20 0x4280000e FP BE Pri
!#6 N8955 P4148 ST 33 0x4280000f FP BE Pri
!#6 N8956 P4149 MEMBAR
!#6 N8957 P4150 BST 33 0x42800010 FP BE Pri
!#6 N8958 P4151 MEMBAR
!#6 N8959 P4152 REPLACEMENT 14 Int BE Pri
!#6 N8960 P4153 LD 25 -1 Int BE Pri
!#6 N8961 P4154 MEMBAR
!#6 N8962 P4155 BST 0 0x42800011 FP BE Sec
!#6 N8963 P4155 BST 1 0x42800012 FP BE Sec
!#A N8962 N8963
!#6 N8964 P4155 BST 2 0x42800013 FP BE Sec
!#6 N8965 P4155 BST 3 0x42800014 FP BE Sec
!#6 N8966 P4155 BST 4 0x42800015 FP BE Sec
!#6 N8967 P4156 MEMBAR
!#6 N8968 P4157 REPLACEMENT 5 Int BE Pri
!#6 N8969 P4158 REPLACEMENT 14 Int BE Pri
!#6 N8970 P4159 LD 29 -1 Int BE Sec
!#6 N8971 P4160 MEMBAR
!#6 N8972 P4161 BLD 5 -1 FP BE Pri
!#6 N8973 P4161 BLD 6 -1 FP BE Pri
!#6 N8974 P4162 MEMBAR
!#6 N8975 P4163 ST 30 0x42800016 FP BE Sec
!#6 N8976 P4164 REPLACEMENT 18 Int BE Pri
!#6 N8977 P4165 MEMBAR
!#6 N8978 P4166 BST 21 0x42800017 FP BE Pri
!#6 N8979 P4166 BST 22 0x42800018 FP BE Pri
!#A N8978 N8979
!#6 N8980 P4166 BST 23 0x42800019 FP BE Pri
!#6 N8981 P4167 MEMBAR
!#6 N8982 P4168 BLD 17 -1 FP BE Pri
!#6 N8983 P4169 MEMBAR
!#6 N8984 P4170 BLD 11 -1 FP BE Pri
!#6 N8985 P4170 BLD 12 -1 FP BE Pri
!#A N8984 N8985
!#6 N8986 P4170 BLD 13 -1 FP BE Pri
!#6 N8987 P4171 MEMBAR
!#6 N8988 P4172 ST 22 0x4280001a FP BE Pri
!#6 N8989 P4173 ST 15 0x4280001b FP BE Nuc
!#6 N8990 P4174 MEMBAR
!#6 N8991 P4175 BST 30 0x4280001c FP BE Pri
!#6 N8992 P4176 MEMBAR
!#6 N8993 P4177 BLD 15 -1 FP BE Pri
!#6 N8994 P4178 MEMBAR
!#6 N8995 P4179 REPLACEMENT 7 Int BE Pri
!#6 N8996 P4180 MEMBAR
!#6 N8997 P4181 BLD 11 -1 FP BE Sec
!#6 N8998 P4181 BLD 12 -1 FP BE Sec
!#A N8997 N8998
!#6 N8999 P4181 BLD 13 -1 FP BE Sec
!#6 N9000 P4182 MEMBAR
!#6 N9001 P4183 REPLACEMENT 9 Int BE Pri
!#6 N9002 P4184 REPLACEMENT 23 Int BE Pri
!#6 N9003 P4185 MEMBAR
!#6 N9004 P4186 BLD 11 -1 FP BE Pri
!#6 N9005 P4186 BLD 12 -1 FP BE Pri
!#A N9004 N9005
!#6 N9006 P4186 BLD 13 -1 FP BE Pri
!#6 N9007 P4187 MEMBAR
!#6 N9008 P4188 LD 27 -1 Int BE Pri
!#6 N9009 P4189 LD 8 -1 FP BE Sec
!#6 N9010 P4190 IDC_FLIP 18 Int BE Pri
!#6 N9011 P4191 MEMBAR
!#6 N9012 P4192 BST 18 0x4280001d FP BE Pri
!#6 N9013 P4193 MEMBAR
!#6 N9014 P4194 BLD 26 -1 FP BE Pri
!#6 N9015 P4194 BLD 27 -1 FP BE Pri
!#6 N9016 P4195 MEMBAR
!#6 N9017 P4196 REPLACEMENT 22 Int BE Pri
!#6 N9018 P4197 MEMBAR
!#6 N9019 P4198 ST 0 0x4280001e FP BE Pri Loop_exit
!#6 N9020 P4089 REPLACEMENT 4 Int BE Pri Loop_entry
!#6 N9021 P4090 LD 9 -1 Int BE Pri
!#6 N9022 P4091 LD 33 -1 Int BE Pri
!#6 N9023 P4092 REPLACEMENT 26 Int BE Nuc
!#6 N9024 P4093 IDC_FLIP 11 Int BE Pri
!#6 N9025 P4094 LD 22 -1 Int BE Pri
!#6 N9026 P4095 MEMBAR
!#6 N9027 P4096 BLD 5 -1 FP BE Pri
!#6 N9028 P4096 BLD 6 -1 FP BE Pri
!#6 N9029 P4097 MEMBAR
!#6 N9030 P4098 BLD 5 -1 FP BE Pri
!#6 N9031 P4098 BLD 6 -1 FP BE Pri
!#6 N9032 P4099 MEMBAR
!#6 N9033 P4100 ST 27 0x3000003 Int BE Pri
!#6 N9034 P4101 ST 29 0x4280001f FP BE Sec
!#6 N9035 P4102 MEMBAR
!#6 N9036 P4103 BLD 33 -1 FP BE Pri
!#6 N9037 P4104 MEMBAR
!#6 N9038 P4105 LD 28 -1 Int BE Pri
!#6 N9039 P4106 REPLACEMENT 7 Int BE Pri
!#6 N9040 P4107 LD 32 -1 Int BE Pri
!#6 N9041 P4108 MEMBAR
!#6 N9042 P4109 BST 31 0x42800020 FP BE Pri
!#6 N9043 P4110 MEMBAR
!#6 N9044 P4111 LD 20 -1 FP BE Pri
!#6 N9045 P4112 MEMBAR
!#6 N9046 P4113 BST 31 0x42800021 FP BE Pri
!#6 N9047 P4114 MEMBAR
!#6 N9048 P4115 BST 14 0x42800022 FP BE Pri
!#6 N9049 P4116 MEMBAR
!#6 N9050 P4117 BST 8 0x42800023 FP BE Pri
!#6 N9051 P4117 BST 9 0x42800024 FP BE Pri
!#6 N9052 P4118 MEMBAR
!#6 N9053 P4119 ST 25 0x3000004 Int BE Pri
!#6 N9054 P4120 REPLACEMENT 14 Int BE Sec
!#6 N9055 P4121 REPLACEMENT 11 Int BE Nuc
!#6 N9056 P4122 MEMBAR
!#6 N9057 P4123 BST 10 0x42800025 FP BE Pri
!#6 N9058 P4124 MEMBAR
!#6 N9059 P4125 BST 28 0x42800026 FP BE Pri
!#6 N9060 P4126 MEMBAR
!#6 N9061 P4127 ST 21 0x42800027 FP BE Pri
!#6 N9062 P4128 MEMBAR
!#6 N9063 P4129 BST 21 0x42800028 FP BE Pri
!#6 N9064 P4129 BST 22 0x42800029 FP BE Pri
!#A N9063 N9064
!#6 N9065 P4129 BST 23 0x4280002a FP BE Pri
!#6 N9066 P4130 MEMBAR
!#6 N9067 P4131 REPLACEMENT 14 Int BE Pri
!#6 N9068 P4132 REPLACEMENT 31 Int BE Pri
!#6 N9069 P4133 MEMBAR
!#6 N9070 P4134 BLD 0 -1 FP BE Pri
!#6 N9071 P4134 BLD 1 -1 FP BE Pri
!#A N9070 N9071
!#6 N9072 P4134 BLD 2 -1 FP BE Pri
!#6 N9073 P4134 BLD 3 -1 FP BE Pri
!#6 N9074 P4134 BLD 4 -1 FP BE Pri
!#6 N9075 P4135 MEMBAR
!#6 N9076 P4136 REPLACEMENT 30 Int BE Sec
!#6 N9077 P4137 MEMBAR
!#6 N9078 P4138 BLD 11 -1 FP BE Pri
!#6 N9079 P4138 BLD 12 -1 FP BE Pri
!#A N9078 N9079
!#6 N9080 P4138 BLD 13 -1 FP BE Pri
!#6 N9081 P4139 MEMBAR
!#6 N9082 P4140 LD 30 -1 FP BE Pri
!#6 N9083 P4141 REPLACEMENT 4 Int BE Pri
!#6 N9084 P4142 REPLACEMENT 4 Int BE Pri
!#6 N9085 P4143 IDC_FLIP 31 Int BE Pri
!#6 N9086 P4144 MEMBAR
!#6 N9087 P4145 BST 30 0x4280002b FP BE Sec
!#6 N9088 P4146 MEMBAR
!#6 N9089 P4147 ST 20 0x4280002c FP BE Pri
!#6 N9090 P4148 ST 33 0x4280002d FP BE Pri
!#6 N9091 P4149 MEMBAR
!#6 N9092 P4150 BST 33 0x4280002e FP BE Pri
!#6 N9093 P4151 MEMBAR
!#6 N9094 P4152 REPLACEMENT 14 Int BE Pri
!#6 N9095 P4153 LD 25 -1 Int BE Pri
!#6 N9096 P4154 MEMBAR
!#6 N9097 P4155 BST 0 0x4280002f FP BE Sec
!#6 N9098 P4155 BST 1 0x42800030 FP BE Sec
!#A N9097 N9098
!#6 N9099 P4155 BST 2 0x42800031 FP BE Sec
!#6 N9100 P4155 BST 3 0x42800032 FP BE Sec
!#6 N9101 P4155 BST 4 0x42800033 FP BE Sec
!#6 N9102 P4156 MEMBAR
!#6 N9103 P4157 REPLACEMENT 5 Int BE Pri
!#6 N9104 P4158 REPLACEMENT 14 Int BE Pri
!#6 N9105 P4159 LD 29 -1 Int BE Sec
!#6 N9106 P4160 MEMBAR
!#6 N9107 P4161 BLD 5 -1 FP BE Pri
!#6 N9108 P4161 BLD 6 -1 FP BE Pri
!#6 N9109 P4162 MEMBAR
!#6 N9110 P4163 ST 30 0x42800034 FP BE Sec
!#6 N9111 P4164 REPLACEMENT 18 Int BE Pri
!#6 N9112 P4165 MEMBAR
!#6 N9113 P4166 BST 21 0x42800035 FP BE Pri
!#6 N9114 P4166 BST 22 0x42800036 FP BE Pri
!#A N9113 N9114
!#6 N9115 P4166 BST 23 0x42800037 FP BE Pri
!#6 N9116 P4167 MEMBAR
!#6 N9117 P4168 BLD 17 -1 FP BE Pri
!#6 N9118 P4169 MEMBAR
!#6 N9119 P4170 BLD 11 -1 FP BE Pri
!#6 N9120 P4170 BLD 12 -1 FP BE Pri
!#A N9119 N9120
!#6 N9121 P4170 BLD 13 -1 FP BE Pri
!#6 N9122 P4171 MEMBAR
!#6 N9123 P4172 ST 22 0x42800038 FP BE Pri
!#6 N9124 P4173 ST 15 0x42800039 FP BE Nuc
!#6 N9125 P4174 MEMBAR
!#6 N9126 P4175 BST 30 0x4280003a FP BE Pri
!#6 N9127 P4176 MEMBAR
!#6 N9128 P4177 BLD 15 -1 FP BE Pri
!#6 N9129 P4178 MEMBAR
!#6 N9130 P4179 REPLACEMENT 7 Int BE Pri
!#6 N9131 P4180 MEMBAR
!#6 N9132 P4181 BLD 11 -1 FP BE Sec
!#6 N9133 P4181 BLD 12 -1 FP BE Sec
!#A N9132 N9133
!#6 N9134 P4181 BLD 13 -1 FP BE Sec
!#6 N9135 P4182 MEMBAR
!#6 N9136 P4183 REPLACEMENT 9 Int BE Pri
!#6 N9137 P4184 REPLACEMENT 23 Int BE Pri
!#6 N9138 P4185 MEMBAR
!#6 N9139 P4186 BLD 11 -1 FP BE Pri
!#6 N9140 P4186 BLD 12 -1 FP BE Pri
!#A N9139 N9140
!#6 N9141 P4186 BLD 13 -1 FP BE Pri
!#6 N9142 P4187 MEMBAR
!#6 N9143 P4188 LD 27 -1 Int BE Pri
!#6 N9144 P4189 LD 8 -1 FP BE Sec
!#6 N9145 P4190 IDC_FLIP 18 Int BE Pri
!#6 N9146 P4191 MEMBAR
!#6 N9147 P4192 BST 18 0x4280003b FP BE Pri
!#6 N9148 P4193 MEMBAR
!#6 N9149 P4194 BLD 26 -1 FP BE Pri
!#6 N9150 P4194 BLD 27 -1 FP BE Pri
!#6 N9151 P4195 MEMBAR
!#6 N9152 P4196 REPLACEMENT 22 Int BE Pri
!#6 N9153 P4197 MEMBAR
!#6 N9154 P4198 ST 0 0x4280003c FP BE Pri Loop_exit
!#6 N9155 P4089 REPLACEMENT 4 Int BE Pri Loop_entry
!#6 N9156 P4090 LD 9 -1 Int BE Pri
!#6 N9157 P4091 LD 33 -1 Int BE Pri
!#6 N9158 P4092 REPLACEMENT 26 Int BE Nuc
!#6 N9159 P4093 IDC_FLIP 11 Int BE Pri
!#6 N9160 P4094 LD 22 -1 Int BE Pri
!#6 N9161 P4095 MEMBAR
!#6 N9162 P4096 BLD 5 -1 FP BE Pri
!#6 N9163 P4096 BLD 6 -1 FP BE Pri
!#6 N9164 P4097 MEMBAR
!#6 N9165 P4098 BLD 5 -1 FP BE Pri
!#6 N9166 P4098 BLD 6 -1 FP BE Pri
!#6 N9167 P4099 MEMBAR
!#6 N9168 P4100 ST 27 0x3000005 Int BE Pri
!#6 N9169 P4101 ST 29 0x4280003d FP BE Sec
!#6 N9170 P4102 MEMBAR
!#6 N9171 P4103 BLD 33 -1 FP BE Pri
!#6 N9172 P4104 MEMBAR
!#6 N9173 P4105 LD 28 -1 Int BE Pri
!#6 N9174 P4106 REPLACEMENT 7 Int BE Pri
!#6 N9175 P4107 LD 32 -1 Int BE Pri
!#6 N9176 P4108 MEMBAR
!#6 N9177 P4109 BST 31 0x4280003e FP BE Pri
!#6 N9178 P4110 MEMBAR
!#6 N9179 P4111 LD 20 -1 FP BE Pri
!#6 N9180 P4112 MEMBAR
!#6 N9181 P4113 BST 31 0x4280003f FP BE Pri
!#6 N9182 P4114 MEMBAR
!#6 N9183 P4115 BST 14 0x42800040 FP BE Pri
!#6 N9184 P4116 MEMBAR
!#6 N9185 P4117 BST 8 0x42800041 FP BE Pri
!#6 N9186 P4117 BST 9 0x42800042 FP BE Pri
!#6 N9187 P4118 MEMBAR
!#6 N9188 P4119 ST 25 0x3000006 Int BE Pri
!#6 N9189 P4120 REPLACEMENT 14 Int BE Sec
!#6 N9190 P4121 REPLACEMENT 11 Int BE Nuc
!#6 N9191 P4122 MEMBAR
!#6 N9192 P4123 BST 10 0x42800043 FP BE Pri
!#6 N9193 P4124 MEMBAR
!#6 N9194 P4125 BST 28 0x42800044 FP BE Pri
!#6 N9195 P4126 MEMBAR
!#6 N9196 P4127 ST 21 0x42800045 FP BE Pri
!#6 N9197 P4128 MEMBAR
!#6 N9198 P4129 BST 21 0x42800046 FP BE Pri
!#6 N9199 P4129 BST 22 0x42800047 FP BE Pri
!#A N9198 N9199
!#6 N9200 P4129 BST 23 0x42800048 FP BE Pri
!#6 N9201 P4130 MEMBAR
!#6 N9202 P4131 REPLACEMENT 14 Int BE Pri
!#6 N9203 P4132 REPLACEMENT 31 Int BE Pri
!#6 N9204 P4133 MEMBAR
!#6 N9205 P4134 BLD 0 -1 FP BE Pri
!#6 N9206 P4134 BLD 1 -1 FP BE Pri
!#A N9205 N9206
!#6 N9207 P4134 BLD 2 -1 FP BE Pri
!#6 N9208 P4134 BLD 3 -1 FP BE Pri
!#6 N9209 P4134 BLD 4 -1 FP BE Pri
!#6 N9210 P4135 MEMBAR
!#6 N9211 P4136 REPLACEMENT 30 Int BE Sec
!#6 N9212 P4137 MEMBAR
!#6 N9213 P4138 BLD 11 -1 FP BE Pri
!#6 N9214 P4138 BLD 12 -1 FP BE Pri
!#A N9213 N9214
!#6 N9215 P4138 BLD 13 -1 FP BE Pri
!#6 N9216 P4139 MEMBAR
!#6 N9217 P4140 LD 30 -1 FP BE Pri
!#6 N9218 P4141 REPLACEMENT 4 Int BE Pri
!#6 N9219 P4142 REPLACEMENT 4 Int BE Pri
!#6 N9220 P4143 IDC_FLIP 31 Int BE Pri
!#6 N9221 P4144 MEMBAR
!#6 N9222 P4145 BST 30 0x42800049 FP BE Sec
!#6 N9223 P4146 MEMBAR
!#6 N9224 P4147 ST 20 0x4280004a FP BE Pri
!#6 N9225 P4148 ST 33 0x4280004b FP BE Pri
!#6 N9226 P4149 MEMBAR
!#6 N9227 P4150 BST 33 0x4280004c FP BE Pri
!#6 N9228 P4151 MEMBAR
!#6 N9229 P4152 REPLACEMENT 14 Int BE Pri
!#6 N9230 P4153 LD 25 -1 Int BE Pri
!#6 N9231 P4154 MEMBAR
!#6 N9232 P4155 BST 0 0x4280004d FP BE Sec
!#6 N9233 P4155 BST 1 0x4280004e FP BE Sec
!#A N9232 N9233
!#6 N9234 P4155 BST 2 0x4280004f FP BE Sec
!#6 N9235 P4155 BST 3 0x42800050 FP BE Sec
!#6 N9236 P4155 BST 4 0x42800051 FP BE Sec
!#6 N9237 P4156 MEMBAR
!#6 N9238 P4157 REPLACEMENT 5 Int BE Pri
!#6 N9239 P4158 REPLACEMENT 14 Int BE Pri
!#6 N9240 P4159 LD 29 -1 Int BE Sec
!#6 N9241 P4160 MEMBAR
!#6 N9242 P4161 BLD 5 -1 FP BE Pri
!#6 N9243 P4161 BLD 6 -1 FP BE Pri
!#6 N9244 P4162 MEMBAR
!#6 N9245 P4163 ST 30 0x42800052 FP BE Sec
!#6 N9246 P4164 REPLACEMENT 18 Int BE Pri
!#6 N9247 P4165 MEMBAR
!#6 N9248 P4166 BST 21 0x42800053 FP BE Pri
!#6 N9249 P4166 BST 22 0x42800054 FP BE Pri
!#A N9248 N9249
!#6 N9250 P4166 BST 23 0x42800055 FP BE Pri
!#6 N9251 P4167 MEMBAR
!#6 N9252 P4168 BLD 17 -1 FP BE Pri
!#6 N9253 P4169 MEMBAR
!#6 N9254 P4170 BLD 11 -1 FP BE Pri
!#6 N9255 P4170 BLD 12 -1 FP BE Pri
!#A N9254 N9255
!#6 N9256 P4170 BLD 13 -1 FP BE Pri
!#6 N9257 P4171 MEMBAR
!#6 N9258 P4172 ST 22 0x42800056 FP BE Pri
!#6 N9259 P4173 ST 15 0x42800057 FP BE Nuc
!#6 N9260 P4174 MEMBAR
!#6 N9261 P4175 BST 30 0x42800058 FP BE Pri
!#6 N9262 P4176 MEMBAR
!#6 N9263 P4177 BLD 15 -1 FP BE Pri
!#6 N9264 P4178 MEMBAR
!#6 N9265 P4179 REPLACEMENT 7 Int BE Pri
!#6 N9266 P4180 MEMBAR
!#6 N9267 P4181 BLD 11 -1 FP BE Sec
!#6 N9268 P4181 BLD 12 -1 FP BE Sec
!#A N9267 N9268
!#6 N9269 P4181 BLD 13 -1 FP BE Sec
!#6 N9270 P4182 MEMBAR
!#6 N9271 P4183 REPLACEMENT 9 Int BE Pri
!#6 N9272 P4184 REPLACEMENT 23 Int BE Pri
!#6 N9273 P4185 MEMBAR
!#6 N9274 P4186 BLD 11 -1 FP BE Pri
!#6 N9275 P4186 BLD 12 -1 FP BE Pri
!#A N9274 N9275
!#6 N9276 P4186 BLD 13 -1 FP BE Pri
!#6 N9277 P4187 MEMBAR
!#6 N9278 P4188 LD 27 -1 Int BE Pri
!#6 N9279 P4189 LD 8 -1 FP BE Sec
!#6 N9280 P4190 IDC_FLIP 18 Int BE Pri
!#6 N9281 P4191 MEMBAR
!#6 N9282 P4192 BST 18 0x42800059 FP BE Pri
!#6 N9283 P4193 MEMBAR
!#6 N9284 P4194 BLD 26 -1 FP BE Pri
!#6 N9285 P4194 BLD 27 -1 FP BE Pri
!#6 N9286 P4195 MEMBAR
!#6 N9287 P4196 REPLACEMENT 22 Int BE Pri
!#6 N9288 P4197 MEMBAR
!#6 N9289 P4198 ST 0 0x4280005a FP BE Pri Loop_exit
!#6 N9290 P4089 REPLACEMENT 4 Int BE Pri Loop_entry
!#6 N9291 P4090 LD 9 -1 Int BE Pri
!#6 N9292 P4091 LD 33 -1 Int BE Pri
!#6 N9293 P4092 REPLACEMENT 26 Int BE Nuc
!#6 N9294 P4093 IDC_FLIP 11 Int BE Pri
!#6 N9295 P4094 LD 22 -1 Int BE Pri
!#6 N9296 P4095 MEMBAR
!#6 N9297 P4096 BLD 5 -1 FP BE Pri
!#6 N9298 P4096 BLD 6 -1 FP BE Pri
!#6 N9299 P4097 MEMBAR
!#6 N9300 P4098 BLD 5 -1 FP BE Pri
!#6 N9301 P4098 BLD 6 -1 FP BE Pri
!#6 N9302 P4099 MEMBAR
!#6 N9303 P4100 ST 27 0x3000007 Int BE Pri
!#6 N9304 P4101 ST 29 0x4280005b FP BE Sec
!#6 N9305 P4102 MEMBAR
!#6 N9306 P4103 BLD 33 -1 FP BE Pri
!#6 N9307 P4104 MEMBAR
!#6 N9308 P4105 LD 28 -1 Int BE Pri
!#6 N9309 P4106 REPLACEMENT 7 Int BE Pri
!#6 N9310 P4107 LD 32 -1 Int BE Pri
!#6 N9311 P4108 MEMBAR
!#6 N9312 P4109 BST 31 0x4280005c FP BE Pri
!#6 N9313 P4110 MEMBAR
!#6 N9314 P4111 LD 20 -1 FP BE Pri
!#6 N9315 P4112 MEMBAR
!#6 N9316 P4113 BST 31 0x4280005d FP BE Pri
!#6 N9317 P4114 MEMBAR
!#6 N9318 P4115 BST 14 0x4280005e FP BE Pri
!#6 N9319 P4116 MEMBAR
!#6 N9320 P4117 BST 8 0x4280005f FP BE Pri
!#6 N9321 P4117 BST 9 0x42800060 FP BE Pri
!#6 N9322 P4118 MEMBAR
!#6 N9323 P4119 ST 25 0x3000008 Int BE Pri
!#6 N9324 P4120 REPLACEMENT 14 Int BE Sec
!#6 N9325 P4121 REPLACEMENT 11 Int BE Nuc
!#6 N9326 P4122 MEMBAR
!#6 N9327 P4123 BST 10 0x42800061 FP BE Pri
!#6 N9328 P4124 MEMBAR
!#6 N9329 P4125 BST 28 0x42800062 FP BE Pri
!#6 N9330 P4126 MEMBAR
!#6 N9331 P4127 ST 21 0x42800063 FP BE Pri
!#6 N9332 P4128 MEMBAR
!#6 N9333 P4129 BST 21 0x42800064 FP BE Pri
!#6 N9334 P4129 BST 22 0x42800065 FP BE Pri
!#A N9333 N9334
!#6 N9335 P4129 BST 23 0x42800066 FP BE Pri
!#6 N9336 P4130 MEMBAR
!#6 N9337 P4131 REPLACEMENT 14 Int BE Pri
!#6 N9338 P4132 REPLACEMENT 31 Int BE Pri
!#6 N9339 P4133 MEMBAR
!#6 N9340 P4134 BLD 0 -1 FP BE Pri
!#6 N9341 P4134 BLD 1 -1 FP BE Pri
!#A N9340 N9341
!#6 N9342 P4134 BLD 2 -1 FP BE Pri
!#6 N9343 P4134 BLD 3 -1 FP BE Pri
!#6 N9344 P4134 BLD 4 -1 FP BE Pri
!#6 N9345 P4135 MEMBAR
!#6 N9346 P4136 REPLACEMENT 30 Int BE Sec
!#6 N9347 P4137 MEMBAR
!#6 N9348 P4138 BLD 11 -1 FP BE Pri
!#6 N9349 P4138 BLD 12 -1 FP BE Pri
!#A N9348 N9349
!#6 N9350 P4138 BLD 13 -1 FP BE Pri
!#6 N9351 P4139 MEMBAR
!#6 N9352 P4140 LD 30 -1 FP BE Pri
!#6 N9353 P4141 REPLACEMENT 4 Int BE Pri
!#6 N9354 P4142 REPLACEMENT 4 Int BE Pri
!#6 N9355 P4143 IDC_FLIP 31 Int BE Pri
!#6 N9356 P4144 MEMBAR
!#6 N9357 P4145 BST 30 0x42800067 FP BE Sec
!#6 N9358 P4146 MEMBAR
!#6 N9359 P4147 ST 20 0x42800068 FP BE Pri
!#6 N9360 P4148 ST 33 0x42800069 FP BE Pri
!#6 N9361 P4149 MEMBAR
!#6 N9362 P4150 BST 33 0x4280006a FP BE Pri
!#6 N9363 P4151 MEMBAR
!#6 N9364 P4152 REPLACEMENT 14 Int BE Pri
!#6 N9365 P4153 LD 25 -1 Int BE Pri
!#6 N9366 P4154 MEMBAR
!#6 N9367 P4155 BST 0 0x4280006b FP BE Sec
!#6 N9368 P4155 BST 1 0x4280006c FP BE Sec
!#A N9367 N9368
!#6 N9369 P4155 BST 2 0x4280006d FP BE Sec
!#6 N9370 P4155 BST 3 0x4280006e FP BE Sec
!#6 N9371 P4155 BST 4 0x4280006f FP BE Sec
!#6 N9372 P4156 MEMBAR
!#6 N9373 P4157 REPLACEMENT 5 Int BE Pri
!#6 N9374 P4158 REPLACEMENT 14 Int BE Pri
!#6 N9375 P4159 LD 29 -1 Int BE Sec
!#6 N9376 P4160 MEMBAR
!#6 N9377 P4161 BLD 5 -1 FP BE Pri
!#6 N9378 P4161 BLD 6 -1 FP BE Pri
!#6 N9379 P4162 MEMBAR
!#6 N9380 P4163 ST 30 0x42800070 FP BE Sec
!#6 N9381 P4164 REPLACEMENT 18 Int BE Pri
!#6 N9382 P4165 MEMBAR
!#6 N9383 P4166 BST 21 0x42800071 FP BE Pri
!#6 N9384 P4166 BST 22 0x42800072 FP BE Pri
!#A N9383 N9384
!#6 N9385 P4166 BST 23 0x42800073 FP BE Pri
!#6 N9386 P4167 MEMBAR
!#6 N9387 P4168 BLD 17 -1 FP BE Pri
!#6 N9388 P4169 MEMBAR
!#6 N9389 P4170 BLD 11 -1 FP BE Pri
!#6 N9390 P4170 BLD 12 -1 FP BE Pri
!#A N9389 N9390
!#6 N9391 P4170 BLD 13 -1 FP BE Pri
!#6 N9392 P4171 MEMBAR
!#6 N9393 P4172 ST 22 0x42800074 FP BE Pri
!#6 N9394 P4173 ST 15 0x42800075 FP BE Nuc
!#6 N9395 P4174 MEMBAR
!#6 N9396 P4175 BST 30 0x42800076 FP BE Pri
!#6 N9397 P4176 MEMBAR
!#6 N9398 P4177 BLD 15 -1 FP BE Pri
!#6 N9399 P4178 MEMBAR
!#6 N9400 P4179 REPLACEMENT 7 Int BE Pri
!#6 N9401 P4180 MEMBAR
!#6 N9402 P4181 BLD 11 -1 FP BE Sec
!#6 N9403 P4181 BLD 12 -1 FP BE Sec
!#A N9402 N9403
!#6 N9404 P4181 BLD 13 -1 FP BE Sec
!#6 N9405 P4182 MEMBAR
!#6 N9406 P4183 REPLACEMENT 9 Int BE Pri
!#6 N9407 P4184 REPLACEMENT 23 Int BE Pri
!#6 N9408 P4185 MEMBAR
!#6 N9409 P4186 BLD 11 -1 FP BE Pri
!#6 N9410 P4186 BLD 12 -1 FP BE Pri
!#A N9409 N9410
!#6 N9411 P4186 BLD 13 -1 FP BE Pri
!#6 N9412 P4187 MEMBAR
!#6 N9413 P4188 LD 27 -1 Int BE Pri
!#6 N9414 P4189 LD 8 -1 FP BE Sec
!#6 N9415 P4190 IDC_FLIP 18 Int BE Pri
!#6 N9416 P4191 MEMBAR
!#6 N9417 P4192 BST 18 0x42800077 FP BE Pri
!#6 N9418 P4193 MEMBAR
!#6 N9419 P4194 BLD 26 -1 FP BE Pri
!#6 N9420 P4194 BLD 27 -1 FP BE Pri
!#6 N9421 P4195 MEMBAR
!#6 N9422 P4196 REPLACEMENT 22 Int BE Pri
!#6 N9423 P4197 MEMBAR
!#6 N9424 P4198 ST 0 0x42800078 FP BE Pri Loop_exit
!#6 N9425 P4089 REPLACEMENT 4 Int BE Pri Loop_entry
!#6 N9426 P4090 LD 9 -1 Int BE Pri
!#6 N9427 P4091 LD 33 -1 Int BE Pri
!#6 N9428 P4092 REPLACEMENT 26 Int BE Nuc
!#6 N9429 P4093 IDC_FLIP 11 Int BE Pri
!#6 N9430 P4094 LD 22 -1 Int BE Pri
!#6 N9431 P4095 MEMBAR
!#6 N9432 P4096 BLD 5 -1 FP BE Pri
!#6 N9433 P4096 BLD 6 -1 FP BE Pri
!#6 N9434 P4097 MEMBAR
!#6 N9435 P4098 BLD 5 -1 FP BE Pri
!#6 N9436 P4098 BLD 6 -1 FP BE Pri
!#6 N9437 P4099 MEMBAR
!#6 N9438 P4100 ST 27 0x3000009 Int BE Pri
!#6 N9439 P4101 ST 29 0x42800079 FP BE Sec
!#6 N9440 P4102 MEMBAR
!#6 N9441 P4103 BLD 33 -1 FP BE Pri
!#6 N9442 P4104 MEMBAR
!#6 N9443 P4105 LD 28 -1 Int BE Pri
!#6 N9444 P4106 REPLACEMENT 7 Int BE Pri
!#6 N9445 P4107 LD 32 -1 Int BE Pri
!#6 N9446 P4108 MEMBAR
!#6 N9447 P4109 BST 31 0x4280007a FP BE Pri
!#6 N9448 P4110 MEMBAR
!#6 N9449 P4111 LD 20 -1 FP BE Pri
!#6 N9450 P4112 MEMBAR
!#6 N9451 P4113 BST 31 0x4280007b FP BE Pri
!#6 N9452 P4114 MEMBAR
!#6 N9453 P4115 BST 14 0x4280007c FP BE Pri
!#6 N9454 P4116 MEMBAR
!#6 N9455 P4117 BST 8 0x4280007d FP BE Pri
!#6 N9456 P4117 BST 9 0x4280007e FP BE Pri
!#6 N9457 P4118 MEMBAR
!#6 N9458 P4119 ST 25 0x300000a Int BE Pri
!#6 N9459 P4120 REPLACEMENT 14 Int BE Sec
!#6 N9460 P4121 REPLACEMENT 11 Int BE Nuc
!#6 N9461 P4122 MEMBAR
!#6 N9462 P4123 BST 10 0x4280007f FP BE Pri
!#6 N9463 P4124 MEMBAR
!#6 N9464 P4125 BST 28 0x42800080 FP BE Pri
!#6 N9465 P4126 MEMBAR
!#6 N9466 P4127 ST 21 0x42800081 FP BE Pri
!#6 N9467 P4128 MEMBAR
!#6 N9468 P4129 BST 21 0x42800082 FP BE Pri
!#6 N9469 P4129 BST 22 0x42800083 FP BE Pri
!#A N9468 N9469
!#6 N9470 P4129 BST 23 0x42800084 FP BE Pri
!#6 N9471 P4130 MEMBAR
!#6 N9472 P4131 REPLACEMENT 14 Int BE Pri
!#6 N9473 P4132 REPLACEMENT 31 Int BE Pri
!#6 N9474 P4133 MEMBAR
!#6 N9475 P4134 BLD 0 -1 FP BE Pri
!#6 N9476 P4134 BLD 1 -1 FP BE Pri
!#A N9475 N9476
!#6 N9477 P4134 BLD 2 -1 FP BE Pri
!#6 N9478 P4134 BLD 3 -1 FP BE Pri
!#6 N9479 P4134 BLD 4 -1 FP BE Pri
!#6 N9480 P4135 MEMBAR
!#6 N9481 P4136 REPLACEMENT 30 Int BE Sec
!#6 N9482 P4137 MEMBAR
!#6 N9483 P4138 BLD 11 -1 FP BE Pri
!#6 N9484 P4138 BLD 12 -1 FP BE Pri
!#A N9483 N9484
!#6 N9485 P4138 BLD 13 -1 FP BE Pri
!#6 N9486 P4139 MEMBAR
!#6 N9487 P4140 LD 30 -1 FP BE Pri
!#6 N9488 P4141 REPLACEMENT 4 Int BE Pri
!#6 N9489 P4142 REPLACEMENT 4 Int BE Pri
!#6 N9490 P4143 IDC_FLIP 31 Int BE Pri
!#6 N9491 P4144 MEMBAR
!#6 N9492 P4145 BST 30 0x42800085 FP BE Sec
!#6 N9493 P4146 MEMBAR
!#6 N9494 P4147 ST 20 0x42800086 FP BE Pri
!#6 N9495 P4148 ST 33 0x42800087 FP BE Pri
!#6 N9496 P4149 MEMBAR
!#6 N9497 P4150 BST 33 0x42800088 FP BE Pri
!#6 N9498 P4151 MEMBAR
!#6 N9499 P4152 REPLACEMENT 14 Int BE Pri
!#6 N9500 P4153 LD 25 -1 Int BE Pri
!#6 N9501 P4154 MEMBAR
!#6 N9502 P4155 BST 0 0x42800089 FP BE Sec
!#6 N9503 P4155 BST 1 0x4280008a FP BE Sec
!#A N9502 N9503
!#6 N9504 P4155 BST 2 0x4280008b FP BE Sec
!#6 N9505 P4155 BST 3 0x4280008c FP BE Sec
!#6 N9506 P4155 BST 4 0x4280008d FP BE Sec
!#6 N9507 P4156 MEMBAR
!#6 N9508 P4157 REPLACEMENT 5 Int BE Pri
!#6 N9509 P4158 REPLACEMENT 14 Int BE Pri
!#6 N9510 P4159 LD 29 -1 Int BE Sec
!#6 N9511 P4160 MEMBAR
!#6 N9512 P4161 BLD 5 -1 FP BE Pri
!#6 N9513 P4161 BLD 6 -1 FP BE Pri
!#6 N9514 P4162 MEMBAR
!#6 N9515 P4163 ST 30 0x4280008e FP BE Sec
!#6 N9516 P4164 REPLACEMENT 18 Int BE Pri
!#6 N9517 P4165 MEMBAR
!#6 N9518 P4166 BST 21 0x4280008f FP BE Pri
!#6 N9519 P4166 BST 22 0x42800090 FP BE Pri
!#A N9518 N9519
!#6 N9520 P4166 BST 23 0x42800091 FP BE Pri
!#6 N9521 P4167 MEMBAR
!#6 N9522 P4168 BLD 17 -1 FP BE Pri
!#6 N9523 P4169 MEMBAR
!#6 N9524 P4170 BLD 11 -1 FP BE Pri
!#6 N9525 P4170 BLD 12 -1 FP BE Pri
!#A N9524 N9525
!#6 N9526 P4170 BLD 13 -1 FP BE Pri
!#6 N9527 P4171 MEMBAR
!#6 N9528 P4172 ST 22 0x42800092 FP BE Pri
!#6 N9529 P4173 ST 15 0x42800093 FP BE Nuc
!#6 N9530 P4174 MEMBAR
!#6 N9531 P4175 BST 30 0x42800094 FP BE Pri
!#6 N9532 P4176 MEMBAR
!#6 N9533 P4177 BLD 15 -1 FP BE Pri
!#6 N9534 P4178 MEMBAR
!#6 N9535 P4179 REPLACEMENT 7 Int BE Pri
!#6 N9536 P4180 MEMBAR
!#6 N9537 P4181 BLD 11 -1 FP BE Sec
!#6 N9538 P4181 BLD 12 -1 FP BE Sec
!#A N9537 N9538
!#6 N9539 P4181 BLD 13 -1 FP BE Sec
!#6 N9540 P4182 MEMBAR
!#6 N9541 P4183 REPLACEMENT 9 Int BE Pri
!#6 N9542 P4184 REPLACEMENT 23 Int BE Pri
!#6 N9543 P4185 MEMBAR
!#6 N9544 P4186 BLD 11 -1 FP BE Pri
!#6 N9545 P4186 BLD 12 -1 FP BE Pri
!#A N9544 N9545
!#6 N9546 P4186 BLD 13 -1 FP BE Pri
!#6 N9547 P4187 MEMBAR
!#6 N9548 P4188 LD 27 -1 Int BE Pri
!#6 N9549 P4189 LD 8 -1 FP BE Sec
!#6 N9550 P4190 IDC_FLIP 18 Int BE Pri
!#6 N9551 P4191 MEMBAR
!#6 N9552 P4192 BST 18 0x42800095 FP BE Pri
!#6 N9553 P4193 MEMBAR
!#6 N9554 P4194 BLD 26 -1 FP BE Pri
!#6 N9555 P4194 BLD 27 -1 FP BE Pri
!#6 N9556 P4195 MEMBAR
!#6 N9557 P4196 REPLACEMENT 22 Int BE Pri
!#6 N9558 P4197 MEMBAR
!#6 N9559 P4198 ST 0 0x42800096 FP BE Pri Loop_exit
!#6 N9560 P4089 REPLACEMENT 4 Int BE Pri Loop_entry
!#6 N9561 P4090 LD 9 -1 Int BE Pri
!#6 N9562 P4091 LD 33 -1 Int BE Pri
!#6 N9563 P4092 REPLACEMENT 26 Int BE Nuc
!#6 N9564 P4093 IDC_FLIP 11 Int BE Pri
!#6 N9565 P4094 LD 22 -1 Int BE Pri
!#6 N9566 P4095 MEMBAR
!#6 N9567 P4096 BLD 5 -1 FP BE Pri
!#6 N9568 P4096 BLD 6 -1 FP BE Pri
!#6 N9569 P4097 MEMBAR
!#6 N9570 P4098 BLD 5 -1 FP BE Pri
!#6 N9571 P4098 BLD 6 -1 FP BE Pri
!#6 N9572 P4099 MEMBAR
!#6 N9573 P4100 ST 27 0x300000b Int BE Pri
!#6 N9574 P4101 ST 29 0x42800097 FP BE Sec
!#6 N9575 P4102 MEMBAR
!#6 N9576 P4103 BLD 33 -1 FP BE Pri
!#6 N9577 P4104 MEMBAR
!#6 N9578 P4105 LD 28 -1 Int BE Pri
!#6 N9579 P4106 REPLACEMENT 7 Int BE Pri
!#6 N9580 P4107 LD 32 -1 Int BE Pri
!#6 N9581 P4108 MEMBAR
!#6 N9582 P4109 BST 31 0x42800098 FP BE Pri
!#6 N9583 P4110 MEMBAR
!#6 N9584 P4111 LD 20 -1 FP BE Pri
!#6 N9585 P4112 MEMBAR
!#6 N9586 P4113 BST 31 0x42800099 FP BE Pri
!#6 N9587 P4114 MEMBAR
!#6 N9588 P4115 BST 14 0x4280009a FP BE Pri
!#6 N9589 P4116 MEMBAR
!#6 N9590 P4117 BST 8 0x4280009b FP BE Pri
!#6 N9591 P4117 BST 9 0x4280009c FP BE Pri
!#6 N9592 P4118 MEMBAR
!#6 N9593 P4119 ST 25 0x300000c Int BE Pri
!#6 N9594 P4120 REPLACEMENT 14 Int BE Sec
!#6 N9595 P4121 REPLACEMENT 11 Int BE Nuc
!#6 N9596 P4122 MEMBAR
!#6 N9597 P4123 BST 10 0x4280009d FP BE Pri
!#6 N9598 P4124 MEMBAR
!#6 N9599 P4125 BST 28 0x4280009e FP BE Pri
!#6 N9600 P4126 MEMBAR
!#6 N9601 P4127 ST 21 0x4280009f FP BE Pri
!#6 N9602 P4128 MEMBAR
!#6 N9603 P4129 BST 21 0x428000a0 FP BE Pri
!#6 N9604 P4129 BST 22 0x428000a1 FP BE Pri
!#A N9603 N9604
!#6 N9605 P4129 BST 23 0x428000a2 FP BE Pri
!#6 N9606 P4130 MEMBAR
!#6 N9607 P4131 REPLACEMENT 14 Int BE Pri
!#6 N9608 P4132 REPLACEMENT 31 Int BE Pri
!#6 N9609 P4133 MEMBAR
!#6 N9610 P4134 BLD 0 -1 FP BE Pri
!#6 N9611 P4134 BLD 1 -1 FP BE Pri
!#A N9610 N9611
!#6 N9612 P4134 BLD 2 -1 FP BE Pri
!#6 N9613 P4134 BLD 3 -1 FP BE Pri
!#6 N9614 P4134 BLD 4 -1 FP BE Pri
!#6 N9615 P4135 MEMBAR
!#6 N9616 P4136 REPLACEMENT 30 Int BE Sec
!#6 N9617 P4137 MEMBAR
!#6 N9618 P4138 BLD 11 -1 FP BE Pri
!#6 N9619 P4138 BLD 12 -1 FP BE Pri
!#A N9618 N9619
!#6 N9620 P4138 BLD 13 -1 FP BE Pri
!#6 N9621 P4139 MEMBAR
!#6 N9622 P4140 LD 30 -1 FP BE Pri
!#6 N9623 P4141 REPLACEMENT 4 Int BE Pri
!#6 N9624 P4142 REPLACEMENT 4 Int BE Pri
!#6 N9625 P4143 IDC_FLIP 31 Int BE Pri
!#6 N9626 P4144 MEMBAR
!#6 N9627 P4145 BST 30 0x428000a3 FP BE Sec
!#6 N9628 P4146 MEMBAR
!#6 N9629 P4147 ST 20 0x428000a4 FP BE Pri
!#6 N9630 P4148 ST 33 0x428000a5 FP BE Pri
!#6 N9631 P4149 MEMBAR
!#6 N9632 P4150 BST 33 0x428000a6 FP BE Pri
!#6 N9633 P4151 MEMBAR
!#6 N9634 P4152 REPLACEMENT 14 Int BE Pri
!#6 N9635 P4153 LD 25 -1 Int BE Pri
!#6 N9636 P4154 MEMBAR
!#6 N9637 P4155 BST 0 0x428000a7 FP BE Sec
!#6 N9638 P4155 BST 1 0x428000a8 FP BE Sec
!#A N9637 N9638
!#6 N9639 P4155 BST 2 0x428000a9 FP BE Sec
!#6 N9640 P4155 BST 3 0x428000aa FP BE Sec
!#6 N9641 P4155 BST 4 0x428000ab FP BE Sec
!#6 N9642 P4156 MEMBAR
!#6 N9643 P4157 REPLACEMENT 5 Int BE Pri
!#6 N9644 P4158 REPLACEMENT 14 Int BE Pri
!#6 N9645 P4159 LD 29 -1 Int BE Sec
!#6 N9646 P4160 MEMBAR
!#6 N9647 P4161 BLD 5 -1 FP BE Pri
!#6 N9648 P4161 BLD 6 -1 FP BE Pri
!#6 N9649 P4162 MEMBAR
!#6 N9650 P4163 ST 30 0x428000ac FP BE Sec
!#6 N9651 P4164 REPLACEMENT 18 Int BE Pri
!#6 N9652 P4165 MEMBAR
!#6 N9653 P4166 BST 21 0x428000ad FP BE Pri
!#6 N9654 P4166 BST 22 0x428000ae FP BE Pri
!#A N9653 N9654
!#6 N9655 P4166 BST 23 0x428000af FP BE Pri
!#6 N9656 P4167 MEMBAR
!#6 N9657 P4168 BLD 17 -1 FP BE Pri
!#6 N9658 P4169 MEMBAR
!#6 N9659 P4170 BLD 11 -1 FP BE Pri
!#6 N9660 P4170 BLD 12 -1 FP BE Pri
!#A N9659 N9660
!#6 N9661 P4170 BLD 13 -1 FP BE Pri
!#6 N9662 P4171 MEMBAR
!#6 N9663 P4172 ST 22 0x428000b0 FP BE Pri
!#6 N9664 P4173 ST 15 0x428000b1 FP BE Nuc
!#6 N9665 P4174 MEMBAR
!#6 N9666 P4175 BST 30 0x428000b2 FP BE Pri
!#6 N9667 P4176 MEMBAR
!#6 N9668 P4177 BLD 15 -1 FP BE Pri
!#6 N9669 P4178 MEMBAR
!#6 N9670 P4179 REPLACEMENT 7 Int BE Pri
!#6 N9671 P4180 MEMBAR
!#6 N9672 P4181 BLD 11 -1 FP BE Sec
!#6 N9673 P4181 BLD 12 -1 FP BE Sec
!#A N9672 N9673
!#6 N9674 P4181 BLD 13 -1 FP BE Sec
!#6 N9675 P4182 MEMBAR
!#6 N9676 P4183 REPLACEMENT 9 Int BE Pri
!#6 N9677 P4184 REPLACEMENT 23 Int BE Pri
!#6 N9678 P4185 MEMBAR
!#6 N9679 P4186 BLD 11 -1 FP BE Pri
!#6 N9680 P4186 BLD 12 -1 FP BE Pri
!#A N9679 N9680
!#6 N9681 P4186 BLD 13 -1 FP BE Pri
!#6 N9682 P4187 MEMBAR
!#6 N9683 P4188 LD 27 -1 Int BE Pri
!#6 N9684 P4189 LD 8 -1 FP BE Sec
!#6 N9685 P4190 IDC_FLIP 18 Int BE Pri
!#6 N9686 P4191 MEMBAR
!#6 N9687 P4192 BST 18 0x428000b3 FP BE Pri
!#6 N9688 P4193 MEMBAR
!#6 N9689 P4194 BLD 26 -1 FP BE Pri
!#6 N9690 P4194 BLD 27 -1 FP BE Pri
!#6 N9691 P4195 MEMBAR
!#6 N9692 P4196 REPLACEMENT 22 Int BE Pri
!#6 N9693 P4197 MEMBAR
!#6 N9694 P4198 ST 0 0x428000b4 FP BE Pri Loop_exit
!#6 N9695 P4199 MEMBAR
!#6 N9696 P4200 BLD 29 -1 FP BE Pri
!#6 N9697 P4201 MEMBAR
!#6 N9698 P4202 BLD 33 -1 FP BE Sec
!#6 N9699 P4203 MEMBAR
!#6 N9700 P4204 REPLACEMENT 20 Int BE Sec
!#6 N9701 P4205 MEMBAR
!#6 N9702 P4206 BST 5 0x428000b5 FP BE Pri
!#6 N9703 P4206 BST 6 0x428000b6 FP BE Pri
!#6 N9704 P4207 MEMBAR
!#6 N9705 P4208 ST 9 0x428000b7 FP BE Nuc
!#6 N9706 P4209 MEMBAR
!#6 N9707 P4210 BLD 0 -1 FP BE Pri
!#6 N9708 P4210 BLD 1 -1 FP BE Pri
!#A N9707 N9708
!#6 N9709 P4210 BLD 2 -1 FP BE Pri
!#6 N9710 P4210 BLD 3 -1 FP BE Pri
!#6 N9711 P4210 BLD 4 -1 FP BE Pri
!#6 N9712 P4211 MEMBAR
!#6 N9713 P4212 BST 28 0x428000b8 FP BE Pri
!#6 N9714 P4213 MEMBAR
!#6 N9715 P4214 BST 30 0x428000b9 FP BE Pri
!#6 N9716 P4215 MEMBAR
!#6 N9717 P4216 REPLACEMENT 4 Int BE Pri
!#6 N9718 P4217 REPLACEMENT 24 Int BE Sec
!#6 N9719 P4218 LD 22 -1 Int BE Pri
!#6 N9720 P4219 LD 14 -1 FP BE Sec
!#6 N9721 P4220 MEMBAR
!#6 N9722 P4221 BST 0 0x428000ba FP BE Pri
!#6 N9723 P4221 BST 1 0x428000bb FP BE Pri
!#A N9722 N9723
!#6 N9724 P4221 BST 2 0x428000bc FP BE Pri
!#6 N9725 P4221 BST 3 0x428000bd FP BE Pri
!#6 N9726 P4221 BST 4 0x428000be FP BE Pri
!#6 N9727 P4222 MEMBAR
!#6 N9728 P4223 REPLACEMENT 5 Int BE Pri
!#6 N9729 P4224 MEMBAR
!#6 N9730 P4225 BST 5 0x428000bf FP BE Pri
!#6 N9731 P4225 BST 6 0x428000c0 FP BE Pri
!#6 N9732 P4226 MEMBAR
!#6 N9733 P4227 BST 16 0x428000c1 FP BE Pri
!#6 N9734 P4228 MEMBAR
!#6 N9735 P4229 REPLACEMENT 30 Int BE Nuc
!#6 N9736 P4230 LD 4 -1 Int BE Pri
!#6 N9737 P4231 MEMBAR
!#6 N9738 P4232 BSTC 11 0x428000c2 FP BE Pri
!#6 N9739 P4232 BSTC 12 0x428000c3 FP BE Pri
!#A N9738 N9739
!#6 N9740 P4232 BSTC 13 0x428000c4 FP BE Pri
!#6 N9741 P4233 MEMBAR
!#6 N9742 P4234 BLD 31 -1 FP BE Pri
!#6 N9743 P4235 MEMBAR
!#6 N9744 P4236 LD 6 -1 Int BE Pri
!#6 N9745 P4237 LD 2 -1 FP BE Pri
!#6 N9746 P4238 MEMBAR
!#6 N9747 P4239 BLD 18 -1 FP BE Pri
!#6 N9748 P4240 MEMBAR
!#6 N9749 P4241 BLD 0 -1 FP BE Pri
!#6 N9750 P4241 BLD 1 -1 FP BE Pri
!#A N9749 N9750
!#6 N9751 P4241 BLD 2 -1 FP BE Pri
!#6 N9752 P4241 BLD 3 -1 FP BE Pri
!#6 N9753 P4241 BLD 4 -1 FP BE Pri
!#6 N9754 P4242 MEMBAR
!#6 N9755 P4243 BST 32 0x428000c5 FP BE Pri
!#6 N9756 P4244 MEMBAR
!#6 N9757 P4245 LD 8 -1 FP BE Pri
!#6 N9758 P4246 PREFETCH 31 Int BE Pri
!#6 N9759 P4247 MEMBAR
!#6 N9760 P4248 BLD 0 -1 FP BE Pri
!#6 N9761 P4248 BLD 1 -1 FP BE Pri
!#A N9760 N9761
!#6 N9762 P4248 BLD 2 -1 FP BE Pri
!#6 N9763 P4248 BLD 3 -1 FP BE Pri
!#6 N9764 P4248 BLD 4 -1 FP BE Pri
!#6 N9765 P4249 MEMBAR
!#6 N9766 P4250 ST 10 0x300000d Int BE Sec
!#6 N9767 P4251 ST 2 0x300000e Int BE Pri
!#6 N9768 P4252 ST 30 0x428000c6 FP BE Pri
!#6 N9769 P4253 REPLACEMENT 28 Int BE Pri
!#6 N9770 P4254 PREFETCH 1 Int BE Pri
!#6 N9771 P4255 REPLACEMENT 2 Int BE Pri
!#6 N9772 P4256 REPLACEMENT 32 Int BE Pri
!#6 N9773 P4257 ST 8 0x428000c7 FP BE Nuc
!#6 N9774 P4258 REPLACEMENT 32 Int BE Pri
!#6 N9775 P4259 ST 23 0x428000c8 FP BE Nuc
!#6 N9776 P4260 MEMBAR
!#6 N9777 P4261 BSTC 28 0x428000c9 FP BE Sec
!#6 N9778 P4262 MEMBAR
!#6 N9779 P4263 BLD 24 -1 FP BE Pri
!#6 N9780 P4263 BLD 25 -1 FP BE Pri
!#6 N9781 P4264 MEMBAR
!#6 N9782 P4265 LD 2 -1 FP BE Sec
!#6 N9783 P4266 ST 21 0x300000f Int BE Pri
!#6 N9784 P4267 ST 31 0x428000ca FP BE Pri
!#6 N9785 P4268 MEMBAR
!#6 N9786 P4269 BST 24 0x428000cb FP BE Pri
!#6 N9787 P4269 BST 25 0x428000cc FP BE Pri
!#6 N9788 P4270 MEMBAR
!#6 N9789 P4271 BSTC 0 0x428000cd FP BE Pri
!#6 N9790 P4271 BSTC 1 0x428000ce FP BE Pri
!#A N9789 N9790
!#6 N9791 P4271 BSTC 2 0x428000cf FP BE Pri
!#6 N9792 P4271 BSTC 3 0x428000d0 FP BE Pri
!#6 N9793 P4271 BSTC 4 0x428000d1 FP BE Pri
!#6 N9794 P4272 MEMBAR
!#6 N9795 P4273 ST 1 0x428000d2 FP BE Pri
!#6 N9796 P4274 REPLACEMENT 1 Int BE Pri
!#6 N9797 P4275 LD 10 -1 FP BE Pri
!#6 N9798 P4276 REPLACEMENT 26 Int BE Pri
!#6 N9799 P4277 REPLACEMENT 31 Int BE Pri
!#6 N9800 P4278 LD 8 -1 Int BE Pri
!#6 N9801 P4279 ST 8 0x428000d3 FP BE Pri
!#6 N9802 P4280 LD 26 -1 Int BE Pri
!#6 N9803 P4281 REPLACEMENT 6 Int BE Pri
!#6 N9804 P4282 REPLACEMENT 1 Int BE Pri
!#6 N9805 P4283 REPLACEMENT 5 Int BE Pri
!#6 N9806 P4284 MEMBAR
!#6 N9807 P4285 BST 11 0x428000d4 FP BE Pri
!#6 N9808 P4285 BST 12 0x428000d5 FP BE Pri
!#A N9807 N9808
!#6 N9809 P4285 BST 13 0x428000d6 FP BE Pri
!#6 N9810 P4286 MEMBAR
!#6 N9811 P4287 PREFETCH 9 Int BE Pri
!#6 N9812 P4288 LD 33 -1 FP BE Nuc
!#6 N9813 P4289 MEMBAR
!#6 N9814 P4290 BLD 30 -1 FP BE Pri
!#6 N9815 P4291 MEMBAR
!#6 N9816 P4292 BLD 0 -1 FP BE Pri
!#6 N9817 P4292 BLD 1 -1 FP BE Pri
!#A N9816 N9817
!#6 N9818 P4292 BLD 2 -1 FP BE Pri
!#6 N9819 P4292 BLD 3 -1 FP BE Pri
!#6 N9820 P4292 BLD 4 -1 FP BE Pri
!#6 N9821 P4293 MEMBAR
!#6 N9822 P4294 BLD 11 -1 FP BE Pri
!#6 N9823 P4294 BLD 12 -1 FP BE Pri
!#A N9822 N9823
!#6 N9824 P4294 BLD 13 -1 FP BE Pri
!#6 N9825 P4295 MEMBAR
!#6 N9826 P4296 BLD 24 -1 FP BE Pri
!#6 N9827 P4296 BLD 25 -1 FP BE Pri
!#6 N9828 P4297 MEMBAR
!#6 N9829 P4298 BST 11 0x428000d7 FP BE Sec
!#6 N9830 P4298 BST 12 0x428000d8 FP BE Sec
!#A N9829 N9830
!#6 N9831 P4298 BST 13 0x428000d9 FP BE Sec
!#6 N9832 P4299 MEMBAR
!#6 N9833 P4300 LD 6 -1 FP BE Pri
!#6 N9834 P4301 REPLACEMENT 27 Int BE Pri
!#6 N9835 P4302 MEMBAR
!#6 N9836 P4303 BLD 7 -1 FP BE Sec
!#6 N9837 P4304 MEMBAR
!#6 N9838 P4305 BLD 21 -1 FP BE Pri
!#6 N9839 P4305 BLD 22 -1 FP BE Pri
!#A N9838 N9839
!#6 N9840 P4305 BLD 23 -1 FP BE Pri
!#6 N9841 P4306 MEMBAR
!#6 N9842 P4307 ST 1 0x428000da FP BE Sec
!#6 N9843 P4308 MEMBAR
!#6 N9844 P4309 BST 29 0x428000db FP BE Pri
!#6 N9845 P4310 MEMBAR
!#6 N9846 P4311 BLD 10 -1 FP BE Pri
!#6 N9847 P4312 MEMBAR
!#6 N9848 P4313 BST 10 0x428000dc FP BE Pri
!#6 N9849 P4314 MEMBAR
!#6 N9850 P4315 REPLACEMENT 21 Int BE Pri
!#6 N9851 P4316 REPLACEMENT 6 Int BE Pri
!#6 N9852 P4317 MEMBAR
!#6 N9853 P4318 BLD 30 -1 FP BE Pri
!#6 N9854 P4319 MEMBAR
!#6 N9855 P4320 BST 0 0x428000dd FP BE Pri
!#6 N9856 P4320 BST 1 0x428000de FP BE Pri
!#A N9855 N9856
!#6 N9857 P4320 BST 2 0x428000df FP BE Pri
!#6 N9858 P4320 BST 3 0x428000e0 FP BE Pri
!#6 N9859 P4320 BST 4 0x428000e1 FP BE Pri
!#6 N9860 P4321 MEMBAR
!#6 N9861 P4322 BST 16 0x428000e2 FP BE Pri
!#6 N9862 P4323 MEMBAR
!#6 N9863 P4324 REPLACEMENT 23 Int BE Pri
!#6 N9864 P4325 REPLACEMENT 5 Int BE Sec
!#6 N9865 P4326 REPLACEMENT 3 Int BE Nuc
!#6 N9866 P4327 LD 1 -1 Int BE Pri
!#6 N9867 P4328 REPLACEMENT 15 Int BE Pri
!#6 N9868 P4329 MEMBAR
!#6 N9869 P4330 BLD 28 -1 FP BE Pri
!#6 N9870 P4331 MEMBAR
!#6 N9871 P4332 REPLACEMENT 22 Int BE Pri
!#6 N9872 P4333 REPLACEMENT 20 Int BE Pri
!#6 N9873 P4334 REPLACEMENT 12 Int BE Pri
!#6 N9874 P4335 MEMBAR
!#6 N9875 P4336 BST 11 0x428000e3 FP BE Pri
!#6 N9876 P4336 BST 12 0x428000e4 FP BE Pri
!#A N9875 N9876
!#6 N9877 P4336 BST 13 0x428000e5 FP BE Pri
!#6 N9878 P4337 MEMBAR
!#6 N9879 P4338 ST 26 0x3000010 Int BE Sec
!#6 N9880 P4339 MEMBAR
!#6 N9881 P4340 BLD 33 -1 FP BE Pri
!#6 N9882 P4341 MEMBAR
!#6 N9883 P4342 BLD 26 -1 FP BE Pri
!#6 N9884 P4342 BLD 27 -1 FP BE Pri
!#6 N9885 P4343 MEMBAR
!#6 N9886 P4344 PREFETCH 1 Int BE Pri
!#6 N9887 P4345 LD 29 -1 Int BE Pri
!#6 N9888 P4346 MEMBAR
!#6 N9889 P4347 BST 14 0x428000e6 FP BE Pri
!#6 N9890 P4348 MEMBAR
!#6 N9891 P4349 LD 23 -1 FP BE Sec
!#6 N9892 P4350 REPLACEMENT 24 Int BE Sec
!#6 N9893 P4351 LD 24 -1 Int BE Pri
!#6 N9894 P4352 MEMBAR
!#6 N9895 P4353 BST 11 0x428000e7 FP BE Pri
!#6 N9896 P4353 BST 12 0x428000e8 FP BE Pri
!#A N9895 N9896
!#6 N9897 P4353 BST 13 0x428000e9 FP BE Pri
!#6 N9898 P4354 MEMBAR
!#6 N9899 P4355 ST 8 0x3000011 Int BE Sec
!#6 N9900 P4356 LD 4 -1 Int BE Pri
!#6 N9901 P4357 ST 6 0x3000012 Int BE Pri
!#6 N9902 P4358 MEMBAR
!#6 N9903 P4359 BST 5 0x428000ea FP BE Pri
!#6 N9904 P4359 BST 6 0x428000eb FP BE Pri
!#6 N9905 P4360 MEMBAR
!#6 N9906 P4361 BST 11 0x428000ec FP BE Pri
!#6 N9907 P4361 BST 12 0x428000ed FP BE Pri
!#A N9906 N9907
!#6 N9908 P4361 BST 13 0x428000ee FP BE Pri
!#6 N9909 P4362 MEMBAR
!#6 N9910 P4363 REPLACEMENT 1 Int BE Pri
!#6 N9911 P4364 REPLACEMENT 24 Int BE Nuc
!#6 N9912 P4365 REPLACEMENT 9 Int BE Pri
!#6 N9913 P4366 REPLACEMENT 2 Int BE Pri
!#6 N9914 P4367 REPLACEMENT 24 Int BE Pri
!#6 N9915 P4368 ST 29 0x3000013 Int BE Pri
!#6 N9916 P4369 MEMBAR
!#6 N9917 P4370 BST 17 0x428000ef FP BE Pri
!#6 N9918 P4371 MEMBAR
!#6 N9919 P4372 LD 17 -1 Int BE Nuc
!#6 N9920 P4373 MEMBAR
!#6 N9921 P4374 BST 21 0x428000f0 FP BE Sec
!#6 N9922 P4374 BST 22 0x428000f1 FP BE Sec
!#A N9921 N9922
!#6 N9923 P4374 BST 23 0x428000f2 FP BE Sec
!#6 N9924 P4375 MEMBAR
!#6 N9925 P4376 LD 17 -1 FP BE Pri
!#6 N9926 P4377 ST 12 0x428000f3 FP BE Pri
!#6 N9927 P4378 LD 17 -1 Int BE Pri
!#6 N9928 P4379 REPLACEMENT 29 Int BE Pri
!#6 N9929 P4380 REPLACEMENT 20 Int BE Pri
!#6 N9930 P4381 REPLACEMENT 31 Int BE Sec
!#6 N9931 P4382 REPLACEMENT 3 Int BE Pri
!#6 N9932 P4383 MEMBAR
!#6 N9933 P4384 BLD 26 -1 FP BE Pri
!#6 N9934 P4384 BLD 27 -1 FP BE Pri
!#6 N9935 P4385 MEMBAR
!#6 N9936 P4386 ST 22 0x428000f4 FP BE Pri
!#6 N9937 P4387 ST 27 0x3000014 Int BE Sec
!#6 N9938 P4388 REPLACEMENT 4 Int BE Pri
!#6 N9939 P4389 MEMBAR
!#6 N9940 P4390 BSTC 19 0x428000f5 FP BE Pri
!#6 N9941 P4391 MEMBAR
!#6 N9942 P4392 REPLACEMENT 33 Int BE Pri
!#6 N9943 P4393 ST 10 0x3000015 Int BE Pri
!#6 N9944 P4394 MEMBAR
!#6 N9945 P4395 BST 11 0x428000f6 FP BE Pri
!#6 N9946 P4395 BST 12 0x428000f7 FP BE Pri
!#A N9945 N9946
!#6 N9947 P4395 BST 13 0x428000f8 FP BE Pri
!#6 N9948 P4396 MEMBAR
!#6 N9949 P4397 REPLACEMENT 24 Int BE Sec
!#6 N9950 P4398 ST 9 0x428000f9 FP BE Pri
!#6 N9951 P4399 MEMBAR
!#6 N9952 P4400 BLD 0 -1 FP BE Sec
!#6 N9953 P4400 BLD 1 -1 FP BE Sec
!#A N9952 N9953
!#6 N9954 P4400 BLD 2 -1 FP BE Sec
!#6 N9955 P4400 BLD 3 -1 FP BE Sec
!#6 N9956 P4400 BLD 4 -1 FP BE Sec
!#6 N9957 P4401 MEMBAR
!#6 N9958 P4402 LD 21 -1 Int BE Pri
!#6 N9959 P4403 REPLACEMENT 17 Int BE Pri
!#6 N9960 P4404 MEMBAR
!#6 N9961 P4405 BST 0 0x428000fa FP BE Pri
!#6 N9962 P4405 BST 1 0x428000fb FP BE Pri
!#A N9961 N9962
!#6 N9963 P4405 BST 2 0x428000fc FP BE Pri
!#6 N9964 P4405 BST 3 0x428000fd FP BE Pri
!#6 N9965 P4405 BST 4 0x428000fe FP BE Pri
!#6 N9966 P4406 MEMBAR
!#6 N9967 P4407 REPLACEMENT 17 Int BE Pri
!#6 N9968 P4408 MEMBAR
!#6 N9969 P4409 BST 11 0x428000ff FP BE Pri
!#6 N9970 P4409 BST 12 0x42800100 FP BE Pri
!#A N9969 N9970
!#6 N9971 P4409 BST 13 0x42800101 FP BE Pri
!#6 N9972 P4410 MEMBAR
!#6 N9973 P4411 IDC_FLIP 3 Int BE Pri
!#6 N9974 P4412 REPLACEMENT 9 Int BE Pri
!#6 N9975 P4413 LD 14 -1 FP BE Nuc
!#6 N9976 P4414 ST 24 0x3000016 Int BE Pri
!#6 N9977 P4415 MEMBAR
!#6 N9978 P4416 BST 33 0x42800102 FP BE Pri
!#6 N9979 P4417 MEMBAR
!#6 N9980 P4418 BST 8 0x42800103 FP BE Pri
!#6 N9981 P4418 BST 9 0x42800104 FP BE Pri
!#6 N9982 P4419 MEMBAR
!#6 N9983 P4420 LD 15 -1 Int BE Nuc
!#6 N9984 P4421 MEMBAR
!#6 N9985 P4422 BLD 0 -1 FP BE Pri
!#6 N9986 P4422 BLD 1 -1 FP BE Pri
!#A N9985 N9986
!#6 N9987 P4422 BLD 2 -1 FP BE Pri
!#6 N9988 P4422 BLD 3 -1 FP BE Pri
!#6 N9989 P4422 BLD 4 -1 FP BE Pri
!#6 N9990 P4423 MEMBAR
!#6 N9991 P4424 REPLACEMENT 6 Int BE Pri
!#6 N9992 P4425 MEMBAR
!#6 N9993 P4426 BST 18 0x42800105 FP BE Pri
!#6 N9994 P4427 MEMBAR
!#6 N9995 P4428 BST 19 0x42800106 FP BE Pri
!#6 N9996 P4429 MEMBAR
!#6 N9997 P4430 BLD 16 -1 FP BE Sec
!#6 N9998 P4431 MEMBAR
!#6 N9999 P4432 BST 0 0x42800107 FP BE Pri
!#6 N10000 P4432 BST 1 0x42800108 FP BE Pri
!#A N9999 N10000
!#6 N10001 P4432 BST 2 0x42800109 FP BE Pri
!#6 N10002 P4432 BST 3 0x4280010a FP BE Pri
!#6 N10003 P4432 BST 4 0x4280010b FP BE Pri
!#6 N10004 P4433 MEMBAR
!#6 N10005 P4434 REPLACEMENT 20 Int BE Pri
!#6 N10006 P4435 ST 25 0x4280010c FP BE Sec
!#6 N10007 P4436 LD 13 -1 FP BE Sec
!#6 N10008 P4437 REPLACEMENT 0 Int BE Pri
!#6 N10009 P4438 REPLACEMENT 0 Int BE Pri
!#6 N10010 P4439 LD 29 -1 Int BE Pri
!#6 N10011 P4440 MEMBAR
!#6 N10012 P4441 BST 7 0x4280010d FP BE Pri
!#6 N10013 P4442 MEMBAR
!#6 N10014 P4443 BLD 24 -1 FP BE Pri
!#6 N10015 P4443 BLD 25 -1 FP BE Pri
!#6 N10016 P4444 MEMBAR
!#6 N10017 P4445 BLD 29 -1 FP BE Pri
!#6 N10018 P4446 MEMBAR
!#6 N10019 P4447 BLD 8 -1 FP BE Sec
!#6 N10020 P4447 BLD 9 -1 FP BE Sec
!#6 N10021 P4448 MEMBAR
!#6 N10022 P4449 BST 15 0x4280010e FP BE Pri
!#6 N10023 P4450 MEMBAR
!#6 N10024 P4451 PREFETCH 31 Int BE Pri
!#6 N10025 P4452 REPLACEMENT 23 Int BE Nuc
!#6 N10026 P4453 ST 2 0x4280010f FP BE Pri
!#6 N10027 P4454 IDC_FLIP 0 Int BE Pri
!#6 N10028 P4455 REPLACEMENT 15 Int BE Sec
!#6 N10029 P4456 LD 30 -1 Int BE Sec
!#6 N10030 P4457 REPLACEMENT 13 Int BE Pri
!#6 N10031 P4458 MEMBAR
!#6 N10032 P4459 BLD 26 -1 FP BE Pri
!#6 N10033 P4459 BLD 27 -1 FP BE Pri
!#6 N10034 P4460 MEMBAR
!#6 N10035 P4461 BSTC 0 0x42800110 FP BE Pri
!#6 N10036 P4461 BSTC 1 0x42800111 FP BE Pri
!#A N10035 N10036
!#6 N10037 P4461 BSTC 2 0x42800112 FP BE Pri
!#6 N10038 P4461 BSTC 3 0x42800113 FP BE Pri
!#6 N10039 P4461 BSTC 4 0x42800114 FP BE Pri
!#6 N10040 P4462 MEMBAR
!#6 N10041 P4463 BLD 11 -1 FP BE Pri
!#6 N10042 P4463 BLD 12 -1 FP BE Pri
!#A N10041 N10042
!#6 N10043 P4463 BLD 13 -1 FP BE Pri
!#6 N10044 P4464 MEMBAR
!#6 N10045 P4465 ST 16 0x3000017 Int BE Nuc
!#6 N10046 P4466 MEMBAR
!#6 N10047 P4467 BST 24 0x42800115 FP BE Sec
!#6 N10048 P4467 BST 25 0x42800116 FP BE Sec
!#6 N10049 P4468 MEMBAR
!#6 N10050 P4469 REPLACEMENT 19 Int BE Pri
!#6 N10051 P4470 LD 25 -1 FP BE Pri
!#6 N10052 P4471 IDC_FLIP 14 Int BE Pri
!#6 N10053 P4472 MEMBAR
!#6 N10054 P4473 BLD 28 -1 FP BE Pri
!#6 N10055 P4474 MEMBAR
!#6 N10056 P4475 BLD 5 -1 FP BE Pri
!#6 N10057 P4475 BLD 6 -1 FP BE Pri
!#6 N10058 P4476 MEMBAR
!#6 N10059 P4477 REPLACEMENT 10 Int BE Pri
!#6 N10060 P4478 LD 11 -1 FP BE Sec
!#6 N10061 P4479 LD 29 -1 FP BE Pri
!#6 N10062 P4480 LD 20 -1 Int BE Sec
!#6 N10063 P4481 REPLACEMENT 5 Int BE Sec
!#6 N10064 P4482 MEMBAR
!#6 N10065 P4483 BST 17 0x42800117 FP BE Pri
!#6 N10066 P4484 MEMBAR
!#6 N10067 P4485 BLD 24 -1 FP BE Pri
!#6 N10068 P4485 BLD 25 -1 FP BE Pri
!#6 N10069 P4486 MEMBAR
!#6 N10070 P4487 PREFETCH 13 Int BE Pri
!#6 N10071 P4488 MEMBAR
!#6 N10072 P4489 BST 24 0x42800118 FP BE Pri
!#6 N10073 P4489 BST 25 0x42800119 FP BE Pri
!#6 N10074 P4490 MEMBAR
!#6 N10075 P4491 REPLACEMENT 10 Int BE Pri
!#6 N10076 P4492 MEMBAR
!#6 N10077 P4493 BST 24 0x4280011a FP BE Pri
!#6 N10078 P4493 BST 25 0x4280011b FP BE Pri
!#6 N10079 P4494 MEMBAR
!#6 N10080 P4495 ST 28 0x3000018 Int BE Pri
!#6 N10081 P4496 LD 21 -1 Int LE Pri
!#6 N10082 P4497 LD 5 -1 FP BE Nuc
!#6 N10083 P4498 LD 3 -1 Int BE Pri
!#6 N10084 P4499 MEMBAR
!#6 N10085 P4500 BLD 11 -1 FP BE Sec
!#6 N10086 P4500 BLD 12 -1 FP BE Sec
!#A N10085 N10086
!#6 N10087 P4500 BLD 13 -1 FP BE Sec
!#6 N10088 P4501 MEMBAR
!#6 N10089 P4502 REPLACEMENT 27 Int BE Pri
!#6 N10090 P4503 LD 16 -1 Int BE Sec
!#6 N10091 P4504 LD 25 -1 FP BE Pri
!#6 N10092 P4505 REPLACEMENT 6 Int BE Pri
!#6 N10093 P4506 REPLACEMENT 19 Int BE Pri
!#6 N10094 P4507 MEMBAR
!#6 N10095 P4508 BLD 31 -1 FP BE Pri
!#6 N10096 P4509 MEMBAR
!#6 N10097 P4510 ST 32 0x3000019 Int BE Pri
!#6 N10098 P4511 REPLACEMENT 16 Int BE Pri
!#6 N10099 P4512 MEMBAR
!#6 N10100 P4513 BST 0 0x4280011c FP BE Sec
!#6 N10101 P4513 BST 1 0x4280011d FP BE Sec
!#A N10100 N10101
!#6 N10102 P4513 BST 2 0x4280011e FP BE Sec
!#6 N10103 P4513 BST 3 0x4280011f FP BE Sec
!#6 N10104 P4513 BST 4 0x42800120 FP BE Sec
!#6 N10105 P4514 MEMBAR
!#6 N10106 P4515 REPLACEMENT 17 Int BE Sec
!#6 N10107 P4516 REPLACEMENT 15 Int BE Pri
!#6 N10108 P4517 MEMBAR
!#6 N10109 P4518 BST 16 0x42800121 FP BE Pri
!#6 N10110 P4519 MEMBAR
!#6 N10111 P4520 BLD 21 -1 FP BE Pri
!#6 N10112 P4520 BLD 22 -1 FP BE Pri
!#A N10111 N10112
!#6 N10113 P4520 BLD 23 -1 FP BE Pri
!#6 N10114 P4521 MEMBAR
!#6 N10115 P4522 BST 15 0x42800122 FP BE Pri
!#6 N10116 P4523 MEMBAR
!#6 N10117 P4524 REPLACEMENT 16 Int BE Pri
!#6 N10118 P4525 MEMBAR
!#6 N10119 P4526 BST 15 0x42800123 FP BE Pri
!#6 N10120 P4527 MEMBAR
!#6 N10121 P4528 LD 17 -1 FP BE Pri
!#6 N10122 P4529 REPLACEMENT 24 Int BE Pri
!#6 N10123 P4530 REPLACEMENT 5 Int BE Pri
!#6 N10124 P4531 MEMBAR
!#6 N10125 P4532 BLD 0 -1 FP BE Pri
!#6 N10126 P4532 BLD 1 -1 FP BE Pri
!#A N10125 N10126
!#6 N10127 P4532 BLD 2 -1 FP BE Pri
!#6 N10128 P4532 BLD 3 -1 FP BE Pri
!#6 N10129 P4532 BLD 4 -1 FP BE Pri
!#6 N10130 P4533 MEMBAR
!#6 N10131 P4534 BST 26 0x42800124 FP BE Pri
!#6 N10132 P4534 BST 27 0x42800125 FP BE Pri
!#6 N10133 P4535 MEMBAR
!#6 N10134 P4536 BLD 16 -1 FP BE Pri
!#6 N10135 P4537 MEMBAR
!#6 N10136 P4538 ST 25 0x300001a Int BE Sec
!#6 N10137 P4539 LD 14 -1 Int BE Pri Loop_exit
!#6 N10138 P4540 MEMBAR
!#7 N10139 P4541 REPLACEMENT 19 Int BE Pri Loop_entry
!#7 N10140 P4542 MEMBAR
!#7 N10141 P4543 BST 24 0x43000001 FP BE Pri
!#7 N10142 P4543 BST 25 0x43000002 FP BE Pri
!#7 N10143 P4544 MEMBAR
!#7 N10144 P4545 BST 16 0x43000003 FP BE Sec
!#7 N10145 P4546 MEMBAR
!#7 N10146 P4547 BST 24 0x43000004 FP BE Pri
!#7 N10147 P4547 BST 25 0x43000005 FP BE Pri
!#7 N10148 P4548 MEMBAR
!#7 N10149 P4549 LD 8 -1 Int BE Pri
!#7 N10150 P4550 LD 22 -1 Int BE Pri
!#7 N10151 P4551 ST 8 0x43000006 FP BE Pri
!#7 N10152 P4552 MEMBAR
!#7 N10153 P4553 BSTC 26 0x43000007 FP BE Pri
!#7 N10154 P4553 BSTC 27 0x43000008 FP BE Pri
!#7 N10155 P4554 MEMBAR
!#7 N10156 P4555 LD 29 -1 Int BE Pri
!#7 N10157 P4556 REPLACEMENT 8 Int BE Pri
!#7 N10158 P4557 MEMBAR
!#7 N10159 P4558 BLD 0 -1 FP BE Pri
!#7 N10160 P4558 BLD 1 -1 FP BE Pri
!#A N10159 N10160
!#7 N10161 P4558 BLD 2 -1 FP BE Pri
!#7 N10162 P4558 BLD 3 -1 FP BE Pri
!#7 N10163 P4558 BLD 4 -1 FP BE Pri
!#7 N10164 P4559 MEMBAR
!#7 N10165 P4560 LD 31 -1 Int BE Nuc
!#7 N10166 P4561 ST 2 0x3800001 Int BE Nuc
!#7 N10167 P4562 MEMBAR
!#7 N10168 P4563 BST 14 0x43000009 FP BE Pri
!#7 N10169 P4564 MEMBAR
!#7 N10170 P4565 LD 17 -1 Int BE Sec
!#7 N10171 P4566 LD 20 -1 FP BE Pri
!#7 N10172 P4567 MEMBAR
!#7 N10173 P4568 BLD 21 -1 FP BE Pri
!#7 N10174 P4568 BLD 22 -1 FP BE Pri
!#A N10173 N10174
!#7 N10175 P4568 BLD 23 -1 FP BE Pri
!#7 N10176 P4569 MEMBAR
!#7 N10177 P4570 LD 28 -1 Int BE Pri
!#7 N10178 P4571 REPLACEMENT 4 Int BE Pri
!#7 N10179 P4572 LD 18 -1 FP BE Pri
!#7 N10180 P4573 REPLACEMENT 6 Int BE Pri
!#7 N10181 P4574 REPLACEMENT 13 Int BE Pri
!#7 N10182 P4575 MEMBAR
!#7 N10183 P4576 BSTC 11 0x4300000a FP BE Pri
!#7 N10184 P4576 BSTC 12 0x4300000b FP BE Pri
!#A N10183 N10184
!#7 N10185 P4576 BSTC 13 0x4300000c FP BE Pri
!#7 N10186 P4577 MEMBAR
!#7 N10187 P4578 REPLACEMENT 15 Int BE Sec
!#7 N10188 P4579 ST 23 0x4300000d FP BE Pri
!#7 N10189 P4580 REPLACEMENT 22 Int BE Nuc
!#7 N10190 P4581 ST 8 0x3800002 Int BE Nuc
!#7 N10191 P4582 ST 16 0x3800003 Int BE Nuc
!#7 N10192 P4583 MEMBAR
!#7 N10193 P4584 BLD 16 -1 FP BE Pri
!#7 N10194 P4585 MEMBAR
!#7 N10195 P4586 REPLACEMENT 19 Int BE Nuc
!#7 N10196 P4587 MEMBAR
!#7 N10197 P4588 BLD 5 -1 FP BE Pri
!#7 N10198 P4588 BLD 6 -1 FP BE Pri
!#7 N10199 P4589 MEMBAR
!#7 N10200 P4590 BST 28 0x4300000e FP BE Sec
!#7 N10201 P4591 MEMBAR
!#7 N10202 P4592 BSTC 18 0x4300000f FP BE Pri
!#7 N10203 P4593 MEMBAR
!#7 N10204 P4594 BST 8 0x43000010 FP BE Pri
!#7 N10205 P4594 BST 9 0x43000011 FP BE Pri
!#7 N10206 P4595 MEMBAR
!#7 N10207 P4596 BST 24 0x43000012 FP BE Pri
!#7 N10208 P4596 BST 25 0x43000013 FP BE Pri
!#7 N10209 P4597 MEMBAR
!#7 N10210 P4598 BLD 24 -1 FP BE Pri
!#7 N10211 P4598 BLD 25 -1 FP BE Pri
!#7 N10212 P4599 MEMBAR
!#7 N10213 P4600 BLD 21 -1 FP BE Pri
!#7 N10214 P4600 BLD 22 -1 FP BE Pri
!#A N10213 N10214
!#7 N10215 P4600 BLD 23 -1 FP BE Pri
!#7 N10216 P4601 MEMBAR
!#7 N10217 P4602 REPLACEMENT 14 Int BE Pri
!#7 N10218 P4603 IDC_FLIP 22 Int BE Pri
!#7 N10219 P4604 ST 16 0x43000014 FP BE Pri
!#7 N10220 P4605 MEMBAR
!#7 N10221 P4606 BST 21 0x43000015 FP BE Pri
!#7 N10222 P4606 BST 22 0x43000016 FP BE Pri
!#A N10221 N10222
!#7 N10223 P4606 BST 23 0x43000017 FP BE Pri
!#7 N10224 P4607 MEMBAR
!#7 N10225 P4608 REPLACEMENT 12 Int BE Sec
!#7 N10226 P4609 ST 23 0x3800004 Int BE Pri
!#7 N10227 P4610 REPLACEMENT 19 Int BE Pri
!#7 N10228 P4611 REPLACEMENT 14 Int BE Sec
!#7 N10229 P4612 REPLACEMENT 27 Int BE Pri
!#7 N10230 P4613 REPLACEMENT 6 Int BE Pri
!#7 N10231 P4614 REPLACEMENT 10 Int BE Pri
!#7 N10232 P4615 ST 7 0x43000018 FP BE Pri
!#7 N10233 P4616 ST 18 0x43000019 FP BE Pri
!#7 N10234 P4617 REPLACEMENT 2 Int BE Pri
!#7 N10235 P4618 REPLACEMENT 13 Int BE Pri
!#7 N10236 P4619 REPLACEMENT 0 Int BE Pri
!#7 N10237 P4620 PREFETCH 7 Int BE Pri
!#7 N10238 P4621 ST 12 0x3800005 Int BE Nuc
!#7 N10239 P4622 MEMBAR
!#7 N10240 P4623 BLD 11 -1 FP BE Pri
!#7 N10241 P4623 BLD 12 -1 FP BE Pri
!#A N10240 N10241
!#7 N10242 P4623 BLD 13 -1 FP BE Pri
!#7 N10243 P4624 MEMBAR
!#7 N10244 P4625 BLD 24 -1 FP BE Pri
!#7 N10245 P4625 BLD 25 -1 FP BE Pri
!#7 N10246 P4626 MEMBAR
!#7 N10247 P4627 LD 15 -1 Int BE Sec
!#7 N10248 P4628 MEMBAR
!#7 N10249 P4629 BSTC 17 0x4300001a FP BE Sec
!#7 N10250 P4630 MEMBAR
!#7 N10251 P4631 LD 2 -1 Int BE Pri
!#7 N10252 P4632 REPLACEMENT 30 Int BE Pri
!#7 N10253 P4633 MEMBAR
!#7 N10254 P4634 BLD 33 -1 FP BE Pri
!#7 N10255 P4635 MEMBAR
!#7 N10256 P4636 LD 23 -1 FP BE Pri
!#7 N10257 P4637 ST 2 0x3800006 Int BE Pri
!#7 N10258 P4638 REPLACEMENT 18 Int BE Pri
!#7 N10259 P4639 REPLACEMENT 33 Int BE Nuc
!#7 N10260 P4640 MEMBAR
!#7 N10261 P4641 BST 32 0x4300001b FP BE Pri
!#7 N10262 P4642 MEMBAR
!#7 N10263 P4643 LD 2 -1 Int BE Pri
!#7 N10264 P4644 MEMBAR
!#7 N10265 P4645 BST 29 0x4300001c FP BE Pri
!#7 N10266 P4646 MEMBAR
!#7 N10267 P4647 ST 3 0x3800007 Int BE Pri
!#7 N10268 P4648 MEMBAR
!#7 N10269 P4649 BST 29 0x4300001d FP BE Pri
!#7 N10270 P4650 MEMBAR
!#7 N10271 P4651 BST 11 0x4300001e FP BE Pri
!#7 N10272 P4651 BST 12 0x4300001f FP BE Pri
!#A N10271 N10272
!#7 N10273 P4651 BST 13 0x43000020 FP BE Pri
!#7 N10274 P4652 MEMBAR
!#7 N10275 P4653 REPLACEMENT 13 Int BE Pri
!#7 N10276 P4654 ST 16 0x43000021 FP BE Pri
!#7 N10277 P4655 LD 16 -1 Int BE Pri
!#7 N10278 P4656 REPLACEMENT 10 Int BE Pri
!#7 N10279 P4657 LD 8 -1 Int BE Pri
!#7 N10280 P4658 MEMBAR
!#7 N10281 P4659 BLD 26 -1 FP BE Pri
!#7 N10282 P4659 BLD 27 -1 FP BE Pri
!#7 N10283 P4660 MEMBAR
!#7 N10284 P4661 BST 15 0x43000022 FP BE Pri
!#7 N10285 P4662 MEMBAR
!#7 N10286 P4663 BST 21 0x43000023 FP BE Pri
!#7 N10287 P4663 BST 22 0x43000024 FP BE Pri
!#A N10286 N10287
!#7 N10288 P4663 BST 23 0x43000025 FP BE Pri
!#7 N10289 P4664 MEMBAR
!#7 N10290 P4665 BST 14 0x43000026 FP BE Sec
!#7 N10291 P4666 MEMBAR
!#7 N10292 P4667 BST 24 0x43000027 FP BE Pri
!#7 N10293 P4667 BST 25 0x43000028 FP BE Pri
!#7 N10294 P4668 MEMBAR
!#7 N10295 P4669 REPLACEMENT 16 Int BE Nuc
!#7 N10296 P4670 ST 28 0x3800008 Int BE Pri
!#7 N10297 P4671 MEMBAR
!#7 N10298 P4672 BST 24 0x43000029 FP BE Pri
!#7 N10299 P4672 BST 25 0x4300002a FP BE Pri
!#7 N10300 P4673 MEMBAR
!#7 N10301 P4674 BLD 26 -1 FP BE Sec
!#7 N10302 P4674 BLD 27 -1 FP BE Sec
!#7 N10303 P4675 MEMBAR
!#7 N10304 P4676 BST 17 0x4300002b FP BE Pri
!#7 N10305 P4677 MEMBAR
!#7 N10306 P4678 REPLACEMENT 26 Int BE Nuc
!#7 N10307 P4679 REPLACEMENT 33 Int BE Pri
!#7 N10308 P4680 MEMBAR
!#7 N10309 P4681 BLD 10 -1 FP BE Pri
!#7 N10310 P4682 MEMBAR
!#7 N10311 P4683 ST 4 0x3800009 Int BE Pri
!#7 N10312 P4684 REPLACEMENT 33 Int BE Pri
!#7 N10313 P4685 MEMBAR
!#7 N10314 P4686 BLD 26 -1 FP BE Pri
!#7 N10315 P4686 BLD 27 -1 FP BE Pri
!#7 N10316 P4687 MEMBAR
!#7 N10317 P4688 ST 17 0x4300002c FP BE Pri
!#7 N10318 P4689 ST 8 0x380000a Int BE Pri
!#7 N10319 P4690 MEMBAR
!#7 N10320 P4691 BSTC 0 0x4300002d FP BE Pri
!#7 N10321 P4691 BSTC 1 0x4300002e FP BE Pri
!#A N10320 N10321
!#7 N10322 P4691 BSTC 2 0x4300002f FP BE Pri
!#7 N10323 P4691 BSTC 3 0x43000030 FP BE Pri
!#7 N10324 P4691 BSTC 4 0x43000031 FP BE Pri
!#7 N10325 P4692 MEMBAR
!#7 N10326 P4693 REPLACEMENT 17 Int BE Pri
!#7 N10327 P4694 ST 19 0x43000032 FP BE Pri
!#7 N10328 P4695 LD 22 -1 FP BE Pri
!#7 N10329 P4696 LD 7 -1 Int BE Pri
!#7 N10330 P4697 MEMBAR
!#7 N10331 P4698 BLD 26 -1 FP BE Sec
!#7 N10332 P4698 BLD 27 -1 FP BE Sec
!#7 N10333 P4699 MEMBAR
!#7 N10334 P4700 LD 6 -1 Int BE Sec
!#7 N10335 P4701 IDC_FLIP 12 Int BE Pri
!#7 N10336 P4702 MEMBAR
!#7 N10337 P4703 BST 16 0x43000033 FP BE Pri
!#7 N10338 P4704 MEMBAR
!#7 N10339 P4705 BST 0 0x43000034 FP BE Pri
!#7 N10340 P4705 BST 1 0x43000035 FP BE Pri
!#A N10339 N10340
!#7 N10341 P4705 BST 2 0x43000036 FP BE Pri
!#7 N10342 P4705 BST 3 0x43000037 FP BE Pri
!#7 N10343 P4705 BST 4 0x43000038 FP BE Pri
!#7 N10344 P4706 MEMBAR
!#7 N10345 P4707 REPLACEMENT 5 Int BE Pri
!#7 N10346 P4708 MEMBAR
!#7 N10347 P4709 BST 17 0x43000039 FP BE Pri
!#7 N10348 P4710 MEMBAR
!#7 N10349 P4711 BLD 31 -1 FP BE Pri
!#7 N10350 P4712 MEMBAR
!#7 N10351 P4713 BLD 10 -1 FP BE Pri
!#7 N10352 P4714 MEMBAR
!#7 N10353 P4715 LD 28 -1 Int BE Pri
!#7 N10354 P4716 LD 21 -1 FP BE Pri
!#7 N10355 P4717 ST 5 0x4300003a FP BE Sec
!#7 N10356 P4718 REPLACEMENT 11 Int BE Pri
!#7 N10357 P4719 MEMBAR
!#7 N10358 P4720 BST 26 0x4300003b FP BE Pri
!#7 N10359 P4720 BST 27 0x4300003c FP BE Pri
!#7 N10360 P4721 MEMBAR
!#7 N10361 P4722 PREFETCH 3 Int BE Pri
!#7 N10362 P4723 MEMBAR
!#7 N10363 P4724 BST 0 0x4300003d FP BE Pri
!#7 N10364 P4724 BST 1 0x4300003e FP BE Pri
!#A N10363 N10364
!#7 N10365 P4724 BST 2 0x4300003f FP BE Pri
!#7 N10366 P4724 BST 3 0x43000040 FP BE Pri
!#7 N10367 P4724 BST 4 0x43000041 FP BE Pri
!#7 N10368 P4725 MEMBAR
!#7 N10369 P4726 LD 22 -1 FP BE Pri
!#7 N10370 P4727 MEMBAR
!#7 N10371 P4728 BST 30 0x43000042 FP BE Pri
!#7 N10372 P4729 MEMBAR
!#7 N10373 P4730 BST 17 0x43000043 FP BE Pri
!#7 N10374 P4731 MEMBAR
!#7 N10375 P4732 BST 31 0x43000044 FP BE Pri
!#7 N10376 P4733 MEMBAR
!#7 N10377 P4734 ST 1 0x380000b Int BE Pri
!#7 N10378 P4735 ST 16 0x43000045 FP BE Pri
!#7 N10379 P4736 REPLACEMENT 31 Int BE Sec
!#7 N10380 P4737 MEMBAR
!#7 N10381 P4738 BLD 33 -1 FP BE Pri
!#7 N10382 P4739 MEMBAR
!#7 N10383 P4740 REPLACEMENT 7 Int BE Pri
!#7 N10384 P4741 ST 1 0x43000046 FP BE Sec
!#7 N10385 P4742 ST 31 0x43000047 FP BE Sec
!#7 N10386 P4743 REPLACEMENT 32 Int BE Pri
!#7 N10387 P4744 MEMBAR
!#7 N10388 P4745 BST 26 0x43000048 FP BE Pri
!#7 N10389 P4745 BST 27 0x43000049 FP BE Pri
!#7 N10390 P4746 MEMBAR
!#7 N10391 P4747 BLD 21 -1 FP BE Sec
!#7 N10392 P4747 BLD 22 -1 FP BE Sec
!#A N10391 N10392
!#7 N10393 P4747 BLD 23 -1 FP BE Sec
!#7 N10394 P4748 MEMBAR
!#7 N10395 P4749 LD 21 -1 FP BE Pri
!#7 N10396 P4750 ST 14 0x380000c Int BE Pri
!#7 N10397 P4751 REPLACEMENT 32 Int BE Pri
!#7 N10398 P4752 REPLACEMENT 15 Int BE Pri
!#7 N10399 P4753 ST 10 0x380000d Int BE Pri
!#7 N10400 P4754 MEMBAR
!#7 N10401 P4755 BLD 32 -1 FP BE Pri
!#7 N10402 P4756 MEMBAR
!#7 N10403 P4757 LD 3 -1 FP BE Pri
!#7 N10404 P4758 MEMBAR
!#7 N10405 P4759 BLD 14 -1 FP BE Pri
!#7 N10406 P4760 MEMBAR
!#7 N10407 P4761 ST 18 0x380000e Int BE Pri
!#7 N10408 P4762 MEMBAR
!#7 N10409 P4763 BLD 11 -1 FP BE Sec
!#7 N10410 P4763 BLD 12 -1 FP BE Sec
!#A N10409 N10410
!#7 N10411 P4763 BLD 13 -1 FP BE Sec
!#7 N10412 P4764 MEMBAR
!#7 N10413 P4765 REPLACEMENT 8 Int BE Pri
!#7 N10414 P4766 REPLACEMENT 33 Int BE Pri
!#7 N10415 P4767 MEMBAR
!#7 N10416 P4768 BST 17 0x4300004a FP BE Pri
!#7 N10417 P4769 MEMBAR
!#7 N10418 P4770 ST 25 0x380000f Int BE Pri
!#7 N10419 P4771 ST 31 0x4300004b FP BE Pri
!#7 N10420 P4772 MEMBAR
!#7 N10421 P4773 BST 30 0x4300004c FP BE Pri
!#7 N10422 P4774 MEMBAR
!#7 N10423 P4775 BLD 31 -1 FP BE Pri
!#7 N10424 P4776 MEMBAR
!#7 N10425 P4777 BST 29 0x4300004d FP BE Sec
!#7 N10426 P4778 MEMBAR
!#7 N10427 P4779 REPLACEMENT 5 Int BE Pri
!#7 N10428 P4780 REPLACEMENT 30 Int BE Sec
!#7 N10429 P4781 REPLACEMENT 5 Int BE Pri
!#7 N10430 P4782 REPLACEMENT 6 Int BE Pri
!#7 N10431 P4783 REPLACEMENT 21 Int BE Nuc
!#7 N10432 P4784 MEMBAR
!#7 N10433 P4785 BSTC 8 0x4300004e FP BE Pri
!#7 N10434 P4785 BSTC 9 0x4300004f FP BE Pri
!#7 N10435 P4786 MEMBAR
!#7 N10436 P4787 BST 15 0x43000050 FP BE Pri
!#7 N10437 P4788 MEMBAR
!#7 N10438 P4789 BLD 0 -1 FP BE Sec
!#7 N10439 P4789 BLD 1 -1 FP BE Sec
!#A N10438 N10439
!#7 N10440 P4789 BLD 2 -1 FP BE Sec
!#7 N10441 P4789 BLD 3 -1 FP BE Sec
!#7 N10442 P4789 BLD 4 -1 FP BE Sec
!#7 N10443 P4790 MEMBAR
!#7 N10444 P4791 LD 22 -1 Int BE Pri
!#7 N10445 P4792 LD 9 -1 Int BE Pri
!#7 N10446 P4793 MEMBAR
!#7 N10447 P4794 BLD 26 -1 FP BE Pri
!#7 N10448 P4794 BLD 27 -1 FP BE Pri
!#7 N10449 P4795 MEMBAR
!#7 N10450 P4796 REPLACEMENT 32 Int BE Pri
!#7 N10451 P4797 MEMBAR
!#7 N10452 P4798 BLD 17 -1 FP BE Pri
!#7 N10453 P4799 MEMBAR
!#7 N10454 P4800 REPLACEMENT 14 Int BE Pri
!#7 N10455 P4801 MEMBAR
!#7 N10456 P4802 BST 0 0x43000051 FP BE Pri
!#7 N10457 P4802 BST 1 0x43000052 FP BE Pri
!#A N10456 N10457
!#7 N10458 P4802 BST 2 0x43000053 FP BE Pri
!#7 N10459 P4802 BST 3 0x43000054 FP BE Pri
!#7 N10460 P4802 BST 4 0x43000055 FP BE Pri
!#7 N10461 P4803 MEMBAR
!#7 N10462 P4804 REPLACEMENT 11 Int BE Pri
!#7 N10463 P4805 MEMBAR
!#7 N10464 P4806 BST 14 0x43000056 FP BE Pri
!#7 N10465 P4807 MEMBAR
!#7 N10466 P4808 LD 0 -1 FP BE Pri
!#7 N10467 P4809 REPLACEMENT 11 Int BE Pri
!#7 N10468 P4810 REPLACEMENT 9 Int BE Sec
!#7 N10469 P4811 REPLACEMENT 22 Int BE Pri
!#7 N10470 P4812 REPLACEMENT 27 Int BE Pri
!#7 N10471 P4813 MEMBAR
!#7 N10472 P4814 BST 18 0x43000057 FP BE Pri
!#7 N10473 P4815 MEMBAR
!#7 N10474 P4816 REPLACEMENT 24 Int BE Pri
!#7 N10475 P4817 IDC_FLIP 9 Int BE Pri
!#7 N10476 P4818 REPLACEMENT 16 Int BE Pri
!#7 N10477 P4819 REPLACEMENT 24 Int BE Sec
!#7 N10478 P4820 MEMBAR
!#7 N10479 P4821 BLD 0 -1 FP BE Pri
!#7 N10480 P4821 BLD 1 -1 FP BE Pri
!#A N10479 N10480
!#7 N10481 P4821 BLD 2 -1 FP BE Pri
!#7 N10482 P4821 BLD 3 -1 FP BE Pri
!#7 N10483 P4821 BLD 4 -1 FP BE Pri
!#7 N10484 P4822 MEMBAR
!#7 N10485 P4823 REPLACEMENT 21 Int BE Nuc
!#7 N10486 P4824 REPLACEMENT 16 Int BE Pri
!#7 N10487 P4825 MEMBAR
!#7 N10488 P4826 BLD 0 -1 FP BE Pri
!#7 N10489 P4826 BLD 1 -1 FP BE Pri
!#A N10488 N10489
!#7 N10490 P4826 BLD 2 -1 FP BE Pri
!#7 N10491 P4826 BLD 3 -1 FP BE Pri
!#7 N10492 P4826 BLD 4 -1 FP BE Pri
!#7 N10493 P4827 MEMBAR
!#7 N10494 P4828 ST 25 0x43000058 FP BE Sec
!#7 N10495 P4829 REPLACEMENT 18 Int BE Pri
!#7 N10496 P4830 ST 30 0x43000059 FP BE Sec
!#7 N10497 P4831 MEMBAR
!#7 N10498 P4832 BLD 31 -1 FP BE Pri
!#7 N10499 P4833 MEMBAR
!#7 N10500 P4834 LD 17 -1 FP BE Nuc
!#7 N10501 P4835 ST 26 0x4300005a FP BE Pri
!#7 N10502 P4836 ST 33 0x3800010 Int BE Pri
!#7 N10503 P4837 REPLACEMENT 18 Int BE Pri
!#7 N10504 P4838 REPLACEMENT 21 Int BE Pri
!#7 N10505 P4839 LD 11 -1 FP BE Nuc
!#7 N10506 P4840 IDC_FLIP 14 Int BE Pri
!#7 N10507 P4841 MEMBAR
!#7 N10508 P4842 BST 8 0x4300005b FP BE Sec
!#7 N10509 P4842 BST 9 0x4300005c FP BE Sec
!#7 N10510 P4843 MEMBAR
!#7 N10511 P4844 BLD 21 -1 FP BE Pri
!#7 N10512 P4844 BLD 22 -1 FP BE Pri
!#A N10511 N10512
!#7 N10513 P4844 BLD 23 -1 FP BE Pri
!#7 N10514 P4845 MEMBAR
!#7 N10515 P4846 REPLACEMENT 28 Int BE Pri
!#7 N10516 P4847 REPLACEMENT 12 Int BE Sec
!#7 N10517 P4848 LD 6 -1 Int BE Pri
!#7 N10518 P4849 REPLACEMENT 16 Int BE Sec
!#7 N10519 P4850 LD 9 -1 FP BE Pri
!#7 N10520 P4851 MEMBAR
!#7 N10521 P4852 BST 15 0x4300005d FP BE Pri
!#7 N10522 P4853 MEMBAR
!#7 N10523 P4854 BLD 5 -1 FP BE Pri
!#7 N10524 P4854 BLD 6 -1 FP BE Pri
!#7 N10525 P4855 MEMBAR
!#7 N10526 P4856 LD 2 -1 FP BE Pri
!#7 N10527 P4857 REPLACEMENT 14 Int BE Pri
!#7 N10528 P4858 MEMBAR
!#7 N10529 P4859 BST 11 0x4300005e FP BE Pri
!#7 N10530 P4859 BST 12 0x4300005f FP BE Pri
!#A N10529 N10530
!#7 N10531 P4859 BST 13 0x43000060 FP BE Pri
!#7 N10532 P4860 MEMBAR
!#7 N10533 P4861 BLD 5 -1 FP BE Pri
!#7 N10534 P4861 BLD 6 -1 FP BE Pri
!#7 N10535 P4862 MEMBAR
!#7 N10536 P4863 LD 9 -1 FP BE Nuc
!#7 N10537 P4864 REPLACEMENT 22 Int BE Pri
!#7 N10538 P4865 LD 0 -1 FP BE Pri
!#7 N10539 P4866 REPLACEMENT 9 Int BE Pri
!#7 N10540 P4867 REPLACEMENT 22 Int BE Sec
!#7 N10541 P4868 MEMBAR
!#7 N10542 P4869 BST 26 0x43000061 FP BE Pri
!#7 N10543 P4869 BST 27 0x43000062 FP BE Pri
!#7 N10544 P4870 MEMBAR
!#7 N10545 P4871 BST 11 0x43000063 FP BE Pri
!#7 N10546 P4871 BST 12 0x43000064 FP BE Pri
!#A N10545 N10546
!#7 N10547 P4871 BST 13 0x43000065 FP BE Pri
!#7 N10548 P4872 MEMBAR
!#7 N10549 P4873 LD 5 -1 FP BE Pri
!#7 N10550 P4874 REPLACEMENT 8 Int BE Nuc
!#7 N10551 P4875 ST 5 0x3800011 Int BE Nuc
!#7 N10552 P4876 ST 7 0x3800012 Int BE Pri
!#7 N10553 P4877 REPLACEMENT 26 Int BE Nuc
!#7 N10554 P4878 LD 16 -1 FP BE Pri
!#7 N10555 P4879 ST 25 0x43000066 FP BE Nuc
!#7 N10556 P4880 MEMBAR
!#7 N10557 P4881 BLD 11 -1 FP BE Pri
!#7 N10558 P4881 BLD 12 -1 FP BE Pri
!#A N10557 N10558
!#7 N10559 P4881 BLD 13 -1 FP BE Pri
!#7 N10560 P4882 MEMBAR
!#7 N10561 P4883 REPLACEMENT 7 Int BE Pri
!#7 N10562 P4884 IDC_FLIP 8 Int BE Pri
!#7 N10563 P4885 LD 3 -1 FP BE Pri
!#7 N10564 P4886 REPLACEMENT 15 Int BE Pri
!#7 N10565 P4887 MEMBAR
!#7 N10566 P4888 BLD 21 -1 FP BE Pri
!#7 N10567 P4888 BLD 22 -1 FP BE Pri
!#A N10566 N10567
!#7 N10568 P4888 BLD 23 -1 FP BE Pri
!#7 N10569 P4889 MEMBAR
!#7 N10570 P4890 REPLACEMENT 16 Int BE Sec
!#7 N10571 P4891 MEMBAR
!#7 N10572 P4892 BSTC 33 0x43000067 FP BE Pri
!#7 N10573 P4893 MEMBAR
!#7 N10574 P4894 BLD 31 -1 FP BE Pri
!#7 N10575 P4895 MEMBAR
!#7 N10576 P4896 BLD 32 -1 FP BE Pri
!#7 N10577 P4897 MEMBAR
!#7 N10578 P4898 BSTC 0 0x43000068 FP BE Pri
!#7 N10579 P4898 BSTC 1 0x43000069 FP BE Pri
!#A N10578 N10579
!#7 N10580 P4898 BSTC 2 0x4300006a FP BE Pri
!#7 N10581 P4898 BSTC 3 0x4300006b FP BE Pri
!#7 N10582 P4898 BSTC 4 0x4300006c FP BE Pri
!#7 N10583 P4899 MEMBAR
!#7 N10584 P4900 BLD 21 -1 FP BE Pri
!#7 N10585 P4900 BLD 22 -1 FP BE Pri
!#A N10584 N10585
!#7 N10586 P4900 BLD 23 -1 FP BE Pri
!#7 N10587 P4901 MEMBAR
!#7 N10588 P4902 ST 26 0x3800013 Int BE Nuc
!#7 N10589 P4903 MEMBAR
!#7 N10590 P4904 BST 8 0x4300006d FP BE Pri
!#7 N10591 P4904 BST 9 0x4300006e FP BE Pri
!#7 N10592 P4905 MEMBAR
!#7 N10593 P4906 BLD 19 -1 FP BE Sec
!#7 N10594 P4907 MEMBAR
!#7 N10595 P4908 BST 0 0x4300006f FP BE Pri
!#7 N10596 P4908 BST 1 0x43000070 FP BE Pri
!#A N10595 N10596
!#7 N10597 P4908 BST 2 0x43000071 FP BE Pri
!#7 N10598 P4908 BST 3 0x43000072 FP BE Pri
!#7 N10599 P4908 BST 4 0x43000073 FP BE Pri
!#7 N10600 P4909 MEMBAR
!#7 N10601 P4910 REPLACEMENT 28 Int BE Pri
!#7 N10602 P4911 MEMBAR
!#7 N10603 P4912 BST 5 0x43000074 FP BE Sec
!#7 N10604 P4912 BST 6 0x43000075 FP BE Sec
!#7 N10605 P4913 MEMBAR
!#7 N10606 P4914 BST 16 0x43000076 FP BE Pri
!#7 N10607 P4915 MEMBAR
!#7 N10608 P4916 ST 8 0x3800014 Int BE Pri
!#7 N10609 P4917 MEMBAR
!#7 N10610 P4918 BLD 14 -1 FP BE Pri
!#7 N10611 P4919 MEMBAR
!#7 N10612 P4920 REPLACEMENT 19 Int BE Nuc
!#7 N10613 P4921 LD 27 -1 Int BE Pri
!#7 N10614 P4922 LD 29 -1 Int BE Sec
!#7 N10615 P4923 ST 4 0x43000077 FP BE Pri
!#7 N10616 P4924 REPLACEMENT 15 Int BE Pri
!#7 N10617 P4925 ST 5 0x43000078 FP BE Pri
!#7 N10618 P4926 MEMBAR
!#7 N10619 P4927 BLD 8 -1 FP BE Pri
!#7 N10620 P4927 BLD 9 -1 FP BE Pri
!#7 N10621 P4928 MEMBAR
!#7 N10622 P4929 LD 13 -1 Int BE Nuc
!#7 N10623 P4930 MEMBAR
!#7 N10624 P4931 BST 10 0x43000079 FP BE Pri
!#7 N10625 P4932 MEMBAR
!#7 N10626 P4933 ST 31 0x3800015 Int BE Sec
!#7 N10627 P4934 MEMBAR
!#7 N10628 P4935 BSTC 10 0x4300007a FP BE Pri
!#7 N10629 P4936 MEMBAR
!#7 N10630 P4937 ST 21 0x3800016 Int BE Pri
!#7 N10631 P4938 MEMBAR
!#7 N10632 P4939 BST 24 0x4300007b FP BE Pri
!#7 N10633 P4939 BST 25 0x4300007c FP BE Pri
!#7 N10634 P4940 MEMBAR
!#7 N10635 P4941 REPLACEMENT 2 Int BE Pri
!#7 N10636 P4942 MEMBAR
!#7 N10637 P4943 BLD 24 -1 FP BE Pri
!#7 N10638 P4943 BLD 25 -1 FP BE Pri
!#7 N10639 P4944 MEMBAR
!#7 N10640 P4945 LD 33 -1 FP BE Pri
!#7 N10641 P4946 MEMBAR
!#7 N10642 P4947 BSTC 0 0x4300007d FP BE Sec
!#7 N10643 P4947 BSTC 1 0x4300007e FP BE Sec
!#A N10642 N10643
!#7 N10644 P4947 BSTC 2 0x4300007f FP BE Sec
!#7 N10645 P4947 BSTC 3 0x43000080 FP BE Sec
!#7 N10646 P4947 BSTC 4 0x43000081 FP BE Sec
!#7 N10647 P4948 MEMBAR
!#7 N10648 P4949 BLD 14 -1 FP BE Pri
!#7 N10649 P4950 MEMBAR
!#7 N10650 P4951 REPLACEMENT 10 Int BE Pri
!#7 N10651 P4952 IDC_FLIP 31 Int BE Pri
!#7 N10652 P4953 MEMBAR
!#7 N10653 P4954 BLD 11 -1 FP BE Pri
!#7 N10654 P4954 BLD 12 -1 FP BE Pri
!#A N10653 N10654
!#7 N10655 P4954 BLD 13 -1 FP BE Pri
!#7 N10656 P4955 MEMBAR
!#7 N10657 P4956 IDC_FLIP 0 Int BE Pri
!#7 N10658 P4957 MEMBAR
!#7 N10659 P4958 BLD 16 -1 FP BE Pri
!#7 N10660 P4959 MEMBAR
!#7 N10661 P4960 BLD 28 -1 FP BE Pri
!#7 N10662 P4961 MEMBAR
!#7 N10663 P4962 BST 26 0x43000082 FP BE Pri
!#7 N10664 P4962 BST 27 0x43000083 FP BE Pri
!#7 N10665 P4963 MEMBAR
!#7 N10666 P4964 LD 24 -1 FP BE Pri
!#7 N10667 P4965 REPLACEMENT 4 Int BE Pri
!#7 N10668 P4966 REPLACEMENT 30 Int BE Pri
!#7 N10669 P4967 MEMBAR
!#7 N10670 P4968 BSTC 5 0x43000084 FP BE Pri
!#7 N10671 P4968 BSTC 6 0x43000085 FP BE Pri
!#7 N10672 P4969 MEMBAR
!#7 N10673 P4970 BLD 14 -1 FP BE Pri
!#7 N10674 P4971 MEMBAR
!#7 N10675 P4972 BLD 26 -1 FP BE Sec
!#7 N10676 P4972 BLD 27 -1 FP BE Sec
!#7 N10677 P4973 MEMBAR
!#7 N10678 P4974 REPLACEMENT 31 Int BE Sec
!#7 N10679 P4975 LD 14 -1 FP BE Pri
!#7 N10680 P4976 ST 28 0x43000086 FP BE Pri
!#7 N10681 P4977 REPLACEMENT 1 Int BE Pri
!#7 N10682 P4978 LD 7 -1 Int BE Pri
!#7 N10683 P4979 REPLACEMENT 33 Int BE Nuc
!#7 N10684 P4980 MEMBAR
!#7 N10685 P4981 BST 10 0x43000087 FP BE Pri
!#7 N10686 P4982 MEMBAR
!#7 N10687 P4983 ST 32 0x3800017 Int BE Pri
!#7 N10688 P4984 REPLACEMENT 11 Int BE Pri
!#7 N10689 P4985 LD 4 -1 FP BE Sec
!#7 N10690 P4986 REPLACEMENT 11 Int BE Pri
!#7 N10691 P4987 REPLACEMENT 26 Int BE Sec
!#7 N10692 P4988 ST 8 0x43000088 FP BE Pri
!#7 N10693 P4989 LD 32 -1 Int BE Pri
!#7 N10694 P4990 REPLACEMENT 24 Int BE Pri
!#7 N10695 P4991 REPLACEMENT 29 Int BE Pri
!#7 N10696 P4992 MEMBAR
!#7 N10697 P4993 BSTC 11 0x43000089 FP BE Sec
!#7 N10698 P4993 BSTC 12 0x4300008a FP BE Sec
!#A N10697 N10698
!#7 N10699 P4993 BSTC 13 0x4300008b FP BE Sec
!#7 N10700 P4994 MEMBAR
!#7 N10701 P4995 BLD 15 -1 FP BE Pri
!#7 N10702 P4996 MEMBAR
!#7 N10703 P4997 ST 14 0x3800018 Int BE Sec
!#7 N10704 P4998 REPLACEMENT 22 Int BE Pri
!#7 N10705 P4999 REPLACEMENT 11 Int BE Pri
!#7 N10706 P5000 MEMBAR
!#7 N10707 P5001 BST 11 0x4300008c FP BE Sec
!#7 N10708 P5001 BST 12 0x4300008d FP BE Sec
!#A N10707 N10708
!#7 N10709 P5001 BST 13 0x4300008e FP BE Sec
!#7 N10710 P5002 MEMBAR
!#7 N10711 P5003 BSTC 0 0x4300008f FP BE Pri
!#7 N10712 P5003 BSTC 1 0x43000090 FP BE Pri
!#A N10711 N10712
!#7 N10713 P5003 BSTC 2 0x43000091 FP BE Pri
!#7 N10714 P5003 BSTC 3 0x43000092 FP BE Pri
!#7 N10715 P5003 BSTC 4 0x43000093 FP BE Pri
!#7 N10716 P5004 MEMBAR
!#7 N10717 P5005 REPLACEMENT 13 Int BE Pri
!#7 N10718 P5006 REPLACEMENT 20 Int BE Pri
!#7 N10719 P5007 MEMBAR
!#7 N10720 P5008 BST 8 0x43000094 FP BE Pri
!#7 N10721 P5008 BST 9 0x43000095 FP BE Pri
!#7 N10722 P5009 MEMBAR
!#7 N10723 P5010 REPLACEMENT 18 Int BE Pri
!#7 N10724 P5011 ST 29 0x3800019 Int BE Pri
!#7 N10725 P5012 REPLACEMENT 31 Int BE Pri
!#7 N10726 P5013 REPLACEMENT 17 Int BE Pri
!#7 N10727 P5014 LD 2 -1 Int BE Pri
!#7 N10728 P5015 REPLACEMENT 26 Int BE Pri
!#7 N10729 P5016 LD 16 -1 FP BE Pri
!#7 N10730 P5017 MEMBAR
!#7 N10731 P5018 BLD 24 -1 FP BE Pri
!#7 N10732 P5018 BLD 25 -1 FP BE Pri
!#7 N10733 P5019 MEMBAR
!#7 N10734 P5020 IDC_FLIP 7 Int BE Pri
!#7 N10735 P5021 ST 33 0x43000096 FP BE Pri
!#7 N10736 P5022 REPLACEMENT 15 Int BE Pri
!#7 N10737 P5023 ST 7 0x43000097 FP BE Pri
!#7 N10738 P5024 LD 23 -1 FP BE Pri
!#7 N10739 P5025 REPLACEMENT 17 Int BE Pri
!#7 N10740 P5026 MEMBAR
!#7 N10741 P5027 BST 21 0x43000098 FP BE Pri
!#7 N10742 P5027 BST 22 0x43000099 FP BE Pri
!#A N10741 N10742
!#7 N10743 P5027 BST 23 0x4300009a FP BE Pri
!#7 N10744 P5028 MEMBAR
!#7 N10745 P5029 BLD 14 -1 FP BE Pri
!#7 N10746 P5030 MEMBAR
!#7 N10747 P5031 BLD 24 -1 FP BE Pri
!#7 N10748 P5031 BLD 25 -1 FP BE Pri
!#7 N10749 P5032 MEMBAR
!#7 N10750 P5033 LD 8 -1 Int BE Pri
!#7 N10751 P5034 REPLACEMENT 24 Int BE Pri
!#7 N10752 P5035 ST 26 0x380001a Int BE Sec
!#7 N10753 P5036 REPLACEMENT 31 Int BE Pri
!#7 N10754 P5037 REPLACEMENT 9 Int BE Pri
!#7 N10755 P5038 ST 27 0x380001b Int BE Sec
!#7 N10756 P5039 IDC_FLIP 4 Int BE Pri
!#7 N10757 P5040 REPLACEMENT 17 Int BE Pri
!#7 N10758 P5041 ST 25 0x380001c Int BE Pri
!#7 N10759 P5042 LD 16 -1 FP BE Pri
!#7 N10760 P5043 MEMBAR
!#7 N10761 P5044 BST 16 0x4300009b FP BE Pri
!#7 N10762 P5045 MEMBAR
!#7 N10763 P5046 BLD 20 -1 FP BE Pri
!#7 N10764 P5047 MEMBAR
!#7 N10765 P5048 ST 29 0x4300009c FP BE Pri
!#7 N10766 P5049 MEMBAR
!#7 N10767 P5050 BST 0 0x4300009d FP BE Pri
!#7 N10768 P5050 BST 1 0x4300009e FP BE Pri
!#A N10767 N10768
!#7 N10769 P5050 BST 2 0x4300009f FP BE Pri
!#7 N10770 P5050 BST 3 0x430000a0 FP BE Pri
!#7 N10771 P5050 BST 4 0x430000a1 FP BE Pri
!#7 N10772 P5051 MEMBAR
!#7 N10773 P5052 BLD 0 -1 FP BE Pri
!#7 N10774 P5052 BLD 1 -1 FP BE Pri
!#A N10773 N10774
!#7 N10775 P5052 BLD 2 -1 FP BE Pri
!#7 N10776 P5052 BLD 3 -1 FP BE Pri
!#7 N10777 P5052 BLD 4 -1 FP BE Pri
!#7 N10778 P5053 MEMBAR
!#7 N10779 P5054 ST 1 0x430000a2 FP BE Pri
!#7 N10780 P5055 ST 15 0x430000a3 FP BE Nuc
!#7 N10781 P5056 ST 10 0x380001d Int BE Pri
!#7 N10782 P5057 MEMBAR
!#7 N10783 P5058 BLD 15 -1 FP BE Pri
!#7 N10784 P5059 MEMBAR
!#7 N10785 P5060 BST 0 0x430000a4 FP BE Pri
!#7 N10786 P5060 BST 1 0x430000a5 FP BE Pri
!#A N10785 N10786
!#7 N10787 P5060 BST 2 0x430000a6 FP BE Pri
!#7 N10788 P5060 BST 3 0x430000a7 FP BE Pri
!#7 N10789 P5060 BST 4 0x430000a8 FP BE Pri
!#7 N10790 P5061 MEMBAR
!#7 N10791 P5062 REPLACEMENT 26 Int BE Pri
!#7 N10792 P5063 ST 26 0x380001e Int BE Pri
!#7 N10793 P5064 REPLACEMENT 2 Int BE Pri
!#7 N10794 P5065 MEMBAR
!#7 N10795 P5066 BST 20 0x430000a9 FP BE Pri
!#7 N10796 P5067 MEMBAR
!#7 N10797 P5068 ST 29 0x430000aa FP BE Pri
!#7 N10798 P5069 MEMBAR
!#7 N10799 P5070 BST 8 0x430000ab FP BE Pri
!#7 N10800 P5070 BST 9 0x430000ac FP BE Pri
!#7 N10801 P5071 MEMBAR
!#7 N10802 P5072 REPLACEMENT 21 Int BE Pri
!#7 N10803 P5073 ST 3 0x380001f Int LE Pri
!#7 N10804 P5074 FLUSHI 26 Int BE Pri
!#7 N10805 P5075 LD 5 -1 Int BE Pri
!#7 N10806 P5076 MEMBAR
!#7 N10807 P5077 BLD 20 -1 FP BE Pri
!#7 N10808 P5078 MEMBAR
!#7 N10809 P5079 BST 11 0x430000ad FP BE Pri
!#7 N10810 P5079 BST 12 0x430000ae FP BE Pri
!#A N10809 N10810
!#7 N10811 P5079 BST 13 0x430000af FP BE Pri
!#7 N10812 P5080 MEMBAR
!#7 N10813 P5081 LD 7 -1 Int LE Pri Loop_exit
!#7 N10814 P4541 REPLACEMENT 19 Int BE Pri Loop_entry
!#7 N10815 P4542 MEMBAR
!#7 N10816 P4543 BST 24 0x430000b0 FP BE Pri
!#7 N10817 P4543 BST 25 0x430000b1 FP BE Pri
!#7 N10818 P4544 MEMBAR
!#7 N10819 P4545 BST 16 0x430000b2 FP BE Sec
!#7 N10820 P4546 MEMBAR
!#7 N10821 P4547 BST 24 0x430000b3 FP BE Pri
!#7 N10822 P4547 BST 25 0x430000b4 FP BE Pri
!#7 N10823 P4548 MEMBAR
!#7 N10824 P4549 LD 8 -1 Int BE Pri
!#7 N10825 P4550 LD 22 -1 Int BE Pri
!#7 N10826 P4551 ST 8 0x430000b5 FP BE Pri
!#7 N10827 P4552 MEMBAR
!#7 N10828 P4553 BSTC 26 0x430000b6 FP BE Pri
!#7 N10829 P4553 BSTC 27 0x430000b7 FP BE Pri
!#7 N10830 P4554 MEMBAR
!#7 N10831 P4555 LD 29 -1 Int BE Pri
!#7 N10832 P4556 REPLACEMENT 8 Int BE Pri
!#7 N10833 P4557 MEMBAR
!#7 N10834 P4558 BLD 0 -1 FP BE Pri
!#7 N10835 P4558 BLD 1 -1 FP BE Pri
!#A N10834 N10835
!#7 N10836 P4558 BLD 2 -1 FP BE Pri
!#7 N10837 P4558 BLD 3 -1 FP BE Pri
!#7 N10838 P4558 BLD 4 -1 FP BE Pri
!#7 N10839 P4559 MEMBAR
!#7 N10840 P4560 LD 31 -1 Int BE Nuc
!#7 N10841 P4561 ST 2 0x3800020 Int BE Nuc
!#7 N10842 P4562 MEMBAR
!#7 N10843 P4563 BST 14 0x430000b8 FP BE Pri
!#7 N10844 P4564 MEMBAR
!#7 N10845 P4565 LD 17 -1 Int BE Sec
!#7 N10846 P4566 LD 20 -1 FP BE Pri
!#7 N10847 P4567 MEMBAR
!#7 N10848 P4568 BLD 21 -1 FP BE Pri
!#7 N10849 P4568 BLD 22 -1 FP BE Pri
!#A N10848 N10849
!#7 N10850 P4568 BLD 23 -1 FP BE Pri
!#7 N10851 P4569 MEMBAR
!#7 N10852 P4570 LD 28 -1 Int BE Pri
!#7 N10853 P4571 REPLACEMENT 4 Int BE Pri
!#7 N10854 P4572 LD 18 -1 FP BE Pri
!#7 N10855 P4573 REPLACEMENT 6 Int BE Pri
!#7 N10856 P4574 REPLACEMENT 13 Int BE Pri
!#7 N10857 P4575 MEMBAR
!#7 N10858 P4576 BSTC 11 0x430000b9 FP BE Pri
!#7 N10859 P4576 BSTC 12 0x430000ba FP BE Pri
!#A N10858 N10859
!#7 N10860 P4576 BSTC 13 0x430000bb FP BE Pri
!#7 N10861 P4577 MEMBAR
!#7 N10862 P4578 REPLACEMENT 15 Int BE Sec
!#7 N10863 P4579 ST 23 0x430000bc FP BE Pri
!#7 N10864 P4580 REPLACEMENT 22 Int BE Nuc
!#7 N10865 P4581 ST 8 0x3800021 Int BE Nuc
!#7 N10866 P4582 ST 16 0x3800022 Int BE Nuc
!#7 N10867 P4583 MEMBAR
!#7 N10868 P4584 BLD 16 -1 FP BE Pri
!#7 N10869 P4585 MEMBAR
!#7 N10870 P4586 REPLACEMENT 19 Int BE Nuc
!#7 N10871 P4587 MEMBAR
!#7 N10872 P4588 BLD 5 -1 FP BE Pri
!#7 N10873 P4588 BLD 6 -1 FP BE Pri
!#7 N10874 P4589 MEMBAR
!#7 N10875 P4590 BST 28 0x430000bd FP BE Sec
!#7 N10876 P4591 MEMBAR
!#7 N10877 P4592 BSTC 18 0x430000be FP BE Pri
!#7 N10878 P4593 MEMBAR
!#7 N10879 P4594 BST 8 0x430000bf FP BE Pri
!#7 N10880 P4594 BST 9 0x430000c0 FP BE Pri
!#7 N10881 P4595 MEMBAR
!#7 N10882 P4596 BST 24 0x430000c1 FP BE Pri
!#7 N10883 P4596 BST 25 0x430000c2 FP BE Pri
!#7 N10884 P4597 MEMBAR
!#7 N10885 P4598 BLD 24 -1 FP BE Pri
!#7 N10886 P4598 BLD 25 -1 FP BE Pri
!#7 N10887 P4599 MEMBAR
!#7 N10888 P4600 BLD 21 -1 FP BE Pri
!#7 N10889 P4600 BLD 22 -1 FP BE Pri
!#A N10888 N10889
!#7 N10890 P4600 BLD 23 -1 FP BE Pri
!#7 N10891 P4601 MEMBAR
!#7 N10892 P4602 REPLACEMENT 14 Int BE Pri
!#7 N10893 P4603 IDC_FLIP 22 Int BE Pri
!#7 N10894 P4604 ST 16 0x430000c3 FP BE Pri
!#7 N10895 P4605 MEMBAR
!#7 N10896 P4606 BST 21 0x430000c4 FP BE Pri
!#7 N10897 P4606 BST 22 0x430000c5 FP BE Pri
!#A N10896 N10897
!#7 N10898 P4606 BST 23 0x430000c6 FP BE Pri
!#7 N10899 P4607 MEMBAR
!#7 N10900 P4608 REPLACEMENT 12 Int BE Sec
!#7 N10901 P4609 ST 23 0x3800023 Int BE Pri
!#7 N10902 P4610 REPLACEMENT 19 Int BE Pri
!#7 N10903 P4611 REPLACEMENT 14 Int BE Sec
!#7 N10904 P4612 REPLACEMENT 27 Int BE Pri
!#7 N10905 P4613 REPLACEMENT 6 Int BE Pri
!#7 N10906 P4614 REPLACEMENT 10 Int BE Pri
!#7 N10907 P4615 ST 7 0x430000c7 FP BE Pri
!#7 N10908 P4616 ST 18 0x430000c8 FP BE Pri
!#7 N10909 P4617 REPLACEMENT 2 Int BE Pri
!#7 N10910 P4618 REPLACEMENT 13 Int BE Pri
!#7 N10911 P4619 REPLACEMENT 0 Int BE Pri
!#7 N10912 P4620 PREFETCH 7 Int BE Pri
!#7 N10913 P4621 ST 12 0x3800024 Int BE Nuc
!#7 N10914 P4622 MEMBAR
!#7 N10915 P4623 BLD 11 -1 FP BE Pri
!#7 N10916 P4623 BLD 12 -1 FP BE Pri
!#A N10915 N10916
!#7 N10917 P4623 BLD 13 -1 FP BE Pri
!#7 N10918 P4624 MEMBAR
!#7 N10919 P4625 BLD 24 -1 FP BE Pri
!#7 N10920 P4625 BLD 25 -1 FP BE Pri
!#7 N10921 P4626 MEMBAR
!#7 N10922 P4627 LD 15 -1 Int BE Sec
!#7 N10923 P4628 MEMBAR
!#7 N10924 P4629 BSTC 17 0x430000c9 FP BE Sec
!#7 N10925 P4630 MEMBAR
!#7 N10926 P4631 LD 2 -1 Int BE Pri
!#7 N10927 P4632 REPLACEMENT 30 Int BE Pri
!#7 N10928 P4633 MEMBAR
!#7 N10929 P4634 BLD 33 -1 FP BE Pri
!#7 N10930 P4635 MEMBAR
!#7 N10931 P4636 LD 23 -1 FP BE Pri
!#7 N10932 P4637 ST 2 0x3800025 Int BE Pri
!#7 N10933 P4638 REPLACEMENT 18 Int BE Pri
!#7 N10934 P4639 REPLACEMENT 33 Int BE Nuc
!#7 N10935 P4640 MEMBAR
!#7 N10936 P4641 BST 32 0x430000ca FP BE Pri
!#7 N10937 P4642 MEMBAR
!#7 N10938 P4643 LD 2 -1 Int BE Pri
!#7 N10939 P4644 MEMBAR
!#7 N10940 P4645 BST 29 0x430000cb FP BE Pri
!#7 N10941 P4646 MEMBAR
!#7 N10942 P4647 ST 3 0x3800026 Int BE Pri
!#7 N10943 P4648 MEMBAR
!#7 N10944 P4649 BST 29 0x430000cc FP BE Pri
!#7 N10945 P4650 MEMBAR
!#7 N10946 P4651 BST 11 0x430000cd FP BE Pri
!#7 N10947 P4651 BST 12 0x430000ce FP BE Pri
!#A N10946 N10947
!#7 N10948 P4651 BST 13 0x430000cf FP BE Pri
!#7 N10949 P4652 MEMBAR
!#7 N10950 P4653 REPLACEMENT 13 Int BE Pri
!#7 N10951 P4654 ST 16 0x430000d0 FP BE Pri
!#7 N10952 P4655 LD 16 -1 Int BE Pri
!#7 N10953 P4656 REPLACEMENT 10 Int BE Pri
!#7 N10954 P4657 LD 8 -1 Int BE Pri
!#7 N10955 P4658 MEMBAR
!#7 N10956 P4659 BLD 26 -1 FP BE Pri
!#7 N10957 P4659 BLD 27 -1 FP BE Pri
!#7 N10958 P4660 MEMBAR
!#7 N10959 P4661 BST 15 0x430000d1 FP BE Pri
!#7 N10960 P4662 MEMBAR
!#7 N10961 P4663 BST 21 0x430000d2 FP BE Pri
!#7 N10962 P4663 BST 22 0x430000d3 FP BE Pri
!#A N10961 N10962
!#7 N10963 P4663 BST 23 0x430000d4 FP BE Pri
!#7 N10964 P4664 MEMBAR
!#7 N10965 P4665 BST 14 0x430000d5 FP BE Sec
!#7 N10966 P4666 MEMBAR
!#7 N10967 P4667 BST 24 0x430000d6 FP BE Pri
!#7 N10968 P4667 BST 25 0x430000d7 FP BE Pri
!#7 N10969 P4668 MEMBAR
!#7 N10970 P4669 REPLACEMENT 16 Int BE Nuc
!#7 N10971 P4670 ST 28 0x3800027 Int BE Pri
!#7 N10972 P4671 MEMBAR
!#7 N10973 P4672 BST 24 0x430000d8 FP BE Pri
!#7 N10974 P4672 BST 25 0x430000d9 FP BE Pri
!#7 N10975 P4673 MEMBAR
!#7 N10976 P4674 BLD 26 -1 FP BE Sec
!#7 N10977 P4674 BLD 27 -1 FP BE Sec
!#7 N10978 P4675 MEMBAR
!#7 N10979 P4676 BST 17 0x430000da FP BE Pri
!#7 N10980 P4677 MEMBAR
!#7 N10981 P4678 REPLACEMENT 26 Int BE Nuc
!#7 N10982 P4679 REPLACEMENT 33 Int BE Pri
!#7 N10983 P4680 MEMBAR
!#7 N10984 P4681 BLD 10 -1 FP BE Pri
!#7 N10985 P4682 MEMBAR
!#7 N10986 P4683 ST 4 0x3800028 Int BE Pri
!#7 N10987 P4684 REPLACEMENT 33 Int BE Pri
!#7 N10988 P4685 MEMBAR
!#7 N10989 P4686 BLD 26 -1 FP BE Pri
!#7 N10990 P4686 BLD 27 -1 FP BE Pri
!#7 N10991 P4687 MEMBAR
!#7 N10992 P4688 ST 17 0x430000db FP BE Pri
!#7 N10993 P4689 ST 8 0x3800029 Int BE Pri
!#7 N10994 P4690 MEMBAR
!#7 N10995 P4691 BSTC 0 0x430000dc FP BE Pri
!#7 N10996 P4691 BSTC 1 0x430000dd FP BE Pri
!#A N10995 N10996
!#7 N10997 P4691 BSTC 2 0x430000de FP BE Pri
!#7 N10998 P4691 BSTC 3 0x430000df FP BE Pri
!#7 N10999 P4691 BSTC 4 0x430000e0 FP BE Pri
!#7 N11000 P4692 MEMBAR
!#7 N11001 P4693 REPLACEMENT 17 Int BE Pri
!#7 N11002 P4694 ST 19 0x430000e1 FP BE Pri
!#7 N11003 P4695 LD 22 -1 FP BE Pri
!#7 N11004 P4696 LD 7 -1 Int BE Pri
!#7 N11005 P4697 MEMBAR
!#7 N11006 P4698 BLD 26 -1 FP BE Sec
!#7 N11007 P4698 BLD 27 -1 FP BE Sec
!#7 N11008 P4699 MEMBAR
!#7 N11009 P4700 LD 6 -1 Int BE Sec
!#7 N11010 P4701 IDC_FLIP 12 Int BE Pri
!#7 N11011 P4702 MEMBAR
!#7 N11012 P4703 BST 16 0x430000e2 FP BE Pri
!#7 N11013 P4704 MEMBAR
!#7 N11014 P4705 BST 0 0x430000e3 FP BE Pri
!#7 N11015 P4705 BST 1 0x430000e4 FP BE Pri
!#A N11014 N11015
!#7 N11016 P4705 BST 2 0x430000e5 FP BE Pri
!#7 N11017 P4705 BST 3 0x430000e6 FP BE Pri
!#7 N11018 P4705 BST 4 0x430000e7 FP BE Pri
!#7 N11019 P4706 MEMBAR
!#7 N11020 P4707 REPLACEMENT 5 Int BE Pri
!#7 N11021 P4708 MEMBAR
!#7 N11022 P4709 BST 17 0x430000e8 FP BE Pri
!#7 N11023 P4710 MEMBAR
!#7 N11024 P4711 BLD 31 -1 FP BE Pri
!#7 N11025 P4712 MEMBAR
!#7 N11026 P4713 BLD 10 -1 FP BE Pri
!#7 N11027 P4714 MEMBAR
!#7 N11028 P4715 LD 28 -1 Int BE Pri
!#7 N11029 P4716 LD 21 -1 FP BE Pri
!#7 N11030 P4717 ST 5 0x430000e9 FP BE Sec
!#7 N11031 P4718 REPLACEMENT 11 Int BE Pri
!#7 N11032 P4719 MEMBAR
!#7 N11033 P4720 BST 26 0x430000ea FP BE Pri
!#7 N11034 P4720 BST 27 0x430000eb FP BE Pri
!#7 N11035 P4721 MEMBAR
!#7 N11036 P4722 PREFETCH 3 Int BE Pri
!#7 N11037 P4723 MEMBAR
!#7 N11038 P4724 BST 0 0x430000ec FP BE Pri
!#7 N11039 P4724 BST 1 0x430000ed FP BE Pri
!#A N11038 N11039
!#7 N11040 P4724 BST 2 0x430000ee FP BE Pri
!#7 N11041 P4724 BST 3 0x430000ef FP BE Pri
!#7 N11042 P4724 BST 4 0x430000f0 FP BE Pri
!#7 N11043 P4725 MEMBAR
!#7 N11044 P4726 LD 22 -1 FP BE Pri
!#7 N11045 P4727 MEMBAR
!#7 N11046 P4728 BST 30 0x430000f1 FP BE Pri
!#7 N11047 P4729 MEMBAR
!#7 N11048 P4730 BST 17 0x430000f2 FP BE Pri
!#7 N11049 P4731 MEMBAR
!#7 N11050 P4732 BST 31 0x430000f3 FP BE Pri
!#7 N11051 P4733 MEMBAR
!#7 N11052 P4734 ST 1 0x380002a Int BE Pri
!#7 N11053 P4735 ST 16 0x430000f4 FP BE Pri
!#7 N11054 P4736 REPLACEMENT 31 Int BE Sec
!#7 N11055 P4737 MEMBAR
!#7 N11056 P4738 BLD 33 -1 FP BE Pri
!#7 N11057 P4739 MEMBAR
!#7 N11058 P4740 REPLACEMENT 7 Int BE Pri
!#7 N11059 P4741 ST 1 0x430000f5 FP BE Sec
!#7 N11060 P4742 ST 31 0x430000f6 FP BE Sec
!#7 N11061 P4743 REPLACEMENT 32 Int BE Pri
!#7 N11062 P4744 MEMBAR
!#7 N11063 P4745 BST 26 0x430000f7 FP BE Pri
!#7 N11064 P4745 BST 27 0x430000f8 FP BE Pri
!#7 N11065 P4746 MEMBAR
!#7 N11066 P4747 BLD 21 -1 FP BE Sec
!#7 N11067 P4747 BLD 22 -1 FP BE Sec
!#A N11066 N11067
!#7 N11068 P4747 BLD 23 -1 FP BE Sec
!#7 N11069 P4748 MEMBAR
!#7 N11070 P4749 LD 21 -1 FP BE Pri
!#7 N11071 P4750 ST 14 0x380002b Int BE Pri
!#7 N11072 P4751 REPLACEMENT 32 Int BE Pri
!#7 N11073 P4752 REPLACEMENT 15 Int BE Pri
!#7 N11074 P4753 ST 10 0x380002c Int BE Pri
!#7 N11075 P4754 MEMBAR
!#7 N11076 P4755 BLD 32 -1 FP BE Pri
!#7 N11077 P4756 MEMBAR
!#7 N11078 P4757 LD 3 -1 FP BE Pri
!#7 N11079 P4758 MEMBAR
!#7 N11080 P4759 BLD 14 -1 FP BE Pri
!#7 N11081 P4760 MEMBAR
!#7 N11082 P4761 ST 18 0x380002d Int BE Pri
!#7 N11083 P4762 MEMBAR
!#7 N11084 P4763 BLD 11 -1 FP BE Sec
!#7 N11085 P4763 BLD 12 -1 FP BE Sec
!#A N11084 N11085
!#7 N11086 P4763 BLD 13 -1 FP BE Sec
!#7 N11087 P4764 MEMBAR
!#7 N11088 P4765 REPLACEMENT 8 Int BE Pri
!#7 N11089 P4766 REPLACEMENT 33 Int BE Pri
!#7 N11090 P4767 MEMBAR
!#7 N11091 P4768 BST 17 0x430000f9 FP BE Pri
!#7 N11092 P4769 MEMBAR
!#7 N11093 P4770 ST 25 0x380002e Int BE Pri
!#7 N11094 P4771 ST 31 0x430000fa FP BE Pri
!#7 N11095 P4772 MEMBAR
!#7 N11096 P4773 BST 30 0x430000fb FP BE Pri
!#7 N11097 P4774 MEMBAR
!#7 N11098 P4775 BLD 31 -1 FP BE Pri
!#7 N11099 P4776 MEMBAR
!#7 N11100 P4777 BST 29 0x430000fc FP BE Sec
!#7 N11101 P4778 MEMBAR
!#7 N11102 P4779 REPLACEMENT 5 Int BE Pri
!#7 N11103 P4780 REPLACEMENT 30 Int BE Sec
!#7 N11104 P4781 REPLACEMENT 5 Int BE Pri
!#7 N11105 P4782 REPLACEMENT 6 Int BE Pri
!#7 N11106 P4783 REPLACEMENT 21 Int BE Nuc
!#7 N11107 P4784 MEMBAR
!#7 N11108 P4785 BSTC 8 0x430000fd FP BE Pri
!#7 N11109 P4785 BSTC 9 0x430000fe FP BE Pri
!#7 N11110 P4786 MEMBAR
!#7 N11111 P4787 BST 15 0x430000ff FP BE Pri
!#7 N11112 P4788 MEMBAR
!#7 N11113 P4789 BLD 0 -1 FP BE Sec
!#7 N11114 P4789 BLD 1 -1 FP BE Sec
!#A N11113 N11114
!#7 N11115 P4789 BLD 2 -1 FP BE Sec
!#7 N11116 P4789 BLD 3 -1 FP BE Sec
!#7 N11117 P4789 BLD 4 -1 FP BE Sec
!#7 N11118 P4790 MEMBAR
!#7 N11119 P4791 LD 22 -1 Int BE Pri
!#7 N11120 P4792 LD 9 -1 Int BE Pri
!#7 N11121 P4793 MEMBAR
!#7 N11122 P4794 BLD 26 -1 FP BE Pri
!#7 N11123 P4794 BLD 27 -1 FP BE Pri
!#7 N11124 P4795 MEMBAR
!#7 N11125 P4796 REPLACEMENT 32 Int BE Pri
!#7 N11126 P4797 MEMBAR
!#7 N11127 P4798 BLD 17 -1 FP BE Pri
!#7 N11128 P4799 MEMBAR
!#7 N11129 P4800 REPLACEMENT 14 Int BE Pri
!#7 N11130 P4801 MEMBAR
!#7 N11131 P4802 BST 0 0x43000100 FP BE Pri
!#7 N11132 P4802 BST 1 0x43000101 FP BE Pri
!#A N11131 N11132
!#7 N11133 P4802 BST 2 0x43000102 FP BE Pri
!#7 N11134 P4802 BST 3 0x43000103 FP BE Pri
!#7 N11135 P4802 BST 4 0x43000104 FP BE Pri
!#7 N11136 P4803 MEMBAR
!#7 N11137 P4804 REPLACEMENT 11 Int BE Pri
!#7 N11138 P4805 MEMBAR
!#7 N11139 P4806 BST 14 0x43000105 FP BE Pri
!#7 N11140 P4807 MEMBAR
!#7 N11141 P4808 LD 0 -1 FP BE Pri
!#7 N11142 P4809 REPLACEMENT 11 Int BE Pri
!#7 N11143 P4810 REPLACEMENT 9 Int BE Sec
!#7 N11144 P4811 REPLACEMENT 22 Int BE Pri
!#7 N11145 P4812 REPLACEMENT 27 Int BE Pri
!#7 N11146 P4813 MEMBAR
!#7 N11147 P4814 BST 18 0x43000106 FP BE Pri
!#7 N11148 P4815 MEMBAR
!#7 N11149 P4816 REPLACEMENT 24 Int BE Pri
!#7 N11150 P4817 IDC_FLIP 9 Int BE Pri
!#7 N11151 P4818 REPLACEMENT 16 Int BE Pri
!#7 N11152 P4819 REPLACEMENT 24 Int BE Sec
!#7 N11153 P4820 MEMBAR
!#7 N11154 P4821 BLD 0 -1 FP BE Pri
!#7 N11155 P4821 BLD 1 -1 FP BE Pri
!#A N11154 N11155
!#7 N11156 P4821 BLD 2 -1 FP BE Pri
!#7 N11157 P4821 BLD 3 -1 FP BE Pri
!#7 N11158 P4821 BLD 4 -1 FP BE Pri
!#7 N11159 P4822 MEMBAR
!#7 N11160 P4823 REPLACEMENT 21 Int BE Nuc
!#7 N11161 P4824 REPLACEMENT 16 Int BE Pri
!#7 N11162 P4825 MEMBAR
!#7 N11163 P4826 BLD 0 -1 FP BE Pri
!#7 N11164 P4826 BLD 1 -1 FP BE Pri
!#A N11163 N11164
!#7 N11165 P4826 BLD 2 -1 FP BE Pri
!#7 N11166 P4826 BLD 3 -1 FP BE Pri
!#7 N11167 P4826 BLD 4 -1 FP BE Pri
!#7 N11168 P4827 MEMBAR
!#7 N11169 P4828 ST 25 0x43000107 FP BE Sec
!#7 N11170 P4829 REPLACEMENT 18 Int BE Pri
!#7 N11171 P4830 ST 30 0x43000108 FP BE Sec
!#7 N11172 P4831 MEMBAR
!#7 N11173 P4832 BLD 31 -1 FP BE Pri
!#7 N11174 P4833 MEMBAR
!#7 N11175 P4834 LD 17 -1 FP BE Nuc
!#7 N11176 P4835 ST 26 0x43000109 FP BE Pri
!#7 N11177 P4836 ST 33 0x380002f Int BE Pri
!#7 N11178 P4837 REPLACEMENT 18 Int BE Pri
!#7 N11179 P4838 REPLACEMENT 21 Int BE Pri
!#7 N11180 P4839 LD 11 -1 FP BE Nuc
!#7 N11181 P4840 IDC_FLIP 14 Int BE Pri
!#7 N11182 P4841 MEMBAR
!#7 N11183 P4842 BST 8 0x4300010a FP BE Sec
!#7 N11184 P4842 BST 9 0x4300010b FP BE Sec
!#7 N11185 P4843 MEMBAR
!#7 N11186 P4844 BLD 21 -1 FP BE Pri
!#7 N11187 P4844 BLD 22 -1 FP BE Pri
!#A N11186 N11187
!#7 N11188 P4844 BLD 23 -1 FP BE Pri
!#7 N11189 P4845 MEMBAR
!#7 N11190 P4846 REPLACEMENT 28 Int BE Pri
!#7 N11191 P4847 REPLACEMENT 12 Int BE Sec
!#7 N11192 P4848 LD 6 -1 Int BE Pri
!#7 N11193 P4849 REPLACEMENT 16 Int BE Sec
!#7 N11194 P4850 LD 9 -1 FP BE Pri
!#7 N11195 P4851 MEMBAR
!#7 N11196 P4852 BST 15 0x4300010c FP BE Pri
!#7 N11197 P4853 MEMBAR
!#7 N11198 P4854 BLD 5 -1 FP BE Pri
!#7 N11199 P4854 BLD 6 -1 FP BE Pri
!#7 N11200 P4855 MEMBAR
!#7 N11201 P4856 LD 2 -1 FP BE Pri
!#7 N11202 P4857 REPLACEMENT 14 Int BE Pri
!#7 N11203 P4858 MEMBAR
!#7 N11204 P4859 BST 11 0x4300010d FP BE Pri
!#7 N11205 P4859 BST 12 0x4300010e FP BE Pri
!#A N11204 N11205
!#7 N11206 P4859 BST 13 0x4300010f FP BE Pri
!#7 N11207 P4860 MEMBAR
!#7 N11208 P4861 BLD 5 -1 FP BE Pri
!#7 N11209 P4861 BLD 6 -1 FP BE Pri
!#7 N11210 P4862 MEMBAR
!#7 N11211 P4863 LD 9 -1 FP BE Nuc
!#7 N11212 P4864 REPLACEMENT 22 Int BE Pri
!#7 N11213 P4865 LD 0 -1 FP BE Pri
!#7 N11214 P4866 REPLACEMENT 9 Int BE Pri
!#7 N11215 P4867 REPLACEMENT 22 Int BE Sec
!#7 N11216 P4868 MEMBAR
!#7 N11217 P4869 BST 26 0x43000110 FP BE Pri
!#7 N11218 P4869 BST 27 0x43000111 FP BE Pri
!#7 N11219 P4870 MEMBAR
!#7 N11220 P4871 BST 11 0x43000112 FP BE Pri
!#7 N11221 P4871 BST 12 0x43000113 FP BE Pri
!#A N11220 N11221
!#7 N11222 P4871 BST 13 0x43000114 FP BE Pri
!#7 N11223 P4872 MEMBAR
!#7 N11224 P4873 LD 5 -1 FP BE Pri
!#7 N11225 P4874 REPLACEMENT 8 Int BE Nuc
!#7 N11226 P4875 ST 5 0x3800030 Int BE Nuc
!#7 N11227 P4876 ST 7 0x3800031 Int BE Pri
!#7 N11228 P4877 REPLACEMENT 26 Int BE Nuc
!#7 N11229 P4878 LD 16 -1 FP BE Pri
!#7 N11230 P4879 ST 25 0x43000115 FP BE Nuc
!#7 N11231 P4880 MEMBAR
!#7 N11232 P4881 BLD 11 -1 FP BE Pri
!#7 N11233 P4881 BLD 12 -1 FP BE Pri
!#A N11232 N11233
!#7 N11234 P4881 BLD 13 -1 FP BE Pri
!#7 N11235 P4882 MEMBAR
!#7 N11236 P4883 REPLACEMENT 7 Int BE Pri
!#7 N11237 P4884 IDC_FLIP 8 Int BE Pri
!#7 N11238 P4885 LD 3 -1 FP BE Pri
!#7 N11239 P4886 REPLACEMENT 15 Int BE Pri
!#7 N11240 P4887 MEMBAR
!#7 N11241 P4888 BLD 21 -1 FP BE Pri
!#7 N11242 P4888 BLD 22 -1 FP BE Pri
!#A N11241 N11242
!#7 N11243 P4888 BLD 23 -1 FP BE Pri
!#7 N11244 P4889 MEMBAR
!#7 N11245 P4890 REPLACEMENT 16 Int BE Sec
!#7 N11246 P4891 MEMBAR
!#7 N11247 P4892 BSTC 33 0x43000116 FP BE Pri
!#7 N11248 P4893 MEMBAR
!#7 N11249 P4894 BLD 31 -1 FP BE Pri
!#7 N11250 P4895 MEMBAR
!#7 N11251 P4896 BLD 32 -1 FP BE Pri
!#7 N11252 P4897 MEMBAR
!#7 N11253 P4898 BSTC 0 0x43000117 FP BE Pri
!#7 N11254 P4898 BSTC 1 0x43000118 FP BE Pri
!#A N11253 N11254
!#7 N11255 P4898 BSTC 2 0x43000119 FP BE Pri
!#7 N11256 P4898 BSTC 3 0x4300011a FP BE Pri
!#7 N11257 P4898 BSTC 4 0x4300011b FP BE Pri
!#7 N11258 P4899 MEMBAR
!#7 N11259 P4900 BLD 21 -1 FP BE Pri
!#7 N11260 P4900 BLD 22 -1 FP BE Pri
!#A N11259 N11260
!#7 N11261 P4900 BLD 23 -1 FP BE Pri
!#7 N11262 P4901 MEMBAR
!#7 N11263 P4902 ST 26 0x3800032 Int BE Nuc
!#7 N11264 P4903 MEMBAR
!#7 N11265 P4904 BST 8 0x4300011c FP BE Pri
!#7 N11266 P4904 BST 9 0x4300011d FP BE Pri
!#7 N11267 P4905 MEMBAR
!#7 N11268 P4906 BLD 19 -1 FP BE Sec
!#7 N11269 P4907 MEMBAR
!#7 N11270 P4908 BST 0 0x4300011e FP BE Pri
!#7 N11271 P4908 BST 1 0x4300011f FP BE Pri
!#A N11270 N11271
!#7 N11272 P4908 BST 2 0x43000120 FP BE Pri
!#7 N11273 P4908 BST 3 0x43000121 FP BE Pri
!#7 N11274 P4908 BST 4 0x43000122 FP BE Pri
!#7 N11275 P4909 MEMBAR
!#7 N11276 P4910 REPLACEMENT 28 Int BE Pri
!#7 N11277 P4911 MEMBAR
!#7 N11278 P4912 BST 5 0x43000123 FP BE Sec
!#7 N11279 P4912 BST 6 0x43000124 FP BE Sec
!#7 N11280 P4913 MEMBAR
!#7 N11281 P4914 BST 16 0x43000125 FP BE Pri
!#7 N11282 P4915 MEMBAR
!#7 N11283 P4916 ST 8 0x3800033 Int BE Pri
!#7 N11284 P4917 MEMBAR
!#7 N11285 P4918 BLD 14 -1 FP BE Pri
!#7 N11286 P4919 MEMBAR
!#7 N11287 P4920 REPLACEMENT 19 Int BE Nuc
!#7 N11288 P4921 LD 27 -1 Int BE Pri
!#7 N11289 P4922 LD 29 -1 Int BE Sec
!#7 N11290 P4923 ST 4 0x43000126 FP BE Pri
!#7 N11291 P4924 REPLACEMENT 15 Int BE Pri
!#7 N11292 P4925 ST 5 0x43000127 FP BE Pri
!#7 N11293 P4926 MEMBAR
!#7 N11294 P4927 BLD 8 -1 FP BE Pri
!#7 N11295 P4927 BLD 9 -1 FP BE Pri
!#7 N11296 P4928 MEMBAR
!#7 N11297 P4929 LD 13 -1 Int BE Nuc
!#7 N11298 P4930 MEMBAR
!#7 N11299 P4931 BST 10 0x43000128 FP BE Pri
!#7 N11300 P4932 MEMBAR
!#7 N11301 P4933 ST 31 0x3800034 Int BE Sec
!#7 N11302 P4934 MEMBAR
!#7 N11303 P4935 BSTC 10 0x43000129 FP BE Pri
!#7 N11304 P4936 MEMBAR
!#7 N11305 P4937 ST 21 0x3800035 Int BE Pri
!#7 N11306 P4938 MEMBAR
!#7 N11307 P4939 BST 24 0x4300012a FP BE Pri
!#7 N11308 P4939 BST 25 0x4300012b FP BE Pri
!#7 N11309 P4940 MEMBAR
!#7 N11310 P4941 REPLACEMENT 2 Int BE Pri
!#7 N11311 P4942 MEMBAR
!#7 N11312 P4943 BLD 24 -1 FP BE Pri
!#7 N11313 P4943 BLD 25 -1 FP BE Pri
!#7 N11314 P4944 MEMBAR
!#7 N11315 P4945 LD 33 -1 FP BE Pri
!#7 N11316 P4946 MEMBAR
!#7 N11317 P4947 BSTC 0 0x4300012c FP BE Sec
!#7 N11318 P4947 BSTC 1 0x4300012d FP BE Sec
!#A N11317 N11318
!#7 N11319 P4947 BSTC 2 0x4300012e FP BE Sec
!#7 N11320 P4947 BSTC 3 0x4300012f FP BE Sec
!#7 N11321 P4947 BSTC 4 0x43000130 FP BE Sec
!#7 N11322 P4948 MEMBAR
!#7 N11323 P4949 BLD 14 -1 FP BE Pri
!#7 N11324 P4950 MEMBAR
!#7 N11325 P4951 REPLACEMENT 10 Int BE Pri
!#7 N11326 P4952 IDC_FLIP 31 Int BE Pri
!#7 N11327 P4953 MEMBAR
!#7 N11328 P4954 BLD 11 -1 FP BE Pri
!#7 N11329 P4954 BLD 12 -1 FP BE Pri
!#A N11328 N11329
!#7 N11330 P4954 BLD 13 -1 FP BE Pri
!#7 N11331 P4955 MEMBAR
!#7 N11332 P4956 IDC_FLIP 0 Int BE Pri
!#7 N11333 P4957 MEMBAR
!#7 N11334 P4958 BLD 16 -1 FP BE Pri
!#7 N11335 P4959 MEMBAR
!#7 N11336 P4960 BLD 28 -1 FP BE Pri
!#7 N11337 P4961 MEMBAR
!#7 N11338 P4962 BST 26 0x43000131 FP BE Pri
!#7 N11339 P4962 BST 27 0x43000132 FP BE Pri
!#7 N11340 P4963 MEMBAR
!#7 N11341 P4964 LD 24 -1 FP BE Pri
!#7 N11342 P4965 REPLACEMENT 4 Int BE Pri
!#7 N11343 P4966 REPLACEMENT 30 Int BE Pri
!#7 N11344 P4967 MEMBAR
!#7 N11345 P4968 BSTC 5 0x43000133 FP BE Pri
!#7 N11346 P4968 BSTC 6 0x43000134 FP BE Pri
!#7 N11347 P4969 MEMBAR
!#7 N11348 P4970 BLD 14 -1 FP BE Pri
!#7 N11349 P4971 MEMBAR
!#7 N11350 P4972 BLD 26 -1 FP BE Sec
!#7 N11351 P4972 BLD 27 -1 FP BE Sec
!#7 N11352 P4973 MEMBAR
!#7 N11353 P4974 REPLACEMENT 31 Int BE Sec
!#7 N11354 P4975 LD 14 -1 FP BE Pri
!#7 N11355 P4976 ST 28 0x43000135 FP BE Pri
!#7 N11356 P4977 REPLACEMENT 1 Int BE Pri
!#7 N11357 P4978 LD 7 -1 Int BE Pri
!#7 N11358 P4979 REPLACEMENT 33 Int BE Nuc
!#7 N11359 P4980 MEMBAR
!#7 N11360 P4981 BST 10 0x43000136 FP BE Pri
!#7 N11361 P4982 MEMBAR
!#7 N11362 P4983 ST 32 0x3800036 Int BE Pri
!#7 N11363 P4984 REPLACEMENT 11 Int BE Pri
!#7 N11364 P4985 LD 4 -1 FP BE Sec
!#7 N11365 P4986 REPLACEMENT 11 Int BE Pri
!#7 N11366 P4987 REPLACEMENT 26 Int BE Sec
!#7 N11367 P4988 ST 8 0x43000137 FP BE Pri
!#7 N11368 P4989 LD 32 -1 Int BE Pri
!#7 N11369 P4990 REPLACEMENT 24 Int BE Pri
!#7 N11370 P4991 REPLACEMENT 29 Int BE Pri
!#7 N11371 P4992 MEMBAR
!#7 N11372 P4993 BSTC 11 0x43000138 FP BE Sec
!#7 N11373 P4993 BSTC 12 0x43000139 FP BE Sec
!#A N11372 N11373
!#7 N11374 P4993 BSTC 13 0x4300013a FP BE Sec
!#7 N11375 P4994 MEMBAR
!#7 N11376 P4995 BLD 15 -1 FP BE Pri
!#7 N11377 P4996 MEMBAR
!#7 N11378 P4997 ST 14 0x3800037 Int BE Sec
!#7 N11379 P4998 REPLACEMENT 22 Int BE Pri
!#7 N11380 P4999 REPLACEMENT 11 Int BE Pri
!#7 N11381 P5000 MEMBAR
!#7 N11382 P5001 BST 11 0x4300013b FP BE Sec
!#7 N11383 P5001 BST 12 0x4300013c FP BE Sec
!#A N11382 N11383
!#7 N11384 P5001 BST 13 0x4300013d FP BE Sec
!#7 N11385 P5002 MEMBAR
!#7 N11386 P5003 BSTC 0 0x4300013e FP BE Pri
!#7 N11387 P5003 BSTC 1 0x4300013f FP BE Pri
!#A N11386 N11387
!#7 N11388 P5003 BSTC 2 0x43000140 FP BE Pri
!#7 N11389 P5003 BSTC 3 0x43000141 FP BE Pri
!#7 N11390 P5003 BSTC 4 0x43000142 FP BE Pri
!#7 N11391 P5004 MEMBAR
!#7 N11392 P5005 REPLACEMENT 13 Int BE Pri
!#7 N11393 P5006 REPLACEMENT 20 Int BE Pri
!#7 N11394 P5007 MEMBAR
!#7 N11395 P5008 BST 8 0x43000143 FP BE Pri
!#7 N11396 P5008 BST 9 0x43000144 FP BE Pri
!#7 N11397 P5009 MEMBAR
!#7 N11398 P5010 REPLACEMENT 18 Int BE Pri
!#7 N11399 P5011 ST 29 0x3800038 Int BE Pri
!#7 N11400 P5012 REPLACEMENT 31 Int BE Pri
!#7 N11401 P5013 REPLACEMENT 17 Int BE Pri
!#7 N11402 P5014 LD 2 -1 Int BE Pri
!#7 N11403 P5015 REPLACEMENT 26 Int BE Pri
!#7 N11404 P5016 LD 16 -1 FP BE Pri
!#7 N11405 P5017 MEMBAR
!#7 N11406 P5018 BLD 24 -1 FP BE Pri
!#7 N11407 P5018 BLD 25 -1 FP BE Pri
!#7 N11408 P5019 MEMBAR
!#7 N11409 P5020 IDC_FLIP 7 Int BE Pri
!#7 N11410 P5021 ST 33 0x43000145 FP BE Pri
!#7 N11411 P5022 REPLACEMENT 15 Int BE Pri
!#7 N11412 P5023 ST 7 0x43000146 FP BE Pri
!#7 N11413 P5024 LD 23 -1 FP BE Pri
!#7 N11414 P5025 REPLACEMENT 17 Int BE Pri
!#7 N11415 P5026 MEMBAR
!#7 N11416 P5027 BST 21 0x43000147 FP BE Pri
!#7 N11417 P5027 BST 22 0x43000148 FP BE Pri
!#A N11416 N11417
!#7 N11418 P5027 BST 23 0x43000149 FP BE Pri
!#7 N11419 P5028 MEMBAR
!#7 N11420 P5029 BLD 14 -1 FP BE Pri
!#7 N11421 P5030 MEMBAR
!#7 N11422 P5031 BLD 24 -1 FP BE Pri
!#7 N11423 P5031 BLD 25 -1 FP BE Pri
!#7 N11424 P5032 MEMBAR
!#7 N11425 P5033 LD 8 -1 Int BE Pri
!#7 N11426 P5034 REPLACEMENT 24 Int BE Pri
!#7 N11427 P5035 ST 26 0x3800039 Int BE Sec
!#7 N11428 P5036 REPLACEMENT 31 Int BE Pri
!#7 N11429 P5037 REPLACEMENT 9 Int BE Pri
!#7 N11430 P5038 ST 27 0x380003a Int BE Sec
!#7 N11431 P5039 IDC_FLIP 4 Int BE Pri
!#7 N11432 P5040 REPLACEMENT 17 Int BE Pri
!#7 N11433 P5041 ST 25 0x380003b Int BE Pri
!#7 N11434 P5042 LD 16 -1 FP BE Pri
!#7 N11435 P5043 MEMBAR
!#7 N11436 P5044 BST 16 0x4300014a FP BE Pri
!#7 N11437 P5045 MEMBAR
!#7 N11438 P5046 BLD 20 -1 FP BE Pri
!#7 N11439 P5047 MEMBAR
!#7 N11440 P5048 ST 29 0x4300014b FP BE Pri
!#7 N11441 P5049 MEMBAR
!#7 N11442 P5050 BST 0 0x4300014c FP BE Pri
!#7 N11443 P5050 BST 1 0x4300014d FP BE Pri
!#A N11442 N11443
!#7 N11444 P5050 BST 2 0x4300014e FP BE Pri
!#7 N11445 P5050 BST 3 0x4300014f FP BE Pri
!#7 N11446 P5050 BST 4 0x43000150 FP BE Pri
!#7 N11447 P5051 MEMBAR
!#7 N11448 P5052 BLD 0 -1 FP BE Pri
!#7 N11449 P5052 BLD 1 -1 FP BE Pri
!#A N11448 N11449
!#7 N11450 P5052 BLD 2 -1 FP BE Pri
!#7 N11451 P5052 BLD 3 -1 FP BE Pri
!#7 N11452 P5052 BLD 4 -1 FP BE Pri
!#7 N11453 P5053 MEMBAR
!#7 N11454 P5054 ST 1 0x43000151 FP BE Pri
!#7 N11455 P5055 ST 15 0x43000152 FP BE Nuc
!#7 N11456 P5056 ST 10 0x380003c Int BE Pri
!#7 N11457 P5057 MEMBAR
!#7 N11458 P5058 BLD 15 -1 FP BE Pri
!#7 N11459 P5059 MEMBAR
!#7 N11460 P5060 BST 0 0x43000153 FP BE Pri
!#7 N11461 P5060 BST 1 0x43000154 FP BE Pri
!#A N11460 N11461
!#7 N11462 P5060 BST 2 0x43000155 FP BE Pri
!#7 N11463 P5060 BST 3 0x43000156 FP BE Pri
!#7 N11464 P5060 BST 4 0x43000157 FP BE Pri
!#7 N11465 P5061 MEMBAR
!#7 N11466 P5062 REPLACEMENT 26 Int BE Pri
!#7 N11467 P5063 ST 26 0x380003d Int BE Pri
!#7 N11468 P5064 REPLACEMENT 2 Int BE Pri
!#7 N11469 P5065 MEMBAR
!#7 N11470 P5066 BST 20 0x43000158 FP BE Pri
!#7 N11471 P5067 MEMBAR
!#7 N11472 P5068 ST 29 0x43000159 FP BE Pri
!#7 N11473 P5069 MEMBAR
!#7 N11474 P5070 BST 8 0x4300015a FP BE Pri
!#7 N11475 P5070 BST 9 0x4300015b FP BE Pri
!#7 N11476 P5071 MEMBAR
!#7 N11477 P5072 REPLACEMENT 21 Int BE Pri
!#7 N11478 P5073 ST 3 0x380003e Int LE Pri
!#7 N11479 P5074 FLUSHI 26 Int BE Pri
!#7 N11480 P5075 LD 5 -1 Int BE Pri
!#7 N11481 P5076 MEMBAR
!#7 N11482 P5077 BLD 20 -1 FP BE Pri
!#7 N11483 P5078 MEMBAR
!#7 N11484 P5079 BST 11 0x4300015c FP BE Pri
!#7 N11485 P5079 BST 12 0x4300015d FP BE Pri
!#A N11484 N11485
!#7 N11486 P5079 BST 13 0x4300015e FP BE Pri
!#7 N11487 P5080 MEMBAR
!#7 N11488 P5081 LD 7 -1 Int LE Pri Loop_exit
!#7 N11489 P5082 MEMBAR
