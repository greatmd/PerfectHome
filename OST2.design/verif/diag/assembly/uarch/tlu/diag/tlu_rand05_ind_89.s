/*
* ========== Copyright Header Begin ==========================================
* 
* OpenSPARC T2 Processor File: tlu_rand05_ind_89.s
* Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
* 4150 Network Circle, Santa Clara, California 95054, U.S.A.
*
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; version 2 of the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*
* For the avoidance of doubt, and except that if any non-GPL license 
* choice is available it will apply instead, Sun elects to use only 
* the General Public License version 2 (GPLv2) at this time for any 
* software where a choice of GPL license versions is made 
* available with the language indicating that GPLv2 or any later version 
* may be used, or where a choice of which version of the GPL is applied is 
* otherwise unspecified. 
*
* Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
* CA 95054 USA or visit www.sun.com if you need additional information or 
* have any questions. 
*
* 
* ========== Copyright Header End ============================================
*/
#define NO_INTERNAL_SPU
#define IMMU_SKIP_IF_NO_TTE
#define DMMU_SKIP_IF_NO_TTE
#define PORTABLE_CORE
#define MAIN_PAGE_NUCLEUS_ALSO
#define MAIN_PAGE_HV_ALSO
#define MAIN_PAGE_VA_RS_RA_ALSO
#define DISABLE_PART_LIMIT_CHECK
#define MAIN_PAGE_USE_CONFIG 3
#define PART0_Z_TSB_SIZE_3 10
#define PART0_Z_PAGE_SIZE_3 1
#define PART0_NZ_TSB_SIZE_3 10
#define PART0_NZ_PAGE_SIZE_3 1
#define PART0_Z_TSB_SIZE_1 3
#define PART0_NZ_TSB_SIZE_1 3

#define PART_0_BASE 0x0
#define USER_PAGE_CUSTOM_MAP
#define MAIN_BASE_TEXT_VA 0x333000000
#define MAIN_BASE_TEXT_RA 0x033000000
#define MAIN_BASE_DATA_VA 0x379400000
#define MAIN_BASE_DATA_RA 0x079400000
#define HIGHVA_HIGHNUM 0x3

#d
#define NO_EOB_MARKER

#undef INC_ERR_TRAPS

#undef H_HT0_Instruction_Access_MMU_Error_0x71
#define H_HT0_Instruction_Access_MMU_Error_0x71
#define SUN_H_HT0_Instruction_Access_MMU_Error_0x71 \
	mov 0x80, %l3;\
    stxa    %g0, [%l3]0x57;\
    retry;
#undef H_HT0_Instruction_access_error_0x0a
#define H_HT0_Instruction_access_error_0x0a 
#define SUN_H_HT0_Instruction_access_error_0x0a retry
#undef H_HT0_Internal_Processor_Error_0x29
#define H_HT0_Internal_Processor_Error_0x29 
#define SUN_H_HT0_Internal_Processor_Error_0x29 retry
#undef H_HT0_Data_Access_MMU_Error_0x72
#define H_HT0_Data_Access_MMU_Error_0x72 
#define SUN_H_HT0_Data_Access_MMU_Error_0x72 \
	mov 0x80, %l3;\
    stxa    %g0, [%l3]0x5f;\
    retry;
#undef H_HT0_Data_access_error_0x32
#define H_HT0_Data_access_error_0x32 
#define SUN_H_HT0_Data_access_error_0x32  \
	add     %g0, 0x18, %i1;\
	ldxa  [%i1] 0x58, %i2;\
    cmp %i2, 0x4;\
    bne 1f;\
    nop;\
    done;\
    1:retry
#undef H_HT0_Hw_Corrected_Error_0x63
#define H_HT0_Hw_Corrected_Error_0x63
#define SUN_H_HT0_Hw_Corrected_Error_0x63 ldxa [%g0]ASI_DESR, %i1; retry
#undef H_HT0_Sw_Recoverable_Error_0x40
#define H_HT0_Sw_Recoverable_Error_0x40 
#define SUN_H_HT0_Sw_Corrected_Error_0x63 ldxa [%g0]ASI_DESR, %i1; retry
#undef H_HT0_Store_Error_0x07
#define H_HT0_Store_Error_0x07
#define SUN_H_HT0_Store_Error_0x07 retry

#define DAE_SKIP_IF_SOCU_ERROR
#ifndef T_HANDLER_RAND4_1
#define T_HANDLER_RAND4_1 b .+16;\
    sdiv %r1, %r0, %l4;nop;nop
#endif
#ifndef T_HANDLER_RAND7_1
#define T_HANDLER_RAND7_1 b .+28;\
    pdist %f4, %f6, %f20; \
    nop; nop ; nop; nop; illtrap
#endif
#ifndef T_HANDLER_RAND4_2 
#define T_HANDLER_RAND4_2 save %i7, %g0, %i7; \
    save %i7, %g0, %i7; \
    restore %i7, %g0, %i7;\
    restore %i7, %g0, %i7;
#endif
#ifndef T_HANDLER_RAND7_2
#define T_HANDLER_RAND7_2 b .+8 ;\
    rdpr %pstate, %l2;\
    b .+8 ;\
    rdpr %tstate, %l3;\
    b .+12 ;\
    wrpr %l3, %r0, %tstate; nop
#endif
#ifndef T_HANDLER_RAND4_3
#define T_HANDLER_RAND4_3 save %i7, %g0, %i7;\
    restore %i7, %g0, %i7;\
    save %i7, %g0, %i7; \
    restore %i7, %g0, %i7;
#endif
#ifndef T_HANDLER_RAND7_3
#define T_HANDLER_RAND7_3 b .+8 ;\
    rdpr %tnpc, %l2;\
    and %l2, 0xfc0, %l2;\
    add %i7, %l2, %l2;\
    stda    %f16,[%i7]ASI_BLOCK_AS_IF_USER_PRIMARY ;\
    b .+8 ;\
    stda    %f0,[%i7]ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE ;
#endif
#ifndef T_HANDLER_RAND4_4
#define T_HANDLER_RAND4_4 b .+4 ; b .+4; b .+4; b .+4
#endif
#ifndef T_HANDLER_RAND7_4 
#define T_HANDLER_RAND7_4 b .+8;\
    save %i7, %g0, %i7; \
    b,a .+8;\
    b .+12;\
    stw %i7, [%i7];\
    b .-8;;\
    restore %i7, %g0, %i7; 

#endif
#ifndef T_HANDLER_RAND4_5
#define T_HANDLER_RAND4_5 ldda	[%r31]ASI_NUCLEUS_QUAD_LDD, %f16;\
    sdiv %l4, %l5, %l7;\
    add  %r31, 128, %l5;\
    stda %l4, [%i7]ASI_BLOCK_PRIMARY_LITTLE;
#endif
#ifndef T_HANDLER_RAND7_5
#define T_HANDLER_RAND7_5 save %i7, %g0, %i7;\
    rdpr %tnpc, %l2;\
    wrpr %l2, %tpc;\
    add %l2, 4, %l2;\
    wrpr %l2, %tnpc;\
    restore %i7, %g0, %i7;\
    retry;
#endif
#ifndef T_HANDLER_RAND4_6
#define T_HANDLER_RAND4_6 ldda [%r31]ASI_BLOCK_AS_IF_USER_PRIMARY, %f32;\
    rd %fprs, %l2; \
    wr %l2, 0x4, %fprs ;\
    stda    %f0,[%r31]ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE;
#endif
#ifndef T_HANDLER_RAND7_6
#define T_HANDLER_RAND7_6 umul %o4, 2, %o5;\
    rdpr %tnpc, %l2;\
    wrpr %l2, %tpc;\
    add %l2, 4, %l2;\
    wrpr %l2, %tnpc;\
    stw %l2, [%i7];\
    retry;
#endif
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#ifndef HT_HANDLER_RAND4_1  
#define HT_HANDLER_RAND4_1 mov 0x80, %l3;\
    b .+12;\
    stxa %l3, [%l3]0x57 ;\
    nop
#endif
#ifndef HT_HANDLER_RAND7_1
#define HT_HANDLER_RAND7_1 b .+28;\
    pdist %f4, %f4, %f20;\
    nop; nop ; nop; nop; illtrap
#endif
#ifndef HT_HANDLER_RAND4_2 
#define HT_HANDLER_RAND4_2 rdpr %tstate, %l2;\
    b .+12;\
    wrpr %l2, 0x800, %tstate;\
    nop;
#endif
#ifndef HT_HANDLER_RAND7_2
#define HT_HANDLER_RAND7_2 b .+8 ;\
    rdhpr %hpstate, %l2;\
    b .+8 ;\
    rdhpr %htstate, %l3;\
    b .+12 ;\
    wrhpr %l3, %r0, %htstate; nop
#endif
#ifndef HT_HANDLER_RAND4_3
#define HT_HANDLER_RAND4_3 stxa %l4, [%r31]ASI_AS_IF_USER_PRIMARY;\
    mov 0x80, %l3;\
    stxa %l3, [%l3]0x5f ;\
    b .+8 ;\
    ldxa [%r31]ASI_AS_IF_USER_PRIMARY, %l4;
#endif
#ifndef HT_HANDLER_RAND7_3
#define HT_HANDLER_RAND7_3 b .+8 ;\
    rdpr %tnpc, %l2;\
    and %l2, 0xfc0, %l2;\
    add %i7, %l2, %l2;\
    stda    %f16,[%i7]ASI_BLOCK_AS_IF_USER_PRIMARY ;\
    b .+8 ;\
    stda    %f0,[%i7]ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE ;
#endif
#ifndef HT_HANDLER_RAND4_4
#define HT_HANDLER_RAND4_4 ldda [%i7]ASI_BLOCK_PRIMARY_LITTLE, %f0;\
    b .+12 ;\
    stxa %l3, [%g0]ASI_LSU_CONTROL; nop
#endif
#ifndef HT_HANDLER_RAND7_4 
#define HT_HANDLER_RAND7_4 rdpr %tnpc, %l3;\
    and %l3, 0xff, %l3;\
    sllx %l3, 26, %l3;\
    ldxa [%g0]0x45, %l4;\
    or %l3, %l4, %l3 ;\
    stxa %l3, [%g0]0x45  ;\
    nop;
#endif
#ifndef HT_HANDLER_RAND4_5
#define HT_HANDLER_RAND4_5 ldda	[%r31]ASI_NUCLEUS_QUAD_LDD, %f48;\
    sdiv %l4, %l5, %l6;\
    sdiv %l3, %l6, %l7;\
    stda %f32, [%r31]ASI_BLOCK_PRIMARY_LITTLE;
#endif
#ifndef HT_HANDLER_RAND7_5
#define HT_HANDLER_RAND7_5 save %i7, %g0, %i7;\
    rdpr %tnpc, %l2;\
    wrpr %l2, %tpc;\
    add %l2, 4, %l2;\
    wrpr %l2, %tnpc;\
    restore %i7, %g0, %i7;\
    retry;
#endif
#ifndef HT_HANDLER_RAND4_6
#define HT_HANDLER_RAND4_6 ld [%r31], %l2;\
    rd %fprs, %l2; \
    wr %l2, 0x4, %fprs ;\
    stda    %f0,[%i7]ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE;
#endif
#ifndef HT_HANDLER_RAND7_6
#define HT_HANDLER_RAND7_6 rdhpr %htstate, %o4;\
    rdpr %tnpc, %l2;\
    wrpr %l2, %tpc;\
    add %l2, 4, %l2;\
    wrpr %l2, %tnpc;\
    wrhpr %o4, %r0, %htstate;\
    retry;
#endif

!!!!!!!!!!!!!!!!!!!!!!!!!
!! Disable trap checking
#define NO_TRAPCHECK

! Enable Traps
#define ENABLE_T1_Privileged_Opcode_0x11
#define ENABLE_T1_Fp_Disabled_0x20
#define ENABLE_HT0_Watchdog_Reset_0x02

#define FILL_TRAP_RETRY
#define SPILL_TRAP_RETRY
#define CLEAN_WIN_RETRY

#define My_RED_Mode_Other_Reset
#define My_RED_Mode_Other_Reset \
    ba red_other_ext;\
    nop;retry;nop;nop;nop;nop;nop

#define H_HT0_Software_Initiated_Reset_0x04
#define SUN_H_HT0_Software_Initiated_Reset_0x04 \
    setx Software_Reset_Handler, %g1, %g2 ;\
    jmp %g2 ;\
    nop
#define H_T1_Clean_Window_0x24
#define SUN_H_T1_Clean_Window_0x24 \
    rdpr %cleanwin, %l1;\
    add %l1,1,%l1;\
    wrpr %l1, %g0, %cleanwin;\
    retry; nop; nop; nop; nop

#define H_T1_Clean_Window_0x25
#define SUN_H_T1_Clean_Window_0x25 \
    rdpr %cleanwin, %l1;\
    add %l1,1,%l1;\
    wrpr %l1, %g0, %cleanwin;\
    retry; nop; nop; nop; nop

#define H_T1_Clean_Window_0x26
#define SUN_H_T1_Clean_Window_0x26 \
    rdpr %cleanwin, %l1;\
    add %l1,1,%l1;\
    wrpr %l1, %g0, %cleanwin;\
    retry; nop; nop; nop; nop

#define H_T1_Clean_Window_0x27
#define SUN_H_T1_Clean_Window_0x27 \
    rdpr %cleanwin, %l1;\
    add %l1,1,%l1;\
    wrpr %l1, %g0, %cleanwin;\
    retry; nop; nop; nop; nop
#define H_HT0_Tag_Overflow
#define My_HT0_Tag_Overflow \
    HT_HANDLER_RAND7_1 ;\
    done

#define H_T0_Tag_Overflow
#define My_T0_Tag_Overflow \
    T_HANDLER_RAND7_2 ;\
    done

#define H_T1_Tag_Overflow_0x23
#define SUN_H_T1_Tag_Overflow_0x23 \
    T_HANDLER_RAND7_3 ;\
    done

#define H_T0_Window_Spill_0_Normal_Trap
#define SUN_H_T0_Window_Spill_0_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_1_Normal_Trap
#define SUN_H_T0_Window_Spill_1_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_2_Normal_Trap
#define SUN_H_T0_Window_Spill_2_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_3_Normal_Trap
#define SUN_H_T0_Window_Spill_3_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_4_Normal_Trap
#define SUN_H_T0_Window_Spill_4_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_5_Normal_Trap
#define SUN_H_T0_Window_Spill_5_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_6_Normal_Trap
#define SUN_H_T0_Window_Spill_6_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_7_Normal_Trap
#define SUN_H_T0_Window_Spill_7_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_0_Other_Trap
#define  SUN_H_T0_Window_Spill_0_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_1_Other_Trap
#define  SUN_H_T0_Window_Spill_1_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_2_Other_Trap
#define  SUN_H_T0_Window_Spill_2_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_3_Other_Trap
#define  SUN_H_T0_Window_Spill_3_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_4_Other_Trap
#define  SUN_H_T0_Window_Spill_4_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_5_Other_Trap
#define  SUN_H_T0_Window_Spill_5_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_6_Other_Trap
#define  SUN_H_T0_Window_Spill_6_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Spill_7_Other_Trap
#define  SUN_H_T0_Window_Spill_7_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_0_Normal_Trap
#define  SUN_H_T0_Window_Fill_0_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_1_Normal_Trap
#define  SUN_H_T0_Window_Fill_1_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_2_Normal_Trap
#define  SUN_H_T0_Window_Fill_2_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_3_Normal_Trap
#define  SUN_H_T0_Window_Fill_3_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_4_Normal_Trap
#define  SUN_H_T0_Window_Fill_4_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_5_Normal_Trap
#define  SUN_H_T0_Window_Fill_5_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_6_Normal_Trap
#define  SUN_H_T0_Window_Fill_6_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_7_Normal_Trap
#define  SUN_H_T0_Window_Fill_7_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_0_Other_Trap
#define SUN_H_T0_Window_Fill_0_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_1_Other_Trap
#define SUN_H_T0_Window_Fill_1_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_2_Other_Trap
#define SUN_H_T0_Window_Fill_2_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_3_Other_Trap
#define SUN_H_T0_Window_Fill_3_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_4_Other_Trap
#define SUN_H_T0_Window_Fill_4_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_5_Other_Trap
#define SUN_H_T0_Window_Fill_5_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_6_Other_Trap
#define SUN_H_T0_Window_Fill_6_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Window_Fill_7_Other_Trap
#define SUN_H_T0_Window_Fill_7_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;
#define H_T1_Window_Spill_0_Normal_Trap
#define SUN_H_T1_Window_Spill_0_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_1_Normal_Trap
#define SUN_H_T1_Window_Spill_1_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_2_Normal_Trap
#define SUN_H_T1_Window_Spill_2_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_3_Normal_Trap
#define SUN_H_T1_Window_Spill_3_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_4_Normal_Trap
#define SUN_H_T1_Window_Spill_4_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_5_Normal_Trap
#define SUN_H_T1_Window_Spill_5_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_6_Normal_Trap
#define SUN_H_T1_Window_Spill_6_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_7_Normal_Trap
#define SUN_H_T1_Window_Spill_7_Normal_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_0_Other_Trap
#define SUN_H_T1_Window_Spill_0_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_1_Other_Trap
#define SUN_H_T1_Window_Spill_1_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_2_Other_Trap
#define SUN_H_T1_Window_Spill_2_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_3_Other_Trap
#define SUN_H_T1_Window_Spill_3_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_4_Other_Trap
#define SUN_H_T1_Window_Spill_4_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_5_Other_Trap
#define SUN_H_T1_Window_Spill_5_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_6_Other_Trap
#define SUN_H_T1_Window_Spill_6_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Spill_7_Other_Trap
#define SUN_H_T1_Window_Spill_7_Other_Trap saved; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_0_Normal_Trap
#define SUN_H_T1_Window_Fill_0_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_1_Normal_Trap
#define SUN_H_T1_Window_Fill_1_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_2_Normal_Trap
#define SUN_H_T1_Window_Fill_2_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_3_Normal_Trap
#define SUN_H_T1_Window_Fill_3_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_4_Normal_Trap
#define SUN_H_T1_Window_Fill_4_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_5_Normal_Trap
#define SUN_H_T1_Window_Fill_5_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_6_Normal_Trap
#define SUN_H_T1_Window_Fill_6_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_7_Normal_Trap
#define SUN_H_T1_Window_Fill_7_Normal_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_0_Other_Trap
#define SUN_H_T1_Window_Fill_0_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_1_Other_Trap
#define SUN_H_T1_Window_Fill_1_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_2_Other_Trap
#define SUN_H_T1_Window_Fill_2_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_3_Other_Trap
#define SUN_H_T1_Window_Fill_3_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_4_Other_Trap
#define SUN_H_T1_Window_Fill_4_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_5_Other_Trap
#define SUN_H_T1_Window_Fill_5_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_6_Other_Trap
#define SUN_H_T1_Window_Fill_6_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T1_Window_Fill_7_Other_Trap
#define SUN_H_T1_Window_Fill_7_Other_Trap restored; retry; nop;nop;nop;nop;nop;nop;

#define H_T0_Trap_Instruction_0
#define My_T0_Trap_Instruction_0 \
    T_HANDLER_RAND7_5 ;\
    done;

#define H_T0_Trap_Instruction_1
#define My_T0_Trap_Instruction_1 \
    T_HANDLER_RAND7_6 ;\
    done;

#define H_T0_Trap_Instruction_2
#define My_T0_Trap_Instruction_2 \
    inc %o3;\
    umul %o3, 2, %o4;\
    ba 1f; \
    save %i7, %g0, %i7; \
    2: done; \
    nop; \
    1: ba 2b; \
    restore %i7, %g0, %i7
#define H_T0_Trap_Instruction_3
#define My_T0_Trap_Instruction_3 \
    save %i7, %g0, %i7 ;\
    T_HANDLER_RAND4_5;\
    stw %o4, [%i7];\
    restore %i7, %g0, %i7 ;\
    done 
#define H_T0_Trap_Instruction_4
#define My_T0_Trap_Instruction_4 \
    T_HANDLER_RAND7_6 ;\
    done;

#define H_T0_Trap_Instruction_5
#define My_T0_Trap_Instruction_5 \
    T_HANDLER_RAND4_5;\
    done;

#define H_T1_Trap_Instruction_0
#define My_T1_Trap_Instruction_0 \
    inc %o4;\
    umul %o4, 2, %o5;\
    ba 3f; \
    save %i7, %g0, %i7; \
    4: done; \
    nop; \
    3: ba 4b; \
    restore %i7, %g0, %i7
#define H_T1_Trap_Instruction_1
#define My_T1_Trap_Instruction_1 \
    T_HANDLER_RAND7_3;\
    done
#define H_T1_Trap_Instruction_2
#define My_T1_Trap_Instruction_2 \
    inc %o3;\
    umul %o3, 2, %o4;\
    ba 5f; \
    save %i7, %g0, %i7; \
    6: done; \
    nop; \
    5: ba 6b; \
    restore %i7, %g0, %i7
#define H_T1_Trap_Instruction_3
#define My_T1_Trap_Instruction_3 \
   T_HANDLER_RAND4_1;\
   done;

#define H_T1_Trap_Instruction_4
#define My_T1_Trap_Instruction_4 \
    T_HANDLER_RAND7_1;\
    done;
#define H_T1_Trap_Instruction_5
#define My_T1_Trap_Instruction_5 \
    T_HANDLER_RAND7_2;\
    done
#define H_HT0_Trap_Instruction_0 
#define My_HT0_Trap_Instruction_0 \
    HT_HANDLER_RAND4_1 ;\
    done;
#define H_HT0_Trap_Instruction_1
#define My_HT0_Trap_Instruction_1 \
    HT_HANDLER_RAND4_3 ;\
    done
#define H_HT0_Trap_Instruction_2
#define My_HT0_Trap_Instruction_2 \
    HT_HANDLER_RAND7_5 ;\
    done;
#define H_HT0_Trap_Instruction_3
#define My_HT0_Trap_Instruction_3 \
    HT_HANDLER_RAND4_5 ;\
    done
#define H_HT0_Trap_Instruction_4
#define My_HT0_Trap_Instruction_4 \
    HT_HANDLER_RAND7_4 ;\
    done
#define H_HT0_Trap_Instruction_5
#define My_HT0_Trap_Instruction_5 \
    ba htrap_5_ext;\
    nop; retry;\
    nop; nop; nop; nop; nop

#define H_HT0_Mem_Address_Not_Aligned_0x34
#define My_HT0_Mem_Address_Not_Aligned_0x34 \
    HT_HANDLER_RAND4_2 ;\
    done ;
#define H_HT0_Illegal_instruction_0x10
#define My_HT0_Illegal_instruction_0x10 \
    done;

#define H_HT0_DAE_so_page_0x30
#define My_HT0_DAE_so_page_0x30 \
    done; 
#define H_HT0_DAE_invalid_asi_0x14
#define SUN_H_HT0_DAE_invalid_asi_0x14 \
    done
#define H_HT0_DAE_privilege_violation_0x15
#define SUN_H_HT0_DAE_privilege_violation_0x15 \
    done;
#define H_HT0_Privileged_Action_0x37
#define My_HT0_Privileged_Action_0x37 \
    done; \
    nop; nop
#define H_HT0_Lddf_Mem_Address_Not_Aligned_0x35
#define My_HT0_Lddf_Mem_Address_Not_Aligned_0x35 \
    HT_HANDLER_RAND4_3 ;\
    done
#define H_HT0_Stdf_Mem_Address_Not_Aligned_0x36
#define My_HT0_Stdf_Mem_Address_Not_Aligned_0x36 \
    HT_HANDLER_RAND7_1;\
    done
#define H_HT0_Fp_exception_ieee_754_0x21
#define My_HT0_Fp_exception_ieee_754_0x21 \
    HT_HANDLER_RAND4_2 ;\
    done
#define H_HT0_Fp_exception_other_0x22
#define My_HT0_Fp_exception_other_0x22 \
    HT_HANDLER_RAND7_2 ;\
    done
#define H_HT0_Division_By_Zero
#define My_HT0_Division_By_Zero \
    HT_HANDLER_RAND4_6;\
    done
#define H_T0_Division_By_Zero
#define My_T0_Division_By_Zero \
    T_HANDLER_RAND4_3;\
    done
#define H_T1_Division_By_Zero_0x28
#define My_H_T1_Division_By_Zero_0x28 \
    T_HANDLER_RAND4_3;\
    done
#define H_T0_Division_By_Zero
#define My_T0_Division_By_Zero\
    T_HANDLER_RAND4_4 ;\
    done
#define H_T0_Fp_exception_ieee_754_0x21
#define My_T0_Fp_exception_ieee_754_0x21 \
    T_HANDLER_RAND4_3 ;\
    done
#define H_T1_Fp_Exception_Ieee_754_0x21
#define My_H_T1_Fp_Exception_Ieee_754_0x21 \
    T_HANDLER_RAND4_4 ;\
    done
#define H_T1_Fp_Exception_Other_0x22
#define My_H_T1_Fp_Exception_Other_0x22 \
    T_HANDLER_RAND4_5 ;\
    done
#define H_T1_Privileged_Opcode_0x11
#define SUN_H_T1_Privileged_Opcode_0x11 \
    T_HANDLER_RAND4_6 ;\
    done

#define H_HT0_Privileged_opcode_0x11
#define My_HT0_Privileged_opcode_0x11 \
    HT_HANDLER_RAND4_1;\
    done;

#define H_HT0_Fp_disabled_0x20
#define My_HT0_Fp_disabled_0x20 \
    mov  0x4, %l2 ;\
    wr %l2, 0x0, %fprs ;\
    sllx %l2, 10, %l3; \
    rdpr %tstate, %l2;\
    or %l2, %l3, %l2 ;\
    stw %l2, [%i7];\
    wrpr %l2, 0x0, %tstate;\
    retry;

#define H_T0_Fp_disabled_0x20
#define My_T0_Fp_disabled_0x20 \
    mov  0x4, %l2 ;\
    wr %l2, 0x0, %fprs ;\
    sllx %l2, 10, %l3; \
    rdpr %tstate, %l2;\
    or %l2, %l3, %l2 ;\
    wrpr %l2, 0x0, %tstate;\
    retry; nop

#define H_T1_Fp_Disabled_0x20
#define My_H_T1_Fp_Disabled_0x20 \
    mov  0x4, %l2 ;\
    wr %l2, 0x0, %fprs ;\
    sllx %l2, 10, %l3; \
    rdpr %tstate, %l2;\
    or %l2, %l3, %l2 ;\
    wrpr %l2, 0x0, %tstate;\
    stw %l2, [%i7];\
    retry

#define H_HT0_Watchdog_Reset_0x02
#define My_HT0_Watchdog_Reset_0x02 \
    ba wdog_2_ext;\
    nop;retry;nop;nop;nop;nop;nop

#define H_T0_Privileged_opcode_0x11
#define My_T0_Privileged_opcode_0x11 \
    T_HANDLER_RAND4_4;\
    done

#define H_T1_Fp_exception_other_0x22
#define My_T1_Fp_exception_other_0x22 \
    T_HANDLER_RAND7_3 ;\
    done; 

#define H_T0_Fp_exception_other_0x22
#define My_T0_Fp_exception_other_0x22 \
    T_HANDLER_RAND7_4;\
    done

#define H_HT0_Trap_Level_Zero_0x5f
#define My_HT0_Trap_Level_Zero_0x5f \
    not %g0, %r13; \
    rdhpr %hpstate, %l3;\
    jmp %r13;\
    rdhpr %htstate, %l3;\
    and %l3, 0xfe, %l3;\
    wrhpr %l3, 0, %htstate;\
    stw %r13, [%i7];\
    retry

#define My_Watchdog_Reset
#define My_Watchdog_Reset \
    ba wdog_red_ext;\
    nop;retry;nop;nop;nop;nop;nop

#define H_HT0_Control_Transfer_Instr_0x74
#define My_H_HT0_Control_Transfer_Instr_0x74 \
    rdpr %tstate, %l3;\
    mov 1, %l4;\
    sllx %l4, 20, %l4;\
    wrpr %l3, %l4, %tstate ;\
    retry;nop;

#define H_T0_Control_Transfer_Instr_0x74
#define My_H_T0_Control_Transfer_Instr_0x74 \
    rdpr %tstate, %l3;\
    mov 1, %l4;\
    sllx %l4, 20, %l4;\
    wrpr %l3, %l4, %tstate ;\
    retry;nop;

#define H_T1_Control_Transfer_Instr_0x74
#define My_H_T1_Control_Transfer_Instr_0x74 \
    rdpr %tstate, %l3;\
    mov 1, %l4;\
    sllx %l4, 20, %l4;\
    wrpr %l3, %l4, %tstate ;\
    retry;nop;
#define H_HT0_data_access_protection_0x6c
#define SUN_H_HT0_data_access_protection_0x6c   ba daccess_prot_handler; nop

#define H_HT0_PA_Watchpoint_0x61
#define My_H_HT0_PA_Watchpoint_0x61 \
    HT_HANDLER_RAND7_4;\
    done

#ifndef H_HT0_Data_access_error_0x32
#define H_HT0_Data_access_error_0x32
#define SUN_H_HT0_Data_access_error_0x32 \
    done;nop
#endif
#define H_T0_VA_Watchpoint_0x62
#define My_T0_VA_Watchpoint_0x62 \
    T_HANDLER_RAND7_5;\
    done

#define H_T1_VA_Watchpoint_0x62
#define SUN_H_T1_VA_Watchpoint_0x62 \
    T_HANDLER_RAND7_3;\
    done

#define H_HT0_VA_Watchpoint_0x62
#define My_H_HT0_VA_Watchpoint_0x62 \
    HT_HANDLER_RAND7_5;\
    done

#define H_HT0_Instruction_VA_Watchpoint_0x75
#define SUN_H_HT0_Instruction_VA_Watchpoint_0x75 \
    done;

#define H_HT0_Instruction_Breakpoint_0x76
#define SUN_H_HT0_Instruction_Breakpoint_0x76 \
    rdhpr %htstate, %g1;\
    wrhpr %g1, 0x400, %htstate;\
    retry;nop
#define H_HT0_Instruction_address_range_0x0d
#define SUN_H_HT0_Instruction_address_range_0x0d \
    HT_HANDLER_RAND4_1;\
    done;

#define H_HT0_Instruction_real_range_0x0e
#define SUN_H_HT0_Instruction_real_range_0x0e \
    HT_HANDLER_RAND4_1;\
    done;

#define H_HT0_mem_real_range_0x2d
#define SUN_H_HT0_mem_real_range_0x2d \
    HT_HANDLER_RAND4_2;\
    done;
#define H_HT0_mem_address_range_0x2e
#define SUN_H_HT0_mem_address_range_0x2e \
    HT_HANDLER_RAND4_3;\
    done;

#define H_HT0_DAE_nc_page_0x16
#define SUN_H_HT0_DAE_nc_page_0x16 \
    done;

#define H_HT0_DAE_nfo_page_0x17
#define SUN_H_HT0_DAE_nfo_page_0x17 \
    done;
#define H_HT0_IAE_unauth_access_0x0b
#define SUN_H_HT0_IAE_unauth_access_0x0b \
    HT_HANDLER_RAND7_3;\
    done;
#define H_HT0_IAE_nfo_page_0x0c
#define SUN_H_HT0_IAE_nfo_page_0x0c \
    HT_HANDLER_RAND7_6;\
    done;
#define H_HT0_Reserved_0x3b
#define SUN_H_HT0_Reserved_0x3b \
    mov 0x80, %l3;\
    stxa %l3, [%l3]0x5f ;\
    stxa %l3, [%l3]0x57 ;\
    done;
#define H_HT0_IAE_privilege_violation_0x08
#define My_HT0_IAE_privilege_violation_0x08 \
    HT_HANDLER_RAND7_2;\
    done;

#ifndef H_HT0_Instruction_Access_MMU_Error_0x71
#define H_HT0_Instruction_Access_MMU_Error_0x71
#define SUN_H_HT0_Instruction_Access_MMU_Error_0x71 \
    mov 0x80, %l3;\
    stxa %l3, [%l3]0x5f ;\
    stxa %l3, [%l3]0x57 ;\
    retry;
#endif

#ifndef H_HT0_Data_Access_MMU_Error_0x72
#define H_HT0_Data_Access_MMU_Error_0x72
#define SUN_H_HT0_Data_Access_MMU_Error_0x72 \
    mov 0x80, %l3;\
    stxa %l3, [%l3]0x5f ;\
    stxa %l3, [%l3]0x57 ;\
    retry;
#endif

!!!!!!!!!!!!!!!!!!!!!! END of all handlers !!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!! START of Interrupt Handlers !!!!!!!!!!!!!!!!!

#ifndef INT_HANDLER_RAND4_1
#define INT_HANDLER_RAND4_1 retry; nop; nop; nop
#endif
#ifndef INT_HANDLER_RAND7_1
#define INT_HANDLER_RAND7_1  mov 0x20,%g1; ldxa [%g1]0x40, %g2; andn %g2, 0x10, %g2; stxa %g2,[%g1]0x40
#endif
#ifndef INT_HANDLER_RAND4_2
#define INT_HANDLER_RAND4_2 retry; nop; nop; nop
#endif
#ifndef INT_HANDLER_RAND7_2
#define INT_HANDLER_RAND7_2 mov 0x80,%g1;stxa %g0,[%g1]0x40
#endif
#ifndef INT_HANDLER_RAND4_3
#define INT_HANDLER_RAND4_3 retry; nop; nop; nop
#endif
#ifndef INT_HANDLER_RAND7_3
#define INT_HANDLER_RAND7_3 retry; nop; nop; nop ; nop; nop; nop
#endif
#define H_HT0_Externally_Initiated_Reset_0x03
#define SUN_H_HT0_Externally_Initiated_Reset_0x03 \
    ldxa    [%g0] ASI_LSU_CTL_REG, %g1; \
    set cregs_lsu_ctl_reg_r64, %g1; \
    stxa    %g1, [%g0] ASI_LSU_CTL_REG; \
    retry;nop

#define My_External_Reset \
    ldxa    [%g0] ASI_LSU_CTL_REG, %l5; \
    set cregs_lsu_ctl_reg_r64, %l5; \
    stxa    %l5, [%g0] ASI_LSU_CTL_REG; \
    retry;nop

!!!!! SPU Interrupt Handlers

#define H_HT0_Control_Word_Queue_Interrupt_0x3c
#define My_HT0_Control_Word_Queue_Interrupt_0x3c \
        INT_HANDLER_RAND7_1 ;\
    	retry ; 

#define H_HT0_Modular_Arithmetic_Interrupt_0x3d
#define My_H_HT0_Modular_Arithmetic_Interrupt_0x3d \
        INT_HANDLER_RAND7_2 ;\
    	retry ; 
!!!!! HW interrupt handlers

#define H_HT0_Interrupt_0x60
#define My_HT0_Interrupt_0x60 \
    ldxa    [%g0] ASI_SWVR_INTR_RECEIVE, %g5 ;\
    ldxa    [%g0] ASI_SWVR_INTR_R, %g4 ;\
    ldxa    [%g0] ASI_SWVR_INTR_RECEIVE, %g3 ;\
    INT_HANDLER_RAND4_1 ;\
    retry;

!!!!! Queue interrupt handler
#define H_T0_Cpu_Mondo_Trap_0x7c
#define My_T0_Cpu_Mondo_Trap_0x7c \
	mov	0x3c8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3c0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_T0_Dev_Mondo_Trap_0x7d
#define My_T0_Dev_Mondo_Trap_0x7d \
	mov	0x3d8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3d0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_T0_Resumable_Error_0x7e
#define My_T0_Resumable_Error_0x7e \
	mov	0x3e8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3e0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_T1_Cpu_Mondo_Trap_0x7c
#define My_T1_Cpu_Mondo_Trap_0x7c \
	mov	0x3c8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3c0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_T1_Dev_Mondo_Trap_0x7d
#define My_T1_Dev_Mondo_Trap_0x7d \
	mov	0x3d8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3d0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_T1_Resumable_Error_0x7e
#define My_T1_Resumable_Error_0x7e \
	mov	0x3e8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3e0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_HT0_Reserved_0x7c
#define SUN_H_HT0_Reserved_0x7c \
	mov	0x3c8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3c0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_HT0_Reserved_0x7d
#define SUN_H_HT0_Reserved_0x7d \
	mov	0x3d8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3d0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop

#define H_HT0_Reserved_0x7e
#define SUN_H_HT0_Reserved_0x7e \
	mov	0x3e8, %g3; \
	ldxa	[%g3] 0x25, %g5; \
	mov	0x3e0, %g3; \
	stxa	%g5, [%g3] 0x25; \
	retry; \
	nop; \
	nop; \
	nop
!!!!! Hstick-match trap handler
#define H_T0_Reserved_0x5e
#define My_T0_Reserved_0x5e \
	rdhpr	%hintp, %g3; \
	wrhpr	%g3, %g3, %hintp; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Hstick_Match_0x5e
#define My_HT0_Hstick_Match_0x5e \
	rdhpr	%hintp, %g3; \
	wrhpr	%g3, %g3, %hintp; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Reserved_0x5e
#define My_T0_Reserved_0x5e \
	rdhpr	%hintp, %g3; \
	wrhpr	%g3, %g3, %hintp; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Reserved_0x5e
#define My_T1_Reserved_0x5e \
	rdhpr	%hintp, %g3; \
	wrhpr	%g3, %g3, %hintp; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop; \
	nop
!!!!! SW interuupt handlers
#define H_T0_Interrupt_Level_14_0x4e
#define My_T0_Interrupt_Level_14_0x4e \
	rd	%softint, %g3; \
	sethi	%hi(0x14000), %g3; \
	or	%g3, 0x1, %g3; \
	wr	%g3, %g0, %clear_softint; \
    rd %tick, %g3 ;\
	retry; \

#define H_T0_Interrupt_Level_1_0x41
#define My_T0_Interrupt_Level_1_0x41 \
	rd	%softint, %g3; \
	or	%g0, 0x2, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_2_0x42
#define My_T0_Interrupt_Level_2_0x42 \
	rd	%softint, %g3; \
	or	%g0, 0x4, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_3_0x43
#define My_T0_Interrupt_Level_3_0x43 \
	rd	%softint, %g3; \
	or	%g0, 0x8, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_4_0x44
#define My_T0_Interrupt_Level_4_0x44 \
	rd	%softint, %g3; \
	or	%g0, 0x10, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_5_0x45
#define My_T0_Interrupt_Level_5_0x45 \
	rd	%softint, %g3; \
	or	%g0, 0x20, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_6_0x46
#define My_T0_Interrupt_Level_6_0x46 \
	rd	%softint, %g3; \
	or	%g0, 0x40, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_7_0x47
#define My_T0_Interrupt_Level_7_0x47 \
	rd	%softint, %g3; \
	or	%g0, 0x80, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_8_0x48
#define My_T0_Interrupt_Level_8_0x48 \
	rd	%softint, %g3; \
	or	%g0, 0x100, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_9_0x49
#define My_T0_Interrupt_Level_9_0x49 \
	rd	%softint, %g3; \
	or	%g0, 0x200, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_10_0x4a
#define My_T0_Interrupt_Level_10_0x4a \
	rd	%softint, %g3; \
	or	%g0, 0x400, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_11_0x4b
#define My_T0_Interrupt_Level_11_0x4b \
	rd	%softint, %g3; \
	or	%g0, 0x800, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_12_0x4c
#define My_T0_Interrupt_Level_12_0x4c \
	rd	%softint, %g3; \
	sethi	%hi(0x1000), %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_13_0x4d
#define My_T0_Interrupt_Level_13_0x4d \
	rd	%softint, %g3; \
	sethi	%hi(0x2000), %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T0_Interrupt_Level_15_0x4f
#define My_T0_Interrupt_Level_15_0x4f \
       sethi   %hi(0x8000), %g3; \
       wr  %g3, %g0, %clear_softint; \
       wr %g0, %g0, %pic;\
       sethi %hi(0x80040000), %g2;\
       rd %pcr, %g3;\
       andn %g3, %g2, %g3;\
       wr %g3, %g0, %pcr;\
       retry; 


#define H_T1_Interrupt_Level_14_0x4e
#define My_T1_Interrupt_Level_14_0x4e \
	rd	%softint, %g3; \
	sethi	%hi(0x14000), %g3; \
	or	%g3, 0x1, %g3; \
	wr	%g3, %g0, %clear_softint; \
    rd %tick, %g3 ;\
	retry; \

#define H_T1_Interrupt_Level_1_0x41
#define My_T1_Interrupt_Level_1_0x41 \
	rd	%softint, %g3; \
	or	%g0, 0x2, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_2_0x42
#define My_T1_Interrupt_Level_2_0x42 \
	rd	%softint, %g3; \
	or	%g0, 0x4, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_3_0x43
#define My_T1_Interrupt_Level_3_0x43 \
	rd	%softint, %g3; \
	or	%g0, 0x8, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_4_0x44
#define My_T1_Interrupt_Level_4_0x44 \
	rd	%softint, %g3; \
	or	%g0, 0x10, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_5_0x45
#define My_T1_Interrupt_Level_5_0x45 \
	rd	%softint, %g3; \
	or	%g0, 0x20, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_6_0x46
#define My_T1_Interrupt_Level_6_0x46 \
	rd	%softint, %g3; \
	or	%g0, 0x40, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_7_0x47
#define My_T1_Interrupt_Level_7_0x47 \
	rd	%softint, %g3; \
	or	%g0, 0x80, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_8_0x48
#define My_T1_Interrupt_Level_8_0x48 \
	rd	%softint, %g3; \
	or	%g0, 0x100, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_9_0x49
#define My_T1_Interrupt_Level_9_0x49 \
	rd	%softint, %g3; \
	or	%g0, 0x200, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_10_0x4a
#define My_T1_Interrupt_Level_10_0x4a \
	rd	%softint, %g3; \
	or	%g0, 0x400, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_11_0x4b
#define My_T1_Interrupt_Level_11_0x4b \
	rd	%softint, %g3; \
	or	%g0, 0x800, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_12_0x4c
#define My_T1_Interrupt_Level_12_0x4c \
	rd	%softint, %g3; \
	sethi	%hi(0x1000), %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_13_0x4d
#define My_T1_Interrupt_Level_13_0x4d \
	rd	%softint, %g3; \
	sethi	%hi(0x2000), %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_T1_Interrupt_Level_15_0x4f
#define My_T1_Interrupt_Level_15_0x4f \
       sethi   %hi(0x8000), %g3; \
       wr  %g3, %g0, %clear_softint; \
       wr %g0, %g0, %pic;\
       sethi %hi(0x80040000), %g2;\
       rd %pcr, %g3;\
       andn %g3, %g2, %g3;\
       wr %g3, %g0, %pcr;\
       retry; 


#define H_HT0_Interrupt_Level_14_0x4e
#define My_HT0_Interrupt_Level_14_0x4e \
	rd	%softint, %g3; \
	sethi	%hi(0x14000), %g3; \
	or	%g3, 0x1, %g3; \
	wr	%g3, %g0, %clear_softint; \
    rd %tick, %g3 ;\
    sub %g3, 0x80, %g3;\
    wrpr %g3, %g0, %tick;\
	retry; \

#define H_HT0_Interrupt_Level_1_0x41
#define My_HT0_Interrupt_Level_1_0x41 \
	rd	%softint, %g3; \
	or	%g0, 0x2, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_2_0x42
#define My_HT0_Interrupt_Level_2_0x42 \
	rd	%softint, %g3; \
	or	%g0, 0x4, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_3_0x43
#define My_HT0_Interrupt_Level_3_0x43 \
	rd	%softint, %g3; \
	or	%g0, 0x8, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_4_0x44
#define My_HT0_Interrupt_Level_4_0x44 \
	rd	%softint, %g3; \
	or	%g0, 0x10, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_5_0x45
#define My_HT0_Interrupt_Level_5_0x45 \
	rd	%softint, %g3; \
	or	%g0, 0x20, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_6_0x46
#define My_HT0_Interrupt_Level_6_0x46 \
	rd	%softint, %g3; \
	or	%g0, 0x40, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_7_0x47
#define My_HT0_Interrupt_Level_7_0x47 \
	rd	%softint, %g3; \
	or	%g0, 0x80, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_8_0x48
#define My_HT0_Interrupt_Level_8_0x48 \
	rd	%softint, %g3; \
	or	%g0, 0x100, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_9_0x49
#define My_HT0_Interrupt_Level_9_0x49 \
	rd	%softint, %g3; \
	or	%g0, 0x200, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_10_0x4a
#define My_HT0_Interrupt_Level_10_0x4a \
	rd	%softint, %g3; \
	or	%g0, 0x400, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_11_0x4b
#define My_HT0_Interrupt_Level_11_0x4b \
	rd	%softint, %g3; \
	or	%g0, 0x800, %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_12_0x4c
#define My_HT0_Interrupt_Level_12_0x4c \
	rd	%softint, %g3; \
	sethi	%hi(0x1000), %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_13_0x4d
#define My_HT0_Interrupt_Level_13_0x4d \
	rd	%softint, %g3; \
	sethi	%hi(0x2000), %g3; \
	wr	%g3, %g0, %clear_softint; \
	retry; \
	nop; \
	nop; \
	nop; \
	nop

#define H_HT0_Interrupt_Level_15_0x4f
#define My_HT0_Interrupt_Level_15_0x4f \
       sethi   %hi(0x8000), %g3; \
       wr  %g3, %g0, %clear_softint; \
       wr %g0, %g0, %pic;\
       sethi %hi(0x80040000), %g2;\
       rd %pcr, %g3;\
       andn %g3, %g2, %g3;\
       wr %g3, %g0, %pcr;\
       retry; 

!!!!!!!!!!!!!!!!!!!!!! END of all handlers !!!!!!!!!!!!!!!!!!!
!# Steer towards main TBA on these errors ..
!# These are redefines ...
#undef SUN_H_HT0_IAE_unauth_access_0x0b
#define SUN_H_HT0_IAE_unauth_access_0x0b \
    set resolve_bad_tte, %g3;\
    jmp %g3;\
    nop

#undef My_HT0_IAE_privilege_violation_0x08
#define My_HT0_IAE_privilege_violation_0x08 \
    set resolve_bad_tte, %g3;\
    jmp %g3;\
    nop

#define H_HT0_Instruction_address_range_0x0d
#define SUN_H_HT0_Instruction_address_range_0x0d \
    rdpr %tpc, %g1;\
    rdpr %tnpc, %g2;\
    stw %g1, [%i7];\
    stw %g2, [%i7+4];\
    jmpl %r27+8, %r27;\
    fdivd %f0, %f4, %f4;\
    nop;

#define H_HT0_Instruction_real_range_0x0e
#define SUN_H_HT0_Instruction_real_range_0x0e \
    rdpr %tpc, %g1;\
    rdpr %tnpc, %g2;\
    stw %g1, [%i7];\
    stw %g2, [%i7+4];\
    jmpl %r27+8, %r27;\
    fdivd %f0, %f4, %f4;\
    nop;

#undef SUN_H_HT0_IAE_nfo_page_0x0c
#define SUN_H_HT0_IAE_nfo_page_0x0c \
    set resolve_bad_tte, %g3;\
    jmp %g3;\
    nop

#define H_HT0_Instruction_Invalid_TSB_Entry_0x2a
#define SUN_H_HT0_Instruction_Invalid_TSB_Entry_0x2a \
    set restore_range_regs, %g3;\
    jmp %g3;\
    nop

#define H_HT0_Data_Invalid_TSB_Entry_0x2b
#define SUN_H_HT0_Data_Invalid_TSB_Entry_0x2b \
    set restore_range_regs, %g3;\
    jmp %g3;\
    nop

#define H_T1_Reserved_0x00
#define SUN_H_T1_Reserved_0x00 \
    nop;\
    jmpl %r27+8, %r0;\
    nop;

#undef FAST_BOOT
#include "hboot.s"

#ifndef MULTIPASS
#define MULTIPASS 0
#endif
#define LOMEIN_TEXT_VA [0x]mpeval(MAIN_BASE_TEXT_VA&0xffffffff,16)
#define LOMEIN_DATA_VA [0x]mpeval(MAIN_BASE_DATA_VA&0xffffffff,16)
changequote([, ])dnl
SECTION .LOMEIN TEXT_VA=LOMEIN_TEXT_VA, DATA_VA=LOMEIN_DATA_VA
attr_text {
    Name = .LOMEIN,
    VA= LOMEIN_TEXT_VA,
    RA= MAIN_BASE_TEXT_RA,
    PA= ra2pa2(MAIN_BASE_TEXT_RA, 0),
    part_0_ctx_nonzero_tsb_config_1,
    part_0_ctx_zero_tsb_config_1,
    TTE_G=1, TTE_Context=0x44, TTE_V=1, 
    TTE_Size=0, TTE_NFO=0, TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
    TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, TTE_X=1,
    tsbonly
    }
attr_data {
    Name = .LOMEIN,
    VA= LOMEIN_DATA_VA,
    RA= MAIN_BASE_DATA_RA,
    PA= ra2pa2(MAIN_BASE_DATA_RA, 0),
    part_0_ctx_nonzero_tsb_config_2,
    part_0_ctx_zero_tsb_config_2
        TTE_G=1, TTE_Context=0x44, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, TTE_X=0,
    tsbonly
        }
attr_data {
    Name = .LOMEIN,
    VA= LOMEIN_DATA_VA,
    RA= MAIN_BASE_DATA_RA,
    PA= ra2pa2(MAIN_BASE_DATA_RA, 0),
    part_0_ctx_nonzero_tsb_config_3,
    part_0_ctx_zero_tsb_config_3
        TTE_G=1, TTE_Context=0x55, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, TTE_X=0,
    tsbonly
        }
.text
.align 0x100000
    nop
.data
    .word 0x0

SECTION .MAIN TEXT_VA=MAIN_BASE_TEXT_VA, DATA_VA=MAIN_BASE_DATA_VA
attr_text {
    Name = .MAIN,
    VA=MAIN_BASE_TEXT_VA,
    RA= LOMEIN_TEXT_VA,
    PA= LOMEIN_TEXT_VA,
    part_0_ctx_nonzero_tsb_config_2,
    part_0_ctx_zero_tsb_config_2,
    TTE_G=1, TTE_Context=0x44, TTE_V=1, 
    TTE_Size=0, TTE_NFO=0, TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
    TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, TTE_X=1,
    }

attr_data {
    Name = .MAIN,
    VA=MAIN_BASE_DATA_VA
    RA= LOMEIN_DATA_VA,
    PA= LOMEIN_DATA_VA,
    part_0_ctx_nonzero_tsb_config_1,
    part_0_ctx_zero_tsb_config_1
        TTE_G=1, TTE_Context=0x44, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, TTE_X=0,
        }

attr_data {
    Name = .MAIN,
    VA=MAIN_BASE_DATA_VA
    RA= LOMEIN_DATA_VA,
    PA= LOMEIN_DATA_VA,
    part_0_ctx_nonzero_tsb_config_3,
    part_0_ctx_zero_tsb_config_3
        TTE_G=1, TTE_Context=0x55, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, TTE_X=0,
    tsbonly
        }

attr_text {
    Name = .MAIN,
    VA=MAIN_BASE_TEXT_VA,
    hypervisor
}

attr_data {
    Name = .MAIN,
    VA=MAIN_BASE_DATA_VA
    hypervisor
}
changequote(`,')dnl'

.text
.global main
main:

    ! Set up ld/st area per thread
    ta T_CHANGE_HPRIV
    ldxa [%g0]0x63, %o2
    and %o2, 0x7, %o1
    brnz %o1, init_start
    mov 0xff, %r11
lock_sync_thds:
    set sync_thr_counter4, %r23
#ifndef SPC
    and %o2, 0x38, %o2
    add %o2,%r23,%r23           !Core's sync counter
#endif
    st %r11, [%r23]             !lock sync_thr_counter4
    add %r23, 64, %r23
    st %r11, [%r23]             !lock sync_thr_counter5
    add %r23, 64, %r23
    st %r11, [%r23]             !lock sync_thr_counter6
init_start:
    wrhpr %g0, 0x0, %hpstate  ! ta T_CHANGE_NONHPRIV
	umul	%r9, 256, %r31
	setx	user_data_start, %r1, %r3
	add	%r31, %r3, %r31
    wr  %r0, 0x4, %asi

!Initializing integer registers
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0xb0, %r14
	mov 0xb2, %r30
	save %r31, %r0, %r31
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0xb5, %r14
	mov 0xb4, %r30
	save %r31, %r0, %r31
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0xb5, %r14
	mov 0xb2, %r30
	save %r31, %r0, %r31
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0x30, %r14
	mov 0xb0, %r30
	save %r31, %r0, %r31
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0x35, %r14
	mov 0xb5, %r30
	save %r31, %r0, %r31
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0x35, %r14
	mov 0x31, %r30
	save %r31, %r0, %r31
	ldx [%r31+0], %r0
	ldx [%r31+8], %r1
	ldx [%r31+16], %r2
	ldx [%r31+24], %r3
	ldx [%r31+32], %r4
	ldx [%r31+40], %r5
	ldx [%r31+48], %r6
	ldx [%r31+56], %r7
	ldx [%r31+64], %r8
	ldx [%r31+72], %r9
	ldx [%r31+80], %r10
	ldx [%r31+88], %r11
	ldx [%r31+96], %r12
	ldx [%r31+104], %r13
	ldx [%r31+112], %r14
	mov %r31, %r15
	ldx [%r31+128], %r16
	ldx [%r31+136], %r17
	ldx [%r31+144], %r18
	ldx [%r31+152], %r19
	ldx [%r31+160], %r20
	ldx [%r31+168], %r21
	ldx [%r31+176], %r22
	ldx [%r31+184], %r23
	ldx [%r31+192], %r24
	ldx [%r31+200], %r25
	ldx [%r31+208], %r26
	ldx [%r31+216], %r27
	ldx [%r31+224], %r28
	ldx [%r31+232], %r29
	mov 0x32, %r14
	mov 0xb5, %r30
	save %r31, %r0, %r31
	restore
	restore
	restore
!Initializing float registers
	ldd [%r31+0], %f0
	ldd [%r31+16], %f2
	ldd [%r31+32], %f4
	ldd [%r31+48], %f6
	ldd [%r31+64], %f8
	ldd [%r31+80], %f10
	ldd [%r31+96], %f12
	ldd [%r31+112], %f14
	ldd [%r31+128], %f16
	ldd [%r31+144], %f18
	ldd [%r31+160], %f20
	ldd [%r31+176], %f22
	ldd [%r31+192], %f24
	ldd [%r31+208], %f26
	ldd [%r31+224], %f28
	ldd [%r31+240], %f30
    !! Set TPC/TNPC to diag-finish in case we get to a strange TL ..
    ta T_CHANGE_HPRIV
    setx diag_finish, %r29, %r28
    add %r28, 4, %r29
    wrpr %g0, 1, %tl
    wrpr %r28, %tpc
    wrpr %r29, %tnpc
    wrpr %g0, 2, %tl
    wrpr %r28, %tpc
    wrpr %r29, %tnpc
    wrpr %g0, 3, %tl
    wrpr %r28, %tpc
    wrpr %r29, %tnpc
    wrpr %g0, 4, %tl
    wrpr %r28, %tpc
    wrpr %r29, %tnpc
    wrpr %g0, 5, %tl
    wrpr %r28, %tpc
    wrpr %r29, %tnpc
    wrpr %g0, 6, %tl
    wrpr %r28, %tpc
    wrpr %r29, %tnpc
    wrpr %g0, 0, %tl

    !Initializing Tick Cmprs
    mov 1, %g2
    sllx %g2, 63, %g2
    or %g1, %g2, %g1
    wrhpr %g1, %g0, %hsys_tick_cmpr
    wr %g1, %g0, %tick_cmpr
    wr %g1, %g0, %sys_tick_cmpr

#if  (MULTIPASS > 0)
    mov 0x38, %g1
    stxa %r0, [%g1]ASI_SCRATCHPAD
#endif

    ! Set up fpr PMU traps 
    set 0x2041507b, %g2
    b fork_threads
    wr %g2, %g0, %pcr
.align 1024
common_target:
    nop
    sub %r27, 8, %r27
    and %r27, 8, %r12
    mov HIGHVA_HIGHNUM, %r11
    sllx %r11, 32, %r11
    or %r27, %r11, %r27
    brz,a  %r12, .+8
    lduw [%r27], %r12      ! load jmp dest into dcache - xinval
    jmp %r27
	.word 0xa1b4c4d2  ! 1: FCMPNE32	fcmpne32	%d50, %d18, %r16
	nop
	jmp %r27
	nop
!$EV trig_pc_d(1,@VA(.MAIN.fork_threads)) -> marker(bootEnd, 1)
fork_threads:
	rd %tick, %r17
	mov 0x40, %g1
setup_hwtw_config:
	stxa %r17, [%g1]0x58
	ta	%icc, T_RD_THID
! fork: source strm = 0xffffffffffffffff; target strm = 0x1               
	cmp	%o1, 0
	setx	fork_lbl_0_1, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x2               
	cmp	%o1, 1
	setx	fork_lbl_0_2, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x4               
	cmp	%o1, 2
	setx	fork_lbl_0_3, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x8               
	cmp	%o1, 3
	setx	fork_lbl_0_4, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x10              
	cmp	%o1, 4
	setx	fork_lbl_0_5, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x20              
	cmp	%o1, 5
	setx	fork_lbl_0_6, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x40              
	cmp	%o1, 6
	setx	fork_lbl_0_7, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
! fork: source strm = 0xffffffffffffffff; target strm = 0x80              
	cmp	%o1, 7
	setx	fork_lbl_0_8, %g2, %g3
	be,a	.+8
	jmp	%g3
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_8:
master_thread_stuff:

setup_tick:
    setx 0x14a4ea6a46c90b24, %r1, %r17
    wrpr %g0, %r17, %tick

    rd %asi, %r12
#ifdef XIR_RND_CORES
setup_xir_80:
    setx 0xb83c84820f847b5c, %r1, %r28
    mov 0x30, %r17
    stxa %r28, [%r17] 0x41
#endif
#ifdef SPLASH_HIDECR
    mov 8, %r1
    set SPLASH_HIDECR, %r2
    sllx %r2, 32, %r2
    stxa %r2, [%r1] 0x45
#endif
#if  (MULTIPASS > 0)
    mov 0x38, %g1
    ldxa [%g1]ASI_SCRATCHPAD, %r10
    brnz %g1, unlock_sync_thds_80
    wrpr %g0, %g0, %pstate
#endif
#ifndef NO_INTERNAL_SPU
setup_spu_80:
    wr %g0, 0x40, %asi    
    !# allocate control word queue (e.g., setup head/tail/first/last registers)
    set CWQ_BASE, %l6

#ifndef SPC
    ldxa [%g0]0x63, %o2
    and %o2, 0x38, %o2
    sllx %o2, 5, %o2    !(CID*256)
    add %l6, %o2, %l6
#endif
    !# write base addr to first, head, and tail ptr
    !# first store to first
    stxa    %l6, [%g0 + ASI_SPU_CWQ_FIRST] %asi	!# first store to first

    stxa    %l6, [%g0 + ASI_SPU_CWQ_HEAD] %asi	!# then to head
    stxa    %l6, [%g0 + ASI_SPU_CWQ_TAIL] %asi	!# then to tail
    setx CWQ_LAST, %g1, %l5				!# then end of CWQ region to LAST
#ifndef SPC
    add %l5, %o2, %l5
#endif
    stxa    %l5, [%g0 + ASI_SPU_CWQ_LAST] %asi

    !# set  CWQ control word ([39:37] is strand ID ..)
    best_set_reg(0x20610060, %l1, %l2)		!#		Control Word
    sllx %l2, 32, %l2

    !# write CWQ entry (%l6 points to CWQ)
    stx  %l2, [%l6 + 0x0]

    setx msg, %g1, %l2
    stx %l2, [%l6 + 0x8]	!# source address

    stx %g0, [%l6 + 0x10]	!# Authentication Key  Address (40-bit)
    stx %g0, [%l6 + 0x18]	!# Authentication IV   Address (40-bit)
    stx %g0, [%l6 + 0x20]	!# Authentication FSAS Address (40-bit)
    stx %g0, [%l6 + 0x28]	!# Encryption Key Address (40-bit)
    stx %g0, [%l6 + 0x30]	!# Encryption Initialization Vector Address (40-bit)

    setx    results, %g1, %o3
    stx %o3, [%l6 + 0x38]	!# Destination Address (40-bit)

    membar #Sync

    ldxa    [%g0 + ASI_SPU_CWQ_TAIL] %asi, %l2
    add %l2, 0x40, %l2
    stxa    %l2, [%g0 + ASI_SPU_CWQ_TAIL] %asi

    !# Kick off the CWQ operation by writing to the CWQ_CSR
    !# Set the enabled bit and reset the other bits
    or      %g0, 0x1, %g1
    stxa    %g1,    [%g0 + ASI_SPU_CWQ_CSR] %asi
#endif
unlock_sync_thds_80:
    set sync_thr_counter6, %r23
#ifndef SPC
    ldxa [%g0]0x63, %o2
    and %o2, 0x38, %o2
    add %o2, %r23, %r23
#endif
    st %r0, [%r23]          !unlock sync_thr_counter6
    sub %r23, 64, %r23
    st %r0, [%r23]          !unlock sync_thr_counter5
    sub %r23, 64, %r23
    st %r0, [%r23]          !unlock sync_thr_counter4

    wr %r0, %r12, %asi
    wrhpr %g0, 0xd5a, %hpstate  ! ta T_CHANGE_NONHPRIV 
br_longdelay2_80_0:
	.word 0x02c94001  ! 1: BRZ	brz,pt  	%r5,<label_0x94001>
vahole4_80_1:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x8d9032d3  ! 1: WRPR_PSTATE_I	wrpr	%r0, 0x12d3, %pstate
	.word 0xd83fc000  ! 5: STD_R	std	%r12, [%r31 + %r0]
mondo_80_2:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r2, [%r0+0x3d8] %asi
    stxa %r17, [%r0+0x3d0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d950012  ! 9: WRPR_WSTATE_R	wrpr	%r20, %r18, %wstate
splash_cmpr_80_4:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 13: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
fpinit_80_5:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 17: FCMPd	fcmpd	%fcc<n>, %f0, %f4
splash_lsu_80_6:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x5b5da6b4, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 21: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_80_7:
	ta	T_CHANGE_NONPRIV	! macro
splash_hpstate_80_8:
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x819825d6  ! 29: WRHPR_HPSTATE_I	wrhpr	%r0, 0x05d6, %hpstate
	.word 0x24800001  ! 33: BLE	ble,a	<label_0x1>
	.word 0x87802010  ! 37: WRASI_I	wr	%r0, 0x0010, %asi
splash_htba_80_9:
	nop
	ta T_CHANGE_HPRIV
	best_set_reg(HV_TRAP_BASE_PA, %r11,%r12)
	.word 0x8b98000c  ! 41: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa6f88011  ! 45: SDIVcc_R	sdivcc 	%r2, %r17, %r19
memptr_80_12:
	set user_data_start, %r31
	.word 0x85812750  ! 49: WRCCR_I	wr	%r4, 0x0750, %ccr
	.word 0x9f8023a5  ! 53: SIR	sir	0x03a5
intveclr_80_13:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x062794eed44c7ff7, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 57: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_14) + 8, 16, 16)) -> intp(6,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_14)&0xffffffff) + 0, 16, 16)) -> intp(3,0,9,,,,,1)
#else
	set 0xe760566c, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_14:
	.word 0x9f8029dc  ! 61: SIR	sir	0x09dc
	.word 0xd6c7c600  ! 65: LDSWA_R	ldswa	[%r31, %r0] 0x30, %r11
	.word 0xe8c7c2c0  ! 69: LDSWA_R	ldswa	[%r31, %r0] 0x16, %r20
intveclr_80_15:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x78bfd34fe319d0f3, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 73: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_80_16:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 77: FCMPLE32	fcmple32	%d0, %d4, %r8
	.word 0xa3a00546  ! 81: FSQRTd	fsqrt	
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_17:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_17-donret_80_17), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00107300 | (0x83 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x417, %htstate
	wrhpr %g0, 0xed3, %hpstate  !  rand=1 (80)
	done
donretarg_80_17:
	.word 0xd8ffc400  ! 85: SWAPA_R	swapa	%r12, [%r31 + %r0] 0x20
splash_cmpr_80_18:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 89: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_80_19:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd4d84940  ! 93: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r10
	.word 0x95b7c7c0  ! 1: PDIST	pdistn	%d62, %d0, %d10
	.word 0xc36fe110  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0110], #one_read
	mov 0x30, %r30
	.word 0x93d0001e  ! 97: Tcc_R	tne	icc_or_xcc, %r0 + %r30
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_20) + 48, 16, 16)) -> intp(1,0,11,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_20)&0xffffffff) + 24, 16, 16)) -> intp(1,0,24,,,,,1)
#else
	set 0x7102953, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_20:
	.word 0x9ba4c9d0  ! 101: FDIVd	fdivd	%f50, %f16, %f44
mondo_80_21:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3c0] %asi
    stxa %r17, [%r0+0x3d0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d94c004  ! 105: WRPR_WSTATE_R	wrpr	%r19, %r4, %wstate
brcommon3_80_22:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd3e7dc40  ! 1: CASA_I	casa	[%r31] 0xe2, %r0, %r9
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8198258d  ! 109: WRHPR_HPSTATE_I	wrhpr	%r0, 0x058d, %hpstate
dvapa_80_23:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf72, %r20
	mov 0x10, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x208, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fda60  ! 113: LDDFA_R	ldda	[%r31, %r0], %f16
splash_cmpr_80_24:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 117: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_80_25:
	.word 0x22ccc001  ! 1: BRZ	brz,a,pt	%r19,<label_0xcc001>
	.word 0x81982564  ! 121: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0564, %hpstate
splash_tba_80_26:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 125: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_80_27:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r2, [%r0+0x3d0] %asi
    stxa %r3, [%r0+0x3e0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d948013  ! 129: WRPR_WSTATE_R	wrpr	%r18, %r19, %wstate
	.word 0x8d802004  ! 133: WRFPRS_I	wr	%r0, 0x0004, %fprs
splash_tba_80_29:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000000003a0000, %r11, %r12
	.word 0x8b90000c  ! 137: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_30:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_30-donret_80_30), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d88000 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1fdb, %htstate
	wrhpr %g0, 0x342, %hpstate  !  rand=1 (80)
	retry
donretarg_80_30:
	.word 0x8d9034e7  ! 141: WRPR_PSTATE_I	wrpr	%r0, 0x14e7, %pstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_31:
	.word 0x19400001  ! 145: FBPUGE	fbuge
	.word 0x90820012  ! 149: ADDcc_R	addcc 	%r8, %r18, %r8
	.word 0xa780c005  ! 153: WR_GRAPHICS_STATUS_REG_R	wr	%r3, %r5, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa5b404d1  ! 1: FCMPNE32	fcmpne32	%d16, %d48, %r18
intvec_80_33:
	.word 0xa1b404c1  ! 157: FCMPNE32	fcmpne32	%d16, %d32, %r16
	brz,pt  	%r19, skip_80_34
	ble  	 skip_80_34
.align 512
skip_80_34:
	.word 0xc369a1e0  ! 161: PREFETCH_I	prefetch	[%r6 + 0x01e0], #one_read
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_35:
	.word 0x97a209d3  ! 165: FDIVd	fdivd	%f8, %f50, %f42
splash_tba_80_36:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 169: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x91d020b3  ! 173: Tcc_I	ta	icc_or_xcc, %r0 + 179
vahole4_80_38:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x81982ad4  ! 177: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0ad4, %hpstate
ibp_80_39:
	nop
	nop
	.word 0xc1bfdf20  ! 181: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x9f803ea2  ! 185: SIR	sir	0x1ea2
	.word 0x9668efe3  ! 189: UDIVX_I	udivx 	%r3, 0x0fe3, %r11
intveclr_80_40:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5daf8430cb0c56eb, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xf91, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 193: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_42) + 48, 16, 16)) -> intp(0,0,2,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_42)&0xffffffff) + 24, 16, 16)) -> intp(3,0,16,,,,,1)
#else
	set 0xd5c07df4, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_42:
	.word 0xa3b204d3  ! 197: FCMPNE32	fcmpne32	%d8, %d50, %r17
intveclr_80_43:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8c64de73ca7d3405, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 201: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_tba_80_44:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 205: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_80_45:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x4d236b28, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x21400001  ! 1: FBPN	fbn,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 209: FBPULE	fbule
	.word 0xc19fc2c0  ! 213: LDDFA_R	ldda	[%r31, %r0], %f0
splash_tick_80_46:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x40f13dea37529078, %r16, %r17)
	.word 0x89800011  ! 217: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0cfd140  ! 221: LDSBA_R	ldsba	[%r31, %r0] 0x8a, %r8
splash_cmpr_80_48:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 225: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_80_49:
	nop
	nop
	.word 0xc1bfdd40  ! 229: STDFA_R	stda	%f0, [%r0, %r31]
dvapa_80_50:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf22, %r20
	mov 0xf, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x18, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 233: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xa3702d3f  ! 237: POPC_I	popc	0x0d3f, %r17
	.word 0x9f8039c6  ! 241: SIR	sir	0x19c6
memptr_80_52:
	set 0x60740000, %r31
	.word 0x8584b177  ! 245: WRCCR_I	wr	%r18, 0x1177, %ccr
splash_cmpr_80_53:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 249: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
br_badelay1_80_55:
	.word 0x35400001  ! 1: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
	.word 0x93b7c4c0  ! 1: FCMPNE32	fcmpne32	%d62, %d0, %r9
	.word 0x28800001  ! 1: BLEU	bleu,a	<label_0x1>
	normalw
	.word 0x99458000  ! 253: RD_SOFTINT_REG	rd	%softint, %r12
	fbu,a,pn	%fcc0,  skip_80_56
	bge,a	 skip_80_56
.align 4096
skip_80_56:
	.word 0x39400001  ! 257: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x9f8033c7  ! 261: SIR	sir	0x13c7
pmu_80_57:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffa5, %g1, %g7
	.word 0xa3800007  ! 265: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_80_58:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3c0] %asi
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d910001  ! 269: WRPR_WSTATE_R	wrpr	%r4, %r1, %wstate
cmp_80_59:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_59:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_59
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_59:
    brnz,a %r10, cmp_wait80_59
    ld [%r23], %r10
    ba cmp_startwait80_59
    mov 0x80, %r10
continue_cmp_80_59:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_59
    mov 0x54, %r17
    best_set_reg(0xa594693158db4691, %r16, %r17)
cmp_multi_core_80_59:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	.word 0xc32fe0c0  ! 273: STXFSR_I	st-sfr	%f1, [0x00c0, %r31]
	.word 0x87802083  ! 277: WRASI_I	wr	%r0, 0x0083, %asi
trapasi_80_60:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xd0d84920  ! 281: LDXA_R	ldxa	[%r1, %r0] 0x49, %r8
memptr_80_61:
	set 0x60340000, %r31
	.word 0x85833332  ! 285: WRCCR_I	wr	%r12, 0x1332, %ccr
	.word 0x0acb0001  ! 1: BRNZ	brnz,pt  	%r12,<label_0xb0001>
	.word 0x8d903c41  ! 289: WRPR_PSTATE_I	wrpr	%r0, 0x1c41, %pstate
demap_80_63:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	wrhpr %g0, 0xd4b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe61fe1b8  ! 293: LDD_I	ldd	[%r31 + 0x01b8], %r19
	.word 0xc19fe100  ! 297: LDDFA_I	ldda	[%r31, 0x0100], %f0
	.word 0xe28008a0  ! 301: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r17
tglhtw_80_65:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x458, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa9b04983  ! 305: BSHUFFLE	fmovc32	%d32, %d34, %d20
pmu_80_66:
	nop
	nop
	setx 0xffffffb1ffffffab, %g1, %g7
	.word 0xa3800007  ! 309: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_67)+24, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_67)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_67:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_67:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98270ac  ! 313: WR_SET_SOFTINT_I	wr	%r9, 0x10ac, %set_softint
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_80_68:
	ta	T_CHANGE_NONHPRIV	! macro
cmp_80_69:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_69:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_69
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_69:
    brnz,a %r10, cmp_wait80_69
    ld [%r23], %r10
    ba cmp_startwait80_69
    mov 0x80, %r10
continue_cmp_80_69:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_69
    mov 0x8c, %r17
    best_set_reg(0xcca8e6de3f3e9cac, %r16, %r17)
cmp_multi_core_80_69:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	wrhpr %g0, 0x25b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f802120  ! 321: SIR	sir	0x0120
	.word 0xda8008a0  ! 325: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r13
intveclr_80_71:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x3ee4429f3698ad6d, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 329: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
ibp_80_72:
	nop
	nop
	wrhpr %g0, 0x259, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9ba409d1  ! 333: FDIVd	fdivd	%f16, %f48, %f44
trapasi_80_73:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x74) 
	.word 0xe6d84e80  ! 337: LDXA_R	ldxa	[%r1, %r0] 0x74, %r19
pmu_80_74:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb1ffffffab, %g1, %g7
	.word 0xa3800007  ! 341: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
ticken_80_75:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    stxa %g0, [0x38]%asi
    best_set_reg(0x5310b130185baf7c, %r16, %r17)
    wrpr %g0, %r17, %tick
    mov 1, %r16
    stxa %r16, [0x38]%asi
    wr %g0, %r12, %asi
	.word 0xa5b1c0e7  ! 345: EDGE16LN	edge16ln	%r7, %r7, %r18
dvapa_80_76:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe25, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa99, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfde20  ! 349: STDA_R	stda	%r16, [%r31 + %r0] 0xf1
	.word 0xd41fc000  ! 353: LDD_R	ldd	[%r31 + %r0], %r10
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_78) + 8, 16, 16)) -> intp(0,0,4,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_78)&0xffffffff) + 0, 16, 16)) -> intp(5,0,5,,,,,1)
#else
	set 0x1207714, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x99a449ca  ! 1: FDIVd	fdivd	%f48, %f10, %f12
intvec_80_78:
	.word 0x9f8024d7  ! 357: SIR	sir	0x04d7
trapasi_80_80:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xd0d84940  ! 361: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r8
	.word 0x9f802b6f  ! 365: SIR	sir	0x0b6f
mondo_80_81:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3e0] %asi
    stxa %r20, [%r0+0x3e0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d94800a  ! 369: WRPR_WSTATE_R	wrpr	%r18, %r10, %wstate
ibp_80_82:
	nop
	nop
	.word 0x99a109b4  ! 373: FDIVs	fdivs	%f4, %f20, %f12
splash_hpstate_80_84:
	ta T_CHANGE_NONHPRIV
	.word 0x81982f23  ! 377: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0f23, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_86:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_86-donret_80_86), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f31400 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc7f, %htstate
	wrhpr %g0, 0xbda, %hpstate  !  rand=1 (80)
	ldx [%r12+%r0], %g1
	retry
donretarg_80_86:
	.word 0xd66fe050  ! 381: LDSTUB_I	ldstub	%r11, [%r31 + 0x0050]
intveclr_80_88:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x2b6eb304a269cb3b, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x20a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 385: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_80_89:
	set 0x60740000, %r31
	.word 0x85823c70  ! 389: WRCCR_I	wr	%r8, 0x1c70, %ccr
	.word 0x87a98a31  ! 393: FCMPs	fcmps	%fcc<n>, %f6, %f17
	.word 0x93a509a8  ! 397: FDIVs	fdivs	%f20, %f8, %f9
	.word 0xc1bfdb20  ! 401: STDFA_R	stda	%f0, [%r0, %r31]
cmp_80_91:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_91:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_91
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_91:
    brnz,a %r10, cmp_wait80_91
    ld [%r23], %r10
    ba cmp_startwait80_91
    mov 0x80, %r10
continue_cmp_80_91:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_91
    mov 62, %r17
    best_set_reg(0x328ec9279ad57ae9, %r16, %r17)
cmp_multi_core_80_91:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	wrhpr %g0, 0x142, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9191800c  ! 405: WRPR_PIL_R	wrpr	%r6, %r12, %pil
splash_cmpr_80_92:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 409: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_80_93:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 413: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_94) + 56, 16, 16)) -> intp(4,0,23,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_94)&0xffffffff) + 24, 16, 16)) -> intp(7,0,0,,,,,1)
#else
	set 0xddc07254, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_94:
	.word 0xa7b304d1  ! 417: FCMPNE32	fcmpne32	%d12, %d48, %r19
demap_80_95:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x16800001  ! 1: BGE	bge  	<label_0x1>
	stxa %g3, [%g3] 0x57
	wrhpr %g0, 0xa59, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe0ca  ! 421: LDD_I	ldd	[%r31 + 0x00ca], %r18
pmu_80_96:
	nop
	nop
	setx 0xffffffb5ffffffae, %g1, %g7
	.word 0xa3800007  ! 425: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
ticken_80_98:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    stxa %g0, [0x38]%asi
    best_set_reg(0x7740f61320227350, %r16, %r17)
    wrpr %g0, %r17, %tick
    mov 1, %r16
    stxa %r16, [0x38]%asi
    wr %g0, %r12, %asi
	.word 0x97b280f0  ! 429: EDGE16LN	edge16ln	%r10, %r16, %r11
intveclr_80_99:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb7d2aee97e76e4e2, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 433: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_100)+32, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_100)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_100:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_100:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98366f6  ! 437: WR_SET_SOFTINT_I	wr	%r13, 0x06f6, %set_softint
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_102:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_102-donret_80_102+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0043d500 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x19d5, %htstate
	wrhpr %g0, 0x100, %hpstate  !  rand=1 (80)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_80_102:
	.word 0x2b400001  ! 441: FBPUG	fbug,a,pn	%fcc0, <label_0x1>
dvapa_80_103:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x940, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd53fe110  ! 445: STDF_I	std	%f10, [0x0110, %r31]
trapasi_80_104:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5b) 
	.word 0xe6d84b60  ! 449: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r19
ibp_80_105:
	nop
	nop
	wrhpr %g0, 0x84a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa3b507d4  ! 453: PDIST	pdistn	%d20, %d20, %d48
splash_hpstate_80_106:
	.word 0x819831d6  ! 457: WRHPR_HPSTATE_I	wrhpr	%r0, 0x11d6, %hpstate
dvapa_80_107:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf35, %r20
	mov 0x6, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa88, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfc3e0  ! 461: STDFA_R	stda	%f16, [%r0, %r31]
mondo_80_108:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r12, [%r0+0x3e0] %asi
    stxa %r19, [%r0+0x3e0] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d90400d  ! 465: WRPR_WSTATE_R	wrpr	%r1, %r13, %wstate
	.word 0x81580000  ! 469: FLUSHW	flushw
ticken_80_109:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    stxa %g0, [0x38]%asi
    best_set_reg(0x4b1c39843349584c, %r16, %r17)
    wrpr %g0, %r17, %tick
    mov 1, %r16
    stxa %r16, [0x38]%asi
    wr %g0, %r12, %asi
	.word 0xa7b500f3  ! 473: EDGE16LN	edge16ln	%r20, %r19, %r19
trapasi_80_110:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x5b) 
	.word 0xe0d84b60  ! 477: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r16
	.word 0xc1bfe0c0  ! 481: STDFA_I	stda	%f0, [0x00c0, %r31]
splash_hpstate_80_111:
	.word 0x81983497  ! 485: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1497, %hpstate
cmp_80_113:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_113:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_113
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_113:
    brnz,a %r10, cmp_wait80_113
    ld [%r23], %r10
    ba cmp_startwait80_113
    mov 0x80, %r10
continue_cmp_80_113:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_113
    mov 0xcc, %r17
    best_set_reg(0x746c020ddf6957a5, %r16, %r17)
cmp_multi_core_80_113:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	.word 0x91940013  ! 489: WRPR_PIL_R	wrpr	%r16, %r19, %pil
demap_80_114:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x34800001  ! 1: BG	bg,a	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x400, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe07e  ! 493: LDD_I	ldd	[%r31 + 0x007e], %r16
intveclr_80_116:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x88160daabfac04b2, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 497: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
demap_80_117:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x09400001  ! 1: FBPL	fbl
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x45a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe04a  ! 501: LDD_I	ldd	[%r31 + 0x004a], %r8
memptr_80_118:
	set 0x60540000, %r31
	.word 0x858221c8  ! 505: WRCCR_I	wr	%r8, 0x01c8, %ccr
	.word 0x97524000  ! 509: RDPR_CWP	rdpr	%cwp, %r11
	.word 0x8d802000  ! 513: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0xd08008a0  ! 517: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r8
change_to_randtl_80_121:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_80_121:
	.word 0x8f902002  ! 521: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
	.word 0xe0bfc2c0  ! 525: STDA_R	stda	%r16, [%r31 + %r0] 0x16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa5b444d4  ! 1: FCMPNE32	fcmpne32	%d48, %d20, %r18
intvec_80_123:
	.word 0xa9a089cb  ! 529: FDIVd	fdivd	%f2, %f42, %f20
splash_cmpr_80_124:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 533: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_80_125:
	nop
	nop
	.word 0x00800001  ! 537: BN	bn  	<label_0x1>
jmptr_80_126:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 541: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xc32fc000  ! 545: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xa0f88001  ! 549: SDIVcc_R	sdivcc 	%r2, %r1, %r16
intveclr_80_127:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8d02a29fcb47b9b3, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 553: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_80_128:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffad, %g1, %g7
	.word 0xa3800007  ! 557: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_80_129:
	set user_data_start, %r31
	.word 0x85847254  ! 561: WRCCR_I	wr	%r17, 0x1254, %ccr
	.word 0xe41fe170  ! 565: LDD_I	ldd	[%r31 + 0x0170], %r18
frzptr_80_131:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 569: BN	bn,a	<label_0x1>
dvapa_80_133:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa49, %r20
	mov 0x13, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x411, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 573: STXFSR_R	st-sfr	%f1, [%r0, %r31]
dvapa_80_134:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb01, %r20
	mov 0x3, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f8032da  ! 577: SIR	sir	0x12da
pmu_80_135:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbfffffffa7, %g1, %g7
	.word 0xa3800007  ! 581: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe45fe198  ! 585: LDX_I	ldx	[%r31 + 0x0198], %r18
cmp_80_136:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_136:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_136
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_136:
    brnz,a %r10, cmp_wait80_136
    ld [%r23], %r10
    ba cmp_startwait80_136
    mov 0x80, %r10
continue_cmp_80_136:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_136
    mov 0xcc, %r17
    best_set_reg(0x1226ad6f86f8a908, %r16, %r17)
cmp_multi_core_80_136:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x60]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	.word 0xe43fe1d0  ! 589: STD_I	std	%r18, [%r31 + 0x01d0]
splash_hpstate_80_137:
	.word 0x05400001  ! 1: FBPLG	fblg
	.word 0x81982fcd  ! 593: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0fcd, %hpstate
	.word 0x26cc0001  ! 1: BRLZ	brlz,a,pt	%r16,<label_0xc0001>
	.word 0x8d9033d1  ! 597: WRPR_PSTATE_I	wrpr	%r0, 0x13d1, %pstate
splash_cmpr_80_140:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 601: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_80_141:
	nop
	nop
	wrhpr %g0, 0x4c3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe897df00  ! 605: LDUHA_R	lduha	[%r31, %r0] 0xf8, %r20
splash_cmpr_80_142:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 609: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
pmu_80_143:
	nop
	nop
	setx 0xffffffb3ffffffa1, %g1, %g7
	.word 0xa3800007  ! 613: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xd0bfc540  ! 617: STDA_R	stda	%r8, [%r31 + %r0] 0x2a
	.word 0x8d802004  ! 621: WRFPRS_I	wr	%r0, 0x0004, %fprs
intveclr_80_145:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa460975f8f812fbb, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 625: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_80_146:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r17, [%r0+0x3e0] %asi
    stxa %r18, [%r0+0x3d0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d948013  ! 629: WRPR_WSTATE_R	wrpr	%r18, %r19, %wstate
frzptr_80_147:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 633: BN	bn,a	<label_0x1>
	.word 0x17400001  ! 1: FBPGE	fbge
	.word 0x8d9033e1  ! 637: WRPR_PSTATE_I	wrpr	%r0, 0x13e1, %pstate
tagged_80_149:
	taddcctv %r0, 0x19ec, %r12
	.word 0xd407e041  ! 641: LDUW_I	lduw	[%r31 + 0x0041], %r10
dvapa_80_151:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xdfb, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf91, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91b507cb  ! 645: PDIST	pdistn	%d20, %d42, %d8
	.word 0x97b50ff0  ! 649: FONES	e	%f11
trapasi_80_152:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd8d84940  ! 653: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r12
trapasi_80_153:
	nop
	mov 0x3f8, %r1 	! (VA for ASI 0x25) 
	.word 0xd8d844a0  ! 657: LDXA_R	ldxa	[%r1, %r0] 0x25, %r12
demap_80_154:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r12, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x312, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe140  ! 661: LDD_I	ldd	[%r31 + 0x0140], %r11
tagged_80_155:
	taddcctv %r6, 0x1606, %r19
	.word 0xd407e1e8  ! 665: LDUW_I	lduw	[%r31 + 0x01e8], %r10
	.word 0x87802036  ! 669: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0xd697d000  ! 673: LDUHA_R	lduha	[%r31, %r0] 0x80, %r11
    set 0x3336, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0xa1b487c4  ! 677: PDIST	pdistn	%d18, %d4, %d16
memptr_80_157:
	set 0x60340000, %r31
	.word 0x85842e2e  ! 681: WRCCR_I	wr	%r16, 0x0e2e, %ccr
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_159:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_159-donret_80_159+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x008d4500 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1d0c, %htstate
	wrhpr %g0, 0x54a, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_159:
	.word 0x35400001  ! 685: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
intveclr_80_160:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x67c206ce67b11379, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 689: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
cmp_80_161:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_161:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_161
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_161:
    brnz,a %r10, cmp_wait80_161
    ld [%r23], %r10
    ba cmp_startwait80_161
    mov 0x80, %r10
continue_cmp_80_161:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_161
    mov 0x77, %r17
    best_set_reg(0xa2303188467c0263, %r16, %r17)
cmp_multi_core_80_161:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	wrhpr %g0, 0x21a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fe1f0  ! 693: STXFSR_I	st-sfr	%f1, [0x01f0, %r31]
	.word 0xe29fdd40  ! 697: LDDA_R	ldda	[%r31, %r0] 0xea, %r17
memptr_80_162:
	set user_data_start, %r31
	.word 0x85847086  ! 701: WRCCR_I	wr	%r17, 0x1086, %ccr
splash_tba_80_164:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 705: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_80_166:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x16800001  ! 1: BGE	bge  	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x451, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe098  ! 709: LDD_I	ldd	[%r31 + 0x0098], %r16
vahole2_80_167:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target2, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe19fdc00  ! 713: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x9bb28546  ! 717: FCMPEQ16	fcmpeq16	%d10, %d6, %r13
	.word 0xe84fe070  ! 721: LDSB_I	ldsb	[%r31 + 0x0070], %r20
	.word 0xe87fe180  ! 725: SWAP_I	swap	%r20, [%r31 + 0x0180]
	.word 0xa7702080  ! 1: POPC_I	popc	0x0080, %r19
	.word 0xe697c400  ! 1: LDUHA_R	lduha	[%r31, %r0] 0x20, %r19
	mov 0xb0, %r30
	.word 0x83d0001e  ! 729: Tcc_R	te	icc_or_xcc, %r0 + %r30
	.word 0x81510000  ! 733: RDPR_TICK	rdpr	%tick, %r0
trapasi_80_169:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x50) 
	.word 0xd2d84a00  ! 737: LDXA_R	ldxa	[%r1, %r0] 0x50, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_170) + 48, 16, 16)) -> intp(6,0,15,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_170)&0xffffffff) + 16, 16, 16)) -> intp(3,0,29,,,,,1)
#else
	set 0x65109947, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_170:
	.word 0x9f803196  ! 741: SIR	sir	0x1196
demap_80_171:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r8, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xd92, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd81fe04e  ! 745: LDD_I	ldd	[%r31 + 0x004e], %r12
	.word 0xe09fe0c0  ! 749: LDDA_I	ldda	[%r31, + 0x00c0] %asi, %r16
pmu_80_172:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb2ffffffae, %g1, %g7
	.word 0xa3800007  ! 753: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_80_173:
	set 0x60140000, %r31
	.word 0x8584be18  ! 757: WRCCR_I	wr	%r18, 0x1e18, %ccr
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_80_174:
	ta	T_CHANGE_NONPRIV	! macro
tagged_80_176:
	tsubcctv %r16, 0x19eb, %r9
	.word 0xe807e05d  ! 765: LDUW_I	lduw	[%r31 + 0x005d], %r20
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_80_177:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_80_178:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xbac, %r20
	mov 0x1, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x452, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa77022b3  ! 773: POPC_I	popc	0x02b3, %r19
pmu_80_180:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb9ffffffa7, %g1, %g7
	.word 0xa3800007  ! 777: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xc19fe1a0  ! 781: LDDFA_I	ldda	[%r31, 0x01a0], %f0
	.word 0x91d02035  ! 785: Tcc_I	ta	icc_or_xcc, %r0 + 53
	.word 0x8d9027d5  ! 789: WRPR_PSTATE_I	wrpr	%r0, 0x07d5, %pstate
trapasi_80_182:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe2d84940  ! 793: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r17
br_badelay2_80_184:
	.word 0x95a4c9d0  ! 1: FDIVd	fdivd	%f50, %f16, %f10
	pdist %f14, %f22, %f2
	.word 0xa3b5030b  ! 797: ALIGNADDRESS	alignaddr	%r20, %r11, %r17
splash_tick_80_185:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x7c18e184148cc2a3, %r16, %r17)
	.word 0x89800011  ! 801: WRTICK_R	wr	%r0, %r17, %tick
frzptr_80_186:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x95702050  ! 1: POPC_I	popc	0x0050, %r10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 805: BN	bn,a	<label_0x1>
	.word 0x8d802004  ! 809: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_80_187:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 813: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
	.word 0xd05fe190  ! 817: LDX_I	ldx	[%r31 + 0x0190], %r8
	.word 0xc19fe180  ! 821: LDDFA_I	ldda	[%r31, 0x0180], %f0
	.word 0x9f802b32  ! 825: SIR	sir	0x0b32
cwp_80_188:
    set user_data_start, %o7
	.word 0x93902005  ! 829: WRPR_CWP_I	wrpr	%r0, 0x0005, %cwp
	.word 0x8d903fe3  ! 833: WRPR_PSTATE_I	wrpr	%r0, 0x1fe3, %pstate
change_to_randtl_80_191:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_80_191:
	.word 0x8f902002  ! 837: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
tglhtw_80_192:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x443, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x95b2498a  ! 841: BSHUFFLE	fmovc32	%d40, %d10, %d10
	.word 0xe19fe000  ! 845: LDDFA_I	ldda	[%r31, 0x0000], %f16
	bl,a	 skip_80_193
	stxa %r16, [%r0] ASI_LSU_CONTROL
	.word 0xc36c78ce  ! 1: PREFETCH_I	prefetch	[%r17 + 0xfffff8ce], #one_read
	stxa %r8, [%r0] ASI_LSU_CONTROL
.align 2048
skip_80_193:
	.word 0xd7e7c400  ! 849: CASA_I	casa	[%r31] 0x20, %r0, %r11
	.word 0x90c1aeac  ! 853: ADDCcc_I	addccc 	%r6, 0x0eac, %r8
ibp_80_194:
	nop
	nop
	.word 0xe09fd160  ! 857: LDDA_R	ldda	[%r31, %r0] 0x8b, %r16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_80_195:
	.word 0x9f802486  ! 861: SIR	sir	0x0486
	.word 0x8d802000  ! 865: WRFPRS_I	wr	%r0, 0x0000, %fprs
	bne,a	 skip_80_196
	stxa %r19, [%r0] ASI_LSU_CONTROL
	brgez,pt  	%r18, skip_80_196
	stxa %r8, [%r0] ASI_LSU_CONTROL
.align 512
skip_80_196:
	.word 0xe03fe0f0  ! 869: STD_I	std	%r16, [%r31 + 0x00f0]
ceter_80_197:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 7, %r17
    sllx %r17, 60, %r17
    mov 0x18, %r16
    stxa %r17, [%r16]0x4c
	wrhpr %g0, 0x850, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9b410000  ! 873: RDTICK	rd	%tick, %r13
	.word 0xd937c000  ! 877: STQF_R	-	%f12, [%r0, %r31]
br_longdelay2_80_198:
	.word 0x09400001  ! 1: FBPL	fbl
	.word 0x24cfc001  ! 881: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
dvapa_80_199:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8b2, %r20
	mov 0x1a, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x4d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fdc00  ! 885: LDDFA_R	ldda	[%r31, %r0], %f0
mondo_80_200:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3c0] %asi
    stxa %r18, [%r0+0x3e0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d94000d  ! 889: WRPR_WSTATE_R	wrpr	%r16, %r13, %wstate
	.word 0xe2cfd920  ! 893: LDSBA_R	ldsba	[%r31, %r0] 0xc9, %r17
dvapa_80_201:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x898, %r20
	mov 0x2, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x559, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87a88a4b  ! 897: FCMPd	fcmpd	%fcc<n>, %f2, %f42
pmu_80_202:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb3ffffffa5, %g1, %g7
	.word 0xa3800007  ! 901: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe6dfc6c0  ! 1: LDXA_R	ldxa	[%r31, %r0] 0x36, %r19
	.word 0xe69fd100  ! 1: LDDA_R	ldda	[%r31, %r0] 0x88, %r19
	mov 0x35, %r30
	.word 0x91d0001e  ! 905: Tcc_R	ta	icc_or_xcc, %r0 + %r30
fpinit_80_205:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89b00484  ! 909: FCMPLE32	fcmple32	%d0, %d4, %r4
splash_tba_80_206:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 913: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_80_207:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r11, [%r0+0x3c0] %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d90c006  ! 917: WRPR_WSTATE_R	wrpr	%r3, %r6, %wstate
	bvs  	 skip_80_208
	brlez,a,pn	%r3, skip_80_208
.align 512
skip_80_208:
	.word 0xa7b444c5  ! 921: FCMPNE32	fcmpne32	%d48, %d36, %r19
splash_hpstate_80_209:
	ta T_CHANGE_NONHPRIV
	.word 0x15400001  ! 1: FBPUE	fbue
	.word 0x81982e0c  ! 925: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0e0c, %hpstate
demap_80_210:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2ec9c001  ! 1: BRGEZ	brgez,a,pt	%r7,<label_0x9c001>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x649, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda1fe0a9  ! 929: LDD_I	ldd	[%r31 + 0x00a9], %r13
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	.word 0xdadfd160  ! 1: LDXA_R	ldxa	[%r31, %r0] 0x8b, %r13
	mov 0xb0, %r30
	.word 0x83d0001e  ! 933: Tcc_R	te	icc_or_xcc, %r0 + %r30
splash_cmpr_80_212:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 937: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x93b144d2  ! 1: FCMPNE32	fcmpne32	%d36, %d18, %r9
intvec_80_213:
	.word 0x95b204c7  ! 941: FCMPNE32	fcmpne32	%d8, %d38, %r10
	.word 0x919062f6  ! 945: WRPR_PIL_I	wrpr	%r1, 0x02f6, %pil
fpinit_80_214:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009c4  ! 949: FDIVd	fdivd	%f0, %f4, %f4
cmp_80_215:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_215:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_215
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_215:
    brnz,a %r10, cmp_wait80_215
    ld [%r23], %r10
    ba cmp_startwait80_215
    mov 0x80, %r10
continue_cmp_80_215:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_215
    mov 0x82, %r17
    best_set_reg(0xf22f57b91acb886c, %r16, %r17)
cmp_multi_core_80_215:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	wrhpr %g0, 0xd49, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9191800c  ! 953: WRPR_PIL_R	wrpr	%r6, %r12, %pil
	.word 0x9268aaf0  ! 957: UDIVX_I	udivx 	%r2, 0x0af0, %r9
	.word 0x8780201c  ! 961: WRASI_I	wr	%r0, 0x001c, %asi
ibp_80_217:
	nop
	nop
	.word 0xe23fe0c0  ! 965: STD_I	std	%r17, [%r31 + 0x00c0]
splash_tick_80_218:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x200a7899abc647a7, %r16, %r17)
	.word 0x89800011  ! 969: WRTICK_R	wr	%r0, %r17, %tick
splash_lsu_80_219:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xf7c47df2, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 973: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
ibp_80_220:
	nop
	nop
	wrhpr %g0, 0xd13, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfdb20  ! 977: STDFA_R	stda	%f0, [%r0, %r31]
ibp_80_222:
	nop
	nop
	wrhpr %g0, 0xb8b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfde20  ! 981: STDFA_R	stda	%f0, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_224:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_224-donret_80_224+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d0a400 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x159, %htstate
	wrhpr %g0, 0xfda, %hpstate  !  rand=1 (80)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_80_224:
	.word 0x8d903e47  ! 985: WRPR_PSTATE_I	wrpr	%r0, 0x1e47, %pstate
mondo_80_225:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r18, [%r0+0x3d0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d918010  ! 989: WRPR_WSTATE_R	wrpr	%r6, %r16, %wstate
splash_tick_80_226:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xb737339b252bb420, %r16, %r17)
	.word 0x89800011  ! 993: WRTICK_R	wr	%r0, %r17, %tick
trapasi_80_227:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xe4d84b60  ! 997: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r18
	.word 0xc36fe1c0  ! 1001: PREFETCH_I	prefetch	[%r31 + 0x01c0], #one_read
	.word 0x91d02032  ! 1005: Tcc_I	ta	icc_or_xcc, %r0 + 50
	.word 0xe127c000  ! 1009: STF_R	st	%f16, [%r0, %r31]
	.word 0x90d84007  ! 1013: SMULcc_R	smulcc 	%r1, %r7, %r8
change_to_randtl_80_230:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_80_230:
	.word 0x8f902002  ! 1017: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_231:
	.word 0x99a309c1  ! 1021: FDIVd	fdivd	%f12, %f32, %f12
intveclr_80_232:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x75760ac837cb2776, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1025: FBPLG	fblg
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_233:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_233-donret_80_233+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b03a00 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc5d, %htstate
	wrhpr %g0, 0xc89, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_233:
	.word 0xe46fe0b7  ! 1029: LDSTUB_I	ldstub	%r18, [%r31 + 0x00b7]
	.word 0x9f8039f7  ! 1033: SIR	sir	0x19f7
pmu_80_235:
	nop
	nop
	setx 0xffffffb3ffffffac, %g1, %g7
	.word 0xa3800007  ! 1037: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
cerer_80_236:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xd54c528fe08213d9, %r26, %r27)
    sethi %hi(0x20008000), %r26   ! Set ITTM/DTTM
    sllx %r26, 32, %r26
    or %r26, %r27, %r27
    mov 0x10, %r26
    stxa %r27, [%r26]0x4c
	.word 0x8143e011  ! 1041: MEMBAR	membar	#LoadLoad | #Lookaside 
brcommon3_80_237:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd9e7c2c0  ! 1: CASA_I	casa	[%r31] 0x16, %r0, %r12
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d903507  ! 1045: WRPR_PSTATE_I	wrpr	%r0, 0x1507, %pstate
intveclr_80_239:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x1845ed0621ffbc68, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1049: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_cmpr_80_240:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1053: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xc19fda60  ! 1057: LDDFA_R	ldda	[%r31, %r0], %f0
jmptr_80_241:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 1061: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0x97702922  ! 1065: POPC_I	popc	0x0922, %r11
	.word 0xa0fd0011  ! 1069: SDIVcc_R	sdivcc 	%r20, %r17, %r16
br_badelay1_80_242:
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	.word 0xe737e050  ! 1: STQF_I	-	%f19, [0x0050, %r31]
	.word 0xa7b7c4c0  ! 1: FCMPNE32	fcmpne32	%d62, %d0, %r19
	normalw
	.word 0xa7458000  ! 1073: RD_SOFTINT_REG	rd	%softint, %r19
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_244)+56, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_244)&0xffffffff) + 56, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_244:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_244:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9853381  ! 1077: WR_SET_SOFTINT_I	wr	%r20, 0x1381, %set_softint
unsupttte_80_245:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0x453, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa3a509c1  ! 1081: FDIVd	fdivd	%f20, %f32, %f48
ibp_80_246:
	nop
	nop
	wrhpr %g0, 0x909, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91b207c7  ! 1085: PDIST	pdistn	%d8, %d38, %d8
fpinit_80_247:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009a4  ! 1089: FDIVs	fdivs	%f0, %f4, %f4
pmu_80_248:
	nop
	nop
	setx 0xffffffb6ffffffa2, %g1, %g7
	.word 0xa3800007  ! 1093: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe88008a0  ! 1097: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0x97b30589  ! 1101: FCMPGT32	fcmpgt32	%d12, %d40, %r11
	.word 0x93d020b2  ! 1105: Tcc_I	tne	icc_or_xcc, %r0 + 178
	.word 0x99a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f12
	.word 0xd81fe140  ! 1: LDD_I	ldd	[%r31 + 0x0140], %r12
	mov 0x34, %r30
	.word 0x91d0001e  ! 1109: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x87a88a52  ! 1113: FCMPd	fcmpd	%fcc<n>, %f2, %f18
memptr_80_250:
	set 0x60340000, %r31
	.word 0x858523e4  ! 1117: WRCCR_I	wr	%r20, 0x03e4, %ccr
	.word 0x8d90330b  ! 1121: WRPR_PSTATE_I	wrpr	%r0, 0x130b, %pstate
	.word 0xd45fe080  ! 1125: LDX_I	ldx	[%r31 + 0x0080], %r10
memptr_80_253:
	set 0x60340000, %r31
	.word 0x8584e1aa  ! 1129: WRCCR_I	wr	%r19, 0x01aa, %ccr
trapasi_80_254:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xe4d84e40  ! 1133: LDXA_R	ldxa	[%r1, %r0] 0x72, %r18
mondo_80_255:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3c0] %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d92800c  ! 1137: WRPR_WSTATE_R	wrpr	%r10, %r12, %wstate
	.word 0x98d4000c  ! 1141: UMULcc_R	umulcc 	%r16, %r12, %r12
intveclr_80_256:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x324a8604e5433685, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xc93, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1145: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_80_258:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xe46751309c035ec8, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x95a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1149: FBPLG	fblg
splash_hpstate_80_259:
	.word 0x27400001  ! 1: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
	.word 0x81982c8d  ! 1153: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0c8d, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_261:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_261-donret_80_261), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d4aa00 | (16 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x18c7, %htstate
	wrhpr %g0, 0xb53, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_261:
	.word 0x2c800001  ! 1157: BNEG	bneg,a	<label_0x1>
intveclr_80_262:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd8daab973d861f62, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x858, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1161: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_80_263:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb5ffffffa4, %g1, %g7
	.word 0xa3800007  ! 1165: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	bneg  	 skip_80_265
	fbl,a,pn	%fcc0,  skip_80_265
.align 512
skip_80_265:
	.word 0xa1b4c4d2  ! 1169: FCMPNE32	fcmpne32	%d50, %d18, %r16
mondo_80_266:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r4, [%r0+0x3c0] %asi
    stxa %r7, [%r0+0x3d0] %asi
	.word 0x8780208b  ! 1: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0x9d944012  ! 1173: WRPR_WSTATE_R	wrpr	%r17, %r18, %wstate
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_80_267:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_80_268:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa3f, %r20
	mov 0x18, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x741, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe13fe0e0  ! 1181: STDF_I	std	%f16, [0x00e0, %r31]
	.word 0x3e800001  ! 1: BVC	bvc,a	<label_0x1>
	.word 0x8d903a50  ! 1185: WRPR_PSTATE_I	wrpr	%r0, 0x1a50, %pstate
pmu_80_270:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa4, %g1, %g7
	.word 0xa3800007  ! 1189: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
pmu_80_271:
	nop
	nop
	setx 0xffffffb2ffffffac, %g1, %g7
	.word 0xa3800007  ! 1193: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_80_272:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3c8] %asi
    stxa %r17, [%r0+0x3c0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d940011  ! 1197: WRPR_WSTATE_R	wrpr	%r16, %r17, %wstate
memptr_80_273:
	set user_data_start, %r31
	.word 0x8584645a  ! 1201: WRCCR_I	wr	%r17, 0x045a, %ccr
intveclr_80_274:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6b48f8dd3b93b179, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1205: FBPLG	fblg
trapasi_80_275:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe4d84920  ! 1209: LDXA_R	ldxa	[%r1, %r0] 0x49, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_276:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_276-donret_80_276+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0031cd00 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x8cf, %htstate
	wrhpr %g0, 0x118, %hpstate  !  rand=1 (80)
	retry
donretarg_80_276:
	.word 0x93a449c4  ! 1213: FDIVd	fdivd	%f48, %f4, %f40
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_278) + 56, 16, 16)) -> intp(4,0,27,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_278)&0xffffffff) + 48, 16, 16)) -> intp(3,0,23,,,,,1)
#else
	set 0x264074e5, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_278:
	.word 0x9f8035f8  ! 1217: SIR	sir	0x15f8
	brgz,a,pt	%r16, skip_80_279
	stxa %r6, [%r0] ASI_LSU_CONTROL
	fblg,a,pn	%fcc0,  skip_80_279
	stxa %r12, [%r0] ASI_LSU_CONTROL
.align 2048
skip_80_279:
	.word 0xc36fe0c0  ! 1221: PREFETCH_I	prefetch	[%r31 + 0x00c0], #one_read
splash_hpstate_80_280:
	.word 0x81982fc5  ! 1225: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0fc5, %hpstate
splash_cmpr_80_281:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1229: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_tick_80_282:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x1c85c96196c690e9, %r16, %r17)
	.word 0x89800011  ! 1233: WRTICK_R	wr	%r0, %r17, %tick
brcommon2_80_283:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x91a089d3  ! 1: FDIVd	fdivd	%f2, %f50, %f8
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0x81b7c7c0  ! 1237: PDIST	pdistn	%d62, %d0, %d0
jmptr_80_284:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1241: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_80_285:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xc19fda60  ! 1245: LDDFA_R	ldda	[%r31, %r0], %f0
change_to_randtl_80_286:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_80_286:
	.word 0x8f902000  ! 1249: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
memptr_80_287:
	set 0x60340000, %r31
	.word 0x85843ccd  ! 1253: WRCCR_I	wr	%r16, 0x1ccd, %ccr
ibp_80_288:
	nop
	nop
	.word 0xa3b50492  ! 1257: FCMPLE32	fcmple32	%d20, %d18, %r17
splash_htba_80_289:
	nop
	ta T_CHANGE_HPRIV
	setx 0x00000000002a0000, %r11, %r12
	.word 0x8b98000c  ! 1261: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
memptr_80_290:
	set 0x60540000, %r31
	.word 0x8581aa7f  ! 1265: WRCCR_I	wr	%r6, 0x0a7f, %ccr
brcommon2_80_291:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0xd3140014  ! 1: LDQF_R	-	[%r16, %r20], %f9
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0xe1bfc3e0  ! 1269: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9f80255f  ! 1273: SIR	sir	0x055f
pmu_80_293:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffa0, %g1, %g7
	.word 0xa3800007  ! 1277: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_80_294:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xde1, %r20
	mov 0x8, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x1d1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe31fe140  ! 1281: LDDF_I	ldd	[%r31, 0x0140], %f17
	.word 0xe1bfe100  ! 1285: STDFA_I	stda	%f16, [0x0100, %r31]
memptr_80_295:
	set 0x60740000, %r31
	.word 0x8583312b  ! 1289: WRCCR_I	wr	%r12, 0x112b, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_296) + 0, 16, 16)) -> intp(5,0,5,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_296)&0xffffffff) + 0, 16, 16)) -> intp(5,0,24,,,,,1)
#else
	set 0xe09046d7, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_296:
	.word 0x9f8032b2  ! 1293: SIR	sir	0x12b2
mondo_80_297:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3c0] %asi
    stxa %r18, [%r0+0x3d0] %asi
	.word 0x87802030  ! 1: WRASI_I	wr	%r0, 0x0030, %asi
	.word 0x9d948012  ! 1297: WRPR_WSTATE_R	wrpr	%r18, %r18, %wstate
splash_cmpr_80_298:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1301: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
jmptr_80_299:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 1305: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xe0dfc2c0  ! 1309: LDXA_R	ldxa	[%r31, %r0] 0x16, %r16
intveclr_80_301:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa4b127e00941641a, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xfd1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1313: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_302:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_302-donret_80_302), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b66200 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1e53, %htstate
	best_set_reg(0xa48, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	.word 0x35400001  ! 1: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_80_302:
	.word 0x81982cdd  ! 1317: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0cdd, %hpstate
	.word 0x87802020  ! 1321: WRASI_I	wr	%r0, 0x0020, %asi
dvapa_80_303:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xdec, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x352, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 1325: STXFSR_R	st-sfr	%f1, [%r0, %r31]
splash_hpstate_80_304:
	ta T_CHANGE_NONHPRIV
	.word 0x10800001  ! 1: BA	ba  	<label_0x1>
	.word 0x81982715  ! 1329: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0715, %hpstate
mondo_80_305:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r3, [%r0+0x3d0] %asi
    stxa %r2, [%r0+0x3e8] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d904010  ! 1333: WRPR_WSTATE_R	wrpr	%r1, %r16, %wstate
demap_80_306:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x298, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe1c0  ! 1337: LDD_I	ldd	[%r31 + 0x01c0], %r10
splash_hpstate_80_308:
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	.word 0x819837c5  ! 1341: WRHPR_HPSTATE_I	wrhpr	%r0, 0x17c5, %hpstate
cwp_80_309:
    set user_data_start, %o7
	.word 0x93902007  ! 1345: WRPR_CWP_I	wrpr	%r0, 0x0007, %cwp
	.word 0xa1902001  ! 1349: WRPR_GL_I	wrpr	%r0, 0x0001, %-
	.word 0x9f803980  ! 1353: SIR	sir	0x1980
vahole2_80_310:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xc1bfc2c0  ! 1357: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe68008a0  ! 1361: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
	.word 0x924cc010  ! 1365: MULX_R	mulx 	%r19, %r16, %r9
trapasi_80_312:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x5b) 
	.word 0xd2d84b60  ! 1369: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r9
	.word 0x8d802000  ! 1373: WRFPRS_I	wr	%r0, 0x0000, %fprs
splash_tba_80_314:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000400380000, %r11, %r12
	.word 0x8b90000c  ! 1377: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_tick_80_315:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xea7387ae12088ec7, %r16, %r17)
	.word 0x89800011  ! 1381: WRTICK_R	wr	%r0, %r17, %tick
pmu_80_316:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa7, %g1, %g7
	.word 0xa3800007  ! 1385: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_tick_80_317:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x9c25686f00038186, %r16, %r17)
	.word 0x89800011  ! 1389: WRTICK_R	wr	%r0, %r17, %tick
cerer_80_318:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x01df50d4497e5c9b, %r26, %r27)
    sethi %hi(0x20008000), %r26   ! Set ITTM/DTTM
    sllx %r26, 32, %r26
    or %r26, %r27, %r27
    mov 0x10, %r26
    stxa %r27, [%r26]0x4c
	.word 0x8143e011  ! 1393: MEMBAR	membar	#LoadLoad | #Lookaside 
splash_cmpr_80_319:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 1397: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_80_321:
	ta T_CHANGE_NONHPRIV
	.word 0x819833cf  ! 1401: WRHPR_HPSTATE_I	wrhpr	%r0, 0x13cf, %hpstate
dvapa_80_322:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xab8, %r20
	mov 0x13, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x980, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99b30487  ! 1405: FCMPLE32	fcmple32	%d12, %d38, %r12
tglhtw_80_323:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xf18, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x91b44994  ! 1409: BSHUFFLE	fmovc32	%d48, %d20, %d8
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_324) + 40, 16, 16)) -> intp(1,0,20,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_324)&0xffffffff) + 24, 16, 16)) -> intp(1,0,14,,,,,1)
#else
	set 0xb9806c32, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x19400001  ! 1: FBPUGE	fbuge
intvec_80_324:
	.word 0x39400001  ! 1413: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
demap_80_325:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x35400001  ! 1: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xc2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe0aa  ! 1417: LDD_I	ldd	[%r31 + 0x00aa], %r9
tagged_80_326:
	tsubcctv %r19, 0x119b, %r0
	.word 0xda07e154  ! 1421: LDUW_I	lduw	[%r31 + 0x0154], %r13
	.word 0xa8828011  ! 1425: ADDcc_R	addcc 	%r10, %r17, %r20
splash_cmpr_80_327:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 1429: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe31fc000  ! 1433: LDDF_R	ldd	[%r31, %r0], %f17
	.word 0x83d020b5  ! 1437: Tcc_I	te	icc_or_xcc, %r0 + 181
memptr_80_328:
	set 0x60740000, %r31
	.word 0x8582f9cb  ! 1441: WRCCR_I	wr	%r11, 0x19cb, %ccr
brcommon3_80_329:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe06fe1c0  ! 1: LDSTUB_I	ldstub	%r16, [%r31 + 0x01c0]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d90369b  ! 1445: WRPR_PSTATE_I	wrpr	%r0, 0x169b, %pstate
tglhtw_80_330:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xd83, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x9bb50991  ! 1449: BSHUFFLE	fmovc32	%d20, %d48, %d44
trapasi_80_332:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 1453: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_80_333:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xeecad46d, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 1457: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
unsupttte_80_334:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0xc98, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9ba109c5  ! 1461: FDIVd	fdivd	%f4, %f36, %f44
	.word 0xd137e0da  ! 1465: STQF_I	-	%f8, [0x00da, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_335:
	.word 0xa5a509c9  ! 1469: FDIVd	fdivd	%f20, %f40, %f18
    set 0x3ec5, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x91b287c5  ! 1473: PDIST	pdistn	%d10, %d36, %d8
intveclr_80_336:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x44ddfc5378ebc584, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x602, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1477: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x87802030  ! 1481: WRASI_I	wr	%r0, 0x0030, %asi
memptr_80_338:
	set 0x60740000, %r31
	.word 0x85847162  ! 1485: WRCCR_I	wr	%r17, 0x1162, %ccr
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_339)+40, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_339)&0xffffffff) + 32, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_339:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_339:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa982bc88  ! 1489: WR_SET_SOFTINT_I	wr	%r10, 0x1c88, %set_softint
cerer_80_340:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xd7c4b59d74f1b530, %r26, %r27)
    sethi %hi(0x20008000), %r26   ! Set ITTM/DTTM
    sllx %r26, 32, %r26
    or %r26, %r27, %r27
    mov 0x10, %r26
    stxa %r27, [%r26]0x4c
	.word 0x8143e011  ! 1493: MEMBAR	membar	#LoadLoad | #Lookaside 
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_341:
	.word 0x39400001  ! 1497: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
dvapa_80_342:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xfee, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xdd0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd09fd040  ! 1501: LDDA_R	ldda	[%r31, %r0] 0x82, %r8
	.word 0x92ac4010  ! 1505: ANDNcc_R	andncc 	%r17, %r16, %r9
	.word 0x29800001  ! 1509: FBL	fbl,a	<label_0x1>
br_badelay1_80_344:
	.word 0x24cfc001  ! 1: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xe7340013  ! 1: STQF_R	-	%f19, [%r19, %r16]
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	normalw
	.word 0xa9458000  ! 1513: RD_SOFTINT_REG	rd	%softint, %r20
ibp_80_346:
	nop
	nop
	.word 0x20800001  ! 1517: BN	bn,a	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_347:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_347-donret_80_347+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x000a5e00 | (0x58 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xf06, %htstate
	wrhpr %g0, 0x981, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_347:
	.word 0x8d902e1c  ! 1521: WRPR_PSTATE_I	wrpr	%r0, 0x0e1c, %pstate
	bneg,a	 skip_80_348
	fbge,a,pn	%fcc0,  skip_80_348
.align 4096
skip_80_348:
	.word 0x19400001  ! 1525: FBPUGE	fbuge
	.word 0xe87fe010  ! 1529: SWAP_I	swap	%r20, [%r31 + 0x0010]
brcommon1_80_349:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xa7702160  ! 1: POPC_I	popc	0x0160, %r19
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0xa7b247ca  ! 1533: PDIST	pdistn	%d40, %d10, %d50
	.word 0x8d902c11  ! 1537: WRPR_PSTATE_I	wrpr	%r0, 0x0c11, %pstate
pmu_80_351:
	nop
	nop
	setx 0xffffffbfffffffa4, %g1, %g7
	.word 0xa3800007  ! 1541: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_tick_80_353:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xe4a2502b6a376455, %r16, %r17)
	.word 0x89800011  ! 1545: WRTICK_R	wr	%r0, %r17, %tick
trapasi_80_354:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 1549: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
splash_tba_80_355:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000004003a0000, %r11, %r12
	.word 0x8b90000c  ! 1553: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_356:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_356-donret_80_356+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00bb0300 | (0x8b << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x31d, %htstate
	wrhpr %g0, 0x3d8, %hpstate  !  rand=1 (80)
	retry
donretarg_80_356:
	.word 0xa5a449d3  ! 1557: FDIVd	fdivd	%f48, %f50, %f18
pmu_80_357:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbfffffffa6, %g1, %g7
	.word 0xa3800007  ! 1561: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8d903e62  ! 1565: WRPR_PSTATE_I	wrpr	%r0, 0x1e62, %pstate
ibp_80_359:
	nop
	nop
	wrhpr %g0, 0xbdb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fda00  ! 1569: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa5703336  ! 1573: POPC_I	popc	0x1336, %r18
	brlz,a,pn	%r10, skip_80_361
	fbue,a,pn	%fcc0,  skip_80_361
.align 2048
skip_80_361:
	.word 0x39400001  ! 1577: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
cerer_80_362:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xcbfacb8a7a05fe66, %r26, %r27)
    sethi %hi(0x20008000), %r26   ! Set ITTM/DTTM
    sllx %r26, 32, %r26
    or %r26, %r27, %r27
    mov 0x10, %r26
    stxa %r27, [%r26]0x4c
	.word 0x8143e011  ! 1581: MEMBAR	membar	#LoadLoad | #Lookaside 
trapasi_80_363:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5a) 
	.word 0xd6d84b40  ! 1585: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r11
mondo_80_364:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3e8] %asi
    stxa %r12, [%r0+0x3e8] %asi
	.word 0x87802083  ! 1: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x9d948007  ! 1589: WRPR_WSTATE_R	wrpr	%r18, %r7, %wstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_80_365:
	.word 0x39400001  ! 1593: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
fpinit_80_366:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009c4  ! 1597: FDIVd	fdivd	%f0, %f4, %f4
brcommon1_80_367:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe3e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r17
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0x99b407c1  ! 1601: PDIST	pdistn	%d16, %d32, %d12
mondo_80_368:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r4, [%r0+0x3d8] %asi
    stxa %r4, [%r0+0x3d0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d94c012  ! 1605: WRPR_WSTATE_R	wrpr	%r19, %r18, %wstate
memptr_80_369:
	set user_data_start, %r31
	.word 0x8581ab1f  ! 1609: WRCCR_I	wr	%r6, 0x0b1f, %ccr
intveclr_80_370:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6468790bf61ba773, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1613: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_80_371:
	set 0x60340000, %r31
	.word 0x85843bc2  ! 1617: WRCCR_I	wr	%r16, 0x1bc2, %ccr
splash_lsu_80_372:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x6d6c829b, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x2ec84001  ! 1: BRGEZ	brgez,a,pt	%r1,<label_0x84001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 1621: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x87802020  ! 1625: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0xc19fda00  ! 1629: LDDFA_R	ldda	[%r31, %r0], %f0
trapasi_80_374:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1633: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0xd8dfd920  ! 1637: LDXA_R	ldxa	[%r31, %r0] 0xc9, %r12
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_376) + 16, 16, 16)) -> intp(1,0,12,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_376)&0xffffffff) + 24, 16, 16)) -> intp(4,0,8,,,,,1)
#else
	set 0x76b0b682, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_376:
	.word 0x9f80368d  ! 1641: SIR	sir	0x168d
	.word 0x8d802004  ! 1645: WRFPRS_I	wr	%r0, 0x0004, %fprs
	.word 0x8d802000  ! 1649: WRFPRS_I	wr	%r0, 0x0000, %fprs
mondo_80_377:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3c0] %asi
    stxa %r19, [%r0+0x3c8] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d90c012  ! 1653: WRPR_WSTATE_R	wrpr	%r3, %r18, %wstate
ibp_80_378:
	nop
	nop
	wrhpr %g0, 0xfd3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fde00  ! 1657: LDDFA_R	ldda	[%r31, %r0], %f16
intveclr_80_379:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x81a81145fb3a10e9, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1661: FBPLG	fblg
ibp_80_380:
	nop
	nop
	.word 0xdb3fe0f0  ! 1665: STDF_I	std	%f13, [0x00f0, %r31]
	.word 0xe0bfda00  ! 1669: STDA_R	stda	%r16, [%r31 + %r0] 0xd0
br_badelay2_80_382:
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	pdist %f12, %f20, %f14
	.word 0xa9b48314  ! 1673: ALIGNADDRESS	alignaddr	%r18, %r20, %r20
pmu_80_383:
	nop
	nop
	setx 0xffffffb8ffffffaa, %g1, %g7
	.word 0xa3800007  ! 1677: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_384:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_384-donret_80_384+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x003eda00 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x787, %htstate
	best_set_reg(0x5c8, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	retry
donretarg_80_384:
	.word 0x81983ef6  ! 1681: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ef6, %hpstate
mondo_80_385:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r17, [%r0+0x3d0] %asi
    stxa %r17, [%r0+0x3d0] %asi
	.word 0x87802014  ! 1: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0x9d91c00b  ! 1685: WRPR_WSTATE_R	wrpr	%r7, %r11, %wstate
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_386) + 32, 16, 16)) -> intp(1,0,30,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_386)&0xffffffff) + 48, 16, 16)) -> intp(2,0,3,,,,,1)
#else
	set 0x4420af3a, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_386:
	.word 0xa9a489c3  ! 1689: FDIVd	fdivd	%f18, %f34, %f20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_387:
	.word 0xa5b044c6  ! 1693: FCMPNE32	fcmpne32	%d32, %d6, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_388:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_388-donret_80_388), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x004b2000 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x415, %htstate
	wrhpr %g0, 0xaca, %hpstate  !  rand=1 (80)
	.word 0x0f400001  ! 1: FBPU	fbu
	ldx [%r12+%r0], %g1
	retry
donretarg_80_388:
	.word 0xa7a109cd  ! 1697: FDIVd	fdivd	%f4, %f44, %f50
trapasi_80_389:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1701: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0x8d802000  ! 1705: WRFPRS_I	wr	%r0, 0x0000, %fprs
trapasi_80_391:
	nop
	mov 0x3e0, %r1 	! (VA for ASI 0x25) 
	.word 0xe4d844a0  ! 1709: LDXA_R	ldxa	[%r1, %r0] 0x25, %r18
intveclr_80_392:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x53b3545455aa18fc, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1713: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_80_393:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xad6, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe51, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfde20  ! 1717: STDFA_R	stda	%f16, [%r0, %r31]
vahole3_80_394:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target0, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xd91fe0b0  ! 1721: LDDF_I	ldd	[%r31, 0x00b0], %f12
	.word 0x36780001  ! 1725: BPGE	<illegal instruction>
	.word 0xa1902003  ! 1729: WRPR_GL_I	wrpr	%r0, 0x0003, %-
frzptr_80_395:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 1733: BN	bn,a	<label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_397)+56, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_397)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_397:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_397:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984671c  ! 1737: WR_SET_SOFTINT_I	wr	%r17, 0x071c, %set_softint
ibp_80_398:
	nop
	nop
	.word 0xe89fc240  ! 1741: LDDA_R	ldda	[%r31, %r0] 0x12, %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_399:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_399-donret_80_399+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x004c0700 | (16 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1057, %htstate
	wrhpr %g0, 0xa9b, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_80_399:
	.word 0x95a1c9d0  ! 1745: FDIVd	fdivd	%f38, %f16, %f10
	.word 0xe19fe1a0  ! 1749: LDDFA_I	ldda	[%r31, 0x01a0], %f16
	.word 0xe6cfd000  ! 1753: LDSBA_R	ldsba	[%r31, %r0] 0x80, %r19
	.word 0xe44fe0d0  ! 1757: LDSB_I	ldsb	[%r31 + 0x00d0], %r18
splash_tba_80_401:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1761: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_80_403:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r9, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x900, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe110  ! 1765: LDD_I	ldd	[%r31 + 0x0110], %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_405:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_405-donret_80_405), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00380900 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x141e, %htstate
	best_set_reg(0x1ecb, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	done
.align 2048
donretarg_80_405:
	.word 0xa9a1c9cc  ! 1769: FDIVd	fdivd	%f38, %f12, %f20
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_406) + 40, 16, 16)) -> intp(4,0,20,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_406)&0xffffffff) + 24, 16, 16)) -> intp(4,0,10,,,,,1)
#else
	set 0x1840c981, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x91a089d4  ! 1: FDIVd	fdivd	%f2, %f20, %f8
intvec_80_406:
	.word 0x19400001  ! 1773: FBPUGE	fbuge
ibp_80_407:
	nop
	nop
	wrhpr %g0, 0x5ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd13fe120  ! 1777: STDF_I	std	%f8, [0x0120, %r31]
unsupttte_80_409:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x5c        ! D unsupported page size ..
    wrhpr %g0, 0xfd0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87ab4a51  ! 1781: FCMPd	fcmpd	%fcc<n>, %f44, %f48
brcommon3_80_411:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe7e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r19
    ba,a .+8
    jmpl %r27+0, %r27
    stxa %r13, [%r0] ASI_LSU_CONTROL
	.word 0xa9aac829  ! 1785: FMOVGE	fmovs	%fcc1, %f9, %f20
	.word 0xe1bfde00  ! 1789: STDFA_R	stda	%f16, [%r0, %r31]
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_414)+0, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_414)&0xffffffff) + 32, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_414:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_414:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9833623  ! 1793: WR_SET_SOFTINT_I	wr	%r12, 0x1623, %set_softint
brcommon3_80_416:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd5e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r10
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xd53fe0b0  ! 1797: STDF_I	std	%f10, [0x00b0, %r31]
intveclr_80_417:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x0ea99cec1d068de7, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1801: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_80_418:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xbe4e70656d839da0, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1805: FBPLG	fblg
dvapa_80_419:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf19, %r20
	mov 0x1d, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x900, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda1fe140  ! 1809: LDD_I	ldd	[%r31 + 0x0140], %r13
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_80_420:
	ta	T_CHANGE_NONPRIV	! macro
fpinit_80_421:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 1817: FCMPLE32	fcmple32	%d0, %d4, %r8
intveclr_80_422:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xc711729d32ca0b50, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xb8b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1821: FBPLG	fblg
	fblg skip_80_423
	stxa %r16, [%r0] ASI_LSU_CONTROL
	be  	 skip_80_423
	stxa %r7, [%r0] ASI_LSU_CONTROL
.align 1024
skip_80_423:
	.word 0xe43fe130  ! 1825: STD_I	std	%r18, [%r31 + 0x0130]
fpinit_80_424:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009a4  ! 1829: FDIVs	fdivs	%f0, %f4, %f6
memptr_80_425:
	set 0x60740000, %r31
	.word 0x8581e92b  ! 1833: WRCCR_I	wr	%r7, 0x092b, %ccr
brcommon3_80_426:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e1a0  ! 1: STQF_I	-	%f13, [0x01a0, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d903e4a  ! 1837: WRPR_PSTATE_I	wrpr	%r0, 0x1e4a, %pstate
splash_tba_80_427:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1841: WRPR_TBA_R	wrpr	%r0, %r12, %tba
jmptr_80_428:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1845: JMPL_R	jmpl	%r27 + %r0, %r27
ibp_80_429:
	nop
	nop
	wrhpr %g0, 0xf51, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fe1b0  ! 1849: STXFSR_I	st-sfr	%f1, [0x01b0, %r31]
	.word 0x9f803b95  ! 1853: SIR	sir	0x1b95
dvapa_80_430:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x940, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xfdb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd6bfd160  ! 1857: STDA_R	stda	%r11, [%r31 + %r0] 0x8b
trapasi_80_432:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xe4d84980  ! 1861: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_434:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_434-donret_80_434+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00033a00 | (0x82 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1acc, %htstate
	best_set_reg(0xb48, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	retry
donretarg_80_434:
	.word 0xa3a509cc  ! 1865: FDIVd	fdivd	%f20, %f12, %f48
frzptr_80_435:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xd03fe0b0  ! 1: STD_I	std	%r8, [%r31 + 0x00b0]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 1869: BN	bn,a	<label_0x1>
trapasi_80_436:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe6d84920  ! 1873: LDXA_R	ldxa	[%r1, %r0] 0x49, %r19
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa9b1c4c4  ! 1: FCMPNE32	fcmpne32	%d38, %d4, %r20
intvec_80_437:
	.word 0x9f8035b4  ! 1877: SIR	sir	0x15b4
demap_80_438:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r12, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x4ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe060  ! 1881: LDD_I	ldd	[%r31 + 0x0060], %r10
intveclr_80_439:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4b44e54af402e77b, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1885: FBPLG	fblg
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_441:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_441-donret_80_441), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x003e7900 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xdaf, %htstate
	best_set_reg(0x1609, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_441:
	.word 0x8198234e  ! 1889: WRHPR_HPSTATE_I	wrhpr	%r0, 0x034e, %hpstate
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_442)+32, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_442)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_442:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_442:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa980a31b  ! 1893: WR_SET_SOFTINT_I	wr	%r2, 0x031b, %set_softint
pmu_80_443:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb3ffffffaa, %g1, %g7
	.word 0xa3800007  ! 1897: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x9f803554  ! 1901: SIR	sir	0x1554
	.word 0x22800001  ! 1905: BE	be,a	<label_0x1>
	fbge,a,pn	%fcc0,  skip_80_444
	.word 0xa3a049c6  ! 1: FDIVd	fdivd	%f32, %f6, %f48
.align 4096
skip_80_444:
	.word 0x9f802e6d  ! 1909: SIR	sir	0x0e6d
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_446:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_446-donret_80_446+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0056d700 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x167d, %htstate
	best_set_reg(0x1200, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_80_446:
	.word 0xe06fe1b7  ! 1913: LDSTUB_I	ldstub	%r16, [%r31 + 0x01b7]
memptr_80_448:
	set 0x60140000, %r31
	.word 0x8583715c  ! 1917: WRCCR_I	wr	%r13, 0x115c, %ccr
	.word 0xe737e141  ! 1921: STQF_I	-	%f19, [0x0141, %r31]
	fbe,a,pn	%fcc0,  skip_80_449
	bn  	 skip_80_449
.align 4096
skip_80_449:
	.word 0x24cc8001  ! 1925: BRLEZ	brlez,a,pt	%r18,<label_0xc8001>
dvapa_80_450:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xfb4, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc08, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5a4c9d0  ! 1929: FDIVd	fdivd	%f50, %f16, %f18
	.word 0x91d020b4  ! 1933: Tcc_I	ta	icc_or_xcc, %r0 + 180
intveclr_80_451:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8cb7307f762a5853, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x80, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1937: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xe48fc400  ! 1941: LDUBA_R	lduba	[%r31, %r0] 0x20, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_452:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_452-donret_80_452+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00a3cd00 | (16 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x19c7, %htstate
	wrhpr %g0, 0xe49, %hpstate  !  rand=1 (80)
	retry
donretarg_80_452:
	.word 0x3f400001  ! 1945: FBPO	fbo,a,pn	%fcc0, <label_0x1>
	.word 0x9f802d9c  ! 1949: SIR	sir	0x0d9c
	.word 0x87802020  ! 1953: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0xa7b28554  ! 1957: FCMPEQ16	fcmpeq16	%d10, %d20, %r19
	.word 0x91b04594  ! 1961: FCMPGT32	fcmpgt32	%d32, %d20, %r8
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_80_453:
	.word 0xa7a149cd  ! 1965: FDIVd	fdivd	%f36, %f44, %f50
	.word 0x8d802000  ! 1969: WRFPRS_I	wr	%r0, 0x0000, %fprs
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_454) + 48, 16, 16)) -> intp(6,0,13,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_454)&0xffffffff) + 8, 16, 16)) -> intp(0,0,3,,,,,1)
#else
	set 0x29505478, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_80_454:
	.word 0x9bb084d1  ! 1973: FCMPNE32	fcmpne32	%d2, %d48, %r13
	.word 0x9f802fe4  ! 1977: SIR	sir	0x0fe4
dvapa_80_455:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd75, %r20
	mov 0xa, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x10a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1e7c2e0  ! 1981: CASA_I	casa	[%r31] 0x17, %r0, %r16
	.word 0xa3480000  ! 1985: RDHPR_HPSTATE	rdhpr	%hpstate, %r17
	.word 0x91d020b4  ! 1989: Tcc_I	ta	icc_or_xcc, %r0 + 180
	.word 0x9f8026bd  ! 1993: SIR	sir	0x06bd
splash_tba_80_456:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1997: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_80_457:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xe9f999b8, %r2
	mov 0x6, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2001: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x9f803d51  ! 2005: SIR	sir	0x1d51
dvapa_80_458:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf3e, %r20
	mov 0x1f, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x1d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfc080  ! 2009: STDA_R	stda	%r16, [%r31 + %r0] 0x04
cerer_80_459:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x5be92dc4ac329242, %r26, %r27)
    sethi %hi(0x20008000), %r26   ! Set ITTM/DTTM
    sllx %r26, 32, %r26
    or %r26, %r27, %r27
    mov 0x10, %r26
    stxa %r27, [%r26]0x4c
	wrhpr %g0, 0xe19, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2013: MEMBAR	membar	#LoadLoad | #Lookaside 
ibp_80_460:
	nop
	nop
	wrhpr %g0, 0x80a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe11fe010  ! 2017: LDDF_I	ldd	[%r31, 0x0010], %f16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_462:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_462-donret_80_462), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00fcc000 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1e8d, %htstate
	best_set_reg(0x1793, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	.word 0x2acc4001  ! 1: BRNZ	brnz,a,pt	%r17,<label_0xc4001>
	ldx [%r12+%r0], %g1
	retry
donretarg_80_462:
	.word 0x2a800001  ! 2021: BCS	bcs,a	<label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_80_463)+8, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_80_463)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x80),1,3,,,,,1)
xir_80_463:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_80_463:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98378e8  ! 2025: WR_SET_SOFTINT_I	wr	%r13, 0x18e8, %set_softint
	.word 0xe0800c60  ! 2029: LDUWA_R	lduwa	[%r0, %r0] 0x63, %r16
pmu_80_466:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa4, %g1, %g7
	.word 0xa3800007  ! 2033: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_80_467:
	set 0x60540000, %r31
	.word 0x85842bb7  ! 2037: WRCCR_I	wr	%r16, 0x0bb7, %ccr
splash_hpstate_80_468:
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	.word 0x81983b9d  ! 2041: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1b9d, %hpstate
ibp_80_469:
	nop
	nop
	.word 0xd6dfc2c0  ! 2045: LDXA_R	ldxa	[%r31, %r0] 0x16, %r11
	.word 0xa3508000  ! 2049: RDPR_TSTATE	rdpr	%tstate, %r17
brcommon3_80_470:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e1c0  ! 1: STQF_I	-	%f13, [0x01c0, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 2053: BN	bn,a	<label_0x1>
tglhtw_80_471:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x69a, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x95b14991  ! 2057: BSHUFFLE	fmovc32	%d36, %d48, %d10
fpinit_80_472:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8db00484  ! 2061: FCMPLE32	fcmple32	%d0, %d4, %r6
mondo_80_473:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r17, [%r0+0x3c8] %asi
    stxa %r10, [%r0+0x3e0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d904013  ! 2065: WRPR_WSTATE_R	wrpr	%r1, %r19, %wstate
	.word 0xa2ac4014  ! 2069: ANDNcc_R	andncc 	%r17, %r20, %r17
mondo_80_475:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r11, [%r0+0x3e0] %asi
    stxa %r18, [%r0+0x3c0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d94000d  ! 2073: WRPR_WSTATE_R	wrpr	%r16, %r13, %wstate
dvapa_80_477:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb46, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x481, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fdc00  ! 2077: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x8780201c  ! 2081: WRASI_I	wr	%r0, 0x001c, %asi
dvapa_80_478:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe04, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x298, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd9e7d140  ! 2085: CASA_I	casa	[%r31] 0x8a, %r0, %r12
ibp_80_479:
	nop
	nop
	.word 0x9bb487d1  ! 2089: PDIST	pdistn	%d18, %d48, %d44
	brz,pn  	%r19, skip_80_480
	stxa %r10, [%r0] ASI_LSU_CONTROL
	fbug skip_80_480
	stxa %r7, [%r0] ASI_LSU_CONTROL
.align 2048
skip_80_480:
	.word 0xc32fc000  ! 2093: STXFSR_R	st-sfr	%f1, [%r0, %r31]
demap_80_481:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x08800001  ! 1: BLEU	bleu  	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x800, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe0f8  ! 2097: LDD_I	ldd	[%r31 + 0x00f8], %r11
	.word 0xa1b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r16
	.word 0xe03fe1c0  ! 1: STD_I	std	%r16, [%r31 + 0x01c0]
	mov 0xb2, %r30
	.word 0x91d0001e  ! 2101: Tcc_R	ta	icc_or_xcc, %r0 + %r30
splash_lsu_80_482:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x8a7b7cfd, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2105: FBPULE	fbule
splash_cmpr_80_483:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2109: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x904c0008  ! 2113: MULX_R	mulx 	%r16, %r8, %r8
cmp_80_484:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_484:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_484
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_484:
    brnz,a %r10, cmp_wait80_484
    ld [%r23], %r10
    ba cmp_startwait80_484
    mov 0x80, %r10
continue_cmp_80_484:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_484
    mov 0xa8, %r17
    best_set_reg(0xeb10ea2450e7780f, %r16, %r17)
cmp_multi_core_80_484:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x60]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	.word 0x91948012  ! 2117: WRPR_PIL_R	wrpr	%r18, %r18, %pil
	.word 0xdb97d100  ! 2121: LDQFA_R	-	[%r31, %r0], %f13
memptr_80_485:
	set 0x60340000, %r31
	.word 0x858161c2  ! 2125: WRCCR_I	wr	%r5, 0x01c2, %ccr
splash_lsu_80_487:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xa7f5dc54, %r2
	mov 0x3, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2129: FBPULE	fbule
tglhtw_80_488:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x10b, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa3b4c994  ! 2133: BSHUFFLE	fmovc32	%d50, %d20, %d48
	.word 0x9f803efd  ! 2137: SIR	sir	0x1efd
	.word 0x9b520000  ! 2141: RDPR_PIL	rdpr	%pil, %r13
	.word 0xe1bfe180  ! 2145: STDFA_I	stda	%f16, [0x0180, %r31]
splash_cmpr_80_489:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 2149: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe127e0b4  ! 2153: STF_I	st	%f16, [0x00b4, %r31]
splash_cmpr_80_490:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2157: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
vahole6_80_491:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe63fe0d0  ! 2161: STD_I	std	%r19, [%r31 + 0x00d0]
splash_hpstate_80_492:
	.word 0x81983d8d  ! 2165: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1d8d, %hpstate
cwp_80_493:
    set user_data_start, %o7
	.word 0x93902000  ! 2169: WRPR_CWP_I	wrpr	%r0, 0x0000, %cwp
	.word 0xe4bfc200  ! 2173: STDA_R	stda	%r18, [%r31 + %r0] 0x10
splash_tba_80_496:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000000380000, %r11, %r12
	.word 0x8b90000c  ! 2177: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_tick_80_497:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x43ad248720c11d49, %r16, %r17)
	.word 0x89800011  ! 2181: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0800a80  ! 2185: LDUWA_R	lduwa	[%r0, %r0] 0x54, %r8
splash_lsu_80_499:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x426d78cc, %r2
	mov 0x6, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 2189: FBPULE	fbule
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_500:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_500-donret_80_500), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x001c7c00 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xe5d, %htstate
	best_set_reg(0x169a, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	retry
donretarg_80_500:
	.word 0xdaffc400  ! 2193: SWAPA_R	swapa	%r13, [%r31 + %r0] 0x20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa3a249d3  ! 1: FDIVd	fdivd	%f40, %f50, %f48
intvec_80_501:
	.word 0x93b184c4  ! 2197: FCMPNE32	fcmpne32	%d6, %d4, %r9
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_502:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_502-donret_80_502), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00729f00 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1c1e, %htstate
	wrhpr %g0, 0x382, %hpstate  !  rand=1 (80)
	retry
.align 2048
donretarg_80_502:
	.word 0x8d902a4f  ! 2201: WRPR_PSTATE_I	wrpr	%r0, 0x0a4f, %pstate
splash_tick_80_503:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0x3abfaa25a2824118, %r16, %r17)
	.word 0x89800011  ! 2205: WRTICK_R	wr	%r0, %r17, %tick
memptr_80_504:
	set user_data_start, %r31
	.word 0x85812810  ! 2209: WRCCR_I	wr	%r4, 0x0810, %ccr
frzptr_80_505:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xc1bfc2c0  ! 2213: STDFA_R	stda	%f0, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_507:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_507-donret_80_507), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00327c00 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd07, %htstate
	wrhpr %g0, 0xd1, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_80_507:
	.word 0x81983e0f  ! 2217: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1e0f, %hpstate
ibp_80_508:
	nop
	nop
	wrhpr %g0, 0x988, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x97a489cb  ! 2221: FDIVd	fdivd	%f18, %f42, %f42
intveclr_80_509:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7c25f39ce030b7d3, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2225: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_80_510:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2229: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0xb1824012  ! 2233: WR_STICK_REG_R	wr	%r9, %r18, %-
memptr_80_511:
	set 0x60340000, %r31
	.word 0x85853167  ! 2237: WRCCR_I	wr	%r20, 0x1167, %ccr
	.word 0x81b01021  ! 2241: SIAM	siam	1
cmp_80_512:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_512:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_512
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_512:
    brnz,a %r10, cmp_wait80_512
    ld [%r23], %r10
    ba cmp_startwait80_512
    mov 0x80, %r10
continue_cmp_80_512:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_512
    mov 0xff, %r17
    best_set_reg(0xd872a47776b3c217, %r16, %r17)
cmp_multi_core_80_512:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x60]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	wrhpr %g0, 0xc80, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91948013  ! 2245: WRPR_PIL_R	wrpr	%r18, %r19, %pil
splash_lsu_80_513:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x746c3288, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x1d400001  ! 1: FBPULE	fbule
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 2249: FBPULE	fbule
	.word 0xe19fe0a0  ! 2253: LDDFA_I	ldda	[%r31, 0x00a0], %f16
trapasi_80_514:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 2257: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_80_515:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xe5d9052c, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x24800001  ! 1: BLE	ble,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2261: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x87802010  ! 2265: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0xe84fe070  ! 2269: LDSB_I	ldsb	[%r31 + 0x0070], %r20
pmu_80_517:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa3, %g1, %g7
	.word 0xa3800007  ! 2273: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe88008a0  ! 2277: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0xc32fc000  ! 2281: STXFSR_R	st-sfr	%f1, [%r0, %r31]
splash_cmpr_80_518:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2285: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	bpos  	 skip_80_519
	fbuge,a,pn	%fcc0,  skip_80_519
.align 2048
skip_80_519:
	.word 0xc36d34e2  ! 2289: PREFETCH_I	prefetch	[%r20 + 0xfffff4e2], #one_read
demap_80_520:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r18, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xe50, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe0f8  ! 2293: LDD_I	ldd	[%r31 + 0x00f8], %r18
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_522) + 24, 16, 16)) -> intp(1,0,4,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_522)&0xffffffff) + 8, 16, 16)) -> intp(1,0,26,,,,,1)
#else
	set 0xec70ddf3, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_522:
	.word 0x9f8027f7  ! 2297: SIR	sir	0x07f7
dvapa_80_523:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa66, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa81, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fde00  ! 2301: LDDA_R	ldda	[%r31, %r0] 0xf0, %r0
	.word 0x9f80231b  ! 2305: SIR	sir	0x031b
br_longdelay3_80_525:
	nop
	not %g0, %r27
	jmpl %r27+0, %r27
	.word 0x9f802494  ! 2309: SIR	sir	0x0494
	.word 0xc36fe170  ! 2313: PREFETCH_I	prefetch	[%r31 + 0x0170], #one_read
pmu_80_526:
	nop
	nop
	setx 0xffffffb1ffffffa0, %g1, %g7
	.word 0xa3800007  ! 2317: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa1902004  ! 2321: WRPR_GL_I	wrpr	%r0, 0x0004, %-
memptr_80_527:
	set 0x60340000, %r31
	.word 0x85813f8e  ! 2325: WRCCR_I	wr	%r4, 0x1f8e, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_528) + 48, 16, 16)) -> intp(0,0,5,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_528)&0xffffffff) + 48, 16, 16)) -> intp(3,0,2,,,,,1)
#else
	set 0xd2d0e3bf, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0xa7b044d4  ! 1: FCMPNE32	fcmpne32	%d32, %d20, %r19
intvec_80_528:
	.word 0x9f802c1d  ! 2329: SIR	sir	0x0c1d
trapasi_80_529:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe6d84940  ! 2333: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r19
demap_80_530:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x0ecc8001  ! 1: BRGEZ	brgez,pt  	%r18,<label_0xc8001>
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x41a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe194  ! 2337: LDD_I	ldd	[%r31 + 0x0194], %r20
splash_htba_80_531:
	nop
	ta T_CHANGE_HPRIV
	setx 0x0000000200280000, %r11, %r12
	.word 0x8b98000c  ! 2341: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa8c36614  ! 2345: ADDCcc_I	addccc 	%r13, 0x0614, %r20
	.word 0x95b447c9  ! 2349: PDIST	pdistn	%d48, %d40, %d10
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_533:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_533-donret_80_533), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0034c600 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x17c5, %htstate
	best_set_reg(0x4f9, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_533:
	.word 0x81983c1d  ! 2353: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1c1d, %hpstate
ibp_80_534:
	nop
	nop
	.word 0xe1bfde20  ! 2357: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9750c000  ! 2361: RDPR_TT	rdpr	%tt, %r11
mondo_80_535:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r3, [%r0+0x3e0] %asi
    stxa %r8, [%r0+0x3c0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d950014  ! 2365: WRPR_WSTATE_R	wrpr	%r20, %r20, %wstate
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_80_536:
	ta	T_CHANGE_NONPRIV	! macro
memptr_80_537:
	set user_data_start, %r31
	.word 0x858534dd  ! 2373: WRCCR_I	wr	%r20, 0x14dd, %ccr
	.word 0xda0fc000  ! 2377: LDUB_R	ldub	[%r31 + %r0], %r13
demap_80_539:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r17, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x492, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe03b  ! 2381: LDD_I	ldd	[%r31 + 0x003b], %r18
	.word 0xd2c7d140  ! 2385: LDSWA_R	ldswa	[%r31, %r0] 0x8a, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_540) + 56, 16, 16)) -> intp(5,0,24,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_540)&0xffffffff) + 24, 16, 16)) -> intp(2,0,15,,,,,1)
#else
	set 0x1f0f27f, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_540:
	.word 0x97a289c7  ! 2389: FDIVd	fdivd	%f10, %f38, %f42
	.word 0xe0800aa0  ! 2393: LDUWA_R	lduwa	[%r0, %r0] 0x55, %r16
jmptr_80_541:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 2397: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_80_542:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffae, %g1, %g7
	.word 0xa3800007  ! 2401: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x30800001  ! 1: BA	ba,a	<label_0x1>
	.word 0x8d9033a4  ! 2405: WRPR_PSTATE_I	wrpr	%r0, 0x13a4, %pstate
vahole6_80_545:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe53fe090  ! 2409: STDF_I	std	%f18, [0x0090, %r31]
splash_cmpr_80_547:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2413: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_548:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_548-donret_80_548+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f69600 | (0x8b << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xdcf, %htstate
	wrhpr %g0, 0x343, %hpstate  !  rand=1 (80)
	retry
donretarg_80_548:
	.word 0xa1a249d2  ! 2417: FDIVd	fdivd	%f40, %f18, %f16
trapasi_80_549:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4c) 
	.word 0xd6d84980  ! 2421: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r11
	.word 0x9f802e06  ! 2425: SIR	sir	0x0e06
	.word 0x91480000  ! 2429: RDHPR_HPSTATE	rdhpr	%hpstate, %r8
	.word 0xe8d7c400  ! 2433: LDSHA_R	ldsha	[%r31, %r0] 0x20, %r20
mondo_80_550:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r17, [%r0+0x3e0] %asi
    stxa %r19, [%r0+0x3c0] %asi
	.word 0x8780208a  ! 1: WRASI_I	wr	%r0, 0x008a, %asi
	.word 0x9d934003  ! 2437: WRPR_WSTATE_R	wrpr	%r13, %r3, %wstate
splash_hpstate_80_551:
	ta T_CHANGE_NONHPRIV
	.word 0x14800001  ! 1: BG	bg  	<label_0x1>
	.word 0x819824fd  ! 2441: WRHPR_HPSTATE_I	wrhpr	%r0, 0x04fd, %hpstate
	.word 0xe2800ae0  ! 2445: LDUWA_R	lduwa	[%r0, %r0] 0x57, %r17
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_80_552) + 16, 16, 16)) -> intp(1,0,26,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_80_552)&0xffffffff) + 32, 16, 16)) -> intp(3,0,13,,,,,1)
#else
	set 0xf160ed63, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_80_552:
	.word 0x97b344d4  ! 2449: FCMPNE32	fcmpne32	%d44, %d20, %r11
intveclr_80_553:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x42227c9b2769cf58, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2453: FBPLG	fblg
jmptr_80_554:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2457: JMPL_R	jmpl	%r27 + %r0, %r27
intveclr_80_555:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5672d5ab94d6518f, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2461: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xa553c000  ! 2465: RDPR_FQ	<illegal instruction>
	.word 0xd61fc000  ! 2469: LDD_R	ldd	[%r31 + %r0], %r11
intveclr_80_556:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x555317907e90bfbc, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2473: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xd03fc000  ! 2477: STD_R	std	%r8, [%r31 + %r0]
dvapa_80_557:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd20, %r20
	mov 0x1f, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf0a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5a489c9  ! 2481: FDIVd	fdivd	%f18, %f40, %f18
splash_tba_80_558:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2485: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_80_559:
	set 0x60540000, %r31
	.word 0x8584bd48  ! 2489: WRCCR_I	wr	%r18, 0x1d48, %ccr
vahole2_80_560:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xc1bfc3e0  ! 2493: STDFA_R	stda	%f0, [%r0, %r31]
dvapa_80_561:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc91, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x493, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfde00  ! 2497: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_562:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_562-donret_80_562+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0019df00 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x4d7, %htstate
	wrhpr %g0, 0xcc3, %hpstate  !  rand=1 (80)
	retry
.align 2048
donretarg_80_562:
	.word 0xe66fe0b3  ! 2501: LDSTUB_I	ldstub	%r19, [%r31 + 0x00b3]
	.word 0xc1bfe120  ! 2505: STDFA_I	stda	%f0, [0x0120, %r31]
cmp_80_563:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_563:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_563
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_563:
    brnz,a %r10, cmp_wait80_563
    ld [%r23], %r10
    ba cmp_startwait80_563
    mov 0x80, %r10
continue_cmp_80_563:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_563
    mov 0xb0, %r17
    best_set_reg(0xa2d95bc1007cb8f6, %r16, %r17)
cmp_multi_core_80_563:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	.word 0xe6bfc3c0  ! 2509: STDA_R	stda	%r19, [%r31 + %r0] 0x1e
br_badelay3_80_564:
	.word 0x22800001  ! 1: BE	be,a	<label_0x1>
	.word 0xc95f9c5a	! Random illegal ?
	.word 0xe1108013  ! 1: LDQF_R	-	[%r2, %r19], %f16
	.word 0x95a50824  ! 2513: FADDs	fadds	%f20, %f4, %f10
vahole5_80_566:
    nop
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xa1b40326  ! 2517: BMASK	bmask	%r16, %r6, %r16
frzptr_80_567:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xa3702040  ! 1: POPC_I	popc	0x0040, %r17
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2521: BN	bn,a	<label_0x1>
memptr_80_568:
	set 0x60140000, %r31
	.word 0x8580eb9f  ! 2525: WRCCR_I	wr	%r3, 0x0b9f, %ccr
dvapa_80_569:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc01, %r20
	mov 0x3, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x719, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fda00  ! 2529: LDDA_R	ldda	[%r31, %r0] 0xd0, %r0
splash_cmpr_80_571:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 2533: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x8d903e35  ! 2537: WRPR_PSTATE_I	wrpr	%r0, 0x1e35, %pstate
	.word 0xc09fdf00  ! 2541: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
dvapa_80_574:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf18, %r20
	mov 0x10, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa93, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f803dc2  ! 2545: SIR	sir	0x1dc2
mondo_80_575:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r13, [%r0+0x3d0] %asi
    stxa %r12, [%r0+0x3c8] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d940005  ! 2549: WRPR_WSTATE_R	wrpr	%r16, %r5, %wstate
demap_80_576:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r13, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x7d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe0b9  ! 2553: LDD_I	ldd	[%r31 + 0x00b9], %r9
intveclr_80_577:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xbeca06b3d0e99652, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x240, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2557: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_tick_80_578:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xc7bf34235ed3945d, %r16, %r17)
	.word 0x89800011  ! 2561: WRTICK_R	wr	%r0, %r17, %tick
cmp_80_580:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_580:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_580
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_580:
    brnz,a %r10, cmp_wait80_580
    ld [%r23], %r10
    ba cmp_startwait80_580
    mov 0x80, %r10
continue_cmp_80_580:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_580
    mov 38, %r17
    best_set_reg(0xc85bf24115001ff3, %r16, %r17)
cmp_multi_core_80_580:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x60]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	wrhpr %g0, 0x8d8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f802140  ! 2565: SIR	sir	0x0140
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_581:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_581-donret_80_581+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00fbcb00 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc9c, %htstate
	best_set_reg(0x15a1, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	.word 0x17400001  ! 1: FBPGE	fbge
	done
.align 2048
donretarg_80_581:
	.word 0x8d902697  ! 2569: WRPR_PSTATE_I	wrpr	%r0, 0x0697, %pstate
memptr_80_582:
	set user_data_start, %r31
	.word 0x8582fba4  ! 2573: WRCCR_I	wr	%r11, 0x1ba4, %ccr
splash_tba_80_583:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2577: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_80_584:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r6, [%r0+0x3d0] %asi
    stxa %r9, [%r0+0x3d0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d924014  ! 2581: WRPR_WSTATE_R	wrpr	%r9, %r20, %wstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_585:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_585-donret_80_585+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0025db00 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd87, %htstate
	wrhpr %g0, 0x51, %hpstate  !  rand=1 (80)
	ldx [%r11+%r0], %g1
	done
donretarg_80_585:
	.word 0x97a249c6  ! 2585: FDIVd	fdivd	%f40, %f6, %f42
    set 0x4d5, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x99b347d3  ! 2589: PDIST	pdistn	%d44, %d50, %d12
frzptr_80_586:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x24cfc001  ! 1: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2593: BN	bn,a	<label_0x1>
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	.word 0xe097c200  ! 1: LDUHA_R	lduha	[%r31, %r0] 0x10, %r16
	mov 0xb5, %r30
	.word 0x91d0001e  ! 2597: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x81580000  ! 2601: FLUSHW	flushw
fpinit_80_588:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009c4  ! 2605: FDIVd	fdivd	%f0, %f4, %f6
	.word 0x87802089  ! 2609: WRASI_I	wr	%r0, 0x0089, %asi
splash_cmpr_80_590:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2613: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe88008a0  ! 2617: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
dvapa_80_591:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x886, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x8c3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd23fe090  ! 2621: STD_I	std	%r9, [%r31 + 0x0090]
trapasi_80_592:
	nop
	mov 0x18, %r1 	! (VA for ASI 0x4c) 
	.word 0xe6d84980  ! 2625: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r19
mondo_80_593:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r3, [%r0+0x3e8] %asi
    stxa %r9, [%r0+0x3e0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d918013  ! 2629: WRPR_WSTATE_R	wrpr	%r6, %r19, %wstate
splash_cmpr_80_594:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2633: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xa2d20014  ! 2637: UMULcc_R	umulcc 	%r8, %r20, %r17
ticken_80_595:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    stxa %g0, [0x38]%asi
    best_set_reg(0x682a22d2f77eefd1, %r16, %r17)
    wrpr %g0, %r17, %tick
    mov 1, %r16
    stxa %r16, [0x38]%asi
    wr %g0, %r12, %asi
	.word 0x95b0c0f0  ! 2641: EDGE16LN	edge16ln	%r3, %r16, %r10
ibp_80_596:
	nop
	nop
	.word 0xc19fc2c0  ! 2645: LDDFA_R	ldda	[%r31, %r0], %f0
jmptr_80_598:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 2649: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_80_599:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 2653: BN	bn,a	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_600:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_600-donret_80_600+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00680200 | (16 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x11c, %htstate
	best_set_reg(0x173a, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_80_600:
	.word 0xda6fe086  ! 2657: LDSTUB_I	ldstub	%r13, [%r31 + 0x0086]
demap_80_601:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r20, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x450, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe115  ! 2661: LDD_I	ldd	[%r31 + 0x0115], %r8
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_80_602:
	ta	T_CHANGE_NONPRIV	! macro
demap_80_603:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r6, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x790, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe19f  ! 2669: LDD_I	ldd	[%r31 + 0x019f], %r18
	.word 0xc1bfe100  ! 2673: STDFA_I	stda	%f0, [0x0100, %r31]
	.word 0x8d802000  ! 2677: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x9f803fca  ! 2681: SIR	sir	0x1fca
br_badelay1_80_604:
	.word 0xd43fe110  ! 1: STD_I	std	%r10, [%r31 + 0x0110]
	.word 0xd934acc9  ! 1: STQF_I	-	%f12, [0x0cc9, %r18]
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	normalw
	.word 0x91458000  ! 2685: RD_SOFTINT_REG	rd	%softint, %r8
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_80_606:
	ta	T_CHANGE_NONPRIV	! macro
	.word 0x8d802004  ! 2693: WRFPRS_I	wr	%r0, 0x0004, %fprs
frzptr_80_607:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x97b7c4c0  ! 1: FCMPNE32	fcmpne32	%d62, %d0, %r11
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2697: BN	bn,a	<label_0x1>
intveclr_80_608:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd517e2824caa9bb4, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x1d8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2701: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	fbule skip_80_609
	fbl,a,pn	%fcc0,  skip_80_609
.align 2048
skip_80_609:
	.word 0x39400001  ! 2705: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
pmu_80_610:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffae, %g1, %g7
	.word 0xa3800007  ! 2709: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_lsu_80_612:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xde0b492d, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x0d400001  ! 1: FBPG	fbg
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2713: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
pmu_80_613:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa1, %g1, %g7
	.word 0xa3800007  ! 2717: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_80_614:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc19, %r20
	mov 0xe, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc59, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd81fe170  ! 2721: LDD_I	ldd	[%r31 + 0x0170], %r12
	.word 0x81580000  ! 2725: FLUSHW	flushw
jmptr_80_616:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2729: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_80_617:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb9ffffffa6, %g1, %g7
	.word 0xa3800007  ! 2733: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_hpstate_80_618:
	ta T_CHANGE_NONHPRIV
	.word 0x1f400001  ! 1: FBPO	fbo
	.word 0x81983644  ! 2737: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1644, %hpstate
	.word 0x93d02034  ! 2741: Tcc_I	tne	icc_or_xcc, %r0 + 52
splash_cmpr_80_619:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2745: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xa9a449c5  ! 2749: FDIVd	fdivd	%f48, %f36, %f20
ibp_80_621:
	nop
	nop
	.word 0x9ba109c9  ! 2753: FDIVd	fdivd	%f4, %f40, %f44
memptr_80_622:
	set 0x60340000, %r31
	.word 0x858475e9  ! 2757: WRCCR_I	wr	%r17, 0x15e9, %ccr
	.word 0xa1902001  ! 2761: WRPR_GL_I	wrpr	%r0, 0x0001, %-
ticken_80_623:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    stxa %g0, [0x38]%asi
    best_set_reg(0x6898593350a7860e, %r16, %r17)
    wrpr %g0, %r17, %tick
    mov 1, %r16
    stxa %r16, [0x38]%asi
    wr %g0, %r12, %asi
	.word 0xa7b040e4  ! 2765: EDGE16LN	edge16ln	%r1, %r4, %r19
	.word 0x87802010  ! 2769: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	mov 0x35, %r30
	.word 0x91d0001e  ! 2773: Tcc_R	ta	icc_or_xcc, %r0 + %r30
trapasi_80_624:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xd4d84e40  ! 2777: LDXA_R	ldxa	[%r1, %r0] 0x72, %r10
	.word 0xe0cfdc40  ! 2781: LDSBA_R	ldsba	[%r31, %r0] 0xe2, %r16
fpinit_80_625:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009a4  ! 2785: FDIVs	fdivs	%f0, %f4, %f8
	.word 0xe4cfc380  ! 2789: LDSBA_R	ldsba	[%r31, %r0] 0x1c, %r18
	.word 0xe28fc400  ! 2793: LDUBA_R	lduba	[%r31, %r0] 0x20, %r17
splash_tick_80_626:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xe1d7b48e65b4963f, %r16, %r17)
	.word 0x89800011  ! 2797: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xc19fde20  ! 2801: LDDFA_R	ldda	[%r31, %r0], %f0
fpinit_80_627:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 2805: FCMPLE32	fcmple32	%d0, %d4, %r8
splash_tick_80_628:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xbd4844eac252d08f, %r16, %r17)
	.word 0x89800011  ! 2809: WRTICK_R	wr	%r0, %r17, %tick
tagged_80_630:
	tsubcctv %r8, 0x1b9f, %r12
	.word 0xd607e004  ! 2813: LDUW_I	lduw	[%r31 + 0x0004], %r11
	.word 0xa9a10d32  ! 2817: FsMULd	fsmuld	%f4, %f18, %f20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_632:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_632-donret_80_632), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00126a00 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1c81, %htstate
	best_set_reg(0x16f0, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (80)
	ldx [%r12+%r0], %g1
	retry
donretarg_80_632:
	.word 0x1e800001  ! 2821: BVC	bvc  	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_80_633:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_80_633-donret_80_633+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00aa4000 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x170d, %htstate
	wrhpr %g0, 0x10, %hpstate  !  rand=1 (80)
	done
donretarg_80_633:
	.word 0xe0ffc400  ! 2825: SWAPA_R	swapa	%r16, [%r31 + %r0] 0x20
	.word 0xe6bfc400  ! 2829: STDA_R	stda	%r19, [%r31 + %r0] 0x20
	.word 0xd89fc080  ! 1: LDDA_R	ldda	[%r31, %r0] 0x04, %r12
	.word 0xd9e7d100  ! 1: CASA_I	casa	[%r31] 0x88, %r0, %r12
	mov 0xb3, %r30
	.word 0x93d0001e  ! 2833: Tcc_R	tne	icc_or_xcc, %r0 + %r30
mondo_80_634:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r3, [%r0+0x3e0] %asi
    stxa %r19, [%r0+0x3d0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d928011  ! 2837: WRPR_WSTATE_R	wrpr	%r10, %r17, %wstate
pmu_80_635:
	nop
	nop
	setx 0xffffffbcffffffab, %g1, %g7
	.word 0xa3800007  ! 2841: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
trapasi_80_636:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5a) 
	.word 0xdad84b40  ! 2845: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r13
	.word 0xe2800be0  ! 2849: LDUWA_R	lduwa	[%r0, %r0] 0x5f, %r17
trapasi_80_637:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x48) 
	.word 0xe4d84900  ! 2853: LDXA_R	ldxa	[%r1, %r0] 0x48, %r18
	.word 0xa8d08008  ! 2857: UMULcc_R	umulcc 	%r2, %r8, %r20
br_longdelay2_80_639:
	.word 0x2c800001  ! 1: BNEG	bneg,a	<label_0x1>
	.word 0x39400001  ! 2861: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
mondo_80_641:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3c0] %asi
    stxa %r5, [%r0+0x3c0] %asi
	.word 0x87802088  ! 1: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0x9d948014  ! 2865: WRPR_WSTATE_R	wrpr	%r18, %r20, %wstate
frzptr_80_642:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x20800001  ! 2869: BN	bn,a	<label_0x1>
cmp_80_643:
	nop
	nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    xor %r9, 0x80, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0, %r8
    mov 0xff, %r9                   
    xor %r9, 0x80, %r9         ! My core mask
#endif
    mov 0x80, %r10
cmp_startwait80_643:
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmp_80_643
    ldxa [0x50]%asi, %r13       !Running_rw
    ld [%r23], %r10
cmp_wait80_643:
    brnz,a %r10, cmp_wait80_643
    ld [%r23], %r10
    ba cmp_startwait80_643
    mov 0x80, %r10
continue_cmp_80_643:
    ldxa [0x58]%asi, %r14       !Running_status
    xnor %r14, %r13, %r14       !Bits equal
    brz,a %r8, cmp_multi_core_80_643
    mov 0xb2, %r17
    best_set_reg(0x88249e6d9e128536, %r16, %r17)
cmp_multi_core_80_643:
    and %r14, %r17, %r14        !Apply set/clear mask to bits equal
    and %r14, %r9, %r14         !Apply core-mask
	stxa %r14, [0x68]%asi
	st %g0, [%r23]	!clear lock
	wr %g0, %r12, %asi
	.word 0xd4bfc180  ! 2873: STDA_R	stda	%r10, [%r31 + %r0] 0x0c
frzptr_80_645:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xda6fe1a0  ! 1: LDSTUB_I	ldstub	%r13, [%r31 + 0x01a0]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe1bfc3e0  ! 2877: STDFA_R	stda	%f16, [%r0, %r31]
change_to_randtl_80_646:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_80_646:
	.word 0x8f902002  ! 2881: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
frzptr_80_647:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xc32fe1f0  ! 1: STXFSR_I	st-sfr	%f1, [0x01f0, %r31]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2885: BN	bn,a	<label_0x1>
splash_lsu_80_648:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x6eeb300e, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2889: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
memptr_80_649:
	set 0x60540000, %r31
	.word 0x858522c6  ! 2893: WRCCR_I	wr	%r20, 0x02c6, %ccr
intveclr_80_650:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x3ef488c51a7acd55, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2897: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_80_652:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r13, [%r0+0x3e0] %asi
    stxa %r19, [%r0+0x3c0] %asi
	.word 0x87802080  ! 1: WRASI_I	wr	%r0, 0x0080, %asi
	.word 0x9d904001  ! 2901: WRPR_WSTATE_R	wrpr	%r1, %r1, %wstate
memptr_80_653:
	set 0x60140000, %r31
	.word 0x8581fa95  ! 2905: WRCCR_I	wr	%r7, 0x1a95, %ccr
intveclr_80_654:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x1c0cf055e1b39da8, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xe53, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2909: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_80_656:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3d0] %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x87802030  ! 1: WRASI_I	wr	%r0, 0x0030, %asi
	.word 0x9d950006  ! 2913: WRPR_WSTATE_R	wrpr	%r20, %r6, %wstate
	.word 0xe0bfc400  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x20
	.word 0xc36fe0d0  ! 1: PREFETCH_I	prefetch	[%r31 + 0x00d0], #one_read
	mov 0xb3, %r30
	.word 0x91d0001e  ! 2917: Tcc_R	ta	icc_or_xcc, %r0 + %r30
intveclr_80_657:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x31c776b1a36c0b30, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2921: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
tagged_80_658:
	tsubcctv %r0, 0x1301, %r17
	.word 0xe207e0bb  ! 2925: LDUW_I	lduw	[%r31 + 0x00bb], %r17
splash_lsu_80_659:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xc762a5eb, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x2c800001  ! 1: BNEG	bneg,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2929: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8d802000  ! 2933: WRFPRS_I	wr	%r0, 0x0000, %fprs
ibp_80_661:
	nop
	nop
	.word 0xc3efe1f0  ! 2937: PREFETCHA_I	prefetcha	[%r31, + 0x01f0] %asi, #one_read
	.word 0xe68008a0  ! 2941: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
frzptr_80_663:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xe1bfc3e0  ! 2945: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xd41fc000  ! 2949: LDD_R	ldd	[%r31 + %r0], %r10
	fbe skip_80_665
	brlz,a,pt	%r11, skip_80_665
.align 4096
skip_80_665:
	.word 0x95a4c9cc  ! 2953: FDIVd	fdivd	%f50, %f12, %f10
cwp_80_666:
    set user_data_start, %o7
	.word 0x93902002  ! 2957: WRPR_CWP_I	wrpr	%r0, 0x0002, %cwp
splash_tba_80_667:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2961: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_80_669:
	set user_data_start, %r31
	.word 0x85847364  ! 2965: WRCCR_I	wr	%r17, 0x1364, %ccr
cerer_80_670:
    nop
    nop
    ta T_CHANGE_HPRIV
    best_set_reg(0xb25a733b228e926b, %r26, %r27)
    sethi %hi(0x20008000), %r26   ! Set ITTM/DTTM
    sllx %r26, 32, %r26
    or %r26, %r27, %r27
    mov 0x10, %r26
    stxa %r27, [%r26]0x4c
	wrhpr %g0, 0xf12, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2969: MEMBAR	membar	#LoadLoad | #Lookaside 
mondo_80_671:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r6, [%r0+0x3c8] %asi
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d91c003  ! 2973: WRPR_WSTATE_R	wrpr	%r7, %r3, %wstate
splash_cmpr_80_672:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 2977: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
intveclr_80_673:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x83ab70a28ec6c542, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x311, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2981: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x8d903ee1  ! 2985: WRPR_PSTATE_I	wrpr	%r0, 0x1ee1, %pstate
	.word 0xd2800b00  ! 2989: LDUWA_R	lduwa	[%r0, %r0] 0x58, %r9
	.word 0xe8800aa0  ! 2993: LDUWA_R	lduwa	[%r0, %r0] 0x55, %r20
	.word 0x9f802832  ! 2997: SIR	sir	0x0832
cmpenall_80_675:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
    mov 0xff, %r9
    sllx %r9, %r8, %r9              ! My core mask
#else
    mov 0xff, %r9                   ! My core mask
#endif
cmpenall_startwait80_675:
    mov 0x80, %r10
    cas [%r23],%g0,%r10         !lock
    brz,a %r10, continue_cmpenall_80_675
    nop
cmpenall_wait80_675:
    ld [%r23], %r10
    brnz %r10, cmpenall_wait80_675
    nop
    ba,a cmpenall_startwait80_675
continue_cmpenall_80_675:
    ldxa [0x58]%asi, %r14       !Running_status
wait_for_cmpstat_80_675:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r14
    bne,a %xcc, wait_for_cmpstat_80_675
    ldxa [0x58]%asi, %r14       !Running_status
    ldxa [0x10]%asi, %r14       !Get enabled threads
    and %r14, %r9, %r14         !My core mask
    stxa %r14, [0x60]%asi       !W1S
    ldxa [0x58]%asi, %r16       !Running_status
wait_for_cmpstat2_80_675:
    and %r16, %r9, %r16         !My core mask
    cmp %r14, %r16
    bne,a %xcc, wait_for_cmpstat2_80_675
    ldxa [0x58]%asi, %r16       !Running_status
    st %g0, [%r23]              !clear lock
#if  (MULTIPASS > 0)
multipass_check_mt:
    rd %asi, %r12
    wr %g0, ASI_SCRATCHPAD, %asi
    ldxa [0x38]%asi, %r10
    cmp  %r10, MULTIPASS
    inc %r10
    stxa %r10, [0x38]%asi
    be finish_diag
    wr %g0, %r12, %asi
lock_sync_thds_again:
    mov 0xff, %r10
    set sync_thr_counter4, %r23
#ifndef SPC
    add %r23,%r8,%r23           !Core's sync counter
#endif
    st %r10, [%r23]             !lock sync_thr_counter4
    add %r23, 64, %r23
    st %r10, [%r23]             !lock sync_thr_counter5
    add %r23, 64, %r23
    st %r10, [%r23]             !lock sync_thr_counter6
    ba fork_threads
    wrpr %g0, %g0, %gl
#endif
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_7:
    wrhpr %g0, 0x7d0, %hpstate  ! ta T_CHANGE_NONHPRIV 
br_longdelay2_40_0:
	.word 0x02c94001  ! 1: BRZ	brz,pt  	%r5,<label_0x94001>
vahole4_40_1:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x81983d0d  ! 1: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1d0d, %hpstate
	.word 0xd83fc000  ! 5: STD_R	std	%r12, [%r31 + %r0]
mondo_40_2:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3c8] %asi
	.word 0x87802083  ! 1: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x9d95000c  ! 9: WRPR_WSTATE_R	wrpr	%r20, %r12, %wstate
splash_cmpr_40_4:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 13: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
fpinit_40_5:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 17: FCMPd	fcmpd	%fcc<n>, %f0, %f4
splash_lsu_40_6:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x9a93b0c3, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 21: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_40_7:
	ta	T_CHANGE_NONPRIV	! macro
splash_hpstate_40_8:
	.word 0x22800001  ! 1: BE	be,a	<label_0x1>
	.word 0x81983437  ! 29: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1437, %hpstate
	.word 0x04800001  ! 33: BLE	ble  	<label_0x1>
	.word 0x87802080  ! 37: WRASI_I	wr	%r0, 0x0080, %asi
splash_htba_40_9:
	nop
	ta T_CHANGE_HPRIV
	best_set_reg(HV_TRAP_BASE_PA, %r11,%r12)
	.word 0x8b98000c  ! 41: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa4fcc005  ! 45: SDIVcc_R	sdivcc 	%r19, %r5, %r18
memptr_40_12:
	set user_data_start, %r31
	.word 0x85843d93  ! 49: WRCCR_I	wr	%r16, 0x1d93, %ccr
	.word 0x9f802d7b  ! 53: SIR	sir	0x0d7b
intveclr_40_13:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x548402cc225f62e3, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 57: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_14) + 48, 16, 16)) -> intp(4,0,23,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_14)&0xffffffff) + 48, 16, 16)) -> intp(7,0,9,,,,,1)
#else
	set 0x7c30228f, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_14:
	.word 0x9f802dda  ! 61: SIR	sir	0x0dda
	.word 0xd6c7d000  ! 65: LDSWA_R	ldswa	[%r31, %r0] 0x80, %r11
	.word 0xe8c7c280  ! 69: LDSWA_R	ldswa	[%r31, %r0] 0x14, %r20
intveclr_40_15:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x3f9b6cbc2594459f, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 73: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_40_16:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 77: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x93a0054d  ! 81: FSQRTd	fsqrt	
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_17:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_17-donret_40_17), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00335600 | (0x82 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xfd4, %htstate
	wrhpr %g0, 0x6d3, %hpstate  !  rand=1 (40)
	done
donretarg_40_17:
	.word 0xd8ffc400  ! 85: SWAPA_R	swapa	%r12, [%r31 + %r0] 0x20
splash_cmpr_40_18:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 89: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_40_19:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd4d84940  ! 93: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r10
	.word 0x95a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f10
	.word 0xd43fe160  ! 1: STD_I	std	%r10, [%r31 + 0x0160]
	mov 0xb3, %r30
	.word 0x93d0001e  ! 97: Tcc_R	tne	icc_or_xcc, %r0 + %r30
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_20) + 48, 16, 16)) -> intp(3,0,20,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_20)&0xffffffff) + 40, 16, 16)) -> intp(1,0,10,,,,,1)
#else
	set 0xd6e05af0, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_20:
	.word 0x91b0c4c4  ! 101: FCMPNE32	fcmpne32	%d34, %d4, %r8
mondo_40_21:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x87802030  ! 1: WRASI_I	wr	%r0, 0x0030, %asi
	.word 0x9d90c014  ! 105: WRPR_WSTATE_R	wrpr	%r3, %r20, %wstate
brcommon3_40_22:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd3e7c6c0  ! 1: CASA_I	casa	[%r31] 0x36, %r0, %r9
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d90364e  ! 109: WRPR_PSTATE_I	wrpr	%r0, 0x164e, %pstate
dvapa_40_23:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xaf5, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x880, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fc3e0  ! 113: LDDFA_R	ldda	[%r31, %r0], %f16
splash_cmpr_40_24:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 117: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_40_25:
	.word 0x2c800001  ! 1: BNEG	bneg,a	<label_0x1>
	.word 0x81982b1e  ! 121: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0b1e, %hpstate
splash_tba_40_26:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 125: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_40_27:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r4, [%r0+0x3d8] %asi
	.word 0x8780208a  ! 1: WRASI_I	wr	%r0, 0x008a, %asi
	.word 0x9d948014  ! 129: WRPR_WSTATE_R	wrpr	%r18, %r20, %wstate
	.word 0x8d802000  ! 133: WRFPRS_I	wr	%r0, 0x0000, %fprs
splash_tba_40_29:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000400380000, %r11, %r12
	.word 0x8b90000c  ! 137: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_30:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_30-donret_40_30), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x006b3200 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc0f, %htstate
	wrhpr %g0, 0xe0b, %hpstate  !  rand=1 (40)
	retry
donretarg_40_30:
	.word 0x8d9020cd  ! 141: WRPR_PSTATE_I	wrpr	%r0, 0x00cd, %pstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_31:
	.word 0x19400001  ! 145: FBPUGE	fbuge
	.word 0x9084c010  ! 149: ADDcc_R	addcc 	%r19, %r16, %r8
	.word 0xa7844011  ! 153: WR_GRAPHICS_STATUS_REG_R	wr	%r17, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f80227b  ! 1: SIR	sir	0x027b
intvec_40_33:
	.word 0x9f8030a1  ! 157: SIR	sir	0x10a1
	bn  	 skip_40_34
	fbg,a,pn	%fcc0,  skip_40_34
.align 512
skip_40_34:
	.word 0x87ac8a52  ! 161: FCMPd	fcmpd	%fcc<n>, %f18, %f18
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_35:
	.word 0xa9a4c9d2  ! 165: FDIVd	fdivd	%f50, %f18, %f20
splash_tba_40_36:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 169: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x91d02033  ! 173: Tcc_I	ta	icc_or_xcc, %r0 + 51
vahole4_40_38:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x8198289f  ! 177: WRHPR_HPSTATE_I	wrhpr	%r0, 0x089f, %hpstate
ibp_40_39:
	nop
	nop
	.word 0xe19fdc40  ! 181: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x9f803848  ! 185: SIR	sir	0x1848
	.word 0xa86cf6d1  ! 189: UDIVX_I	udivx 	%r19, 0xfffff6d1, %r20
intveclr_40_40:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xbf58ed6a7f452c2f, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xa02, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 193: FBPLG	fblg
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_42) + 16, 16, 16)) -> intp(2,0,23,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_42)&0xffffffff) + 8, 16, 16)) -> intp(3,0,20,,,,,1)
#else
	set 0x21409e7b, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_42:
	.word 0x9f802d17  ! 197: SIR	sir	0x0d17
intveclr_40_43:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb6b9f1468ff4ab3b, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 201: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_tba_40_44:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 205: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_40_45:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xbfb9788a, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x0e800001  ! 1: BVS	bvs  	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 209: FBPULE	fbule
	.word 0xc19fde20  ! 213: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x89800011  ! 217: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0cfd920  ! 221: LDSBA_R	ldsba	[%r31, %r0] 0xc9, %r8
splash_cmpr_40_48:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 225: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_40_49:
	nop
	nop
	.word 0xe19fde00  ! 229: LDDFA_R	ldda	[%r31, %r0], %f16
dvapa_40_50:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf38, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x451, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd93fe1f0  ! 233: STDF_I	std	%f12, [0x01f0, %r31]
iaw_40_51:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_51:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_51
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_51:
    brnz %r16, iaw_wait40_51
    ld [%r23], %r16
    ba iaw_startwait40_51
    mov 0x40, %r16
continue_iaw_40_51:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_51:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_51
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_51:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_51
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_51:
	mov 0x38, %r18
iaw1_40_51:
	best_set_reg(0x00000000e0a00000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xc4b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa3a2c9b2  ! 237: FDIVs	fdivs	%f11, %f18, %f17
	.word 0x9f8022bf  ! 241: SIR	sir	0x02bf
memptr_40_52:
	set 0x60540000, %r31
	.word 0x858534c3  ! 245: WRCCR_I	wr	%r20, 0x14c3, %ccr
splash_cmpr_40_53:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 249: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
br_badelay1_40_55:
	.word 0x1b400001  ! 1: FBPLE	fble
	.word 0x93a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f40
	.word 0x01400001  ! 1: FBPN	fbn
	normalw
	.word 0x9b458000  ! 253: RD_SOFTINT_REG	rd	%softint, %r13
	bvc  	 skip_40_56
	fbug,a,pn	%fcc0,  skip_40_56
.align 4096
skip_40_56:
	.word 0x24ca0001  ! 257: BRLEZ	brlez,a,pt	%r8,<label_0xa0001>
	.word 0x9f8023bb  ! 261: SIR	sir	0x03bb
pmu_40_57:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffaf, %g1, %g7
	.word 0xa3800007  ! 265: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_40_58:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x87802088  ! 1: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0x9d948005  ! 269: WRPR_WSTATE_R	wrpr	%r18, %r5, %wstate
	.word 0xdadfd000  ! 273: LDXA_R	ldxa	[%r31, %r0] 0x80, %r13
	.word 0x87802010  ! 277: WRASI_I	wr	%r0, 0x0010, %asi
trapasi_40_60:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xd0d84920  ! 281: LDXA_R	ldxa	[%r1, %r0] 0x49, %r8
memptr_40_61:
	set 0x60140000, %r31
	.word 0x8581a24c  ! 285: WRCCR_I	wr	%r6, 0x024c, %ccr
	.word 0x09400001  ! 1: FBPL	fbl
	.word 0x8d9035eb  ! 289: WRPR_PSTATE_I	wrpr	%r0, 0x15eb, %pstate
demap_40_63:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xc0bfde00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf0
	.word 0xe0bfdb40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xda
	stxa %g3, [%g3] 0x5f
	.word 0xc1bfda00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r16
	stxa %g3, [%g3] 0x5f
	.word 0xc09fc2c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x16, %r0
	.word 0xc19fdc00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfda00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd0
	stxa %g3, [%g3] 0x57
	.word 0xc1bfdb40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x29b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe61fe09e  ! 293: LDD_I	ldd	[%r31 + 0x009e], %r19
	.word 0xe19fe1e0  ! 297: LDDFA_I	ldda	[%r31, 0x01e0], %f16
	.word 0xe2800bc0  ! 301: LDUWA_R	lduwa	[%r0, %r0] 0x5e, %r17
	.word 0x99b48994  ! 305: BSHUFFLE	fmovc32	%d18, %d20, %d12
pmu_40_66:
	nop
	nop
	setx 0xffffffbaffffffa1, %g1, %g7
	.word 0xa3800007  ! 309: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_67)+24, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_67)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_67:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_67:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984fbc7  ! 313: WR_SET_SOFTINT_I	wr	%r19, 0x1bc7, %set_softint
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_40_68:
	ta	T_CHANGE_NONHPRIV	! macro
	.word 0xda97d000  ! 321: LDUHA_R	lduha	[%r31, %r0] 0x80, %r13
	.word 0xda800b60  ! 325: LDUWA_R	lduwa	[%r0, %r0] 0x5b, %r13
intveclr_40_71:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x35ef7b7ec96d8e3a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 329: FBPLG	fblg
ibp_40_72:
	nop
	nop
	wrhpr %g0, 0xbd1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87ab0a45  ! 333: FCMPd	fcmpd	%fcc<n>, %f12, %f36
trapasi_40_73:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x74) 
	.word 0xe6d84e80  ! 337: LDXA_R	ldxa	[%r1, %r0] 0x74, %r19
pmu_40_74:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb6ffffffaf, %g1, %g7
	.word 0xa3800007  ! 341: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x97b480f0  ! 345: EDGE16LN	edge16ln	%r18, %r16, %r11
dvapa_40_76:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa2b, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd50, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfda00  ! 349: STDA_R	stda	%r16, [%r31 + %r0] 0xd0
	.word 0xd41fc000  ! 353: LDD_R	ldd	[%r31 + %r0], %r10
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_78) + 48, 16, 16)) -> intp(6,0,28,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_78)&0xffffffff) + 8, 16, 16)) -> intp(5,0,27,,,,,1)
#else
	set 0x5d305b26, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x9f8024d6  ! 1: SIR	sir	0x04d6
intvec_40_78:
	.word 0x39400001  ! 357: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
trapasi_40_80:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xd0d84940  ! 361: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r8
	.word 0x9f802da8  ! 365: SIR	sir	0x0da8
mondo_40_81:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r1, [%r0+0x3c8] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d934003  ! 369: WRPR_WSTATE_R	wrpr	%r13, %r3, %wstate
ibp_40_82:
	nop
	nop
	.word 0x99a189d2  ! 373: FDIVd	fdivd	%f6, %f18, %f12
splash_hpstate_40_84:
	ta T_CHANGE_NONHPRIV
	.word 0x81983687  ! 377: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1687, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_86:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_86-donret_40_86), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00de2500 | (0x83 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x149d, %htstate
	wrhpr %g0, 0x5d1, %hpstate  !  rand=1 (40)
	ldx [%r12+%r0], %g1
	retry
donretarg_40_86:
	.word 0xd66fe15f  ! 381: LDSTUB_I	ldstub	%r11, [%r31 + 0x015f]
intveclr_40_88:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xfcd4b6d5d6b291a5, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x50, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 385: FBPLG	fblg
memptr_40_89:
	set 0x60140000, %r31
	.word 0x858424a9  ! 389: WRCCR_I	wr	%r16, 0x04a9, %ccr
	.word 0x87aa4a28  ! 393: FCMPs	fcmps	%fcc<n>, %f9, %f8
iaw_40_90:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_90:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_90
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_90:
    brnz %r16, iaw_wait40_90
    ld [%r23], %r16
    ba iaw_startwait40_90
    mov 0x40, %r16
continue_iaw_40_90:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_90:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_90
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_90:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_90
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_90:
	mov 0x38, %r18
iaw1_40_90:
	best_set_reg(0x00000000e1a00000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9b70302e  ! 397: POPC_I	popc	0x102e, %r13
	.word 0xc1bfdd40  ! 401: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91934013  ! 405: WRPR_PIL_R	wrpr	%r13, %r19, %pil
splash_cmpr_40_92:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 409: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_40_93:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 413: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_94) + 56, 16, 16)) -> intp(3,0,26,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_94)&0xffffffff) + 0, 16, 16)) -> intp(3,0,18,,,,,1)
#else
	set 0x2a4027ef, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_94:
	.word 0xa9a4c9cc  ! 417: FDIVd	fdivd	%f50, %f12, %f20
demap_40_95:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x14800001  ! 1: BG	bg  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0xc8a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe090  ! 421: LDD_I	ldd	[%r31 + 0x0090], %r18
pmu_40_96:
	nop
	nop
	setx 0xffffffb8ffffffa6, %g1, %g7
	.word 0xa3800007  ! 425: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x97b1c0f3  ! 429: EDGE16LN	edge16ln	%r7, %r19, %r11
intveclr_40_99:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4dbb9102a6e6846e, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 433: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_100)+16, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_100)&0xffffffff) + 48, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_100:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_100:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9812c6e  ! 437: WR_SET_SOFTINT_I	wr	%r4, 0x0c6e, %set_softint
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_102:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_102-donret_40_102+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00c27200 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1e7f, %htstate
	wrhpr %g0, 0xbd9, %hpstate  !  rand=1 (40)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_40_102:
	.word 0x15400001  ! 441: FBPUE	fbue
dvapa_40_103:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x996, %r20
	mov 0xc, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe4a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd497d060  ! 445: LDUHA_R	lduha	[%r31, %r0] 0x83, %r10
trapasi_40_104:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x5b) 
	.word 0xe6d84b60  ! 449: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r19
ibp_40_105:
	nop
	nop
	wrhpr %g0, 0xd90, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa9a249b3  ! 453: FDIVs	fdivs	%f9, %f19, %f20
splash_hpstate_40_106:
	.word 0x81982ec9  ! 457: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0ec9, %hpstate
dvapa_40_107:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc1a, %r20
	mov 0xa, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x1d3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fde20  ! 461: LDDA_R	ldda	[%r31, %r0] 0xf1, %r0
mondo_40_108:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d940011  ! 465: WRPR_WSTATE_R	wrpr	%r16, %r17, %wstate
	.word 0x81580000  ! 469: FLUSHW	flushw
	.word 0xa5b480f0  ! 473: EDGE16LN	edge16ln	%r18, %r16, %r18
trapasi_40_110:
	nop
	mov 0x30, %r1 	! (VA for ASI 0x5b) 
	.word 0xe0d84b60  ! 477: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r16
	.word 0xc1bfe060  ! 481: STDFA_I	stda	%f0, [0x0060, %r31]
splash_hpstate_40_111:
	.word 0x819838c7  ! 485: WRHPR_HPSTATE_I	wrhpr	%r0, 0x18c7, %hpstate
	.word 0x91940014  ! 489: WRPR_PIL_R	wrpr	%r16, %r20, %pil
demap_40_114:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2accc001  ! 1: BRNZ	brnz,a,pt	%r19,<label_0xcc001>
	stxa %g3, [%g3] 0x57
	.word 0xc0bfc2c0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x16
	.word 0xe0bfdf20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf9
	.word 0xc09fdb20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd9, %r0
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfdf00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf8
	stxa %g3, [%g3] 0x5f
	.word 0xc0bfdd40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xea
	.word 0xe0bfc3e0  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x1f
	.word 0xc0bfde00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf0
	stxa %g3, [%g3] 0x57
	.word 0xc09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
	.word 0xe19fdc00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x57
	.word 0xe1bfda00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe0bfc3e0  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x1f
	stxa %g3, [%g3] 0x5f
	.word 0xe09fdb20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd9, %r16
	.word 0xe0bfda00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd0
	wrhpr %g0, 0x259, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe098  ! 493: LDD_I	ldd	[%r31 + 0x0098], %r16
intveclr_40_116:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8efac715692295d6, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 497: FBPLG	fblg
demap_40_117:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x29400001  ! 1: FBPL	fbl,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xe09fdb20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd9, %r16
	.word 0xc0bfdf20  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf9
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xe1bfc2c0  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe09fdb40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xda, %r16
	stxa %g3, [%g3] 0x57
	.word 0xe0bfde00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf0
	.word 0xc0bfdb20  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd9
	wrhpr %g0, 0x742, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe1a5  ! 501: LDD_I	ldd	[%r31 + 0x01a5], %r8
memptr_40_118:
	set 0x60740000, %r31
	.word 0x8584f136  ! 505: WRCCR_I	wr	%r19, 0x1136, %ccr
	.word 0x91524000  ! 509: RDPR_CWP	rdpr	%cwp, %r8
	.word 0x8d802004  ! 513: WRFPRS_I	wr	%r0, 0x0004, %fprs
	.word 0xd08008a0  ! 517: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r8
change_to_randtl_40_121:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_40_121:
	.word 0x8f902002  ! 521: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
iaw_40_122:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_122:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_122
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_122:
    brnz %r16, iaw_wait40_122
    ld [%r23], %r16
    ba iaw_startwait40_122
    mov 0x40, %r16
continue_iaw_40_122:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_122:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_122
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_122:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_122
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_122:
	mov 0x38, %r18
iaw1_40_122:
	best_set_reg(0x00000000e0a00000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x148, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfda00  ! 525: STDFA_R	stda	%f16, [%r0, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_40_123:
	.word 0x19400001  ! 529: FBPUGE	fbuge
splash_cmpr_40_124:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 533: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_40_125:
	nop
	nop
	.word 0x00800001  ! 537: BN	bn  	<label_0x1>
jmptr_40_126:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 541: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xc32fc000  ! 545: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xa4fc0004  ! 549: SDIVcc_R	sdivcc 	%r16, %r4, %r18
intveclr_40_127:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8c9e8830a98a235a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 553: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_40_128:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa8, %g1, %g7
	.word 0xa3800007  ! 557: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_40_129:
	set user_data_start, %r31
	.word 0x8584b4a6  ! 561: WRCCR_I	wr	%r18, 0x14a6, %ccr
	.word 0xe41fe0d0  ! 565: LDD_I	ldd	[%r31 + 0x00d0], %r18
frzptr_40_131:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cbc0000), %r21
	stxa %r27, [%r21]0x57
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xc19fdc40  ! 569: LDDFA_R	ldda	[%r31, %r0], %f0
dvapa_40_133:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe6e, %r20
	mov 0x7, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x12, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd71fe1e0  ! 573: LDDF_I	ldd	[%r31, 0x01e0], %f11
dvapa_40_134:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xfe0, %r20
	mov 0x1d, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd8a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa1a4c9c8  ! 577: FDIVd	fdivd	%f50, %f8, %f16
pmu_40_135:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffad, %g1, %g7
	.word 0xa3800007  ! 581: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe45fe1c8  ! 585: LDX_I	ldx	[%r31 + 0x01c8], %r18
	.word 0xe53fe1c0  ! 589: STDF_I	std	%f18, [0x01c0, %r31]
splash_hpstate_40_137:
	.word 0x23400001  ! 1: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
	.word 0x81983d04  ! 593: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1d04, %hpstate
	.word 0x2d400001  ! 1: FBPG	fbg,a,pn	%fcc0, <label_0x1>
	.word 0x8d902673  ! 597: WRPR_PSTATE_I	wrpr	%r0, 0x0673, %pstate
splash_cmpr_40_140:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 601: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_40_141:
	nop
	nop
	wrhpr %g0, 0x543, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc3efe1e0  ! 605: PREFETCHA_I	prefetcha	[%r31, + 0x01e0] %asi, #one_read
splash_cmpr_40_142:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 609: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
pmu_40_143:
	nop
	nop
	setx 0xffffffb5ffffffa0, %g1, %g7
	.word 0xa3800007  ! 613: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
iaw_40_144:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_144:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_144
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_144:
    brnz %r16, iaw_wait40_144
    ld [%r23], %r16
    ba iaw_startwait40_144
    mov 0x40, %r16
continue_iaw_40_144:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_144:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_144
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_144:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_144
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_144:
	mov 0x38, %r18
iaw0_40_144:
	rd %pc, %r19
	add %r19, (16+1), %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x3ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd0dfc240  ! 617: LDXA_R	ldxa	[%r31, %r0] 0x12, %r8
	.word 0x8d802000  ! 621: WRFPRS_I	wr	%r0, 0x0000, %fprs
intveclr_40_145:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9fef161c04d75e11, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 625: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_40_146:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3c8] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d930013  ! 629: WRPR_WSTATE_R	wrpr	%r12, %r19, %wstate
frzptr_40_147:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xe19fdc40  ! 633: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	.word 0x8d902951  ! 637: WRPR_PSTATE_I	wrpr	%r0, 0x0951, %pstate
tagged_40_149:
	taddcctv %r9, 0x12f5, %r13
	.word 0xd407e102  ! 641: LDUW_I	lduw	[%r31 + 0x0102], %r10
dvapa_40_151:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd22, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x4c9, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93b3048a  ! 645: FCMPLE32	fcmple32	%d12, %d10, %r9
	.word 0xa5b2cfe1  ! 649: FONES	e	%f18
trapasi_40_152:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xd8d84940  ! 653: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r12
trapasi_40_153:
	nop
	mov 0x3c0, %r1 	! (VA for ASI 0x25) 
	.word 0xd8d844a0  ! 657: LDXA_R	ldxa	[%r1, %r0] 0x25, %r12
demap_40_154:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r11, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xe09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r16
	.word 0xc1bfc2c0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	stxa %g3, [%g3] 0x57
	.word 0xc09fc2c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x16, %r0
	stxa %g3, [%g3] 0x5f
	.word 0xe09fda00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd0, %r16
	.word 0xc1bfc2c0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe19fdf00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x57
	.word 0xc09fdb40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xda, %r0
	.word 0xc1bfdc40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	wrhpr %g0, 0xf48, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe0b2  ! 661: LDD_I	ldd	[%r31 + 0x00b2], %r11
tagged_40_155:
	taddcctv %r17, 0x1380, %r20
	.word 0xd407e130  ! 665: LDUW_I	lduw	[%r31 + 0x0130], %r10
	.word 0x8780208b  ! 669: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0xd697d040  ! 673: LDUHA_R	lduha	[%r31, %r0] 0x82, %r11
    set 0x2790, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x99b107d2  ! 677: PDIST	pdistn	%d4, %d18, %d12
memptr_40_157:
	set 0x60540000, %r31
	.word 0x8584edf0  ! 681: WRCCR_I	wr	%r19, 0x0df0, %ccr
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_159:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_159-donret_40_159+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b53100 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1cdd, %htstate
	wrhpr %g0, 0x948, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_159:
	.word 0x35400001  ! 685: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
intveclr_40_160:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb1d17db28a666487, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 689: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xd3e7c180  ! 693: CASA_I	casa	[%r31] 0x c, %r0, %r9
	.word 0xe29fc6c0  ! 697: LDDA_R	ldda	[%r31, %r0] 0x36, %r17
memptr_40_162:
	set user_data_start, %r31
	.word 0x8581e52d  ! 701: WRCCR_I	wr	%r7, 0x052d, %ccr
splash_tba_40_164:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 705: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_40_166:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x22c94001  ! 1: BRZ	brz,a,pt	%r5,<label_0x94001>
	stxa %g3, [%g3] 0x5f
	.word 0xc1bfdc00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe1bfda60  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfde00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf0
	.word 0xe09fdf20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf9, %r16
	.word 0xe1bfda00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	stxa %g3, [%g3] 0x57
	.word 0xc09fdb40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xda, %r0
	.word 0xc1bfdb20  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xe1bfde20  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	stxa %g3, [%g3] 0x57
	.word 0xc0bfda60  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd3
	wrhpr %g0, 0x7c2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe009  ! 709: LDD_I	ldd	[%r31 + 0x0009], %r16
vahole2_40_167:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target2, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe19fc2c0  ! 713: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x99b1c554  ! 717: FCMPEQ16	fcmpeq16	%d38, %d20, %r12
	.word 0xe84fe088  ! 721: LDSB_I	ldsb	[%r31 + 0x0088], %r20
	.word 0xe87fe070  ! 725: SWAP_I	swap	%r20, [%r31 + 0x0070]
	.word 0xa7702040  ! 1: POPC_I	popc	0x0040, %r19
	.word 0xe71fe110  ! 1: LDDF_I	ldd	[%r31, 0x0110], %f19
	mov 0xb0, %r30
	.word 0x91d0001e  ! 729: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x81510000  ! 733: RDPR_TICK	rdpr	%tick, %r0
trapasi_40_169:
	nop
	mov 0x18, %r1 	! (VA for ASI 0x50) 
	.word 0xd2d84a00  ! 737: LDXA_R	ldxa	[%r1, %r0] 0x50, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_170) + 48, 16, 16)) -> intp(3,0,21,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_170)&0xffffffff) + 16, 16, 16)) -> intp(7,0,1,,,,,1)
#else
	set 0xabe0cfcb, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_170:
	.word 0x39400001  ! 741: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
demap_40_171:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r17, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xc1bfc3e0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe0bfde00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf0
	stxa %g3, [%g3] 0x5f
	.word 0xe1bfdf00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc19fdf00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfdb20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd9
	stxa %g3, [%g3] 0x57
	.word 0xc19fdc40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfdf00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf8
	stxa %g3, [%g3] 0x5f
	.word 0xc0bfdb20  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd9
	.word 0xc09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
	stxa %g3, [%g3] 0x5f
	.word 0xe09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r16
	stxa %g3, [%g3] 0x57
	.word 0xc0bfdc00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xe0
	.word 0xc09fc2c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x16, %r0
	stxa %g3, [%g3] 0x57
	.word 0xe1bfdf00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe09fdd40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xea, %r16
	wrhpr %g0, 0x7d9, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd81fe0a8  ! 745: LDD_I	ldd	[%r31 + 0x00a8], %r12
	.word 0xe09fe0e0  ! 749: LDDA_I	ldda	[%r31, + 0x00e0] %asi, %r16
pmu_40_172:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffad, %g1, %g7
	.word 0xa3800007  ! 753: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_40_173:
	set 0x60340000, %r31
	.word 0x858079b3  ! 757: WRCCR_I	wr	%r1, 0x19b3, %ccr
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_40_174:
	ta	T_CHANGE_NONPRIV	! macro
tagged_40_176:
	tsubcctv %r7, 0x1a68, %r2
	.word 0xe807e0ce  ! 765: LDUW_I	lduw	[%r31 + 0x00ce], %r20
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_40_177:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_40_178:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb01, %r20
	mov 0x2, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xec1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93a149a1  ! 773: FDIVs	fdivs	%f5, %f1, %f9
pmu_40_180:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa2, %g1, %g7
	.word 0xa3800007  ! 777: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe19fe020  ! 781: LDDFA_I	ldda	[%r31, 0x0020], %f16
	.word 0x91d020b4  ! 785: Tcc_I	ta	icc_or_xcc, %r0 + 180
	.word 0x8d902c87  ! 789: WRPR_PSTATE_I	wrpr	%r0, 0x0c87, %pstate
trapasi_40_182:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe2d84940  ! 793: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r17
br_badelay2_40_184:
	.word 0x97a249d4  ! 1: FDIVd	fdivd	%f40, %f20, %f42
	pdist %f14, %f8, %f28
	.word 0x97b04313  ! 797: ALIGNADDRESS	alignaddr	%r1, %r19, %r11
	.word 0x89800011  ! 801: WRTICK_R	wr	%r0, %r17, %tick
frzptr_40_186:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cbc0000), %r21
	stxa %r27, [%r21]0x57
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x957020d0  ! 1: POPC_I	popc	0x00d0, %r10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 805: BN	bn,a	<label_0x1>
	.word 0x8d802004  ! 809: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_40_187:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 813: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
	.word 0xd05fe128  ! 817: LDX_I	ldx	[%r31 + 0x0128], %r8
	.word 0xc19fe1e0  ! 821: LDDFA_I	ldda	[%r31, 0x01e0], %f0
	.word 0x9f802d9c  ! 825: SIR	sir	0x0d9c
cwp_40_188:
    set user_data_start, %o7
	.word 0x93902006  ! 829: WRPR_CWP_I	wrpr	%r0, 0x0006, %cwp
	.word 0x8d90292d  ! 833: WRPR_PSTATE_I	wrpr	%r0, 0x092d, %pstate
change_to_randtl_40_191:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_40_191:
	.word 0x8f902000  ! 837: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
	.word 0x9bb4c988  ! 841: BSHUFFLE	fmovc32	%d50, %d8, %d44
	.word 0xc19fe1e0  ! 845: LDDFA_I	ldda	[%r31, 0x01e0], %f0
	ba  	 skip_40_193
	stxa %r10, [%r0] ASI_LSU_CONTROL
	.word 0x9f803584  ! 1: SIR	sir	0x1584
	stxa %r18, [%r0] ASI_LSU_CONTROL
.align 2048
skip_40_193:
	.word 0xc36fe026  ! 849: PREFETCH_I	prefetch	[%r31 + 0x0026], #one_read
	.word 0x90c1f5e8  ! 853: ADDCcc_I	addccc 	%r7, 0xfffff5e8, %r8
ibp_40_194:
	nop
	nop
	.word 0xe13fe010  ! 857: STDF_I	std	%f16, [0x0010, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_40_195:
	.word 0x19400001  ! 861: FBPUGE	fbuge
	.word 0x8d802004  ! 865: WRFPRS_I	wr	%r0, 0x0004, %fprs
	bcc,a	 skip_40_196
	stxa %r8, [%r0] ASI_LSU_CONTROL
	brlez,pn  	%r18, skip_40_196
	stxa %r10, [%r0] ASI_LSU_CONTROL
.align 512
skip_40_196:
	.word 0xe03fe001  ! 869: STD_I	std	%r16, [%r31 + 0x0001]
ceter_40_197:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 7, %r17
    sllx %r17, 60, %r17
    mov 0x18, %r16
    stxa %r17, [%r16]0x4c
	wrhpr %g0, 0xd41, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95410000  ! 873: RDTICK	rd	%tick, %r10
	.word 0xd937c000  ! 877: STQF_R	-	%f12, [%r0, %r31]
br_longdelay2_40_198:
	.word 0x2acb0001  ! 1: BRNZ	brnz,a,pt	%r12,<label_0xb0001>
	.word 0x87afca40  ! 881: FCMPd	fcmpd	%fcc<n>, %f62, %f0
dvapa_40_199:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x858, %r20
	mov 0x17, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x799, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe09fdf00  ! 885: LDDA_R	ldda	[%r31, %r0] 0xf8, %r16
mondo_40_200:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r7, [%r0+0x3d0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d944011  ! 889: WRPR_WSTATE_R	wrpr	%r17, %r17, %wstate
	.word 0xe2cfd040  ! 893: LDSBA_R	ldsba	[%r31, %r0] 0x82, %r17
dvapa_40_201:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xbbb, %r20
	mov 0x2, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x54a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95a2c9c3  ! 897: FDIVd	fdivd	%f42, %f34, %f10
pmu_40_202:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb5ffffffa8, %g1, %g7
	.word 0xa3800007  ! 901: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe6dfd040  ! 1: LDXA_R	ldxa	[%r31, %r0] 0x82, %r19
	.word 0xe61fe080  ! 1: LDD_I	ldd	[%r31 + 0x0080], %r19
	mov 0x34, %r30
	.word 0x91d0001e  ! 905: Tcc_R	ta	icc_or_xcc, %r0 + %r30
fpinit_40_205:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009a4  ! 909: FDIVs	fdivs	%f0, %f4, %f4
splash_tba_40_206:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 913: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_40_207:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3d0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d91c014  ! 917: WRPR_WSTATE_R	wrpr	%r7, %r20, %wstate
	fbu,a,pn	%fcc0,  skip_40_208
	.word 0xa7a189c8  ! 1: FDIVd	fdivd	%f6, %f8, %f50
.align 512
skip_40_208:
	.word 0x19400001  ! 921: FBPUGE	fbuge
splash_hpstate_40_209:
	ta T_CHANGE_NONHPRIV
	.word 0x0a800001  ! 1: BCS	bcs  	<label_0x1>
	.word 0x81982dce  ! 925: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0dce, %hpstate
demap_40_210:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x1f400001  ! 1: FBPO	fbo
	stxa %g3, [%g3] 0x5f
	.word 0xc1bfde00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe19fdd40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x5f
	.word 0xe09fdb40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xda, %r16
	stxa %g3, [%g3] 0x5f
	.word 0xc1bfc2c0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	stxa %g3, [%g3] 0x57
	.word 0xc1bfda00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	wrhpr %g0, 0xbc1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda1fe1e9  ! 929: LDD_I	ldd	[%r31 + 0x01e9], %r13
	.word 0xda3fe0c0  ! 1: STD_I	std	%r13, [%r31 + 0x00c0]
	.word 0xda9fd920  ! 1: LDDA_R	ldda	[%r31, %r0] 0xc9, %r13
	mov 0x30, %r30
	.word 0x83d0001e  ! 933: Tcc_R	te	icc_or_xcc, %r0 + %r30
splash_cmpr_40_212:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 937: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f8028c8  ! 1: SIR	sir	0x08c8
intvec_40_213:
	.word 0x9f80203f  ! 941: SIR	sir	0x003f
	.word 0x9190b0c1  ! 945: WRPR_PIL_I	wrpr	%r2, 0x10c1, %pil
fpinit_40_214:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 949: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x91904011  ! 953: WRPR_PIL_R	wrpr	%r1, %r17, %pil
	.word 0x9a68f866  ! 957: UDIVX_I	udivx 	%r3, 0xfffff866, %r13
	.word 0x87802039  ! 961: WRASI_I	wr	%r0, 0x0039, %asi
ibp_40_217:
	nop
	nop
	.word 0xe33fe160  ! 965: STDF_I	std	%f17, [0x0160, %r31]
	.word 0x89800011  ! 969: WRTICK_R	wr	%r0, %r17, %tick
splash_lsu_40_219:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x3e24468e, %r2
	mov 0x6, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 973: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
ibp_40_220:
	nop
	nop
	wrhpr %g0, 0x1a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fdb40  ! 977: LDDFA_R	ldda	[%r31, %r0], %f0
ibp_40_222:
	nop
	nop
	wrhpr %g0, 0x609, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x00800001  ! 981: BN	bn  	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_224:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_224-donret_40_224+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00de3300 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xf47, %htstate
	wrhpr %g0, 0x211, %hpstate  !  rand=1 (40)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_40_224:
	.word 0x819839a7  ! 985: WRHPR_HPSTATE_I	wrhpr	%r0, 0x19a7, %hpstate
mondo_40_225:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d91400a  ! 989: WRPR_WSTATE_R	wrpr	%r5, %r10, %wstate
	.word 0x89800011  ! 993: WRTICK_R	wr	%r0, %r17, %tick
trapasi_40_227:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x5b) 
	.word 0xe4d84b60  ! 997: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r18
	.word 0xc36fe0f0  ! 1001: PREFETCH_I	prefetch	[%r31 + 0x00f0], #one_read
	.word 0x93d02034  ! 1005: Tcc_I	tne	icc_or_xcc, %r0 + 52
	.word 0xe127c000  ! 1009: STF_R	st	%f16, [%r0, %r31]
	.word 0x96dcc008  ! 1013: SMULcc_R	smulcc 	%r19, %r8, %r11
change_to_randtl_40_230:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_40_230:
	.word 0x8f902002  ! 1017: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_231:
	.word 0x39400001  ! 1021: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intveclr_40_232:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb0403bdfdde5e55d, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1025: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_233:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_233-donret_40_233+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d63100 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x139f, %htstate
	wrhpr %g0, 0xd93, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_233:
	.word 0xe46fe0d5  ! 1029: LDSTUB_I	ldstub	%r18, [%r31 + 0x00d5]
	.word 0x9f803194  ! 1033: SIR	sir	0x1194
pmu_40_235:
	nop
	nop
	setx 0xffffffbdffffffa2, %g1, %g7
	.word 0xa3800007  ! 1037: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8143e011  ! 1041: MEMBAR	membar	#LoadLoad | #Lookaside 
brcommon3_40_237:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd9e7c180  ! 1: CASA_I	casa	[%r31] 0x c, %r0, %r12
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 1045: BN	bn,a	<label_0x1>
intveclr_40_239:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7b8848ac2119b211, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1049: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_cmpr_40_240:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1053: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xc19fc2c0  ! 1057: LDDFA_R	ldda	[%r31, %r0], %f0
jmptr_40_241:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1061: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0x95703ddd  ! 1065: POPC_I	popc	0x1ddd, %r10
	.word 0x9af8c005  ! 1069: SDIVcc_R	sdivcc 	%r3, %r5, %r13
br_badelay1_40_242:
	.word 0x0c800001  ! 1: BNEG	bneg  	<label_0x1>
	.word 0xe737e110  ! 1: STQF_I	-	%f19, [0x0110, %r31]
	.word 0xe7e7d060  ! 1: CASA_I	casa	[%r31] 0x83, %r0, %r19
	normalw
	.word 0xa3458000  ! 1073: RD_SOFTINT_REG	rd	%softint, %r17
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_244)+16, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_244)&0xffffffff) + 32, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_244:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_244:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98433ba  ! 1077: WR_SET_SOFTINT_I	wr	%r16, 0x13ba, %set_softint
unsupttte_40_245:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0xa01, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87ab0a54  ! 1081: FCMPd	fcmpd	%fcc<n>, %f12, %f20
ibp_40_246:
	nop
	nop
	wrhpr %g0, 0x4d1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93b487c8  ! 1085: PDIST	pdistn	%d18, %d8, %d40
fpinit_40_247:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009c4  ! 1089: FDIVd	fdivd	%f0, %f4, %f8
pmu_40_248:
	nop
	nop
	setx 0xffffffbeffffffa1, %g1, %g7
	.word 0xa3800007  ! 1093: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe88008a0  ! 1097: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0x99b24586  ! 1101: FCMPGT32	fcmpgt32	%d40, %d6, %r12
	.word 0x91d02035  ! 1105: Tcc_I	ta	icc_or_xcc, %r0 + 53
	.word 0x99a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f12
	.word 0xd93fe150  ! 1: STDF_I	std	%f12, [0x0150, %r31]
	mov 0x35, %r30
	.word 0x91d0001e  ! 1109: Tcc_R	ta	icc_or_xcc, %r0 + %r30
iaw_40_249:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_249:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_249
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_249:
    brnz %r16, iaw_wait40_249
    ld [%r23], %r16
    ba iaw_startwait40_249
    mov 0x40, %r16
continue_iaw_40_249:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_249:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_249
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_249:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_249
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_249:
	mov 0x38, %r18
iaw1_40_249:
	best_set_reg(0x00000000e0a00000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x7c9, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa9a349cb  ! 1113: FDIVd	fdivd	%f44, %f42, %f20
memptr_40_250:
	set 0x60540000, %r31
	.word 0x85853a22  ! 1117: WRCCR_I	wr	%r20, 0x1a22, %ccr
	.word 0x8d902e77  ! 1121: WRPR_PSTATE_I	wrpr	%r0, 0x0e77, %pstate
	.word 0xd45fe1a8  ! 1125: LDX_I	ldx	[%r31 + 0x01a8], %r10
memptr_40_253:
	set 0x60140000, %r31
	.word 0x8584fe52  ! 1129: WRCCR_I	wr	%r19, 0x1e52, %ccr
trapasi_40_254:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xe4d84e40  ! 1133: LDXA_R	ldxa	[%r1, %r0] 0x72, %r18
mondo_40_255:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3c8] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d944005  ! 1137: WRPR_WSTATE_R	wrpr	%r17, %r5, %wstate
	.word 0xa4d20002  ! 1141: UMULcc_R	umulcc 	%r8, %r2, %r18
intveclr_40_256:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5a553ded3ad7b090, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xac1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1145: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_40_258:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9963186240e4b79d, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x29b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1149: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_hpstate_40_259:
	.word 0x36800001  ! 1: BGE	bge,a	<label_0x1>
	.word 0x81983e39  ! 1153: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1e39, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_261:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_261-donret_40_261), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x008aaa00 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x190e, %htstate
	wrhpr %g0, 0xcd9, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_261:
	.word 0x23400001  ! 1157: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
intveclr_40_262:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x34144668a2829178, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xa19, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1161: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_40_263:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa7, %g1, %g7
	.word 0xa3800007  ! 1165: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	brlez,pn  	%r17, skip_40_265
	brgz,a,pt	%r19, skip_40_265
.align 512
skip_40_265:
	.word 0x87ac8a46  ! 1169: FCMPd	fcmpd	%fcc<n>, %f18, %f6
mondo_40_266:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r17, [%r0+0x3c0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d950013  ! 1173: WRPR_WSTATE_R	wrpr	%r20, %r19, %wstate
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_40_267:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_40_268:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe13, %r20
	mov 0x6, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x12, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfc720  ! 1181: STDA_R	stda	%r16, [%r31 + %r0] 0x39
	.word 0x2acc8001  ! 1: BRNZ	brnz,a,pt	%r18,<label_0xc8001>
	.word 0x8d9031b1  ! 1185: WRPR_PSTATE_I	wrpr	%r0, 0x11b1, %pstate
pmu_40_270:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb2ffffffa2, %g1, %g7
	.word 0xa3800007  ! 1189: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
pmu_40_271:
	nop
	nop
	setx 0xffffffb3ffffffac, %g1, %g7
	.word 0xa3800007  ! 1193: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_40_272:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r2, [%r0+0x3d0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d948013  ! 1197: WRPR_WSTATE_R	wrpr	%r18, %r19, %wstate
memptr_40_273:
	set user_data_start, %r31
	.word 0x858430c6  ! 1201: WRCCR_I	wr	%r16, 0x10c6, %ccr
intveclr_40_274:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4f290aaf4dc420a4, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1205: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
trapasi_40_275:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe4d84920  ! 1209: LDXA_R	ldxa	[%r1, %r0] 0x49, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_276:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_276-donret_40_276+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00834700 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1c84, %htstate
	wrhpr %g0, 0x95b, %hpstate  !  rand=1 (40)
	retry
donretarg_40_276:
	.word 0xa9a509d2  ! 1213: FDIVd	fdivd	%f20, %f18, %f20
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_278) + 56, 16, 16)) -> intp(6,0,26,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_278)&0xffffffff) + 0, 16, 16)) -> intp(4,0,0,,,,,1)
#else
	set 0x47e0e5fd, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_278:
	.word 0x91b204c3  ! 1217: FCMPNE32	fcmpne32	%d8, %d34, %r8
	fbl,a,pn	%fcc0,  skip_40_279
	stxa %r20, [%r0] ASI_LSU_CONTROL
	fbug skip_40_279
	stxa %r8, [%r0] ASI_LSU_CONTROL
.align 2048
skip_40_279:
	.word 0xc36fe182  ! 1221: PREFETCH_I	prefetch	[%r31 + 0x0182], #one_read
splash_hpstate_40_280:
	.word 0x8198248f  ! 1225: WRHPR_HPSTATE_I	wrhpr	%r0, 0x048f, %hpstate
splash_cmpr_40_281:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1229: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x89800011  ! 1233: WRTICK_R	wr	%r0, %r17, %tick
brcommon2_40_283:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x9ba7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f44
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0xc1bfda00  ! 1237: STDFA_R	stda	%f0, [%r0, %r31]
jmptr_40_284:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 1241: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_40_285:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	jmpl %r27, %r27
	.word 0xe19fdb20  ! 1245: LDDFA_R	ldda	[%r31, %r0], %f16
change_to_randtl_40_286:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_40_286:
	.word 0x8f902000  ! 1249: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
memptr_40_287:
	set 0x60340000, %r31
	.word 0x8582f384  ! 1253: WRCCR_I	wr	%r11, 0x1384, %ccr
ibp_40_288:
	nop
	nop
	.word 0xa1703384  ! 1257: POPC_I	popc	0x1384, %r16
splash_htba_40_289:
	nop
	ta T_CHANGE_HPRIV
	setx 0x0000000200280000, %r11, %r12
	.word 0x8b98000c  ! 1261: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
memptr_40_290:
	set 0x60340000, %r31
	.word 0x85822c2c  ! 1265: WRCCR_I	wr	%r8, 0x0c2c, %ccr
brcommon2_40_291:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x81dfc000  ! 1: FLUSH_R	flush 	%r31, %r0, %r0
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0x81b7c7c0  ! 1269: PDIST	pdistn	%d62, %d0, %d0
	.word 0x9f80250d  ! 1273: SIR	sir	0x050d
pmu_40_293:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa5, %g1, %g7
	.word 0xa3800007  ! 1277: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_40_294:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb12, %r20
	mov 0x1c, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x481, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 1281: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xe1bfe140  ! 1285: STDFA_I	stda	%f16, [0x0140, %r31]
memptr_40_295:
	set 0x60540000, %r31
	.word 0x8584f5ce  ! 1289: WRCCR_I	wr	%r19, 0x15ce, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_296) + 24, 16, 16)) -> intp(1,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_296)&0xffffffff) + 56, 16, 16)) -> intp(6,0,10,,,,,1)
#else
	set 0xeb7091c1, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_296:
	.word 0x9f802c75  ! 1293: SIR	sir	0x0c75
mondo_40_297:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r17, [%r0+0x3e0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d92000b  ! 1297: WRPR_WSTATE_R	wrpr	%r8, %r11, %wstate
splash_cmpr_40_298:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1301: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
jmptr_40_299:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1305: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xe0dfc3c0  ! 1309: LDXA_R	ldxa	[%r31, %r0] 0x1e, %r16
intveclr_40_301:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xbb62a8c83958f5e9, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xccb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1313: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_302:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_302-donret_40_302), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0004c000 | (0x80 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f17, %htstate
	best_set_reg(0x1721, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	.word 0x2c800001  ! 1: BNEG	bneg,a	<label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_40_302:
	.word 0x8d902d99  ! 1317: WRPR_PSTATE_I	wrpr	%r0, 0x0d99, %pstate
	.word 0x87802082  ! 1321: WRASI_I	wr	%r0, 0x0082, %asi
dvapa_40_303:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8b1, %r20
	mov 0x5, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf4b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd0dfd100  ! 1325: LDXA_R	ldxa	[%r31, %r0] 0x88, %r8
splash_hpstate_40_304:
	ta T_CHANGE_NONHPRIV
	.word 0x2c800001  ! 1: BNEG	bneg,a	<label_0x1>
	.word 0x81983b96  ! 1329: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1b96, %hpstate
mondo_40_305:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r13, [%r0+0x3d0] %asi
	.word 0x87802088  ! 1: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0x9d940012  ! 1333: WRPR_WSTATE_R	wrpr	%r16, %r18, %wstate
demap_40_306:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2a800001  ! 1: BCS	bcs,a	<label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xc1bfda60  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fda00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd0, %r0
	.word 0xe0bfdc00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xe0
	stxa %g3, [%g3] 0x5f
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	stxa %g3, [%g3] 0x57
	.word 0xe09fc2c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x16, %r16
	.word 0xc09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
	stxa %g3, [%g3] 0x5f
	.word 0xe09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r16
	.word 0xe09fc2c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x16, %r16
	stxa %g3, [%g3] 0x5f
	.word 0xe09fdd40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xea, %r16
	.word 0xe19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe1bfdd40  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	stxa %g3, [%g3] 0x57
	.word 0xc1bfde00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	wrhpr %g0, 0x3d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe070  ! 1337: LDD_I	ldd	[%r31 + 0x0070], %r10
splash_hpstate_40_308:
	.word 0x05400001  ! 1: FBPLG	fblg
	.word 0x819822cf  ! 1341: WRHPR_HPSTATE_I	wrhpr	%r0, 0x02cf, %hpstate
cwp_40_309:
    set user_data_start, %o7
	.word 0x93902000  ! 1345: WRPR_CWP_I	wrpr	%r0, 0x0000, %cwp
	.word 0xa1902007  ! 1349: WRPR_GL_I	wrpr	%r0, 0x0007, %-
	.word 0x9f8038bc  ! 1353: SIR	sir	0x18bc
vahole2_40_310:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xc19fdb20  ! 1357: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe6800b80  ! 1361: LDUWA_R	lduwa	[%r0, %r0] 0x5c, %r19
	.word 0x924cc010  ! 1365: MULX_R	mulx 	%r19, %r16, %r9
trapasi_40_312:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xd2d84b60  ! 1369: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r9
	.word 0x8d802004  ! 1373: WRFPRS_I	wr	%r0, 0x0004, %fprs
splash_tba_40_314:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000004003a0000, %r11, %r12
	.word 0x8b90000c  ! 1377: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 1381: WRTICK_R	wr	%r0, %r17, %tick
pmu_40_316:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa0, %g1, %g7
	.word 0xa3800007  ! 1385: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1389: WRTICK_R	wr	%r0, %r17, %tick
	.word 0x8143e011  ! 1393: MEMBAR	membar	#LoadLoad | #Lookaside 
splash_cmpr_40_319:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 1397: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_40_321:
	ta T_CHANGE_NONHPRIV
	.word 0x81983fd7  ! 1401: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1fd7, %hpstate
dvapa_40_322:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd33, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x901, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa9b447d2  ! 1405: PDIST	pdistn	%d48, %d18, %d20
	.word 0xa1b4c994  ! 1409: BSHUFFLE	fmovc32	%d50, %d20, %d16
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_324) + 40, 16, 16)) -> intp(7,0,21,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_324)&0xffffffff) + 32, 16, 16)) -> intp(5,0,10,,,,,1)
#else
	set 0x32607a2c, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0xa7a409c7  ! 1: FDIVd	fdivd	%f16, %f38, %f50
intvec_40_324:
	.word 0x39400001  ! 1413: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
demap_40_325:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x3e800001  ! 1: BVC	bvc,a	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xe19fdf00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc1bfdd40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	stxa %g3, [%g3] 0x5f
	.word 0xe19fdc00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfdc00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xe0
	.word 0xe19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc0bfdc40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xe2
	stxa %g3, [%g3] 0x57
	.word 0xc19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc19fdb20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	stxa %g3, [%g3] 0x57
	.word 0xe1bfdc40  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	wrhpr %g0, 0xa50, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe038  ! 1417: LDD_I	ldd	[%r31 + 0x0038], %r9
tagged_40_326:
	tsubcctv %r3, 0x1c8d, %r20
	.word 0xda07e0a4  ! 1421: LDUW_I	lduw	[%r31 + 0x00a4], %r13
	.word 0xa085000d  ! 1425: ADDcc_R	addcc 	%r20, %r13, %r16
splash_cmpr_40_327:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 1429: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe31fc000  ! 1433: LDDF_R	ldd	[%r31, %r0], %f17
	.word 0x91d02035  ! 1437: Tcc_I	ta	icc_or_xcc, %r0 + 53
memptr_40_328:
	set 0x60340000, %r31
	.word 0x85847793  ! 1441: WRCCR_I	wr	%r17, 0x1793, %ccr
brcommon3_40_329:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe06fe060  ! 1: LDSTUB_I	ldstub	%r16, [%r31 + 0x0060]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8198244d  ! 1445: WRHPR_HPSTATE_I	wrhpr	%r0, 0x044d, %hpstate
	.word 0x99b08992  ! 1449: BSHUFFLE	fmovc32	%d2, %d18, %d12
trapasi_40_332:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 1453: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_40_333:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xe41b9c0c, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x21400001  ! 1: FBPN	fbn,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 1457: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
unsupttte_40_334:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0x903, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87ac0a52  ! 1461: FCMPd	fcmpd	%fcc<n>, %f16, %f18
	.word 0xd137e030  ! 1465: STQF_I	-	%f8, [0x0030, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_335:
	.word 0x91b504d4  ! 1469: FCMPNE32	fcmpne32	%d20, %d20, %r8
    set 0x3189, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x93b447c9  ! 1473: PDIST	pdistn	%d48, %d40, %d40
intveclr_40_336:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb77cacd2cdcf42f4, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x4c1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1477: FBPLG	fblg
	.word 0x8780208a  ! 1481: WRASI_I	wr	%r0, 0x008a, %asi
memptr_40_338:
	set 0x60340000, %r31
	.word 0x85843c7f  ! 1485: WRCCR_I	wr	%r16, 0x1c7f, %ccr
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_339)+32, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_339)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_339:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_339:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9807033  ! 1489: WR_SET_SOFTINT_I	wr	%r1, 0x1033, %set_softint
	.word 0x8143e011  ! 1493: MEMBAR	membar	#LoadLoad | #Lookaside 
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_341:
	.word 0x9f803336  ! 1497: SIR	sir	0x1336
dvapa_40_342:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc6a, %r20
	mov 0x14, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x390, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd1e7c3c0  ! 1501: CASA_I	casa	[%r31] 0x1e, %r0, %r8
	.word 0x98ac4011  ! 1505: ANDNcc_R	andncc 	%r17, %r17, %r12
	.word 0x09800001  ! 1509: FBL	fbl  	<label_0x1>
br_badelay1_40_344:
	.word 0xa3a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f48
	.word 0xe132c012  ! 1: STQF_R	-	%f16, [%r18, %r11]
	.word 0x0acb0001  ! 1: BRNZ	brnz,pt  	%r12,<label_0xb0001>
	normalw
	.word 0xa9458000  ! 1513: RD_SOFTINT_REG	rd	%softint, %r20
ibp_40_346:
	nop
	nop
	.word 0x20800001  ! 1517: BN	bn,a	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_347:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_347-donret_40_347+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0015ae00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x7cf, %htstate
	wrhpr %g0, 0x58, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_347:
	.word 0x8d902d4f  ! 1521: WRPR_PSTATE_I	wrpr	%r0, 0x0d4f, %pstate
	brlez,pn  	%r20, skip_40_348
	bneg,a	 skip_40_348
.align 4096
skip_40_348:
	.word 0x24c94001  ! 1525: BRLEZ	brlez,a,pt	%r5,<label_0x94001>
	.word 0xe87fe0f0  ! 1529: SWAP_I	swap	%r20, [%r31 + 0x00f0]
brcommon1_40_349:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xa77020c0  ! 1: POPC_I	popc	0x00c0, %r19
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xa57036a4  ! 1533: POPC_I	popc	0x16a4, %r18
	.word 0x8d9029ae  ! 1537: WRPR_PSTATE_I	wrpr	%r0, 0x09ae, %pstate
pmu_40_351:
	nop
	nop
	setx 0xffffffb6ffffffaa, %g1, %g7
	.word 0xa3800007  ! 1541: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1545: WRTICK_R	wr	%r0, %r17, %tick
trapasi_40_354:
	nop
	mov 0x20, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 1549: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
splash_tba_40_355:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000000380000, %r11, %r12
	.word 0x8b90000c  ! 1553: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_356:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_356-donret_40_356+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00a6b800 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x387, %htstate
	wrhpr %g0, 0x9db, %hpstate  !  rand=1 (40)
	retry
donretarg_40_356:
	.word 0x93a049c5  ! 1557: FDIVd	fdivd	%f32, %f36, %f40
pmu_40_357:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbeffffffa0, %g1, %g7
	.word 0xa3800007  ! 1561: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8d90371e  ! 1565: WRPR_PSTATE_I	wrpr	%r0, 0x171e, %pstate
ibp_40_359:
	nop
	nop
	wrhpr %g0, 0xac2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fde20  ! 1569: LDDFA_R	ldda	[%r31, %r0], %f0
iaw_40_360:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_360:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_360
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_360:
    brnz %r16, iaw_wait40_360
    ld [%r23], %r16
    ba iaw_startwait40_360
    mov 0x40, %r16
continue_iaw_40_360:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_360:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_360
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_360:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_360
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_360:
	mov 0x38, %r18
iaw0_40_360:
	rd %pc, %r19
	add %r19, (16+9), %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xb18, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9bb487c1  ! 1573: PDIST	pdistn	%d18, %d32, %d44
	fblg skip_40_361
	bvs,a	 skip_40_361
.align 2048
skip_40_361:
	.word 0x87a9ca51  ! 1577: FCMPd	fcmpd	%fcc<n>, %f38, %f48
	.word 0x8143e011  ! 1581: MEMBAR	membar	#LoadLoad | #Lookaside 
trapasi_40_363:
	nop
	mov 0x20, %r1 	! (VA for ASI 0x5a) 
	.word 0xd6d84b40  ! 1585: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r11
mondo_40_364:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r4, [%r0+0x3e0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d944002  ! 1589: WRPR_WSTATE_R	wrpr	%r17, %r2, %wstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x19400001  ! 1: FBPUGE	fbuge
intvec_40_365:
	.word 0x93b104d4  ! 1593: FCMPNE32	fcmpne32	%d4, %d20, %r9
fpinit_40_366:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009a4  ! 1597: FDIVs	fdivs	%f0, %f4, %f4
brcommon1_40_367:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe3e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r17
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0x9f8039fc  ! 1601: SIR	sir	0x19fc
mondo_40_368:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d948014  ! 1605: WRPR_WSTATE_R	wrpr	%r18, %r20, %wstate
memptr_40_369:
	set user_data_start, %r31
	.word 0x8580b805  ! 1609: WRCCR_I	wr	%r2, 0x1805, %ccr
intveclr_40_370:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xf8e338bd1f770260, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1613: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_40_371:
	set 0x60740000, %r31
	.word 0x85822b6f  ! 1617: WRCCR_I	wr	%r8, 0x0b6f, %ccr
splash_lsu_40_372:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x4a2eb432, %r2
	mov 0x6, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x02cb0001  ! 1: BRZ	brz,pt  	%r12,<label_0xb0001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 1621: FBPULE	fbule
	.word 0x87802058  ! 1625: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0xe19fda60  ! 1629: LDDFA_R	ldda	[%r31, %r0], %f16
trapasi_40_374:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1633: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0xd8dfc280  ! 1637: LDXA_R	ldxa	[%r31, %r0] 0x14, %r12
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_376) + 8, 16, 16)) -> intp(3,0,2,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_376)&0xffffffff) + 0, 16, 16)) -> intp(7,0,24,,,,,1)
#else
	set 0x67e080f3, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_376:
	.word 0x99b044cb  ! 1641: FCMPNE32	fcmpne32	%d32, %d42, %r12
	.word 0x8d802000  ! 1645: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x8d802000  ! 1649: WRFPRS_I	wr	%r0, 0x0000, %fprs
mondo_40_377:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r20, [%r0+0x3e0] %asi
	.word 0x8780208b  ! 1: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0x9d950011  ! 1653: WRPR_WSTATE_R	wrpr	%r20, %r17, %wstate
ibp_40_378:
	nop
	nop
	wrhpr %g0, 0x288, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fde20  ! 1657: LDDFA_R	ldda	[%r31, %r0], %f16
intveclr_40_379:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd5103d3f73a01b57, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1661: FBPLG	fblg
ibp_40_380:
	nop
	nop
	.word 0xdb3fe0a0  ! 1665: STDF_I	std	%f13, [0x00a0, %r31]
iaw_40_381:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_381:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_381
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_381:
    brnz %r16, iaw_wait40_381
    ld [%r23], %r16
    ba iaw_startwait40_381
    mov 0x40, %r16
continue_iaw_40_381:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_381:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_381
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_381:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_381
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_381:
	mov 0x38, %r18
iaw3_40_381:
	setx vahole_target0, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xa18, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fde20  ! 1669: LDDA_R	ldda	[%r31, %r0] 0xf1, %r0
br_badelay2_40_382:
	.word 0x00800001  ! 1: BN	bn  	<label_0x1>
	pdist %f4, %f26, %f28
	.word 0x99b48301  ! 1673: ALIGNADDRESS	alignaddr	%r18, %r1, %r12
pmu_40_383:
	nop
	nop
	setx 0xffffffb1ffffffa0, %g1, %g7
	.word 0xa3800007  ! 1677: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_384:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_384-donret_40_384+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ac9700 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x10f, %htstate
	best_set_reg(0x1a71, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	retry
donretarg_40_384:
	.word 0x81982611  ! 1681: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0611, %hpstate
mondo_40_385:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r1, [%r0+0x3c0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d92c010  ! 1685: WRPR_WSTATE_R	wrpr	%r11, %r16, %wstate
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_386) + 16, 16, 16)) -> intp(6,0,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_386)&0xffffffff) + 48, 16, 16)) -> intp(4,0,6,,,,,1)
#else
	set 0xed804e4a, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_386:
	.word 0x39400001  ! 1689: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_387:
	.word 0x9f802a2c  ! 1693: SIR	sir	0x0a2c
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_388:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_388-donret_40_388), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x005a8d00 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x140d, %htstate
	wrhpr %g0, 0x1d0, %hpstate  !  rand=1 (40)
	.word 0x09400001  ! 1: FBPL	fbl
	ldx [%r12+%r0], %g1
	retry
donretarg_40_388:
	.word 0x97a049cc  ! 1697: FDIVd	fdivd	%f32, %f12, %f42
trapasi_40_389:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1701: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0x8d802004  ! 1705: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_40_391:
	nop
	mov 0x3c8, %r1 	! (VA for ASI 0x25) 
	.word 0xe4d844a0  ! 1709: LDXA_R	ldxa	[%r1, %r0] 0x25, %r18
intveclr_40_392:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x808d1f25fb4388dd, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1713: FBPLG	fblg
dvapa_40_393:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xee7, %r20
	mov 0x15, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc19, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfdf20  ! 1717: STDFA_R	stda	%f16, [%r0, %r31]
vahole3_40_394:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target0, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xd9e7d040  ! 1721: CASA_I	casa	[%r31] 0x82, %r0, %r12
	.word 0x36780001  ! 1725: BPGE	<illegal instruction>
	.word 0xa1902001  ! 1729: WRPR_GL_I	wrpr	%r0, 0x0001, %-
frzptr_40_395:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 1733: BN	bn,a	<label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_397)+16, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_397)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_397:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_397:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984e5b2  ! 1737: WR_SET_SOFTINT_I	wr	%r19, 0x05b2, %set_softint
ibp_40_398:
	nop
	nop
	.word 0x9f8021f0  ! 1741: SIR	sir	0x01f0
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_399:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_399-donret_40_399+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00eaa100 | (0x82 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x315, %htstate
	wrhpr %g0, 0x8d2, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_40_399:
	.word 0x93a1c9c2  ! 1745: FDIVd	fdivd	%f38, %f2, %f40
	.word 0xe19fe0a0  ! 1749: LDDFA_I	ldda	[%r31, 0x00a0], %f16
	.word 0xe6cfc380  ! 1753: LDSBA_R	ldsba	[%r31, %r0] 0x1c, %r19
	.word 0xe44fe0d8  ! 1757: LDSB_I	ldsb	[%r31 + 0x00d8], %r18
splash_tba_40_401:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1761: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_40_403:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r11, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfdc00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xe0
	.word 0xc09fde20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf1, %r0
	.word 0xe09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r16
	stxa %g3, [%g3] 0x57
	.word 0xc09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
	stxa %g3, [%g3] 0x57
	.word 0xe19fdb20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc1bfdc00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	wrhpr %g0, 0xa48, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe0f4  ! 1765: LDD_I	ldd	[%r31 + 0x00f4], %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_405:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_405-donret_40_405), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ec8d00 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xa55, %htstate
	best_set_reg(0xc8, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	done
.align 2048
donretarg_40_405:
	.word 0xa9a049c9  ! 1769: FDIVd	fdivd	%f32, %f40, %f20
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_406) + 8, 16, 16)) -> intp(4,0,18,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_406)&0xffffffff) + 56, 16, 16)) -> intp(6,0,14,,,,,1)
#else
	set 0x87f0c438, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0xa3a449d1  ! 1: FDIVd	fdivd	%f48, %f48, %f48
intvec_40_406:
	.word 0x91b2c4d2  ! 1773: FCMPNE32	fcmpne32	%d42, %d18, %r8
ibp_40_407:
	nop
	nop
	wrhpr %g0, 0x90, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd09fc600  ! 1777: LDDA_R	ldda	[%r31, %r0] 0x30, %r8
unsupttte_40_409:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x5c        ! D unsupported page size ..
    wrhpr %g0, 0xd9b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9bb4048d  ! 1781: FCMPLE32	fcmple32	%d16, %d44, %r13
brcommon3_40_411:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe7e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r19
    ba,a .+8
    jmpl %r27+0, %r27
    stxa %r11, [%r0] ASI_LSU_CONTROL
	.word 0xa5aac833  ! 1785: FMOVGE	fmovs	%fcc1, %f19, %f18
iaw_40_413:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_413:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_413
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_413:
    brnz %r16, iaw_wait40_413
    ld [%r23], %r16
    ba iaw_startwait40_413
    mov 0x40, %r16
continue_iaw_40_413:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_413:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_413
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_413:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_413
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_413:
	mov 0x38, %r18
iaw3_40_413:
	setx vahole_target0, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x553, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc0bfde00  ! 1789: STDA_R	stda	%r0, [%r31 + %r0] 0xf0
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_414)+24, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_414)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_414:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_414:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9853711  ! 1793: WR_SET_SOFTINT_I	wr	%r20, 0x1711, %set_softint
brcommon3_40_416:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd5e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r10
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xd5e7c400  ! 1797: CASA_I	casa	[%r31] 0x20, %r0, %r10
intveclr_40_417:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xad3b542f22921ba0, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1801: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_40_418:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa347fbc781e7c9e8, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1805: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_40_419:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa7a, %r20
	mov 0xd, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x31b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xdadfdc40  ! 1809: LDXA_R	ldxa	[%r31, %r0] 0xe2, %r13
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_40_420:
	ta	T_CHANGE_NONPRIV	! macro
fpinit_40_421:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009a4  ! 1817: FDIVs	fdivs	%f0, %f4, %f6
intveclr_40_422:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa5e9ee6eabe0e16e, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x69a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1821: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	bgu,a	 skip_40_423
	stxa %r13, [%r0] ASI_LSU_CONTROL
	ble  	 skip_40_423
	stxa %r7, [%r0] ASI_LSU_CONTROL
.align 1024
skip_40_423:
	.word 0xc32fc000  ! 1825: STXFSR_R	st-sfr	%f1, [%r0, %r31]
fpinit_40_424:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8db00484  ! 1829: FCMPLE32	fcmple32	%d0, %d4, %r6
memptr_40_425:
	set 0x60340000, %r31
	.word 0x858422be  ! 1833: WRCCR_I	wr	%r16, 0x02be, %ccr
brcommon3_40_426:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e0b0  ! 1: STQF_I	-	%f13, [0x00b0, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x81982958  ! 1837: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0958, %hpstate
splash_tba_40_427:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1841: WRPR_TBA_R	wrpr	%r0, %r12, %tba
jmptr_40_428:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 1845: JMPL_R	jmpl	%r27 + %r0, %r27
ibp_40_429:
	nop
	nop
	wrhpr %g0, 0x6d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc3efe0a0  ! 1849: PREFETCHA_I	prefetcha	[%r31, + 0x00a0] %asi, #one_read
	.word 0x9f8027e0  ! 1853: SIR	sir	0x07e0
dvapa_40_430:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb99, %r20
	mov 0x14, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x351, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd6bfc3c0  ! 1857: STDA_R	stda	%r11, [%r31 + %r0] 0x1e
trapasi_40_432:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4c) 
	.word 0xe4d84980  ! 1861: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_434:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_434-donret_40_434+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f31c00 | (28 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x145d, %htstate
	best_set_reg(0x833, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	retry
donretarg_40_434:
	.word 0xa3a449d1  ! 1865: FDIVd	fdivd	%f48, %f48, %f48
frzptr_40_435:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x24cfc001  ! 1: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xc1bfda60  ! 1869: STDFA_R	stda	%f0, [%r0, %r31]
trapasi_40_436:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe6d84920  ! 1873: LDXA_R	ldxa	[%r1, %r0] 0x49, %r19
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_40_437:
	.word 0x97b404c4  ! 1877: FCMPNE32	fcmpne32	%d16, %d4, %r11
demap_40_438:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r11, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xe09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r16
	.word 0xe0bfdd40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xea
	stxa %g3, [%g3] 0x57
	.word 0xe1bfdb40  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc09fde00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf0, %r0
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xe19fdf00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x5f
	.word 0xe19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc1bfda60  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	stxa %g3, [%g3] 0x5f
	.word 0xc0bfc3e0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x1f
	wrhpr %g0, 0x918, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe071  ! 1881: LDD_I	ldd	[%r31 + 0x0071], %r10
intveclr_40_439:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x42ecd1768b400756, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1885: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_441:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_441-donret_40_441), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00556300 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1e4f, %htstate
	best_set_reg(0x9e0, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_441:
	.word 0x81983d5f  ! 1889: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1d5f, %hpstate
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_442)+8, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_442)&0xffffffff) + 8, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_442:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_442:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9842edd  ! 1893: WR_SET_SOFTINT_I	wr	%r16, 0x0edd, %set_softint
pmu_40_443:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa3, %g1, %g7
	.word 0xa3800007  ! 1897: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x9f803948  ! 1901: SIR	sir	0x1948
	.word 0x02800001  ! 1905: BE	be  	<label_0x1>
	fbl,a,pn	%fcc0,  skip_40_444
	fbuge skip_40_444
.align 4096
skip_40_444:
	.word 0x39400001  ! 1909: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_446:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_446-donret_40_446+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f59800 | (28 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1cbf, %htstate
	best_set_reg(0x921, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_40_446:
	.word 0xe06fe10e  ! 1913: LDSTUB_I	ldstub	%r16, [%r31 + 0x010e]
memptr_40_448:
	set 0x60540000, %r31
	.word 0x858533a1  ! 1917: WRCCR_I	wr	%r20, 0x13a1, %ccr
	.word 0xe737e120  ! 1921: STQF_I	-	%f19, [0x0120, %r31]
	brz,a,pt	%r18, skip_40_449
	ble,a	 skip_40_449
.align 4096
skip_40_449:
	.word 0x39400001  ! 1925: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
dvapa_40_450:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc25, %r20
	mov 0xe, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x58, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa3702e50  ! 1929: POPC_I	popc	0x0e50, %r17
	.word 0x83d020b5  ! 1933: Tcc_I	te	icc_or_xcc, %r0 + 181
intveclr_40_451:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5f1f79a31837c29f, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xe12, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1937: FBPLG	fblg
	.word 0xe48fc540  ! 1941: LDUBA_R	lduba	[%r31, %r0] 0x2a, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_452:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_452-donret_40_452+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00463c00 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc06, %htstate
	wrhpr %g0, 0xc08, %hpstate  !  rand=1 (40)
	retry
donretarg_40_452:
	.word 0x2acc0001  ! 1945: BRNZ	brnz,a,pt	%r16,<label_0xc0001>
	.word 0x9f8023c7  ! 1949: SIR	sir	0x03c7
	.word 0x87802080  ! 1953: WRASI_I	wr	%r0, 0x0080, %asi
	.word 0x9bb40550  ! 1957: FCMPEQ16	fcmpeq16	%d16, %d16, %r13
	.word 0x99b04592  ! 1961: FCMPGT32	fcmpgt32	%d32, %d18, %r12
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_40_453:
	.word 0x95a249d2  ! 1965: FDIVd	fdivd	%f40, %f18, %f10
	.word 0x8d802004  ! 1969: WRFPRS_I	wr	%r0, 0x0004, %fprs
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_454) + 8, 16, 16)) -> intp(5,0,25,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_454)&0xffffffff) + 32, 16, 16)) -> intp(3,0,21,,,,,1)
#else
	set 0xbf10c2f5, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x9bb484d3  ! 1: FCMPNE32	fcmpne32	%d18, %d50, %r13
intvec_40_454:
	.word 0x95b144c8  ! 1973: FCMPNE32	fcmpne32	%d36, %d8, %r10
	.word 0x9f802276  ! 1977: SIR	sir	0x0276
dvapa_40_455:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x897, %r20
	mov 0xf, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x8d2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfc180  ! 1981: STDA_R	stda	%r16, [%r31 + %r0] 0x0c
	.word 0xa5480000  ! 1985: RDHPR_HPSTATE	rdhpr	%hpstate, %r18
	.word 0x93d020b3  ! 1989: Tcc_I	tne	icc_or_xcc, %r0 + 179
	.word 0x9f8027ab  ! 1993: SIR	sir	0x07ab
splash_tba_40_456:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1997: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_40_457:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x1d63c142, %r2
	mov 0x6, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2001: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x9f8024ba  ! 2005: SIR	sir	0x04ba
dvapa_40_458:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf14, %r20
	mov 0x1, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf51, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe09fc720  ! 2009: LDDA_R	ldda	[%r31, %r0] 0x39, %r16
	wrhpr %g0, 0x652, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2013: MEMBAR	membar	#LoadLoad | #Lookaside 
ibp_40_460:
	nop
	nop
	wrhpr %g0, 0xf9b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f8020a0  ! 2017: SIR	sir	0x00a0
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_462:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_462-donret_40_462), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0055a400 | (0x82 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xecf, %htstate
	best_set_reg(0x1372, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	.word 0x2accc001  ! 1: BRNZ	brnz,a,pt	%r19,<label_0xcc001>
	ldx [%r12+%r0], %g1
	retry
donretarg_40_462:
	.word 0x3c800001  ! 2021: BPOS	bpos,a	<label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_40_463)+8, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_40_463)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x40),1,3,,,,,1)
xir_40_463:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_40_463:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984712c  ! 2025: WR_SET_SOFTINT_I	wr	%r17, 0x112c, %set_softint
	.word 0xe08008a0  ! 2029: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r16
pmu_40_466:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa0, %g1, %g7
	.word 0xa3800007  ! 2033: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_40_467:
	set 0x60140000, %r31
	.word 0x85823d5b  ! 2037: WRCCR_I	wr	%r8, 0x1d5b, %ccr
splash_hpstate_40_468:
	.word 0x2e800001  ! 1: BVS	bvs,a	<label_0x1>
	.word 0x81983004  ! 2041: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1004, %hpstate
ibp_40_469:
	nop
	nop
	.word 0xd73fe1c0  ! 2045: STDF_I	std	%f11, [0x01c0, %r31]
	.word 0xa9508000  ! 2049: RDPR_TSTATE	<illegal instruction>
brcommon3_40_470:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e030  ! 1: STQF_I	-	%f13, [0x0030, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x81983ac6  ! 2053: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ac6, %hpstate
	.word 0xa7b50992  ! 2057: BSHUFFLE	fmovc32	%d20, %d18, %d50
fpinit_40_472:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2061: FCMPd	fcmpd	%fcc<n>, %f0, %f4
mondo_40_473:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r8, [%r0+0x3e0] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d950008  ! 2065: WRPR_WSTATE_R	wrpr	%r20, %r8, %wstate
	.word 0xa2aa8008  ! 2069: ANDNcc_R	andncc 	%r10, %r8, %r17
mondo_40_475:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3c8] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d920012  ! 2073: WRPR_WSTATE_R	wrpr	%r8, %r18, %wstate
dvapa_40_477:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x93a, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe11, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fdc00  ! 2077: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x87802080  ! 2081: WRASI_I	wr	%r0, 0x0080, %asi
dvapa_40_478:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa52, %r20
	mov 0x1a, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc41, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd89fdd40  ! 2085: LDDA_R	ldda	[%r31, %r0] 0xea, %r12
ibp_40_479:
	nop
	nop
	.word 0xa3b28494  ! 2089: FCMPLE32	fcmple32	%d10, %d20, %r17
	fbne,a,pn	%fcc0,  skip_40_480
	stxa %r18, [%r0] ASI_LSU_CONTROL
	bleu  	 skip_40_480
	stxa %r14, [%r0] ASI_LSU_CONTROL
.align 2048
skip_40_480:
	.word 0xc36fe08c  ! 2093: PREFETCH_I	prefetch	[%r31 + 0x008c], #one_read
demap_40_481:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xe19fdc40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc0bfdf00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf8
	.word 0xc09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
	wrhpr %g0, 0x451, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe050  ! 2097: LDD_I	ldd	[%r31 + 0x0050], %r11
	.word 0xa1702060  ! 1: POPC_I	popc	0x0060, %r16
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0x31, %r30
	.word 0x91d0001e  ! 2101: Tcc_R	ta	icc_or_xcc, %r0 + %r30
splash_lsu_40_482:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x8bc2155b, %r2
	mov 0x3, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2105: FBPULE	fbule
splash_cmpr_40_483:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2109: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x924a0005  ! 2113: MULX_R	mulx 	%r8, %r5, %r9
	.word 0x91910013  ! 2117: WRPR_PIL_R	wrpr	%r4, %r19, %pil
	.word 0xdb97c2c0  ! 2121: LDQFA_R	-	[%r31, %r0], %f13
memptr_40_485:
	set 0x60740000, %r31
	.word 0x85807c3c  ! 2125: WRCCR_I	wr	%r1, 0x1c3c, %ccr
splash_lsu_40_487:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x997c4419, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2129: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x91b2898b  ! 2133: BSHUFFLE	fmovc32	%d10, %d42, %d8
	.word 0x9f802056  ! 2137: SIR	sir	0x0056
	.word 0xa5520000  ! 2141: RDPR_PIL	rdpr	%pil, %r18
	.word 0xc1bfe040  ! 2145: STDFA_I	stda	%f0, [0x0040, %r31]
splash_cmpr_40_489:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 2149: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe127e0ec  ! 2153: STF_I	st	%f16, [0x00ec, %r31]
splash_cmpr_40_490:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2157: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
vahole6_40_491:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe61fe100  ! 2161: LDD_I	ldd	[%r31 + 0x0100], %r19
splash_hpstate_40_492:
	.word 0x819834d5  ! 2165: WRHPR_HPSTATE_I	wrhpr	%r0, 0x14d5, %hpstate
cwp_40_493:
    set user_data_start, %o7
	.word 0x93902003  ! 2169: WRPR_CWP_I	wrpr	%r0, 0x0003, %cwp
iaw_40_495:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_495:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_495
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_495:
    brnz %r16, iaw_wait40_495
    ld [%r23], %r16
    ba iaw_startwait40_495
    mov 0x40, %r16
continue_iaw_40_495:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_495:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_495
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_495:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_495
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_495:
	mov 0x38, %r18
iaw4_40_495:
	setx common_target, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xd11, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe51fe020  ! 2173: LDDF_I	ldd	[%r31, 0x0020], %f18
splash_tba_40_496:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000000003a0000, %r11, %r12
	.word 0x8b90000c  ! 2177: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 2181: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0800aa0  ! 2185: LDUWA_R	lduwa	[%r0, %r0] 0x55, %r8
splash_lsu_40_499:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x41932cb2, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2189: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_500:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_500-donret_40_500), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ccd300 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1d0c, %htstate
	best_set_reg(0x860, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	retry
donretarg_40_500:
	.word 0xdaffc400  ! 2193: SWAPA_R	swapa	%r13, [%r31 + %r0] 0x20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x19400001  ! 1: FBPUGE	fbuge
intvec_40_501:
	.word 0xa1b044cd  ! 2197: FCMPNE32	fcmpne32	%d32, %d44, %r16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_502:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_502-donret_40_502), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00941100 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1116, %htstate
	wrhpr %g0, 0x759, %hpstate  !  rand=1 (40)
	retry
.align 2048
donretarg_40_502:
	.word 0x81982608  ! 2201: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0608, %hpstate
	.word 0x89800011  ! 2205: WRTICK_R	wr	%r0, %r17, %tick
memptr_40_504:
	set user_data_start, %r31
	.word 0x8584bd7d  ! 2209: WRCCR_I	wr	%r18, 0x1d7d, %ccr
frzptr_40_505:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
	jmpl %r27, %r27
	.word 0xc19fc2c0  ! 2213: LDDFA_R	ldda	[%r31, %r0], %f0
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_507:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_507-donret_40_507), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00535c00 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1796, %htstate
	wrhpr %g0, 0x9c1, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_40_507:
	.word 0x81983ef4  ! 2217: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ef4, %hpstate
ibp_40_508:
	nop
	nop
	wrhpr %g0, 0x4ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x97a309d2  ! 2221: FDIVd	fdivd	%f12, %f18, %f42
intveclr_40_509:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xe9824a7ab6ff58b2, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2225: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_40_510:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009a4  ! 2229: FDIVs	fdivs	%f0, %f4, %f8
	.word 0xb182800c  ! 2233: WR_STICK_REG_R	wr	%r10, %r12, %-
memptr_40_511:
	set 0x60140000, %r31
	.word 0x8584a81b  ! 2237: WRCCR_I	wr	%r18, 0x081b, %ccr
	.word 0x81b01021  ! 2241: SIAM	siam	1
	.word 0x91950012  ! 2245: WRPR_PIL_R	wrpr	%r20, %r18, %pil
splash_lsu_40_513:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x32dabe0d, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x2e800001  ! 1: BVS	bvs,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2249: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xc19fe1e0  ! 2253: LDDFA_I	ldda	[%r31, 0x01e0], %f0
trapasi_40_514:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 2257: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_40_515:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x185edc7b, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x30800001  ! 1: BA	ba,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2261: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x87802014  ! 2265: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0xe84fe050  ! 2269: LDSB_I	ldsb	[%r31 + 0x0050], %r20
pmu_40_517:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa2, %g1, %g7
	.word 0xa3800007  ! 2273: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe88008a0  ! 2277: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0xc32fc000  ! 2281: STXFSR_R	st-sfr	%f1, [%r0, %r31]
splash_cmpr_40_518:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2285: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	bleu  	 skip_40_519
	.word 0x87aa0a4c  ! 1: FCMPd	fcmpd	%fcc<n>, %f8, %f12
.align 2048
skip_40_519:
	.word 0x19400001  ! 2289: FBPUGE	fbuge
demap_40_520:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r13, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xe1bfdf20  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe1bfdb20  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	wrhpr %g0, 0x49, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe000  ! 2293: LDD_I	ldd	[%r31 + 0x0000], %r18
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_522) + 40, 16, 16)) -> intp(7,0,16,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_522)&0xffffffff) + 32, 16, 16)) -> intp(7,0,5,,,,,1)
#else
	set 0x61b05643, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_522:
	.word 0xa7a449d0  ! 2297: FDIVd	fdivd	%f48, %f16, %f50
dvapa_40_523:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x93b, %r20
	mov 0x1f, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe8b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfdb40  ! 2301: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9f803d2b  ! 2305: SIR	sir	0x1d2b
br_longdelay3_40_525:
	nop
	not %g0, %r27
	jmpl %r27+0, %r27
	.word 0x8d902537  ! 2309: WRPR_PSTATE_I	wrpr	%r0, 0x0537, %pstate
	.word 0xc36fe0d0  ! 2313: PREFETCH_I	prefetch	[%r31 + 0x00d0], #one_read
pmu_40_526:
	nop
	nop
	setx 0xffffffb4ffffffa2, %g1, %g7
	.word 0xa3800007  ! 2317: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa1902008  ! 2321: WRPR_GL_I	wrpr	%r0, 0x0008, %-
memptr_40_527:
	set 0x60340000, %r31
	.word 0x85847586  ! 2325: WRCCR_I	wr	%r17, 0x1586, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_528) + 24, 16, 16)) -> intp(5,0,7,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_528)&0xffffffff) + 32, 16, 16)) -> intp(5,0,14,,,,,1)
#else
	set 0xabc00636, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x95a489c8  ! 1: FDIVd	fdivd	%f18, %f8, %f10
intvec_40_528:
	.word 0x97b444c6  ! 2329: FCMPNE32	fcmpne32	%d48, %d6, %r11
trapasi_40_529:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe6d84940  ! 2333: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r19
demap_40_530:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x10800001  ! 1: BA	ba  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfdc40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xe2
	.word 0xe19fda60  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r16
	stxa %g3, [%g3] 0x57
	.word 0xe09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r16
	.word 0xe09fde00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf0, %r16
	stxa %g3, [%g3] 0x5f
	.word 0xc0bfde20  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf1
	.word 0xe0bfda60  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd3
	stxa %g3, [%g3] 0x57
	.word 0xe19fde00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	wrhpr %g0, 0xbd8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe168  ! 2337: LDD_I	ldd	[%r31 + 0x0168], %r20
splash_htba_40_531:
	nop
	ta T_CHANGE_HPRIV
	setx 0x00000002002a0000, %r11, %r12
	.word 0x8b98000c  ! 2341: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0x9ac4f859  ! 2345: ADDCcc_I	addccc 	%r19, 0xfffff859, %r13
iaw_40_532:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_532:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_532
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_532:
    brnz %r16, iaw_wait40_532
    ld [%r23], %r16
    ba iaw_startwait40_532
    mov 0x40, %r16
continue_iaw_40_532:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_532:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_532
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_532:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_532
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_532:
	mov 0x38, %r18
iaw2_40_532:
	rdpr %tba, %r19
	mov 0x320,  %r20
	sllx %r20, 5, %r20
	add %r20, %r19, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x8da, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9b70277b  ! 2349: POPC_I	popc	0x077b, %r13
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_533:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_533-donret_40_533), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x006cd300 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x145d, %htstate
	best_set_reg(0x639, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_533:
	.word 0x81983e53  ! 2353: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1e53, %hpstate
ibp_40_534:
	nop
	nop
	.word 0x20800001  ! 2357: BN	bn,a	<label_0x1>
	.word 0xa550c000  ! 2361: RDPR_TT	rdpr	%tt, %r18
mondo_40_535:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3c8] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d928014  ! 2365: WRPR_WSTATE_R	wrpr	%r10, %r20, %wstate
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_40_536:
	ta	T_CHANGE_NONPRIV	! macro
memptr_40_537:
	set user_data_start, %r31
	.word 0x85853ed3  ! 2373: WRCCR_I	wr	%r20, 0x1ed3, %ccr
	.word 0xda0fc000  ! 2377: LDUB_R	ldub	[%r31 + %r0], %r13
demap_40_539:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r9, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfdb20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd9
	.word 0xc1bfdf00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fdd40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xea, %r0
	stxa %g3, [%g3] 0x57
	.word 0xc09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r0
	stxa %g3, [%g3] 0x5f
	.word 0xc09fdf20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf9, %r0
	stxa %g3, [%g3] 0x5f
	.word 0xc19fdb20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfdd40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xea
	.word 0xc19fc2c0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	wrhpr %g0, 0x182, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe1e0  ! 2381: LDD_I	ldd	[%r31 + 0x01e0], %r18
	.word 0xd2c7d060  ! 2385: LDSWA_R	ldswa	[%r31, %r0] 0x83, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_540) + 56, 16, 16)) -> intp(4,0,27,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_540)&0xffffffff) + 56, 16, 16)) -> intp(5,0,22,,,,,1)
#else
	set 0x360b3d6, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_540:
	.word 0x9bb404d3  ! 2389: FCMPNE32	fcmpne32	%d16, %d50, %r13
	.word 0xe0800b20  ! 2393: LDUWA_R	lduwa	[%r0, %r0] 0x59, %r16
jmptr_40_541:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2397: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_40_542:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb6ffffffa3, %g1, %g7
	.word 0xa3800007  ! 2401: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x2f400001  ! 1: FBPU	fbu,a,pn	%fcc0, <label_0x1>
	.word 0x8d9034f1  ! 2405: WRPR_PSTATE_I	wrpr	%r0, 0x14f1, %pstate
vahole6_40_545:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe5e7e000  ! 2409: CASA_R	casa	[%r31] %asi, %r0, %r18
splash_cmpr_40_547:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2413: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_548:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_548-donret_40_548+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00fb7200 | (0x8b << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x14c6, %htstate
	wrhpr %g0, 0xcc3, %hpstate  !  rand=1 (40)
	retry
donretarg_40_548:
	.word 0xa1a509cd  ! 2417: FDIVd	fdivd	%f20, %f44, %f16
trapasi_40_549:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xd6d84980  ! 2421: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r11
	.word 0x9f80268b  ! 2425: SIR	sir	0x068b
	.word 0x9b480000  ! 2429: RDHPR_HPSTATE	rdhpr	%hpstate, %r13
	.word 0xe8d7c240  ! 2433: LDSHA_R	ldsha	[%r31, %r0] 0x12, %r20
mondo_40_550:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3e0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d928012  ! 2437: WRPR_WSTATE_R	wrpr	%r10, %r18, %wstate
splash_hpstate_40_551:
	ta T_CHANGE_NONHPRIV
	.word 0x3f400001  ! 1: FBPO	fbo,a,pn	%fcc0, <label_0x1>
	.word 0x81982317  ! 2441: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0317, %hpstate
	.word 0xe28008a0  ! 2445: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r17
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_40_552) + 56, 16, 16)) -> intp(4,0,27,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_40_552)&0xffffffff) + 24, 16, 16)) -> intp(2,0,22,,,,,1)
#else
	set 0x3640a7b9, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_40_552:
	.word 0xa5b144d3  ! 2449: FCMPNE32	fcmpne32	%d36, %d50, %r18
intveclr_40_553:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa0ddea15df11007d, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2453: FBPLG	fblg
jmptr_40_554:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 2457: JMPL_R	jmpl	%r27 + %r0, %r27
intveclr_40_555:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x17120ab8954b3d39, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2461: FBPLG	fblg
	.word 0xa953c000  ! 2465: RDPR_FQ	<illegal instruction>
	.word 0xd61fc000  ! 2469: LDD_R	ldd	[%r31 + %r0], %r11
intveclr_40_556:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7bc7d4ccd4a26a93, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2473: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xd03fc000  ! 2477: STD_R	std	%r8, [%r31 + %r0]
dvapa_40_557:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xdf2, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x8cb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa1a409a8  ! 2481: FDIVs	fdivs	%f16, %f8, %f16
splash_tba_40_558:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2485: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_40_559:
	set 0x60740000, %r31
	.word 0x8584b9bb  ! 2489: WRCCR_I	wr	%r18, 0x19bb, %ccr
vahole2_40_560:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe1bfdf00  ! 2493: STDFA_R	stda	%f16, [%r0, %r31]
dvapa_40_561:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xee6, %r20
	mov 0x5, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x713, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfde00  ! 2497: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_562:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_562-donret_40_562+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00eabc00 | (0x83 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1edd, %htstate
	wrhpr %g0, 0x210, %hpstate  !  rand=1 (40)
	retry
.align 2048
donretarg_40_562:
	.word 0xe66fe1d8  ! 2501: LDSTUB_I	ldstub	%r19, [%r31 + 0x01d8]
	.word 0xc1bfe080  ! 2505: STDFA_I	stda	%f0, [0x0080, %r31]
	.word 0xe6bfd060  ! 2509: STDA_R	stda	%r19, [%r31 + %r0] 0x83
br_badelay3_40_564:
	.word 0x22800001  ! 1: BE	be,a	<label_0x1>
	.word 0x85565076	! Random illegal ?
	.word 0xe1150011  ! 1: LDQF_R	-	[%r20, %r17], %f16
	.word 0x93a14832  ! 2513: FADDs	fadds	%f5, %f18, %f9
vahole5_40_566:
    nop
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xa3b34323  ! 2517: BMASK	bmask	%r13, %r3, %r17
frzptr_40_567:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xa37020b0  ! 1: POPC_I	popc	0x00b0, %r17
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2521: BN	bn,a	<label_0x1>
memptr_40_568:
	set 0x60740000, %r31
	.word 0x85852894  ! 2525: WRCCR_I	wr	%r20, 0x0894, %ccr
dvapa_40_569:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc14, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x93, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fdc00  ! 2529: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
splash_cmpr_40_571:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 2533: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x8d903317  ! 2537: WRPR_PSTATE_I	wrpr	%r0, 0x1317, %pstate
iaw_40_573:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_573:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_573
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_573:
    brnz %r16, iaw_wait40_573
    ld [%r23], %r16
    ba iaw_startwait40_573
    mov 0x40, %r16
continue_iaw_40_573:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_573:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_573
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_573:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_573
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_573:
	mov 0x38, %r18
iaw3_40_573:
	setx vahole_target0, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xb8a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc0bfdb40  ! 2541: STDA_R	stda	%r0, [%r31 + %r0] 0xda
dvapa_40_574:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc2b, %r20
	mov 0x5, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x189, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99a209b0  ! 2545: FDIVs	fdivs	%f8, %f16, %f12
mondo_40_575:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r17, [%r0+0x3c0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d920012  ! 2549: WRPR_WSTATE_R	wrpr	%r8, %r18, %wstate
demap_40_576:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r13, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x90b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe0c9  ! 2553: LDD_I	ldd	[%r31 + 0x00c9], %r9
intveclr_40_577:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x35d96e4da0ff0fd2, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x851, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2557: FBPLG	fblg
	.word 0x89800011  ! 2561: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xe1e7c2c0  ! 2565: CASA_I	casa	[%r31] 0x16, %r0, %r16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_581:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_581-donret_40_581+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00845100 | (0x80 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc95, %htstate
	best_set_reg(0x1bfb, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	done
.align 2048
donretarg_40_581:
	.word 0x81983446  ! 2569: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1446, %hpstate
memptr_40_582:
	set user_data_start, %r31
	.word 0x85842455  ! 2573: WRCCR_I	wr	%r16, 0x0455, %ccr
splash_tba_40_583:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2577: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_40_584:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d904009  ! 2581: WRPR_WSTATE_R	wrpr	%r1, %r9, %wstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_585:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_585-donret_40_585+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x007e1c00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f87, %htstate
	wrhpr %g0, 0xa58, %hpstate  !  rand=1 (40)
	ldx [%r11+%r0], %g1
	done
donretarg_40_585:
	.word 0x95a089c6  ! 2585: FDIVd	fdivd	%f2, %f6, %f10
    set 0x3f9e, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0xa9b107d4  ! 2589: PDIST	pdistn	%d4, %d20, %d20
frzptr_40_586:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x95b7c4c0  ! 1: FCMPNE32	fcmpne32	%d62, %d0, %r10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2593: BN	bn,a	<label_0x1>
	.word 0xe1e7c3c0  ! 1: CASA_I	casa	[%r31] 0x1e, %r0, %r16
	.word 0xe0dfdf00  ! 1: LDXA_R	ldxa	[%r31, %r0] 0xf8, %r16
	mov 0xb4, %r30
	.word 0x93d0001e  ! 2597: Tcc_R	tne	icc_or_xcc, %r0 + %r30
	.word 0x81580000  ! 2601: FLUSHW	flushw
fpinit_40_588:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009c4  ! 2605: FDIVd	fdivd	%f0, %f4, %f8
	.word 0x87802036  ! 2609: WRASI_I	wr	%r0, 0x0036, %asi
splash_cmpr_40_590:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2613: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe88008a0  ! 2617: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
dvapa_40_591:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa09, %r20
	mov 0x1, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x180, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd2dfc240  ! 2621: LDXA_R	ldxa	[%r31, %r0] 0x12, %r9
trapasi_40_592:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xe6d84980  ! 2625: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r19
mondo_40_593:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3d0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d914011  ! 2629: WRPR_WSTATE_R	wrpr	%r5, %r17, %wstate
splash_cmpr_40_594:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2633: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xa2d18010  ! 2637: UMULcc_R	umulcc 	%r6, %r16, %r17
	.word 0x97b180f2  ! 2641: EDGE16LN	edge16ln	%r6, %r18, %r11
ibp_40_596:
	nop
	nop
	.word 0x20800001  ! 2645: BN	bn,a	<label_0x1>
jmptr_40_598:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2649: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_40_599:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 2653: BN	bn,a	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_600:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_600-donret_40_600+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00555800 | (0x58 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1db, %htstate
	best_set_reg(0x14f0, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_40_600:
	.word 0xda6fe092  ! 2657: LDSTUB_I	ldstub	%r13, [%r31 + 0x0092]
demap_40_601:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r16, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xe19fda60  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xc09fdb20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd9, %r0
	.word 0xe09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r16
	.word 0xe09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r16
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xc19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfde20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf1
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xc09fdb40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xda, %r0
	.word 0xc19fde00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	stxa %g3, [%g3] 0x5f
	.word 0xe0bfdf20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf9
	.word 0xe09fde20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf1, %r16
	wrhpr %g0, 0x643, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe1c6  ! 2661: LDD_I	ldd	[%r31 + 0x01c6], %r8
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_40_602:
	ta	T_CHANGE_NONPRIV	! macro
demap_40_603:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r14, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xc0bfdf20  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf9
	stxa %g3, [%g3] 0x57
	.word 0xc19fdf20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc0bfdb20  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd9
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xe09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r16
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	stxa %g3, [%g3] 0x57
	.word 0xc09fde20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf1, %r0
	.word 0xe0bfdb20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd9
	wrhpr %g0, 0xdc3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe038  ! 2669: LDD_I	ldd	[%r31 + 0x0038], %r18
	.word 0xe1bfe120  ! 2673: STDFA_I	stda	%f16, [0x0120, %r31]
	.word 0x8d802000  ! 2677: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x9f803dba  ! 2681: SIR	sir	0x1dba
br_badelay1_40_604:
	.word 0xc36fe0d0  ! 1: PREFETCH_I	prefetch	[%r31 + 0x00d0], #one_read
	.word 0xdb34fe22  ! 1: STQF_I	-	%f13, [0x1e22, %r19]
	.word 0xd43fe180  ! 1: STD_I	std	%r10, [%r31 + 0x0180]
	normalw
	.word 0xa9458000  ! 2685: RD_SOFTINT_REG	rd	%softint, %r20
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_40_606:
	ta	T_CHANGE_NONPRIV	! macro
	.word 0x8d802000  ! 2693: WRFPRS_I	wr	%r0, 0x0000, %fprs
frzptr_40_607:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe1bfdc00  ! 2697: STDFA_R	stda	%f16, [%r0, %r31]
intveclr_40_608:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x1dea1988be154266, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xf0a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2701: FBPLG	fblg
	fbge,a,pn	%fcc0,  skip_40_609
	brlez,pt  	%r20, skip_40_609
.align 2048
skip_40_609:
	.word 0x04cb4001  ! 2705: BRLEZ	brlez,pt  	%r13,<label_0xb4001>
pmu_40_610:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa5, %g1, %g7
	.word 0xa3800007  ! 2709: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_lsu_40_612:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xabc0b92c, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x29400001  ! 1: FBPL	fbl,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2713: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
pmu_40_613:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb1ffffffa8, %g1, %g7
	.word 0xa3800007  ! 2717: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_40_614:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xee0, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe8b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd8bfc720  ! 2721: STDA_R	stda	%r12, [%r31 + %r0] 0x39
	.word 0x81580000  ! 2725: FLUSHW	flushw
jmptr_40_616:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 2729: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_40_617:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbeffffffa4, %g1, %g7
	.word 0xa3800007  ! 2733: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_hpstate_40_618:
	ta T_CHANGE_NONHPRIV
	.word 0x2ac88001  ! 1: BRNZ	brnz,a,pt	%r2,<label_0x88001>
	.word 0x8198259e  ! 2737: WRHPR_HPSTATE_I	wrhpr	%r0, 0x059e, %hpstate
	.word 0x91d02035  ! 2741: Tcc_I	ta	icc_or_xcc, %r0 + 53
splash_cmpr_40_619:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2745: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
iaw_40_620:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x40, %r16
iaw_startwait40_620:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_40_620
    mov (~0x40&0xf0), %r16
    ld [%r23], %r16
iaw_wait40_620:
    brnz %r16, iaw_wait40_620
    ld [%r23], %r16
    ba iaw_startwait40_620
    mov 0x40, %r16
continue_iaw_40_620:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_40_620:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_40_620
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_40_620:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_40_620
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit40_620:
	mov 0x38, %r18
iaw2_40_620:
	rdpr %tba, %r19
	mov 0x120,  %r20
	sllx %r20, 5, %r20
	add %r20, %r19, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x512, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99b207d0  ! 2749: PDIST	pdistn	%d8, %d16, %d12
ibp_40_621:
	nop
	nop
	.word 0xa9b4c488  ! 2753: FCMPLE32	fcmple32	%d50, %d8, %r20
memptr_40_622:
	set 0x60540000, %r31
	.word 0x8585261f  ! 2757: WRCCR_I	wr	%r20, 0x061f, %ccr
	.word 0xa190200e  ! 2761: WRPR_GL_I	wrpr	%r0, 0x000e, %-
	.word 0x9bb500f1  ! 2765: EDGE16LN	edge16ln	%r20, %r17, %r13
	.word 0x87802058  ! 2769: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0xb3, %r30
	.word 0x83d0001e  ! 2773: Tcc_R	te	icc_or_xcc, %r0 + %r30
trapasi_40_624:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xd4d84e40  ! 2777: LDXA_R	ldxa	[%r1, %r0] 0x72, %r10
	.word 0xe0cfd100  ! 2781: LDSBA_R	ldsba	[%r31, %r0] 0x88, %r16
fpinit_40_625:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89b00484  ! 2785: FCMPLE32	fcmple32	%d0, %d4, %r4
	.word 0xe4cfdf00  ! 2789: LDSBA_R	ldsba	[%r31, %r0] 0xf8, %r18
	.word 0xe28fdd40  ! 2793: LDUBA_R	lduba	[%r31, %r0] 0xea, %r17
	.word 0x89800011  ! 2797: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xc19fdb20  ! 2801: LDDFA_R	ldda	[%r31, %r0], %f0
fpinit_40_627:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2805: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x89800011  ! 2809: WRTICK_R	wr	%r0, %r17, %tick
tagged_40_630:
	tsubcctv %r3, 0x1252, %r4
	.word 0xd607e174  ! 2813: LDUW_I	lduw	[%r31 + 0x0174], %r11
	.word 0xa3a0cd34  ! 2817: FsMULd	fsmuld	%f3, %f20, %f48
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_632:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_632-donret_40_632), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00694100 | (28 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1d45, %htstate
	best_set_reg(0x1cc3, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (40)
	ldx [%r12+%r0], %g1
	retry
donretarg_40_632:
	.word 0x29400001  ! 2821: FBPL	fbl,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_40_633:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_40_633-donret_40_633+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x004fd200 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xe93, %htstate
	wrhpr %g0, 0x552, %hpstate  !  rand=1 (40)
	done
donretarg_40_633:
	.word 0xe0ffc400  ! 2825: SWAPA_R	swapa	%r16, [%r31 + %r0] 0x20
	.word 0xe6bfc400  ! 2829: STDA_R	stda	%r19, [%r31 + %r0] 0x20
	.word 0xd91fe0d0  ! 1: LDDF_I	ldd	[%r31, 0x00d0], %f12
	.word 0xc36fe1e0  ! 1: PREFETCH_I	prefetch	[%r31 + 0x01e0], #one_read
	mov 0xb4, %r30
	.word 0x83d0001e  ! 2833: Tcc_R	te	icc_or_xcc, %r0 + %r30
mondo_40_634:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3c0] %asi
	.word 0x87802083  ! 1: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x9d910010  ! 2837: WRPR_WSTATE_R	wrpr	%r4, %r16, %wstate
pmu_40_635:
	nop
	nop
	setx 0xffffffb2ffffffa1, %g1, %g7
	.word 0xa3800007  ! 2841: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
trapasi_40_636:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x5a) 
	.word 0xdad84b40  ! 2845: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r13
	.word 0xe2800c60  ! 2849: LDUWA_R	lduwa	[%r0, %r0] 0x63, %r17
trapasi_40_637:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x48) 
	.word 0xe4d84900  ! 2853: LDXA_R	ldxa	[%r1, %r0] 0x48, %r18
	.word 0x94d4400a  ! 2857: UMULcc_R	umulcc 	%r17, %r10, %r10
br_longdelay2_40_639:
	.word 0x35400001  ! 1: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
	.word 0xd3e7d160  ! 2861: CASA_I	casa	[%r31] 0x8b, %r0, %r9
mondo_40_641:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d930003  ! 2865: WRPR_WSTATE_R	wrpr	%r12, %r3, %wstate
frzptr_40_642:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x20800001  ! 2869: BN	bn,a	<label_0x1>
	.word 0x95a00160  ! 2873: FABSq	dis not found

frzptr_40_645:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xda6fe150  ! 1: LDSTUB_I	ldstub	%r13, [%r31 + 0x0150]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2877: BN	bn,a	<label_0x1>
change_to_randtl_40_646:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_40_646:
	.word 0x8f902001  ! 2881: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
frzptr_40_647:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb80000), %r21
	stxa %r27, [%r21]0x57
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xc32fe100  ! 1: STXFSR_I	st-sfr	%f1, [0x0100, %r31]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2885: BN	bn,a	<label_0x1>
splash_lsu_40_648:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xb51ac03e, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2889: FBPULE	fbule
memptr_40_649:
	set 0x60140000, %r31
	.word 0x8584a403  ! 2893: WRCCR_I	wr	%r18, 0x0403, %ccr
intveclr_40_650:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xc3dab6684bd87a0a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2897: FBPLG	fblg
mondo_40_652:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r6, [%r0+0x3d0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d94800a  ! 2901: WRPR_WSTATE_R	wrpr	%r18, %r10, %wstate
memptr_40_653:
	set 0x60340000, %r31
	.word 0x8584f765  ! 2905: WRCCR_I	wr	%r19, 0x1765, %ccr
intveclr_40_654:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xfef3aba64d0494db, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x44b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2909: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_40_656:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r2, [%r0+0x3d8] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d928001  ! 2913: WRPR_WSTATE_R	wrpr	%r10, %r1, %wstate
	.word 0xe13fe0b0  ! 1: STDF_I	std	%f16, [0x00b0, %r31]
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0x34, %r30
	.word 0x93d0001e  ! 2917: Tcc_R	tne	icc_or_xcc, %r0 + %r30
intveclr_40_657:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x75751553dd57f2e1, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2921: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
tagged_40_658:
	tsubcctv %r1, 0x1ee6, %r1
	.word 0xe207e120  ! 2925: LDUW_I	lduw	[%r31 + 0x0120], %r17
splash_lsu_40_659:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x99a079c7, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x33400001  ! 1: FBPE	fbe,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2929: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8d802000  ! 2933: WRFPRS_I	wr	%r0, 0x0000, %fprs
ibp_40_661:
	nop
	nop
	.word 0xe31fe0c0  ! 2937: LDDF_I	ldd	[%r31, 0x00c0], %f17
	.word 0xe68008a0  ! 2941: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
frzptr_40_663:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	jmpl %r27, %r27
	.word 0x00800001  ! 2945: BN	bn  	<label_0x1>
	.word 0xd41fc000  ! 2949: LDD_R	ldd	[%r31 + %r0], %r10
	bl  	 skip_40_665
	bcs,a	 skip_40_665
.align 4096
skip_40_665:
	.word 0xc36b634e  ! 2953: PREFETCH_I	prefetch	[%r13 + 0x034e], #one_read
cwp_40_666:
    set user_data_start, %o7
	.word 0x93902003  ! 2957: WRPR_CWP_I	wrpr	%r0, 0x0003, %cwp
splash_tba_40_667:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2961: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_40_669:
	set user_data_start, %r31
	.word 0x8584e7b4  ! 2965: WRCCR_I	wr	%r19, 0x07b4, %ccr
	wrhpr %g0, 0x69a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2969: MEMBAR	membar	#LoadLoad | #Lookaside 
mondo_40_671:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d910014  ! 2973: WRPR_WSTATE_R	wrpr	%r4, %r20, %wstate
splash_cmpr_40_672:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 2977: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
intveclr_40_673:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xebd88b167b82f330, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x6ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2981: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x8d9024f7  ! 2985: WRPR_PSTATE_I	wrpr	%r0, 0x04f7, %pstate
	.word 0xd2800b60  ! 2989: LDUWA_R	lduwa	[%r0, %r0] 0x5b, %r9
	.word 0xe8800c60  ! 2993: LDUWA_R	lduwa	[%r0, %r0] 0x63, %r20
	.word 0x9f8039af  ! 2997: SIR	sir	0x19af
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_6:
	.word 0x91a349a5  ! 2: FDIVs	fdivs	%f13, %f5, %f8
	.word 0x91a7c9c0  ! 3: FDIVd	fdivd	%f62, %f0, %f8
	.word 0xd01fe1e0  ! 4: LDD_I	ldd	[%r31 + 0x01e0], %r8
	.word 0x99a449ad  ! 5: FDIVs	fdivs	%f17, %f13, %f12
	.word 0xd81fe1b0  ! 5: LDD_I	ldd	[%r31 + 0x01b0], %r12
	.word 0xa7b04cf4  ! 6: FNOT2S	fandnot1s	%f20, %f19
	.word 0xe1bfdf00  ! 7: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa1b34cf0  ! 8: FNOT2S	fandnot1s	%f16, %f16
	.word 0x95b50ce6  ! 9: FNOT2S	fandnot1s	%f6, %f10
	.word 0x20800001  ! 9: BN	bn,a	<label_0x1>
    nop
    nop
    mov 23, %g1
loopz_20_3:
    ldstub [%r31+0x1d0], %r2
    brnz,a %r1, loopz_20_3
    dec %r1
	.word 0x95a249c3  ! 10: FDIVd	fdivd	%f40, %f34, %f10
	.word 0xd41fe160  ! 11: LDD_I	ldd	[%r31 + 0x0160], %r10
	.word 0xa9b440a1  ! 12: EDGE16N	edge16n	%r17, %r1, %r20
	.word 0x93a489d1  ! 13: FDIVd	fdivd	%f18, %f48, %f40
	.word 0x97b180b3  ! 13: EDGE16N	edge16n	%r6, %r19, %r11
	.word 0xd61fe1d0  ! 14: LDD_I	ldd	[%r31 + 0x01d0], %r11
	.word 0xd63fe110  ! 15: STD_I	std	%r11, [%r31 + 0x0110]
	.word 0x91b14cf2  ! 16: FNOT2S	fandnot1s	%f18, %f8
	.word 0xd01fe070  ! 17: LDD_I	ldd	[%r31 + 0x0070], %r8
	.word 0xd09fc2c0  ! 17: LDDA_R	ldda	[%r31, %r0] 0x16, %r8
	.word 0x97b34cec  ! 18: FNOT2S	fandnot1s	%f12, %f11
	.word 0xd707e0f0  ! 19: LDF_I	ld	[%r31, 0x00f0], %f11
	.word 0xd61fe0e0  ! 20: LDD_I	ldd	[%r31 + 0x00e0], %r11
	.word 0x95b30cf0  ! 21: FNOT2S	fandnot1s	%f16, %f10
	.word 0xd41fe0d0  ! 21: LDD_I	ldd	[%r31 + 0x00d0], %r10
	.word 0x91b04711  ! 22: FMULD8SUx16	fmuld8ulx16	%f1, %f17, %d8
	.word 0x39400001  ! 23: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa7b4c701  ! 24: FMULD8SUx16	fmuld8ulx16	%f19, %f1, %d50
	.word 0xa7b4c714  ! 25: FMULD8SUx16	fmuld8ulx16	%f19, %f20, %d50
	.word 0xa7a7c9c0  ! 25: FDIVd	fdivd	%f62, %f0, %f50
	.word 0xa9b447c1  ! 26: PDIST	pdistn	%d48, %d32, %d20
	.word 0xe83fe0c0  ! 27: STD_I	std	%r20, [%r31 + 0x00c0]
	.word 0x99b44714  ! 28: FMULD8SUx16	fmuld8ulx16	%f17, %f20, %d12
	.word 0xa3b507d0  ! 29: PDIST	pdistn	%d20, %d16, %d48
	.word 0x93b44704  ! 29: FMULD8SUx16	fmuld8ulx16	%f17, %f4, %d40
	.word 0xa7a249d2  ! 30: FDIVd	fdivd	%f40, %f18, %f50
	.word 0x9d97c000  ! 31: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b2c0b4  ! 32: EDGE16N	edge16n	%r11, %r20, %r19
	.word 0x97a489d3  ! 33: FDIVd	fdivd	%f18, %f50, %f42
	.word 0xa5b2c0ac  ! 33: EDGE16N	edge16n	%r11, %r12, %r18
	.word 0x91b147c8  ! 34: PDIST	pdistn	%d36, %d8, %d8
	.word 0xc1bfdd40  ! 35: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa5a2c9c8  ! 36: FDIVd	fdivd	%f42, %f8, %f18
	.word 0xa5b0c7d1  ! 37: PDIST	pdistn	%d34, %d48, %d18
	.word 0x97a449c3  ! 37: FDIVd	fdivd	%f48, %f34, %f42
	.word 0xa5b080ad  ! 38: EDGE16N	edge16n	%r2, %r13, %r18
	.word 0xe507e150  ! 39: LDF_I	ld	[%r31, 0x0150], %f18
	.word 0xa7b487d3  ! 40: PDIST	pdistn	%d18, %d50, %d50
	.word 0x93b180ac  ! 41: EDGE16N	edge16n	%r6, %r12, %r9
	.word 0xa7b507cc  ! 41: PDIST	pdistn	%d20, %d12, %d50
    nop
    nop
    mov 59, %g1
loopb_20_10:
    ldstub [%r31+0xd0], %r2
    brnz,a %r1, loopb_20_10
    dec %r1
	.word 0xa3a1c9b1  ! 42: FDIVs	fdivs	%f7, %f17, %f17
	.word 0xe19fde00  ! 43: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x99b08cf4  ! 44: FNOT2S	fandnot1s	%f20, %f12
	.word 0xa3a209a3  ! 45: FDIVs	fdivs	%f8, %f3, %f17
	.word 0xc19fc3e0  ! 45: LDDFA_R	ldda	[%r31, %r0], %f0
    nop
    nop
    mov 3, %g1
loopb_20_11:
    ldstub [%r31+0x140], %r2
    brnz,a %r1, loopb_20_11
    dec %r1
	.word 0x97b4cce5  ! 46: FNOT2S	fandnot1s	%f5, %f11
	.word 0xe19fc3e0  ! 47: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa7a489d0  ! 48: FDIVd	fdivd	%f18, %f16, %f50
	.word 0x99b08cf0  ! 49: FNOT2S	fandnot1s	%f16, %f12
	.word 0xc19fc3e0  ! 49: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x91b5070a  ! 50: FMULD8SUx16	fmuld8ulx16	%f20, %f10, %d8
	.word 0x81b7c7c0  ! 51: PDIST	pdistn	%d62, %d0, %d0
	.word 0x93b2c708  ! 52: FMULD8SUx16	fmuld8ulx16	%f11, %f8, %d40
	.word 0xa3b2c712  ! 53: FMULD8SUx16	fmuld8ulx16	%f11, %f18, %d48
	.word 0xe1bfdf20  ! 53: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa9a489ab  ! 54: FDIVs	fdivs	%f18, %f11, %f20
	.word 0xe907e120  ! 55: LDF_I	ld	[%r31, 0x0120], %f20
	.word 0x9ba349c3  ! 56: FDIVd	fdivd	%f44, %f34, %f44
	.word 0x95a449a5  ! 57: FDIVs	fdivs	%f17, %f5, %f10
	.word 0xd507e0e0  ! 57: LDF_I	ld	[%r31, 0x00e0], %f10
	.word 0x95a489a6  ! 58: FDIVs	fdivs	%f18, %f6, %f10
	.word 0xa1b7c7c0  ! 59: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa9b08713  ! 60: FMULD8SUx16	fmuld8ulx16	%f2, %f19, %d20
	.word 0xa7a449b1  ! 61: FDIVs	fdivs	%f17, %f17, %f19
	.word 0x97b04714  ! 61: FMULD8SUx16	fmuld8ulx16	%f1, %f20, %d42
	.word 0x93b447c5  ! 62: PDIST	pdistn	%d48, %d36, %d40
	.word 0xd3e7c180  ! 63: CASA_I	casa	[%r31] 0x c, %r0, %r9
	.word 0x97b507c7  ! 64: PDIST	pdistn	%d20, %d38, %d42
	.word 0x99b487d3  ! 65: PDIST	pdistn	%d18, %d50, %d12
	.word 0x97b287c6  ! 65: PDIST	pdistn	%d10, %d6, %d42
	.word 0x93a4c9a3  ! 66: FDIVs	fdivs	%f19, %f3, %f9
	.word 0xc1bfdb20  ! 67: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x97b4470b  ! 68: FMULD8SUx16	fmuld8ulx16	%f17, %f11, %d42
	.word 0x93a4c9a2  ! 69: FDIVs	fdivs	%f19, %f2, %f9
	.word 0xa9b04711  ! 69: FMULD8SUx16	fmuld8ulx16	%f1, %f17, %d20
	.word 0x9bb147d3  ! 70: PDIST	pdistn	%d36, %d50, %d44
	.word 0xa1b7c7c0  ! 71: PDIST	pdistn	%d62, %d0, %d16
	.word 0x93a4c9d2  ! 72: FDIVd	fdivd	%f50, %f18, %f40
	.word 0xa5b4c7d2  ! 73: PDIST	pdistn	%d50, %d18, %d18
	.word 0x9ba309d4  ! 73: FDIVd	fdivd	%f12, %f20, %f44
	.word 0x99a449c5  ! 74: FDIVd	fdivd	%f48, %f36, %f12
	.word 0x99b7c4c0  ! 75: FCMPNE32	fcmpne32	%d62, %d0, %r12
	.word 0x93b040a2  ! 76: EDGE16N	edge16n	%r1, %r2, %r9
	.word 0x9ba409c6  ! 77: FDIVd	fdivd	%f16, %f6, %f44
	.word 0xa1b480a6  ! 77: EDGE16N	edge16n	%r18, %r6, %r16
	.word 0xa9b10cf4  ! 78: FNOT2S	fandnot1s	%f20, %f20
	.word 0x39400001  ! 79: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x97b200b4  ! 80: EDGE16N	edge16n	%r8, %r20, %r11
	.word 0xa9b44ce4  ! 81: FNOT2S	fandnot1s	%f4, %f20
	.word 0xa5b480b1  ! 81: EDGE16N	edge16n	%r18, %r17, %r18
	.word 0x91b34cf0  ! 82: FNOT2S	fandnot1s	%f16, %f8
	.word 0xd107e1a0  ! 83: LDF_I	ld	[%r31, 0x01a0], %f8
	.word 0x97b24cec  ! 84: FNOT2S	fandnot1s	%f12, %f11
	.word 0x91b40cf1  ! 85: FNOT2S	fandnot1s	%f17, %f8
	.word 0x99b04ce8  ! 85: FNOT2S	fandnot1s	%f8, %f12
	.word 0x9bb507c6  ! 86: PDIST	pdistn	%d20, %d6, %d44
	.word 0xda3fe1d0  ! 87: STD_I	std	%r13, [%r31 + 0x01d0]
	.word 0x95a449a9  ! 88: FDIVs	fdivs	%f17, %f9, %f10
	.word 0x97b0c7cc  ! 89: PDIST	pdistn	%d34, %d12, %d42
	.word 0xd7e7c600  ! 89: CASA_I	casa	[%r31] 0x30, %r0, %r11
	.word 0x95b48cf2  ! 90: FNOT2S	fandnot1s	%f18, %f10
	.word 0xd4dfc600  ! 91: LDXA_R	ldxa	[%r31, %r0] 0x30, %r10
	.word 0x95b247c6  ! 92: PDIST	pdistn	%d40, %d6, %d10
	.word 0xa1b2cce3  ! 93: FNOT2S	fandnot1s	%f3, %f16
	.word 0x95b1c7cb  ! 93: PDIST	pdistn	%d38, %d42, %d10
	.word 0x9bb147c2  ! 94: PDIST	pdistn	%d36, %d2, %d44
	.word 0xda9fd060  ! 95: LDDA_R	ldda	[%r31, %r0] 0x83, %r13
	.word 0x95b34ce2  ! 96: FNOT2S	fandnot1s	%f2, %f10
	.word 0x95b487cc  ! 97: PDIST	pdistn	%d18, %d12, %d10
	.word 0x9f802040  ! 97: SIR	sir	0x0040
	.word 0x97b247d4  ! 98: PDIST	pdistn	%d40, %d20, %d42
	.word 0x87afca40  ! 99: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa5b140b0  ! 100: EDGE16N	edge16n	%r5, %r16, %r18
	.word 0x99b047d4  ! 101: PDIST	pdistn	%d32, %d20, %d12
	.word 0x39400001  ! 101: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa5b0cce5  ! 102: FNOT2S	fandnot1s	%f5, %f18
	.word 0xe5e7d100  ! 103: CASA_I	casa	[%r31] 0x88, %r0, %r18
	.word 0xa5a449c1  ! 104: FDIVd	fdivd	%f48, %f32, %f18
	.word 0xa5b30ce5  ! 105: FNOT2S	fandnot1s	%f5, %f18
	.word 0x99a489c6  ! 105: FDIVd	fdivd	%f18, %f6, %f12
	.word 0x91a4c9aa  ! 106: FDIVs	fdivs	%f19, %f10, %f8
	.word 0xbfefc000  ! 107: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xd01fe0f0  ! 108: LDD_I	ldd	[%r31 + 0x00f0], %r8
	.word 0x93a489b4  ! 109: FDIVs	fdivs	%f18, %f20, %f9
	.word 0x9d97c000  ! 109: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x95b44cf3  ! 110: FNOT2S	fandnot1s	%f19, %f10
	.word 0xd507e140  ! 111: LDF_I	ld	[%r31, 0x0140], %f10
	.word 0x93b200b4  ! 112: EDGE16N	edge16n	%r8, %r20, %r9
	.word 0xa3b34cf4  ! 113: FNOT2S	fandnot1s	%f20, %f17
	.word 0x95b440b0  ! 113: EDGE16N	edge16n	%r17, %r16, %r10
	.word 0xa1a449a2  ! 114: FDIVs	fdivs	%f17, %f2, %f16
	.word 0x81b7c7c0  ! 115: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa1b20cf0  ! 116: FNOT2S	fandnot1s	%f16, %f16
	.word 0x97a409b4  ! 117: FDIVs	fdivs	%f16, %f20, %f11
	.word 0x81b7c7c0  ! 117: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa7b4c0a3  ! 118: EDGE16N	edge16n	%r19, %r3, %r19
	.word 0xbfefc000  ! 119: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x97b18cea  ! 120: FNOT2S	fandnot1s	%f10, %f11
	.word 0x91b480b2  ! 121: EDGE16N	edge16n	%r18, %r18, %r8
	.word 0xbfe7c000  ! 121: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1b247c7  ! 122: PDIST	pdistn	%d40, %d38, %d16
	.word 0xbfe7c000  ! 123: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1a149b1  ! 124: FDIVs	fdivs	%f5, %f17, %f16
	.word 0x91b2c7c3  ! 125: PDIST	pdistn	%d42, %d34, %d8
	.word 0x9d97c000  ! 125: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b0c7d0  ! 126: PDIST	pdistn	%d34, %d16, %d50
	.word 0xe63fe1d0  ! 127: STD_I	std	%r19, [%r31 + 0x01d0]
	.word 0xa9a309d3  ! 128: FDIVd	fdivd	%f12, %f50, %f20
	.word 0x9bb347cb  ! 129: PDIST	pdistn	%d44, %d42, %d44
	.word 0xda3fe1b0  ! 129: STD_I	std	%r13, [%r31 + 0x01b0]
    nop
    nop
    mov 63, %g1
loopb_20_28:
    ldstub [%r31+0x1a0], %r2
    brnz,a %r1, loopb_20_28
    dec %r1
	.word 0x97b307d1  ! 130: PDIST	pdistn	%d12, %d48, %d42
	.word 0xe19fda00  ! 131: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa3a189cc  ! 132: FDIVd	fdivd	%f6, %f12, %f48
	.word 0x95b447c8  ! 133: PDIST	pdistn	%d48, %d8, %d10
	.word 0xc1bfdb40  ! 133: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xd41fe040  ! 134: LDD_I	ldd	[%r31 + 0x0040], %r10
	.word 0xd43fe1b0  ! 135: STD_I	std	%r10, [%r31 + 0x01b0]
	.word 0x91b34cf0  ! 136: FNOT2S	fandnot1s	%f16, %f8
	.word 0xd01fe1b0  ! 137: LDD_I	ldd	[%r31 + 0x01b0], %r8
	.word 0xc32fe1e0  ! 137: STXFSR_I	st-sfr	%f1, [0x01e0, %r31]
	.word 0x99b440a1  ! 138: EDGE16N	edge16n	%r17, %r1, %r12
	.word 0xd81fe000  ! 139: LDD_I	ldd	[%r31 + 0x0000], %r12
	.word 0xa7b407d1  ! 140: PDIST	pdistn	%d16, %d48, %d50
	.word 0x9bb100b2  ! 141: EDGE16N	edge16n	%r4, %r18, %r13
	.word 0xdadfd000  ! 141: LDXA_R	ldxa	[%r31, %r0] 0x80, %r13
	.word 0xa1b340a5  ! 142: EDGE16N	edge16n	%r13, %r5, %r16
	.word 0xa1b7c7c0  ! 143: PDIST	pdistn	%d62, %d0, %d16
	.word 0x91a249ab  ! 144: FDIVs	fdivs	%f9, %f11, %f8
	.word 0xa3b080a2  ! 145: EDGE16N	edge16n	%r2, %r2, %r17
	.word 0xe19fdb40  ! 145: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x95b040b1  ! 146: EDGE16N	edge16n	%r1, %r17, %r10
	.word 0x00800001  ! 147: BN	bn  	<label_0x1>
	.word 0x99a489a4  ! 148: FDIVs	fdivs	%f18, %f4, %f12
	.word 0xa3b500ab  ! 149: EDGE16N	edge16n	%r20, %r11, %r17
	.word 0xa7a349b0  ! 149: FDIVs	fdivs	%f13, %f16, %f19
	.word 0x93a109a9  ! 150: FDIVs	fdivs	%f4, %f9, %f9
	.word 0xd307e180  ! 151: LDF_I	ld	[%r31, 0x0180], %f9
	.word 0xd21fe150  ! 152: LDD_I	ldd	[%r31 + 0x0150], %r9
	.word 0xa3a349a6  ! 153: FDIVs	fdivs	%f13, %f6, %f17
	.word 0xe307e180  ! 153: LDF_I	ld	[%r31, 0x0180], %f17
	.word 0x97b307cc  ! 154: PDIST	pdistn	%d12, %d12, %d42
	.word 0x97b7c4c0  ! 155: FCMPNE32	fcmpne32	%d62, %d0, %r11
	.word 0xd61fe0c0  ! 156: LDD_I	ldd	[%r31 + 0x00c0], %r11
	.word 0xa1b447cc  ! 157: PDIST	pdistn	%d48, %d12, %d16
	.word 0xe01fe1c0  ! 157: LDD_I	ldd	[%r31 + 0x01c0], %r16
	.word 0xa5b1c7d4  ! 158: PDIST	pdistn	%d38, %d20, %d18
	.word 0xe507e000  ! 159: LDF_I	ld	[%r31, 0x0000], %f18
	.word 0xa7a149d3  ! 160: FDIVd	fdivd	%f36, %f50, %f50
	.word 0x97b207d3  ! 161: PDIST	pdistn	%d8, %d50, %d42
	.word 0xd707e1b0  ! 161: LDF_I	ld	[%r31, 0x01b0], %f11
	.word 0xe21fe130  ! 162: LDD_I	ldd	[%r31 + 0x0130], %r17
	.word 0x19400001  ! 163: FBPUGE	fbuge
	.word 0x97b507cc  ! 164: PDIST	pdistn	%d20, %d12, %d42
	.word 0xd61fe0c0  ! 165: LDD_I	ldd	[%r31 + 0x00c0], %r11
	.word 0x9bb207c9  ! 165: PDIST	pdistn	%d8, %d40, %d44
	.word 0x91b500b1  ! 166: EDGE16N	edge16n	%r20, %r17, %r8
	.word 0x81b7c7c0  ! 167: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa9b247c9  ! 168: PDIST	pdistn	%d40, %d40, %d20
	.word 0xa7b440ab  ! 169: EDGE16N	edge16n	%r17, %r11, %r19
	.word 0x91b087c1  ! 169: PDIST	pdistn	%d2, %d32, %d8
    nop
    nop
    mov 51, %g1
loopz_20_37:
    ldstub [%r31+0x80], %r2
    brnz,a %r1, loopz_20_37
    dec %r1
	.word 0x9ba149d3  ! 170: FDIVd	fdivd	%f36, %f50, %f44
	.word 0xdbe7e000  ! 171: CASA_R	casa	[%r31] %asi, %r0, %r13
	.word 0xa1a409c6  ! 172: FDIVd	fdivd	%f16, %f6, %f16
	.word 0xa1a509c5  ! 173: FDIVd	fdivd	%f20, %f36, %f16
	.word 0xa5a449d0  ! 173: FDIVd	fdivd	%f48, %f16, %f18
	.word 0x9bb40710  ! 174: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d44
	.word 0xc3efe190  ! 175: PREFETCHA_I	prefetcha	[%r31, + 0x0190] %asi, #one_read
	.word 0x99b18cf0  ! 176: FNOT2S	fandnot1s	%f16, %f12
	.word 0xa1b40711  ! 177: FMULD8SUx16	fmuld8ulx16	%f16, %f17, %d16
	.word 0xa1b2ccec  ! 177: FNOT2S	fandnot1s	%f12, %f16
	.word 0x93b407d4  ! 178: PDIST	pdistn	%d16, %d20, %d40
	.word 0xd307e010  ! 179: LDF_I	ld	[%r31, 0x0010], %f9
	.word 0x95a509c9  ! 180: FDIVd	fdivd	%f20, %f40, %f10
	.word 0xa9b047d4  ! 181: PDIST	pdistn	%d32, %d20, %d20
	.word 0xa1a449c3  ! 181: FDIVd	fdivd	%f48, %f34, %f16
	.word 0xa9a509c6  ! 182: FDIVd	fdivd	%f20, %f6, %f20
	.word 0x9d97c000  ! 183: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x97b407d2  ! 184: PDIST	pdistn	%d16, %d18, %d42
	.word 0x97a189d3  ! 185: FDIVd	fdivd	%f6, %f50, %f42
	.word 0xa3b487c1  ! 185: PDIST	pdistn	%d18, %d32, %d48
	.word 0x95b4ccf4  ! 186: FNOT2S	fandnot1s	%f20, %f10
	.word 0xe1bfc2c0  ! 187: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa3b407cd  ! 188: PDIST	pdistn	%d16, %d44, %d48
	.word 0x93b40ced  ! 189: FNOT2S	fandnot1s	%f13, %f9
	.word 0xa7b187c4  ! 189: PDIST	pdistn	%d6, %d4, %d50
	.word 0xa7a189a2  ! 190: FDIVs	fdivs	%f6, %f2, %f19
	.word 0xe1bfc3e0  ! 191: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe61fe070  ! 192: LDD_I	ldd	[%r31 + 0x0070], %r19
	.word 0x91a489ac  ! 193: FDIVs	fdivs	%f18, %f12, %f8
	.word 0x81b7c7c0  ! 193: PDIST	pdistn	%d62, %d0, %d0
    nop
    nop
    mov 19, %g1
loopz_20_41:
    ldstub [%r31+0x130], %r2
    brnz,a %r1, loopz_20_41
    dec %r1
	.word 0xa9a489d0  ! 194: FDIVd	fdivd	%f18, %f16, %f20
	.word 0xe81fc000  ! 195: LDD_R	ldd	[%r31 + %r0], %r20
	.word 0x95a4c9c8  ! 196: FDIVd	fdivd	%f50, %f8, %f10
	.word 0x91a049c8  ! 197: FDIVd	fdivd	%f32, %f8, %f8
	.word 0x9ba049cb  ! 197: FDIVd	fdivd	%f32, %f42, %f44
	.word 0xa3b1cceb  ! 198: FNOT2S	fandnot1s	%f11, %f17
	.word 0xe307e1c0  ! 199: LDF_I	ld	[%r31, 0x01c0], %f17
	.word 0x97a449d0  ! 200: FDIVd	fdivd	%f48, %f16, %f42
	.word 0xa3b10ced  ! 201: FNOT2S	fandnot1s	%f13, %f17
	.word 0x95a189c1  ! 201: FDIVd	fdivd	%f6, %f32, %f10
	.word 0x95b307d4  ! 202: PDIST	pdistn	%d12, %d20, %d10
	.word 0x20800001  ! 203: BN	bn,a	<label_0x1>
	.word 0x93a1c9b2  ! 204: FDIVs	fdivs	%f7, %f18, %f9
	.word 0xa1b1c7d4  ! 205: PDIST	pdistn	%d38, %d20, %d16
	.word 0xe19fdc00  ! 205: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe01fe0e0  ! 206: LDD_I	ldd	[%r31 + 0x00e0], %r16
	.word 0xc19fdb20  ! 207: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa5b04ce1  ! 208: FNOT2S	fandnot1s	%f1, %f18
	.word 0xe41fe1f0  ! 209: LDD_I	ldd	[%r31 + 0x01f0], %r18
	.word 0x81b7c7c0  ! 209: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa7a089b1  ! 210: FDIVs	fdivs	%f2, %f17, %f19
	.word 0x39400001  ! 211: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xe61fe190  ! 212: LDD_I	ldd	[%r31 + 0x0190], %r19
	.word 0x9ba489b2  ! 213: FDIVs	fdivs	%f18, %f18, %f13
	.word 0xda1fe080  ! 213: LDD_I	ldd	[%r31 + 0x0080], %r13
	.word 0xa3a509c3  ! 214: FDIVd	fdivd	%f20, %f34, %f48
	.word 0x20800001  ! 215: BN	bn,a	<label_0x1>
	.word 0xa9b4cce7  ! 216: FNOT2S	fandnot1s	%f7, %f20
	.word 0x93a4c9ca  ! 217: FDIVd	fdivd	%f50, %f10, %f40
	.word 0xa5b34ce1  ! 217: FNOT2S	fandnot1s	%f1, %f18
    nop
    nop
    mov 47, %g1
loopb_20_47:
    ldstub [%r31+0x80], %r2
    brnz,a %r1, loopb_20_47
    dec %r1
	.word 0xe41fe080  ! 218: LDD_I	ldd	[%r31 + 0x0080], %r18
	.word 0xe19fdf20  ! 219: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x91b2c7c5  ! 220: PDIST	pdistn	%d42, %d36, %d8
	.word 0xd01fe100  ! 221: LDD_I	ldd	[%r31 + 0x0100], %r8
	.word 0xc19fda60  ! 221: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x97a289d1  ! 222: FDIVd	fdivd	%f10, %f48, %f42
	.word 0xd707e0a0  ! 223: LDF_I	ld	[%r31, 0x00a0], %f11
	.word 0x91b48ce9  ! 224: FNOT2S	fandnot1s	%f9, %f8
	.word 0xa9a349d3  ! 225: FDIVd	fdivd	%f44, %f50, %f20
	.word 0x9bb20ce6  ! 225: FNOT2S	fandnot1s	%f6, %f13
	.word 0xa1b04704  ! 226: FMULD8SUx16	fmuld8ulx16	%f1, %f4, %d16
	.word 0xc1bfda00  ! 227: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe01fe090  ! 228: LDD_I	ldd	[%r31 + 0x0090], %r16
	.word 0xa5b24713  ! 229: FMULD8SUx16	fmuld8ulx16	%f9, %f19, %d18
	.word 0xe1bfda60  ! 229: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa1a489a8  ! 230: FDIVs	fdivs	%f18, %f8, %f16
	.word 0xe1bfdc40  ! 231: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe01fe090  ! 232: LDD_I	ldd	[%r31 + 0x0090], %r16
	.word 0x99a149b4  ! 233: FDIVs	fdivs	%f5, %f20, %f12
	.word 0x20800001  ! 233: BN	bn,a	<label_0x1>
	.word 0xa9b20711  ! 234: FMULD8SUx16	fmuld8ulx16	%f8, %f17, %d20
	.word 0x9d97c000  ! 235: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa9b48cea  ! 236: FNOT2S	fandnot1s	%f10, %f20
	.word 0x91b40712  ! 237: FMULD8SUx16	fmuld8ulx16	%f16, %f18, %d8
	.word 0x99b20ced  ! 237: FNOT2S	fandnot1s	%f13, %f12
	.word 0x93b4c702  ! 238: FMULD8SUx16	fmuld8ulx16	%f19, %f2, %d40
	.word 0xa1b7c7c0  ! 239: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa7b0c709  ! 240: FMULD8SUx16	fmuld8ulx16	%f3, %f9, %d50
	.word 0xa5b10712  ! 241: FMULD8SUx16	fmuld8ulx16	%f4, %f18, %d18
	.word 0xe1bfc2c0  ! 241: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa9b1c7c5  ! 242: PDIST	pdistn	%d38, %d36, %d20
	.word 0xe907e190  ! 243: LDF_I	ld	[%r31, 0x0190], %f20
	.word 0xa5a449ab  ! 244: FDIVs	fdivs	%f17, %f11, %f18
	.word 0x99b447cc  ! 245: PDIST	pdistn	%d48, %d12, %d12
	.word 0xa3a449a2  ! 245: FDIVs	fdivs	%f17, %f2, %f17
	.word 0xa5a4c9b4  ! 246: FDIVs	fdivs	%f19, %f20, %f18
	.word 0xe507e120  ! 247: LDF_I	ld	[%r31, 0x0120], %f18
	.word 0xa3b50cf3  ! 248: FNOT2S	fandnot1s	%f19, %f17
	.word 0xa1a2c9a9  ! 249: FDIVs	fdivs	%f11, %f9, %f16
	.word 0xe107e000  ! 249: LDF_I	ld	[%r31, 0x0000], %f16
    nop
    nop
    mov 55, %g1
loopb_20_54:
    ldstub [%r31+0x140], %r2
    brnz,a %r1, loopb_20_54
    dec %r1
	.word 0xa3b44709  ! 250: FMULD8SUx16	fmuld8ulx16	%f17, %f9, %d48
	.word 0xe1bfc2c0  ! 251: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x97b347d2  ! 252: PDIST	pdistn	%d44, %d18, %d42
	.word 0x91b4c714  ! 253: FMULD8SUx16	fmuld8ulx16	%f19, %f20, %d8
	.word 0x93b4c7d4  ! 253: PDIST	pdistn	%d50, %d20, %d40
	.word 0xe81fe070  ! 254: LDD_I	ldd	[%r31 + 0x0070], %r20
	.word 0xe907e140  ! 255: LDF_I	ld	[%r31, 0x0140], %f20
	.word 0x95b140a8  ! 256: EDGE16N	edge16n	%r5, %r8, %r10
	.word 0xd41fe070  ! 257: LDD_I	ldd	[%r31 + 0x0070], %r10
	.word 0xd507e1d0  ! 257: LDF_I	ld	[%r31, 0x01d0], %f10
	.word 0xd41fe0c0  ! 258: LDD_I	ldd	[%r31 + 0x00c0], %r10
	.word 0x00800001  ! 259: BN	bn  	<label_0x1>
	.word 0x91b440a3  ! 260: EDGE16N	edge16n	%r17, %r3, %r8
	.word 0xd01fe010  ! 261: LDD_I	ldd	[%r31 + 0x0010], %r8
	.word 0xa1b7c7c0  ! 261: PDIST	pdistn	%d62, %d0, %d16
	.word 0x95b40ce2  ! 262: FNOT2S	fandnot1s	%f2, %f10
	.word 0xd507e130  ! 263: LDF_I	ld	[%r31, 0x0130], %f10
	.word 0xd41fe1a0  ! 264: LDD_I	ldd	[%r31 + 0x01a0], %r10
	.word 0x9bb44cea  ! 265: FNOT2S	fandnot1s	%f10, %f13
	.word 0xda1fe0d0  ! 265: LDD_I	ldd	[%r31 + 0x00d0], %r13
	.word 0xa7a309b3  ! 266: FDIVs	fdivs	%f12, %f19, %f19
	.word 0xc3efe1a0  ! 267: PREFETCHA_I	prefetcha	[%r31, + 0x01a0] %asi, #one_read
	.word 0xa5a309c9  ! 268: FDIVd	fdivd	%f12, %f40, %f18
	.word 0x97a2c9a1  ! 269: FDIVs	fdivs	%f11, %f1, %f11
	.word 0xd6dfd000  ! 269: LDXA_R	ldxa	[%r31, %r0] 0x80, %r11
	.word 0x97b407d3  ! 270: PDIST	pdistn	%d16, %d50, %d42
	.word 0xd707e0f0  ! 271: LDF_I	ld	[%r31, 0x00f0], %f11
	.word 0xd61fe030  ! 272: LDD_I	ldd	[%r31 + 0x0030], %r11
	.word 0x9bb447c1  ! 273: PDIST	pdistn	%d48, %d32, %d44
	.word 0xdb07e1e0  ! 273: LDF_I	ld	[%r31, 0x01e0], %f13
	.word 0x95b180b0  ! 274: EDGE16N	edge16n	%r6, %r16, %r10
	.word 0x00800001  ! 275: BN	bn  	<label_0x1>
	.word 0xa5b480b4  ! 276: EDGE16N	edge16n	%r18, %r20, %r18
	.word 0x95b1c0a4  ! 277: EDGE16N	edge16n	%r7, %r4, %r10
	.word 0xa7b440b4  ! 277: EDGE16N	edge16n	%r17, %r20, %r19
	.word 0x99b50cf0  ! 278: FNOT2S	fandnot1s	%f16, %f12
	.word 0xbfefc000  ! 279: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa1a409c6  ! 280: FDIVd	fdivd	%f16, %f6, %f16
	.word 0x91b40cf2  ! 281: FNOT2S	fandnot1s	%f18, %f8
	.word 0x9d97c000  ! 281: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa1a089c8  ! 282: FDIVd	fdivd	%f2, %f8, %f16
	.word 0xe1e7d920  ! 283: CASA_I	casa	[%r31] 0xc9, %r0, %r16
	.word 0xa3a109b1  ! 284: FDIVs	fdivs	%f4, %f17, %f17
	.word 0xa3a509c1  ! 285: FDIVd	fdivd	%f20, %f32, %f48
	.word 0x19400001  ! 285: FBPUGE	fbuge
	.word 0x97b40710  ! 286: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d42
	.word 0xd707e130  ! 287: LDF_I	ld	[%r31, 0x0130], %f11
	.word 0x93b440b3  ! 288: EDGE16N	edge16n	%r17, %r19, %r9
	.word 0xa1b28705  ! 289: FMULD8SUx16	fmuld8ulx16	%f10, %f5, %d16
	.word 0xe107e130  ! 289: LDF_I	ld	[%r31, 0x0130], %f16
	.word 0x97a149b0  ! 290: FDIVs	fdivs	%f5, %f16, %f11
	.word 0xd73fe0a0  ! 291: STDF_I	std	%f11, [0x00a0, %r31]
	.word 0x97b44ce3  ! 292: FNOT2S	fandnot1s	%f3, %f11
	.word 0xa7a409a3  ! 293: FDIVs	fdivs	%f16, %f3, %f19
	.word 0xe73fe030  ! 293: STDF_I	std	%f19, [0x0030, %r31]
	.word 0xe0bfc3e0  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x1f
	.word 0xe1bfda60  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc0bfc2c0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x16
	.word 0xe1bfda00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe0bfdd40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xea
	.word 0xe0bfda00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd0
	.word 0xc09fdb20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd9, %r0
	.word 0xc1bfde20  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x93b0470d  ! 294: FMULD8SUx16	fmuld8ulx16	%f1, %f13, %d40
	.word 0x9d97c000  ! 295: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x93a189c4  ! 296: FDIVd	fdivd	%f6, %f4, %f40
	.word 0xa1b34711  ! 297: FMULD8SUx16	fmuld8ulx16	%f13, %f17, %d16
	.word 0xa1a189c6  ! 297: FDIVd	fdivd	%f6, %f6, %f16
    nop
    nop
    mov 3, %g1
loopz_20_64:
    ldstub [%r31+0x120], %r2
    brnz,a %r1, loopz_20_64
    dec %r1
	.word 0xa1b4c0b3  ! 298: EDGE16N	edge16n	%r19, %r19, %r16
	.word 0xc32fe050  ! 299: STXFSR_I	st-sfr	%f1, [0x0050, %r31]
	.word 0x9bb447c4  ! 300: PDIST	pdistn	%d48, %d4, %d44
	.word 0xa3b100a8  ! 301: EDGE16N	edge16n	%r4, %r8, %r17
	.word 0xa3b347d1  ! 301: PDIST	pdistn	%d44, %d48, %d48
	.word 0xa5b440a8  ! 302: EDGE16N	edge16n	%r17, %r8, %r18
	.word 0xe507e140  ! 303: LDF_I	ld	[%r31, 0x0140], %f18
	.word 0xa5a289c8  ! 304: FDIVd	fdivd	%f10, %f8, %f18
	.word 0x91b480aa  ! 305: EDGE16N	edge16n	%r18, %r10, %r8
	.word 0xa7a409c6  ! 305: FDIVd	fdivd	%f16, %f6, %f50
	.word 0x95b40710  ! 306: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d10
	.word 0xd43fe0e0  ! 307: STD_I	std	%r10, [%r31 + 0x00e0]
	.word 0xa5b10ce6  ! 308: FNOT2S	fandnot1s	%f6, %f18
	.word 0x91b4c714  ! 309: FMULD8SUx16	fmuld8ulx16	%f19, %f20, %d8
	.word 0xc36fe0a0  ! 309: PREFETCH_I	prefetch	[%r31 + 0x00a0], #one_read
	.word 0x9bb1c0b0  ! 310: EDGE16N	edge16n	%r7, %r16, %r13
	.word 0x9d97c000  ! 311: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xda1fe010  ! 312: LDD_I	ldd	[%r31 + 0x0010], %r13
	.word 0x9bb4c0b1  ! 313: EDGE16N	edge16n	%r19, %r17, %r13
	.word 0xda1fe0d0  ! 313: LDD_I	ldd	[%r31 + 0x00d0], %r13
	.word 0x95a449b0  ! 314: FDIVs	fdivs	%f17, %f16, %f10
	.word 0xd5e7c3c0  ! 315: CASA_I	casa	[%r31] 0x1e, %r0, %r10
	.word 0xa3b4ccf0  ! 316: FNOT2S	fandnot1s	%f16, %f17
	.word 0xa9a449aa  ! 317: FDIVs	fdivs	%f17, %f10, %f20
	.word 0x24cfc001  ! 317: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xe81fe0e0  ! 318: LDD_I	ldd	[%r31 + 0x00e0], %r20
	.word 0xbfe7c000  ! 319: SAVE_R	save	%r31, %r0, %r31
	.word 0xa5b140b2  ! 320: EDGE16N	edge16n	%r5, %r18, %r18
	.word 0xe41fe180  ! 321: LDD_I	ldd	[%r31 + 0x0180], %r18
	.word 0x9bb180b4  ! 321: EDGE16N	edge16n	%r6, %r20, %r13
	.word 0x99b44cf3  ! 322: FNOT2S	fandnot1s	%f19, %f12
	.word 0xbfe7c000  ! 323: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1a4c9d2  ! 324: FDIVd	fdivd	%f50, %f18, %f16
	.word 0x9bb28ce4  ! 325: FNOT2S	fandnot1s	%f4, %f13
	.word 0xbfe7c000  ! 325: SAVE_R	save	%r31, %r0, %r31
    nop
    nop
    mov 15, %g1
loopb_20_70:
    ldstub [%r31+0xe0], %r2
    brnz,a %r1, loopb_20_70
    dec %r1
	.word 0xa1b08705  ! 326: FMULD8SUx16	fmuld8ulx16	%f2, %f5, %d16
	.word 0xe1bfdc40  ! 327: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x99b247c3  ! 328: PDIST	pdistn	%d40, %d34, %d12
	.word 0x91b1070b  ! 329: FMULD8SUx16	fmuld8ulx16	%f4, %f11, %d8
	.word 0xe1bfdb40  ! 329: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa1b04cea  ! 330: FNOT2S	fandnot1s	%f10, %f16
	.word 0xe1e7d060  ! 331: CASA_I	casa	[%r31] 0x83, %r0, %r16
	.word 0xa7a0c9aa  ! 332: FDIVs	fdivs	%f3, %f10, %f19
	.word 0x97b40cf3  ! 333: FNOT2S	fandnot1s	%f19, %f11
	.word 0xd71fe0c0  ! 333: LDDF_I	ldd	[%r31, 0x00c0], %f11
	.word 0xa3b440a3  ! 334: EDGE16N	edge16n	%r17, %r3, %r17
	.word 0xe21fe0b0  ! 335: LDD_I	ldd	[%r31 + 0x00b0], %r17
	.word 0x93b480a1  ! 336: EDGE16N	edge16n	%r18, %r1, %r9
	.word 0xa7b4c0b3  ! 337: EDGE16N	edge16n	%r19, %r19, %r19
	.word 0xe63fe0b0  ! 337: STD_I	std	%r19, [%r31 + 0x00b0]
	.word 0xa9a309a8  ! 338: FDIVs	fdivs	%f12, %f8, %f20
	.word 0x19400001  ! 339: FBPUGE	fbuge
	.word 0x91b50ceb  ! 340: FNOT2S	fandnot1s	%f11, %f8
	.word 0x99a449b1  ! 341: FDIVs	fdivs	%f17, %f17, %f12
	.word 0x87afca40  ! 341: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa7b48cf2  ! 342: FNOT2S	fandnot1s	%f18, %f19
	.word 0xe707e190  ! 343: LDF_I	ld	[%r31, 0x0190], %f19
	.word 0xa7b50714  ! 344: FMULD8SUx16	fmuld8ulx16	%f20, %f20, %d50
	.word 0xa7b20cf0  ! 345: FNOT2S	fandnot1s	%f16, %f19
	.word 0xa1b40704  ! 345: FMULD8SUx16	fmuld8ulx16	%f16, %f4, %d16
	.word 0xa5b20711  ! 346: FMULD8SUx16	fmuld8ulx16	%f8, %f17, %d18
	.word 0xbfefc000  ! 347: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa1a109d2  ! 348: FDIVd	fdivd	%f4, %f18, %f16
	.word 0xa9b04712  ! 349: FMULD8SUx16	fmuld8ulx16	%f1, %f18, %d20
	.word 0xbfefc000  ! 349: RESTORE_R	restore	%r31, %r0, %r31
    nop
    nop
    mov 31, %g1
loopz_20_77:
    ldstub [%r31+0xd0], %r2
    brnz,a %r1, loopz_20_77
    dec %r1
	.word 0xa3b08705  ! 350: FMULD8SUx16	fmuld8ulx16	%f2, %f5, %d48
	.word 0xe31fe060  ! 351: LDDF_I	ldd	[%r31, 0x0060], %f17
	.word 0xa1b20ce2  ! 352: FNOT2S	fandnot1s	%f2, %f16
	.word 0x95b4470d  ! 353: FMULD8SUx16	fmuld8ulx16	%f17, %f13, %d10
	.word 0xd51fe140  ! 353: LDDF_I	ldd	[%r31, 0x0140], %f10
	.word 0xa3a509a2  ! 354: FDIVs	fdivs	%f20, %f2, %f17
	.word 0xbfe7c000  ! 355: SAVE_R	save	%r31, %r0, %r31
	.word 0xa5b180b1  ! 356: EDGE16N	edge16n	%r6, %r17, %r18
	.word 0xa3a309b1  ! 357: FDIVs	fdivs	%f12, %f17, %f17
	.word 0xbfe7c000  ! 357: SAVE_R	save	%r31, %r0, %r31
    nop
    nop
    mov 47, %g1
loopz_20_79:
    ldstub [%r31+0xd0], %r2
    brnz,a %r1, loopz_20_79
    dec %r1
	.word 0x95b0c0aa  ! 358: EDGE16N	edge16n	%r3, %r10, %r10
	.word 0xd51fe130  ! 359: LDDF_I	ldd	[%r31, 0x0130], %f10
	.word 0xa1b4ccf2  ! 360: FNOT2S	fandnot1s	%f18, %f16
	.word 0x91b280b3  ! 361: EDGE16N	edge16n	%r10, %r19, %r8
	.word 0xc32fe020  ! 361: STXFSR_I	st-sfr	%f1, [0x0020, %r31]
	.word 0xd01fe0e0  ! 362: LDD_I	ldd	[%r31 + 0x00e0], %r8
	.word 0xd1e7c3c0  ! 363: CASA_I	casa	[%r31] 0x1e, %r0, %r8
	.word 0xa3b447c6  ! 364: PDIST	pdistn	%d48, %d6, %d48
	.word 0xe21fe040  ! 365: LDD_I	ldd	[%r31 + 0x0040], %r17
	.word 0xa1b407c9  ! 365: PDIST	pdistn	%d16, %d40, %d16
	.word 0x97b440a8  ! 366: EDGE16N	edge16n	%r17, %r8, %r11
	.word 0xd6dfd140  ! 367: LDXA_R	ldxa	[%r31, %r0] 0x8a, %r11
	.word 0x9ba4c9c9  ! 368: FDIVd	fdivd	%f50, %f40, %f44
	.word 0x93b1c0b0  ! 369: EDGE16N	edge16n	%r7, %r16, %r9
	.word 0x95a489d4  ! 369: FDIVd	fdivd	%f18, %f20, %f10
	.word 0xa1a249d3  ! 370: FDIVd	fdivd	%f40, %f50, %f16
	.word 0xe107e0a0  ! 371: LDF_I	ld	[%r31, 0x00a0], %f16
	.word 0xa1b247d2  ! 372: PDIST	pdistn	%d40, %d18, %d16
	.word 0xa3a4c9ca  ! 373: FDIVd	fdivd	%f50, %f10, %f48
	.word 0xe307e180  ! 373: LDF_I	ld	[%r31, 0x0180], %f17
    nop
    nop
    mov 7, %g1
loopz_20_83:
    ldstub [%r31+0x40], %r2
    brnz,a %r1, loopz_20_83
    dec %r1
	.word 0xa5b44ce4  ! 374: FNOT2S	fandnot1s	%f4, %f18
	.word 0xe5e7e000  ! 375: CASA_R	casa	[%r31] %asi, %r0, %r18
	.word 0x91b1c714  ! 376: FMULD8SUx16	fmuld8ulx16	%f7, %f20, %d8
	.word 0xa9b24ce9  ! 377: FNOT2S	fandnot1s	%f9, %f20
	.word 0xa3b0870b  ! 377: FMULD8SUx16	fmuld8ulx16	%f2, %f11, %d48
    nop
    nop
    mov 23, %g1
loopz_20_85:
    ldstub [%r31+0xc0], %r2
    brnz,a %r1, loopz_20_85
    dec %r1
	.word 0x91b24ce1  ! 378: FNOT2S	fandnot1s	%f1, %f8
	.word 0xc32fe170  ! 379: STXFSR_I	st-sfr	%f1, [0x0170, %r31]
	.word 0x99b447c3  ! 380: PDIST	pdistn	%d48, %d34, %d12
	.word 0xa1b50cf4  ! 381: FNOT2S	fandnot1s	%f20, %f16
	.word 0x97b4c7d1  ! 381: PDIST	pdistn	%d50, %d48, %d42
    nop
    nop
    mov 43, %g1
loopb_20_87:
    ldstub [%r31+0x1e0], %r2
    brnz,a %r1, loopb_20_87
    dec %r1
	.word 0x95a409a1  ! 382: FDIVs	fdivs	%f16, %f1, %f10
	.word 0xc1bfda60  ! 383: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xd41fe140  ! 384: LDD_I	ldd	[%r31 + 0x0140], %r10
	.word 0xa1a409a6  ! 385: FDIVs	fdivs	%f16, %f6, %f16
	.word 0xe01fe0a0  ! 385: LDD_I	ldd	[%r31 + 0x00a0], %r16
	.word 0xa7a089b0  ! 386: FDIVs	fdivs	%f2, %f16, %f19
	.word 0xe707e150  ! 387: LDF_I	ld	[%r31, 0x0150], %f19
	.word 0x93b5070c  ! 388: FMULD8SUx16	fmuld8ulx16	%f20, %f12, %d40
	.word 0xa7a449ab  ! 389: FDIVs	fdivs	%f17, %f11, %f19
	.word 0xa7b0c703  ! 389: FMULD8SUx16	fmuld8ulx16	%f3, %f3, %d50
	.word 0x97a409aa  ! 390: FDIVs	fdivs	%f16, %f10, %f11
	.word 0x9d97c000  ! 391: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b440b3  ! 392: EDGE16N	edge16n	%r17, %r19, %r17
	.word 0x93a489b2  ! 393: FDIVs	fdivs	%f18, %f18, %f9
	.word 0x9d97c000  ! 393: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b24cf1  ! 394: FNOT2S	fandnot1s	%f17, %f17
	.word 0x20800001  ! 395: BN	bn,a	<label_0x1>
	.word 0x99b2cce8  ! 396: FNOT2S	fandnot1s	%f8, %f12
	.word 0x95b48cf3  ! 397: FNOT2S	fandnot1s	%f19, %f10
	.word 0xe19fdd40  ! 397: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x9ba449b4  ! 398: FDIVs	fdivs	%f17, %f20, %f13
	.word 0x20800001  ! 399: BN	bn,a	<label_0x1>
	.word 0xda1fe100  ! 400: LDD_I	ldd	[%r31 + 0x0100], %r13
	.word 0xa5a149a9  ! 401: FDIVs	fdivs	%f5, %f9, %f18
	.word 0xc19fdf20  ! 401: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x93a489d2  ! 402: FDIVd	fdivd	%f18, %f18, %f40
	.word 0xd23fe090  ! 403: STD_I	std	%r9, [%r31 + 0x0090]
	.word 0x99a409b1  ! 404: FDIVs	fdivs	%f16, %f17, %f12
	.word 0xa1a2c9d1  ! 405: FDIVd	fdivd	%f42, %f48, %f16
	.word 0x95a049a3  ! 405: FDIVs	fdivs	%f1, %f3, %f10
	.word 0x97a149c5  ! 406: FDIVd	fdivd	%f36, %f36, %f42
	.word 0x20800001  ! 407: BN	bn,a	<label_0x1>
	.word 0xa3b24704  ! 408: FMULD8SUx16	fmuld8ulx16	%f9, %f4, %d48
	.word 0xa1a209c1  ! 409: FDIVd	fdivd	%f8, %f32, %f16
	.word 0xe1bfc3e0  ! 409: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe01fe1f0  ! 410: LDD_I	ldd	[%r31 + 0x01f0], %r16
	.word 0xe09fc400  ! 411: LDDA_R	ldda	[%r31, %r0] 0x20, %r16
	.word 0x9bb5070b  ! 412: FMULD8SUx16	fmuld8ulx16	%f20, %f11, %d44
	.word 0xda1fe050  ! 413: LDD_I	ldd	[%r31 + 0x0050], %r13
	.word 0xdb1fe040  ! 413: LDDF_I	ldd	[%r31, 0x0040], %f13
	.word 0xa5b507d2  ! 414: PDIST	pdistn	%d20, %d18, %d18
	.word 0x87afca40  ! 415: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x93a4c9cc  ! 416: FDIVd	fdivd	%f50, %f12, %f40
	.word 0x99b487d3  ! 417: PDIST	pdistn	%d18, %d50, %d12
	.word 0xa5a4c9cd  ! 417: FDIVd	fdivd	%f50, %f44, %f18
	.word 0xa5a189d3  ! 418: FDIVd	fdivd	%f6, %f50, %f18
	.word 0x9d97c000  ! 419: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa5b04cf0  ! 420: FNOT2S	fandnot1s	%f16, %f18
	.word 0xa5a489d2  ! 421: FDIVd	fdivd	%f18, %f18, %f18
	.word 0x9d97c000  ! 421: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x99a2c9ad  ! 422: FDIVs	fdivs	%f11, %f13, %f12
	.word 0x9d97c000  ! 423: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x95b30cf2  ! 424: FNOT2S	fandnot1s	%f18, %f10
	.word 0x91a409b1  ! 425: FDIVs	fdivs	%f16, %f17, %f8
	.word 0xa9b40cf1  ! 425: FNOT2S	fandnot1s	%f17, %f20
    nop
    nop
    mov 51, %g1
loopb_20_97:
    ldstub [%r31+0x1c0], %r2
    brnz,a %r1, loopb_20_97
    dec %r1
	.word 0xe81fe1d0  ! 426: LDD_I	ldd	[%r31 + 0x01d0], %r20
	.word 0xc1bfde00  ! 427: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe81fe1e0  ! 428: LDD_I	ldd	[%r31 + 0x01e0], %r20
	.word 0xe81fe1d0  ! 429: LDD_I	ldd	[%r31 + 0x01d0], %r20
	.word 0xe81fe000  ! 429: LDD_I	ldd	[%r31 + 0x0000], %r20
	.word 0xa5a189ac  ! 430: FDIVs	fdivs	%f6, %f12, %f18
	.word 0xe507e120  ! 431: LDF_I	ld	[%r31, 0x0120], %f18
	.word 0x99b287ca  ! 432: PDIST	pdistn	%d10, %d10, %d12
	.word 0x91a2c9b0  ! 433: FDIVs	fdivs	%f11, %f16, %f8
	.word 0xa7b447c7  ! 433: PDIST	pdistn	%d48, %d38, %d50
	.word 0xe61fe040  ! 434: LDD_I	ldd	[%r31 + 0x0040], %r19
	.word 0xc1bfc3e0  ! 435: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa1a449d0  ! 436: FDIVd	fdivd	%f48, %f16, %f16
	.word 0xe01fe1a0  ! 437: LDD_I	ldd	[%r31 + 0x01a0], %r16
	.word 0x20800001  ! 437: BN	bn,a	<label_0x1>
    nop
    nop
    mov 7, %g1
loopz_20_101:
    ldstub [%r31+0x100], %r2
    brnz,a %r1, loopz_20_101
    dec %r1
	.word 0x93b50703  ! 438: FMULD8SUx16	fmuld8ulx16	%f20, %f3, %d40
	.word 0xd3e7e000  ! 439: CASA_R	casa	[%r31] %asi, %r0, %r9
	.word 0x99a309d1  ! 440: FDIVd	fdivd	%f12, %f48, %f12
	.word 0x93b50713  ! 441: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d40
	.word 0x97a509d3  ! 441: FDIVd	fdivd	%f20, %f50, %f42
	.word 0xd61fe120  ! 442: LDD_I	ldd	[%r31 + 0x0120], %r11
	.word 0xc32fe0e0  ! 443: STXFSR_I	st-sfr	%f1, [0x00e0, %r31]
	.word 0xa5a289a8  ! 444: FDIVs	fdivs	%f10, %f8, %f18
	.word 0xe41fe1e0  ! 445: LDD_I	ldd	[%r31 + 0x01e0], %r18
	.word 0x95a2c9ac  ! 445: FDIVs	fdivs	%f11, %f12, %f10
	.word 0x95b0c714  ! 446: FMULD8SUx16	fmuld8ulx16	%f3, %f20, %d10
	.word 0xc32fe040  ! 447: STXFSR_I	st-sfr	%f1, [0x0040, %r31]
	.word 0xa7b4070b  ! 448: FMULD8SUx16	fmuld8ulx16	%f16, %f11, %d50
	.word 0x97b1870d  ! 449: FMULD8SUx16	fmuld8ulx16	%f6, %f13, %d42
	.word 0xa7b2c710  ! 449: FMULD8SUx16	fmuld8ulx16	%f11, %f16, %d50
	.word 0x95b44ce1  ! 450: FNOT2S	fandnot1s	%f1, %f10
	.word 0x39400001  ! 451: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa9b2ccec  ! 452: FNOT2S	fandnot1s	%f12, %f20
	.word 0x93b1ccf2  ! 453: FNOT2S	fandnot1s	%f18, %f9
	.word 0xd3e7d060  ! 453: CASA_I	casa	[%r31] 0x83, %r0, %r9
	.word 0xa9b4c7d3  ! 454: PDIST	pdistn	%d50, %d50, %d20
	.word 0xa1b7c7c0  ! 455: PDIST	pdistn	%d62, %d0, %d16
	.word 0x97b1c710  ! 456: FMULD8SUx16	fmuld8ulx16	%f7, %f16, %d42
	.word 0xa3b307d2  ! 457: PDIST	pdistn	%d12, %d18, %d48
	.word 0xa3b48713  ! 457: FMULD8SUx16	fmuld8ulx16	%f18, %f19, %d48
	.word 0x91a449d1  ! 458: FDIVd	fdivd	%f48, %f48, %f8
	.word 0xd107e0c0  ! 459: LDF_I	ld	[%r31, 0x00c0], %f8
	.word 0xa7a489a1  ! 460: FDIVs	fdivs	%f18, %f1, %f19
	.word 0x97a449c2  ! 461: FDIVd	fdivd	%f48, %f2, %f42
	.word 0x95a0c9b1  ! 461: FDIVs	fdivs	%f3, %f17, %f10
	.word 0xd41fe080  ! 462: LDD_I	ldd	[%r31 + 0x0080], %r10
	.word 0xd51fe180  ! 463: LDDF_I	ldd	[%r31, 0x0180], %f10
	.word 0x95b100a2  ! 464: EDGE16N	edge16n	%r4, %r2, %r10
	.word 0xd41fe150  ! 465: LDD_I	ldd	[%r31 + 0x0150], %r10
	.word 0xc3efe0d0  ! 465: PREFETCHA_I	prefetcha	[%r31, + 0x00d0] %asi, #one_read
	.word 0xa3b30ce9  ! 466: FNOT2S	fandnot1s	%f9, %f17
	.word 0xa3a7c9c0  ! 467: FDIVd	fdivd	%f62, %f0, %f48
	.word 0xa1b487c5  ! 468: PDIST	pdistn	%d18, %d36, %d16
	.word 0x97b34cf4  ! 469: FNOT2S	fandnot1s	%f20, %f11
	.word 0xd63fe090  ! 469: STD_I	std	%r11, [%r31 + 0x0090]
	.word 0xa9b507cd  ! 470: PDIST	pdistn	%d20, %d44, %d20
	.word 0xa1b7c7c0  ! 471: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa7a449a6  ! 472: FDIVs	fdivs	%f17, %f6, %f19
	.word 0x91b447cd  ! 473: PDIST	pdistn	%d48, %d44, %d8
	.word 0x99a4c9b4  ! 473: FDIVs	fdivs	%f19, %f20, %f12
	.word 0x91b24713  ! 474: FMULD8SUx16	fmuld8ulx16	%f9, %f19, %d8
	.word 0x24cfc001  ! 475: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x99b14714  ! 476: FMULD8SUx16	fmuld8ulx16	%f5, %f20, %d12
	.word 0xa1b50713  ! 477: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d16
	.word 0xa1b40703  ! 477: FMULD8SUx16	fmuld8ulx16	%f16, %f3, %d16
	.word 0xa3b44cf3  ! 478: FNOT2S	fandnot1s	%f19, %f17
	.word 0xe307e070  ! 479: LDF_I	ld	[%r31, 0x0070], %f17
	.word 0xa7b500b3  ! 480: EDGE16N	edge16n	%r20, %r19, %r19
	.word 0x97b24ced  ! 481: FNOT2S	fandnot1s	%f13, %f11
	.word 0xd707e080  ! 481: LDF_I	ld	[%r31, 0x0080], %f11
	.word 0xa1a049a6  ! 482: FDIVs	fdivs	%f1, %f6, %f16
	.word 0x9d97c000  ! 483: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9bb340b0  ! 484: EDGE16N	edge16n	%r13, %r16, %r13
	.word 0xa5a449a3  ! 485: FDIVs	fdivs	%f17, %f3, %f18
	.word 0x9bb480b3  ! 485: EDGE16N	edge16n	%r18, %r19, %r13
    nop
    nop
    mov 43, %g1
loopb_20_112:
    ldstub [%r31+0x180], %r2
    brnz,a %r1, loopb_20_112
    dec %r1
	.word 0xa9a1c9d4  ! 486: FDIVd	fdivd	%f38, %f20, %f20
	.word 0xe19fdf00  ! 487: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x91b24cf4  ! 488: FNOT2S	fandnot1s	%f20, %f8
	.word 0x93a509ca  ! 489: FDIVd	fdivd	%f20, %f10, %f40
	.word 0xc19fdc40  ! 489: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa5a449d4  ! 490: FDIVd	fdivd	%f48, %f20, %f18
	.word 0xe507e070  ! 491: LDF_I	ld	[%r31, 0x0070], %f18
	.word 0xa3b24cf4  ! 492: FNOT2S	fandnot1s	%f20, %f17
	.word 0xa5a409d3  ! 493: FDIVd	fdivd	%f16, %f50, %f18
	.word 0xa1b44ce9  ! 493: FNOT2S	fandnot1s	%f9, %f16
	.word 0xe19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe09fdd40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xea, %r16
	.word 0xc09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r0
	.word 0xc09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r0
	.word 0xe09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r16
	.word 0xe1bfc3e0  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc1bfdf00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r16
	.word 0xe1bfdb20  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
	.word 0xe09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r16
	.word 0xe1bfdb40  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe1bfde00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
    nop
    nop
    mov 19, %g1
loopb_20_115:
    ldstub [%r31+0xa0], %r2
    brnz,a %r1, loopb_20_115
    dec %r1
	.word 0x95b4ccf3  ! 494: FNOT2S	fandnot1s	%f19, %f10
	.word 0xc1bfdd40  ! 495: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91b1ccf4  ! 496: FNOT2S	fandnot1s	%f20, %f8
	.word 0x9bb4ccf1  ! 497: FNOT2S	fandnot1s	%f17, %f13
	.word 0xa3b1ccf3  ! 497: FNOT2S	fandnot1s	%f19, %f17
	.word 0x91b287d2  ! 498: PDIST	pdistn	%d10, %d18, %d8
	.word 0xbfefc000  ! 499: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x91b1c7cc  ! 500: PDIST	pdistn	%d38, %d12, %d8
	.word 0x91b507c7  ! 501: PDIST	pdistn	%d20, %d38, %d8
	.word 0xbfe7c000  ! 501: SAVE_R	save	%r31, %r0, %r31
	.word 0xe0bfdd40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xea
	.word 0xe19fdd40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe1bfdf00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe19fdb40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc1bfda60  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r0
	.word 0xd01fe070  ! 502: LDD_I	ldd	[%r31 + 0x0070], %r8
	.word 0xd107e020  ! 503: LDF_I	ld	[%r31, 0x0020], %f8
	.word 0x93b4c7d3  ! 504: PDIST	pdistn	%d50, %d50, %d40
	.word 0xd21fe150  ! 505: LDD_I	ldd	[%r31 + 0x0150], %r9
	.word 0xd307e050  ! 505: LDF_I	ld	[%r31, 0x0050], %f9
	.word 0xd21fe130  ! 506: LDD_I	ldd	[%r31 + 0x0130], %r9
	.word 0x19400001  ! 507: FBPUGE	fbuge
	.word 0xa7a1c9a9  ! 508: FDIVs	fdivs	%f7, %f9, %f19
	.word 0xe61fe1d0  ! 509: LDD_I	ldd	[%r31 + 0x01d0], %r19
	.word 0x97a4c9b1  ! 509: FDIVs	fdivs	%f19, %f17, %f11
    nop
    nop
    mov 63, %g1
loopz_20_119:
    ldstub [%r31+0x90], %r2
    brnz,a %r1, loopz_20_119
    dec %r1
	.word 0x97a4c9ad  ! 510: FDIVs	fdivs	%f19, %f13, %f11
	.word 0xd61fe070  ! 511: LDD_I	ldd	[%r31 + 0x0070], %r11
	.word 0x99b440b0  ! 512: EDGE16N	edge16n	%r17, %r16, %r12
	.word 0xa9a2c9a3  ! 513: FDIVs	fdivs	%f11, %f3, %f20
	.word 0x91b400b0  ! 513: EDGE16N	edge16n	%r16, %r16, %r8
    nop
    nop
    mov 27, %g1
loopz_20_120:
    ldstub [%r31+0xf0], %r2
    brnz,a %r1, loopz_20_120
    dec %r1
	.word 0x93a409b3  ! 514: FDIVs	fdivs	%f16, %f19, %f9
	.word 0xd31fe1c0  ! 515: LDDF_I	ldd	[%r31, 0x01c0], %f9
	.word 0x91a209a5  ! 516: FDIVs	fdivs	%f8, %f5, %f8
	.word 0x91a489b4  ! 517: FDIVs	fdivs	%f18, %f20, %f8
	.word 0xd1e7e000  ! 517: CASA_R	casa	[%r31] %asi, %r0, %r8
	.word 0x93a149d0  ! 518: FDIVd	fdivd	%f36, %f16, %f40
	.word 0xd21fe000  ! 519: LDD_I	ldd	[%r31 + 0x0000], %r9
	.word 0x99a489d3  ! 520: FDIVd	fdivd	%f18, %f50, %f12
	.word 0xa7a449d4  ! 521: FDIVd	fdivd	%f48, %f20, %f50
	.word 0xa3a249c5  ! 521: FDIVd	fdivd	%f40, %f36, %f48
	.word 0x9bb480b2  ! 522: EDGE16N	edge16n	%r18, %r18, %r13
	.word 0x19400001  ! 523: FBPUGE	fbuge
	.word 0x9ba509aa  ! 524: FDIVs	fdivs	%f20, %f10, %f13
	.word 0x97b4c0a4  ! 525: EDGE16N	edge16n	%r19, %r4, %r11
	.word 0xa1a489b3  ! 525: FDIVs	fdivs	%f18, %f19, %f16
	.word 0x99b48710  ! 526: FMULD8SUx16	fmuld8ulx16	%f18, %f16, %d12
	.word 0xd907e010  ! 527: LDF_I	ld	[%r31, 0x0010], %f12
	.word 0xa7a449b3  ! 528: FDIVs	fdivs	%f17, %f19, %f19
	.word 0xa3b40711  ! 529: FMULD8SUx16	fmuld8ulx16	%f16, %f17, %d48
	.word 0xe307e1c0  ! 529: LDF_I	ld	[%r31, 0x01c0], %f17
	.word 0x9bb4c0b2  ! 530: EDGE16N	edge16n	%r19, %r18, %r13
	.word 0x9bb7c4c0  ! 531: FCMPNE32	fcmpne32	%d62, %d0, %r13
	.word 0x99a4c9d3  ! 532: FDIVd	fdivd	%f50, %f50, %f12
	.word 0x93b1c0ac  ! 533: EDGE16N	edge16n	%r7, %r12, %r9
	.word 0x93a289d4  ! 533: FDIVd	fdivd	%f10, %f20, %f40
	.word 0xd21fe180  ! 534: LDD_I	ldd	[%r31 + 0x0180], %r9
	.word 0xd21fe000  ! 535: LDD_I	ldd	[%r31 + 0x0000], %r9
	.word 0x93b04701  ! 536: FMULD8SUx16	fmuld8ulx16	%f1, %f1, %d40
	.word 0xd21fe100  ! 537: LDD_I	ldd	[%r31 + 0x0100], %r9
	.word 0xc3efe050  ! 537: PREFETCHA_I	prefetcha	[%r31, + 0x0050] %asi, #one_read
	.word 0x91b28704  ! 538: FMULD8SUx16	fmuld8ulx16	%f10, %f4, %d8
	.word 0xc36fe150  ! 539: PREFETCH_I	prefetch	[%r31 + 0x0150], #one_read
	.word 0x95b08ce4  ! 540: FNOT2S	fandnot1s	%f4, %f10
	.word 0x97b44711  ! 541: FMULD8SUx16	fmuld8ulx16	%f17, %f17, %d42
	.word 0x93b50ce4  ! 541: FNOT2S	fandnot1s	%f4, %f9
	.word 0xa5a1c9c9  ! 542: FDIVd	fdivd	%f38, %f40, %f18
	.word 0x9d97c000  ! 543: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x97b1c0b2  ! 544: EDGE16N	edge16n	%r7, %r18, %r11
	.word 0xa3a149cb  ! 545: FDIVd	fdivd	%f36, %f42, %f48
	.word 0xa1b200a7  ! 545: EDGE16N	edge16n	%r8, %r7, %r16
	.word 0x9bb48711  ! 546: FMULD8SUx16	fmuld8ulx16	%f18, %f17, %d44
	.word 0xc3efe130  ! 547: PREFETCHA_I	prefetcha	[%r31, + 0x0130] %asi, #one_read
	.word 0xa1b20cf3  ! 548: FNOT2S	fandnot1s	%f19, %f16
	.word 0xa5b4c712  ! 549: FMULD8SUx16	fmuld8ulx16	%f19, %f18, %d18
	.word 0xe5e7c280  ! 549: CASA_I	casa	[%r31] 0x14, %r0, %r18
	.word 0x99a409d4  ! 550: FDIVd	fdivd	%f16, %f20, %f12
	.word 0xbfefc000  ! 551: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95a409b4  ! 552: FDIVs	fdivs	%f16, %f20, %f10
	.word 0x93a309c4  ! 553: FDIVd	fdivd	%f12, %f4, %f40
	.word 0xa3a149b2  ! 553: FDIVs	fdivs	%f5, %f18, %f17
	.word 0xe21fe150  ! 554: LDD_I	ldd	[%r31 + 0x0150], %r17
	.word 0xbfefc000  ! 555: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x93b487d2  ! 556: PDIST	pdistn	%d18, %d18, %d40
	.word 0xd21fe1e0  ! 557: LDD_I	ldd	[%r31 + 0x01e0], %r9
	.word 0xbfefc000  ! 557: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa7b48cea  ! 558: FNOT2S	fandnot1s	%f10, %f19
	.word 0xe707e000  ! 559: LDF_I	ld	[%r31, 0x0000], %f19
	.word 0xa5b10701  ! 560: FMULD8SUx16	fmuld8ulx16	%f4, %f1, %d18
	.word 0xa7b44cf1  ! 561: FNOT2S	fandnot1s	%f17, %f19
	.word 0xe707e0a0  ! 561: LDF_I	ld	[%r31, 0x00a0], %f19
	.word 0xa9b44710  ! 562: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d20
	.word 0xe1bfdc40  ! 563: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x97a509c4  ! 564: FDIVd	fdivd	%f20, %f4, %f42
	.word 0xa3b40713  ! 565: FMULD8SUx16	fmuld8ulx16	%f16, %f19, %d48
	.word 0xa5a4c9d3  ! 565: FDIVd	fdivd	%f50, %f50, %f18
    nop
    nop
    mov 19, %g1
loopb_20_130:
    ldstub [%r31+0x50], %r2
    brnz,a %r1, loopb_20_130
    dec %r1
	.word 0x95a089ad  ! 566: FDIVs	fdivs	%f2, %f13, %f10
	.word 0xe1bfc3e0  ! 567: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa1b487d1  ! 568: PDIST	pdistn	%d18, %d48, %d16
	.word 0x99a2c9b2  ! 569: FDIVs	fdivs	%f11, %f18, %f12
	.word 0xe1bfdd40  ! 569: STDFA_R	stda	%f16, [%r0, %r31]
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
    nop
    nop
    mov 47, %g1
loopb_20_132:
    ldstub [%r31+48], %r2
    brnz,a %r1, loopb_20_132
    dec %r1
	.word 0xd81fe100  ! 570: LDD_I	ldd	[%r31 + 0x0100], %r12
	.word 0xe19fc2c0  ! 571: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x97b44711  ! 572: FMULD8SUx16	fmuld8ulx16	%f17, %f17, %d42
	.word 0xd61fe070  ! 573: LDD_I	ldd	[%r31 + 0x0070], %r11
	.word 0xc19fc2c0  ! 573: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xd61fe0d0  ! 574: LDD_I	ldd	[%r31 + 0x00d0], %r11
	.word 0xbfe7c000  ! 575: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7b48710  ! 576: FMULD8SUx16	fmuld8ulx16	%f18, %f16, %d50
	.word 0xe61fe1f0  ! 577: LDD_I	ldd	[%r31 + 0x01f0], %r19
	.word 0xa9b2870d  ! 577: FMULD8SUx16	fmuld8ulx16	%f10, %f13, %d20
	.word 0x99b480b3  ! 578: EDGE16N	edge16n	%r18, %r19, %r12
	.word 0xd907e070  ! 579: LDF_I	ld	[%r31, 0x0070], %f12
	.word 0x91b44701  ! 580: FMULD8SUx16	fmuld8ulx16	%f17, %f1, %d8
	.word 0xa5b400b4  ! 581: EDGE16N	edge16n	%r16, %r20, %r18
	.word 0xe507e100  ! 581: LDF_I	ld	[%r31, 0x0100], %f18
	.word 0xe41fe1b0  ! 582: LDD_I	ldd	[%r31 + 0x01b0], %r18
	.word 0x9d97c000  ! 583: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa1b44ce2  ! 584: FNOT2S	fandnot1s	%f2, %f16
	.word 0xe01fe020  ! 585: LDD_I	ldd	[%r31 + 0x0020], %r16
	.word 0xa5b18cf4  ! 585: FNOT2S	fandnot1s	%f20, %f18
	.word 0xe41fe080  ! 586: LDD_I	ldd	[%r31 + 0x0080], %r18
	.word 0xbfe7c000  ! 587: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7b48710  ! 588: FMULD8SUx16	fmuld8ulx16	%f18, %f16, %d50
	.word 0xe61fe0c0  ! 589: LDD_I	ldd	[%r31 + 0x00c0], %r19
	.word 0xa5b10713  ! 589: FMULD8SUx16	fmuld8ulx16	%f4, %f19, %d18
	.word 0x93b0c701  ! 590: FMULD8SUx16	fmuld8ulx16	%f3, %f1, %d40
	.word 0xc3efe010  ! 591: PREFETCHA_I	prefetcha	[%r31, + 0x0010] %asi, #one_read
	.word 0xd21fe0f0  ! 592: LDD_I	ldd	[%r31 + 0x00f0], %r9
	.word 0x93b4c711  ! 593: FMULD8SUx16	fmuld8ulx16	%f19, %f17, %d40
	.word 0xd33fe060  ! 593: STDF_I	std	%f9, [0x0060, %r31]
	.word 0x93a409d4  ! 594: FDIVd	fdivd	%f16, %f20, %f40
	.word 0x9d97c000  ! 595: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa5b24709  ! 596: FMULD8SUx16	fmuld8ulx16	%f9, %f9, %d18
	.word 0xa5a2c9d1  ! 597: FDIVd	fdivd	%f42, %f48, %f18
	.word 0x93b4870b  ! 597: FMULD8SUx16	fmuld8ulx16	%f18, %f11, %d40
    nop
    nop
    mov 51, %g1
loopb_20_139:
    ldstub [%r31+0x70], %r2
    brnz,a %r1, loopb_20_139
    dec %r1
	.word 0x93a509d4  ! 598: FDIVd	fdivd	%f20, %f20, %f40
	.word 0xe19fdf00  ! 599: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x91a509b2  ! 600: FDIVs	fdivs	%f20, %f18, %f8
	.word 0xa5a409c7  ! 601: FDIVd	fdivd	%f16, %f38, %f18
	.word 0x95a249a8  ! 601: FDIVs	fdivs	%f9, %f8, %f10
	.word 0x97a489cb  ! 602: FDIVd	fdivd	%f18, %f42, %f42
	.word 0xd71fe130  ! 603: LDDF_I	ldd	[%r31, 0x0130], %f11
	.word 0x97a109ca  ! 604: FDIVd	fdivd	%f4, %f10, %f42
	.word 0xa9a289d0  ! 605: FDIVd	fdivd	%f10, %f16, %f20
	.word 0xc3efe120  ! 605: PREFETCHA_I	prefetcha	[%r31, + 0x0120] %asi, #one_read
	.word 0xe81fe1c0  ! 606: LDD_I	ldd	[%r31 + 0x01c0], %r20
	.word 0xbfe7c000  ! 607: SAVE_R	save	%r31, %r0, %r31
	.word 0x91a289d0  ! 608: FDIVd	fdivd	%f10, %f16, %f8
	.word 0xd01fe0d0  ! 609: LDD_I	ldd	[%r31 + 0x00d0], %r8
	.word 0x9d97c000  ! 609: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd01fe0c0  ! 610: LDD_I	ldd	[%r31 + 0x00c0], %r8
	.word 0x87afca40  ! 611: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x95a089b1  ! 612: FDIVs	fdivs	%f2, %f17, %f10
	.word 0xd41fe000  ! 613: LDD_I	ldd	[%r31 + 0x0000], %r10
	.word 0xa1a409a5  ! 613: FDIVs	fdivs	%f16, %f5, %f16
	.word 0x9bb087d0  ! 614: PDIST	pdistn	%d2, %d16, %d44
	.word 0xdb07e070  ! 615: LDF_I	ld	[%r31, 0x0070], %f13
	.word 0x93b480b3  ! 616: EDGE16N	edge16n	%r18, %r19, %r9
	.word 0x91b447c3  ! 617: PDIST	pdistn	%d48, %d34, %d8
	.word 0xd107e120  ! 617: LDF_I	ld	[%r31, 0x0120], %f8
	.word 0xa9b48714  ! 618: FMULD8SUx16	fmuld8ulx16	%f18, %f20, %d20
	.word 0xc1bfc2c0  ! 619: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa9b2cce4  ! 620: FNOT2S	fandnot1s	%f4, %f20
	.word 0xa1b48713  ! 621: FMULD8SUx16	fmuld8ulx16	%f18, %f19, %d16
	.word 0x9bb40cf1  ! 621: FNOT2S	fandnot1s	%f17, %f13
	.word 0xa7b1c0b0  ! 622: EDGE16N	edge16n	%r7, %r16, %r19
	.word 0xe6dfc180  ! 623: LDXA_R	ldxa	[%r31, %r0] 0x0c, %r19
	.word 0xe61fe0f0  ! 624: LDD_I	ldd	[%r31 + 0x00f0], %r19
	.word 0xa7b200ab  ! 625: EDGE16N	edge16n	%r8, %r11, %r19
	.word 0x9f802040  ! 625: SIR	sir	0x0040
	.word 0xa1b087d3  ! 626: PDIST	pdistn	%d2, %d50, %d16
	.word 0xe11fe190  ! 627: LDDF_I	ldd	[%r31, 0x0190], %f16
	.word 0xe01fe1f0  ! 628: LDD_I	ldd	[%r31 + 0x01f0], %r16
	.word 0x99b247c1  ! 629: PDIST	pdistn	%d40, %d32, %d12
	.word 0xd81fe090  ! 629: LDD_I	ldd	[%r31 + 0x0090], %r12
	.word 0xa1b50ce7  ! 630: FNOT2S	fandnot1s	%f7, %f16
	.word 0xe107e180  ! 631: LDF_I	ld	[%r31, 0x0180], %f16
	.word 0xa7b34cf2  ! 632: FNOT2S	fandnot1s	%f18, %f19
	.word 0xa7b44ce8  ! 633: FNOT2S	fandnot1s	%f8, %f19
	.word 0xa5b50ce2  ! 633: FNOT2S	fandnot1s	%f2, %f18
	.word 0x9bb340b1  ! 634: EDGE16N	edge16n	%r13, %r17, %r13
	.word 0xda9fc6c0  ! 635: LDDA_R	ldda	[%r31, %r0] 0x36, %r13
	.word 0x9ba4c9a8  ! 636: FDIVs	fdivs	%f19, %f8, %f13
	.word 0xa1b340b4  ! 637: EDGE16N	edge16n	%r13, %r20, %r16
	.word 0xc32fe1f0  ! 637: STXFSR_I	st-sfr	%f1, [0x01f0, %r31]
	.word 0xa3a2c9c2  ! 638: FDIVd	fdivd	%f42, %f2, %f48
	.word 0x9d97c000  ! 639: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x93b50ce7  ! 640: FNOT2S	fandnot1s	%f7, %f9
	.word 0x95a109d2  ! 641: FDIVd	fdivd	%f4, %f18, %f10
	.word 0xbfefc000  ! 641: RESTORE_R	restore	%r31, %r0, %r31
    nop
    nop
    mov 27, %g1
loopb_20_150:
    ldstub [%r31+0x1d0], %r2
    brnz,a %r1, loopb_20_150
    dec %r1
	.word 0x9ba509d4  ! 642: FDIVd	fdivd	%f20, %f20, %f44
	.word 0xe19fc3e0  ! 643: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa1b300a4  ! 644: EDGE16N	edge16n	%r12, %r4, %r16
	.word 0x93a509c5  ! 645: FDIVd	fdivd	%f20, %f36, %f40
	.word 0xc1bfc3e0  ! 645: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa5a509c8  ! 646: FDIVd	fdivd	%f20, %f8, %f18
	.word 0xbfefc000  ! 647: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9ba4c9b1  ! 648: FDIVs	fdivs	%f19, %f17, %f13
	.word 0xa9a449d4  ! 649: FDIVd	fdivd	%f48, %f20, %f20
	.word 0xbfe7c000  ! 649: SAVE_R	save	%r31, %r0, %r31
	.word 0x95a409b4  ! 650: FDIVs	fdivs	%f16, %f20, %f10
	.word 0x95a7c9c0  ! 651: FDIVd	fdivd	%f62, %f0, %f10
	.word 0xa1a4c9d2  ! 652: FDIVd	fdivd	%f50, %f18, %f16
	.word 0x93a109b4  ! 653: FDIVs	fdivs	%f4, %f20, %f9
	.word 0x99a209c5  ! 653: FDIVd	fdivd	%f8, %f36, %f12
	.word 0x91b2ccf0  ! 654: FNOT2S	fandnot1s	%f16, %f8
	.word 0xe19fdb40  ! 655: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x95a2c9b2  ! 656: FDIVs	fdivs	%f11, %f18, %f10
	.word 0xa7b30cea  ! 657: FNOT2S	fandnot1s	%f10, %f19
	.word 0x99a509a1  ! 657: FDIVs	fdivs	%f20, %f1, %f12
	.word 0x99a0c9c3  ! 658: FDIVd	fdivd	%f34, %f34, %f12
	.word 0xbfefc000  ! 659: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x93b24cea  ! 660: FNOT2S	fandnot1s	%f10, %f9
	.word 0x95a509d3  ! 661: FDIVd	fdivd	%f20, %f50, %f10
	.word 0x97b4ccf2  ! 661: FNOT2S	fandnot1s	%f18, %f11
	.word 0xe09fdf20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf9, %r16
	.word 0xc1bfdf00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe0bfdf20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf9
	.word 0xc1bfda60  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc1bfda60  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc19fda60  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe09fde00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf0, %r16
	.word 0xe19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xd61fe1f0  ! 662: LDD_I	ldd	[%r31 + 0x01f0], %r11
	.word 0xd7e7c280  ! 663: CASA_I	casa	[%r31] 0x14, %r0, %r11
	.word 0x95a489d1  ! 664: FDIVd	fdivd	%f18, %f48, %f10
	.word 0xd41fe1c0  ! 665: LDD_I	ldd	[%r31 + 0x01c0], %r10
	.word 0x9f802030  ! 665: SIR	sir	0x0030
	.word 0x93b34712  ! 666: FMULD8SUx16	fmuld8ulx16	%f13, %f18, %d40
	.word 0x39400001  ! 667: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xd21fe030  ! 668: LDD_I	ldd	[%r31 + 0x0030], %r9
	.word 0x95b4c704  ! 669: FMULD8SUx16	fmuld8ulx16	%f19, %f4, %d10
	.word 0xd5e7dd40  ! 669: CASA_I	casa	[%r31] 0xea, %r0, %r10
	.word 0x9bb18ce9  ! 670: FNOT2S	fandnot1s	%f9, %f13
	.word 0xdb3fe080  ! 671: STDF_I	std	%f13, [0x0080, %r31]
	.word 0xa9a089c8  ! 672: FDIVd	fdivd	%f2, %f8, %f20
	.word 0x97b10cf3  ! 673: FNOT2S	fandnot1s	%f19, %f11
	.word 0xd71fe170  ! 673: LDDF_I	ldd	[%r31, 0x0170], %f11
    nop
    nop
    mov 3, %g1
loopb_20_156:
    ldstub [%r31+0x180], %r2
    brnz,a %r1, loopb_20_156
    dec %r1
	.word 0xa7a1c9d0  ! 674: FDIVd	fdivd	%f38, %f16, %f50
	.word 0xc1bfc2c0  ! 675: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa3b48cf2  ! 676: FNOT2S	fandnot1s	%f18, %f17
	.word 0x9ba289c3  ! 677: FDIVd	fdivd	%f10, %f34, %f44
	.word 0xe19fdb40  ! 677: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x95b48cf4  ! 678: FNOT2S	fandnot1s	%f20, %f10
	.word 0xd507e170  ! 679: LDF_I	ld	[%r31, 0x0170], %f10
	.word 0xa3b4c709  ! 680: FMULD8SUx16	fmuld8ulx16	%f19, %f9, %d48
	.word 0xa7b40cf1  ! 681: FNOT2S	fandnot1s	%f17, %f19
	.word 0x9bb10701  ! 681: FMULD8SUx16	fmuld8ulx16	%f4, %f1, %d44
    nop
    nop
    mov 63, %g1
loopb_20_158:
    ldstub [%r31+0x90], %r2
    brnz,a %r1, loopb_20_158
    dec %r1
	.word 0x9bb4c714  ! 682: FMULD8SUx16	fmuld8ulx16	%f19, %f20, %d44
	.word 0xe1bfdd40  ! 683: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x93b400b1  ! 684: EDGE16N	edge16n	%r16, %r17, %r9
	.word 0xa5b44711  ! 685: FMULD8SUx16	fmuld8ulx16	%f17, %f17, %d18
	.word 0xa7b500b1  ! 685: EDGE16N	edge16n	%r20, %r17, %r19
	.word 0x91b447d4  ! 686: PDIST	pdistn	%d48, %d20, %d8
	.word 0xd107e060  ! 687: LDF_I	ld	[%r31, 0x0060], %f8
	.word 0xa9b0cce7  ! 688: FNOT2S	fandnot1s	%f7, %f20
	.word 0xa1b507d3  ! 689: PDIST	pdistn	%d20, %d50, %d16
	.word 0xa7b18ced  ! 689: FNOT2S	fandnot1s	%f13, %f19
	.word 0x97a489c4  ! 690: FDIVd	fdivd	%f18, %f4, %f42
	.word 0xd707e030  ! 691: LDF_I	ld	[%r31, 0x0030], %f11
	.word 0xa9b4c712  ! 692: FMULD8SUx16	fmuld8ulx16	%f19, %f18, %d20
	.word 0x93a0c9cb  ! 693: FDIVd	fdivd	%f34, %f42, %f40
	.word 0xd307e050  ! 693: LDF_I	ld	[%r31, 0x0050], %f9
	.word 0xa5a489b0  ! 694: FDIVs	fdivs	%f18, %f16, %f18
	.word 0xc36fe040  ! 695: PREFETCH_I	prefetch	[%r31 + 0x0040], #one_read
	.word 0xe41fe070  ! 696: LDD_I	ldd	[%r31 + 0x0070], %r18
	.word 0xa3a289a8  ! 697: FDIVs	fdivs	%f10, %f8, %f17
	.word 0xe21fe070  ! 697: LDD_I	ldd	[%r31 + 0x0070], %r17
	.word 0xa3a349b3  ! 698: FDIVs	fdivs	%f13, %f19, %f17
	.word 0xbfe7c000  ! 699: SAVE_R	save	%r31, %r0, %r31
	.word 0xa9b440b2  ! 700: EDGE16N	edge16n	%r17, %r18, %r20
	.word 0x97a209a8  ! 701: FDIVs	fdivs	%f8, %f8, %f11
	.word 0xa3b080a7  ! 701: EDGE16N	edge16n	%r2, %r7, %r17
    nop
    nop
    mov 11, %g1
loopz_20_163:
    ldstub [%r31+0xe0], %r2
    brnz,a %r1, loopz_20_163
    dec %r1
	.word 0xa5b2c7d0  ! 702: PDIST	pdistn	%d42, %d16, %d18
	.word 0xc32fe070  ! 703: STXFSR_I	st-sfr	%f1, [0x0070, %r31]
	.word 0xe41fe070  ! 704: LDD_I	ldd	[%r31 + 0x0070], %r18
	.word 0x95b407c2  ! 705: PDIST	pdistn	%d16, %d2, %d10
	.word 0xc32fe030  ! 705: STXFSR_I	st-sfr	%f1, [0x0030, %r31]
    nop
    nop
    mov 55, %g1
loopb_20_165:
    ldstub [%r31+0x100], %r2
    brnz,a %r1, loopb_20_165
    dec %r1
	.word 0xd41fe190  ! 706: LDD_I	ldd	[%r31 + 0x0190], %r10
	.word 0xe19fdf00  ! 707: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x97b50713  ! 708: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d42
	.word 0xd61fe190  ! 709: LDD_I	ldd	[%r31 + 0x0190], %r11
	.word 0xa1b44710  ! 709: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d16
	.word 0xe1bfdf00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc1bfdc40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe0bfdb40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xda
	.word 0xc0bfdb40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xda
	.word 0xc0bfdc40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xe2
	.word 0xc1bfc3e0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe09fdf20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf9, %r16
	.word 0xc1bfdd40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc19fda60  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa7b08ce9  ! 710: FNOT2S	fandnot1s	%f9, %f19
	.word 0xe707e120  ! 711: LDF_I	ld	[%r31, 0x0120], %f19
	.word 0xa7b20712  ! 712: FMULD8SUx16	fmuld8ulx16	%f8, %f18, %d50
	.word 0xa9b48cf1  ! 713: FNOT2S	fandnot1s	%f17, %f20
	.word 0xe907e1c0  ! 713: LDF_I	ld	[%r31, 0x01c0], %f20
	.word 0x95a109c7  ! 714: FDIVd	fdivd	%f4, %f38, %f10
	.word 0xc36fe0f0  ! 715: PREFETCH_I	prefetch	[%r31 + 0x00f0], #one_read
	.word 0xa5b187d2  ! 716: PDIST	pdistn	%d6, %d18, %d18
	.word 0x95a489d4  ! 717: FDIVd	fdivd	%f18, %f20, %f10
	.word 0x99b487d3  ! 717: PDIST	pdistn	%d18, %d50, %d12
	.word 0x91b1c704  ! 718: FMULD8SUx16	fmuld8ulx16	%f7, %f4, %d8
	.word 0x91a7c9c0  ! 719: FDIVd	fdivd	%f62, %f0, %f8
	.word 0xa3a4c9a2  ! 720: FDIVs	fdivs	%f19, %f2, %f17
	.word 0x9bb40710  ! 721: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d44
	.word 0xa9a449b2  ! 721: FDIVs	fdivs	%f17, %f18, %f20
	.word 0x97a149a1  ! 722: FDIVs	fdivs	%f5, %f1, %f11
	.word 0xbfefc000  ! 723: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x99a489a1  ! 724: FDIVs	fdivs	%f18, %f1, %f12
	.word 0xa9a409a3  ! 725: FDIVs	fdivs	%f16, %f3, %f20
	.word 0xbfe7c000  ! 725: SAVE_R	save	%r31, %r0, %r31
	.word 0x9ba2c9cc  ! 726: FDIVd	fdivd	%f42, %f12, %f44
	.word 0xe19fdf20  ! 727: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x93a509c9  ! 728: FDIVd	fdivd	%f20, %f40, %f40
	.word 0xa3a309d4  ! 729: FDIVd	fdivd	%f12, %f20, %f48
	.word 0xa7a0c9c8  ! 729: FDIVd	fdivd	%f34, %f8, %f50
	.word 0xa3a149d2  ! 730: FDIVd	fdivd	%f36, %f18, %f48
	.word 0xc32fe1b0  ! 731: STXFSR_I	st-sfr	%f1, [0x01b0, %r31]
	.word 0x95b1cce2  ! 732: FNOT2S	fandnot1s	%f2, %f10
	.word 0xa7a209d1  ! 733: FDIVd	fdivd	%f8, %f48, %f50
	.word 0xa1b4ccec  ! 733: FNOT2S	fandnot1s	%f12, %f16
    nop
    nop
    mov 63, %g1
loopb_20_168:
    ldstub [%r31+0xd0], %r2
    brnz,a %r1, loopb_20_168
    dec %r1
	.word 0xa1b1c702  ! 734: FMULD8SUx16	fmuld8ulx16	%f7, %f2, %d16
	.word 0xc1bfdc40  ! 735: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91b4ccf0  ! 736: FNOT2S	fandnot1s	%f16, %f8
	.word 0x93b4c706  ! 737: FMULD8SUx16	fmuld8ulx16	%f19, %f6, %d40
	.word 0xe19fdf00  ! 737: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x97b487d1  ! 738: PDIST	pdistn	%d18, %d48, %d42
	.word 0xd707e1c0  ! 739: LDF_I	ld	[%r31, 0x01c0], %f11
	.word 0xa7b50714  ! 740: FMULD8SUx16	fmuld8ulx16	%f20, %f20, %d50
	.word 0x93b447d3  ! 741: PDIST	pdistn	%d48, %d50, %d40
	.word 0xd307e1e0  ! 741: LDF_I	ld	[%r31, 0x01e0], %f9
	.word 0x9bb087d2  ! 742: PDIST	pdistn	%d2, %d18, %d44
	.word 0xbfe7c000  ! 743: SAVE_R	save	%r31, %r0, %r31
	.word 0x99b50ced  ! 744: FNOT2S	fandnot1s	%f13, %f12
	.word 0x97b1c7c7  ! 745: PDIST	pdistn	%d38, %d38, %d42
	.word 0x99b18cf0  ! 745: FNOT2S	fandnot1s	%f16, %f12
	.word 0xe19fdb40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe0bfdc00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xe0
	.word 0xc19fc2c0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc1bfde00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe0bfda60  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd3
	.word 0xe0bfdf20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf9
	.word 0xc0bfda00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd0
	.word 0xc1bfdd40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
	.word 0xe19fde00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc1bfdf00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc1bfde00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fde20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf1, %r0
	.word 0xc19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa1a189c1  ! 746: FDIVd	fdivd	%f6, %f32, %f16
	.word 0x24cfc001  ! 747: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xa5a449cb  ! 748: FDIVd	fdivd	%f48, %f42, %f18
	.word 0x95a409c3  ! 749: FDIVd	fdivd	%f16, %f34, %f10
	.word 0xa1a109cc  ! 749: FDIVd	fdivd	%f4, %f12, %f16
	.word 0xa9a409b4  ! 750: FDIVs	fdivs	%f16, %f20, %f20
	.word 0xe907e070  ! 751: LDF_I	ld	[%r31, 0x0070], %f20
	.word 0xe81fe1e0  ! 752: LDD_I	ldd	[%r31 + 0x01e0], %r20
	.word 0xa5a4c9a9  ! 753: FDIVs	fdivs	%f19, %f9, %f18
	.word 0xe507e0a0  ! 753: LDF_I	ld	[%r31, 0x00a0], %f18
	.word 0xa5b500aa  ! 754: EDGE16N	edge16n	%r20, %r10, %r18
	.word 0xbfe7c000  ! 755: SAVE_R	save	%r31, %r0, %r31
	.word 0x9ba409c8  ! 756: FDIVd	fdivd	%f16, %f8, %f44
	.word 0x99b400ac  ! 757: EDGE16N	edge16n	%r16, %r12, %r12
	.word 0x99a509c1  ! 757: FDIVd	fdivd	%f20, %f32, %f12
	.word 0xa3b24ce6  ! 758: FNOT2S	fandnot1s	%f6, %f17
	.word 0xe23fe0f0  ! 759: STD_I	std	%r17, [%r31 + 0x00f0]
	.word 0xa7b50ce1  ! 760: FNOT2S	fandnot1s	%f1, %f19
	.word 0xa5b08cf3  ! 761: FNOT2S	fandnot1s	%f19, %f18
	.word 0x9f8020c0  ! 761: SIR	sir	0x00c0
    nop
    nop
    mov 27, %g1
loopb_20_175:
    ldstub [%r31+0x70], %r2
    brnz,a %r1, loopb_20_175
    dec %r1
	.word 0xa9b200b0  ! 762: EDGE16N	edge16n	%r8, %r16, %r20
	.word 0xc19fc2c0  ! 763: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa7b087c1  ! 764: PDIST	pdistn	%d2, %d32, %d50
	.word 0xa9b040b4  ! 765: EDGE16N	edge16n	%r1, %r20, %r20
	.word 0xc1bfc3e0  ! 765: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x9bb2cced  ! 766: FNOT2S	fandnot1s	%f13, %f13
	.word 0xbfe7c000  ! 767: SAVE_R	save	%r31, %r0, %r31
	.word 0xa3b087c4  ! 768: PDIST	pdistn	%d2, %d4, %d48
	.word 0x95b48cec  ! 769: FNOT2S	fandnot1s	%f12, %f10
	.word 0xbfe7c000  ! 769: SAVE_R	save	%r31, %r0, %r31
	.word 0x9ba4c9a6  ! 770: FDIVs	fdivs	%f19, %f6, %f13
	.word 0xdbe7c380  ! 771: CASA_I	casa	[%r31] 0x1c, %r0, %r13
	.word 0xda1fe030  ! 772: LDD_I	ldd	[%r31 + 0x0030], %r13
	.word 0xa5a0c9b4  ! 773: FDIVs	fdivs	%f3, %f20, %f18
	.word 0xe41fe070  ! 773: LDD_I	ldd	[%r31 + 0x0070], %r18
    nop
    nop
    mov 15, %g1
loopz_20_179:
    ldstub [%r31+0xf0], %r2
    brnz,a %r1, loopz_20_179
    dec %r1
	.word 0x95b18714  ! 774: FMULD8SUx16	fmuld8ulx16	%f6, %f20, %d10
	.word 0xd51fe050  ! 775: LDDF_I	ldd	[%r31, 0x0050], %f10
	.word 0xa9a349ad  ! 776: FDIVs	fdivs	%f13, %f13, %f20
	.word 0xa1b10711  ! 777: FMULD8SUx16	fmuld8ulx16	%f4, %f17, %d16
	.word 0xe01fe1a0  ! 777: LDD_I	ldd	[%r31 + 0x01a0], %r16
	.word 0xa5b4c70d  ! 778: FMULD8SUx16	fmuld8ulx16	%f19, %f13, %d18
	.word 0x87afca40  ! 779: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x91b087d1  ! 780: PDIST	pdistn	%d2, %d48, %d8
	.word 0x9bb08712  ! 781: FMULD8SUx16	fmuld8ulx16	%f2, %f18, %d44
	.word 0x97b487c5  ! 781: PDIST	pdistn	%d18, %d36, %d42
	.word 0xa9b087c8  ! 782: PDIST	pdistn	%d2, %d8, %d20
	.word 0xe83fe0f0  ! 783: STD_I	std	%r20, [%r31 + 0x00f0]
	.word 0x93b407d1  ! 784: PDIST	pdistn	%d16, %d48, %d40
	.word 0x91b247c7  ! 785: PDIST	pdistn	%d40, %d38, %d8
	.word 0x24cfc001  ! 785: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x9bb4c0b3  ! 786: EDGE16N	edge16n	%r19, %r19, %r13
	.word 0xbfe7c000  ! 787: SAVE_R	save	%r31, %r0, %r31
	.word 0x95b44714  ! 788: FMULD8SUx16	fmuld8ulx16	%f17, %f20, %d10
	.word 0xa1b4c0b0  ! 789: EDGE16N	edge16n	%r19, %r16, %r16
	.word 0xa7b50708  ! 789: FMULD8SUx16	fmuld8ulx16	%f20, %f8, %d50
	.word 0x91a4c9b0  ! 790: FDIVs	fdivs	%f19, %f16, %f8
	.word 0xbfe7c000  ! 791: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7b047c1  ! 792: PDIST	pdistn	%d32, %d32, %d50
	.word 0x95a509b3  ! 793: FDIVs	fdivs	%f20, %f19, %f10
	.word 0xa3b487c2  ! 793: PDIST	pdistn	%d18, %d2, %d48
    nop
    nop
    mov 15, %g1
loopz_20_183:
    ldstub [%r31+0x1a0], %r2
    brnz,a %r1, loopz_20_183
    dec %r1
	.word 0x97a189c6  ! 794: FDIVd	fdivd	%f6, %f6, %f42
	.word 0xd61fc000  ! 795: LDD_R	ldd	[%r31 + %r0], %r11
	.word 0x95b400a7  ! 796: EDGE16N	edge16n	%r16, %r7, %r10
	.word 0xa3a209d1  ! 797: FDIVd	fdivd	%f8, %f48, %f48
	.word 0x9bb4c0b1  ! 797: EDGE16N	edge16n	%r19, %r17, %r13
	.word 0x91b0c709  ! 798: FMULD8SUx16	fmuld8ulx16	%f3, %f9, %d8
	.word 0xd01fe100  ! 799: LDD_I	ldd	[%r31 + 0x0100], %r8
	.word 0x93b2070d  ! 800: FMULD8SUx16	fmuld8ulx16	%f8, %f13, %d40
	.word 0xa1b4c705  ! 801: FMULD8SUx16	fmuld8ulx16	%f19, %f5, %d16
	.word 0xc32fe030  ! 801: STXFSR_I	st-sfr	%f1, [0x0030, %r31]
	.word 0x9ba249c5  ! 802: FDIVd	fdivd	%f40, %f36, %f44
	.word 0xdb07e050  ! 803: LDF_I	ld	[%r31, 0x0050], %f13
	.word 0xa3a249aa  ! 804: FDIVs	fdivs	%f9, %f10, %f17
	.word 0xa5a189d4  ! 805: FDIVd	fdivd	%f6, %f20, %f18
	.word 0x95a409a3  ! 805: FDIVs	fdivs	%f16, %f3, %f10
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
	.word 0xa5b340b2  ! 806: EDGE16N	edge16n	%r13, %r18, %r18
	.word 0xe41fe040  ! 807: LDD_I	ldd	[%r31 + 0x0040], %r18
	.word 0xa9b04706  ! 808: FMULD8SUx16	fmuld8ulx16	%f1, %f6, %d20
	.word 0xa7b500b3  ! 809: EDGE16N	edge16n	%r20, %r19, %r19
	.word 0xe61fe050  ! 809: LDD_I	ldd	[%r31 + 0x0050], %r19
	.word 0xa5a209b4  ! 810: FDIVs	fdivs	%f8, %f20, %f18
	.word 0xe1bfda00  ! 811: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe41fe110  ! 812: LDD_I	ldd	[%r31 + 0x0110], %r18
	.word 0xa3a249b1  ! 813: FDIVs	fdivs	%f9, %f17, %f17
	.word 0xc19fdb20  ! 813: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa9a449a1  ! 814: FDIVs	fdivs	%f17, %f1, %f20
	.word 0x87afca40  ! 815: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa7b50cf4  ! 816: FNOT2S	fandnot1s	%f20, %f19
	.word 0x91a349b1  ! 817: FDIVs	fdivs	%f13, %f17, %f8
	.word 0xd03fe080  ! 817: STD_I	std	%r8, [%r31 + 0x0080]
	.word 0xa9b400b0  ! 818: EDGE16N	edge16n	%r16, %r16, %r20
	.word 0x9f802190  ! 819: SIR	sir	0x0190
	.word 0x93b507c7  ! 820: PDIST	pdistn	%d20, %d38, %d40
	.word 0x91b480b1  ! 821: EDGE16N	edge16n	%r18, %r17, %r8
	.word 0xd01fe170  ! 821: LDD_I	ldd	[%r31 + 0x0170], %r8
	.word 0xd01fe0f0  ! 822: LDD_I	ldd	[%r31 + 0x00f0], %r8
	.word 0xd03fe1d0  ! 823: STD_I	std	%r8, [%r31 + 0x01d0]
	.word 0x97a1c9b1  ! 824: FDIVs	fdivs	%f7, %f17, %f11
	.word 0xd61fe0d0  ! 825: LDD_I	ldd	[%r31 + 0x00d0], %r11
	.word 0xd7e7c540  ! 825: CASA_I	casa	[%r31] 0x2a, %r0, %r11
	.word 0xa1a149a4  ! 826: FDIVs	fdivs	%f5, %f4, %f16
	.word 0xe097dd40  ! 827: LDUHA_R	lduha	[%r31, %r0] 0xea, %r16
	.word 0xa9b28714  ! 828: FMULD8SUx16	fmuld8ulx16	%f10, %f20, %d20
	.word 0x91a4c9ad  ! 829: FDIVs	fdivs	%f19, %f13, %f8
	.word 0x99b14712  ! 829: FMULD8SUx16	fmuld8ulx16	%f5, %f18, %d12
    nop
    nop
    mov 35, %g1
loopz_20_189:
    ldstub [%r31+0x160], %r2
    brnz,a %r1, loopz_20_189
    dec %r1
	.word 0xa9b04707  ! 830: FMULD8SUx16	fmuld8ulx16	%f1, %f7, %d20
	.word 0xe9e7e000  ! 831: CASA_R	casa	[%r31] %asi, %r0, %r20
	.word 0xa1b44712  ! 832: FMULD8SUx16	fmuld8ulx16	%f17, %f18, %d16
	.word 0xa9b48703  ! 833: FMULD8SUx16	fmuld8ulx16	%f18, %f3, %d20
	.word 0x95b44709  ! 833: FMULD8SUx16	fmuld8ulx16	%f17, %f9, %d10
	.word 0xa7a449d3  ! 834: FDIVd	fdivd	%f48, %f50, %f50
	.word 0xe707e1c0  ! 835: LDF_I	ld	[%r31, 0x01c0], %f19
	.word 0x91b080b0  ! 836: EDGE16N	edge16n	%r2, %r16, %r8
	.word 0x91a4c9d1  ! 837: FDIVd	fdivd	%f50, %f48, %f8
	.word 0xa3b300b2  ! 837: EDGE16N	edge16n	%r12, %r18, %r17
	.word 0x95b30cf0  ! 838: FNOT2S	fandnot1s	%f16, %f10
	.word 0xd507e070  ! 839: LDF_I	ld	[%r31, 0x0070], %f10
	.word 0xa1b28cf4  ! 840: FNOT2S	fandnot1s	%f20, %f16
	.word 0x99b48ce6  ! 841: FNOT2S	fandnot1s	%f6, %f12
	.word 0xa3b30ce3  ! 841: FNOT2S	fandnot1s	%f3, %f17
	.word 0x9bb0c7c1  ! 842: PDIST	pdistn	%d34, %d32, %d44
	.word 0xda3fe0f0  ! 843: STD_I	std	%r13, [%r31 + 0x00f0]
	.word 0xa9b2ccf0  ! 844: FNOT2S	fandnot1s	%f16, %f20
	.word 0x95b207d3  ! 845: PDIST	pdistn	%d8, %d50, %d10
	.word 0x99b18ce2  ! 845: FNOT2S	fandnot1s	%f2, %f12
	.word 0xa3b08706  ! 846: FMULD8SUx16	fmuld8ulx16	%f2, %f6, %d48
	.word 0x9d97c000  ! 847: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9ba4c9a7  ! 848: FDIVs	fdivs	%f19, %f7, %f13
	.word 0xa9b10707  ! 849: FMULD8SUx16	fmuld8ulx16	%f4, %f7, %d20
	.word 0x97a189b4  ! 849: FDIVs	fdivs	%f6, %f20, %f11
	.word 0xd61fe110  ! 850: LDD_I	ldd	[%r31 + 0x0110], %r11
	.word 0x20800001  ! 851: BN	bn,a	<label_0x1>
	.word 0xa9b347d4  ! 852: PDIST	pdistn	%d44, %d20, %d20
	.word 0xe81fe1c0  ! 853: LDD_I	ldd	[%r31 + 0x01c0], %r20
	.word 0xa3b107d1  ! 853: PDIST	pdistn	%d4, %d48, %d48
	.word 0xa7b50ce2  ! 854: FNOT2S	fandnot1s	%f2, %f19
	.word 0xe6dfc600  ! 855: LDXA_R	ldxa	[%r31, %r0] 0x30, %r19
	.word 0xa3a289b3  ! 856: FDIVs	fdivs	%f10, %f19, %f17
	.word 0xa1b40cf4  ! 857: FNOT2S	fandnot1s	%f20, %f16
	.word 0xe01fe150  ! 857: LDD_I	ldd	[%r31 + 0x0150], %r16
	.word 0x91b300b3  ! 858: EDGE16N	edge16n	%r12, %r19, %r8
	.word 0xe1bfc2c0  ! 859: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x95a289b1  ! 860: FDIVs	fdivs	%f10, %f17, %f10
	.word 0x9bb400b2  ! 861: EDGE16N	edge16n	%r16, %r18, %r13
	.word 0xe19fdd40  ! 861: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x93b2c0b4  ! 862: EDGE16N	edge16n	%r11, %r20, %r9
	.word 0xc32fe1c0  ! 863: STXFSR_I	st-sfr	%f1, [0x01c0, %r31]
	.word 0xa1b50cf1  ! 864: FNOT2S	fandnot1s	%f17, %f16
	.word 0xa1b500b1  ! 865: EDGE16N	edge16n	%r20, %r17, %r16
	.word 0xe01fe0b0  ! 865: LDD_I	ldd	[%r31 + 0x00b0], %r16
	.word 0x99b207c8  ! 866: PDIST	pdistn	%d8, %d8, %d12
	.word 0xbfe7c000  ! 867: SAVE_R	save	%r31, %r0, %r31
	.word 0xd81fe190  ! 868: LDD_I	ldd	[%r31 + 0x0190], %r12
	.word 0xa1b4c7cd  ! 869: PDIST	pdistn	%d50, %d44, %d16
	.word 0xe01fe1a0  ! 869: LDD_I	ldd	[%r31 + 0x01a0], %r16
	.word 0x99a409d2  ! 870: FDIVd	fdivd	%f16, %f18, %f12
	.word 0x9d97c000  ! 871: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd81fe010  ! 872: LDD_I	ldd	[%r31 + 0x0010], %r12
	.word 0xa7a489cc  ! 873: FDIVd	fdivd	%f18, %f12, %f50
	.word 0xbfefc000  ! 873: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x97b440b2  ! 874: EDGE16N	edge16n	%r17, %r18, %r11
	.word 0xd707e080  ! 875: LDF_I	ld	[%r31, 0x0080], %f11
	.word 0xa9a509d1  ! 876: FDIVd	fdivd	%f20, %f48, %f20
	.word 0x99b280a6  ! 877: EDGE16N	edge16n	%r10, %r6, %r12
	.word 0xd907e170  ! 877: LDF_I	ld	[%r31, 0x0170], %f12
	.word 0x99b44ce5  ! 878: FNOT2S	fandnot1s	%f5, %f12
	.word 0x81b7c7c0  ! 879: PDIST	pdistn	%d62, %d0, %d0
	.word 0xd81fe130  ! 880: LDD_I	ldd	[%r31 + 0x0130], %r12
	.word 0xa5b44cf1  ! 881: FNOT2S	fandnot1s	%f17, %f18
	.word 0xe41fe0b0  ! 881: LDD_I	ldd	[%r31 + 0x00b0], %r18
	.word 0xe41fe050  ! 882: LDD_I	ldd	[%r31 + 0x0050], %r18
	.word 0x9d97c000  ! 883: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b207d4  ! 884: PDIST	pdistn	%d8, %d20, %d50
	.word 0xe61fe0e0  ! 885: LDD_I	ldd	[%r31 + 0x00e0], %r19
	.word 0x97b347d2  ! 885: PDIST	pdistn	%d44, %d18, %d42
	.word 0x95b287c4  ! 886: PDIST	pdistn	%d10, %d4, %d10
	.word 0x20800001  ! 887: BN	bn,a	<label_0x1>
	.word 0xa1b207d0  ! 888: PDIST	pdistn	%d8, %d16, %d16
	.word 0x97b047ca  ! 889: PDIST	pdistn	%d32, %d10, %d42
	.word 0x93b247c4  ! 889: PDIST	pdistn	%d40, %d4, %d40
	.word 0x95a349a5  ! 890: FDIVs	fdivs	%f13, %f5, %f10
	.word 0xc36fe040  ! 891: PREFETCH_I	prefetch	[%r31 + 0x0040], #one_read
	.word 0xa1a4c9c6  ! 892: FDIVd	fdivd	%f50, %f6, %f16
	.word 0xa7a1c9a6  ! 893: FDIVs	fdivs	%f7, %f6, %f19
	.word 0xa3a1c9cc  ! 893: FDIVd	fdivd	%f38, %f12, %f48
	.word 0xe21fe140  ! 894: LDD_I	ldd	[%r31 + 0x0140], %r17
	.word 0x24cfc001  ! 895: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x91a349d2  ! 896: FDIVd	fdivd	%f44, %f18, %f8
	.word 0xd01fe0c0  ! 897: LDD_I	ldd	[%r31 + 0x00c0], %r8
	.word 0x9ba149c4  ! 897: FDIVd	fdivd	%f36, %f4, %f44
	.word 0xa9a509c5  ! 898: FDIVd	fdivd	%f20, %f36, %f20
	.word 0xe9e7c6c0  ! 899: CASA_I	casa	[%r31] 0x36, %r0, %r20
	.word 0xe81fe050  ! 900: LDD_I	ldd	[%r31 + 0x0050], %r20
	.word 0x97a4c9d0  ! 901: FDIVd	fdivd	%f50, %f16, %f42
	.word 0xd61fe020  ! 901: LDD_I	ldd	[%r31 + 0x0020], %r11
    nop
    nop
    mov 31, %g1
loopz_20_203:
    ldstub [%r31+0x130], %r2
    brnz,a %r1, loopz_20_203
    dec %r1
	.word 0x9bb4c0ab  ! 902: EDGE16N	edge16n	%r19, %r11, %r13
	.word 0xda1fe1a0  ! 903: LDD_I	ldd	[%r31 + 0x01a0], %r13
	.word 0xa5b40704  ! 904: FMULD8SUx16	fmuld8ulx16	%f16, %f4, %d18
	.word 0xa7b200b0  ! 905: EDGE16N	edge16n	%r8, %r16, %r19
	.word 0xe71fe1a0  ! 905: LDDF_I	ldd	[%r31, 0x01a0], %f19
    nop
    nop
    mov 59, %g1
loopz_20_204:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopz_20_204
    dec %r1
	.word 0xa3a109b2  ! 906: FDIVs	fdivs	%f4, %f18, %f17
	.word 0xe31fe0e0  ! 907: LDDF_I	ldd	[%r31, 0x00e0], %f17
	.word 0xa1a089b3  ! 908: FDIVs	fdivs	%f2, %f19, %f16
	.word 0x9ba489b2  ! 909: FDIVs	fdivs	%f18, %f18, %f13
	.word 0xa5a109a9  ! 909: FDIVs	fdivs	%f4, %f9, %f18
	.word 0x99b40cf0  ! 910: FNOT2S	fandnot1s	%f16, %f12
	.word 0xbfe7c000  ! 911: SAVE_R	save	%r31, %r0, %r31
	.word 0xa5b1c70d  ! 912: FMULD8SUx16	fmuld8ulx16	%f7, %f13, %d18
	.word 0x99b08ce4  ! 913: FNOT2S	fandnot1s	%f4, %f12
	.word 0x93b0870d  ! 913: FMULD8SUx16	fmuld8ulx16	%f2, %f13, %d40
	.word 0x97b4c7d0  ! 914: PDIST	pdistn	%d50, %d16, %d42
	.word 0x39400001  ! 915: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x99b30708  ! 916: FMULD8SUx16	fmuld8ulx16	%f12, %f8, %d12
	.word 0xa7b2c7d4  ! 917: PDIST	pdistn	%d42, %d20, %d50
	.word 0xa7b7c4c0  ! 917: FCMPNE32	fcmpne32	%d62, %d0, %r19
	.word 0x99b2cceb  ! 918: FNOT2S	fandnot1s	%f11, %f12
	.word 0xd897c240  ! 919: LDUHA_R	lduha	[%r31, %r0] 0x12, %r12
	.word 0xa5a249d1  ! 920: FDIVd	fdivd	%f40, %f48, %f18
	.word 0xa1b08ce8  ! 921: FNOT2S	fandnot1s	%f8, %f16
	.word 0xe03fe190  ! 921: STD_I	std	%r16, [%r31 + 0x0190]
	.word 0xa3a149d3  ! 922: FDIVd	fdivd	%f36, %f50, %f48
	.word 0xc1bfde20  ! 923: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa3b48ced  ! 924: FNOT2S	fandnot1s	%f13, %f17
	.word 0xa9a109d3  ! 925: FDIVd	fdivd	%f4, %f50, %f20
	.word 0x91b4cce2  ! 925: FNOT2S	fandnot1s	%f2, %f8
	.word 0xa3b340b3  ! 926: EDGE16N	edge16n	%r13, %r19, %r17
	.word 0xe307e080  ! 927: LDF_I	ld	[%r31, 0x0080], %f17
	.word 0xe21fe050  ! 928: LDD_I	ldd	[%r31 + 0x0050], %r17
	.word 0x9bb140b2  ! 929: EDGE16N	edge16n	%r5, %r18, %r13
	.word 0xdb07e150  ! 929: LDF_I	ld	[%r31, 0x0150], %f13
	.word 0xc19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc0bfde00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf0
	.word 0xc09fdb40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xda, %r0
	.word 0xe0bfdf00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf8
	.word 0xc09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r0
	.word 0xe19fdc40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa7a449b3  ! 930: FDIVs	fdivs	%f17, %f19, %f19
	.word 0x81b7c7c0  ! 931: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa7b2ccf3  ! 932: FNOT2S	fandnot1s	%f19, %f19
	.word 0x9ba409b3  ! 933: FDIVs	fdivs	%f16, %f19, %f13
	.word 0x00800001  ! 933: BN	bn  	<label_0x1>
    nop
    nop
    mov 3, %g1
loopz_20_211:
    ldstub [%r31+0], %r2
    brnz,a %r1, loopz_20_211
    dec %r1
	.word 0x95b44710  ! 934: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d10
	.word 0xc32fe190  ! 935: STXFSR_I	st-sfr	%f1, [0x0190, %r31]
	.word 0xa9a209a9  ! 936: FDIVs	fdivs	%f8, %f9, %f20
	.word 0x91b48707  ! 937: FMULD8SUx16	fmuld8ulx16	%f18, %f7, %d8
	.word 0x91a289a9  ! 937: FDIVs	fdivs	%f10, %f9, %f8
	.word 0xa5b047d0  ! 938: PDIST	pdistn	%d32, %d16, %d18
	.word 0xc36fe130  ! 939: PREFETCH_I	prefetch	[%r31 + 0x0130], #one_read
	.word 0x97b487d3  ! 940: PDIST	pdistn	%d18, %d50, %d42
	.word 0x95b447c4  ! 941: PDIST	pdistn	%d48, %d4, %d10
	.word 0xa3b1c7c7  ! 941: PDIST	pdistn	%d38, %d38, %d48
	.word 0xa7b340ac  ! 942: EDGE16N	edge16n	%r13, %r12, %r19
	.word 0xe73fe070  ! 943: STDF_I	std	%f19, [0x0070, %r31]
	.word 0x99a349ad  ! 944: FDIVs	fdivs	%f13, %f13, %f12
	.word 0xa7b240a3  ! 945: EDGE16N	edge16n	%r9, %r3, %r19
	.word 0x93a509b3  ! 945: FDIVs	fdivs	%f20, %f19, %f9
	.word 0xa3b34cf0  ! 946: FNOT2S	fandnot1s	%f16, %f17
	.word 0xc3efe1e0  ! 947: PREFETCHA_I	prefetcha	[%r31, + 0x01e0] %asi, #one_read
	.word 0xa1b040a7  ! 948: EDGE16N	edge16n	%r1, %r7, %r16
	.word 0x97b08ce7  ! 949: FNOT2S	fandnot1s	%f7, %f11
	.word 0xa5b280a7  ! 949: EDGE16N	edge16n	%r10, %r7, %r18
	.word 0xa3b0c7c3  ! 950: PDIST	pdistn	%d34, %d34, %d48
	.word 0xc19fda60  ! 951: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa1b1c0b3  ! 952: EDGE16N	edge16n	%r7, %r19, %r16
	.word 0xa3b407d4  ! 953: PDIST	pdistn	%d16, %d20, %d48
	.word 0xe1bfde20  ! 953: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9bb247c4  ! 954: PDIST	pdistn	%d40, %d4, %d44
	.word 0xc32fe110  ! 955: STXFSR_I	st-sfr	%f1, [0x0110, %r31]
	.word 0x9ba189b3  ! 956: FDIVs	fdivs	%f6, %f19, %f13
	.word 0x9bb247d4  ! 957: PDIST	pdistn	%d40, %d20, %d44
	.word 0xda97c240  ! 957: LDUHA_R	lduha	[%r31, %r0] 0x12, %r13
    nop
    nop
    mov 63, %g1
loopz_20_216:
    ldstub [%r31+0x1f0], %r2
    brnz,a %r1, loopz_20_216
    dec %r1
	.word 0xd81fe180  ! 958: LDD_I	ldd	[%r31 + 0x0180], %r12
	.word 0xd9e7e000  ! 959: CASA_R	casa	[%r31] %asi, %r0, %r12
	.word 0x95b500a6  ! 960: EDGE16N	edge16n	%r20, %r6, %r10
	.word 0xd41fe0d0  ! 961: LDD_I	ldd	[%r31 + 0x00d0], %r10
	.word 0xd41fc000  ! 961: LDD_R	ldd	[%r31 + %r0], %r10
	.word 0xa3b2c7c6  ! 962: PDIST	pdistn	%d42, %d6, %d48
	.word 0xe307e060  ! 963: LDF_I	ld	[%r31, 0x0060], %f17
	.word 0xe21fe010  ! 964: LDD_I	ldd	[%r31 + 0x0010], %r17
	.word 0xa3b347d3  ! 965: PDIST	pdistn	%d44, %d50, %d48
	.word 0xe21fe090  ! 965: LDD_I	ldd	[%r31 + 0x0090], %r17
	.word 0x99b480ac  ! 966: EDGE16N	edge16n	%r18, %r12, %r12
	.word 0xd83fe060  ! 967: STD_I	std	%r12, [%r31 + 0x0060]
	.word 0xa7a4c9d4  ! 968: FDIVd	fdivd	%f50, %f20, %f50
	.word 0xa7b500b0  ! 969: EDGE16N	edge16n	%r20, %r16, %r19
	.word 0xa7a7c9c0  ! 969: FDIVd	fdivd	%f62, %f0, %f50
	.word 0xa1b24cf1  ! 970: FNOT2S	fandnot1s	%f17, %f16
	.word 0xbfe7c000  ! 971: SAVE_R	save	%r31, %r0, %r31
	.word 0xe01fe140  ! 972: LDD_I	ldd	[%r31 + 0x0140], %r16
	.word 0x93b0ccf2  ! 973: FNOT2S	fandnot1s	%f18, %f9
	.word 0x9d97c000  ! 973: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd21fe1d0  ! 974: LDD_I	ldd	[%r31 + 0x01d0], %r9
	.word 0xd307e030  ! 975: LDF_I	ld	[%r31, 0x0030], %f9
	.word 0x9bb10712  ! 976: FMULD8SUx16	fmuld8ulx16	%f4, %f18, %d44
	.word 0xda1fe120  ! 977: LDD_I	ldd	[%r31 + 0x0120], %r13
	.word 0xdb07e0e0  ! 977: LDF_I	ld	[%r31, 0x00e0], %f13
    nop
    nop
    mov 15, %g1
loopz_20_221:
    ldstub [%r31+0x70], %r2
    brnz,a %r1, loopz_20_221
    dec %r1
	.word 0x95b08711  ! 978: FMULD8SUx16	fmuld8ulx16	%f2, %f17, %d10
	.word 0xd41fc000  ! 979: LDD_R	ldd	[%r31 + %r0], %r10
	.word 0xa5b44ceb  ! 980: FNOT2S	fandnot1s	%f11, %f18
	.word 0x97b18701  ! 981: FMULD8SUx16	fmuld8ulx16	%f6, %f1, %d42
	.word 0xa1b20cec  ! 981: FNOT2S	fandnot1s	%f12, %f16
    nop
    nop
    mov 59, %g1
loopb_20_223:
    ldstub [%r31+0xd0], %r2
    brnz,a %r1, loopb_20_223
    dec %r1
	.word 0x91b48711  ! 982: FMULD8SUx16	fmuld8ulx16	%f18, %f17, %d8
	.word 0xe1bfc3e0  ! 983: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9bb50ce2  ! 984: FNOT2S	fandnot1s	%f2, %f13
	.word 0x93b44713  ! 985: FMULD8SUx16	fmuld8ulx16	%f17, %f19, %d40
	.word 0xa1b2cce1  ! 985: FNOT2S	fandnot1s	%f1, %f16
	.word 0xa1b480a1  ! 986: EDGE16N	edge16n	%r18, %r1, %r16
	.word 0xa1b7c4c0  ! 987: FCMPNE32	fcmpne32	%d62, %d0, %r16
	.word 0x9bb30cf1  ! 988: FNOT2S	fandnot1s	%f17, %f13
	.word 0x9bb240aa  ! 989: EDGE16N	edge16n	%r9, %r10, %r13
	.word 0xdbe7c600  ! 989: CASA_I	casa	[%r31] 0x30, %r0, %r13
	.word 0xa1b187d0  ! 990: PDIST	pdistn	%d6, %d16, %d16
	.word 0xe107e070  ! 991: LDF_I	ld	[%r31, 0x0070], %f16
	.word 0xa7b44ceb  ! 992: FNOT2S	fandnot1s	%f11, %f19
	.word 0x99b147ca  ! 993: PDIST	pdistn	%d36, %d10, %d12
	.word 0xd907e040  ! 993: LDF_I	ld	[%r31, 0x0040], %f12
	.word 0xa9b347d3  ! 994: PDIST	pdistn	%d44, %d50, %d20
	.word 0xe907e000  ! 995: LDF_I	ld	[%r31, 0x0000], %f20
	.word 0x93b500b1  ! 996: EDGE16N	edge16n	%r20, %r17, %r9
	.word 0xa5b287d2  ! 997: PDIST	pdistn	%d10, %d18, %d18
	.word 0xe507e1c0  ! 997: LDF_I	ld	[%r31, 0x01c0], %f18
	.word 0x95b447d2  ! 998: PDIST	pdistn	%d48, %d18, %d10
	.word 0x95a7c9c0  ! 999: FDIVd	fdivd	%f62, %f0, %f10
	.word 0x93b4ccf1  ! 1000: FNOT2S	fandnot1s	%f17, %f9
	.word 0xa3b287c8  ! 1001: PDIST	pdistn	%d10, %d8, %d48
	.word 0xa1b40cf1  ! 1001: FNOT2S	fandnot1s	%f17, %f16
	.word 0x91b287c6  ! 1002: PDIST	pdistn	%d10, %d6, %d8
	.word 0xd107e0b0  ! 1003: LDF_I	ld	[%r31, 0x00b0], %f8
	.word 0x9bb447d2  ! 1004: PDIST	pdistn	%d48, %d18, %d44
	.word 0x99b4c7cd  ! 1005: PDIST	pdistn	%d50, %d44, %d12
	.word 0x95b047d3  ! 1005: PDIST	pdistn	%d32, %d50, %d10
    nop
    nop
    mov 27, %g1
loopz_20_228:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopz_20_228
    dec %r1
	.word 0xa1b107d3  ! 1006: PDIST	pdistn	%d4, %d50, %d16
	.word 0xe1e7e000  ! 1007: CASA_R	casa	[%r31] %asi, %r0, %r16
	.word 0x97b4c711  ! 1008: FMULD8SUx16	fmuld8ulx16	%f19, %f17, %d42
	.word 0xa1b087d1  ! 1009: PDIST	pdistn	%d2, %d48, %d16
	.word 0xa1b1870c  ! 1009: FMULD8SUx16	fmuld8ulx16	%f6, %f12, %d16
    nop
    nop
    mov 63, %g1
loopb_20_229:
    ldstub [%r31+0x80], %r2
    brnz,a %r1, loopb_20_229
    dec %r1
	.word 0xa7a409a5  ! 1010: FDIVs	fdivs	%f16, %f5, %f19
	.word 0xc1bfdd40  ! 1011: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe61fe1d0  ! 1012: LDD_I	ldd	[%r31 + 0x01d0], %r19
	.word 0x93a149b4  ! 1013: FDIVs	fdivs	%f5, %f20, %f9
	.word 0xd21fe190  ! 1013: LDD_I	ldd	[%r31 + 0x0190], %r9
	.word 0xa9a189aa  ! 1014: FDIVs	fdivs	%f6, %f10, %f20
	.word 0xa1b7c7c0  ! 1015: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa1b50701  ! 1016: FMULD8SUx16	fmuld8ulx16	%f20, %f1, %d16
	.word 0x95a509ab  ! 1017: FDIVs	fdivs	%f20, %f11, %f10
	.word 0x95b50705  ! 1017: FMULD8SUx16	fmuld8ulx16	%f20, %f5, %d10
	.word 0x97b500a7  ! 1018: EDGE16N	edge16n	%r20, %r7, %r11
	.word 0xd7e7c180  ! 1019: CASA_I	casa	[%r31] 0x c, %r0, %r11
	.word 0xa1b14713  ! 1020: FMULD8SUx16	fmuld8ulx16	%f5, %f19, %d16
	.word 0xa9b500a3  ! 1021: EDGE16N	edge16n	%r20, %r3, %r20
	.word 0xa9b7c4c0  ! 1021: FCMPNE32	fcmpne32	%d62, %d0, %r20
	.word 0xd61fe1e0  ! 1022: LDD_I	ldd	[%r31 + 0x01e0], %r11
	.word 0xd707e050  ! 1023: LDF_I	ld	[%r31, 0x0050], %f11
	.word 0xa9a409a7  ! 1024: FDIVs	fdivs	%f16, %f7, %f20
	.word 0xe81fe080  ! 1025: LDD_I	ldd	[%r31 + 0x0080], %r20
	.word 0xa9a049a6  ! 1025: FDIVs	fdivs	%f1, %f6, %f20
	.word 0xa1b047d1  ! 1026: PDIST	pdistn	%d32, %d48, %d16
	.word 0xe01fe060  ! 1027: LDD_I	ldd	[%r31 + 0x0060], %r16
	.word 0x95b300b1  ! 1028: EDGE16N	edge16n	%r12, %r17, %r10
	.word 0x95b2c7d3  ! 1029: PDIST	pdistn	%d42, %d50, %d10
	.word 0xa5b240a7  ! 1029: EDGE16N	edge16n	%r9, %r7, %r18
	.word 0xa7b40ce9  ! 1030: FNOT2S	fandnot1s	%f9, %f19
	.word 0xe707e1e0  ! 1031: LDF_I	ld	[%r31, 0x01e0], %f19
	.word 0xa3b247d2  ! 1032: PDIST	pdistn	%d40, %d18, %d48
	.word 0x97b24cf1  ! 1033: FNOT2S	fandnot1s	%f17, %f11
	.word 0xd707e010  ! 1033: LDF_I	ld	[%r31, 0x0010], %f11
    nop
    nop
    mov 55, %g1
loopb_20_234:
    ldstub [%r31+0x1b0], %r2
    brnz,a %r1, loopb_20_234
    dec %r1
	.word 0x93b400b0  ! 1034: EDGE16N	edge16n	%r16, %r16, %r9
	.word 0xe19fdd40  ! 1035: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa7b50714  ! 1036: FMULD8SUx16	fmuld8ulx16	%f20, %f20, %d50
	.word 0xa3b040b3  ! 1037: EDGE16N	edge16n	%r1, %r19, %r17
	.word 0xa3b14703  ! 1037: FMULD8SUx16	fmuld8ulx16	%f5, %f3, %d48
	.word 0xa1a209a2  ! 1038: FDIVs	fdivs	%f8, %f2, %f16
	.word 0xe097dc40  ! 1039: LDUHA_R	lduha	[%r31, %r0] 0xe2, %r16
	.word 0xa3a4c9d2  ! 1040: FDIVd	fdivd	%f50, %f18, %f48
	.word 0x91a289a9  ! 1041: FDIVs	fdivs	%f10, %f9, %f8
	.word 0xa5a449d2  ! 1041: FDIVd	fdivd	%f48, %f18, %f18
	.word 0x91b30cf4  ! 1042: FNOT2S	fandnot1s	%f20, %f8
	.word 0xd107e1d0  ! 1043: LDF_I	ld	[%r31, 0x01d0], %f8
	.word 0xd01fe040  ! 1044: LDD_I	ldd	[%r31 + 0x0040], %r8
	.word 0x99b48cf3  ! 1045: FNOT2S	fandnot1s	%f19, %f12
	.word 0xd907e0b0  ! 1045: LDF_I	ld	[%r31, 0x00b0], %f12
    nop
    nop
    mov 47, %g1
loopb_20_238:
    ldstub [%r31+0xe0], %r2
    brnz,a %r1, loopb_20_238
    dec %r1
	.word 0x91b1870b  ! 1046: FMULD8SUx16	fmuld8ulx16	%f6, %f11, %d8
	.word 0xc19fdc00  ! 1047: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa7a449c5  ! 1048: FDIVd	fdivd	%f48, %f36, %f50
	.word 0xa5b08709  ! 1049: FMULD8SUx16	fmuld8ulx16	%f2, %f9, %d18
	.word 0x9ba0c9c7  ! 1049: FDIVd	fdivd	%f34, %f38, %f44
	.word 0x97a489a5  ! 1050: FDIVs	fdivs	%f18, %f5, %f11
	.word 0xd707e0d0  ! 1051: LDF_I	ld	[%r31, 0x00d0], %f11
	.word 0x99b080b2  ! 1052: EDGE16N	edge16n	%r2, %r18, %r12
	.word 0x99a489ad  ! 1053: FDIVs	fdivs	%f18, %f13, %f12
	.word 0xd907e0e0  ! 1053: LDF_I	ld	[%r31, 0x00e0], %f12
	.word 0x95a309d0  ! 1054: FDIVd	fdivd	%f12, %f16, %f10
	.word 0xd507e160  ! 1055: LDF_I	ld	[%r31, 0x0160], %f10
	.word 0xa5a409b1  ! 1056: FDIVs	fdivs	%f16, %f17, %f18
	.word 0x9ba509c1  ! 1057: FDIVd	fdivd	%f20, %f32, %f44
	.word 0x95a1c9b4  ! 1057: FDIVs	fdivs	%f7, %f20, %f10
	.word 0x99b047c5  ! 1058: PDIST	pdistn	%d32, %d36, %d12
	.word 0xc3efe040  ! 1059: PREFETCHA_I	prefetcha	[%r31, + 0x0040] %asi, #one_read
	.word 0xa3b50ce1  ! 1060: FNOT2S	fandnot1s	%f1, %f17
	.word 0x91b107d2  ! 1061: PDIST	pdistn	%d4, %d18, %d8
	.word 0xa7b14ced  ! 1061: FNOT2S	fandnot1s	%f13, %f19
	.word 0xe61fe0f0  ! 1062: LDD_I	ldd	[%r31 + 0x00f0], %r19
	.word 0xe69fc2c0  ! 1063: LDDA_R	ldda	[%r31, %r0] 0x16, %r19
	.word 0x99b500ac  ! 1064: EDGE16N	edge16n	%r20, %r12, %r12
	.word 0xd81fe000  ! 1065: LDD_I	ldd	[%r31 + 0x0000], %r12
	.word 0x9bb500b2  ! 1065: EDGE16N	edge16n	%r20, %r18, %r13
	.word 0x95b30cf2  ! 1066: FNOT2S	fandnot1s	%f18, %f10
	.word 0xc32fe100  ! 1067: STXFSR_I	st-sfr	%f1, [0x0100, %r31]
	.word 0x91b0c7d1  ! 1068: PDIST	pdistn	%d34, %d48, %d8
	.word 0x97b44ce1  ! 1069: FNOT2S	fandnot1s	%f1, %f11
	.word 0x91b407c8  ! 1069: PDIST	pdistn	%d16, %d8, %d8
	.word 0xa5a1c9d0  ! 1070: FDIVd	fdivd	%f38, %f16, %f18
	.word 0xe507e000  ! 1071: LDF_I	ld	[%r31, 0x0000], %f18
	.word 0x97b400b2  ! 1072: EDGE16N	edge16n	%r16, %r18, %r11
	.word 0x97a4c9ca  ! 1073: FDIVd	fdivd	%f50, %f10, %f42
	.word 0xa7b340a4  ! 1073: EDGE16N	edge16n	%r13, %r4, %r19
    nop
    nop
    mov 51, %g1
loopz_20_243:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopz_20_243
    dec %r1
	.word 0x97b3470d  ! 1074: FMULD8SUx16	fmuld8ulx16	%f13, %f13, %d42
	.word 0xd61fe150  ! 1075: LDD_I	ldd	[%r31 + 0x0150], %r11
	.word 0x95b307c4  ! 1076: PDIST	pdistn	%d12, %d4, %d10
	.word 0x99b40714  ! 1077: FMULD8SUx16	fmuld8ulx16	%f16, %f20, %d12
	.word 0xd81fc000  ! 1077: LDD_R	ldd	[%r31 + %r0], %r12
	.word 0x99b500a4  ! 1078: EDGE16N	edge16n	%r20, %r4, %r12
	.word 0x9d97c000  ! 1079: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b2cce9  ! 1080: FNOT2S	fandnot1s	%f9, %f19
	.word 0xa1b4c0ad  ! 1081: EDGE16N	edge16n	%r19, %r13, %r16
	.word 0x9d97c000  ! 1081: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd81fe1e0  ! 1082: LDD_I	ldd	[%r31 + 0x01e0], %r12
	.word 0xd83fe1b0  ! 1083: STD_I	std	%r12, [%r31 + 0x01b0]
	.word 0x91a149aa  ! 1084: FDIVs	fdivs	%f5, %f10, %f8
	.word 0xd01fe140  ! 1085: LDD_I	ldd	[%r31 + 0x0140], %r8
	.word 0xa3a409a4  ! 1085: FDIVs	fdivs	%f16, %f4, %f17
	.word 0x9bb40ce1  ! 1086: FNOT2S	fandnot1s	%f1, %f13
	.word 0xdbe7d000  ! 1087: CASA_I	casa	[%r31] 0x80, %r0, %r13
	.word 0x91a409d4  ! 1088: FDIVd	fdivd	%f16, %f20, %f8
	.word 0xa5b30cf3  ! 1089: FNOT2S	fandnot1s	%f19, %f18
	.word 0x97a1c9d1  ! 1089: FDIVd	fdivd	%f38, %f48, %f42
	.word 0x91b507ca  ! 1090: PDIST	pdistn	%d20, %d10, %d8
	.word 0xd09fd060  ! 1091: LDDA_R	ldda	[%r31, %r0] 0x83, %r8
	.word 0xa5b4c0ac  ! 1092: EDGE16N	edge16n	%r19, %r12, %r18
	.word 0xa5b087c7  ! 1093: PDIST	pdistn	%d2, %d38, %d18
	.word 0x99b0c0ac  ! 1093: EDGE16N	edge16n	%r3, %r12, %r12
	.word 0xa5b24704  ! 1094: FMULD8SUx16	fmuld8ulx16	%f9, %f4, %d18
	.word 0xe5e7c400  ! 1095: CASA_I	casa	[%r31] 0x20, %r0, %r18
	.word 0x99a489d0  ! 1096: FDIVd	fdivd	%f18, %f16, %f12
	.word 0xa9b50709  ! 1097: FMULD8SUx16	fmuld8ulx16	%f20, %f9, %d20
	.word 0xe93fe130  ! 1097: STDF_I	std	%f20, [0x0130, %r31]
	.word 0xe81fe100  ! 1098: LDD_I	ldd	[%r31 + 0x0100], %r20
	.word 0xe19fdc40  ! 1099: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa3b407d4  ! 1100: PDIST	pdistn	%d16, %d20, %d48
	.word 0xe21fe180  ! 1101: LDD_I	ldd	[%r31 + 0x0180], %r17
	.word 0xc1bfdd40  ! 1101: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x97b18ceb  ! 1102: FNOT2S	fandnot1s	%f11, %f11
	.word 0x81b7c7c0  ! 1103: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa5a1c9b0  ! 1104: FDIVs	fdivs	%f7, %f16, %f18
	.word 0xa5b40ce4  ! 1105: FNOT2S	fandnot1s	%f4, %f18
	.word 0xa1a049a5  ! 1105: FDIVs	fdivs	%f1, %f5, %f16
	.word 0x99b487c1  ! 1106: PDIST	pdistn	%d18, %d32, %d12
	.word 0x99b7c4c0  ! 1107: FCMPNE32	fcmpne32	%d62, %d0, %r12
	.word 0x95b50cf1  ! 1108: FNOT2S	fandnot1s	%f17, %f10
	.word 0xa7b087c3  ! 1109: PDIST	pdistn	%d2, %d34, %d50
	.word 0x99b14ced  ! 1109: FNOT2S	fandnot1s	%f13, %f12
	.word 0x93a509c2  ! 1110: FDIVd	fdivd	%f20, %f2, %f40
	.word 0x87afca40  ! 1111: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa9b08cf3  ! 1112: FNOT2S	fandnot1s	%f19, %f20
	.word 0x99a349c2  ! 1113: FDIVd	fdivd	%f44, %f2, %f12
	.word 0xa7b14cf4  ! 1113: FNOT2S	fandnot1s	%f20, %f19
	.word 0xe41fe060  ! 1114: LDD_I	ldd	[%r31 + 0x0060], %r18
	.word 0x24cfc001  ! 1115: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x93a4c9a8  ! 1116: FDIVs	fdivs	%f19, %f8, %f9
	.word 0xd21fe070  ! 1117: LDD_I	ldd	[%r31 + 0x0070], %r9
	.word 0x97a289b1  ! 1117: FDIVs	fdivs	%f10, %f17, %f11
	.word 0xd61fe0d0  ! 1118: LDD_I	ldd	[%r31 + 0x00d0], %r11
	.word 0xbfe7c000  ! 1119: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1b300a3  ! 1120: EDGE16N	edge16n	%r12, %r3, %r16
	.word 0xe01fe050  ! 1121: LDD_I	ldd	[%r31 + 0x0050], %r16
	.word 0xbfefc000  ! 1121: RESTORE_R	restore	%r31, %r0, %r31
    nop
    nop
    mov 19, %g1
loopz_20_252:
    ldstub [%r31+0x40], %r2
    brnz,a %r1, loopz_20_252
    dec %r1
	.word 0x95b487c8  ! 1122: PDIST	pdistn	%d18, %d8, %d10
	.word 0xd41fe070  ! 1123: LDD_I	ldd	[%r31 + 0x0070], %r10
	.word 0xa7b080ac  ! 1124: EDGE16N	edge16n	%r2, %r12, %r19
	.word 0x91b407d1  ! 1125: PDIST	pdistn	%d16, %d48, %d8
	.word 0x95b1c0b3  ! 1125: EDGE16N	edge16n	%r7, %r19, %r10
	.word 0xa1a0c9d4  ! 1126: FDIVd	fdivd	%f34, %f20, %f16
	.word 0xbfe7c000  ! 1127: SAVE_R	save	%r31, %r0, %r31
	.word 0x97a409b3  ! 1128: FDIVs	fdivs	%f16, %f19, %f11
	.word 0x95a509ca  ! 1129: FDIVd	fdivd	%f20, %f10, %f10
	.word 0xa1a489b0  ! 1129: FDIVs	fdivs	%f18, %f16, %f16
	.word 0xa3b24cf3  ! 1130: FNOT2S	fandnot1s	%f19, %f17
	.word 0xe307e030  ! 1131: LDF_I	ld	[%r31, 0x0030], %f17
	.word 0x97b40ce9  ! 1132: FNOT2S	fandnot1s	%f9, %f11
	.word 0x91b4cce7  ! 1133: FNOT2S	fandnot1s	%f7, %f8
	.word 0xa5b4ccf3  ! 1133: FNOT2S	fandnot1s	%f19, %f18
	.word 0x9bb44ce2  ! 1134: FNOT2S	fandnot1s	%f2, %f13
	.word 0xdb07e0e0  ! 1135: LDF_I	ld	[%r31, 0x00e0], %f13
	.word 0x97a509ac  ! 1136: FDIVs	fdivs	%f20, %f12, %f11
	.word 0xa7b44cf4  ! 1137: FNOT2S	fandnot1s	%f20, %f19
	.word 0xa9a249b4  ! 1137: FDIVs	fdivs	%f9, %f20, %f20
	.word 0xa9a289a1  ! 1138: FDIVs	fdivs	%f10, %f1, %f20
	.word 0xa1b7c7c0  ! 1139: PDIST	pdistn	%d62, %d0, %d16
	.word 0x95b1c7c3  ! 1140: PDIST	pdistn	%d38, %d34, %d10
	.word 0xa3a4c9b2  ! 1141: FDIVs	fdivs	%f19, %f18, %f17
	.word 0x20800001  ! 1141: BN	bn,a	<label_0x1>
	.word 0x91b1c0aa  ! 1142: EDGE16N	edge16n	%r7, %r10, %r8
	.word 0xd1e7c200  ! 1143: CASA_I	casa	[%r31] 0x10, %r0, %r8
	.word 0xa1b407d2  ! 1144: PDIST	pdistn	%d16, %d18, %d16
	.word 0xa1b500b1  ! 1145: EDGE16N	edge16n	%r20, %r17, %r16
	.word 0x24cfc001  ! 1145: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
    nop
    nop
    mov 55, %g1
loopb_20_257:
    ldstub [%r31+0x80], %r2
    brnz,a %r1, loopb_20_257
    dec %r1
	.word 0xa9b400a7  ! 1146: EDGE16N	edge16n	%r16, %r7, %r20
	.word 0xc1bfdf00  ! 1147: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x95a309c3  ! 1148: FDIVd	fdivd	%f12, %f34, %f10
	.word 0xa7b500b1  ! 1149: EDGE16N	edge16n	%r20, %r17, %r19
	.word 0xc1bfda60  ! 1149: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x99b34707  ! 1150: FMULD8SUx16	fmuld8ulx16	%f13, %f7, %d12
	.word 0xd907e080  ! 1151: LDF_I	ld	[%r31, 0x0080], %f12
	.word 0xa5a509ca  ! 1152: FDIVd	fdivd	%f20, %f10, %f18
	.word 0x9bb4470a  ! 1153: FMULD8SUx16	fmuld8ulx16	%f17, %f10, %d44
	.word 0x95a249c8  ! 1153: FDIVd	fdivd	%f40, %f8, %f10
    nop
    nop
    mov 3, %g1
loopz_20_260:
    ldstub [%r31+32], %r2
    brnz,a %r1, loopz_20_260
    dec %r1
	.word 0xa1a309b1  ! 1154: FDIVs	fdivs	%f12, %f17, %f16
	.word 0xc32fe030  ! 1155: STXFSR_I	st-sfr	%f1, [0x0030, %r31]
	.word 0x91b50712  ! 1156: FMULD8SUx16	fmuld8ulx16	%f20, %f18, %d8
	.word 0x91a209b0  ! 1157: FDIVs	fdivs	%f8, %f16, %f8
	.word 0xd01fc000  ! 1157: LDD_R	ldd	[%r31 + %r0], %r8
	.word 0xa9b04ce7  ! 1158: FNOT2S	fandnot1s	%f7, %f20
	.word 0x24cfc001  ! 1159: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x93b40710  ! 1160: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d40
	.word 0xa9b28cf0  ! 1161: FNOT2S	fandnot1s	%f16, %f20
	.word 0xa5b34704  ! 1161: FMULD8SUx16	fmuld8ulx16	%f13, %f4, %d18
	.word 0x93b08711  ! 1162: FMULD8SUx16	fmuld8ulx16	%f2, %f17, %d40
	.word 0xd307e070  ! 1163: LDF_I	ld	[%r31, 0x0070], %f9
	.word 0x91b407d0  ! 1164: PDIST	pdistn	%d16, %d16, %d8
	.word 0x93b4470a  ! 1165: FMULD8SUx16	fmuld8ulx16	%f17, %f10, %d40
	.word 0x93b247d1  ! 1165: PDIST	pdistn	%d40, %d48, %d40
    nop
    nop
    mov 31, %g1
loopz_20_264:
    ldstub [%r31+0xe0], %r2
    brnz,a %r1, loopz_20_264
    dec %r1
	.word 0x95b30712  ! 1166: FMULD8SUx16	fmuld8ulx16	%f12, %f18, %d10
	.word 0xc32fe110  ! 1167: STXFSR_I	st-sfr	%f1, [0x0110, %r31]
	.word 0x95a109b4  ! 1168: FDIVs	fdivs	%f4, %f20, %f10
	.word 0xa9b44703  ! 1169: FMULD8SUx16	fmuld8ulx16	%f17, %f3, %d20
	.word 0xa9a2c9ab  ! 1169: FDIVs	fdivs	%f11, %f11, %f20
	.word 0xa9b407c7  ! 1170: PDIST	pdistn	%d16, %d38, %d20
	.word 0xe93fe1a0  ! 1171: STDF_I	std	%f20, [0x01a0, %r31]
	.word 0x95b347c3  ! 1172: PDIST	pdistn	%d44, %d34, %d10
	.word 0xa3b407c8  ! 1173: PDIST	pdistn	%d16, %d8, %d48
	.word 0xe23fe0e0  ! 1173: STD_I	std	%r17, [%r31 + 0x00e0]
	.word 0xa3b20ceb  ! 1174: FNOT2S	fandnot1s	%f11, %f17
	.word 0xc19fc2c0  ! 1175: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa5b507c9  ! 1176: PDIST	pdistn	%d20, %d40, %d18
	.word 0x93b4ccf3  ! 1177: FNOT2S	fandnot1s	%f19, %f9
	.word 0xa9b247d0  ! 1177: PDIST	pdistn	%d40, %d16, %d20
	.word 0x91a409c8  ! 1178: FDIVd	fdivd	%f16, %f8, %f8
	.word 0xd107e0e0  ! 1179: LDF_I	ld	[%r31, 0x00e0], %f8
	.word 0xa7b04ceb  ! 1180: FNOT2S	fandnot1s	%f11, %f19
	.word 0xa9a489d3  ! 1181: FDIVd	fdivd	%f18, %f50, %f20
	.word 0xa1b40ced  ! 1181: FNOT2S	fandnot1s	%f13, %f16
	.word 0x95b2c7cb  ! 1182: PDIST	pdistn	%d42, %d42, %d10
	.word 0x81b7c7c0  ! 1183: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa9b20cf2  ! 1184: FNOT2S	fandnot1s	%f18, %f20
	.word 0xa7b447d1  ! 1185: PDIST	pdistn	%d48, %d48, %d50
	.word 0xa7b30cf0  ! 1185: FNOT2S	fandnot1s	%f16, %f19
	.word 0x95b14cf4  ! 1186: FNOT2S	fandnot1s	%f20, %f10
	.word 0xbfefc000  ! 1187: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x99b500b2  ! 1188: EDGE16N	edge16n	%r20, %r18, %r12
	.word 0x93b1ccf1  ! 1189: FNOT2S	fandnot1s	%f17, %f9
	.word 0xbfefc000  ! 1189: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa5b447d0  ! 1190: PDIST	pdistn	%d48, %d16, %d18
	.word 0xe507e110  ! 1191: LDF_I	ld	[%r31, 0x0110], %f18
	.word 0x9ba0c9d2  ! 1192: FDIVd	fdivd	%f34, %f18, %f44
	.word 0x91b4c7c1  ! 1193: PDIST	pdistn	%d50, %d32, %d8
	.word 0xa3a0c9c2  ! 1193: FDIVd	fdivd	%f34, %f2, %f48
	.word 0x97b28cf3  ! 1194: FNOT2S	fandnot1s	%f19, %f11
	.word 0xbfefc000  ! 1195: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9bb4c7c9  ! 1196: PDIST	pdistn	%d50, %d40, %d44
	.word 0xa5b50cea  ! 1197: FNOT2S	fandnot1s	%f10, %f18
	.word 0xa5b487c9  ! 1197: PDIST	pdistn	%d18, %d40, %d18
	.word 0xe41fe050  ! 1198: LDD_I	ldd	[%r31 + 0x0050], %r18
	.word 0xe41fe1b0  ! 1199: LDD_I	ldd	[%r31 + 0x01b0], %r18
	.word 0xa7a1c9a2  ! 1200: FDIVs	fdivs	%f7, %f2, %f19
	.word 0xe61fe160  ! 1201: LDD_I	ldd	[%r31 + 0x0160], %r19
	.word 0xe7e7c2c0  ! 1201: CASA_I	casa	[%r31] 0x16, %r0, %r19
	.word 0xe61fe160  ! 1202: LDD_I	ldd	[%r31 + 0x0160], %r19
	.word 0xbfe7c000  ! 1203: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7a049b3  ! 1204: FDIVs	fdivs	%f1, %f19, %f19
	.word 0xe61fe1c0  ! 1205: LDD_I	ldd	[%r31 + 0x01c0], %r19
	.word 0xbfefc000  ! 1205: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95b18706  ! 1206: FMULD8SUx16	fmuld8ulx16	%f6, %f6, %d10
	.word 0xbfefc000  ! 1207: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa3a189b4  ! 1208: FDIVs	fdivs	%f6, %f20, %f17
	.word 0xa1b24714  ! 1209: FMULD8SUx16	fmuld8ulx16	%f9, %f20, %d16
	.word 0xa5a2c9b0  ! 1209: FDIVs	fdivs	%f11, %f16, %f18
	.word 0x97b2c0a8  ! 1210: EDGE16N	edge16n	%r11, %r8, %r11
	.word 0xc36fe110  ! 1211: PREFETCH_I	prefetch	[%r31 + 0x0110], #one_read
	.word 0xa3b447d3  ! 1212: PDIST	pdistn	%d48, %d50, %d48
	.word 0xa1b400a9  ! 1213: EDGE16N	edge16n	%r16, %r9, %r16
	.word 0x04cfc001  ! 1213: BRLEZ	brlez,pt  	%r31,<label_0xfc001>
    nop
    nop
    mov 59, %g1
loopb_20_277:
    ldstub [%r31+0x120], %r2
    brnz,a %r1, loopb_20_277
    dec %r1
	.word 0x95b307c5  ! 1214: PDIST	pdistn	%d12, %d36, %d10
	.word 0xe19fdb40  ! 1215: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa5b4ccf3  ! 1216: FNOT2S	fandnot1s	%f19, %f18
	.word 0xa1b0c7c6  ! 1217: PDIST	pdistn	%d34, %d6, %d16
	.word 0x9bb10ce2  ! 1217: FNOT2S	fandnot1s	%f2, %f13
	.word 0xa9a4c9c2  ! 1218: FDIVd	fdivd	%f50, %f2, %f20
	.word 0xe9e7c720  ! 1219: CASA_I	casa	[%r31] 0x39, %r0, %r20
	.word 0xa9a449b4  ! 1220: FDIVs	fdivs	%f17, %f20, %f20
	.word 0x97a449c4  ! 1221: FDIVd	fdivd	%f48, %f4, %f42
	.word 0xc32fe1c0  ! 1221: STXFSR_I	st-sfr	%f1, [0x01c0, %r31]
	.word 0xa7a4c9c6  ! 1222: FDIVd	fdivd	%f50, %f6, %f50
	.word 0xe19fc2c0  ! 1223: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x99b44ce4  ! 1224: FNOT2S	fandnot1s	%f4, %f12
	.word 0xa3a449c5  ! 1225: FDIVd	fdivd	%f48, %f36, %f48
	.word 0xe19fdb20  ! 1225: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa9b48cf4  ! 1226: FNOT2S	fandnot1s	%f20, %f20
	.word 0x9f802090  ! 1227: SIR	sir	0x0090
	.word 0xe81fe1d0  ! 1228: LDD_I	ldd	[%r31 + 0x01d0], %r20
	.word 0xa7b1ccf0  ! 1229: FNOT2S	fandnot1s	%f16, %f19
	.word 0xe61fe180  ! 1229: LDD_I	ldd	[%r31 + 0x0180], %r19
	.word 0xa9b44ce7  ! 1230: FNOT2S	fandnot1s	%f7, %f20
	.word 0xc3efe150  ! 1231: PREFETCHA_I	prefetcha	[%r31, + 0x0150] %asi, #one_read
	.word 0x93a089b4  ! 1232: FDIVs	fdivs	%f2, %f20, %f9
	.word 0x95b40cf2  ! 1233: FNOT2S	fandnot1s	%f18, %f10
	.word 0x9ba2c9a7  ! 1233: FDIVs	fdivs	%f11, %f7, %f13
	.word 0xa3b30cf2  ! 1234: FNOT2S	fandnot1s	%f18, %f17
	.word 0xe23fe0c0  ! 1235: STD_I	std	%r17, [%r31 + 0x00c0]
	.word 0xe21fe0e0  ! 1236: LDD_I	ldd	[%r31 + 0x00e0], %r17
	.word 0x9bb44ce5  ! 1237: FNOT2S	fandnot1s	%f5, %f13
	.word 0xdbe7c720  ! 1237: CASA_I	casa	[%r31] 0x39, %r0, %r13
	.word 0x99a449d1  ! 1: FDIVd	fdivd	%f48, %f48, %f12
	.word 0x97b500b0  ! 1238: EDGE16N	edge16n	%r20, %r16, %r11
	.word 0xd73fe130  ! 1239: STDF_I	std	%f11, [0x0130, %r31]
	.word 0xa1b440b0  ! 1240: EDGE16N	edge16n	%r17, %r16, %r16
	.word 0x95b200a1  ! 1241: EDGE16N	edge16n	%r8, %r1, %r10
	.word 0xd497c540  ! 1241: LDUHA_R	lduha	[%r31, %r0] 0x2a, %r10
	.word 0xd41fe140  ! 1242: LDD_I	ldd	[%r31 + 0x0140], %r10
	.word 0xc36fe1c0  ! 1243: PREFETCH_I	prefetch	[%r31 + 0x01c0], #one_read
	.word 0xa7b407d3  ! 1244: PDIST	pdistn	%d16, %d50, %d50
	.word 0xe61fe100  ! 1245: LDD_I	ldd	[%r31 + 0x0100], %r19
	.word 0x97b407cb  ! 1245: PDIST	pdistn	%d16, %d42, %d42
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
	.word 0x95a109d2  ! 1246: FDIVd	fdivd	%f4, %f18, %f10
	.word 0x95a7c9c0  ! 1247: FDIVd	fdivd	%f62, %f0, %f10
	.word 0x93b1c7cb  ! 1248: PDIST	pdistn	%d38, %d42, %d40
	.word 0xa1a149d2  ! 1249: FDIVd	fdivd	%f36, %f18, %f16
	.word 0x93b4c7cd  ! 1249: PDIST	pdistn	%d50, %d44, %d40
	.word 0x93a509c8  ! 1250: FDIVd	fdivd	%f20, %f8, %f40
	.word 0xd307e020  ! 1251: LDF_I	ld	[%r31, 0x0020], %f9
	.word 0xa3b18cf0  ! 1252: FNOT2S	fandnot1s	%f16, %f17
	.word 0xa3a409d0  ! 1253: FDIVd	fdivd	%f16, %f16, %f48
	.word 0xe307e110  ! 1253: LDF_I	ld	[%r31, 0x0110], %f17
	.word 0xe21fe0e0  ! 1254: LDD_I	ldd	[%r31 + 0x00e0], %r17
	.word 0x9d97c000  ! 1255: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x99b48706  ! 1256: FMULD8SUx16	fmuld8ulx16	%f18, %f6, %d12
	.word 0xd81fe0f0  ! 1257: LDD_I	ldd	[%r31 + 0x00f0], %r12
	.word 0xbfefc000  ! 1257: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xd01fe130  ! 1258: LDD_I	ldd	[%r31 + 0x0130], %r8
	.word 0xd1e7c2c0  ! 1259: CASA_I	casa	[%r31] 0x16, %r0, %r8
	.word 0xd01fe1d0  ! 1260: LDD_I	ldd	[%r31 + 0x01d0], %r8
	.word 0xd01fe0e0  ! 1261: LDD_I	ldd	[%r31 + 0x00e0], %r8
	.word 0xd09fc2e0  ! 1261: LDDA_R	ldda	[%r31, %r0] 0x17, %r8
	.word 0x9bb4c0a1  ! 1262: EDGE16N	edge16n	%r19, %r1, %r13
	.word 0x00800001  ! 1263: BN	bn  	<label_0x1>
	.word 0xa1b04cec  ! 1264: FNOT2S	fandnot1s	%f12, %f16
	.word 0xa9b440a3  ! 1265: EDGE16N	edge16n	%r17, %r3, %r20
	.word 0xc19fde00  ! 1265: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x97b087c8  ! 1266: PDIST	pdistn	%d2, %d8, %d42
	.word 0xbfefc000  ! 1267: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x97b487c1  ! 1268: PDIST	pdistn	%d18, %d32, %d42
	.word 0x95b307c9  ! 1269: PDIST	pdistn	%d12, %d40, %d10
	.word 0x9bb407d4  ! 1269: PDIST	pdistn	%d16, %d20, %d44
	.word 0xd1124010  ! 1: LDQF_R	-	[%r9, %r16], %f8
    nop
    nop
    mov 39, %g1
loopz_20_292:
    ldstub [%r31+0xb0], %r2
    brnz,a %r1, loopz_20_292
    dec %r1
	.word 0x97a449d3  ! 1270: FDIVd	fdivd	%f48, %f50, %f42
	.word 0xd61fe120  ! 1271: LDD_I	ldd	[%r31 + 0x0120], %r11
	.word 0x99b507c8  ! 1272: PDIST	pdistn	%d20, %d8, %d12
	.word 0x91a509cc  ! 1273: FDIVd	fdivd	%f20, %f12, %f8
	.word 0xd11fe030  ! 1273: LDDF_I	ldd	[%r31, 0x0030], %f8
	.word 0xa9a049b3  ! 1274: FDIVs	fdivs	%f1, %f19, %f20
	.word 0xc3efe160  ! 1275: PREFETCHA_I	prefetcha	[%r31, + 0x0160] %asi, #one_read
	.word 0x9bb4c707  ! 1276: FMULD8SUx16	fmuld8ulx16	%f19, %f7, %d44
	.word 0xa1a0c9b0  ! 1277: FDIVs	fdivs	%f3, %f16, %f16
	.word 0xe03fe0b0  ! 1277: STD_I	std	%r16, [%r31 + 0x00b0]
	.word 0x91b4070a  ! 1278: FMULD8SUx16	fmuld8ulx16	%f16, %f10, %d8
	.word 0xe1bfde20  ! 1279: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa7b287c1  ! 1280: PDIST	pdistn	%d10, %d32, %d50
	.word 0xa3b50702  ! 1281: FMULD8SUx16	fmuld8ulx16	%f20, %f2, %d48
	.word 0xa3b047c8  ! 1281: PDIST	pdistn	%d32, %d8, %d48
	.word 0x99b08711  ! 1282: FMULD8SUx16	fmuld8ulx16	%f2, %f17, %d12
	.word 0xd907e0e0  ! 1283: LDF_I	ld	[%r31, 0x00e0], %f12
	.word 0x91b08708  ! 1284: FMULD8SUx16	fmuld8ulx16	%f2, %f8, %d8
	.word 0x97b18712  ! 1285: FMULD8SUx16	fmuld8ulx16	%f6, %f18, %d42
	.word 0xd707e160  ! 1285: LDF_I	ld	[%r31, 0x0160], %f11
	.word 0x93b18ce9  ! 1286: FNOT2S	fandnot1s	%f9, %f9
	.word 0x9d97c000  ! 1287: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd21fe0a0  ! 1288: LDD_I	ldd	[%r31 + 0x00a0], %r9
	.word 0xa9b40cec  ! 1289: FNOT2S	fandnot1s	%f12, %f20
	.word 0xe81fe0b0  ! 1289: LDD_I	ldd	[%r31 + 0x00b0], %r20
	.word 0x97b500aa  ! 1290: EDGE16N	edge16n	%r20, %r10, %r11
	.word 0xd707e020  ! 1291: LDF_I	ld	[%r31, 0x0020], %f11
	.word 0xa7b0c7d1  ! 1292: PDIST	pdistn	%d34, %d48, %d50
	.word 0xa3b4c0b4  ! 1293: EDGE16N	edge16n	%r19, %r20, %r17
	.word 0x97b487cc  ! 1293: PDIST	pdistn	%d18, %d12, %d42
	.word 0x97b400a3  ! 1294: EDGE16N	edge16n	%r16, %r3, %r11
	.word 0xd73fe110  ! 1295: STDF_I	std	%f11, [0x0110, %r31]
	.word 0xa9b440b3  ! 1296: EDGE16N	edge16n	%r17, %r19, %r20
	.word 0x99b480b4  ! 1297: EDGE16N	edge16n	%r18, %r20, %r12
	.word 0xd897c080  ! 1297: LDUHA_R	lduha	[%r31, %r0] 0x04, %r12
	.word 0xd81fe0c0  ! 1298: LDD_I	ldd	[%r31 + 0x00c0], %r12
	.word 0xbfefc000  ! 1299: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa5a4c9c2  ! 1300: FDIVd	fdivd	%f50, %f2, %f18
	.word 0xe41fe0a0  ! 1301: LDD_I	ldd	[%r31 + 0x00a0], %r18
	.word 0xbfe7c000  ! 1301: SAVE_R	save	%r31, %r0, %r31
	.word 0x95b280ad  ! 1302: EDGE16N	edge16n	%r10, %r13, %r10
	.word 0xd507e140  ! 1303: LDF_I	ld	[%r31, 0x0140], %f10
	.word 0x99b30702  ! 1304: FMULD8SUx16	fmuld8ulx16	%f12, %f2, %d12
	.word 0x95b480b2  ! 1305: EDGE16N	edge16n	%r18, %r18, %r10
	.word 0xa5b48704  ! 1305: FMULD8SUx16	fmuld8ulx16	%f18, %f4, %d18
    nop
    nop
    mov 23, %g1
loopz_20_300:
    ldstub [%r31+0x50], %r2
    brnz,a %r1, loopz_20_300
    dec %r1
	.word 0xe41fe160  ! 1306: LDD_I	ldd	[%r31 + 0x0160], %r18
	.word 0xc32fe130  ! 1307: STXFSR_I	st-sfr	%f1, [0x0130, %r31]
	.word 0xa5b447ca  ! 1308: PDIST	pdistn	%d48, %d10, %d18
	.word 0xe41fe020  ! 1309: LDD_I	ldd	[%r31 + 0x0020], %r18
	.word 0xa1b087c1  ! 1309: PDIST	pdistn	%d2, %d32, %d16
	.word 0xa1b1ccec  ! 1310: FNOT2S	fandnot1s	%f12, %f16
	.word 0xbfefc000  ! 1311: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x99b50cf1  ! 1312: FNOT2S	fandnot1s	%f17, %f12
	.word 0xa7b18ce5  ! 1313: FNOT2S	fandnot1s	%f5, %f19
	.word 0xbfe7c000  ! 1313: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1b507d0  ! 1314: PDIST	pdistn	%d20, %d16, %d16
	.word 0xe097d060  ! 1315: LDUHA_R	lduha	[%r31, %r0] 0x83, %r16
	.word 0xa7b50711  ! 1316: FMULD8SUx16	fmuld8ulx16	%f20, %f17, %d50
	.word 0xa1b0c7d4  ! 1317: PDIST	pdistn	%d34, %d20, %d16
	.word 0x9bb48714  ! 1317: FMULD8SUx16	fmuld8ulx16	%f18, %f20, %d44
	.word 0x95b44701  ! 1318: FMULD8SUx16	fmuld8ulx16	%f17, %f1, %d10
	.word 0xe19fc3e0  ! 1319: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x99b18702  ! 1320: FMULD8SUx16	fmuld8ulx16	%f6, %f2, %d12
	.word 0x91b18709  ! 1321: FMULD8SUx16	fmuld8ulx16	%f6, %f9, %d8
	.word 0xe1bfdc00  ! 1321: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa3b2c0ad  ! 1322: EDGE16N	edge16n	%r11, %r13, %r17
	.word 0x9d97c000  ! 1323: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x95b4c7ca  ! 1324: PDIST	pdistn	%d50, %d10, %d10
	.word 0xa3b400a4  ! 1325: EDGE16N	edge16n	%r16, %r4, %r17
	.word 0x91b447d3  ! 1325: PDIST	pdistn	%d48, %d50, %d8
	.word 0xa1a509a4  ! 1326: FDIVs	fdivs	%f20, %f4, %f16
	.word 0xe19fdf20  ! 1327: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa5b40712  ! 1328: FMULD8SUx16	fmuld8ulx16	%f16, %f18, %d18
	.word 0xa5a449b0  ! 1329: FDIVs	fdivs	%f17, %f16, %f18
	.word 0xa1b44710  ! 1329: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d16
	.word 0xa9b14ce2  ! 1330: FNOT2S	fandnot1s	%f2, %f20
	.word 0xe907e1c0  ! 1331: LDF_I	ld	[%r31, 0x01c0], %f20
	.word 0x9bb18ce6  ! 1332: FNOT2S	fandnot1s	%f6, %f13
	.word 0x99b34cf1  ! 1333: FNOT2S	fandnot1s	%f17, %f12
	.word 0xd907e0e0  ! 1333: LDF_I	ld	[%r31, 0x00e0], %f12
	.word 0x9ba409d2  ! 1334: FDIVd	fdivd	%f16, %f18, %f44
	.word 0xbfefc000  ! 1335: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95a409b4  ! 1336: FDIVs	fdivs	%f16, %f20, %f10
	.word 0x95a409d2  ! 1337: FDIVd	fdivd	%f16, %f18, %f10
	.word 0xbfefc000  ! 1337: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xc19fdf00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfde20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf1
	.word 0xc19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc0bfde00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf0
	.word 0xe09fda60  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd3, %r16
	.word 0xc1bfc3e0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc0bfda60  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd3
	.word 0xc0bfc2c0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x16
	.word 0xe19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe1bfda00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe1bfde20  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc1bfc3e0  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
    nop
    nop
    mov 51, %g1
loopz_20_307:
    ldstub [%r31+0], %r2
    brnz,a %r1, loopz_20_307
    dec %r1
	.word 0xa9a0c9d3  ! 1338: FDIVd	fdivd	%f34, %f50, %f20
	.word 0xe81fe080  ! 1339: LDD_I	ldd	[%r31 + 0x0080], %r20
	.word 0x97a2c9a8  ! 1340: FDIVs	fdivs	%f11, %f8, %f11
	.word 0x9ba449d2  ! 1341: FDIVd	fdivd	%f48, %f18, %f44
	.word 0xda1fc000  ! 1341: LDD_R	ldd	[%r31 + %r0], %r13
	.word 0x93b40ce6  ! 1342: FNOT2S	fandnot1s	%f6, %f9
	.word 0x93a7c9c0  ! 1343: FDIVd	fdivd	%f62, %f0, %f40
	.word 0xa3b48703  ! 1344: FMULD8SUx16	fmuld8ulx16	%f18, %f3, %d48
	.word 0xa9b24cf2  ! 1345: FNOT2S	fandnot1s	%f18, %f20
	.word 0xa5b4c70c  ! 1345: FMULD8SUx16	fmuld8ulx16	%f19, %f12, %d18
	.word 0xe41fe120  ! 1346: LDD_I	ldd	[%r31 + 0x0120], %r18
	.word 0xe507e0a0  ! 1347: LDF_I	ld	[%r31, 0x00a0], %f18
	.word 0xa5b50cf4  ! 1348: FNOT2S	fandnot1s	%f20, %f18
	.word 0xe41fe1a0  ! 1349: LDD_I	ldd	[%r31 + 0x01a0], %r18
	.word 0x91b34cf1  ! 1349: FNOT2S	fandnot1s	%f17, %f8
	.word 0x97b40cf1  ! 1350: FNOT2S	fandnot1s	%f17, %f11
	.word 0xbfe7c000  ! 1351: SAVE_R	save	%r31, %r0, %r31
	.word 0xa9b04ce6  ! 1352: FNOT2S	fandnot1s	%f6, %f20
	.word 0xa1b2cce8  ! 1353: FNOT2S	fandnot1s	%f8, %f16
	.word 0x9d97c000  ! 1353: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x93b440a5  ! 1354: EDGE16N	edge16n	%r17, %r5, %r9
	.word 0x81b7c7c0  ! 1355: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa5a4c9cb  ! 1356: FDIVd	fdivd	%f50, %f42, %f18
	.word 0x97b4c0b1  ! 1357: EDGE16N	edge16n	%r19, %r17, %r11
	.word 0x95a449d0  ! 1357: FDIVd	fdivd	%f48, %f16, %f10
    nop
    nop
    mov 51, %g1
loopb_20_311:
    ldstub [%r31+0x1e0], %r2
    brnz,a %r1, loopb_20_311
    dec %r1
	.word 0x91b407d3  ! 1358: PDIST	pdistn	%d16, %d50, %d8
	.word 0xc1bfdf00  ! 1359: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa1a4c9c2  ! 1360: FDIVd	fdivd	%f50, %f2, %f16
	.word 0x93b487c1  ! 1361: PDIST	pdistn	%d18, %d32, %d40
	.word 0xa7a289c3  ! 1361: FDIVd	fdivd	%f10, %f34, %f50
	.word 0x95a189ca  ! 1362: FDIVd	fdivd	%f6, %f10, %f10
	.word 0x39400001  ! 1363: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa1b507cd  ! 1364: PDIST	pdistn	%d20, %d44, %d16
	.word 0x93a449d3  ! 1365: FDIVd	fdivd	%f48, %f50, %f40
	.word 0x87afca40  ! 1365: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa9b50713  ! 1366: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d20
	.word 0xe907e120  ! 1367: LDF_I	ld	[%r31, 0x0120], %f20
	.word 0xe81fe1a0  ! 1368: LDD_I	ldd	[%r31 + 0x01a0], %r20
	.word 0x93b24713  ! 1369: FMULD8SUx16	fmuld8ulx16	%f9, %f19, %d40
	.word 0xd21fe1e0  ! 1369: LDD_I	ldd	[%r31 + 0x01e0], %r9
    nop
    nop
    mov 11, %g1
loopb_20_313:
    ldstub [%r31+0x80], %r2
    brnz,a %r1, loopb_20_313
    dec %r1
	.word 0xa9a449d2  ! 1370: FDIVd	fdivd	%f48, %f18, %f20
	.word 0xc1bfc3e0  ! 1371: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa3b307d2  ! 1372: PDIST	pdistn	%d12, %d18, %d48
	.word 0xa1a489cb  ! 1373: FDIVd	fdivd	%f18, %f42, %f16
	.word 0xc19fc2c0  ! 1373: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa5b187c4  ! 1374: PDIST	pdistn	%d6, %d4, %d18
	.word 0xe43fe040  ! 1375: STD_I	std	%r18, [%r31 + 0x0040]
	.word 0xa5b407cb  ! 1376: PDIST	pdistn	%d16, %d42, %d18
	.word 0x9bb187c9  ! 1377: PDIST	pdistn	%d6, %d40, %d44
	.word 0x9bb7c4c0  ! 1377: FCMPNE32	fcmpne32	%d62, %d0, %r13
	.word 0x9bb28710  ! 1378: FMULD8SUx16	fmuld8ulx16	%f10, %f16, %d44
	.word 0xda3fe030  ! 1379: STD_I	std	%r13, [%r31 + 0x0030]
	.word 0xa1b107c6  ! 1380: PDIST	pdistn	%d4, %d6, %d16
	.word 0x93b28704  ! 1381: FMULD8SUx16	fmuld8ulx16	%f10, %f4, %d40
	.word 0x9f802060  ! 1381: SIR	sir	0x0060
	.word 0xd21fe160  ! 1382: LDD_I	ldd	[%r31 + 0x0160], %r9
	.word 0xd33fe140  ! 1383: STDF_I	std	%f9, [0x0140, %r31]
	.word 0xa9b20cf0  ! 1384: FNOT2S	fandnot1s	%f16, %f20
	.word 0xe81fe170  ! 1385: LDD_I	ldd	[%r31 + 0x0170], %r20
	.word 0xe93fe150  ! 1385: STDF_I	std	%f20, [0x0150, %r31]
	.word 0x95b18cf1  ! 1386: FNOT2S	fandnot1s	%f17, %f10
	.word 0xd507e1a0  ! 1387: LDF_I	ld	[%r31, 0x01a0], %f10
	.word 0xa7b407d2  ! 1388: PDIST	pdistn	%d16, %d18, %d50
	.word 0x99b40ce2  ! 1389: FNOT2S	fandnot1s	%f2, %f12
	.word 0xa7b487d3  ! 1389: PDIST	pdistn	%d18, %d50, %d50
	.word 0xa7a449c6  ! 1390: FDIVd	fdivd	%f48, %f6, %f50
	.word 0xe707e090  ! 1391: LDF_I	ld	[%r31, 0x0090], %f19
	.word 0x97b20702  ! 1392: FMULD8SUx16	fmuld8ulx16	%f8, %f2, %d42
	.word 0xa1a409d0  ! 1393: FDIVd	fdivd	%f16, %f16, %f16
	.word 0xa9b44714  ! 1393: FMULD8SUx16	fmuld8ulx16	%f17, %f20, %d20
	.word 0xa5a4c9d2  ! 1394: FDIVd	fdivd	%f50, %f18, %f18
	.word 0xa5b7c4c0  ! 1395: FCMPNE32	fcmpne32	%d62, %d0, %r18
	.word 0x99b50ce6  ! 1396: FNOT2S	fandnot1s	%f6, %f12
	.word 0x91a4c9d3  ! 1397: FDIVd	fdivd	%f50, %f50, %f8
	.word 0xa7b10cf1  ! 1397: FNOT2S	fandnot1s	%f17, %f19
    nop
    nop
    mov 55, %g1
loopb_20_320:
    ldstub [%r31+0x1e0], %r2
    brnz,a %r1, loopb_20_320
    dec %r1
	.word 0xa1b20cf3  ! 1398: FNOT2S	fandnot1s	%f19, %f16
	.word 0xe1bfda00  ! 1399: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe01fe0c0  ! 1400: LDD_I	ldd	[%r31 + 0x00c0], %r16
	.word 0xa1b28cf1  ! 1401: FNOT2S	fandnot1s	%f17, %f16
	.word 0xe01fe1e0  ! 1401: LDD_I	ldd	[%r31 + 0x01e0], %r16
	.word 0xa7b4ccf3  ! 1402: FNOT2S	fandnot1s	%f19, %f19
	.word 0xe707e1e0  ! 1403: LDF_I	ld	[%r31, 0x01e0], %f19
	.word 0xa5b500ab  ! 1404: EDGE16N	edge16n	%r20, %r11, %r18
	.word 0x93b04ce1  ! 1405: FNOT2S	fandnot1s	%f1, %f9
	.word 0xa5b340b1  ! 1405: EDGE16N	edge16n	%r13, %r17, %r18
	.word 0xa9a149a2  ! 1406: FDIVs	fdivs	%f5, %f2, %f20
	.word 0x39400001  ! 1407: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa7b4c702  ! 1408: FMULD8SUx16	fmuld8ulx16	%f19, %f2, %d50
	.word 0x99a289b3  ! 1409: FDIVs	fdivs	%f10, %f19, %f12
	.word 0xc36fe1e0  ! 1409: PREFETCH_I	prefetch	[%r31 + 0x01e0], #one_read
	.word 0xd21fe0b0  ! 1410: LDD_I	ldd	[%r31 + 0x00b0], %r9
	.word 0x9d97c000  ! 1411: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3a409c6  ! 1412: FDIVd	fdivd	%f16, %f6, %f48
	.word 0xe21fe0d0  ! 1413: LDD_I	ldd	[%r31 + 0x00d0], %r17
	.word 0x99a509cc  ! 1413: FDIVd	fdivd	%f20, %f12, %f12
	.word 0xa3a349a8  ! 1414: FDIVs	fdivs	%f13, %f8, %f17
	.word 0xe3e7c280  ! 1415: CASA_I	casa	[%r31] 0x14, %r0, %r17
	.word 0xa3a249c2  ! 1416: FDIVd	fdivd	%f40, %f2, %f48
	.word 0xa5a489a4  ! 1417: FDIVs	fdivs	%f18, %f4, %f18
	.word 0x93a289c9  ! 1417: FDIVd	fdivd	%f10, %f40, %f40
	.word 0xe09fda60  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd3, %r16
	.word 0xc19fdf00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc19fda60  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc09fdc00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
	.word 0xc0bfc3e0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x1f
	.word 0xe0bfda60  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd3
	.word 0xc0bfc2c0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x16
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc1bfde00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa9b4cce7  ! 1418: FNOT2S	fandnot1s	%f7, %f20
	.word 0x00800001  ! 1419: BN	bn  	<label_0x1>
	.word 0xa1a209d3  ! 1420: FDIVd	fdivd	%f8, %f50, %f16
	.word 0x9bb2cce7  ! 1421: FNOT2S	fandnot1s	%f7, %f13
	.word 0x00800001  ! 1421: BN	bn  	<label_0x1>
	.word 0xda1fe0c0  ! 1422: LDD_I	ldd	[%r31 + 0x00c0], %r13
	.word 0xdb07e090  ! 1423: LDF_I	ld	[%r31, 0x0090], %f13
	.word 0x99b48cf0  ! 1424: FNOT2S	fandnot1s	%f16, %f12
	.word 0xd81fe0e0  ! 1425: LDD_I	ldd	[%r31 + 0x00e0], %r12
	.word 0x95b50ce2  ! 1425: FNOT2S	fandnot1s	%f2, %f10
	.word 0xa5b087cc  ! 1426: PDIST	pdistn	%d2, %d12, %d18
	.word 0xe507e010  ! 1427: LDF_I	ld	[%r31, 0x0010], %f18
	.word 0x99b4c0a8  ! 1428: EDGE16N	edge16n	%r19, %r8, %r12
	.word 0xa3b487d0  ! 1429: PDIST	pdistn	%d18, %d16, %d48
	.word 0xe307e0c0  ! 1429: LDF_I	ld	[%r31, 0x00c0], %f17
	.word 0x97a409b0  ! 1430: FDIVs	fdivs	%f16, %f16, %f11
	.word 0x19400001  ! 1431: FBPUGE	fbuge
	.word 0xd61fe0d0  ! 1432: LDD_I	ldd	[%r31 + 0x00d0], %r11
	.word 0xa3a289b1  ! 1433: FDIVs	fdivs	%f10, %f17, %f17
	.word 0xc36fe150  ! 1433: PREFETCH_I	prefetch	[%r31 + 0x0150], #one_read
	.word 0xa9b4c0ac  ! 1434: EDGE16N	edge16n	%r19, %r12, %r20
	.word 0xc32fe000  ! 1435: STXFSR_I	st-sfr	%f1, [0x0000, %r31]
	.word 0xa3b107c5  ! 1436: PDIST	pdistn	%d4, %d36, %d48
	.word 0xa3b400ad  ! 1437: EDGE16N	edge16n	%r16, %r13, %r17
	.word 0x99b307c2  ! 1437: PDIST	pdistn	%d12, %d2, %d12
	.word 0x99b440ab  ! 1438: EDGE16N	edge16n	%r17, %r11, %r12
	.word 0xbfe7c000  ! 1439: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1b480a5  ! 1440: EDGE16N	edge16n	%r18, %r5, %r16
	.word 0x9bb0c0a7  ! 1441: EDGE16N	edge16n	%r3, %r7, %r13
	.word 0x9d97c000  ! 1441: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b18cf4  ! 1442: FNOT2S	fandnot1s	%f20, %f19
	.word 0xe7e7c180  ! 1443: CASA_I	casa	[%r31] 0x c, %r0, %r19
	.word 0xa9a349b3  ! 1444: FDIVs	fdivs	%f13, %f19, %f20
	.word 0xa5b04ce5  ! 1445: FNOT2S	fandnot1s	%f5, %f18
	.word 0xa1a349a4  ! 1445: FDIVs	fdivs	%f13, %f4, %f16
	.word 0x91b300a3  ! 1446: EDGE16N	edge16n	%r12, %r3, %r8
	.word 0xd107e1a0  ! 1447: LDF_I	ld	[%r31, 0x01a0], %f8
	.word 0xa3b1ccf2  ! 1448: FNOT2S	fandnot1s	%f18, %f17
	.word 0xa3b140b4  ! 1449: EDGE16N	edge16n	%r5, %r20, %r17
	.word 0xe307e0a0  ! 1449: LDF_I	ld	[%r31, 0x00a0], %f17
    nop
    nop
    mov 35, %g1
loopb_20_331:
    ldstub [%r31+0x1c0], %r2
    brnz,a %r1, loopb_20_331
    dec %r1
	.word 0xa1b087c5  ! 1450: PDIST	pdistn	%d2, %d36, %d16
	.word 0xc19fda60  ! 1451: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa3b04cf3  ! 1452: FNOT2S	fandnot1s	%f19, %f17
	.word 0xa3b1c7c2  ! 1453: PDIST	pdistn	%d38, %d2, %d48
	.word 0xc1bfc3e0  ! 1453: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x9bb147d0  ! 1454: PDIST	pdistn	%d36, %d16, %d44
	.word 0xbfefc000  ! 1455: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95b40710  ! 1456: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d10
	.word 0x9bb2c7c4  ! 1457: PDIST	pdistn	%d42, %d4, %d44
	.word 0xa9b10712  ! 1457: FMULD8SUx16	fmuld8ulx16	%f4, %f18, %d20
	.word 0xa5a4c9b0  ! 1458: FDIVs	fdivs	%f19, %f16, %f18
	.word 0xe507e1f0  ! 1459: LDF_I	ld	[%r31, 0x01f0], %f18
	.word 0xa9b4ccf2  ! 1460: FNOT2S	fandnot1s	%f18, %f20
	.word 0xa9a4c9b4  ! 1461: FDIVs	fdivs	%f19, %f20, %f20
	.word 0xe907e0a0  ! 1461: LDF_I	ld	[%r31, 0x00a0], %f20
	.word 0xd01fe040  ! 1462: LDD_I	ldd	[%r31 + 0x0040], %r8
	.word 0xd1e7d920  ! 1463: CASA_I	casa	[%r31] 0xc9, %r0, %r8
	.word 0xd01fe030  ! 1464: LDD_I	ldd	[%r31 + 0x0030], %r8
	.word 0xd01fe090  ! 1465: LDD_I	ldd	[%r31 + 0x0090], %r8
	.word 0xd01fe050  ! 1465: LDD_I	ldd	[%r31 + 0x0050], %r8
	.word 0x99b200a2  ! 1466: EDGE16N	edge16n	%r8, %r2, %r12
	.word 0xd83fe000  ! 1467: STD_I	std	%r12, [%r31 + 0x0000]
	.word 0xa9a4c9aa  ! 1468: FDIVs	fdivs	%f19, %f10, %f20
	.word 0x91b4c0a7  ! 1469: EDGE16N	edge16n	%r19, %r7, %r8
	.word 0xd1e7c3c0  ! 1469: CASA_I	casa	[%r31] 0x1e, %r0, %r8
	.word 0xa3b4c7cc  ! 1470: PDIST	pdistn	%d50, %d12, %d48
	.word 0x87afca40  ! 1471: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa5b0c707  ! 1472: FMULD8SUx16	fmuld8ulx16	%f3, %f7, %d18
	.word 0x97b447d1  ! 1473: PDIST	pdistn	%d48, %d48, %d42
	.word 0xd7e7d140  ! 1473: CASA_I	casa	[%r31] 0x8a, %r0, %r11
	.word 0xa7b24710  ! 1474: FMULD8SUx16	fmuld8ulx16	%f9, %f16, %d50
	.word 0x20800001  ! 1475: BN	bn,a	<label_0x1>
	.word 0x93a409a1  ! 1476: FDIVs	fdivs	%f16, %f1, %f9
	.word 0x95b04712  ! 1477: FMULD8SUx16	fmuld8ulx16	%f1, %f18, %d10
	.word 0x91a289b1  ! 1477: FDIVs	fdivs	%f10, %f17, %f8
	.word 0xd01fe180  ! 1478: LDD_I	ldd	[%r31 + 0x0180], %r8
	.word 0xc36fe110  ! 1479: PREFETCH_I	prefetch	[%r31 + 0x0110], #one_read
	.word 0xa7b1c70b  ! 1480: FMULD8SUx16	fmuld8ulx16	%f7, %f11, %d50
	.word 0xe61fe000  ! 1481: LDD_I	ldd	[%r31 + 0x0000], %r19
	.word 0xa1b50708  ! 1481: FMULD8SUx16	fmuld8ulx16	%f20, %f8, %d16
    nop
    nop
    mov 63, %g1
loopb_20_337:
    ldstub [%r31+0x1e0], %r2
    brnz,a %r1, loopb_20_337
    dec %r1
	.word 0xa7b50ce7  ! 1482: FNOT2S	fandnot1s	%f7, %f19
	.word 0xe1bfc3e0  ! 1483: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x93b407d2  ! 1484: PDIST	pdistn	%d16, %d18, %d40
	.word 0xa1b4cced  ! 1485: FNOT2S	fandnot1s	%f13, %f16
	.word 0xa1b347c8  ! 1485: PDIST	pdistn	%d44, %d8, %d16
	.word 0xa9b50cea  ! 1486: FNOT2S	fandnot1s	%f10, %f20
	.word 0xe93fe130  ! 1487: STDF_I	std	%f20, [0x0130, %r31]
	.word 0x99b340b4  ! 1488: EDGE16N	edge16n	%r13, %r20, %r12
	.word 0xa9b48cf1  ! 1489: FNOT2S	fandnot1s	%f17, %f20
	.word 0xa1b440ad  ! 1489: EDGE16N	edge16n	%r17, %r13, %r16
	.word 0x91a149b0  ! 1490: FDIVs	fdivs	%f5, %f16, %f8
	.word 0xd11fe150  ! 1491: LDDF_I	ldd	[%r31, 0x0150], %f8
	.word 0xa3b500b2  ! 1492: EDGE16N	edge16n	%r20, %r18, %r17
	.word 0x97a449ad  ! 1493: FDIVs	fdivs	%f17, %f13, %f11
	.word 0x91b480b1  ! 1493: EDGE16N	edge16n	%r18, %r17, %r8
	.word 0x99b140a7  ! 1494: EDGE16N	edge16n	%r5, %r7, %r12
	.word 0x24cfc001  ! 1495: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xa1b4c7d0  ! 1496: PDIST	pdistn	%d50, %d16, %d16
	.word 0x91b4c0a6  ! 1497: EDGE16N	edge16n	%r19, %r6, %r8
	.word 0x87afca40  ! 1497: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa9a209c3  ! 1498: FDIVd	fdivd	%f8, %f34, %f20
	.word 0xe897c540  ! 1499: LDUHA_R	lduha	[%r31, %r0] 0x2a, %r20
	.word 0xa1b400b0  ! 1500: EDGE16N	edge16n	%r16, %r16, %r16
	.word 0x91a2c9d1  ! 1501: FDIVd	fdivd	%f42, %f48, %f8
	.word 0xd13fe030  ! 1501: STDF_I	std	%f8, [0x0030, %r31]
	.word 0x91b40702  ! 1502: FMULD8SUx16	fmuld8ulx16	%f16, %f2, %d8
	.word 0x91a7c9c0  ! 1503: FDIVd	fdivd	%f62, %f0, %f8
	.word 0xd01fe030  ! 1504: LDD_I	ldd	[%r31 + 0x0030], %r8
	.word 0xa3b40711  ! 1505: FMULD8SUx16	fmuld8ulx16	%f16, %f17, %d48
	.word 0xe21fe0e0  ! 1505: LDD_I	ldd	[%r31 + 0x00e0], %r17
	.word 0x93b400b1  ! 1506: EDGE16N	edge16n	%r16, %r17, %r9
	.word 0x39400001  ! 1507: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xd21fe060  ! 1508: LDD_I	ldd	[%r31 + 0x0060], %r9
	.word 0xa3b400a5  ! 1509: EDGE16N	edge16n	%r16, %r5, %r17
	.word 0xe21fe130  ! 1509: LDD_I	ldd	[%r31 + 0x0130], %r17
	.word 0xe21fe160  ! 1510: LDD_I	ldd	[%r31 + 0x0160], %r17
	.word 0xe307e050  ! 1511: LDF_I	ld	[%r31, 0x0050], %f17
	.word 0xe21fe060  ! 1512: LDD_I	ldd	[%r31 + 0x0060], %r17
	.word 0xe21fe160  ! 1513: LDD_I	ldd	[%r31 + 0x0160], %r17
	.word 0xe307e160  ! 1513: LDF_I	ld	[%r31, 0x0160], %f17
    nop
    nop
    mov 63, %g1
loopz_20_345:
    ldstub [%r31+0x120], %r2
    brnz,a %r1, loopz_20_345
    dec %r1
	.word 0x99b187c4  ! 1514: PDIST	pdistn	%d6, %d4, %d12
	.word 0xd81fc000  ! 1515: LDD_R	ldd	[%r31 + %r0], %r12
	.word 0xa7a449b2  ! 1516: FDIVs	fdivs	%f17, %f18, %f19
	.word 0xa9b147c7  ! 1517: PDIST	pdistn	%d36, %d38, %d20
	.word 0xe81fc000  ! 1517: LDD_R	ldd	[%r31 + %r0], %r20
	.word 0x99b14cf1  ! 1518: FNOT2S	fandnot1s	%f17, %f12
	.word 0x20800001  ! 1519: BN	bn,a	<label_0x1>
	.word 0xa9a409b4  ! 1520: FDIVs	fdivs	%f16, %f20, %f20
	.word 0xa9b4ccea  ! 1521: FNOT2S	fandnot1s	%f10, %f20
	.word 0xe1bfde20  ! 1521: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa5a0c9c5  ! 1522: FDIVd	fdivd	%f34, %f36, %f18
	.word 0xe51fe0b0  ! 1523: LDDF_I	ldd	[%r31, 0x00b0], %f18
	.word 0x99a089ca  ! 1524: FDIVd	fdivd	%f2, %f10, %f12
	.word 0x9ba489d2  ! 1525: FDIVd	fdivd	%f18, %f18, %f44
	.word 0x99a4c9d4  ! 1525: FDIVd	fdivd	%f50, %f20, %f12
	.word 0x97b507d2  ! 1526: PDIST	pdistn	%d20, %d18, %d42
	.word 0xc1bfda60  ! 1527: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xd61fe180  ! 1528: LDD_I	ldd	[%r31 + 0x0180], %r11
	.word 0xa9b2c7d2  ! 1529: PDIST	pdistn	%d42, %d18, %d20
	.word 0xe81fe170  ! 1529: LDD_I	ldd	[%r31 + 0x0170], %r20
	.word 0x91a1c9a5  ! 1530: FDIVs	fdivs	%f7, %f5, %f8
	.word 0xc1bfdf20  ! 1531: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x95b400b0  ! 1532: EDGE16N	edge16n	%r16, %r16, %r10
	.word 0x9ba2c9b2  ! 1533: FDIVs	fdivs	%f11, %f18, %f13
	.word 0xa7b4c0b3  ! 1533: EDGE16N	edge16n	%r19, %r19, %r19
	.word 0xa1b48cea  ! 1534: FNOT2S	fandnot1s	%f10, %f16
	.word 0xc3efe1f0  ! 1535: PREFETCHA_I	prefetcha	[%r31, + 0x01f0] %asi, #one_read
	.word 0xa9b4c7d2  ! 1536: PDIST	pdistn	%d50, %d18, %d20
	.word 0x91b1ccf3  ! 1537: FNOT2S	fandnot1s	%f19, %f8
	.word 0x9bb4c7c7  ! 1537: PDIST	pdistn	%d50, %d38, %d44
	.word 0x95a409cb  ! 1538: FDIVd	fdivd	%f16, %f42, %f10
	.word 0xd5e7c200  ! 1539: CASA_I	casa	[%r31] 0x10, %r0, %r10
	.word 0xa3b40706  ! 1540: FMULD8SUx16	fmuld8ulx16	%f16, %f6, %d48
	.word 0x95a449c5  ! 1541: FDIVd	fdivd	%f48, %f36, %f10
	.word 0xd43fe170  ! 1541: STD_I	std	%r10, [%r31 + 0x0170]
    nop
    nop
    mov 59, %g1
loopz_20_352:
    ldstub [%r31+0x1a0], %r2
    brnz,a %r1, loopz_20_352
    dec %r1
	.word 0x99a409a4  ! 1542: FDIVs	fdivs	%f16, %f4, %f12
	.word 0xd91fe1d0  ! 1543: LDDF_I	ldd	[%r31, 0x01d0], %f12
	.word 0xa5b487c1  ! 1544: PDIST	pdistn	%d18, %d32, %d18
	.word 0xa9a189ac  ! 1545: FDIVs	fdivs	%f6, %f12, %f20
	.word 0xa7b287d4  ! 1545: PDIST	pdistn	%d10, %d20, %d50
	.word 0x97b400aa  ! 1546: EDGE16N	edge16n	%r16, %r10, %r11
	.word 0xc1bfdb40  ! 1547: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa1b300b2  ! 1548: EDGE16N	edge16n	%r12, %r18, %r16
	.word 0x9bb500b1  ! 1549: EDGE16N	edge16n	%r20, %r17, %r13
	.word 0xe19fdb40  ! 1549: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa7a449a5  ! 1550: FDIVs	fdivs	%f17, %f5, %f19
	.word 0xe707e1b0  ! 1551: LDF_I	ld	[%r31, 0x01b0], %f19
	.word 0xa9b5070c  ! 1552: FMULD8SUx16	fmuld8ulx16	%f20, %f12, %d20
	.word 0xa3a449a6  ! 1553: FDIVs	fdivs	%f17, %f6, %f17
	.word 0xe307e120  ! 1553: LDF_I	ld	[%r31, 0x0120], %f17
	.word 0xa9b20712  ! 1554: FMULD8SUx16	fmuld8ulx16	%f8, %f18, %d20
	.word 0xbfefc000  ! 1555: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa5b14cf2  ! 1556: FNOT2S	fandnot1s	%f18, %f18
	.word 0xa9b18710  ! 1557: FMULD8SUx16	fmuld8ulx16	%f6, %f16, %d20
	.word 0xbfe7c000  ! 1557: SAVE_R	save	%r31, %r0, %r31
	.word 0x93a409a4  ! 1558: FDIVs	fdivs	%f16, %f4, %f9
	.word 0xd307e1e0  ! 1559: LDF_I	ld	[%r31, 0x01e0], %f9
	.word 0xa5a289b2  ! 1560: FDIVs	fdivs	%f10, %f18, %f18
	.word 0xa7a0c9b2  ! 1561: FDIVs	fdivs	%f3, %f18, %f19
	.word 0x97a4c9ad  ! 1561: FDIVs	fdivs	%f19, %f13, %f11
	.word 0x97a309ca  ! 1562: FDIVd	fdivd	%f12, %f10, %f42
	.word 0xc1bfdd40  ! 1563: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa9b440b1  ! 1564: EDGE16N	edge16n	%r17, %r17, %r20
	.word 0x99a509d1  ! 1565: FDIVd	fdivd	%f20, %f48, %f12
	.word 0x20800001  ! 1565: BN	bn,a	<label_0x1>
	.word 0xa7b447c6  ! 1566: PDIST	pdistn	%d48, %d6, %d50
	.word 0xe697c2c0  ! 1567: LDUHA_R	lduha	[%r31, %r0] 0x16, %r19
	.word 0xe61fe1d0  ! 1568: LDD_I	ldd	[%r31 + 0x01d0], %r19
	.word 0x91b4c7c9  ! 1569: PDIST	pdistn	%d50, %d40, %d8
	.word 0xc3efe120  ! 1569: PREFETCHA_I	prefetcha	[%r31, + 0x0120] %asi, #one_read
	.word 0x91b400b1  ! 1570: EDGE16N	edge16n	%r16, %r17, %r8
	.word 0x39400001  ! 1571: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x97b48cf3  ! 1572: FNOT2S	fandnot1s	%f19, %f11
	.word 0x9bb500aa  ! 1573: EDGE16N	edge16n	%r20, %r10, %r13
	.word 0x24cfc001  ! 1573: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xd61fe150  ! 1574: LDD_I	ldd	[%r31 + 0x0150], %r11
	.word 0xbfefc000  ! 1575: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95a349b0  ! 1576: FDIVs	fdivs	%f13, %f16, %f10
	.word 0xd41fe040  ! 1577: LDD_I	ldd	[%r31 + 0x0040], %r10
	.word 0xbfe7c000  ! 1577: SAVE_R	save	%r31, %r0, %r31
	.word 0xd21fe180  ! 1578: LDD_I	ldd	[%r31 + 0x0180], %r9
	.word 0xd23fe100  ! 1579: STD_I	std	%r9, [%r31 + 0x0100]
	.word 0xa3a189b4  ! 1580: FDIVs	fdivs	%f6, %f20, %f17
	.word 0xe21fe090  ! 1581: LDD_I	ldd	[%r31 + 0x0090], %r17
	.word 0x24cfc001  ! 1581: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xe21fe0d0  ! 1582: LDD_I	ldd	[%r31 + 0x00d0], %r17
	.word 0xe307e040  ! 1583: LDF_I	ld	[%r31, 0x0040], %f17
	.word 0x99b04ce5  ! 1584: FNOT2S	fandnot1s	%f5, %f12
	.word 0xd81fe140  ! 1585: LDD_I	ldd	[%r31 + 0x0140], %r12
	.word 0x97b2cce9  ! 1585: FNOT2S	fandnot1s	%f9, %f11
	.word 0xa3b487c5  ! 1586: PDIST	pdistn	%d18, %d36, %d48
	.word 0xbfefc000  ! 1587: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9bb44cf3  ! 1588: FNOT2S	fandnot1s	%f19, %f13
	.word 0xa3b4c7c2  ! 1589: PDIST	pdistn	%d50, %d2, %d48
	.word 0xbfefc000  ! 1589: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xe21fe1d0  ! 1590: LDD_I	ldd	[%r31 + 0x01d0], %r17
	.word 0x20800001  ! 1591: BN	bn,a	<label_0x1>
	.word 0xa1b44712  ! 1592: FMULD8SUx16	fmuld8ulx16	%f17, %f18, %d16
	.word 0xe01fe1e0  ! 1593: LDD_I	ldd	[%r31 + 0x01e0], %r16
	.word 0x95b4470c  ! 1593: FMULD8SUx16	fmuld8ulx16	%f17, %f12, %d10
	.word 0xa5b407d3  ! 1594: PDIST	pdistn	%d16, %d50, %d18
	.word 0x20800001  ! 1595: BN	bn,a	<label_0x1>
	.word 0xe41fe0a0  ! 1596: LDD_I	ldd	[%r31 + 0x00a0], %r18
	.word 0x99b4c7d2  ! 1597: PDIST	pdistn	%d50, %d18, %d12
	.word 0xd81fe000  ! 1597: LDD_I	ldd	[%r31 + 0x0000], %r12
	.word 0x99a349d1  ! 1598: FDIVd	fdivd	%f44, %f48, %f12
	.word 0xbfe7c000  ! 1599: SAVE_R	save	%r31, %r0, %r31
	.word 0xa5b04ce5  ! 1600: FNOT2S	fandnot1s	%f5, %f18
	.word 0x95a489c3  ! 1601: FDIVd	fdivd	%f18, %f34, %f10
	.word 0xa3b44cf0  ! 1601: FNOT2S	fandnot1s	%f16, %f17
	.word 0xe21fe170  ! 1602: LDD_I	ldd	[%r31 + 0x0170], %r17
	.word 0x39400001  ! 1603: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa3a449c4  ! 1604: FDIVd	fdivd	%f48, %f4, %f48
	.word 0xe21fe1e0  ! 1605: LDD_I	ldd	[%r31 + 0x01e0], %r17
	.word 0xa5a249c5  ! 1605: FDIVd	fdivd	%f40, %f36, %f18
	.word 0x99b18cea  ! 1606: FNOT2S	fandnot1s	%f10, %f12
	.word 0xbfe7c000  ! 1607: SAVE_R	save	%r31, %r0, %r31
	.word 0xa9b44cf0  ! 1608: FNOT2S	fandnot1s	%f16, %f20
	.word 0xa7b30ce3  ! 1609: FNOT2S	fandnot1s	%f3, %f19
	.word 0xbfe7c000  ! 1609: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7b2ccf2  ! 1610: FNOT2S	fandnot1s	%f18, %f19
	.word 0xe697d100  ! 1611: LDUHA_R	lduha	[%r31, %r0] 0x88, %r19
	.word 0xa3b140a2  ! 1612: EDGE16N	edge16n	%r5, %r2, %r17
	.word 0x9bb30ceb  ! 1613: FNOT2S	fandnot1s	%f11, %f13
	.word 0xa9b040b2  ! 1613: EDGE16N	edge16n	%r1, %r18, %r20
	.word 0xa1b2c0a3  ! 1614: EDGE16N	edge16n	%r11, %r3, %r16
	.word 0xe09fc2e0  ! 1615: LDDA_R	ldda	[%r31, %r0] 0x17, %r16
	.word 0xa5b4c0ac  ! 1616: EDGE16N	edge16n	%r19, %r12, %r18
	.word 0x95b240a8  ! 1617: EDGE16N	edge16n	%r9, %r8, %r10
	.word 0xc3efe1a0  ! 1617: PREFETCHA_I	prefetcha	[%r31, + 0x01a0] %asi, #one_read
	.word 0x99a409d3  ! 1618: FDIVd	fdivd	%f16, %f50, %f12
	.word 0xd907e060  ! 1619: LDF_I	ld	[%r31, 0x0060], %f12
	.word 0xa5b40ce9  ! 1620: FNOT2S	fandnot1s	%f9, %f18
	.word 0xa3a209cc  ! 1621: FDIVd	fdivd	%f8, %f12, %f48
	.word 0x99b30ce7  ! 1621: FNOT2S	fandnot1s	%f7, %f12
	.word 0x9ba409cb  ! 1622: FDIVd	fdivd	%f16, %f42, %f44
	.word 0xdadfd920  ! 1623: LDXA_R	ldxa	[%r31, %r0] 0xc9, %r13
	.word 0x9bb24ce6  ! 1624: FNOT2S	fandnot1s	%f6, %f13
	.word 0xa5a2c9cd  ! 1625: FDIVd	fdivd	%f42, %f44, %f18
	.word 0xe49fc380  ! 1625: LDDA_R	ldda	[%r31, %r0] 0x1c, %r18
    nop
    nop
    mov 47, %g1
loopb_20_373:
    ldstub [%r31+48], %r2
    brnz,a %r1, loopb_20_373
    dec %r1
	.word 0xa7b0c0a5  ! 1626: EDGE16N	edge16n	%r3, %r5, %r19
	.word 0xe1bfc2c0  ! 1627: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x91a449d0  ! 1628: FDIVd	fdivd	%f48, %f16, %f8
	.word 0x97b400b2  ! 1629: EDGE16N	edge16n	%r16, %r18, %r11
	.word 0xc19fda60  ! 1629: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa7a4c9b1  ! 1630: FDIVs	fdivs	%f19, %f17, %f19
	.word 0xe707e1a0  ! 1631: LDF_I	ld	[%r31, 0x01a0], %f19
	.word 0x9bb4c0b0  ! 1632: EDGE16N	edge16n	%r19, %r16, %r13
	.word 0xa5a489a6  ! 1633: FDIVs	fdivs	%f18, %f6, %f18
	.word 0xa1b400ab  ! 1633: EDGE16N	edge16n	%r16, %r11, %r16
	.word 0xa5a109b3  ! 1634: FDIVs	fdivs	%f4, %f19, %f18
	.word 0xbfe7c000  ! 1635: SAVE_R	save	%r31, %r0, %r31
	.word 0x99b3470b  ! 1636: FMULD8SUx16	fmuld8ulx16	%f13, %f11, %d12
	.word 0xa3a209a5  ! 1637: FDIVs	fdivs	%f8, %f5, %f17
	.word 0x99b0c706  ! 1637: FMULD8SUx16	fmuld8ulx16	%f3, %f6, %d12
    nop
    nop
    mov 19, %g1
loopb_20_375:
    ldstub [%r31+0x100], %r2
    brnz,a %r1, loopb_20_375
    dec %r1
	.word 0xa9b307d2  ! 1638: PDIST	pdistn	%d12, %d18, %d20
	.word 0xc19fdb40  ! 1639: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x99a189b3  ! 1640: FDIVs	fdivs	%f6, %f19, %f12
	.word 0xa3b4c7c1  ! 1641: PDIST	pdistn	%d50, %d32, %d48
	.word 0xe19fdd40  ! 1641: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa5b400a3  ! 1642: EDGE16N	edge16n	%r16, %r3, %r18
	.word 0xa5a7c9c0  ! 1643: FDIVd	fdivd	%f62, %f0, %f18
	.word 0xe41fe000  ! 1644: LDD_I	ldd	[%r31 + 0x0000], %r18
	.word 0x95b2c0ad  ! 1645: EDGE16N	edge16n	%r11, %r13, %r10
	.word 0x39400001  ! 1645: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa9b04cf1  ! 1646: FNOT2S	fandnot1s	%f17, %f20
	.word 0x9d97c000  ! 1647: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa1b14713  ! 1648: FMULD8SUx16	fmuld8ulx16	%f5, %f19, %d16
	.word 0x93b08cf4  ! 1649: FNOT2S	fandnot1s	%f20, %f9
	.word 0xa9b4c70c  ! 1649: FMULD8SUx16	fmuld8ulx16	%f19, %f12, %d20
	.word 0x95b4c0b2  ! 1650: EDGE16N	edge16n	%r19, %r18, %r10
	.word 0x87afca40  ! 1651: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x95b2ccf0  ! 1652: FNOT2S	fandnot1s	%f16, %f10
	.word 0x95b280a1  ! 1653: EDGE16N	edge16n	%r10, %r1, %r10
	.word 0x95a7c9c0  ! 1653: FDIVd	fdivd	%f62, %f0, %f10
	.word 0xa5a049c6  ! 1654: FDIVd	fdivd	%f32, %f6, %f18
	.word 0xc19fda60  ! 1655: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x99a489b2  ! 1656: FDIVs	fdivs	%f18, %f18, %f12
	.word 0x99a109d2  ! 1657: FDIVd	fdivd	%f4, %f18, %f12
	.word 0x20800001  ! 1657: BN	bn,a	<label_0x1>
	.word 0xd81fe160  ! 1658: LDD_I	ldd	[%r31 + 0x0160], %r12
	.word 0xe19fdf20  ! 1659: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x95b0870c  ! 1660: FMULD8SUx16	fmuld8ulx16	%f2, %f12, %d10
	.word 0xd41fe1a0  ! 1661: LDD_I	ldd	[%r31 + 0x01a0], %r10
	.word 0xc19fdd40  ! 1661: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa9b14ce2  ! 1662: FNOT2S	fandnot1s	%f2, %f20
	.word 0x24cfc001  ! 1663: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x91b4c7cd  ! 1664: PDIST	pdistn	%d50, %d44, %d8
	.word 0xa5b40ce4  ! 1665: FNOT2S	fandnot1s	%f4, %f18
	.word 0x9bb4c7c5  ! 1665: PDIST	pdistn	%d50, %d36, %d44
	.word 0x91b1c7d4  ! 1666: PDIST	pdistn	%d38, %d20, %d8
	.word 0xd107e040  ! 1667: LDF_I	ld	[%r31, 0x0040], %f8
	.word 0xa7a489c1  ! 1668: FDIVd	fdivd	%f18, %f32, %f50
	.word 0xa1b347c8  ! 1669: PDIST	pdistn	%d44, %d8, %d16
	.word 0xe107e140  ! 1669: LDF_I	ld	[%r31, 0x0140], %f16
	.word 0xa5b0c7c9  ! 1670: PDIST	pdistn	%d34, %d40, %d18
	.word 0x9d97c000  ! 1671: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b300ad  ! 1672: EDGE16N	edge16n	%r12, %r13, %r17
	.word 0x95b4c7cb  ! 1673: PDIST	pdistn	%d50, %d42, %d10
	.word 0xbfe7c000  ! 1673: SAVE_R	save	%r31, %r0, %r31
	.word 0x99b447cd  ! 1674: PDIST	pdistn	%d48, %d44, %d12
	.word 0x39400001  ! 1675: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xd81fe020  ! 1676: LDD_I	ldd	[%r31 + 0x0020], %r12
	.word 0xa9b087d4  ! 1677: PDIST	pdistn	%d2, %d20, %d20
	.word 0x24cfc001  ! 1677: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x93b440aa  ! 1678: EDGE16N	edge16n	%r17, %r10, %r9
	.word 0xd307e130  ! 1679: LDF_I	ld	[%r31, 0x0130], %f9
	.word 0xd21fe190  ! 1680: LDD_I	ldd	[%r31 + 0x0190], %r9
	.word 0xa7b280ab  ! 1681: EDGE16N	edge16n	%r10, %r11, %r19
	.word 0xe707e040  ! 1681: LDF_I	ld	[%r31, 0x0040], %f19
	.word 0xe61fe000  ! 1682: LDD_I	ldd	[%r31 + 0x0000], %r19
	.word 0x9d97c000  ! 1683: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x93b48ce5  ! 1684: FNOT2S	fandnot1s	%f5, %f9
	.word 0xd21fe0a0  ! 1685: LDD_I	ldd	[%r31 + 0x00a0], %r9
	.word 0xa3b10ce7  ! 1685: FNOT2S	fandnot1s	%f7, %f17
	.word 0x9ba509a9  ! 1686: FDIVs	fdivs	%f20, %f9, %f13
	.word 0xdb07e060  ! 1687: LDF_I	ld	[%r31, 0x0060], %f13
	.word 0x9bb4c7c3  ! 1688: PDIST	pdistn	%d50, %d34, %d44
	.word 0x97a509b0  ! 1689: FDIVs	fdivs	%f20, %f16, %f11
	.word 0xd707e0d0  ! 1689: LDF_I	ld	[%r31, 0x00d0], %f11
	.word 0x97b4cce5  ! 1690: FNOT2S	fandnot1s	%f5, %f11
	.word 0xd71fe1d0  ! 1691: LDDF_I	ldd	[%r31, 0x01d0], %f11
	.word 0x99b48712  ! 1692: FMULD8SUx16	fmuld8ulx16	%f18, %f18, %d12
	.word 0xa3b18cf2  ! 1693: FNOT2S	fandnot1s	%f18, %f17
	.word 0xe2dfc540  ! 1693: LDXA_R	ldxa	[%r31, %r0] 0x2a, %r17
	.word 0xe01fe170  ! 1694: LDD_I	ldd	[%r31 + 0x0170], %r16
	.word 0xe0dfc380  ! 1695: LDXA_R	ldxa	[%r31, %r0] 0x1c, %r16
	.word 0x93b2870c  ! 1696: FMULD8SUx16	fmuld8ulx16	%f10, %f12, %d40
	.word 0xd21fe0e0  ! 1697: LDD_I	ldd	[%r31 + 0x00e0], %r9
	.word 0xa7b40706  ! 1697: FMULD8SUx16	fmuld8ulx16	%f16, %f6, %d50
	.word 0x97b4c0a5  ! 1698: EDGE16N	edge16n	%r19, %r5, %r11
	.word 0xc3efe0d0  ! 1699: PREFETCHA_I	prefetcha	[%r31, + 0x00d0] %asi, #one_read
	.word 0x9bb300a1  ! 1700: EDGE16N	edge16n	%r12, %r1, %r13
	.word 0xa1b500a2  ! 1701: EDGE16N	edge16n	%r20, %r2, %r16
	.word 0xe13fe020  ! 1701: STDF_I	std	%f16, [0x0020, %r31]
	.word 0xa9a489cd  ! 1702: FDIVd	fdivd	%f18, %f44, %f20
	.word 0x9d97c000  ! 1703: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b400b3  ! 1704: EDGE16N	edge16n	%r16, %r19, %r19
	.word 0xa3a4c9d3  ! 1705: FDIVd	fdivd	%f50, %f50, %f48
	.word 0xbfefc000  ! 1705: RESTORE_R	restore	%r31, %r0, %r31
    nop
    nop
    mov 55, %g1
loopz_20_390:
    ldstub [%r31+0x1b0], %r2
    brnz,a %r1, loopz_20_390
    dec %r1
	.word 0xa1b1c0b1  ! 1706: EDGE16N	edge16n	%r7, %r17, %r16
	.word 0xe1e7e000  ! 1707: CASA_R	casa	[%r31] %asi, %r0, %r16
	.word 0x91b187d1  ! 1708: PDIST	pdistn	%d6, %d48, %d8
	.word 0xa5b440b3  ! 1709: EDGE16N	edge16n	%r17, %r19, %r18
	.word 0xe41fc000  ! 1709: LDD_R	ldd	[%r31 + %r0], %r18
	.word 0xa7a409b0  ! 1710: FDIVs	fdivs	%f16, %f16, %f19
	.word 0xe61fe130  ! 1711: LDD_I	ldd	[%r31 + 0x0130], %r19
	.word 0xa5b407d3  ! 1712: PDIST	pdistn	%d16, %d50, %d18
	.word 0x99a449a8  ! 1713: FDIVs	fdivs	%f17, %f8, %f12
	.word 0x93b147d2  ! 1713: PDIST	pdistn	%d36, %d18, %d40
	.word 0x9ba0c9b3  ! 1714: FDIVs	fdivs	%f3, %f19, %f13
	.word 0xbfefc000  ! 1715: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x97a409a4  ! 1716: FDIVs	fdivs	%f16, %f4, %f11
	.word 0xa3a4c9b4  ! 1717: FDIVs	fdivs	%f19, %f20, %f17
	.word 0xbfe7c000  ! 1717: SAVE_R	save	%r31, %r0, %r31
	.word 0xe21fe080  ! 1718: LDD_I	ldd	[%r31 + 0x0080], %r17
	.word 0x9f8021d0  ! 1719: SIR	sir	0x01d0
	.word 0xa7a349a9  ! 1720: FDIVs	fdivs	%f13, %f9, %f19
	.word 0xe61fe180  ! 1721: LDD_I	ldd	[%r31 + 0x0180], %r19
	.word 0x99a4c9a9  ! 1721: FDIVs	fdivs	%f19, %f9, %f12
	.word 0xa9b34ce5  ! 1722: FNOT2S	fandnot1s	%f5, %f20
	.word 0x20800001  ! 1723: BN	bn,a	<label_0x1>
	.word 0x93b1ccf0  ! 1724: FNOT2S	fandnot1s	%f16, %f9
	.word 0x9bb4cce2  ! 1725: FNOT2S	fandnot1s	%f2, %f13
	.word 0x9bb1cce8  ! 1725: FNOT2S	fandnot1s	%f8, %f13
	.word 0x95b4cced  ! 1726: FNOT2S	fandnot1s	%f13, %f10
	.word 0x95a7c9c0  ! 1727: FDIVd	fdivd	%f62, %f0, %f10
	.word 0x97b047cd  ! 1728: PDIST	pdistn	%d32, %d44, %d42
	.word 0xa1b4cce6  ! 1729: FNOT2S	fandnot1s	%f6, %f16
	.word 0xa5b407c5  ! 1729: PDIST	pdistn	%d16, %d36, %d18
	.word 0xa3b080b0  ! 1730: EDGE16N	edge16n	%r2, %r16, %r17
	.word 0xbfe7c000  ! 1731: SAVE_R	save	%r31, %r0, %r31
	.word 0xa3a309b4  ! 1732: FDIVs	fdivs	%f12, %f20, %f17
	.word 0x91b2c0b0  ! 1733: EDGE16N	edge16n	%r11, %r16, %r8
	.word 0xbfe7c000  ! 1733: SAVE_R	save	%r31, %r0, %r31
	sethi %hi(0x3cb80000), %r21
	stxa %r27, [%r21]0x57
    nop
    nop
    mov 31, %g1
loopb_20_396:
    ldstub [%r31+0x140], %r2
    brnz,a %r1, loopb_20_396
    dec %r1
	.word 0xd01fe010  ! 1734: LDD_I	ldd	[%r31 + 0x0010], %r8
	.word 0xc1bfc3e0  ! 1735: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xd01fe0c0  ! 1736: LDD_I	ldd	[%r31 + 0x00c0], %r8
	.word 0xd01fe070  ! 1737: LDD_I	ldd	[%r31 + 0x0070], %r8
	.word 0xd01fe0e0  ! 1737: LDD_I	ldd	[%r31 + 0x00e0], %r8
	.word 0x97a489a5  ! 1738: FDIVs	fdivs	%f18, %f5, %f11
	.word 0xd6dfd040  ! 1739: LDXA_R	ldxa	[%r31, %r0] 0x82, %r11
	.word 0xd61fe100  ! 1740: LDD_I	ldd	[%r31 + 0x0100], %r11
	.word 0xa9a4c9b2  ! 1741: FDIVs	fdivs	%f19, %f18, %f20
	.word 0xe8dfc2e0  ! 1741: LDXA_R	ldxa	[%r31, %r0] 0x17, %r20
	.word 0xe81fe010  ! 1742: LDD_I	ldd	[%r31 + 0x0010], %r20
	.word 0xc19fdf20  ! 1743: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x99a289aa  ! 1744: FDIVs	fdivs	%f10, %f10, %f12
	.word 0xd81fe0c0  ! 1745: LDD_I	ldd	[%r31 + 0x00c0], %r12
	.word 0xa7a449b0  ! 1745: FDIVs	fdivs	%f17, %f16, %f19
	.word 0xe81fe0e0  ! 1746: LDD_I	ldd	[%r31 + 0x00e0], %r20
	.word 0x9d97c000  ! 1747: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b507c7  ! 1748: PDIST	pdistn	%d20, %d38, %d48
	.word 0xe21fe0b0  ! 1749: LDD_I	ldd	[%r31 + 0x00b0], %r17
	.word 0x97b447d1  ! 1749: PDIST	pdistn	%d48, %d48, %d42
	.word 0xa5b407c2  ! 1750: PDIST	pdistn	%d16, %d2, %d18
	.word 0xe497c200  ! 1751: LDUHA_R	lduha	[%r31, %r0] 0x10, %r18
	.word 0x99b20710  ! 1752: FMULD8SUx16	fmuld8ulx16	%f8, %f16, %d12
	.word 0xa1b487c4  ! 1753: PDIST	pdistn	%d18, %d4, %d16
	.word 0xa7b20714  ! 1753: FMULD8SUx16	fmuld8ulx16	%f8, %f20, %d50
    nop
    nop
    mov 55, %g1
loopb_20_400:
    ldstub [%r31+0x100], %r2
    brnz,a %r1, loopb_20_400
    dec %r1
	.word 0xa7a049a7  ! 1754: FDIVs	fdivs	%f1, %f7, %f19
	.word 0xe1bfdc00  ! 1755: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x93b200b1  ! 1756: EDGE16N	edge16n	%r8, %r17, %r9
	.word 0xa7a2c9b4  ! 1757: FDIVs	fdivs	%f11, %f20, %f19
	.word 0xa5b440ad  ! 1757: EDGE16N	edge16n	%r17, %r13, %r18
	.word 0xa5a409ab  ! 1758: FDIVs	fdivs	%f16, %f11, %f18
	.word 0xa1b7c7c0  ! 1759: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa3a409a5  ! 1760: FDIVs	fdivs	%f16, %f5, %f17
	.word 0xa9a149b3  ! 1761: FDIVs	fdivs	%f5, %f19, %f20
	.word 0xa1a509b1  ! 1761: FDIVs	fdivs	%f20, %f17, %f16
    nop
    nop
    mov 31, %g1
loopz_20_402:
    ldstub [%r31+0x1e0], %r2
    brnz,a %r1, loopz_20_402
    dec %r1
	.word 0x93b48cf0  ! 1762: FNOT2S	fandnot1s	%f16, %f9
	.word 0xd21fe190  ! 1763: LDD_I	ldd	[%r31 + 0x0190], %r9
	.word 0x97b44cf1  ! 1764: FNOT2S	fandnot1s	%f17, %f11
	.word 0xa9b4ccf0  ! 1765: FNOT2S	fandnot1s	%f16, %f20
	.word 0xe81fc000  ! 1765: LDD_R	ldd	[%r31 + %r0], %r20
	.word 0xc0bfc3e0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x1f
	.word 0xe09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r16
	.word 0xe09fdf20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf9, %r16
	.word 0xc09fda60  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd3, %r0
	.word 0xe0bfde00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf0
	.word 0xc1bfdb20  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
    nop
    nop
    mov 39, %g1
loopb_20_404:
    ldstub [%r31+0x120], %r2
    brnz,a %r1, loopb_20_404
    dec %r1
	.word 0x93b34cf1  ! 1766: FNOT2S	fandnot1s	%f17, %f9
	.word 0xc1bfde00  ! 1767: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa5b28705  ! 1768: FMULD8SUx16	fmuld8ulx16	%f10, %f5, %d18
	.word 0xa7b04cf0  ! 1769: FNOT2S	fandnot1s	%f16, %f19
	.word 0xa5b4c710  ! 1769: FMULD8SUx16	fmuld8ulx16	%f19, %f16, %d18
	.word 0x91b140a3  ! 1770: EDGE16N	edge16n	%r5, %r3, %r8
	.word 0xd01fe000  ! 1771: LDD_I	ldd	[%r31 + 0x0000], %r8
	.word 0x93b500b1  ! 1772: EDGE16N	edge16n	%r20, %r17, %r9
	.word 0x91b080a8  ! 1773: EDGE16N	edge16n	%r2, %r8, %r8
	.word 0xd01fe160  ! 1773: LDD_I	ldd	[%r31 + 0x0160], %r8
	.word 0xa5b1c7d2  ! 1774: PDIST	pdistn	%d38, %d18, %d18
	.word 0xbfefc000  ! 1775: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xe41fe0b0  ! 1776: LDD_I	ldd	[%r31 + 0x00b0], %r18
	.word 0x91b487d2  ! 1777: PDIST	pdistn	%d18, %d18, %d8
	.word 0xd01fe1a0  ! 1777: LDD_I	ldd	[%r31 + 0x01a0], %r8
    nop
    nop
    mov 27, %g1
loopz_20_408:
    ldstub [%r31+0x150], %r2
    brnz,a %r1, loopz_20_408
    dec %r1
	.word 0xa9a049b3  ! 1778: FDIVs	fdivs	%f1, %f19, %f20
	.word 0xc32fe100  ! 1779: STXFSR_I	st-sfr	%f1, [0x0100, %r31]
	.word 0xa1a489c6  ! 1780: FDIVd	fdivd	%f18, %f6, %f16
	.word 0xa9a489b1  ! 1781: FDIVs	fdivs	%f18, %f17, %f20
	.word 0xe81fc000  ! 1781: LDD_R	ldd	[%r31 + %r0], %r20
    nop
    nop
    mov 19, %g1
loopz_20_410:
    ldstub [%r31+0xe0], %r2
    brnz,a %r1, loopz_20_410
    dec %r1
	.word 0xa3a1c9b2  ! 1782: FDIVs	fdivs	%f7, %f18, %f17
	.word 0xc32fe170  ! 1783: STXFSR_I	st-sfr	%f1, [0x0170, %r31]
	.word 0xe21fe0f0  ! 1784: LDD_I	ldd	[%r31 + 0x00f0], %r17
	.word 0xa7a449a8  ! 1785: FDIVs	fdivs	%f17, %f8, %f19
	.word 0xe61fe0b0  ! 1785: LDD_I	ldd	[%r31 + 0x00b0], %r19
    nop
    nop
    mov 7, %g1
loopb_20_412:
    ldstub [%r31+0x170], %r2
    brnz,a %r1, loopb_20_412
    dec %r1
	.word 0x97a449a2  ! 1786: FDIVs	fdivs	%f17, %f2, %f11
	.word 0xe1bfde20  ! 1787: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x99b30710  ! 1788: FMULD8SUx16	fmuld8ulx16	%f12, %f16, %d12
	.word 0x99a4c9a1  ! 1789: FDIVs	fdivs	%f19, %f1, %f12
	.word 0xa9b1c714  ! 1789: FMULD8SUx16	fmuld8ulx16	%f7, %f20, %d20
	.word 0x97b347d3  ! 1790: PDIST	pdistn	%d44, %d50, %d42
	.word 0x00800001  ! 1791: BN	bn  	<label_0x1>
	.word 0xa9b0c0a2  ! 1792: EDGE16N	edge16n	%r3, %r2, %r20
	.word 0xa7b2c7d4  ! 1793: PDIST	pdistn	%d42, %d20, %d50
	.word 0x81b7c7c0  ! 1793: PDIST	pdistn	%d62, %d0, %d0
    nop
    nop
    mov 63, %g1
loopz_20_415:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopz_20_415
    dec %r1
	.word 0x99b1cce1  ! 1794: FNOT2S	fandnot1s	%f1, %f12
	.word 0xc32fe050  ! 1795: STXFSR_I	st-sfr	%f1, [0x0050, %r31]
	.word 0xa7b1c0b0  ! 1796: EDGE16N	edge16n	%r7, %r16, %r19
	.word 0x95b1cce8  ! 1797: FNOT2S	fandnot1s	%f8, %f10
	.word 0xd51fe060  ! 1797: LDDF_I	ldd	[%r31, 0x0060], %f10
	.word 0xd41fe000  ! 1798: LDD_I	ldd	[%r31 + 0x0000], %r10
	.word 0x9d97c000  ! 1799: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3a509ab  ! 1800: FDIVs	fdivs	%f20, %f11, %f17
	.word 0xe21fe1e0  ! 1801: LDD_I	ldd	[%r31 + 0x01e0], %r17
	.word 0x91a109a6  ! 1801: FDIVs	fdivs	%f4, %f6, %f8
	.word 0xd01fe1f0  ! 1802: LDD_I	ldd	[%r31 + 0x01f0], %r8
	.word 0x9d97c000  ! 1803: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9bb44714  ! 1804: FMULD8SUx16	fmuld8ulx16	%f17, %f20, %d44
	.word 0xda1fe050  ! 1805: LDD_I	ldd	[%r31 + 0x0050], %r13
	.word 0x91b48706  ! 1805: FMULD8SUx16	fmuld8ulx16	%f18, %f6, %d8
	.word 0x93a249c9  ! 1806: FDIVd	fdivd	%f40, %f40, %f40
	.word 0xd3e7c380  ! 1807: CASA_I	casa	[%r31] 0x1c, %r0, %r9
	.word 0xa3a509d1  ! 1808: FDIVd	fdivd	%f20, %f48, %f48
	.word 0x9ba409c8  ! 1809: FDIVd	fdivd	%f16, %f8, %f44
	.word 0x9bb7c4c0  ! 1809: FCMPNE32	fcmpne32	%d62, %d0, %r13
	.word 0xda1fe030  ! 1810: LDD_I	ldd	[%r31 + 0x0030], %r13
	.word 0xdb1fe090  ! 1811: LDDF_I	ldd	[%r31, 0x0090], %f13
	.word 0x95a4c9a6  ! 1812: FDIVs	fdivs	%f19, %f6, %f10
	.word 0xd41fe060  ! 1813: LDD_I	ldd	[%r31 + 0x0060], %r10
	.word 0xa7a489b4  ! 1813: FDIVs	fdivs	%f18, %f20, %f19
	.word 0xa5a149d2  ! 1814: FDIVd	fdivd	%f36, %f18, %f18
	.word 0xe507e130  ! 1815: LDF_I	ld	[%r31, 0x0130], %f18
	.word 0xe41fe0d0  ! 1816: LDD_I	ldd	[%r31 + 0x00d0], %r18
	.word 0x97a149cc  ! 1817: FDIVd	fdivd	%f36, %f12, %f42
	.word 0xd61fe070  ! 1817: LDD_I	ldd	[%r31 + 0x0070], %r11
	.word 0xa7b48703  ! 1818: FMULD8SUx16	fmuld8ulx16	%f18, %f3, %d50
	.word 0xa7b7c4c0  ! 1819: FCMPNE32	fcmpne32	%d62, %d0, %r19
	.word 0xa9b4c0a9  ! 1820: EDGE16N	edge16n	%r19, %r9, %r20
	.word 0xa1b1c711  ! 1821: FMULD8SUx16	fmuld8ulx16	%f7, %f17, %d16
	.word 0xc36fe100  ! 1821: PREFETCH_I	prefetch	[%r31 + 0x0100], #one_read
	.word 0xa3b480b4  ! 1822: EDGE16N	edge16n	%r18, %r20, %r17
	.word 0xe3e7d040  ! 1823: CASA_I	casa	[%r31] 0x82, %r0, %r17
	.word 0xe21fe1a0  ! 1824: LDD_I	ldd	[%r31 + 0x01a0], %r17
	.word 0xa5b080b0  ! 1825: EDGE16N	edge16n	%r2, %r16, %r18
	.word 0xa5a7c9c0  ! 1825: FDIVd	fdivd	%f62, %f0, %f18
	.word 0xa3b20cf1  ! 1826: FNOT2S	fandnot1s	%f17, %f17
	.word 0xe307e070  ! 1827: LDF_I	ld	[%r31, 0x0070], %f17
	.word 0xa7b28711  ! 1828: FMULD8SUx16	fmuld8ulx16	%f10, %f17, %d50
	.word 0xa7b2cce1  ! 1829: FNOT2S	fandnot1s	%f1, %f19
	.word 0xe707e0f0  ! 1829: LDF_I	ld	[%r31, 0x00f0], %f19
	.word 0x97a4c9d2  ! 1830: FDIVd	fdivd	%f50, %f18, %f42
	.word 0xbfefc000  ! 1831: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9bb440b4  ! 1832: EDGE16N	edge16n	%r17, %r20, %r13
	.word 0x91a449c8  ! 1833: FDIVd	fdivd	%f48, %f8, %f8
	.word 0xa7b140aa  ! 1833: EDGE16N	edge16n	%r5, %r10, %r19
	.word 0xa7b407d1  ! 1834: PDIST	pdistn	%d16, %d48, %d50
	.word 0xa7a7c9c0  ! 1835: FDIVd	fdivd	%f62, %f0, %f50
	.word 0x9bb400a9  ! 1836: EDGE16N	edge16n	%r16, %r9, %r13
	.word 0x9bb447c1  ! 1837: PDIST	pdistn	%d48, %d32, %d44
	.word 0x9ba7c9c0  ! 1837: FDIVd	fdivd	%f62, %f0, %f44
	.word 0x9bb28ce8  ! 1838: FNOT2S	fandnot1s	%f8, %f13
	.word 0xc19fdf20  ! 1839: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa3b50ce2  ! 1840: FNOT2S	fandnot1s	%f2, %f17
	.word 0xa7b40cf2  ! 1841: FNOT2S	fandnot1s	%f18, %f19
	.word 0x20800001  ! 1841: BN	bn,a	<label_0x1>
	.word 0xa7b4c712  ! 1842: FMULD8SUx16	fmuld8ulx16	%f19, %f18, %d50
	.word 0xe707e060  ! 1843: LDF_I	ld	[%r31, 0x0060], %f19
	.word 0xa5b40cec  ! 1844: FNOT2S	fandnot1s	%f12, %f18
	.word 0x99b04712  ! 1845: FMULD8SUx16	fmuld8ulx16	%f1, %f18, %d12
	.word 0xd907e0d0  ! 1845: LDF_I	ld	[%r31, 0x00d0], %f12
	.word 0xd81fe160  ! 1846: LDD_I	ldd	[%r31 + 0x0160], %r12
	.word 0xd9e7c200  ! 1847: CASA_I	casa	[%r31] 0x10, %r0, %r12
	.word 0xa9a449ca  ! 1848: FDIVd	fdivd	%f48, %f10, %f20
	.word 0xe81fe130  ! 1849: LDD_I	ldd	[%r31 + 0x0130], %r20
	.word 0xe83fe1f0  ! 1849: STD_I	std	%r20, [%r31 + 0x01f0]
	.word 0xe81fe130  ! 1850: LDD_I	ldd	[%r31 + 0x0130], %r20
	.word 0xc19fdb40  ! 1851: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa9b20cf3  ! 1852: FNOT2S	fandnot1s	%f19, %f20
	.word 0xe81fe140  ! 1853: LDD_I	ldd	[%r31 + 0x0140], %r20
	.word 0x20800001  ! 1853: BN	bn,a	<label_0x1>
	.word 0x97b0c709  ! 1854: FMULD8SUx16	fmuld8ulx16	%f3, %f9, %d42
	.word 0xd73fe1d0  ! 1855: STDF_I	std	%f11, [0x01d0, %r31]
	.word 0xd61fe070  ! 1856: LDD_I	ldd	[%r31 + 0x0070], %r11
	.word 0x97b04710  ! 1857: FMULD8SUx16	fmuld8ulx16	%f1, %f16, %d42
	.word 0xd69fc2c0  ! 1857: LDDA_R	ldda	[%r31, %r0] 0x16, %r11
    nop
    nop
    mov 43, %g1
loopz_20_431:
    ldstub [%r31+0], %r2
    brnz,a %r1, loopz_20_431
    dec %r1
	.word 0x97a4c9a6  ! 1858: FDIVs	fdivs	%f19, %f6, %f11
	.word 0xc32fe150  ! 1859: STXFSR_I	st-sfr	%f1, [0x0150, %r31]
	.word 0xa5b240ac  ! 1860: EDGE16N	edge16n	%r9, %r12, %r18
	.word 0xa5a349b3  ! 1861: FDIVs	fdivs	%f13, %f19, %f18
	.word 0xe51fe120  ! 1861: LDDF_I	ldd	[%r31, 0x0120], %f18
    nop
    nop
    mov 47, %g1
loopb_20_433:
    ldstub [%r31+0x150], %r2
    brnz,a %r1, loopb_20_433
    dec %r1
	.word 0xa5a4c9c9  ! 1862: FDIVd	fdivd	%f50, %f40, %f18
	.word 0xc19fdc00  ! 1863: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x91a509d1  ! 1864: FDIVd	fdivd	%f20, %f48, %f8
	.word 0x9ba309d4  ! 1865: FDIVd	fdivd	%f12, %f20, %f44
	.word 0x91a049d3  ! 1865: FDIVd	fdivd	%f32, %f50, %f8
	.word 0x91b34708  ! 1866: FMULD8SUx16	fmuld8ulx16	%f13, %f8, %d8
	.word 0x91b7c4c0  ! 1867: FCMPNE32	fcmpne32	%d62, %d0, %r8
	.word 0xa3b4c701  ! 1868: FMULD8SUx16	fmuld8ulx16	%f19, %f1, %d48
	.word 0x91b4470a  ! 1869: FMULD8SUx16	fmuld8ulx16	%f17, %f10, %d8
	.word 0x91b4c70a  ! 1869: FMULD8SUx16	fmuld8ulx16	%f19, %f10, %d8
	.word 0xa3b34713  ! 1870: FMULD8SUx16	fmuld8ulx16	%f13, %f19, %d48
	.word 0x81b7c7c0  ! 1871: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa3a409b2  ! 1872: FDIVs	fdivs	%f16, %f18, %f17
	.word 0xa7b4c710  ! 1873: FMULD8SUx16	fmuld8ulx16	%f19, %f16, %d50
	.word 0xa7a4c9b3  ! 1873: FDIVs	fdivs	%f19, %f19, %f19
	.word 0x99b440a5  ! 1874: EDGE16N	edge16n	%r17, %r5, %r12
	.word 0xd907e190  ! 1875: LDF_I	ld	[%r31, 0x0190], %f12
	.word 0xa3b4c70c  ! 1876: FMULD8SUx16	fmuld8ulx16	%f19, %f12, %d48
	.word 0x9bb100a2  ! 1877: EDGE16N	edge16n	%r4, %r2, %r13
	.word 0xdb07e020  ! 1877: LDF_I	ld	[%r31, 0x0020], %f13
	.word 0x93b180b2  ! 1878: EDGE16N	edge16n	%r6, %r18, %r9
	.word 0xd307e190  ! 1879: LDF_I	ld	[%r31, 0x0190], %f9
	.word 0xa7b300ad  ! 1880: EDGE16N	edge16n	%r12, %r13, %r19
	.word 0x99b180b2  ! 1881: EDGE16N	edge16n	%r6, %r18, %r12
	.word 0x95b100b4  ! 1881: EDGE16N	edge16n	%r4, %r20, %r10
	.word 0xc19fdc40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe0bfde00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf0
	.word 0xe0bfdf20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf9
	.word 0xe0bfdb20  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xd9
	.word 0xc0bfda00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xd0
	.word 0xc09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
	.word 0xc09fc2c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x16, %r0
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc0bfdb40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xda
	.word 0xa1b480a3  ! 1882: EDGE16N	edge16n	%r18, %r3, %r16
	.word 0x9d97c000  ! 1883: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9bb500aa  ! 1884: EDGE16N	edge16n	%r20, %r10, %r13
	.word 0xa7b180b1  ! 1885: EDGE16N	edge16n	%r6, %r17, %r19
	.word 0x91b0c0a1  ! 1885: EDGE16N	edge16n	%r3, %r1, %r8
    nop
    nop
    mov 63, %g1
loopb_20_440:
    ldstub [%r31+0x90], %r2
    brnz,a %r1, loopb_20_440
    dec %r1
	.word 0x95a409d3  ! 1886: FDIVd	fdivd	%f16, %f50, %f10
	.word 0xc1bfde20  ! 1887: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91b20707  ! 1888: FMULD8SUx16	fmuld8ulx16	%f8, %f7, %d8
	.word 0x91a309c7  ! 1889: FDIVd	fdivd	%f12, %f38, %f8
	.word 0xa9b04712  ! 1889: FMULD8SUx16	fmuld8ulx16	%f1, %f18, %d20
	.word 0xa7b50713  ! 1890: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d50
	.word 0x81b7c7c0  ! 1891: PDIST	pdistn	%d62, %d0, %d0
	.word 0x99b140b3  ! 1892: EDGE16N	edge16n	%r5, %r19, %r12
	.word 0x9bb34714  ! 1893: FMULD8SUx16	fmuld8ulx16	%f13, %f20, %d44
	.word 0x9bb400b3  ! 1893: EDGE16N	edge16n	%r16, %r19, %r13
	.word 0x91a4c9ad  ! 1894: FDIVs	fdivs	%f19, %f13, %f8
	.word 0xd097c720  ! 1895: LDUHA_R	lduha	[%r31, %r0] 0x39, %r8
	.word 0xd01fe180  ! 1896: LDD_I	ldd	[%r31 + 0x0180], %r8
	.word 0x93a489b2  ! 1897: FDIVs	fdivs	%f18, %f18, %f9
	.word 0xd33fe040  ! 1897: STDF_I	std	%f9, [0x0040, %r31]
	.word 0xa1a0c9b3  ! 1898: FDIVs	fdivs	%f3, %f19, %f16
	.word 0xe01fe020  ! 1899: LDD_I	ldd	[%r31 + 0x0020], %r16
	.word 0xa7b447c9  ! 1900: PDIST	pdistn	%d48, %d40, %d50
	.word 0x91a1c9a9  ! 1901: FDIVs	fdivs	%f7, %f9, %f8
	.word 0xa7b1c7c6  ! 1901: PDIST	pdistn	%d38, %d6, %d50
	.word 0xe61fe170  ! 1902: LDD_I	ldd	[%r31 + 0x0170], %r19
	.word 0xbfe7c000  ! 1903: SAVE_R	save	%r31, %r0, %r31
	.word 0xe61fe0a0  ! 1904: LDD_I	ldd	[%r31 + 0x00a0], %r19
	.word 0xe61fe1e0  ! 1905: LDD_I	ldd	[%r31 + 0x01e0], %r19
	.word 0xe61fe090  ! 1905: LDD_I	ldd	[%r31 + 0x0090], %r19
	.word 0x9bb14709  ! 1906: FMULD8SUx16	fmuld8ulx16	%f5, %f9, %d44
	.word 0xda97c720  ! 1907: LDUHA_R	lduha	[%r31, %r0] 0x39, %r13
	.word 0xa3b24713  ! 1908: FMULD8SUx16	fmuld8ulx16	%f9, %f19, %d48
	.word 0x99b2870c  ! 1909: FMULD8SUx16	fmuld8ulx16	%f10, %f12, %d12
	.word 0xd89fd040  ! 1909: LDDA_R	ldda	[%r31, %r0] 0x82, %r12
    nop
    nop
    mov 27, %g1
loopz_20_445:
    ldstub [%r31+0x190], %r2
    brnz,a %r1, loopz_20_445
    dec %r1
	.word 0x97b44710  ! 1910: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d42
	.word 0xd61fe130  ! 1911: LDD_I	ldd	[%r31 + 0x0130], %r11
	.word 0x9bb18cf2  ! 1912: FNOT2S	fandnot1s	%f18, %f13
	.word 0xa3b14710  ! 1913: FMULD8SUx16	fmuld8ulx16	%f5, %f16, %d48
	.word 0xa1b44ce9  ! 1913: FNOT2S	fandnot1s	%f9, %f16
    nop
    nop
    mov 63, %g1
loopz_20_447:
    ldstub [%r31+0x160], %r2
    brnz,a %r1, loopz_20_447
    dec %r1
	.word 0xa5b40714  ! 1914: FMULD8SUx16	fmuld8ulx16	%f16, %f20, %d18
	.word 0xe51fe1d0  ! 1915: LDDF_I	ldd	[%r31, 0x01d0], %f18
	.word 0xe41fe150  ! 1916: LDD_I	ldd	[%r31 + 0x0150], %r18
	.word 0x9bb40702  ! 1917: FMULD8SUx16	fmuld8ulx16	%f16, %f2, %d44
	.word 0xdb1fe160  ! 1917: LDDF_I	ldd	[%r31, 0x0160], %f13
	.word 0xa5a289b1  ! 1918: FDIVs	fdivs	%f10, %f17, %f18
	.word 0xbfefc000  ! 1919: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xe41fe1d0  ! 1920: LDD_I	ldd	[%r31 + 0x01d0], %r18
	.word 0xa7a4c9a7  ! 1921: FDIVs	fdivs	%f19, %f7, %f19
	.word 0xe61fe0d0  ! 1921: LDD_I	ldd	[%r31 + 0x00d0], %r19
	.word 0xa9b280ad  ! 1922: EDGE16N	edge16n	%r10, %r13, %r20
	.word 0x9d97c000  ! 1923: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa5b0c713  ! 1924: FMULD8SUx16	fmuld8ulx16	%f3, %f19, %d18
	.word 0xa5b280b2  ! 1925: EDGE16N	edge16n	%r10, %r18, %r18
	.word 0x9d97c000  ! 1925: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa9b50cf4  ! 1926: FNOT2S	fandnot1s	%f20, %f20
	.word 0xbfefc000  ! 1927: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa1b50710  ! 1928: FMULD8SUx16	fmuld8ulx16	%f20, %f16, %d16
	.word 0x91b4ccf3  ! 1929: FNOT2S	fandnot1s	%f19, %f8
	.word 0x95b5070b  ! 1929: FMULD8SUx16	fmuld8ulx16	%f20, %f11, %d10
	.word 0x99a0c9cd  ! 1930: FDIVd	fdivd	%f34, %f44, %f12
	.word 0xd907e0e0  ! 1931: LDF_I	ld	[%r31, 0x00e0], %f12
	.word 0xd81fe060  ! 1932: LDD_I	ldd	[%r31 + 0x0060], %r12
	.word 0xa3a049d2  ! 1933: FDIVd	fdivd	%f32, %f18, %f48
	.word 0xe21fe0f0  ! 1933: LDD_I	ldd	[%r31 + 0x00f0], %r17
	.word 0x97b30ce4  ! 1934: FNOT2S	fandnot1s	%f4, %f11
	.word 0xd63fe070  ! 1935: STD_I	std	%r11, [%r31 + 0x0070]
	.word 0xd61fe110  ! 1936: LDD_I	ldd	[%r31 + 0x0110], %r11
	.word 0xa3b28ce6  ! 1937: FNOT2S	fandnot1s	%f6, %f17
	.word 0xe21fe0c0  ! 1937: LDD_I	ldd	[%r31 + 0x00c0], %r17
	.word 0x95b147d0  ! 1938: PDIST	pdistn	%d36, %d16, %d10
	.word 0x20800001  ! 1939: BN	bn,a	<label_0x1>
	.word 0xa3a089d0  ! 1940: FDIVd	fdivd	%f2, %f16, %f48
	.word 0xa3b447d3  ! 1941: PDIST	pdistn	%d48, %d50, %d48
	.word 0xa5a089d4  ! 1941: FDIVd	fdivd	%f2, %f20, %f18
	.word 0xa9a049b2  ! 1942: FDIVs	fdivs	%f1, %f18, %f20
	.word 0xe897dc40  ! 1943: LDUHA_R	lduha	[%r31, %r0] 0xe2, %r20
	.word 0x93b44707  ! 1944: FMULD8SUx16	fmuld8ulx16	%f17, %f7, %d40
	.word 0x99a409ad  ! 1945: FDIVs	fdivs	%f16, %f13, %f12
	.word 0xa3b40711  ! 1945: FMULD8SUx16	fmuld8ulx16	%f16, %f17, %d48
	.word 0xa5b407c3  ! 1946: PDIST	pdistn	%d16, %d34, %d18
	.word 0xc36fe070  ! 1947: PREFETCH_I	prefetch	[%r31 + 0x0070], #one_read
	.word 0xa1a349c8  ! 1948: FDIVd	fdivd	%f44, %f8, %f16
	.word 0x91b447d1  ! 1949: PDIST	pdistn	%d48, %d48, %d8
	.word 0x91b7c4c0  ! 1949: FCMPNE32	fcmpne32	%d62, %d0, %r8
	.word 0x95b08cf1  ! 1950: FNOT2S	fandnot1s	%f17, %f10
	.word 0xbfefc000  ! 1951: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95b300b1  ! 1952: EDGE16N	edge16n	%r12, %r17, %r10
	.word 0x91b08cf4  ! 1953: FNOT2S	fandnot1s	%f20, %f8
	.word 0xa5b480b0  ! 1953: EDGE16N	edge16n	%r18, %r16, %r18
	.word 0xa3b207c9  ! 1954: PDIST	pdistn	%d8, %d40, %d48
	.word 0xc19fdd40  ! 1955: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa3b447c3  ! 1956: PDIST	pdistn	%d48, %d34, %d48
	.word 0x93b447d4  ! 1957: PDIST	pdistn	%d48, %d20, %d40
	.word 0xe1bfda00  ! 1957: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa5a249d3  ! 1958: FDIVd	fdivd	%f40, %f50, %f18
	.word 0x87afca40  ! 1959: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa9a249d3  ! 1960: FDIVd	fdivd	%f40, %f50, %f20
	.word 0x9ba489ca  ! 1961: FDIVd	fdivd	%f18, %f10, %f44
	.word 0x97a409d2  ! 1961: FDIVd	fdivd	%f16, %f18, %f42
	.word 0xa9b14cf2  ! 1962: FNOT2S	fandnot1s	%f18, %f20
	.word 0x20800001  ! 1963: BN	bn,a	<label_0x1>
	.word 0xa1b0c0b1  ! 1964: EDGE16N	edge16n	%r3, %r17, %r16
	.word 0x97b4cce7  ! 1965: FNOT2S	fandnot1s	%f7, %f11
	.word 0xe19fdb20  ! 1965: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa1b18cf1  ! 1966: FNOT2S	fandnot1s	%f17, %f16
	.word 0x00800001  ! 1967: BN	bn  	<label_0x1>
	.word 0x93a4c9cd  ! 1968: FDIVd	fdivd	%f50, %f44, %f40
	.word 0x95b30cf4  ! 1969: FNOT2S	fandnot1s	%f20, %f10
	.word 0x00800001  ! 1969: BN	bn  	<label_0x1>
	.word 0xa1b4c704  ! 1970: FMULD8SUx16	fmuld8ulx16	%f19, %f4, %d16
	.word 0xe107e1c0  ! 1971: LDF_I	ld	[%r31, 0x01c0], %f16
	.word 0xa1b50cf3  ! 1972: FNOT2S	fandnot1s	%f19, %f16
	.word 0x93b5070d  ! 1973: FMULD8SUx16	fmuld8ulx16	%f20, %f13, %d40
	.word 0xd307e0f0  ! 1973: LDF_I	ld	[%r31, 0x00f0], %f9
	.word 0x91b18ce9  ! 1974: FNOT2S	fandnot1s	%f9, %f8
	.word 0x91b7c4c0  ! 1975: FCMPNE32	fcmpne32	%d62, %d0, %r8
	.word 0xa7a489c4  ! 1976: FDIVd	fdivd	%f18, %f4, %f50
	.word 0x9bb08cf3  ! 1977: FNOT2S	fandnot1s	%f19, %f13
	.word 0xc36fe180  ! 1977: PREFETCH_I	prefetch	[%r31 + 0x0180], #one_read
	.word 0xa3b080b0  ! 1978: EDGE16N	edge16n	%r2, %r16, %r17
	.word 0xe3e7c2e0  ! 1979: CASA_I	casa	[%r31] 0x17, %r0, %r17
	.word 0x91a189ad  ! 1980: FDIVs	fdivs	%f6, %f13, %f8
	.word 0x99b1c0b4  ! 1981: EDGE16N	edge16n	%r7, %r20, %r12
	.word 0xa1a349b4  ! 1981: FDIVs	fdivs	%f13, %f20, %f16
	.word 0x95a409d3  ! 1982: FDIVd	fdivd	%f16, %f50, %f10
	.word 0xd507e160  ! 1983: LDF_I	ld	[%r31, 0x0160], %f10
	.word 0xa3b287c8  ! 1984: PDIST	pdistn	%d10, %d8, %d48
	.word 0x93a4c9d4  ! 1985: FDIVd	fdivd	%f50, %f20, %f40
	.word 0xa1b187cd  ! 1985: PDIST	pdistn	%d6, %d44, %d16
	.word 0xa9b48713  ! 1986: FMULD8SUx16	fmuld8ulx16	%f18, %f19, %d20
	.word 0xe83fe110  ! 1987: STD_I	std	%r20, [%r31 + 0x0110]
	.word 0x9bb20cf4  ! 1988: FNOT2S	fandnot1s	%f20, %f13
	.word 0x91b28714  ! 1989: FMULD8SUx16	fmuld8ulx16	%f10, %f20, %d8
	.word 0xc32fe1b0  ! 1989: STXFSR_I	st-sfr	%f1, [0x01b0, %r31]
	.word 0x99b44711  ! 1990: FMULD8SUx16	fmuld8ulx16	%f17, %f17, %d12
	.word 0xd9e7d060  ! 1991: CASA_I	casa	[%r31] 0x83, %r0, %r12
	.word 0xa9b4c0a1  ! 1992: EDGE16N	edge16n	%r19, %r1, %r20
	.word 0xa5b4c705  ! 1993: FMULD8SUx16	fmuld8ulx16	%f19, %f5, %d18
	.word 0xa5a7c9c0  ! 1993: FDIVd	fdivd	%f62, %f0, %f18
	.word 0x99a1c9d4  ! 1994: FDIVd	fdivd	%f38, %f20, %f12
	.word 0xbfefc000  ! 1995: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa5b2cce5  ! 1996: FNOT2S	fandnot1s	%f5, %f18
	.word 0xa3a489d3  ! 1997: FDIVd	fdivd	%f18, %f50, %f48
	.word 0xa7b20cf3  ! 1997: FNOT2S	fandnot1s	%f19, %f19
	.word 0x95a409c3  ! 1998: FDIVd	fdivd	%f16, %f34, %f10
	.word 0x20800001  ! 1999: BN	bn,a	<label_0x1>
	.word 0x91a489b3  ! 2000: FDIVs	fdivs	%f18, %f19, %f8
	.word 0xa3a109cd  ! 2001: FDIVd	fdivd	%f4, %f44, %f48
	.word 0xc1bfda60  ! 2001: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91b100b2  ! 2002: EDGE16N	edge16n	%r4, %r18, %r8
	.word 0xd11fe190  ! 2003: LDDF_I	ldd	[%r31, 0x0190], %f8
	.word 0xd01fe0c0  ! 2004: LDD_I	ldd	[%r31 + 0x00c0], %r8
	.word 0xa7b240b1  ! 2005: EDGE16N	edge16n	%r9, %r17, %r19
	.word 0xe61fe1b0  ! 2005: LDD_I	ldd	[%r31 + 0x01b0], %r19
	.word 0x9ba449d0  ! 2006: FDIVd	fdivd	%f48, %f16, %f44
	.word 0x81b7c7c0  ! 2007: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa5b447c2  ! 2008: PDIST	pdistn	%d48, %d2, %d18
	.word 0xa1a4c9cc  ! 2009: FDIVd	fdivd	%f50, %f12, %f16
	.word 0x20800001  ! 2009: BN	bn,a	<label_0x1>
	.word 0x93b280a1  ! 2010: EDGE16N	edge16n	%r10, %r1, %r9
	.word 0xd297d060  ! 2011: LDUHA_R	lduha	[%r31, %r0] 0x83, %r9
	.word 0xd21fe010  ! 2012: LDD_I	ldd	[%r31 + 0x0010], %r9
	.word 0x95b080a8  ! 2013: EDGE16N	edge16n	%r2, %r8, %r10
	.word 0xd41fe0a0  ! 2013: LDD_I	ldd	[%r31 + 0x00a0], %r10
	.word 0x93b44ce1  ! 2014: FNOT2S	fandnot1s	%f1, %f9
	.word 0xa1b7c7c0  ! 2015: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa7b487d4  ! 2016: PDIST	pdistn	%d18, %d20, %d50
	.word 0xa1b34cf3  ! 2017: FNOT2S	fandnot1s	%f19, %f16
	.word 0xc1bfdb40  ! 2017: STDFA_R	stda	%f0, [%r0, %r31]
    nop
    nop
    mov 27, %g1
loopz_20_461:
    ldstub [%r31+0x90], %r2
    brnz,a %r1, loopz_20_461
    dec %r1
	.word 0xa9a309b1  ! 2018: FDIVs	fdivs	%f12, %f17, %f20
	.word 0xe81fe130  ! 2019: LDD_I	ldd	[%r31 + 0x0130], %r20
	.word 0xa9b40cec  ! 2020: FNOT2S	fandnot1s	%f12, %f20
	.word 0x97a4c9b3  ! 2021: FDIVs	fdivs	%f19, %f19, %f11
	.word 0x91b4ccf2  ! 2021: FNOT2S	fandnot1s	%f18, %f8
	.word 0x99a449c3  ! 2022: FDIVd	fdivd	%f48, %f34, %f12
	.word 0x39400001  ! 2023: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x95a209a7  ! 2024: FDIVs	fdivs	%f8, %f7, %f10
	.word 0xa9a509c3  ! 2025: FDIVd	fdivd	%f20, %f34, %f20
	.word 0x91a1c9b0  ! 2025: FDIVs	fdivs	%f7, %f16, %f8
    nop
    nop
    mov 63, %g1
loopz_20_464:
    ldstub [%r31+0x1f0], %r2
    brnz,a %r1, loopz_20_464
    dec %r1
	.word 0x91b30711  ! 2026: FMULD8SUx16	fmuld8ulx16	%f12, %f17, %d8
	.word 0xd01fc000  ! 2027: LDD_R	ldd	[%r31 + %r0], %r8
	.word 0xa3a449d4  ! 2028: FDIVd	fdivd	%f48, %f20, %f48
	.word 0xa1b04710  ! 2029: FMULD8SUx16	fmuld8ulx16	%f1, %f16, %d16
	.word 0xa1a2c9ca  ! 2029: FDIVd	fdivd	%f42, %f10, %f16
    nop
    nop
    mov 7, %g1
loopb_20_465:
    ldstub [%r31+0x110], %r2
    brnz,a %r1, loopb_20_465
    dec %r1
	.word 0xa7b1c0b0  ! 2030: EDGE16N	edge16n	%r7, %r16, %r19
	.word 0xe1bfdf00  ! 2031: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe61fe090  ! 2032: LDD_I	ldd	[%r31 + 0x0090], %r19
	.word 0xa3b4c0a9  ! 2033: EDGE16N	edge16n	%r19, %r9, %r17
	.word 0xe1bfdc40  ! 2033: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9bb407d3  ! 2034: PDIST	pdistn	%d16, %d50, %d44
	.word 0xdbe7d040  ! 2035: CASA_I	casa	[%r31] 0x82, %r0, %r13
	.word 0xda1fe0d0  ! 2036: LDD_I	ldd	[%r31 + 0x00d0], %r13
	.word 0xa5b087d4  ! 2037: PDIST	pdistn	%d2, %d20, %d18
	.word 0x39400001  ! 2037: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x97b48cf3  ! 2038: FNOT2S	fandnot1s	%f19, %f11
	.word 0xe1bfdc00  ! 2039: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa3a209d2  ! 2040: FDIVd	fdivd	%f8, %f18, %f48
	.word 0xa3b44ceb  ! 2041: FNOT2S	fandnot1s	%f11, %f17
	.word 0x20800001  ! 2041: BN	bn,a	<label_0x1>
	.word 0x93b100b1  ! 2042: EDGE16N	edge16n	%r4, %r17, %r9
	.word 0xd307e170  ! 2043: LDF_I	ld	[%r31, 0x0170], %f9
	.word 0xa9b300a2  ! 2044: EDGE16N	edge16n	%r12, %r2, %r20
	.word 0x93b440a9  ! 2045: EDGE16N	edge16n	%r17, %r9, %r9
	.word 0x97b0c0b4  ! 2045: EDGE16N	edge16n	%r3, %r20, %r11
	.word 0xd61fe0a0  ! 2046: LDD_I	ldd	[%r31 + 0x00a0], %r11
	.word 0xd63fe1d0  ! 2047: STD_I	std	%r11, [%r31 + 0x01d0]
	.word 0xa7a509ca  ! 2048: FDIVd	fdivd	%f20, %f10, %f50
	.word 0xe61fe010  ! 2049: LDD_I	ldd	[%r31 + 0x0010], %r19
	.word 0xe6dfc380  ! 2049: LDXA_R	ldxa	[%r31, %r0] 0x1c, %r19
	.word 0xe21fe160  ! 2050: LDD_I	ldd	[%r31 + 0x0160], %r17
	.word 0xe307e170  ! 2051: LDF_I	ld	[%r31, 0x0170], %f17
	.word 0xa5a489c8  ! 2052: FDIVd	fdivd	%f18, %f8, %f18
	.word 0xe41fe040  ! 2053: LDD_I	ldd	[%r31 + 0x0040], %r18
	.word 0x9ba209c9  ! 2053: FDIVd	fdivd	%f8, %f40, %f44
	.word 0xa5a349b0  ! 2054: FDIVs	fdivs	%f13, %f16, %f18
	.word 0xe1bfda00  ! 2055: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe41fe0e0  ! 2056: LDD_I	ldd	[%r31 + 0x00e0], %r18
	.word 0xa3a4c9b1  ! 2057: FDIVs	fdivs	%f19, %f17, %f17
	.word 0xe21fe050  ! 2057: LDD_I	ldd	[%r31 + 0x0050], %r17
	.word 0x95a489b0  ! 2058: FDIVs	fdivs	%f18, %f16, %f10
	.word 0xbfe7c000  ! 2059: SAVE_R	save	%r31, %r0, %r31
	.word 0xa3a109c2  ! 2060: FDIVd	fdivd	%f4, %f2, %f48
	.word 0xa7a309b2  ! 2061: FDIVs	fdivs	%f12, %f18, %f19
	.word 0x95a409c5  ! 2061: FDIVd	fdivd	%f16, %f36, %f10
	.word 0xa7b48714  ! 2062: FMULD8SUx16	fmuld8ulx16	%f18, %f20, %d50
	.word 0x39400001  ! 2063: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa5b14ce8  ! 2064: FNOT2S	fandnot1s	%f8, %f18
	.word 0xa9b44711  ! 2065: FMULD8SUx16	fmuld8ulx16	%f17, %f17, %d20
	.word 0xa5b18ce9  ! 2065: FNOT2S	fandnot1s	%f9, %f18
    nop
    nop
    mov 27, %g1
loopz_20_474:
    ldstub [%r31+0x1a0], %r2
    brnz,a %r1, loopz_20_474
    dec %r1
	.word 0xe41fe150  ! 2066: LDD_I	ldd	[%r31 + 0x0150], %r18
	.word 0xc32fe140  ! 2067: STXFSR_I	st-sfr	%f1, [0x0140, %r31]
	.word 0xe41fe020  ! 2068: LDD_I	ldd	[%r31 + 0x0020], %r18
	.word 0xe41fe190  ! 2069: LDD_I	ldd	[%r31 + 0x0190], %r18
	.word 0xe41fe1d0  ! 2069: LDD_I	ldd	[%r31 + 0x01d0], %r18
	.word 0x9bb44702  ! 2070: FMULD8SUx16	fmuld8ulx16	%f17, %f2, %d44
	.word 0xdb07e0a0  ! 2071: LDF_I	ld	[%r31, 0x00a0], %f13
	.word 0xda1fe020  ! 2072: LDD_I	ldd	[%r31 + 0x0020], %r13
	.word 0x91b24710  ! 2073: FMULD8SUx16	fmuld8ulx16	%f9, %f16, %d8
	.word 0xd107e070  ! 2073: LDF_I	ld	[%r31, 0x0070], %f8
    nop
    nop
    mov 55, %g1
loopz_20_476:
    ldstub [%r31+0x140], %r2
    brnz,a %r1, loopz_20_476
    dec %r1
	.word 0xd01fe070  ! 2074: LDD_I	ldd	[%r31 + 0x0070], %r8
	.word 0xd01fe050  ! 2075: LDD_I	ldd	[%r31 + 0x0050], %r8
	.word 0x93a509b4  ! 2076: FDIVs	fdivs	%f20, %f20, %f9
	.word 0xd21fe020  ! 2077: LDD_I	ldd	[%r31 + 0x0020], %r9
	.word 0xd31fe020  ! 2077: LDDF_I	ldd	[%r31, 0x0020], %f9
	.word 0xa1b047c7  ! 2078: PDIST	pdistn	%d32, %d38, %d16
	.word 0x87afca40  ! 2079: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa9b0470a  ! 2080: FMULD8SUx16	fmuld8ulx16	%f1, %f10, %d20
	.word 0xa9b407c5  ! 2081: PDIST	pdistn	%d16, %d36, %d20
	.word 0x24cfc001  ! 2081: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x97b44ce6  ! 2082: FNOT2S	fandnot1s	%f6, %f11
	.word 0xd707e0b0  ! 2083: LDF_I	ld	[%r31, 0x00b0], %f11
	.word 0x91b44cf4  ! 2084: FNOT2S	fandnot1s	%f20, %f8
	.word 0xa7b2ccf3  ! 2085: FNOT2S	fandnot1s	%f19, %f19
	.word 0x99b50ce3  ! 2085: FNOT2S	fandnot1s	%f3, %f12
	.word 0x97a509c1  ! 2086: FDIVd	fdivd	%f20, %f32, %f42
	.word 0xd707e140  ! 2087: LDF_I	ld	[%r31, 0x0140], %f11
	.word 0x99b08ce1  ! 2088: FNOT2S	fandnot1s	%f1, %f12
	.word 0xa7a489d4  ! 2089: FDIVd	fdivd	%f18, %f20, %f50
	.word 0x93b1ccf3  ! 2089: FNOT2S	fandnot1s	%f19, %f9
	.word 0x9ba409a8  ! 2090: FDIVs	fdivs	%f16, %f8, %f13
	.word 0xdb07e150  ! 2091: LDF_I	ld	[%r31, 0x0150], %f13
	.word 0xda1fe020  ! 2092: LDD_I	ldd	[%r31 + 0x0020], %r13
	.word 0x93a409b0  ! 2093: FDIVs	fdivs	%f16, %f16, %f9
	.word 0xd307e110  ! 2093: LDF_I	ld	[%r31, 0x0110], %f9
	.word 0xa5b24ce1  ! 2094: FNOT2S	fandnot1s	%f1, %f18
	.word 0xc1bfc2c0  ! 2095: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91a449b3  ! 2096: FDIVs	fdivs	%f17, %f19, %f8
	.word 0x97b50cf0  ! 2097: FNOT2S	fandnot1s	%f16, %f11
	.word 0x20800001  ! 2097: BN	bn,a	<label_0x1>
	.word 0xc0bfdc40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xe2
	.word 0xe0bfc2c0  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x16
	.word 0xe09fde00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf0, %r16
	.word 0xa1b24cf3  ! 2098: FNOT2S	fandnot1s	%f19, %f16
	.word 0x87afca40  ! 2099: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xe01fe0b0  ! 2100: LDD_I	ldd	[%r31 + 0x00b0], %r16
	.word 0xa1b30cf4  ! 2101: FNOT2S	fandnot1s	%f20, %f16
	.word 0xa1a7c9c0  ! 2101: FDIVd	fdivd	%f62, %f0, %f16
	.word 0x95b08707  ! 2102: FMULD8SUx16	fmuld8ulx16	%f2, %f7, %d10
	.word 0xbfefc000  ! 2103: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95a509b4  ! 2104: FDIVs	fdivs	%f20, %f20, %f10
	.word 0x97b44712  ! 2105: FMULD8SUx16	fmuld8ulx16	%f17, %f18, %d42
	.word 0x9ba049b4  ! 2105: FDIVs	fdivs	%f1, %f20, %f13
	.word 0x95b44713  ! 2106: FMULD8SUx16	fmuld8ulx16	%f17, %f19, %d10
	.word 0xd5e7c6c0  ! 2107: CASA_I	casa	[%r31] 0x36, %r0, %r10
	.word 0x99a4c9ac  ! 2108: FDIVs	fdivs	%f19, %f12, %f12
	.word 0x93b48710  ! 2109: FMULD8SUx16	fmuld8ulx16	%f18, %f16, %d40
	.word 0xc36fe180  ! 2109: PREFETCH_I	prefetch	[%r31 + 0x0180], #one_read
	.word 0xa3b34cf3  ! 2110: FNOT2S	fandnot1s	%f19, %f17
	.word 0xe307e0f0  ! 2111: LDF_I	ld	[%r31, 0x00f0], %f17
	.word 0x91b0c0a9  ! 2112: EDGE16N	edge16n	%r3, %r9, %r8
	.word 0x93b04cf3  ! 2113: FNOT2S	fandnot1s	%f19, %f9
	.word 0xd307e120  ! 2113: LDF_I	ld	[%r31, 0x0120], %f9
	.word 0xa9a189a4  ! 2114: FDIVs	fdivs	%f6, %f4, %f20
	.word 0xc32fe1f0  ! 2115: STXFSR_I	st-sfr	%f1, [0x01f0, %r31]
	.word 0x93b34cf0  ! 2116: FNOT2S	fandnot1s	%f16, %f9
	.word 0xa1a4c9a3  ! 2117: FDIVs	fdivs	%f19, %f3, %f16
	.word 0xe11fe030  ! 2117: LDDF_I	ldd	[%r31, 0x0030], %f16
	.word 0xa5a109c1  ! 2118: FDIVd	fdivd	%f4, %f32, %f18
	.word 0xe507e050  ! 2119: LDF_I	ld	[%r31, 0x0050], %f18
	.word 0x93a189a8  ! 2120: FDIVs	fdivs	%f6, %f8, %f9
	.word 0x9ba489d2  ! 2121: FDIVd	fdivd	%f18, %f18, %f44
	.word 0xdb07e000  ! 2121: LDF_I	ld	[%r31, 0x0000], %f13
	.word 0xda1fe1d0  ! 2122: LDD_I	ldd	[%r31 + 0x01d0], %r13
	.word 0x9d97c000  ! 2123: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9ba149b4  ! 2124: FDIVs	fdivs	%f5, %f20, %f13
	.word 0xda1fe090  ! 2125: LDD_I	ldd	[%r31 + 0x0090], %r13
	.word 0x9d97c000  ! 2125: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
    nop
    nop
    mov 3, %g1
loopb_20_486:
    ldstub [%r31+0x150], %r2
    brnz,a %r1, loopb_20_486
    dec %r1
	.word 0x93b300a2  ! 2126: EDGE16N	edge16n	%r12, %r2, %r9
	.word 0xc1bfde00  ! 2127: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x9ba089a3  ! 2128: FDIVs	fdivs	%f2, %f3, %f13
	.word 0x99b080b3  ! 2129: EDGE16N	edge16n	%r2, %r19, %r12
	.word 0x99a1c9a6  ! 2129: FDIVs	fdivs	%f7, %f6, %f12
	.word 0x93a489a1  ! 2130: FDIVs	fdivs	%f18, %f1, %f9
	.word 0x81b7c7c0  ! 2131: PDIST	pdistn	%d62, %d0, %d0
	.word 0x99a1c9b4  ! 2132: FDIVs	fdivs	%f7, %f20, %f12
	.word 0xa9a249b3  ! 2133: FDIVs	fdivs	%f9, %f19, %f20
	.word 0xa9a409a4  ! 2133: FDIVs	fdivs	%f16, %f4, %f20
	.word 0x97b200b3  ! 2134: EDGE16N	edge16n	%r8, %r19, %r11
	.word 0x00800001  ! 2135: BN	bn  	<label_0x1>
	.word 0x95a109a5  ! 2136: FDIVs	fdivs	%f4, %f5, %f10
	.word 0x91b280b0  ! 2137: EDGE16N	edge16n	%r10, %r16, %r8
	.word 0x00800001  ! 2137: BN	bn  	<label_0x1>
	.word 0xa3b50710  ! 2138: FMULD8SUx16	fmuld8ulx16	%f20, %f16, %d48
	.word 0xbfe7c000  ! 2139: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7a289a2  ! 2140: FDIVs	fdivs	%f10, %f2, %f19
	.word 0x9bb50706  ! 2141: FMULD8SUx16	fmuld8ulx16	%f20, %f6, %d44
	.word 0xa5a309aa  ! 2141: FDIVs	fdivs	%f12, %f10, %f18
	.word 0xe41fe100  ! 2142: LDD_I	ldd	[%r31 + 0x0100], %r18
	.word 0x87afca40  ! 2143: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa7a309b2  ! 2144: FDIVs	fdivs	%f12, %f18, %f19
	.word 0xe61fe030  ! 2145: LDD_I	ldd	[%r31 + 0x0030], %r19
	.word 0xa1a209b4  ! 2145: FDIVs	fdivs	%f8, %f20, %f16
	.word 0x9bb247cd  ! 2146: PDIST	pdistn	%d40, %d44, %d44
	.word 0x19400001  ! 2147: FBPUGE	fbuge
	.word 0xa7b407c6  ! 2148: PDIST	pdistn	%d16, %d6, %d50
	.word 0xa3b507cd  ! 2149: PDIST	pdistn	%d20, %d44, %d48
	.word 0x04cfc001  ! 2149: BRLEZ	brlez,pt  	%r31,<label_0xfc001>
	.word 0xa5b2c0a4  ! 2150: EDGE16N	edge16n	%r11, %r4, %r18
	.word 0xe507e100  ! 2151: LDF_I	ld	[%r31, 0x0100], %f18
	.word 0x91b50713  ! 2152: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d8
	.word 0xa1b4c0a9  ! 2153: EDGE16N	edge16n	%r19, %r9, %r16
	.word 0xe107e180  ! 2153: LDF_I	ld	[%r31, 0x0180], %f16
	.word 0x93b447d2  ! 2154: PDIST	pdistn	%d48, %d18, %d40
	.word 0xd297c720  ! 2155: LDUHA_R	lduha	[%r31, %r0] 0x39, %r9
	.word 0xa3a4c9b3  ! 2156: FDIVs	fdivs	%f19, %f19, %f17
	.word 0x93b047c5  ! 2157: PDIST	pdistn	%d32, %d36, %d40
	.word 0xd2dfd060  ! 2157: LDXA_R	ldxa	[%r31, %r0] 0x83, %r9
	.word 0xa1b4c0a3  ! 2158: EDGE16N	edge16n	%r19, %r3, %r16
	.word 0xc1bfda60  ! 2159: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa5b347c1  ! 2160: PDIST	pdistn	%d44, %d32, %d18
	.word 0xa3b4c0b3  ! 2161: EDGE16N	edge16n	%r19, %r19, %r17
	.word 0xa7b447ca  ! 2161: PDIST	pdistn	%d48, %d10, %d50
	.word 0x93b0c703  ! 2162: FMULD8SUx16	fmuld8ulx16	%f3, %f3, %d40
	.word 0xe19fdc00  ! 2163: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa7b1c707  ! 2164: FMULD8SUx16	fmuld8ulx16	%f7, %f7, %d50
	.word 0xa7b40712  ! 2165: FMULD8SUx16	fmuld8ulx16	%f16, %f18, %d50
	.word 0xa7b48709  ! 2165: FMULD8SUx16	fmuld8ulx16	%f18, %f9, %d50
	.word 0xa7a1c9a3  ! 2166: FDIVs	fdivs	%f7, %f3, %f19
	.word 0xe71fe1b0  ! 2167: LDDF_I	ldd	[%r31, 0x01b0], %f19
	.word 0x99a509d4  ! 2168: FDIVd	fdivd	%f20, %f20, %f12
	.word 0xa7a4c9b4  ! 2169: FDIVs	fdivs	%f19, %f20, %f19
	.word 0xc32fe1d0  ! 2169: STXFSR_I	st-sfr	%f1, [0x01d0, %r31]
    nop
    nop
    mov 27, %g1
loopz_20_494:
    ldstub [%r31+0xa0], %r2
    brnz,a %r1, loopz_20_494
    dec %r1
	.word 0x97b140b3  ! 2170: EDGE16N	edge16n	%r5, %r19, %r11
	.word 0xc32fe170  ! 2171: STXFSR_I	st-sfr	%f1, [0x0170, %r31]
	.word 0xd61fe080  ! 2172: LDD_I	ldd	[%r31 + 0x0080], %r11
	.word 0xa5b040a7  ! 2173: EDGE16N	edge16n	%r1, %r7, %r18
	.word 0xe41fc000  ! 2173: LDD_R	ldd	[%r31 + %r0], %r18
	.word 0x97b3070b  ! 2174: FMULD8SUx16	fmuld8ulx16	%f12, %f11, %d42
	.word 0xbfe7c000  ! 2175: SAVE_R	save	%r31, %r0, %r31
	.word 0xd61fe120  ! 2176: LDD_I	ldd	[%r31 + 0x0120], %r11
	.word 0xa7b44706  ! 2177: FMULD8SUx16	fmuld8ulx16	%f17, %f6, %d50
	.word 0xe61fe1f0  ! 2177: LDD_I	ldd	[%r31 + 0x01f0], %r19
	.word 0xa5b347cd  ! 2178: PDIST	pdistn	%d44, %d44, %d18
	.word 0xe43fe040  ! 2179: STD_I	std	%r18, [%r31 + 0x0040]
	.word 0x95a1c9d3  ! 2180: FDIVd	fdivd	%f38, %f50, %f10
	.word 0x93b1c7c7  ! 2181: PDIST	pdistn	%d38, %d38, %d40
	.word 0xc36fe050  ! 2181: PREFETCH_I	prefetch	[%r31 + 0x0050], #one_read
	.word 0x99a4c9ad  ! 2182: FDIVs	fdivs	%f19, %f13, %f12
	.word 0x81b7c7c0  ! 2183: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa5b2c7d3  ! 2184: PDIST	pdistn	%d42, %d50, %d18
	.word 0x95a4c9b3  ! 2185: FDIVs	fdivs	%f19, %f19, %f10
	.word 0x91b447d2  ! 2185: PDIST	pdistn	%d48, %d18, %d8
    nop
    nop
    mov 7, %g1
loopz_20_498:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopz_20_498
    dec %r1
	.word 0xd01fe0e0  ! 2186: LDD_I	ldd	[%r31 + 0x00e0], %r8
	.word 0xd1e7e000  ! 2187: CASA_R	casa	[%r31] %asi, %r0, %r8
	.word 0xa3a289d4  ! 2188: FDIVd	fdivd	%f10, %f20, %f48
	.word 0xe21fe0d0  ! 2189: LDD_I	ldd	[%r31 + 0x00d0], %r17
	.word 0xc32fe1d0  ! 2189: STXFSR_I	st-sfr	%f1, [0x01d0, %r31]
	.word 0x93b487d3  ! 2190: PDIST	pdistn	%d18, %d50, %d40
	.word 0x9d97c000  ! 2191: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b40710  ! 2192: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d50
	.word 0x9bb407d2  ! 2193: PDIST	pdistn	%d16, %d18, %d44
	.word 0x9d97c000  ! 2193: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x99b440ab  ! 2194: EDGE16N	edge16n	%r17, %r11, %r12
	.word 0xc32fe040  ! 2195: STXFSR_I	st-sfr	%f1, [0x0040, %r31]
	.word 0x91b440a6  ! 2196: EDGE16N	edge16n	%r17, %r6, %r8
	.word 0x93b400b4  ! 2197: EDGE16N	edge16n	%r16, %r20, %r9
	.word 0x97b440aa  ! 2197: EDGE16N	edge16n	%r17, %r10, %r11
	.word 0x9bb04712  ! 2198: FMULD8SUx16	fmuld8ulx16	%f1, %f18, %d44
	.word 0xdb07e1c0  ! 2199: LDF_I	ld	[%r31, 0x01c0], %f13
	.word 0x95b107d0  ! 2200: PDIST	pdistn	%d4, %d16, %d10
	.word 0xa7b14712  ! 2201: FMULD8SUx16	fmuld8ulx16	%f5, %f18, %d50
	.word 0xe707e180  ! 2201: LDF_I	ld	[%r31, 0x0180], %f19
	.word 0xa5b440a5  ! 2202: EDGE16N	edge16n	%r17, %r5, %r18
	.word 0xa5b7c4c0  ! 2203: FCMPNE32	fcmpne32	%d62, %d0, %r18
	.word 0xa5b50714  ! 2204: FMULD8SUx16	fmuld8ulx16	%f20, %f20, %d18
	.word 0x93b440aa  ! 2205: EDGE16N	edge16n	%r17, %r10, %r9
	.word 0x04cfc001  ! 2205: BRLEZ	brlez,pt  	%r31,<label_0xfc001>
	.word 0x97b20703  ! 2206: FMULD8SUx16	fmuld8ulx16	%f8, %f3, %d42
	.word 0xbfe7c000  ! 2207: SAVE_R	save	%r31, %r0, %r31
	.word 0x97b0c709  ! 2208: FMULD8SUx16	fmuld8ulx16	%f3, %f9, %d42
	.word 0x97b5070a  ! 2209: FMULD8SUx16	fmuld8ulx16	%f20, %f10, %d42
	.word 0x97b48711  ! 2209: FMULD8SUx16	fmuld8ulx16	%f18, %f17, %d42
	.word 0x97a209b1  ! 2210: FDIVs	fdivs	%f8, %f17, %f11
	.word 0x9d97c000  ! 2211: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd61fe000  ! 2212: LDD_I	ldd	[%r31 + 0x0000], %r11
	.word 0xa3a0c9b3  ! 2213: FDIVs	fdivs	%f3, %f19, %f17
	.word 0xe21fe0b0  ! 2213: LDD_I	ldd	[%r31 + 0x00b0], %r17
	sethi %hi(0x3cb80000), %r21
	stxa %r27, [%r21]0x57
    nop
    nop
    mov 23, %g1
loopb_20_506:
    ldstub [%r31+0x110], %r2
    brnz,a %r1, loopb_20_506
    dec %r1
	.word 0x91b447d0  ! 2214: PDIST	pdistn	%d48, %d16, %d8
	.word 0xc1bfdc40  ! 2215: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa3b48706  ! 2216: FMULD8SUx16	fmuld8ulx16	%f18, %f6, %d48
	.word 0xa5b4c7c3  ! 2217: PDIST	pdistn	%d50, %d34, %d18
	.word 0xe1bfda00  ! 2217: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9bb1c0b2  ! 2218: EDGE16N	edge16n	%r7, %r18, %r13
	.word 0xda3fe0f0  ! 2219: STD_I	std	%r13, [%r31 + 0x00f0]
	.word 0xa1a2c9b3  ! 2220: FDIVs	fdivs	%f11, %f19, %f16
	.word 0xa7b300aa  ! 2221: EDGE16N	edge16n	%r12, %r10, %r19
	.word 0xa5a109b0  ! 2221: FDIVs	fdivs	%f4, %f16, %f18
	.word 0x97b107d4  ! 2222: PDIST	pdistn	%d4, %d20, %d42
	.word 0x81b7c7c0  ! 2223: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa3b1c7d2  ! 2224: PDIST	pdistn	%d38, %d18, %d48
	.word 0x9bb4c7c4  ! 2225: PDIST	pdistn	%d50, %d4, %d44
	.word 0xa1b7c7c0  ! 2225: PDIST	pdistn	%d62, %d0, %d16
	.word 0x95b4c710  ! 2226: FMULD8SUx16	fmuld8ulx16	%f19, %f16, %d10
	.word 0xd507e0e0  ! 2227: LDF_I	ld	[%r31, 0x00e0], %f10
	.word 0x97b2cce5  ! 2228: FNOT2S	fandnot1s	%f5, %f11
	.word 0x93b4c712  ! 2229: FMULD8SUx16	fmuld8ulx16	%f19, %f18, %d40
	.word 0x97b44ce9  ! 2229: FNOT2S	fandnot1s	%f9, %f11
	.word 0x9bb18cf4  ! 2230: FNOT2S	fandnot1s	%f20, %f13
	.word 0xc3efe160  ! 2231: PREFETCHA_I	prefetcha	[%r31, + 0x0160] %asi, #one_read
	.word 0x9bb4c70d  ! 2232: FMULD8SUx16	fmuld8ulx16	%f19, %f13, %d44
	.word 0xa1b2ccf3  ! 2233: FNOT2S	fandnot1s	%f19, %f16
	.word 0xc3efe0f0  ! 2233: PREFETCHA_I	prefetcha	[%r31, + 0x00f0] %asi, #one_read
	.word 0xa1a149a3  ! 2234: FDIVs	fdivs	%f5, %f3, %f16
	.word 0x00800001  ! 2235: BN	bn  	<label_0x1>
	.word 0xa9a449a2  ! 2236: FDIVs	fdivs	%f17, %f2, %f20
	.word 0xa5a489b4  ! 2237: FDIVs	fdivs	%f18, %f20, %f18
	.word 0xe1bfdb20  ! 2237: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe41fe000  ! 2238: LDD_I	ldd	[%r31 + 0x0000], %r18
	.word 0xe507e1e0  ! 2239: LDF_I	ld	[%r31, 0x01e0], %f18
	.word 0xe41fe0d0  ! 2240: LDD_I	ldd	[%r31 + 0x00d0], %r18
	.word 0xe41fe080  ! 2241: LDD_I	ldd	[%r31 + 0x0080], %r18
	.word 0xe507e0c0  ! 2241: LDF_I	ld	[%r31, 0x00c0], %f18
	.word 0x95b4c7d0  ! 2242: PDIST	pdistn	%d50, %d16, %d10
	.word 0xd43fe050  ! 2243: STD_I	std	%r10, [%r31 + 0x0050]
	.word 0xa7b4c7d3  ! 2244: PDIST	pdistn	%d50, %d50, %d50
	.word 0xa1b247d2  ! 2245: PDIST	pdistn	%d40, %d18, %d16
	.word 0xa1b1c7c6  ! 2245: PDIST	pdistn	%d38, %d6, %d16
	.word 0xa9a4c9c7  ! 2246: FDIVd	fdivd	%f50, %f38, %f20
	.word 0xe89fd920  ! 2247: LDDA_R	ldda	[%r31, %r0] 0xc9, %r20
	.word 0xa3b40711  ! 2248: FMULD8SUx16	fmuld8ulx16	%f16, %f17, %d48
	.word 0x91a2c9c1  ! 2249: FDIVd	fdivd	%f42, %f32, %f8
	.word 0x99b1070b  ! 2249: FMULD8SUx16	fmuld8ulx16	%f4, %f11, %d12
	.word 0xa7b50714  ! 2250: FMULD8SUx16	fmuld8ulx16	%f20, %f20, %d50
	.word 0x9d97c000  ! 2251: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b407cd  ! 2252: PDIST	pdistn	%d16, %d44, %d48
	.word 0xa5b0c701  ! 2253: FMULD8SUx16	fmuld8ulx16	%f3, %f1, %d18
	.word 0xbfe7c000  ! 2253: SAVE_R	save	%r31, %r0, %r31
	.word 0xa1b0c0ab  ! 2254: EDGE16N	edge16n	%r3, %r11, %r16
	.word 0x39400001  ! 2255: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa9b40cf4  ! 2256: FNOT2S	fandnot1s	%f20, %f20
	.word 0xa9b500b2  ! 2257: EDGE16N	edge16n	%r20, %r18, %r20
	.word 0xa3b24cf0  ! 2257: FNOT2S	fandnot1s	%f16, %f17
	.word 0x97b480b4  ! 2258: EDGE16N	edge16n	%r18, %r20, %r11
	.word 0xbfefc000  ! 2259: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa3b487d4  ! 2260: PDIST	pdistn	%d18, %d20, %d48
	.word 0x95b400ab  ! 2261: EDGE16N	edge16n	%r16, %r11, %r10
	.word 0x95b0c7c1  ! 2261: PDIST	pdistn	%d34, %d32, %d10
    nop
    nop
    mov 63, %g1
loopz_20_516:
    ldstub [%r31+0x150], %r2
    brnz,a %r1, loopz_20_516
    dec %r1
	.word 0xd41fe110  ! 2262: LDD_I	ldd	[%r31 + 0x0110], %r10
	.word 0xd5e7e000  ! 2263: CASA_R	casa	[%r31] %asi, %r0, %r10
	.word 0x95b040b0  ! 2264: EDGE16N	edge16n	%r1, %r16, %r10
	.word 0xd41fe030  ! 2265: LDD_I	ldd	[%r31 + 0x0030], %r10
	.word 0xd41fc000  ! 2265: LDD_R	ldd	[%r31 + %r0], %r10
	.word 0xa3b100b0  ! 2266: EDGE16N	edge16n	%r4, %r16, %r17
	.word 0xe307e000  ! 2267: LDF_I	ld	[%r31, 0x0000], %f17
	.word 0xe21fe050  ! 2268: LDD_I	ldd	[%r31 + 0x0050], %r17
	.word 0xa9b2c0b1  ! 2269: EDGE16N	edge16n	%r11, %r17, %r20
	.word 0xe907e150  ! 2269: LDF_I	ld	[%r31, 0x0150], %f20
	.word 0xe81fe030  ! 2270: LDD_I	ldd	[%r31 + 0x0030], %r20
	.word 0xe83fe0d0  ! 2271: STD_I	std	%r20, [%r31 + 0x00d0]
	.word 0xe81fe1b0  ! 2272: LDD_I	ldd	[%r31 + 0x01b0], %r20
	.word 0xe81fe170  ! 2273: LDD_I	ldd	[%r31 + 0x0170], %r20
	.word 0xe81fe010  ! 2273: LDD_I	ldd	[%r31 + 0x0010], %r20
	.word 0x95a289a3  ! 2274: FDIVs	fdivs	%f10, %f3, %f10
	.word 0x9d97c000  ! 2275: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7a409b2  ! 2276: FDIVs	fdivs	%f16, %f18, %f19
	.word 0xa7a509b3  ! 2277: FDIVs	fdivs	%f20, %f19, %f19
	.word 0xa9a049b4  ! 2277: FDIVs	fdivs	%f1, %f20, %f20
	.word 0x91a249cc  ! 2278: FDIVd	fdivd	%f40, %f12, %f8
	.word 0xbfe7c000  ! 2279: SAVE_R	save	%r31, %r0, %r31
	.word 0xd01fe0c0  ! 2280: LDD_I	ldd	[%r31 + 0x00c0], %r8
	.word 0xa3a1c9d1  ! 2281: FDIVd	fdivd	%f38, %f48, %f48
	.word 0xe21fe1d0  ! 2281: LDD_I	ldd	[%r31 + 0x01d0], %r17
	.word 0xe21fe150  ! 2282: LDD_I	ldd	[%r31 + 0x0150], %r17
	.word 0xe21fe050  ! 2283: LDD_I	ldd	[%r31 + 0x0050], %r17
	.word 0x97a509b4  ! 2284: FDIVs	fdivs	%f20, %f20, %f11
	.word 0xd61fe1a0  ! 2285: LDD_I	ldd	[%r31 + 0x01a0], %r11
	.word 0x91a489a8  ! 2285: FDIVs	fdivs	%f18, %f8, %f8
	.word 0xa9a489c6  ! 2286: FDIVd	fdivd	%f18, %f6, %f20
	.word 0x39400001  ! 2287: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa3a2c9b0  ! 2288: FDIVs	fdivs	%f11, %f16, %f17
	.word 0x95a409d4  ! 2289: FDIVd	fdivd	%f16, %f20, %f10
	.word 0xd43fe150  ! 2289: STD_I	std	%r10, [%r31 + 0x0150]
	.word 0x93b1c0a8  ! 2290: EDGE16N	edge16n	%r7, %r8, %r9
	.word 0xd307e0f0  ! 2291: LDF_I	ld	[%r31, 0x00f0], %f9
	.word 0xa9b1c0ab  ! 2292: EDGE16N	edge16n	%r7, %r11, %r20
	.word 0xa5b1c0b4  ! 2293: EDGE16N	edge16n	%r7, %r20, %r18
	.word 0xe507e1a0  ! 2293: LDF_I	ld	[%r31, 0x01a0], %f18
	.word 0xe0bfde00  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xf0
	.word 0xe19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
    nop
    nop
    mov 7, %g1
loopz_20_521:
    ldstub [%r31+0x70], %r2
    brnz,a %r1, loopz_20_521
    dec %r1
	.word 0x99b50714  ! 2294: FMULD8SUx16	fmuld8ulx16	%f20, %f20, %d12
	.word 0xc32fe1b0  ! 2295: STXFSR_I	st-sfr	%f1, [0x01b0, %r31]
	.word 0x97b44710  ! 2296: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d42
	.word 0xa5b28705  ! 2297: FMULD8SUx16	fmuld8ulx16	%f10, %f5, %d18
	.word 0xa1b24705  ! 2297: FMULD8SUx16	fmuld8ulx16	%f9, %f5, %d16
	.word 0xa3b4c703  ! 2298: FMULD8SUx16	fmuld8ulx16	%f19, %f3, %d48
	.word 0xa3a7c9c0  ! 2299: FDIVd	fdivd	%f62, %f0, %f48
	.word 0xe21fe080  ! 2300: LDD_I	ldd	[%r31 + 0x0080], %r17
	.word 0xa9b50705  ! 2301: FMULD8SUx16	fmuld8ulx16	%f20, %f5, %d20
	.word 0x39400001  ! 2301: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa3a289d2  ! 2302: FDIVd	fdivd	%f10, %f18, %f48
	.word 0xe307e0b0  ! 2303: LDF_I	ld	[%r31, 0x00b0], %f17
	.word 0x97b5070c  ! 2304: FMULD8SUx16	fmuld8ulx16	%f20, %f12, %d42
	.word 0x93a509d2  ! 2305: FDIVd	fdivd	%f20, %f18, %f40
	.word 0xd307e050  ! 2305: LDF_I	ld	[%r31, 0x0050], %f9
    nop
    nop
    mov 7, %g1
loopb_20_524:
    ldstub [%r31+0xf0], %r2
    brnz,a %r1, loopb_20_524
    dec %r1
	.word 0xa3b200b1  ! 2306: EDGE16N	edge16n	%r8, %r17, %r17
	.word 0xc1bfc3e0  ! 2307: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa5b34711  ! 2308: FMULD8SUx16	fmuld8ulx16	%f13, %f17, %d18
	.word 0x95b4c0b4  ! 2309: EDGE16N	edge16n	%r19, %r20, %r10
	.word 0xa5b40710  ! 2309: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d18
	.word 0x95b34712  ! 2310: FMULD8SUx16	fmuld8ulx16	%f13, %f18, %d10
	.word 0xe1bfdb20  ! 2311: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x95a089d4  ! 2312: FDIVd	fdivd	%f2, %f20, %f10
	.word 0x91b44713  ! 2313: FMULD8SUx16	fmuld8ulx16	%f17, %f19, %d8
	.word 0xe1bfdc40  ! 2313: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa3b407d2  ! 2314: PDIST	pdistn	%d16, %d18, %d48
	.word 0xe3e7dd40  ! 2315: CASA_I	casa	[%r31] 0xea, %r0, %r17
	.word 0xa7b4c7d2  ! 2316: PDIST	pdistn	%d50, %d18, %d50
	.word 0x93b307cb  ! 2317: PDIST	pdistn	%d12, %d42, %d40
	.word 0x87afca40  ! 2317: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa3b48712  ! 2318: FMULD8SUx16	fmuld8ulx16	%f18, %f18, %d48
	.word 0x9f8020b0  ! 2319: SIR	sir	0x00b0
	.word 0xa7b4c0b4  ! 2320: EDGE16N	edge16n	%r19, %r20, %r19
	.word 0x93b4c710  ! 2321: FMULD8SUx16	fmuld8ulx16	%f19, %f16, %d40
	.word 0x93b1c0b3  ! 2321: EDGE16N	edge16n	%r7, %r19, %r9
	.word 0x95b287cc  ! 2322: PDIST	pdistn	%d10, %d12, %d10
	.word 0xbfefc000  ! 2323: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa1b24711  ! 2324: FMULD8SUx16	fmuld8ulx16	%f9, %f17, %d16
	.word 0xa9b447d2  ! 2325: PDIST	pdistn	%d48, %d18, %d20
	.word 0xbfefc000  ! 2325: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95b40cf1  ! 2326: FNOT2S	fandnot1s	%f17, %f10
	.word 0xbfefc000  ! 2327: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xd41fe0c0  ! 2328: LDD_I	ldd	[%r31 + 0x00c0], %r10
	.word 0xa3b48cf3  ! 2329: FNOT2S	fandnot1s	%f19, %f17
	.word 0xe21fe0f0  ! 2329: LDD_I	ldd	[%r31 + 0x00f0], %r17
	.word 0xa3b0c7d3  ! 2330: PDIST	pdistn	%d34, %d50, %d48
	.word 0xe1bfdc40  ! 2331: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x97b347d0  ! 2332: PDIST	pdistn	%d44, %d16, %d42
	.word 0x93b107c4  ! 2333: PDIST	pdistn	%d4, %d4, %d40
	.word 0xa7b447ca  ! 2333: PDIST	pdistn	%d48, %d10, %d50
	.word 0x99b440b2  ! 2334: EDGE16N	edge16n	%r17, %r18, %r12
	.word 0x99b7c4c0  ! 2335: FCMPNE32	fcmpne32	%d62, %d0, %r12
	.word 0xa5b2c7d0  ! 2336: PDIST	pdistn	%d42, %d16, %d18
	.word 0xa9b4c0a3  ! 2337: EDGE16N	edge16n	%r19, %r3, %r20
	.word 0x87afca40  ! 2337: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xe1bfde00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe1bfde00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc19fc3e0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe19fdb40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe0bfdb40  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0xda
	.word 0xc09fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r0
	.word 0xe1bfda00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r16
	.word 0x95b480b4  ! 2338: EDGE16N	edge16n	%r18, %r20, %r10
	.word 0xd5e7d160  ! 2339: CASA_I	casa	[%r31] 0x8b, %r0, %r10
	.word 0xa1b14ce6  ! 2340: FNOT2S	fandnot1s	%f6, %f16
	.word 0x99b0c0a2  ! 2341: EDGE16N	edge16n	%r3, %r2, %r12
	.word 0x99b08cf4  ! 2341: FNOT2S	fandnot1s	%f20, %f12
	.word 0x93a509a3  ! 2342: FDIVs	fdivs	%f20, %f3, %f9
	.word 0x24cfc001  ! 2343: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x9bb407d3  ! 2344: PDIST	pdistn	%d16, %d50, %d44
	.word 0x99a509b2  ! 2345: FDIVs	fdivs	%f20, %f18, %f12
	.word 0xc36fe150  ! 2345: PREFETCH_I	prefetch	[%r31 + 0x0150], #one_read
	.word 0x97b44712  ! 2346: FMULD8SUx16	fmuld8ulx16	%f17, %f18, %d42
	.word 0x87afca40  ! 2347: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x99b407d0  ! 2348: PDIST	pdistn	%d16, %d16, %d12
	.word 0xa5b4870c  ! 2349: FMULD8SUx16	fmuld8ulx16	%f18, %f12, %d18
	.word 0xa5b7c4c0  ! 2349: FCMPNE32	fcmpne32	%d62, %d0, %r18
	.word 0x91b48cf2  ! 2350: FNOT2S	fandnot1s	%f18, %f8
	.word 0xbfe7c000  ! 2351: SAVE_R	save	%r31, %r0, %r31
	.word 0xa9b0c710  ! 2352: FMULD8SUx16	fmuld8ulx16	%f3, %f16, %d20
	.word 0xa9b0cceb  ! 2353: FNOT2S	fandnot1s	%f11, %f20
	.word 0x9d97c000  ! 2353: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x95a309ca  ! 2354: FDIVd	fdivd	%f12, %f10, %f10
	.word 0xd51fe0e0  ! 2355: LDDF_I	ldd	[%r31, 0x00e0], %f10
	.word 0x95b20714  ! 2356: FMULD8SUx16	fmuld8ulx16	%f8, %f20, %d10
	.word 0x9ba409c8  ! 2357: FDIVd	fdivd	%f16, %f8, %f44
	.word 0xdb1fe1d0  ! 2357: LDDF_I	ldd	[%r31, 0x01d0], %f13
	.word 0xa5a409a7  ! 2358: FDIVs	fdivs	%f16, %f7, %f18
	.word 0xe507e1b0  ! 2359: LDF_I	ld	[%r31, 0x01b0], %f18
	.word 0xa9a409b2  ! 2360: FDIVs	fdivs	%f16, %f18, %f20
	.word 0x9ba509b0  ! 2361: FDIVs	fdivs	%f20, %f16, %f13
	.word 0xa9a289a5  ! 2361: FDIVs	fdivs	%f10, %f5, %f20
	.word 0x91b240b2  ! 2362: EDGE16N	edge16n	%r9, %r18, %r8
	.word 0xbfe7c000  ! 2363: SAVE_R	save	%r31, %r0, %r31
	.word 0x97a509c4  ! 2364: FDIVd	fdivd	%f20, %f4, %f42
	.word 0x97b400b3  ! 2365: EDGE16N	edge16n	%r16, %r19, %r11
	.word 0x93a149c1  ! 2365: FDIVd	fdivd	%f36, %f32, %f40
	.word 0x99b2c712  ! 2366: FMULD8SUx16	fmuld8ulx16	%f11, %f18, %d12
	.word 0x99a7c9c0  ! 2367: FDIVd	fdivd	%f62, %f0, %f12
	.word 0x97b28ce3  ! 2368: FNOT2S	fandnot1s	%f3, %f11
	.word 0x9bb44706  ! 2369: FMULD8SUx16	fmuld8ulx16	%f17, %f6, %d44
	.word 0x91b50cf1  ! 2369: FNOT2S	fandnot1s	%f17, %f8
	.word 0x97b50704  ! 2370: FMULD8SUx16	fmuld8ulx16	%f20, %f4, %d42
	.word 0x9d97c000  ! 2371: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xd61fe0c0  ! 2372: LDD_I	ldd	[%r31 + 0x00c0], %r11
	.word 0x99b30708  ! 2373: FMULD8SUx16	fmuld8ulx16	%f12, %f8, %d12
	.word 0xd81fe0d0  ! 2373: LDD_I	ldd	[%r31 + 0x00d0], %r12
	.word 0x99a309c9  ! 2374: FDIVd	fdivd	%f12, %f40, %f12
	.word 0x24cfc001  ! 2375: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xd81fe1a0  ! 2376: LDD_I	ldd	[%r31 + 0x01a0], %r12
	.word 0x9ba489cc  ! 2377: FDIVd	fdivd	%f18, %f12, %f44
	.word 0xda1fe160  ! 2377: LDD_I	ldd	[%r31 + 0x0160], %r13
    nop
    nop
    mov 3, %g1
loopz_20_538:
    ldstub [%r31+0], %r2
    brnz,a %r1, loopz_20_538
    dec %r1
	.word 0xa1b24ce6  ! 2378: FNOT2S	fandnot1s	%f6, %f16
	.word 0xe1e7e000  ! 2379: CASA_R	casa	[%r31] %asi, %r0, %r16
	.word 0x95a049d3  ! 2380: FDIVd	fdivd	%f32, %f50, %f10
	.word 0xa5b40cf1  ! 2381: FNOT2S	fandnot1s	%f17, %f18
	.word 0xe41fe190  ! 2381: LDD_I	ldd	[%r31 + 0x0190], %r18
	.word 0xe1bfda00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe19fc2c0  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc1bfde00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc0bfdf00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf8
	.word 0xc1bfde20  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fdf00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
	.word 0xe09fda00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd0, %r16
	.word 0xc0bfdc40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xe2
	.word 0x99b307d1  ! 2382: PDIST	pdistn	%d12, %d48, %d12
	.word 0xd89fdf00  ! 2383: LDDA_R	ldda	[%r31, %r0] 0xf8, %r12
	.word 0xa1a489d0  ! 2384: FDIVd	fdivd	%f18, %f16, %f16
	.word 0xa3b407c8  ! 2385: PDIST	pdistn	%d16, %d8, %d48
	.word 0x93a409d2  ! 2385: FDIVd	fdivd	%f16, %f18, %f40
	.word 0xa1b400b4  ! 2386: EDGE16N	edge16n	%r16, %r20, %r16
	.word 0xbfefc000  ! 2387: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95a449c6  ! 2388: FDIVd	fdivd	%f48, %f6, %f10
	.word 0x9bb040b4  ! 2389: EDGE16N	edge16n	%r1, %r20, %r13
	.word 0xa1a1c9d1  ! 2389: FDIVd	fdivd	%f38, %f48, %f16
	.word 0x9bb48711  ! 2390: FMULD8SUx16	fmuld8ulx16	%f18, %f17, %d44
	.word 0xbfe7c000  ! 2391: SAVE_R	save	%r31, %r0, %r31
	.word 0x99a309ca  ! 2392: FDIVd	fdivd	%f12, %f10, %f12
	.word 0xa1b18714  ! 2393: FMULD8SUx16	fmuld8ulx16	%f6, %f20, %d16
	.word 0x9d97c000  ! 2393: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b287d0  ! 2394: PDIST	pdistn	%d10, %d16, %d48
	.word 0xa3a7c9c0  ! 2395: FDIVd	fdivd	%f62, %f0, %f48
	.word 0xe21fe0a0  ! 2396: LDD_I	ldd	[%r31 + 0x00a0], %r17
	.word 0xa7b4c7d3  ! 2397: PDIST	pdistn	%d50, %d50, %d50
	.word 0xe61fe1b0  ! 2397: LDD_I	ldd	[%r31 + 0x01b0], %r19
	.word 0xe61fe070  ! 2398: LDD_I	ldd	[%r31 + 0x0070], %r19
	.word 0xe707e0e0  ! 2399: LDF_I	ld	[%r31, 0x00e0], %f19
	.word 0xa7a209a9  ! 2400: FDIVs	fdivs	%f8, %f9, %f19
	.word 0xe61fe140  ! 2401: LDD_I	ldd	[%r31 + 0x0140], %r19
	.word 0xe707e010  ! 2401: LDF_I	ld	[%r31, 0x0010], %f19
	.word 0x97b407d4  ! 2402: PDIST	pdistn	%d16, %d20, %d42
	.word 0xd707e040  ! 2403: LDF_I	ld	[%r31, 0x0040], %f11
	.word 0x97b4c714  ! 2404: FMULD8SUx16	fmuld8ulx16	%f19, %f20, %d42
	.word 0x9bb507d0  ! 2405: PDIST	pdistn	%d20, %d16, %d44
	.word 0x99b2c714  ! 2405: FMULD8SUx16	fmuld8ulx16	%f11, %f20, %d12
    nop
    nop
    mov 63, %g1
loopb_20_544:
    ldstub [%r31+0], %r2
    brnz,a %r1, loopb_20_544
    dec %r1
	.word 0xa3a489d0  ! 2406: FDIVd	fdivd	%f18, %f16, %f48
	.word 0xc19fdf20  ! 2407: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa9a4c9cc  ! 2408: FDIVd	fdivd	%f50, %f12, %f20
	.word 0x91a409d1  ! 2409: FDIVd	fdivd	%f16, %f48, %f8
	.word 0xa5a489c5  ! 2409: FDIVd	fdivd	%f18, %f36, %f18
    nop
    nop
    mov 59, %g1
loopz_20_546:
    ldstub [%r31+0x150], %r2
    brnz,a %r1, loopz_20_546
    dec %r1
	.word 0xa3a089d2  ! 2410: FDIVd	fdivd	%f2, %f18, %f48
	.word 0xc32fe1c0  ! 2411: STXFSR_I	st-sfr	%f1, [0x01c0, %r31]
	.word 0x93b28ceb  ! 2412: FNOT2S	fandnot1s	%f11, %f9
	.word 0x9ba289c4  ! 2413: FDIVd	fdivd	%f10, %f4, %f44
	.word 0xa3b20ce3  ! 2413: FNOT2S	fandnot1s	%f3, %f17
	.word 0xa1b207d4  ! 2414: PDIST	pdistn	%d8, %d20, %d16
	.word 0xc3efe0b0  ! 2415: PREFETCHA_I	prefetcha	[%r31, + 0x00b0] %asi, #one_read
	.word 0xa5b40710  ! 2416: FMULD8SUx16	fmuld8ulx16	%f16, %f16, %d18
	.word 0x95b147c8  ! 2417: PDIST	pdistn	%d36, %d8, %d10
	.word 0x95b04706  ! 2417: FMULD8SUx16	fmuld8ulx16	%f1, %f6, %d10
	.word 0x91b400a6  ! 2418: EDGE16N	edge16n	%r16, %r6, %r8
	.word 0xd01fe1c0  ! 2419: LDD_I	ldd	[%r31 + 0x01c0], %r8
	.word 0x91b040b4  ! 2420: EDGE16N	edge16n	%r1, %r20, %r8
	.word 0x97b1c0a8  ! 2421: EDGE16N	edge16n	%r7, %r8, %r11
	.word 0xc3efe030  ! 2421: PREFETCHA_I	prefetcha	[%r31, + 0x0030] %asi, #one_read
	.word 0x93a449ad  ! 2422: FDIVs	fdivs	%f17, %f13, %f9
	.word 0xd307e0b0  ! 2423: LDF_I	ld	[%r31, 0x00b0], %f9
	.word 0x93a449b4  ! 2424: FDIVs	fdivs	%f17, %f20, %f9
	.word 0xa1a209b1  ! 2425: FDIVs	fdivs	%f8, %f17, %f16
	.word 0xa1a489a3  ! 2425: FDIVs	fdivs	%f18, %f3, %f16
	.word 0xe01fe1c0  ! 2426: LDD_I	ldd	[%r31 + 0x01c0], %r16
	.word 0x39400001  ! 2427: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xa1a049d3  ! 2428: FDIVd	fdivd	%f32, %f50, %f16
	.word 0xe01fe1a0  ! 2429: LDD_I	ldd	[%r31 + 0x01a0], %r16
	.word 0x99a049cb  ! 2429: FDIVd	fdivd	%f32, %f42, %f12
	.word 0x95b44ce3  ! 2430: FNOT2S	fandnot1s	%f3, %f10
	.word 0xbfefc000  ! 2431: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95a509a2  ! 2432: FDIVs	fdivs	%f20, %f2, %f10
	.word 0xa9b08cf3  ! 2433: FNOT2S	fandnot1s	%f19, %f20
	.word 0x9d97c000  ! 2433: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x91a349d2  ! 2434: FDIVd	fdivd	%f44, %f18, %f8
	.word 0x20800001  ! 2435: BN	bn,a	<label_0x1>
	.word 0x91a089d1  ! 2436: FDIVd	fdivd	%f2, %f48, %f8
	.word 0xa7a409cb  ! 2437: FDIVd	fdivd	%f16, %f42, %f50
	.word 0x93a449cc  ! 2437: FDIVd	fdivd	%f48, %f12, %f40
	.word 0xd21fe0e0  ! 2438: LDD_I	ldd	[%r31 + 0x00e0], %r9
	.word 0xbfe7c000  ! 2439: SAVE_R	save	%r31, %r0, %r31
	.word 0x9bb487c4  ! 2440: PDIST	pdistn	%d18, %d4, %d44
	.word 0xda1fe1c0  ! 2441: LDD_I	ldd	[%r31 + 0x01c0], %r13
	.word 0xbfefc000  ! 2441: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa9a489a3  ! 2442: FDIVs	fdivs	%f18, %f3, %f20
	.word 0xbfe7c000  ! 2443: SAVE_R	save	%r31, %r0, %r31
	.word 0xe81fe1c0  ! 2444: LDD_I	ldd	[%r31 + 0x01c0], %r20
	.word 0xa3a049a3  ! 2445: FDIVs	fdivs	%f1, %f3, %f17
	.word 0xbfefc000  ! 2445: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x97b147d2  ! 2446: PDIST	pdistn	%d36, %d18, %d42
	.word 0x97a7c9c0  ! 2447: FDIVd	fdivd	%f62, %f0, %f42
	.word 0xd61fe070  ! 2448: LDD_I	ldd	[%r31 + 0x0070], %r11
	.word 0x95b1c7cb  ! 2449: PDIST	pdistn	%d38, %d42, %d10
	.word 0xd41fe1e0  ! 2449: LDD_I	ldd	[%r31 + 0x01e0], %r10
	.word 0x99b440b0  ! 2450: EDGE16N	edge16n	%r17, %r16, %r12
	.word 0xd89fc2c0  ! 2451: LDDA_R	ldda	[%r31, %r0] 0x16, %r12
	.word 0xa1b2870c  ! 2452: FMULD8SUx16	fmuld8ulx16	%f10, %f12, %d16
	.word 0x95b400b2  ! 2453: EDGE16N	edge16n	%r16, %r18, %r10
	.word 0x9f802040  ! 2453: SIR	sir	0x0040
	.word 0x95b500b0  ! 2454: EDGE16N	edge16n	%r20, %r16, %r10
	.word 0xd497c240  ! 2455: LDUHA_R	lduha	[%r31, %r0] 0x12, %r10
	.word 0xa7a489a8  ! 2456: FDIVs	fdivs	%f18, %f8, %f19
	.word 0x95b2c0b0  ! 2457: EDGE16N	edge16n	%r11, %r16, %r10
	.word 0xd41fe180  ! 2457: LDD_I	ldd	[%r31 + 0x0180], %r10
	.word 0xa5b480ad  ! 2458: EDGE16N	edge16n	%r18, %r13, %r18
	.word 0xe4dfc6c0  ! 2459: LDXA_R	ldxa	[%r31, %r0] 0x36, %r18
	.word 0x9bb18707  ! 2460: FMULD8SUx16	fmuld8ulx16	%f6, %f7, %d44
	.word 0x9bb040b1  ! 2461: EDGE16N	edge16n	%r1, %r17, %r13
	.word 0xa1b08707  ! 2461: FMULD8SUx16	fmuld8ulx16	%f2, %f7, %d16
	.word 0x91a089b3  ! 2462: FDIVs	fdivs	%f2, %f19, %f8
	.word 0xbfefc000  ! 2463: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa1b087c9  ! 2464: PDIST	pdistn	%d2, %d40, %d16
	.word 0x91a149a6  ! 2465: FDIVs	fdivs	%f5, %f6, %f8
	.word 0x9d97c000  ! 2465: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa7b44ce5  ! 2466: FNOT2S	fandnot1s	%f5, %f19
	.word 0xbfe7c000  ! 2467: SAVE_R	save	%r31, %r0, %r31
	.word 0x95b480a8  ! 2468: EDGE16N	edge16n	%r18, %r8, %r10
	.word 0xa9b14cf3  ! 2469: FNOT2S	fandnot1s	%f19, %f20
	.word 0x97b300ab  ! 2469: EDGE16N	edge16n	%r12, %r11, %r11
	.word 0x91b440a9  ! 2470: EDGE16N	edge16n	%r17, %r9, %r8
	.word 0xd1e7c2c0  ! 2471: CASA_I	casa	[%r31] 0x16, %r0, %r8
	.word 0x91b240ad  ! 2472: EDGE16N	edge16n	%r9, %r13, %r8
	.word 0x9bb480b4  ! 2473: EDGE16N	edge16n	%r18, %r20, %r13
	.word 0xdadfdf00  ! 2473: LDXA_R	ldxa	[%r31, %r0] 0xf8, %r13
	.word 0xa7b34cf2  ! 2474: FNOT2S	fandnot1s	%f18, %f19
	.word 0xe707e050  ! 2475: LDF_I	ld	[%r31, 0x0050], %f19
	.word 0x95b44cf0  ! 2476: FNOT2S	fandnot1s	%f16, %f10
	.word 0x97b4ccec  ! 2477: FNOT2S	fandnot1s	%f12, %f11
	.word 0x91b14ced  ! 2477: FNOT2S	fandnot1s	%f13, %f8
	.word 0xa7a449d1  ! 2478: FDIVd	fdivd	%f48, %f48, %f50
	.word 0xe707e040  ! 2479: LDF_I	ld	[%r31, 0x0040], %f19
	.word 0xa7b48708  ! 2480: FMULD8SUx16	fmuld8ulx16	%f18, %f8, %d50
	.word 0xa3a509c9  ! 2481: FDIVd	fdivd	%f20, %f40, %f48
	.word 0xe307e100  ! 2481: LDF_I	ld	[%r31, 0x0100], %f17
	.word 0xa3b40cf2  ! 2482: FNOT2S	fandnot1s	%f18, %f17
	.word 0xa3a7c9c0  ! 2483: FDIVd	fdivd	%f62, %f0, %f48
	.word 0x9bb50707  ! 2484: FMULD8SUx16	fmuld8ulx16	%f20, %f7, %d44
	.word 0x91b24cf0  ! 2485: FNOT2S	fandnot1s	%f16, %f8
	.word 0x87afca40  ! 2485: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa1b2ccf0  ! 2486: FNOT2S	fandnot1s	%f16, %f16
	.word 0xe1bfdd40  ! 2487: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa5b4c710  ! 2488: FMULD8SUx16	fmuld8ulx16	%f19, %f16, %d18
	.word 0x91b20cf2  ! 2489: FNOT2S	fandnot1s	%f18, %f8
	.word 0xa5b50706  ! 2489: FMULD8SUx16	fmuld8ulx16	%f20, %f6, %d18
	.word 0xe41fe150  ! 2490: LDD_I	ldd	[%r31 + 0x0150], %r18
	.word 0xa5b7c4c0  ! 2491: FCMPNE32	fcmpne32	%d62, %d0, %r18
	.word 0xa1b447d2  ! 2492: PDIST	pdistn	%d48, %d18, %d16
	.word 0xe01fe0b0  ! 2493: LDD_I	ldd	[%r31 + 0x00b0], %r16
	.word 0xa1a7c9c0  ! 2493: FDIVd	fdivd	%f62, %f0, %f16
	.word 0xa3b1c712  ! 2494: FMULD8SUx16	fmuld8ulx16	%f7, %f18, %d48
	.word 0xbfe7c000  ! 2495: SAVE_R	save	%r31, %r0, %r31
	.word 0xe21fe020  ! 2496: LDD_I	ldd	[%r31 + 0x0020], %r17
	.word 0xa3b1c711  ! 2497: FMULD8SUx16	fmuld8ulx16	%f7, %f17, %d48
	.word 0x9d97c000  ! 2497: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa5b507d1  ! 2498: PDIST	pdistn	%d20, %d48, %d18
	.word 0xbfefc000  ! 2499: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xe41fe100  ! 2500: LDD_I	ldd	[%r31 + 0x0100], %r18
	.word 0xa7b447d0  ! 2501: PDIST	pdistn	%d48, %d16, %d50
	.word 0xbfe7c000  ! 2501: SAVE_R	save	%r31, %r0, %r31
	.word 0xa7b08706  ! 2502: FMULD8SUx16	fmuld8ulx16	%f2, %f6, %d50
	.word 0xe707e070  ! 2503: LDF_I	ld	[%r31, 0x0070], %f19
	.word 0x93a489b4  ! 2504: FDIVs	fdivs	%f18, %f20, %f9
	.word 0x93b1c711  ! 2505: FMULD8SUx16	fmuld8ulx16	%f7, %f17, %d40
	.word 0xd307e080  ! 2505: LDF_I	ld	[%r31, 0x0080], %f9
	.word 0xd21fe1a0  ! 2506: LDD_I	ldd	[%r31 + 0x01a0], %r9
	.word 0x00800001  ! 2507: BN	bn  	<label_0x1>
	.word 0x91b107d3  ! 2508: PDIST	pdistn	%d4, %d50, %d8
	.word 0xd01fe170  ! 2509: LDD_I	ldd	[%r31 + 0x0170], %r8
	.word 0xa7b507c6  ! 2509: PDIST	pdistn	%d20, %d6, %d50
	.word 0xe61fe070  ! 2510: LDD_I	ldd	[%r31 + 0x0070], %r19
	.word 0x00800001  ! 2511: BN	bn  	<label_0x1>
	.word 0x95b040b2  ! 2512: EDGE16N	edge16n	%r1, %r18, %r10
	.word 0xd41fe0c0  ! 2513: LDD_I	ldd	[%r31 + 0x00c0], %r10
	.word 0x00800001  ! 2513: BN	bn  	<label_0x1>
    nop
    nop
    mov 63, %g1
loopz_20_565:
    ldstub [%r31+0xb0], %r2
    brnz,a %r1, loopz_20_565
    dec %r1
	.word 0xa7b18713  ! 2514: FMULD8SUx16	fmuld8ulx16	%f6, %f19, %d50
	.word 0xe7e7e000  ! 2515: CASA_R	casa	[%r31] %asi, %r0, %r19
	.word 0x97a189d2  ! 2516: FDIVd	fdivd	%f6, %f18, %f42
	.word 0xa3b10710  ! 2517: FMULD8SUx16	fmuld8ulx16	%f4, %f16, %d48
	.word 0x99a4c9c7  ! 2517: FDIVd	fdivd	%f50, %f38, %f12
	.word 0xa3b18cf4  ! 2518: FNOT2S	fandnot1s	%f20, %f17
	.word 0xe33fe180  ! 2519: STDF_I	std	%f17, [0x0180, %r31]
	.word 0xa5b4c714  ! 2520: FMULD8SUx16	fmuld8ulx16	%f19, %f20, %d18
	.word 0xa3b0ccf2  ! 2521: FNOT2S	fandnot1s	%f18, %f17
	.word 0x9f8021b0  ! 2521: SIR	sir	0x01b0
	sethi %hi(0x3cb40000), %r21
	stxa %r27, [%r21]0x57
	.word 0x93b4cce3  ! 2522: FNOT2S	fandnot1s	%f3, %f9
	.word 0x24cfc001  ! 2523: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xd21fe170  ! 2524: LDD_I	ldd	[%r31 + 0x0170], %r9
	.word 0x97b20cf3  ! 2525: FNOT2S	fandnot1s	%f19, %f11
	.word 0xd61fe1e0  ! 2525: LDD_I	ldd	[%r31 + 0x01e0], %r11
	.word 0x93b20ce9  ! 2526: FNOT2S	fandnot1s	%f9, %f9
	.word 0xbfe7c000  ! 2527: SAVE_R	save	%r31, %r0, %r31
	.word 0x9bb207d4  ! 2528: PDIST	pdistn	%d8, %d20, %d44
	.word 0x91b44cf0  ! 2529: FNOT2S	fandnot1s	%f16, %f8
	.word 0xa7b4c7d1  ! 2529: PDIST	pdistn	%d50, %d48, %d50
    nop
    nop
    mov 7, %g1
loopb_20_570:
    ldstub [%r31+32], %r2
    brnz,a %r1, loopb_20_570
    dec %r1
	.word 0xa7b407d2  ! 2530: PDIST	pdistn	%d16, %d18, %d50
	.word 0xe19fdc40  ! 2531: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x97b44710  ! 2532: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d42
	.word 0x91b047d3  ! 2533: PDIST	pdistn	%d32, %d50, %d8
	.word 0xe1bfda60  ! 2533: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa9b140ad  ! 2534: EDGE16N	edge16n	%r5, %r13, %r20
	.word 0xc1bfde00  ! 2535: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x99b04701  ! 2536: FMULD8SUx16	fmuld8ulx16	%f1, %f1, %d12
	.word 0x93b180a4  ! 2537: EDGE16N	edge16n	%r6, %r4, %r9
	.word 0x20800001  ! 2537: BN	bn,a	<label_0x1>
	.word 0x9bb4c0b1  ! 2538: EDGE16N	edge16n	%r19, %r17, %r13
	.word 0xbfe7c000  ! 2539: SAVE_R	save	%r31, %r0, %r31
	.word 0xda1fe1c0  ! 2540: LDD_I	ldd	[%r31 + 0x01c0], %r13
	.word 0xa5b4c0b2  ! 2541: EDGE16N	edge16n	%r19, %r18, %r18
	.word 0xe41fe1d0  ! 2541: LDD_I	ldd	[%r31 + 0x01d0], %r18
	.word 0x97b347c4  ! 2542: PDIST	pdistn	%d44, %d4, %d42
	.word 0x24cfc001  ! 2543: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xa3a449ad  ! 2544: FDIVs	fdivs	%f17, %f13, %f17
	.word 0x93b147c9  ! 2545: PDIST	pdistn	%d36, %d40, %d40
	.word 0xa3a0c9a2  ! 2545: FDIVs	fdivs	%f3, %f2, %f17
	.word 0x99b4c7c2  ! 2546: PDIST	pdistn	%d50, %d2, %d12
	.word 0xd907e030  ! 2547: LDF_I	ld	[%r31, 0x0030], %f12
	.word 0xd81fe080  ! 2548: LDD_I	ldd	[%r31 + 0x0080], %r12
	.word 0x95b4c7d2  ! 2549: PDIST	pdistn	%d50, %d18, %d10
	.word 0xd507e060  ! 2549: LDF_I	ld	[%r31, 0x0060], %f10
	.word 0xa3b50713  ! 2550: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d48
	.word 0xe1bfde20  ! 2551: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa5b50705  ! 2552: FMULD8SUx16	fmuld8ulx16	%f20, %f5, %d18
	.word 0x93b4870b  ! 2553: FMULD8SUx16	fmuld8ulx16	%f18, %f11, %d40
	.word 0xc1bfdd40  ! 2553: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa3a109a4  ! 2554: FDIVs	fdivs	%f4, %f4, %f17
	.word 0xe307e0f0  ! 2555: LDF_I	ld	[%r31, 0x00f0], %f17
	.word 0xa9b447d1  ! 2556: PDIST	pdistn	%d48, %d48, %d20
	.word 0x91a349b0  ! 2557: FDIVs	fdivs	%f13, %f16, %f8
	.word 0xd107e0a0  ! 2557: LDF_I	ld	[%r31, 0x00a0], %f8
	.word 0xa5a249a6  ! 2558: FDIVs	fdivs	%f9, %f6, %f18
	.word 0xa1b7c7c0  ! 2559: PDIST	pdistn	%d62, %d0, %d16
	.word 0x93b28cf1  ! 2560: FNOT2S	fandnot1s	%f17, %f9
	.word 0x91a449a4  ! 2561: FDIVs	fdivs	%f17, %f4, %f8
	.word 0x20800001  ! 2561: BN	bn,a	<label_0x1>
    nop
    nop
    mov 35, %g1
loopb_20_579:
    ldstub [%r31+0x90], %r2
    brnz,a %r1, loopb_20_579
    dec %r1
	.word 0xa9a509c6  ! 2562: FDIVd	fdivd	%f20, %f6, %f20
	.word 0xe1bfda00  ! 2563: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x95b1c7d0  ! 2564: PDIST	pdistn	%d38, %d16, %d10
	.word 0xa5a309d1  ! 2565: FDIVd	fdivd	%f12, %f48, %f18
	.word 0xa1b2c7c7  ! 2565: PDIST	pdistn	%d42, %d38, %d16
	.word 0x95b28711  ! 2566: FMULD8SUx16	fmuld8ulx16	%f10, %f17, %d10
	.word 0x87afca40  ! 2567: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x99b500b4  ! 2568: EDGE16N	edge16n	%r20, %r20, %r12
	.word 0xa7b4870b  ! 2569: FMULD8SUx16	fmuld8ulx16	%f18, %f11, %d50
	.word 0x9bb500b1  ! 2569: EDGE16N	edge16n	%r20, %r17, %r13
	.word 0xda1fe070  ! 2570: LDD_I	ldd	[%r31 + 0x0070], %r13
	.word 0xc19fdb20  ! 2571: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa7a409c8  ! 2572: FDIVd	fdivd	%f16, %f8, %f50
	.word 0xe61fe140  ! 2573: LDD_I	ldd	[%r31 + 0x0140], %r19
	.word 0xa7a189c4  ! 2573: FDIVd	fdivd	%f6, %f4, %f50
	.word 0x91b4c712  ! 2574: FMULD8SUx16	fmuld8ulx16	%f19, %f18, %d8
	.word 0xbfefc000  ! 2575: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x95b44ce6  ! 2576: FNOT2S	fandnot1s	%f6, %f10
	.word 0x91b2c710  ! 2577: FMULD8SUx16	fmuld8ulx16	%f11, %f16, %d8
	.word 0x93b4ccf3  ! 2577: FNOT2S	fandnot1s	%f19, %f9
	.word 0x95b40cec  ! 2578: FNOT2S	fandnot1s	%f12, %f10
	.word 0xd51fe170  ! 2579: LDDF_I	ldd	[%r31, 0x0170], %f10
	.word 0xa7b500b3  ! 2580: EDGE16N	edge16n	%r20, %r19, %r19
	.word 0x91b48ce5  ! 2581: FNOT2S	fandnot1s	%f5, %f8
	.word 0xd11fe060  ! 2581: LDDF_I	ldd	[%r31, 0x0060], %f8
	.word 0xa1b4c7c5  ! 2582: PDIST	pdistn	%d50, %d36, %d16
	.word 0xbfefc000  ! 2583: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x93b4470b  ! 2584: FMULD8SUx16	fmuld8ulx16	%f17, %f11, %d40
	.word 0x99b107c2  ! 2585: PDIST	pdistn	%d4, %d2, %d12
	.word 0xbfefc000  ! 2585: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa7a2c9c9  ! 2586: FDIVd	fdivd	%f42, %f40, %f50
	.word 0xa1b7c7c0  ! 2587: PDIST	pdistn	%d62, %d0, %d16
	.word 0x95b4c0ad  ! 2588: EDGE16N	edge16n	%r19, %r13, %r10
	.word 0xa1a489d0  ! 2589: FDIVd	fdivd	%f18, %f16, %f16
	.word 0xa1b7c7c0  ! 2589: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa1b40708  ! 2590: FMULD8SUx16	fmuld8ulx16	%f16, %f8, %d16
	.word 0xc1bfdb20  ! 2591: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x97b0cce7  ! 2592: FNOT2S	fandnot1s	%f7, %f11
	.word 0x93b28707  ! 2593: FMULD8SUx16	fmuld8ulx16	%f10, %f7, %d40
	.word 0x95b24cf3  ! 2593: FNOT2S	fandnot1s	%f19, %f10
	.word 0x9ba109a6  ! 2594: FDIVs	fdivs	%f4, %f6, %f13
	.word 0xc3efe150  ! 2595: PREFETCHA_I	prefetcha	[%r31, + 0x0150] %asi, #one_read
	.word 0xa1b4c7d3  ! 2596: PDIST	pdistn	%d50, %d50, %d16
	.word 0xa1a4c9b3  ! 2597: FDIVs	fdivs	%f19, %f19, %f16
	.word 0xe01fe0f0  ! 2597: LDD_I	ldd	[%r31 + 0x00f0], %r16
	.word 0xa3b307c8  ! 2598: PDIST	pdistn	%d12, %d8, %d48
	.word 0xc3efe1d0  ! 2599: PREFETCHA_I	prefetcha	[%r31, + 0x01d0] %asi, #one_read
	.word 0x93a449b0  ! 2600: FDIVs	fdivs	%f17, %f16, %f9
	.word 0x95b147d3  ! 2601: PDIST	pdistn	%d36, %d50, %d10
	.word 0xa5a449a4  ! 2601: FDIVs	fdivs	%f17, %f4, %f18
    nop
    nop
    mov 7, %g1
loopb_20_587:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopb_20_587
    dec %r1
	.word 0xa9b107cd  ! 2602: PDIST	pdistn	%d4, %d44, %d20
	.word 0xc19fdd40  ! 2603: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x97b080b4  ! 2604: EDGE16N	edge16n	%r2, %r20, %r11
	.word 0x9bb447d3  ! 2605: PDIST	pdistn	%d48, %d50, %d44
	.word 0xc1bfdf00  ! 2605: STDFA_R	stda	%f0, [%r0, %r31]
    nop
    nop
    mov 31, %g1
loopb_20_589:
    ldstub [%r31+0x90], %r2
    brnz,a %r1, loopb_20_589
    dec %r1
	.word 0x91b400b4  ! 2606: EDGE16N	edge16n	%r16, %r20, %r8
	.word 0xe1bfda00  ! 2607: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x97b40ceb  ! 2608: FNOT2S	fandnot1s	%f11, %f11
	.word 0x9bb400a8  ! 2609: EDGE16N	edge16n	%r16, %r8, %r13
	.word 0x9bb4ccea  ! 2609: FNOT2S	fandnot1s	%f10, %f13
	.word 0x9bb2c713  ! 2610: FMULD8SUx16	fmuld8ulx16	%f11, %f19, %d44
	.word 0x81b7c7c0  ! 2611: PDIST	pdistn	%d62, %d0, %d0
	.word 0xa1b507d4  ! 2612: PDIST	pdistn	%d20, %d20, %d16
	.word 0x97b1870c  ! 2613: FMULD8SUx16	fmuld8ulx16	%f6, %f12, %d42
	.word 0xa9b247cb  ! 2613: PDIST	pdistn	%d40, %d42, %d20
	.word 0xa9a449a3  ! 2614: FDIVs	fdivs	%f17, %f3, %f20
	.word 0x39400001  ! 2615: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x99b0c0b1  ! 2616: EDGE16N	edge16n	%r3, %r17, %r12
	.word 0xa9a049a2  ! 2617: FDIVs	fdivs	%f1, %f2, %f20
	.word 0x87afca40  ! 2617: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x97a489b4  ! 2618: FDIVs	fdivs	%f18, %f20, %f11
	.word 0x20800001  ! 2619: BN	bn,a	<label_0x1>
	.word 0xa7b48704  ! 2620: FMULD8SUx16	fmuld8ulx16	%f18, %f4, %d50
	.word 0x99a1c9b2  ! 2621: FDIVs	fdivs	%f7, %f18, %f12
	.word 0x93b48714  ! 2621: FMULD8SUx16	fmuld8ulx16	%f18, %f20, %d40
	.word 0x9bb047d4  ! 2622: PDIST	pdistn	%d32, %d20, %d44
	.word 0xdb07e0a0  ! 2623: LDF_I	ld	[%r31, 0x00a0], %f13
	.word 0xda1fe1a0  ! 2624: LDD_I	ldd	[%r31 + 0x01a0], %r13
	.word 0xa7b507d3  ! 2625: PDIST	pdistn	%d20, %d50, %d50
	.word 0xe61fe170  ! 2625: LDD_I	ldd	[%r31 + 0x0170], %r19
	.word 0x91b407c4  ! 2626: PDIST	pdistn	%d16, %d4, %d8
	.word 0xd03fe180  ! 2627: STD_I	std	%r8, [%r31 + 0x0180]
	.word 0x9ba4c9a7  ! 2628: FDIVs	fdivs	%f19, %f7, %f13
	.word 0xa3b487c6  ! 2629: PDIST	pdistn	%d18, %d6, %d48
	.word 0x24cfc001  ! 2629: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x99b30704  ! 2630: FMULD8SUx16	fmuld8ulx16	%f12, %f4, %d12
	.word 0x9f8021a0  ! 2631: SIR	sir	0x01a0
	.word 0xa9b487d4  ! 2632: PDIST	pdistn	%d18, %d20, %d20
	.word 0xa3b30714  ! 2633: FMULD8SUx16	fmuld8ulx16	%f12, %f20, %d48
	.word 0x9bb487d2  ! 2633: PDIST	pdistn	%d18, %d18, %d44
	.word 0x97b30cf2  ! 2634: FNOT2S	fandnot1s	%f18, %f11
	.word 0xd71fe160  ! 2635: LDDF_I	ldd	[%r31, 0x0160], %f11
	.word 0x99b047c8  ! 2636: PDIST	pdistn	%d32, %d8, %d12
	.word 0xa3b30ce4  ! 2637: FNOT2S	fandnot1s	%f4, %f17
	.word 0xe29fc600  ! 2637: LDDA_R	ldda	[%r31, %r0] 0x30, %r17
	.word 0x97a449d1  ! 2638: FDIVd	fdivd	%f48, %f48, %f42
	.word 0xbfe7c000  ! 2639: SAVE_R	save	%r31, %r0, %r31
	.word 0xa9b10710  ! 2640: FMULD8SUx16	fmuld8ulx16	%f4, %f16, %d20
	.word 0x93a2c9c1  ! 2641: FDIVd	fdivd	%f42, %f32, %f40
	.word 0x95b50712  ! 2641: FMULD8SUx16	fmuld8ulx16	%f20, %f18, %d10
	.word 0x93b28711  ! 2642: FMULD8SUx16	fmuld8ulx16	%f10, %f17, %d40
	.word 0xd31fe030  ! 2643: LDDF_I	ldd	[%r31, 0x0030], %f9
	.word 0x9bb500b1  ! 2644: EDGE16N	edge16n	%r20, %r17, %r13
	.word 0x97b08708  ! 2645: FMULD8SUx16	fmuld8ulx16	%f2, %f8, %d42
	.word 0xd73fe0d0  ! 2645: STDF_I	std	%f11, [0x00d0, %r31]
    nop
    nop
    mov 23, %g1
loopz_20_597:
    ldstub [%r31+0x1d0], %r2
    brnz,a %r1, loopz_20_597
    dec %r1
	.word 0xa9b407c2  ! 2646: PDIST	pdistn	%d16, %d2, %d20
	.word 0xc32fe0b0  ! 2647: STXFSR_I	st-sfr	%f1, [0x00b0, %r31]
	.word 0x91a2c9b1  ! 2648: FDIVs	fdivs	%f11, %f17, %f8
	.word 0xa3b287c9  ! 2649: PDIST	pdistn	%d10, %d40, %d48
	.word 0x9ba289a6  ! 2649: FDIVs	fdivs	%f10, %f6, %f13
	.word 0xa3b100a2  ! 2650: EDGE16N	edge16n	%r4, %r2, %r17
	.word 0xbfe7c000  ! 2651: SAVE_R	save	%r31, %r0, %r31
	.word 0x95a489b4  ! 2652: FDIVs	fdivs	%f18, %f20, %f10
	.word 0xa3b180b3  ! 2653: EDGE16N	edge16n	%r6, %r19, %r17
	.word 0xbfefc000  ! 2653: RESTORE_R	restore	%r31, %r0, %r31
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	.word 0x97b04712  ! 2654: FMULD8SUx16	fmuld8ulx16	%f1, %f18, %d42
	.word 0x97a7c9c0  ! 2655: FDIVd	fdivd	%f62, %f0, %f42
	.word 0xd61fe120  ! 2656: LDD_I	ldd	[%r31 + 0x0120], %r11
	.word 0x9bb44712  ! 2657: FMULD8SUx16	fmuld8ulx16	%f17, %f18, %d44
	.word 0xda1fe170  ! 2657: LDD_I	ldd	[%r31 + 0x0170], %r13
	.word 0x91a049b3  ! 2658: FDIVs	fdivs	%f1, %f19, %f8
	.word 0xc3efe030  ! 2659: PREFETCHA_I	prefetcha	[%r31, + 0x0030] %asi, #one_read
	.word 0xa9b08704  ! 2660: FMULD8SUx16	fmuld8ulx16	%f2, %f4, %d20
	.word 0xa1a249a3  ! 2661: FDIVs	fdivs	%f9, %f3, %f16
	.word 0x91b4c710  ! 2661: FMULD8SUx16	fmuld8ulx16	%f19, %f16, %d8
	.word 0xc0bfc2c0  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0x16
	.word 0xc0bfdc00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xe0
	.word 0xc19fdc00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xc09fde00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf0, %r0
	.word 0xc1bfda60  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fda60  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd3, %r0
	.word 0xc19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe19fdc40  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc0bfde00  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xf0
	.word 0xc09fde00  ! 1: LDDA_R	ldda	[%r31, %r0] 0xf0, %r0
	.word 0xe1bfc2c0  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x93a509d2  ! 2662: FDIVd	fdivd	%f20, %f18, %f40
	.word 0x9d97c000  ! 2663: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x93b480a6  ! 2664: EDGE16N	edge16n	%r18, %r6, %r9
	.word 0xa3a409cc  ! 2665: FDIVd	fdivd	%f16, %f12, %f48
	.word 0xbfe7c000  ! 2665: SAVE_R	save	%r31, %r0, %r31
	.word 0xe21fe190  ! 2666: LDD_I	ldd	[%r31 + 0x0190], %r17
	.word 0x9d97c000  ! 2667: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa9a089d2  ! 2668: FDIVd	fdivd	%f2, %f18, %f20
	.word 0xe81fe040  ! 2669: LDD_I	ldd	[%r31 + 0x0040], %r20
	.word 0xa5a0c9d4  ! 2669: FDIVd	fdivd	%f34, %f20, %f18
	.word 0xc1bfdf00  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xc09fc3e0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1f, %r0
	.word 0xe09fdd40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xea, %r16
	.word 0xc1bfdb40  ! 1: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe09fdb20  ! 1: LDDA_R	ldda	[%r31, %r0] 0xd9, %r16
	.word 0xe1bfdb20  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe19fda00  ! 1: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa1b4ccf0  ! 2670: FNOT2S	fandnot1s	%f16, %f16
	.word 0xe107e1e0  ! 2671: LDF_I	ld	[%r31, 0x01e0], %f16
	.word 0xa3a4c9cd  ! 2672: FDIVd	fdivd	%f50, %f44, %f48
	.word 0xa5b50ceb  ! 2673: FNOT2S	fandnot1s	%f11, %f18
	.word 0xa9a089c7  ! 2673: FDIVd	fdivd	%f2, %f38, %f20
	.word 0x97b4c0a5  ! 2674: EDGE16N	edge16n	%r19, %r5, %r11
	.word 0xd707e050  ! 2675: LDF_I	ld	[%r31, 0x0050], %f11
	.word 0x93b407d0  ! 2676: PDIST	pdistn	%d16, %d16, %d40
	.word 0xa1b200ad  ! 2677: EDGE16N	edge16n	%r8, %r13, %r16
	.word 0xe107e000  ! 2677: LDF_I	ld	[%r31, 0x0000], %f16
	.word 0x95b34706  ! 2678: FMULD8SUx16	fmuld8ulx16	%f13, %f6, %d10
	.word 0xbfe7c000  ! 2679: SAVE_R	save	%r31, %r0, %r31
	.word 0xa5b407c1  ! 2680: PDIST	pdistn	%d16, %d32, %d18
	.word 0xa5b10709  ! 2681: FMULD8SUx16	fmuld8ulx16	%f4, %f9, %d18
	.word 0x93b447d4  ! 2681: PDIST	pdistn	%d48, %d20, %d40
	.word 0x97a089b2  ! 2682: FDIVs	fdivs	%f2, %f18, %f11
	.word 0xd69fdf00  ! 2683: LDDA_R	ldda	[%r31, %r0] 0xf8, %r11
	.word 0xa5b2c0a3  ! 2684: EDGE16N	edge16n	%r11, %r3, %r18
	.word 0xa1a1c9a7  ! 2685: FDIVs	fdivs	%f7, %f7, %f16
	.word 0x95b080a3  ! 2685: EDGE16N	edge16n	%r2, %r3, %r10
    nop
    nop
    mov 19, %g1
loopb_20_605:
    ldstub [%r31+0xf0], %r2
    brnz,a %r1, loopb_20_605
    dec %r1
	.word 0xa5a4c9d0  ! 2686: FDIVd	fdivd	%f50, %f16, %f18
	.word 0xe1bfde00  ! 2687: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x91a1c9b2  ! 2688: FDIVs	fdivs	%f7, %f18, %f8
	.word 0x91a509c3  ! 2689: FDIVd	fdivd	%f20, %f34, %f8
	.word 0xc19fdc00  ! 2689: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x97a409d4  ! 2690: FDIVd	fdivd	%f16, %f20, %f42
	.word 0xd707e0c0  ! 2691: LDF_I	ld	[%r31, 0x00c0], %f11
	.word 0xd61fe030  ! 2692: LDD_I	ldd	[%r31 + 0x0030], %r11
	.word 0x95a489d3  ! 2693: FDIVd	fdivd	%f18, %f50, %f10
	.word 0xd507e070  ! 2693: LDF_I	ld	[%r31, 0x0070], %f10
	.word 0x9ba0c9b2  ! 2694: FDIVs	fdivs	%f3, %f18, %f13
	.word 0xdb07e1f0  ! 2695: LDF_I	ld	[%r31, 0x01f0], %f13
	.word 0xa3b24cf3  ! 2696: FNOT2S	fandnot1s	%f19, %f17
	.word 0x97a489b1  ! 2697: FDIVs	fdivs	%f18, %f17, %f11
	.word 0xd707e020  ! 2697: LDF_I	ld	[%r31, 0x0020], %f11
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	.word 0x97b4c7c8  ! 2698: PDIST	pdistn	%d50, %d8, %d42
	.word 0xc32fe180  ! 2699: STXFSR_I	st-sfr	%f1, [0x0180, %r31]
	.word 0xa9b4c0b3  ! 2700: EDGE16N	edge16n	%r19, %r19, %r20
	.word 0x91b407d2  ! 2701: PDIST	pdistn	%d16, %d18, %d8
	.word 0xa3b500b2  ! 2701: EDGE16N	edge16n	%r20, %r18, %r17
	.word 0xa5b48cf1  ! 2702: FNOT2S	fandnot1s	%f17, %f18
	.word 0xe19fde00  ! 2703: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x97b34ce3  ! 2704: FNOT2S	fandnot1s	%f3, %f11
	.word 0x99b44cec  ! 2705: FNOT2S	fandnot1s	%f12, %f12
	.word 0xe19fda00  ! 2705: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xd41fe070  ! 2706: LDD_I	ldd	[%r31 + 0x0070], %r10
	.word 0x00800001  ! 2707: BN	bn  	<label_0x1>
	.word 0x91a409d2  ! 2708: FDIVd	fdivd	%f16, %f18, %f8
	.word 0xd01fe0a0  ! 2709: LDD_I	ldd	[%r31 + 0x00a0], %r8
	.word 0x95a489d3  ! 2709: FDIVd	fdivd	%f18, %f50, %f10
    nop
    nop
    mov 7, %g1
loopz_20_611:
    ldstub [%r31+0x1e0], %r2
    brnz,a %r1, loopz_20_611
    dec %r1
	.word 0x93b487d2  ! 2710: PDIST	pdistn	%d18, %d18, %d40
	.word 0xd21fe0c0  ! 2711: LDD_I	ldd	[%r31 + 0x00c0], %r9
	.word 0x97b08710  ! 2712: FMULD8SUx16	fmuld8ulx16	%f2, %f16, %d42
	.word 0xa1b447c2  ! 2713: PDIST	pdistn	%d48, %d2, %d16
	.word 0x9bb40708  ! 2713: FMULD8SUx16	fmuld8ulx16	%f16, %f8, %d44
	.word 0xa9b107c8  ! 2714: PDIST	pdistn	%d4, %d8, %d20
	.word 0xe907e110  ! 2715: LDF_I	ld	[%r31, 0x0110], %f20
	.word 0x93b24ce9  ! 2716: FNOT2S	fandnot1s	%f9, %f9
	.word 0x91b487c2  ! 2717: PDIST	pdistn	%d18, %d2, %d8
	.word 0xd107e080  ! 2717: LDF_I	ld	[%r31, 0x0080], %f8
	.word 0xd01fe080  ! 2718: LDD_I	ldd	[%r31 + 0x0080], %r8
	.word 0xd107e120  ! 2719: LDF_I	ld	[%r31, 0x0120], %f8
	.word 0x91b08ce7  ! 2720: FNOT2S	fandnot1s	%f7, %f8
	.word 0xd01fe070  ! 2721: LDD_I	ldd	[%r31 + 0x0070], %r8
	.word 0x99b0ccf1  ! 2721: FNOT2S	fandnot1s	%f17, %f12
	.word 0xa5b50703  ! 2722: FMULD8SUx16	fmuld8ulx16	%f20, %f3, %d18
	.word 0x04cfc001  ! 2723: BRLEZ	brlez,pt  	%r31,<label_0xfc001>
	.word 0xa5b48ced  ! 2724: FNOT2S	fandnot1s	%f13, %f18
	.word 0x95b4470d  ! 2725: FMULD8SUx16	fmuld8ulx16	%f17, %f13, %d10
	.word 0x91b30ce7  ! 2725: FNOT2S	fandnot1s	%f7, %f8
    nop
    nop
    mov 7, %g1
loopz_20_615:
    ldstub [%r31+0xd0], %r2
    brnz,a %r1, loopz_20_615
    dec %r1
	.word 0x97b0c7d2  ! 2726: PDIST	pdistn	%d34, %d18, %d42
	.word 0xc32fe050  ! 2727: STXFSR_I	st-sfr	%f1, [0x0050, %r31]
	.word 0xa7b140ad  ! 2728: EDGE16N	edge16n	%r5, %r13, %r19
	.word 0x9bb207d4  ! 2729: PDIST	pdistn	%d8, %d20, %d44
	.word 0xa7b0c0b2  ! 2729: EDGE16N	edge16n	%r3, %r18, %r19
	.word 0xe61fe170  ! 2730: LDD_I	ldd	[%r31 + 0x0170], %r19
	.word 0xbfe7c000  ! 2731: SAVE_R	save	%r31, %r0, %r31
	.word 0x91b44ce2  ! 2732: FNOT2S	fandnot1s	%f2, %f8
	.word 0xd01fe0b0  ! 2733: LDD_I	ldd	[%r31 + 0x00b0], %r8
	.word 0xbfe7c000  ! 2733: SAVE_R	save	%r31, %r0, %r31
	.word 0x99b040ab  ! 2734: EDGE16N	edge16n	%r1, %r11, %r12
	.word 0x04cfc001  ! 2735: BRLEZ	brlez,pt  	%r31,<label_0xfc001>
	.word 0xd81fe160  ! 2736: LDD_I	ldd	[%r31 + 0x0160], %r12
	.word 0xa1b480a8  ! 2737: EDGE16N	edge16n	%r18, %r8, %r16
	.word 0xe01fe060  ! 2737: LDD_I	ldd	[%r31 + 0x0060], %r16
	.word 0xa3a4c9a9  ! 2738: FDIVs	fdivs	%f19, %f9, %f17
	.word 0x87afca40  ! 2739: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xa3a2c9a6  ! 2740: FDIVs	fdivs	%f11, %f6, %f17
	.word 0x9ba509b0  ! 2741: FDIVs	fdivs	%f20, %f16, %f13
	.word 0xa5a4c9b4  ! 2741: FDIVs	fdivs	%f19, %f20, %f18
	.word 0xa7a509cb  ! 2742: FDIVd	fdivd	%f20, %f42, %f50
	.word 0xe707e0d0  ! 2743: LDF_I	ld	[%r31, 0x00d0], %f19
	.word 0xa9b40705  ! 2744: FMULD8SUx16	fmuld8ulx16	%f16, %f5, %d20
	.word 0xa1a409d2  ! 2745: FDIVd	fdivd	%f16, %f18, %f16
	.word 0x95b50711  ! 2745: FMULD8SUx16	fmuld8ulx16	%f20, %f17, %d10
	.word 0x95b187d4  ! 2746: PDIST	pdistn	%d6, %d20, %d10
	.word 0x95b7c4c0  ! 2747: FCMPNE32	fcmpne32	%d62, %d0, %r10
	.word 0xd41fe050  ! 2748: LDD_I	ldd	[%r31 + 0x0050], %r10
	.word 0x9bb147d2  ! 2749: PDIST	pdistn	%d36, %d18, %d44
	.word 0xda1fe000  ! 2749: LDD_I	ldd	[%r31 + 0x0000], %r13
	.word 0xd21fe0c0  ! 2750: LDD_I	ldd	[%r31 + 0x00c0], %r9
	.word 0xe1bfdb20  ! 2751: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9bb48710  ! 2752: FMULD8SUx16	fmuld8ulx16	%f18, %f16, %d44
	.word 0xda1fe110  ! 2753: LDD_I	ldd	[%r31 + 0x0110], %r13
	.word 0xc1bfdb20  ! 2753: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa5b0cce7  ! 2754: FNOT2S	fandnot1s	%f7, %f18
	.word 0xbfefc000  ! 2755: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9ba449b2  ! 2756: FDIVs	fdivs	%f17, %f18, %f13
	.word 0x9bb10ce1  ! 2757: FNOT2S	fandnot1s	%f1, %f13
	.word 0x9ba409a6  ! 2757: FDIVs	fdivs	%f16, %f6, %f13
	.word 0xa3b440ac  ! 2758: EDGE16N	edge16n	%r17, %r12, %r17
	.word 0xe21fe160  ! 2759: LDD_I	ldd	[%r31 + 0x0160], %r17
	.word 0x93a149c6  ! 2760: FDIVd	fdivd	%f36, %f6, %f40
	.word 0xa3b200b4  ! 2761: EDGE16N	edge16n	%r8, %r20, %r17
	.word 0x95a249c9  ! 2761: FDIVd	fdivd	%f40, %f40, %f10
	.word 0xa5b44ce8  ! 2762: FNOT2S	fandnot1s	%f8, %f18
	.word 0x9d97c000  ! 2763: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa3b50cf2  ! 2764: FNOT2S	fandnot1s	%f18, %f17
	.word 0x99b1cce4  ! 2765: FNOT2S	fandnot1s	%f4, %f12
	.word 0xa3b0cce2  ! 2765: FNOT2S	fandnot1s	%f2, %f17
	.word 0xe01fe0f0  ! 2766: LDD_I	ldd	[%r31 + 0x00f0], %r16
	.word 0xe107e070  ! 2767: LDF_I	ld	[%r31, 0x0070], %f16
	.word 0xa3b34cf1  ! 2768: FNOT2S	fandnot1s	%f17, %f17
	.word 0xe21fe030  ! 2769: LDD_I	ldd	[%r31 + 0x0030], %r17
	.word 0xe307e1e0  ! 2769: LDF_I	ld	[%r31, 0x01e0], %f17
	.word 0xa3b44cf4  ! 2770: FNOT2S	fandnot1s	%f20, %f17
	.word 0xa1b7c7c0  ! 2771: PDIST	pdistn	%d62, %d0, %d16
	.word 0xe21fe030  ! 2772: LDD_I	ldd	[%r31 + 0x0030], %r17
	.word 0xa9b30cf1  ! 2773: FNOT2S	fandnot1s	%f17, %f20
	.word 0xe19fde20  ! 2773: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x93b34cf1  ! 2774: FNOT2S	fandnot1s	%f17, %f9
	.word 0x39400001  ! 2775: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x9ba249d3  ! 2776: FDIVd	fdivd	%f40, %f50, %f44
	.word 0x9bb14cf2  ! 2777: FNOT2S	fandnot1s	%f18, %f13
	.word 0x95a189d1  ! 2777: FDIVd	fdivd	%f6, %f48, %f10
	.word 0xd41fe1d0  ! 2778: LDD_I	ldd	[%r31 + 0x01d0], %r10
	.word 0xc19fdb40  ! 2779: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa1b407c2  ! 2780: PDIST	pdistn	%d16, %d2, %d16
	.word 0xe01fe0e0  ! 2781: LDD_I	ldd	[%r31 + 0x00e0], %r16
	.word 0x20800001  ! 2781: BN	bn,a	<label_0x1>
	.word 0xa9b487d2  ! 2782: PDIST	pdistn	%d18, %d18, %d20
	.word 0x87afca40  ! 2783: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x9bb50712  ! 2784: FMULD8SUx16	fmuld8ulx16	%f20, %f18, %d44
	.word 0x95b0c7d0  ! 2785: PDIST	pdistn	%d34, %d16, %d10
	.word 0xa3b30704  ! 2785: FMULD8SUx16	fmuld8ulx16	%f12, %f4, %d48
	.word 0xa3b44713  ! 2786: FMULD8SUx16	fmuld8ulx16	%f17, %f19, %d48
	.word 0xe307e1f0  ! 2787: LDF_I	ld	[%r31, 0x01f0], %f17
	.word 0xe21fe0a0  ! 2788: LDD_I	ldd	[%r31 + 0x00a0], %r17
	.word 0xa5b34709  ! 2789: FMULD8SUx16	fmuld8ulx16	%f13, %f9, %d18
	.word 0xe41fe080  ! 2789: LDD_I	ldd	[%r31 + 0x0080], %r18
	.word 0x93b0c712  ! 2790: FMULD8SUx16	fmuld8ulx16	%f3, %f18, %d40
	.word 0xd31fe130  ! 2791: LDDF_I	ldd	[%r31, 0x0130], %f9
	.word 0xa1b340b4  ! 2792: EDGE16N	edge16n	%r13, %r20, %r16
	.word 0xa1b10713  ! 2793: FMULD8SUx16	fmuld8ulx16	%f4, %f19, %d16
	.word 0xa3b080a8  ! 2793: EDGE16N	edge16n	%r2, %r8, %r17
	.word 0xa1b18cf3  ! 2794: FNOT2S	fandnot1s	%f19, %f16
	.word 0xc36fe1c0  ! 2795: PREFETCH_I	prefetch	[%r31 + 0x01c0], #one_read
	.word 0x95b4cceb  ! 2796: FNOT2S	fandnot1s	%f11, %f10
	.word 0x97b08cf2  ! 2797: FNOT2S	fandnot1s	%f18, %f11
	.word 0x97a7c9c0  ! 2797: FDIVd	fdivd	%f62, %f0, %f42
	.word 0xd61fe100  ! 2798: LDD_I	ldd	[%r31 + 0x0100], %r11
	.word 0xd707e030  ! 2799: LDF_I	ld	[%r31, 0x0030], %f11
	.word 0xd61fe010  ! 2800: LDD_I	ldd	[%r31 + 0x0010], %r11
	.word 0xd61fe120  ! 2801: LDD_I	ldd	[%r31 + 0x0120], %r11
	.word 0xd707e020  ! 2801: LDF_I	ld	[%r31, 0x0020], %f11
	.word 0xa5a509cc  ! 2802: FDIVd	fdivd	%f20, %f12, %f18
	.word 0xe507e090  ! 2803: LDF_I	ld	[%r31, 0x0090], %f18
	.word 0xe41fe010  ! 2804: LDD_I	ldd	[%r31 + 0x0010], %r18
	.word 0x9ba089cd  ! 2805: FDIVd	fdivd	%f2, %f44, %f44
	.word 0xda1fe140  ! 2805: LDD_I	ldd	[%r31 + 0x0140], %r13
	.word 0x93b48704  ! 2806: FMULD8SUx16	fmuld8ulx16	%f18, %f4, %d40
	.word 0xd307e060  ! 2807: LDF_I	ld	[%r31, 0x0060], %f9
	.word 0x93b4c7c8  ! 2808: PDIST	pdistn	%d50, %d8, %d40
	.word 0xa5b48704  ! 2809: FMULD8SUx16	fmuld8ulx16	%f18, %f4, %d18
	.word 0xa1b1c7d4  ! 2809: PDIST	pdistn	%d38, %d20, %d16
    nop
    nop
    mov 23, %g1
loopb_20_629:
    ldstub [%r31+16], %r2
    brnz,a %r1, loopb_20_629
    dec %r1
	.word 0xa1b347d1  ! 2810: PDIST	pdistn	%d44, %d48, %d16
	.word 0xc19fdc00  ! 2811: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x95b0cce6  ! 2812: FNOT2S	fandnot1s	%f6, %f10
	.word 0x97b307c9  ! 2813: PDIST	pdistn	%d12, %d40, %d42
	.word 0xe19fde00  ! 2813: LDDFA_R	ldda	[%r31, %r0], %f16
    nop
    nop
    mov 35, %g1
loopb_20_631:
    ldstub [%r31+0x50], %r2
    brnz,a %r1, loopb_20_631
    dec %r1
	.word 0x91b0870b  ! 2814: FMULD8SUx16	fmuld8ulx16	%f2, %f11, %d8
	.word 0xc19fdc40  ! 2815: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa3a109cd  ! 2816: FDIVd	fdivd	%f4, %f44, %f48
	.word 0x95b44708  ! 2817: FMULD8SUx16	fmuld8ulx16	%f17, %f8, %d10
	.word 0xe1bfdc40  ! 2817: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x97b44710  ! 2818: FMULD8SUx16	fmuld8ulx16	%f17, %f16, %d42
	.word 0xbfefc000  ! 2819: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xd61fe110  ! 2820: LDD_I	ldd	[%r31 + 0x0110], %r11
	.word 0x97b04702  ! 2821: FMULD8SUx16	fmuld8ulx16	%f1, %f2, %d42
	.word 0xbfe7c000  ! 2821: SAVE_R	save	%r31, %r0, %r31
	.word 0x97b4c0ad  ! 2822: EDGE16N	edge16n	%r19, %r13, %r11
	.word 0xc19fda60  ! 2823: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x91b207c4  ! 2824: PDIST	pdistn	%d8, %d4, %d8
	.word 0xa1b040a6  ! 2825: EDGE16N	edge16n	%r1, %r6, %r16
	.word 0xc19fc3e0  ! 2825: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x91b0470c  ! 2826: FMULD8SUx16	fmuld8ulx16	%f1, %f12, %d8
	.word 0xe1bfda60  ! 2827: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x99a1c9d1  ! 2828: FDIVd	fdivd	%f38, %f48, %f12
	.word 0x99b4870a  ! 2829: FMULD8SUx16	fmuld8ulx16	%f18, %f10, %d12
	.word 0xa7a289d4  ! 2829: FDIVd	fdivd	%f10, %f20, %f50
	.word 0xa9b44cf1  ! 2830: FNOT2S	fandnot1s	%f17, %f20
	.word 0x24cfc001  ! 2831: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0x99b2c710  ! 2832: FMULD8SUx16	fmuld8ulx16	%f11, %f16, %d12
	.word 0x99b0ccf2  ! 2833: FNOT2S	fandnot1s	%f18, %f12
	.word 0x39400001  ! 2833: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xd81fe1d0  ! 2834: LDD_I	ldd	[%r31 + 0x01d0], %r12
	.word 0xbfe7c000  ! 2835: SAVE_R	save	%r31, %r0, %r31
	.word 0xa3a149c8  ! 2836: FDIVd	fdivd	%f36, %f8, %f48
	.word 0xe21fe120  ! 2837: LDD_I	ldd	[%r31 + 0x0120], %r17
	.word 0xa3a109c6  ! 2837: FDIVd	fdivd	%f4, %f6, %f48
	.word 0x9bb0c0a3  ! 2838: EDGE16N	edge16n	%r3, %r3, %r13
	.word 0xda3fe190  ! 2839: STD_I	std	%r13, [%r31 + 0x0190]
	.word 0x99b1c7c1  ! 2840: PDIST	pdistn	%d38, %d32, %d12
	.word 0xa9b180a7  ! 2841: EDGE16N	edge16n	%r6, %r7, %r20
	.word 0xe897c280  ! 2841: LDUHA_R	lduha	[%r31, %r0] 0x14, %r20
	.word 0xa3b280b3  ! 2842: EDGE16N	edge16n	%r10, %r19, %r17
	.word 0xe307e150  ! 2843: LDF_I	ld	[%r31, 0x0150], %f17
	.word 0xa5b480ac  ! 2844: EDGE16N	edge16n	%r18, %r12, %r18
	.word 0x9bb080aa  ! 2845: EDGE16N	edge16n	%r2, %r10, %r13
	.word 0x9bb040b0  ! 2845: EDGE16N	edge16n	%r1, %r16, %r13
	.word 0x93b48714  ! 2846: FMULD8SUx16	fmuld8ulx16	%f18, %f20, %d40
	.word 0xd307e0c0  ! 2847: LDF_I	ld	[%r31, 0x00c0], %f9
	.word 0xa5b18cf2  ! 2848: FNOT2S	fandnot1s	%f18, %f18
	.word 0xa3b24702  ! 2849: FMULD8SUx16	fmuld8ulx16	%f9, %f2, %d48
	.word 0xe307e160  ! 2849: LDF_I	ld	[%r31, 0x0160], %f17
	.word 0x95b4c7c5  ! 2850: PDIST	pdistn	%d50, %d36, %d10
	.word 0xc36fe010  ! 2851: PREFETCH_I	prefetch	[%r31 + 0x0010], #one_read
	.word 0xd41fe1f0  ! 2852: LDD_I	ldd	[%r31 + 0x01f0], %r10
	.word 0xa5b0c7c2  ! 2853: PDIST	pdistn	%d34, %d2, %d18
	.word 0xe41fe170  ! 2853: LDD_I	ldd	[%r31 + 0x0170], %r18
    nop
    nop
    mov 43, %g1
loopb_20_638:
    ldstub [%r31+48], %r2
    brnz,a %r1, loopb_20_638
    dec %r1
	.word 0xe41fe100  ! 2854: LDD_I	ldd	[%r31 + 0x0100], %r18
	.word 0xc1bfdd40  ! 2855: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x93b1cce8  ! 2856: FNOT2S	fandnot1s	%f8, %f9
	.word 0xd21fe180  ! 2857: LDD_I	ldd	[%r31 + 0x0180], %r9
	.word 0xc19fda60  ! 2857: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x99b10ce4  ! 2858: FNOT2S	fandnot1s	%f4, %f12
	.word 0xd907e0a0  ! 2859: LDF_I	ld	[%r31, 0x00a0], %f12
	.word 0xa9b447c9  ! 2860: PDIST	pdistn	%d48, %d40, %d20
	.word 0xa7b10ce5  ! 2861: FNOT2S	fandnot1s	%f5, %f19
	.word 0x93b0c7d2  ! 2861: PDIST	pdistn	%d34, %d18, %d40
    nop
    nop
    mov 31, %g1
loopb_20_640:
    ldstub [%r31+0x1f0], %r2
    brnz,a %r1, loopb_20_640
    dec %r1
	.word 0xa7b4cce9  ! 2862: FNOT2S	fandnot1s	%f9, %f19
	.word 0xc19fc3e0  ! 2863: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa1b440b2  ! 2864: EDGE16N	edge16n	%r17, %r18, %r16
	.word 0x91b18ce3  ! 2865: FNOT2S	fandnot1s	%f3, %f8
	.word 0xa7b480b1  ! 2865: EDGE16N	edge16n	%r18, %r17, %r19
	.word 0x97a489c4  ! 2866: FDIVd	fdivd	%f18, %f4, %f42
	.word 0xd707e1d0  ! 2867: LDF_I	ld	[%r31, 0x01d0], %f11
	.word 0xa7b44cec  ! 2868: FNOT2S	fandnot1s	%f12, %f19
	.word 0xa7a089c2  ! 2869: FDIVd	fdivd	%f2, %f2, %f50
	.word 0xe707e130  ! 2869: LDF_I	ld	[%r31, 0x0130], %f19
	.word 0xa3b48704  ! 2870: FMULD8SUx16	fmuld8ulx16	%f18, %f4, %d48
	.word 0xe3e7c3c0  ! 2871: CASA_I	casa	[%r31] 0x1e, %r0, %r17
	.word 0xa3a409d1  ! 2872: FDIVd	fdivd	%f16, %f48, %f48
	.word 0x91b24701  ! 2873: FMULD8SUx16	fmuld8ulx16	%f9, %f1, %d8
	.word 0x95a189d0  ! 2873: FDIVd	fdivd	%f6, %f16, %f10
    nop
    nop
    mov 3, %g1
loopb_20_644:
    ldstub [%r31+0x170], %r2
    brnz,a %r1, loopb_20_644
    dec %r1
	.word 0xa9a489a3  ! 2874: FDIVs	fdivs	%f18, %f3, %f20
	.word 0xc1bfdb40  ! 2875: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x9bb48cf3  ! 2876: FNOT2S	fandnot1s	%f19, %f13
	.word 0x9ba4c9a4  ! 2877: FDIVs	fdivs	%f19, %f4, %f13
	.word 0xc19fde00  ! 2877: LDDFA_R	ldda	[%r31, %r0], %f0
	sethi %hi(0x3cb00000), %r21
	stxa %r27, [%r21]0x57
	.word 0xa9b2c7d1  ! 2878: PDIST	pdistn	%d42, %d48, %d20
	.word 0x9d97c000  ! 2879: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x95a409d4  ! 2880: FDIVd	fdivd	%f16, %f20, %f10
	.word 0x91b507c4  ! 2881: PDIST	pdistn	%d20, %d4, %d8
	.word 0xa7a509c1  ! 2881: FDIVd	fdivd	%f20, %f32, %f50
	.word 0xa1b34ce7  ! 2882: FNOT2S	fandnot1s	%f7, %f16
	.word 0x24cfc001  ! 2883: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xa3b24cf4  ! 2884: FNOT2S	fandnot1s	%f20, %f17
	.word 0xa7b18ce9  ! 2885: FNOT2S	fandnot1s	%f9, %f19
	.word 0x95b10cf1  ! 2885: FNOT2S	fandnot1s	%f17, %f10
	sethi %hi(0x3cb80000), %r21
	stxa %r27, [%r21]0x57
	.word 0xa7b287c9  ! 2886: PDIST	pdistn	%d10, %d40, %d50
	.word 0xc19fdf20  ! 2887: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xa1b280b4  ! 2888: EDGE16N	edge16n	%r10, %r20, %r16
	.word 0xa7b107d4  ! 2889: PDIST	pdistn	%d4, %d20, %d50
	.word 0x9bb500a6  ! 2889: EDGE16N	edge16n	%r20, %r6, %r13
	.word 0xa1a449d2  ! 2890: FDIVd	fdivd	%f48, %f18, %f16
	.word 0xe11fe1a0  ! 2891: LDDF_I	ldd	[%r31, 0x01a0], %f16
	.word 0xa5a4c9a2  ! 2892: FDIVs	fdivs	%f19, %f2, %f18
	.word 0xa7a2c9c8  ! 2893: FDIVd	fdivd	%f42, %f8, %f50
	.word 0x9ba2c9a8  ! 2893: FDIVs	fdivs	%f11, %f8, %f13
	.word 0x99a209b2  ! 2894: FDIVs	fdivs	%f8, %f18, %f12
	.word 0x24cfc001  ! 2895: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xa1b280b2  ! 2896: EDGE16N	edge16n	%r10, %r18, %r16
	.word 0xa7a449a1  ! 2897: FDIVs	fdivs	%f17, %f1, %f19
	.word 0x91b4c0b1  ! 2897: EDGE16N	edge16n	%r19, %r17, %r8
    nop
    nop
    mov 15, %g1
loopz_20_651:
    ldstub [%r31+0x160], %r2
    brnz,a %r1, loopz_20_651
    dec %r1
	.word 0x91a1c9b4  ! 2898: FDIVs	fdivs	%f7, %f20, %f8
	.word 0xd1e7e000  ! 2899: CASA_R	casa	[%r31] %asi, %r0, %r8
	.word 0xa9b1c0ac  ! 2900: EDGE16N	edge16n	%r7, %r12, %r20
	.word 0x93a2c9b4  ! 2901: FDIVs	fdivs	%f11, %f20, %f9
	.word 0xd21fc000  ! 2901: LDD_R	ldd	[%r31 + %r0], %r9
	.word 0x99b447d4  ! 2902: PDIST	pdistn	%d48, %d20, %d12
	.word 0xd93fe180  ! 2903: STDF_I	std	%f12, [0x0180, %r31]
	.word 0xa9a149b1  ! 2904: FDIVs	fdivs	%f5, %f17, %f20
	.word 0x9bb1c7d3  ! 2905: PDIST	pdistn	%d38, %d50, %d44
	.word 0x99a509b0  ! 2905: FDIVs	fdivs	%f20, %f16, %f12
	.word 0x99b4c7d1  ! 2906: PDIST	pdistn	%d50, %d48, %d12
	.word 0x99b7c4c0  ! 2907: FCMPNE32	fcmpne32	%d62, %d0, %r12
	.word 0xa1b20713  ! 2908: FMULD8SUx16	fmuld8ulx16	%f8, %f19, %d16
	.word 0xa7b487c8  ! 2909: PDIST	pdistn	%d18, %d8, %d50
	.word 0xc36fe080  ! 2909: PREFETCH_I	prefetch	[%r31 + 0x0080], #one_read
    nop
    nop
    mov 19, %g1
loopb_20_655:
    ldstub [%r31+48], %r2
    brnz,a %r1, loopb_20_655
    dec %r1
	.word 0xa7b447c9  ! 2910: PDIST	pdistn	%d48, %d40, %d50
	.word 0xc1bfdc00  ! 2911: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91b487c5  ! 2912: PDIST	pdistn	%d18, %d36, %d8
	.word 0x91b407c6  ! 2913: PDIST	pdistn	%d16, %d6, %d8
	.word 0xa3b287ca  ! 2913: PDIST	pdistn	%d10, %d10, %d48
	.word 0x99b40ce5  ! 2914: FNOT2S	fandnot1s	%f5, %f12
	.word 0xbfefc000  ! 2915: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa5a289c4  ! 2916: FDIVd	fdivd	%f10, %f4, %f18
	.word 0xa1b44cf4  ! 2917: FNOT2S	fandnot1s	%f20, %f16
	.word 0x9d97c000  ! 2917: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9bb20cf2  ! 2918: FNOT2S	fandnot1s	%f18, %f13
	.word 0xe1bfdc00  ! 2919: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa3b44701  ! 2920: FMULD8SUx16	fmuld8ulx16	%f17, %f1, %d48
	.word 0xa3b24cf4  ! 2921: FNOT2S	fandnot1s	%f20, %f17
	.word 0x20800001  ! 2921: BN	bn,a	<label_0x1>
	.word 0xe21fe1b0  ! 2922: LDD_I	ldd	[%r31 + 0x01b0], %r17
	.word 0xc19fc2c0  ! 2923: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe21fe1c0  ! 2924: LDD_I	ldd	[%r31 + 0x01c0], %r17
	.word 0xe21fe080  ! 2925: LDD_I	ldd	[%r31 + 0x0080], %r17
	.word 0xa1b7c7c0  ! 2925: PDIST	pdistn	%d62, %d0, %d16
	.word 0xa1b2c0ac  ! 2926: EDGE16N	edge16n	%r11, %r12, %r16
	.word 0xa1a7c9c0  ! 2927: FDIVd	fdivd	%f62, %f0, %f16
	.word 0x93b487d2  ! 2928: PDIST	pdistn	%d18, %d18, %d40
	.word 0xa5b280a7  ! 2929: EDGE16N	edge16n	%r10, %r7, %r18
	.word 0x9bb507d1  ! 2929: PDIST	pdistn	%d20, %d48, %d44
	.word 0xa1b287c9  ! 2930: PDIST	pdistn	%d10, %d40, %d16
	.word 0xe107e0d0  ! 2931: LDF_I	ld	[%r31, 0x00d0], %f16
	.word 0xe01fe0c0  ! 2932: LDD_I	ldd	[%r31 + 0x00c0], %r16
	.word 0x95b0c7d3  ! 2933: PDIST	pdistn	%d34, %d50, %d10
	.word 0xd41fe040  ! 2933: LDD_I	ldd	[%r31 + 0x0040], %r10
    nop
    nop
    mov 31, %g1
loopz_20_660:
    ldstub [%r31+0x190], %r2
    brnz,a %r1, loopz_20_660
    dec %r1
	.word 0xd41fe180  ! 2934: LDD_I	ldd	[%r31 + 0x0180], %r10
	.word 0xd5e7e000  ! 2935: CASA_R	casa	[%r31] %asi, %r0, %r10
	.word 0xa5a349a8  ! 2936: FDIVs	fdivs	%f13, %f8, %f18
	.word 0xe41fe1c0  ! 2937: LDD_I	ldd	[%r31 + 0x01c0], %r18
	.word 0xa3a4c9b4  ! 2937: FDIVs	fdivs	%f19, %f20, %f17
	.word 0xa1b4c0b1  ! 2938: EDGE16N	edge16n	%r19, %r17, %r16
	.word 0xa1b7c4c0  ! 2939: FCMPNE32	fcmpne32	%d62, %d0, %r16
	.word 0xa9b487c1  ! 2940: PDIST	pdistn	%d18, %d32, %d20
	.word 0xa9b500a8  ! 2941: EDGE16N	edge16n	%r20, %r8, %r20
	.word 0xa7b207c2  ! 2941: PDIST	pdistn	%d8, %d2, %d50
    nop
    nop
    mov 27, %g1
loopb_20_662:
    ldstub [%r31+0x80], %r2
    brnz,a %r1, loopb_20_662
    dec %r1
	.word 0x91b4870a  ! 2942: FMULD8SUx16	fmuld8ulx16	%f18, %f10, %d8
	.word 0xc1bfdd40  ! 2943: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xa3b200a3  ! 2944: EDGE16N	edge16n	%r8, %r3, %r17
	.word 0xa3b50713  ! 2945: FMULD8SUx16	fmuld8ulx16	%f20, %f19, %d48
	.word 0xc1bfda00  ! 2945: STDFA_R	stda	%f0, [%r0, %r31]
	sethi %hi(0x3cbc0000), %r21
	stxa %r27, [%r21]0x57
	.word 0x91b200a8  ! 2946: EDGE16N	edge16n	%r8, %r8, %r8
	.word 0xd107e060  ! 2947: LDF_I	ld	[%r31, 0x0060], %f8
	.word 0x95b280b1  ! 2948: EDGE16N	edge16n	%r10, %r17, %r10
	.word 0x95b340b0  ! 2949: EDGE16N	edge16n	%r13, %r16, %r10
	.word 0xd507e0e0  ! 2949: LDF_I	ld	[%r31, 0x00e0], %f10
    nop
    nop
    mov 31, %g1
loopz_20_664:
    ldstub [%r31+0xf0], %r2
    brnz,a %r1, loopz_20_664
    dec %r1
	.word 0xa9b147d1  ! 2950: PDIST	pdistn	%d36, %d48, %d20
	.word 0xc32fe0c0  ! 2951: STXFSR_I	st-sfr	%f1, [0x00c0, %r31]
	.word 0xa5a449ac  ! 2952: FDIVs	fdivs	%f17, %f12, %f18
	.word 0xa9b507cb  ! 2953: PDIST	pdistn	%d20, %d42, %d20
	.word 0xa3a049ad  ! 2953: FDIVs	fdivs	%f1, %f13, %f17
	.word 0x99a0c9d1  ! 2954: FDIVd	fdivd	%f34, %f48, %f12
	.word 0x9d97c000  ! 2955: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9bb280ac  ! 2956: EDGE16N	edge16n	%r10, %r12, %r13
	.word 0x95a509d0  ! 2957: FDIVd	fdivd	%f20, %f16, %f10
	.word 0x9d97c000  ! 2957: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x97b0c0b2  ! 2958: EDGE16N	edge16n	%r3, %r18, %r11
	.word 0xd707e170  ! 2959: LDF_I	ld	[%r31, 0x0170], %f11
	.word 0xa5a489a9  ! 2960: FDIVs	fdivs	%f18, %f9, %f18
	.word 0xa9b440b0  ! 2961: EDGE16N	edge16n	%r17, %r16, %r20
	.word 0xe907e160  ! 2961: LDF_I	ld	[%r31, 0x0160], %f20
    nop
    nop
    mov 63, %g1
loopb_20_668:
    ldstub [%r31+48], %r2
    brnz,a %r1, loopb_20_668
    dec %r1
	.word 0x97a509b1  ! 2962: FDIVs	fdivs	%f20, %f17, %f11
	.word 0xe1bfdd40  ! 2963: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9bb1ccf0  ! 2964: FNOT2S	fandnot1s	%f16, %f13
	.word 0xa7a449a2  ! 2965: FDIVs	fdivs	%f17, %f2, %f19
	.word 0xc1bfc3e0  ! 2965: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe61fe190  ! 2966: LDD_I	ldd	[%r31 + 0x0190], %r19
	.word 0xbfefc000  ! 2967: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xa3a249b0  ! 2968: FDIVs	fdivs	%f9, %f16, %f17
	.word 0xe21fe1b0  ! 2969: LDD_I	ldd	[%r31 + 0x01b0], %r17
	.word 0x9d97c000  ! 2969: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xa9b44ce7  ! 2970: FNOT2S	fandnot1s	%f7, %f20
	.word 0xc36fe190  ! 2971: PREFETCH_I	prefetch	[%r31 + 0x0190], #one_read
	.word 0x95b4ccf4  ! 2972: FNOT2S	fandnot1s	%f20, %f10
	.word 0xa9b40ce3  ! 2973: FNOT2S	fandnot1s	%f3, %f20
	.word 0xe9e7d000  ! 2973: CASA_I	casa	[%r31] 0x80, %r0, %r20
	.word 0xe81fe000  ! 2974: LDD_I	ldd	[%r31 + 0x0000], %r20
	.word 0xe907e1d0  ! 2975: LDF_I	ld	[%r31, 0x01d0], %f20
	.word 0x93b4c7c5  ! 2976: PDIST	pdistn	%d50, %d36, %d40
	.word 0xd21fe090  ! 2977: LDD_I	ldd	[%r31 + 0x0090], %r9
	.word 0xd307e070  ! 2977: LDF_I	ld	[%r31, 0x0070], %f9
	.word 0xa3b04714  ! 2978: FMULD8SUx16	fmuld8ulx16	%f1, %f20, %d48
	.word 0xe21fe0a0  ! 2979: LDD_I	ldd	[%r31 + 0x00a0], %r17
	.word 0x91a2c9c2  ! 2980: FDIVd	fdivd	%f42, %f2, %f8
	.word 0xa1b10709  ! 2981: FMULD8SUx16	fmuld8ulx16	%f4, %f9, %d16
	.word 0xe0dfc2e0  ! 2981: LDXA_R	ldxa	[%r31, %r0] 0x17, %r16
	.word 0xa7b080a8  ! 2982: EDGE16N	edge16n	%r2, %r8, %r19
	.word 0xe1bfdc40  ! 2983: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xe61fe180  ! 2984: LDD_I	ldd	[%r31 + 0x0180], %r19
	.word 0x9bb500b1  ! 2985: EDGE16N	edge16n	%r20, %r17, %r13
	.word 0xc19fda00  ! 2985: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x9bb040ac  ! 2986: EDGE16N	edge16n	%r1, %r12, %r13
	.word 0xdadfdc40  ! 2987: LDXA_R	ldxa	[%r31, %r0] 0xe2, %r13
	.word 0xa9b40cf0  ! 2988: FNOT2S	fandnot1s	%f16, %f20
	.word 0x93b480ab  ! 2989: EDGE16N	edge16n	%r18, %r11, %r9
	.word 0xc3efe040  ! 2989: PREFETCHA_I	prefetcha	[%r31, + 0x0040] %asi, #one_read
	.word 0x91b48710  ! 2990: FMULD8SUx16	fmuld8ulx16	%f18, %f16, %d8
	.word 0xd11fe1d0  ! 2991: LDDF_I	ldd	[%r31, 0x01d0], %f8
	.word 0xa5b4c7c3  ! 2992: PDIST	pdistn	%d50, %d34, %d18
	.word 0xa9b04709  ! 2993: FMULD8SUx16	fmuld8ulx16	%f1, %f9, %d20
	.word 0xe89fc080  ! 2993: LDDA_R	ldda	[%r31, %r0] 0x04, %r20
	.word 0xa5a149d2  ! 2994: FDIVd	fdivd	%f36, %f18, %f18
	.word 0xe507e1d0  ! 2995: LDF_I	ld	[%r31, 0x01d0], %f18
	.word 0x97b440a5  ! 2996: EDGE16N	edge16n	%r17, %r5, %r11
	.word 0x99a489c4  ! 2997: FDIVd	fdivd	%f18, %f4, %f12
	.word 0xa7b500a9  ! 2997: EDGE16N	edge16n	%r20, %r9, %r19
	.word 0x91b0cced  ! 2998: FNOT2S	fandnot1s	%f13, %f8
	.word 0xc1bfdc40  ! 2999: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91a409d4  ! 3000: FDIVd	fdivd	%f16, %f20, %f8
	.word 0xa5b44ce3  ! 3001: FNOT2S	fandnot1s	%f3, %f18
	.word 0xa3a049ca  ! 3001: FDIVd	fdivd	%f32, %f10, %f48
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_5:
    wrhpr %g0, 0xa5b, %hpstate  ! ta T_CHANGE_NONHPRIV 
br_longdelay2_10_0:
	.word 0x23400001  ! 1: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
	.word 0x9f80391e  ! 1: SIR	sir	0x191e
	.word 0xd83fc000  ! 5: STD_R	std	%r12, [%r31 + %r0]
mondo_10_2:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3d0] %asi
    stxa %r5, [%r0+0x3d0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d950003  ! 9: WRPR_WSTATE_R	wrpr	%r20, %r3, %wstate
splash_cmpr_10_4:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 13: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
fpinit_10_5:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 17: FCMPLE32	fcmple32	%d0, %d4, %r8
splash_lsu_10_6:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xc85f59bf, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 21: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_10_7:
	ta	T_CHANGE_NONPRIV	! macro
splash_hpstate_10_8:
	.word 0x3a800001  ! 1: BCC	bcc,a	<label_0x1>
	.word 0x8198204e  ! 29: WRHPR_HPSTATE_I	wrhpr	%r0, 0x004e, %hpstate
	.word 0x24800001  ! 33: BLE	ble,a	<label_0x1>
	.word 0x8780208a  ! 37: WRASI_I	wr	%r0, 0x008a, %asi
splash_htba_10_9:
	nop
	ta T_CHANGE_HPRIV
	best_set_reg(HV_TRAP_BASE_PA, %r11,%r12)
	.word 0x8b98000c  ! 41: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa2fd0007  ! 45: SDIVcc_R	sdivcc 	%r20, %r7, %r17
memptr_10_12:
	set user_data_start, %r31
	.word 0x8581a0e4  ! 49: WRCCR_I	wr	%r6, 0x00e4, %ccr
	.word 0x9f803d02  ! 53: SIR	sir	0x1d02
intveclr_10_13:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9b42e56cb2b5eee4, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 57: FBPLG	fblg
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_14) + 16, 16, 16)) -> intp(6,0,24,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_14)&0xffffffff) + 32, 16, 16)) -> intp(0,0,10,,,,,1)
#else
	set 0x6d80490b, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_14:
	.word 0xa9a149c1  ! 61: FDIVd	fdivd	%f36, %f32, %f20
	.word 0xd6c7dd40  ! 65: LDSWA_R	ldswa	[%r31, %r0] 0xea, %r11
	.word 0xe8c7d000  ! 69: LDSWA_R	ldswa	[%r31, %r0] 0x80, %r20
intveclr_10_15:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd72b8145467f0d7a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 73: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_10_16:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 77: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0xa5a00552  ! 81: FSQRTd	fsqrt	
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_17:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_17-donret_10_17), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00630f00 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x909, %htstate
	wrhpr %g0, 0xfd0, %hpstate  !  rand=1 (10)
	done
donretarg_10_17:
	.word 0xd8ffc400  ! 85: SWAPA_R	swapa	%r12, [%r31 + %r0] 0x20
splash_cmpr_10_18:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 89: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_10_19:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xd4d84940  ! 93: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r10
	.word 0x95b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r10
	.word 0xd43fe110  ! 1: STD_I	std	%r10, [%r31 + 0x0110]
	mov 0xb0, %r30
	.word 0x91d0001e  ! 97: Tcc_R	ta	icc_or_xcc, %r0 + %r30
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_20) + 16, 16, 16)) -> intp(3,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_20)&0xffffffff) + 48, 16, 16)) -> intp(7,0,19,,,,,1)
#else
	set 0x28800899, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_20:
	.word 0x95b484cb  ! 101: FCMPNE32	fcmpne32	%d18, %d42, %r10
mondo_10_21:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r17, [%r0+0x3c0] %asi
    stxa %r8, [%r0+0x3d0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d94c013  ! 105: WRPR_WSTATE_R	wrpr	%r19, %r19, %wstate
brcommon3_10_22:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd3e7c280  ! 1: CASA_I	casa	[%r31] 0x14, %r0, %r9
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x81983d7a  ! 109: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1d7a, %hpstate
dvapa_10_23:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8a1, %r20
	mov 0x1a, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x508, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfda00  ! 113: STDFA_R	stda	%f16, [%r0, %r31]
splash_cmpr_10_24:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 117: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_10_25:
	.word 0x05400001  ! 1: FBPLG	fblg
	.word 0x819830cf  ! 121: WRHPR_HPSTATE_I	wrhpr	%r0, 0x10cf, %hpstate
splash_tba_10_26:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 125: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_10_27:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r11, [%r0+0x3e0] %asi
    stxa %r17, [%r0+0x3e8] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d920005  ! 129: WRPR_WSTATE_R	wrpr	%r8, %r5, %wstate
	.word 0x8d802004  ! 133: WRFPRS_I	wr	%r0, 0x0004, %fprs
splash_tba_10_29:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000004003a0000, %r11, %r12
	.word 0x8b90000c  ! 137: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_30:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_30-donret_10_30), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0086ee00 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xccd, %htstate
	wrhpr %g0, 0x4d0, %hpstate  !  rand=1 (10)
	retry
donretarg_10_30:
	.word 0x8d9027d8  ! 141: WRPR_PSTATE_I	wrpr	%r0, 0x07d8, %pstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_31:
	.word 0xa1a2c9cb  ! 145: FDIVd	fdivd	%f42, %f42, %f16
	.word 0xa8810011  ! 149: ADDcc_R	addcc 	%r4, %r17, %r20
	.word 0xa7818003  ! 153: WR_GRAPHICS_STATUS_REG_R	wr	%r6, %r3, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f8025f1  ! 1: SIR	sir	0x05f1
intvec_10_33:
	.word 0x93b4c4cd  ! 157: FCMPNE32	fcmpne32	%d50, %d44, %r9
	.word 0xa1b484d4  ! 161: FCMPNE32	fcmpne32	%d18, %d20, %r16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_35:
	.word 0x99b484d2  ! 165: FCMPNE32	fcmpne32	%d18, %d18, %r12
splash_tba_10_36:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 169: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x93d020b3  ! 173: Tcc_I	tne	icc_or_xcc, %r0 + 179
	.word 0x9f803e89  ! 177: SIR	sir	0x1e89
ibp_10_39:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_39:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_39
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_39:
    brnz %r16, ibp_wait10_39
    ld [%r23], %r16
    ba ibp_startwait10_39
    mov 0x10, %r16
continue_ibp_10_39:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_39:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_39
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_39:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_39
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_39:
    best_set_reg(0x00000040fec00015,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe19fc2c0  ! 181: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x9f803291  ! 185: SIR	sir	0x1291
	.word 0xa269e437  ! 189: UDIVX_I	udivx 	%r7, 0x0437, %r17
intveclr_10_40:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x0decddeee74b1d86, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x898, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 193: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_42) + 0, 16, 16)) -> intp(0,0,19,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_42)&0xffffffff) + 40, 16, 16)) -> intp(3,0,2,,,,,1)
#else
	set 0x6e503b87, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_42:
	.word 0x9f802fa2  ! 197: SIR	sir	0x0fa2
intveclr_10_43:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xab0b83cd2224eb08, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 201: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_tba_10_44:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 205: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_10_45:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xc0cdcbc4, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 209: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xc19fdc40  ! 213: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x89800011  ! 217: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0cfc2c0  ! 221: LDSBA_R	ldsba	[%r31, %r0] 0x16, %r8
splash_cmpr_10_48:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 225: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_10_49:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_49:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_49
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_49:
    brnz %r16, ibp_wait10_49
    ld [%r23], %r16
    ba ibp_startwait10_49
    mov 0x10, %r16
continue_ibp_10_49:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_49:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_49
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_49:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_49
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_49:
    best_set_reg(0x0000005018c01504,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x20800001  ! 229: BN	bn,a	<label_0x1>
dvapa_10_50:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe9d, %r20
	mov 0x1c, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd5b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd8bfc180  ! 233: STDA_R	stda	%r12, [%r31 + %r0] 0x0c
	.word 0xa5b20491  ! 237: FCMPLE32	fcmple32	%d8, %d48, %r18
	.word 0x9f8030db  ! 241: SIR	sir	0x10db
memptr_10_52:
	set 0x60540000, %r31
	.word 0x8584a441  ! 245: WRCCR_I	wr	%r18, 0x0441, %ccr
splash_cmpr_10_53:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 249: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
br_badelay1_10_55:
	.word 0x30800001  ! 1: BA	ba,a	<label_0x1>
	.word 0xd23fe150  ! 1: STD_I	std	%r9, [%r31 + 0x0150]
	.word 0x3d400001  ! 1: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	normalw
	.word 0xa1458000  ! 253: RD_SOFTINT_REG	rd	%softint, %r16
	.word 0xa7a509d1  ! 257: FDIVd	fdivd	%f20, %f48, %f50
	.word 0x9f803dd4  ! 261: SIR	sir	0x1dd4
pmu_10_57:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbdffffffaf, %g1, %g7
	.word 0xa3800007  ! 265: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_10_58:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r1, [%r0+0x3d0] %asi
    stxa %r20, [%r0+0x3e0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d94000c  ! 269: WRPR_WSTATE_R	wrpr	%r16, %r12, %wstate
	.word 0x9ba00160  ! 273: FABSq	dis not found

	.word 0x87802010  ! 277: WRASI_I	wr	%r0, 0x0010, %asi
trapasi_10_60:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xd0d84920  ! 281: LDXA_R	ldxa	[%r1, %r0] 0x49, %r8
memptr_10_61:
	set 0x60140000, %r31
	.word 0x858422dc  ! 285: WRCCR_I	wr	%r16, 0x02dc, %ccr
	.word 0x08800001  ! 1: BLEU	bleu  	<label_0x1>
	.word 0x8d9034b6  ! 289: WRPR_PSTATE_I	wrpr	%r0, 0x14b6, %pstate
demap_10_63:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x14800001  ! 1: BG	bg  	<label_0x1>
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0xf10, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe61fe028  ! 293: LDD_I	ldd	[%r31 + 0x0028], %r19
	.word 0xe19fe060  ! 297: LDDFA_I	ldda	[%r31, 0x0060], %f16
	.word 0xe28008a0  ! 301: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r17
tglhtw_10_65:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x788, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x9bb48994  ! 305: BSHUFFLE	fmovc32	%d18, %d20, %d44
pmu_10_66:
	nop
	nop
	setx 0xffffffb0ffffffa3, %g1, %g7
	.word 0xa3800007  ! 309: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_67)+48, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_67)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_67:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_67:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98339b7  ! 313: WR_SET_SOFTINT_I	wr	%r12, 0x19b7, %set_softint
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_10_68:
	ta	T_CHANGE_NONHPRIV	! macro
	.word 0xdabfc080  ! 321: STDA_R	stda	%r13, [%r31 + %r0] 0x04
	.word 0xda800ba0  ! 325: LDUWA_R	lduwa	[%r0, %r0] 0x5d, %r13
intveclr_10_71:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd917967f77ef6976, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 329: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
ibp_10_72:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_72:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_72
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_72:
    brnz %r16, ibp_wait10_72
    ld [%r23], %r16
    ba ibp_startwait10_72
    mov 0x10, %r16
continue_ibp_10_72:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_72:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_72
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_72:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_72
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_72:
    best_set_reg(0x00000050b3d50436,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x54a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87ac8a4c  ! 333: FCMPd	fcmpd	%fcc<n>, %f18, %f12
trapasi_10_73:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x74) 
	.word 0xe6d84e80  ! 337: LDXA_R	ldxa	[%r1, %r0] 0x74, %r19
pmu_10_74:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb1ffffffa2, %g1, %g7
	.word 0xa3800007  ! 341: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x99b240f4  ! 345: EDGE16LN	edge16ln	%r9, %r20, %r12
dvapa_10_76:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x992, %r20
	mov 0xd, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe19, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfdc40  ! 349: STDA_R	stda	%r16, [%r31 + %r0] 0xe2
	.word 0xd41fc000  ! 353: LDD_R	ldd	[%r31 + %r0], %r10
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_78) + 48, 16, 16)) -> intp(3,0,11,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_78)&0xffffffff) + 40, 16, 16)) -> intp(1,0,31,,,,,1)
#else
	set 0x7c90e35d, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_10_78:
	.word 0x99b484d1  ! 357: FCMPNE32	fcmpne32	%d18, %d48, %r12
trapasi_10_80:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xd0d84940  ! 361: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r8
	.word 0x9f8039b2  ! 365: SIR	sir	0x19b2
mondo_10_81:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r16, [%r0+0x3c0] %asi
    stxa %r20, [%r0+0x3d8] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d920001  ! 369: WRPR_WSTATE_R	wrpr	%r8, %r1, %wstate
ibp_10_82:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_82:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_82
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_82:
    brnz %r16, ibp_wait10_82
    ld [%r23], %r16
    ba ibp_startwait10_82
    mov 0x10, %r16
continue_ibp_10_82:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_82:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_82
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_82:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_82
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_82:
    best_set_reg(0x00000040b9c4360a,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xa5a509d4  ! 373: FDIVd	fdivd	%f20, %f20, %f18
splash_hpstate_10_84:
	ta T_CHANGE_NONHPRIV
	.word 0x81982c46  ! 377: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0c46, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_86:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_86-donret_10_86), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x001c0e00 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd43, %htstate
	wrhpr %g0, 0x911, %hpstate  !  rand=1 (10)
	ldx [%r12+%r0], %g1
	retry
donretarg_10_86:
	.word 0xd66fe0ee  ! 381: LDSTUB_I	ldstub	%r11, [%r31 + 0x00ee]
intveclr_10_88:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5ebbfb0ef89b1ee1, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x281, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 385: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_10_89:
	set 0x60740000, %r31
	.word 0x858422e7  ! 389: WRCCR_I	wr	%r16, 0x02e7, %ccr
	.word 0x87a9ca2b  ! 393: FCMPs	fcmps	%fcc<n>, %f7, %f11
	.word 0xa1a509c9  ! 397: FDIVd	fdivd	%f20, %f40, %f16
	.word 0xc1bfc2c0  ! 401: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x91950003  ! 405: WRPR_PIL_R	wrpr	%r20, %r3, %pil
splash_cmpr_10_92:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 409: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_10_93:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 413: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_94) + 48, 16, 16)) -> intp(2,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_94)&0xffffffff) + 56, 16, 16)) -> intp(7,0,23,,,,,1)
#else
	set 0xc3f0b431, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_94:
	.word 0x39400001  ! 417: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
demap_10_95:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x08800001  ! 1: BLEU	bleu  	<label_0x1>
	stxa %g3, [%g3] 0x57
	wrhpr %g0, 0x859, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe050  ! 421: LDD_I	ldd	[%r31 + 0x0050], %r18
pmu_10_96:
	nop
	nop
	setx 0xffffffb5ffffffa7, %g1, %g7
	.word 0xa3800007  ! 425: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x93b500e4  ! 429: EDGE16LN	edge16ln	%r20, %r4, %r9
intveclr_10_99:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x02e6aa3e0d1ab6f9, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 433: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_100)+40, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_100)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_100:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_100:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa983746e  ! 437: WR_SET_SOFTINT_I	wr	%r13, 0x146e, %set_softint
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_102:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_102-donret_10_102+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0074e900 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd54, %htstate
	wrhpr %g0, 0xb0a, %hpstate  !  rand=1 (10)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_10_102:
	.word 0x39400001  ! 441: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
dvapa_10_103:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xfff, %r20
	mov 0xa, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x503, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd4dfd060  ! 445: LDXA_R	ldxa	[%r31, %r0] 0x83, %r10
trapasi_10_104:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x5b) 
	.word 0xe6d84b60  ! 449: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r19
ibp_10_105:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_105:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_105
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_105:
    brnz %r16, ibp_wait10_105
    ld [%r23], %r16
    ba ibp_startwait10_105
    mov 0x10, %r16
continue_ibp_10_105:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_105:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_105
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_105:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_105
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_105:
    best_set_reg(0x000000500ff60a8c,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xdda, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87a8ca51  ! 453: FCMPd	fcmpd	%fcc<n>, %f34, %f48
splash_hpstate_10_106:
	.word 0x8198270e  ! 457: WRHPR_HPSTATE_I	wrhpr	%r0, 0x070e, %hpstate
dvapa_10_107:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x99c, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xb01, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe09fdb20  ! 461: LDDA_R	ldda	[%r31, %r0] 0xd9, %r16
mondo_10_108:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3d0] %asi
    stxa %r1, [%r0+0x3e0] %asi
	.word 0x87802014  ! 1: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0x9d948007  ! 465: WRPR_WSTATE_R	wrpr	%r18, %r7, %wstate
	.word 0x81580000  ! 469: FLUSHW	flushw
	.word 0xa9b2c0eb  ! 473: EDGE16LN	edge16ln	%r11, %r11, %r20
trapasi_10_110:
	nop
	mov 0x30, %r1 	! (VA for ASI 0x5b) 
	.word 0xe0d84b60  ! 477: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r16
	.word 0xe1bfe080  ! 481: STDFA_I	stda	%f16, [0x0080, %r31]
splash_hpstate_10_111:
	.word 0x81982e1f  ! 485: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0e1f, %hpstate
	.word 0x91950012  ! 489: WRPR_PIL_R	wrpr	%r20, %r18, %pil
demap_10_114:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x1e800001  ! 1: BVC	bvc  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x90b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe160  ! 493: LDD_I	ldd	[%r31 + 0x0160], %r16
intveclr_10_116:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x17b6568de804cce2, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 497: FBPLG	fblg
demap_10_117:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x10800001  ! 1: BA	ba  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x300, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe10c  ! 501: LDD_I	ldd	[%r31 + 0x010c], %r8
memptr_10_118:
	set 0x60540000, %r31
	.word 0x8584fe7d  ! 505: WRCCR_I	wr	%r19, 0x1e7d, %ccr
	.word 0x91524000  ! 509: RDPR_CWP	rdpr	%cwp, %r8
	.word 0x8d802004  ! 513: WRFPRS_I	wr	%r0, 0x0004, %fprs
	.word 0xd08008a0  ! 517: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r8
change_to_randtl_10_121:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_10_121:
	.word 0x8f902000  ! 521: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
	.word 0xe19fc3e0  ! 525: LDDFA_R	ldda	[%r31, %r0], %f16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x99a149d2  ! 1: FDIVd	fdivd	%f36, %f18, %f12
intvec_10_123:
	.word 0x99b484c3  ! 529: FCMPNE32	fcmpne32	%d18, %d34, %r12
splash_cmpr_10_124:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 533: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_10_125:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_125:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_125
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_125:
    brnz %r16, ibp_wait10_125
    ld [%r23], %r16
    ba ibp_startwait10_125
    mov 0x10, %r16
continue_ibp_10_125:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_125:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_125
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_125:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_125
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_125:
    best_set_reg(0x0000004006ca8c78,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe1bfdf00  ! 537: STDFA_R	stda	%f16, [%r0, %r31]
jmptr_10_126:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 541: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xc32fc000  ! 545: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0x92fc0002  ! 549: SDIVcc_R	sdivcc 	%r16, %r2, %r9
intveclr_10_127:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x1d6507d4e1f02bd8, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 553: FBPLG	fblg
pmu_10_128:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb3ffffffa5, %g1, %g7
	.word 0xa3800007  ! 557: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_10_129:
	set user_data_start, %r31
	.word 0x8584ba80  ! 561: WRCCR_I	wr	%r18, 0x1a80, %ccr
	.word 0xe41fe090  ! 565: LDD_I	ldd	[%r31 + 0x0090], %r18
frzptr_10_131:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 569: BN	bn,a	<label_0x1>
dvapa_10_133:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x805, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xac1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd7e7dd40  ! 573: CASA_I	casa	[%r31] 0xea, %r0, %r11
dvapa_10_134:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x965, %r20
	mov 0x1d, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x911, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87a84a47  ! 577: FCMPd	fcmpd	%fcc<n>, %f32, %f38
pmu_10_135:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbfffffffa4, %g1, %g7
	.word 0xa3800007  ! 581: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe45fe118  ! 585: LDX_I	ldx	[%r31 + 0x0118], %r18
	.word 0xc32fe0f0  ! 589: STXFSR_I	st-sfr	%f1, [0x00f0, %r31]
splash_hpstate_10_137:
	.word 0x26800001  ! 1: BL	bl,a	<label_0x1>
	.word 0x81983ecb  ! 593: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ecb, %hpstate
	.word 0x38800001  ! 1: BGU	bgu,a	<label_0x1>
	.word 0x8d902d53  ! 597: WRPR_PSTATE_I	wrpr	%r0, 0x0d53, %pstate
splash_cmpr_10_140:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 601: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_10_141:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_141:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_141
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_141:
    brnz %r16, ibp_wait10_141
    ld [%r23], %r16
    ba ibp_startwait10_141
    mov 0x10, %r16
continue_ibp_10_141:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_141:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_141
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_141:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_141
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_141:
    best_set_reg(0x00000050dccc78e1,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x68b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe8dfc540  ! 605: LDXA_R	ldxa	[%r31, %r0] 0x2a, %r20
splash_cmpr_10_142:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 609: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
pmu_10_143:
	nop
	nop
	setx 0xffffffb5ffffffa3, %g1, %g7
	.word 0xa3800007  ! 613: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xd03fe150  ! 617: STD_I	std	%r8, [%r31 + 0x0150]
	.word 0x8d802000  ! 621: WRFPRS_I	wr	%r0, 0x0000, %fprs
intveclr_10_145:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4e5dbcd78fe12acb, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 625: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_10_146:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r11, [%r0+0x3d0] %asi
    stxa %r11, [%r0+0x3c0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d924012  ! 629: WRPR_WSTATE_R	wrpr	%r9, %r18, %wstate
frzptr_10_147:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xe19fda00  ! 633: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x32800001  ! 1: BNE	bne,a	<label_0x1>
	.word 0x8d902b29  ! 637: WRPR_PSTATE_I	wrpr	%r0, 0x0b29, %pstate
tagged_10_149:
	taddcctv %r19, 0x1eef, %r8
	.word 0xd407e0ef  ! 641: LDUW_I	lduw	[%r31 + 0x00ef], %r10
dvapa_10_151:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xea3, %r20
	mov 0x1a, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa4b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa9a449b4  ! 645: FDIVs	fdivs	%f17, %f20, %f20
	.word 0x91b0cfe5  ! 649: FONES	e	%f8
trapasi_10_152:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd8d84940  ! 653: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r12
trapasi_10_153:
	nop
	mov 0x3c8, %r1 	! (VA for ASI 0x25) 
	.word 0xd8d844a0  ! 657: LDXA_R	ldxa	[%r1, %r0] 0x25, %r12
demap_10_154:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x12, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe013  ! 661: LDD_I	ldd	[%r31 + 0x0013], %r11
tagged_10_155:
	taddcctv %r20, 0x1d82, %r20
	.word 0xd407e009  ! 665: LDUW_I	lduw	[%r31 + 0x0009], %r10
	.word 0x87802088  ! 669: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0xd697d140  ! 673: LDUHA_R	lduha	[%r31, %r0] 0x8a, %r11
    set 0x1e7f, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x97b407c3  ! 677: PDIST	pdistn	%d16, %d34, %d42
memptr_10_157:
	set 0x60540000, %r31
	.word 0x85812223  ! 681: WRCCR_I	wr	%r4, 0x0223, %ccr
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_159:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_159-donret_10_159+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00126b00 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1971, %htstate
	wrhpr %g0, 0xf92, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_159:
	.word 0x25400001  ! 685: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_10_160:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x644db3dc05e56be7, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 689: FBPLG	fblg
	.word 0x9f802160  ! 693: SIR	sir	0x0160
	.word 0xe29fdd40  ! 697: LDDA_R	ldda	[%r31, %r0] 0xea, %r17
memptr_10_162:
	set user_data_start, %r31
	.word 0x8584b4c6  ! 701: WRCCR_I	wr	%r18, 0x14c6, %ccr
splash_tba_10_164:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 705: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_10_166:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x3a800001  ! 1: BCC	bcc,a	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x219, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe1b0  ! 709: LDD_I	ldd	[%r31 + 0x01b0], %r16
	.word 0xe19fde00  ! 713: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x91b0c551  ! 717: FCMPEQ16	fcmpeq16	%d34, %d48, %r8
	.word 0xe84fe158  ! 721: LDSB_I	ldsb	[%r31 + 0x0158], %r20
	.word 0xe87fe150  ! 725: SWAP_I	swap	%r20, [%r31 + 0x0150]
	.word 0xa7a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f19
	.word 0xe697d920  ! 1: LDUHA_R	lduha	[%r31, %r0] 0xc9, %r19
	mov 0x32, %r30
	.word 0x91d0001e  ! 729: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x81510000  ! 733: RDPR_TICK	rdpr	%tick, %r0
trapasi_10_169:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x50) 
	.word 0xd2d84a00  ! 737: LDXA_R	ldxa	[%r1, %r0] 0x50, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_170) + 16, 16, 16)) -> intp(5,0,17,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_170)&0xffffffff) + 0, 16, 16)) -> intp(1,0,8,,,,,1)
#else
	set 0x7b5009b7, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_170:
	.word 0x39400001  ! 741: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
demap_10_171:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x818, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd81fe1f2  ! 745: LDD_I	ldd	[%r31 + 0x01f2], %r12
	.word 0xe09fe080  ! 749: LDDA_I	ldda	[%r31, + 0x0080] %asi, %r16
pmu_10_172:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa2, %g1, %g7
	.word 0xa3800007  ! 753: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_10_173:
	set 0x60740000, %r31
	.word 0x85822014  ! 757: WRCCR_I	wr	%r8, 0x0014, %ccr
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_10_174:
	ta	T_CHANGE_NONPRIV	! macro
tagged_10_176:
	tsubcctv %r1, 0x1089, %r13
	.word 0xe807e1f2  ! 765: LDUW_I	lduw	[%r31 + 0x01f2], %r20
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_10_177:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_10_178:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc88, %r20
	mov 0xc, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc41, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93b44491  ! 773: FCMPLE32	fcmple32	%d48, %d48, %r9
pmu_10_180:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbfffffffa4, %g1, %g7
	.word 0xa3800007  ! 777: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xc19fe0a0  ! 781: LDDFA_I	ldda	[%r31, 0x00a0], %f0
	.word 0x91d020b3  ! 785: Tcc_I	ta	icc_or_xcc, %r0 + 179
	.word 0x8d903a55  ! 789: WRPR_PSTATE_I	wrpr	%r0, 0x1a55, %pstate
trapasi_10_182:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe2d84940  ! 793: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r17
br_badelay2_10_184:
	.word 0x95a509d2  ! 1: FDIVd	fdivd	%f20, %f18, %f10
	pdist %f22, %f12, %f26
	.word 0x95b4c30b  ! 797: ALIGNADDRESS	alignaddr	%r19, %r11, %r10
	.word 0x89800011  ! 801: WRTICK_R	wr	%r0, %r17, %tick
frzptr_10_186:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x95702070  ! 1: POPC_I	popc	0x0070, %r10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 805: BN	bn,a	<label_0x1>
	.word 0x8d802004  ! 809: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_10_187:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 813: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
	.word 0xd05fe048  ! 817: LDX_I	ldx	[%r31 + 0x0048], %r8
	.word 0xc19fe020  ! 821: LDDFA_I	ldda	[%r31, 0x0020], %f0
	.word 0x9f802994  ! 825: SIR	sir	0x0994
cwp_10_188:
    set user_data_start, %o7
	.word 0x93902005  ! 829: WRPR_CWP_I	wrpr	%r0, 0x0005, %cwp
	.word 0x8d903975  ! 833: WRPR_PSTATE_I	wrpr	%r0, 0x1975, %pstate
change_to_randtl_10_191:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_10_191:
	.word 0x8f902000  ! 837: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
tglhtw_10_192:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xb98, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x91b2c991  ! 841: BSHUFFLE	fmovc32	%d42, %d48, %d8
	.word 0xe19fe060  ! 845: LDDFA_I	ldda	[%r31, 0x0060], %f16
	.word 0xc36fe190  ! 849: PREFETCH_I	prefetch	[%r31 + 0x0190], #one_read
	.word 0xa4c4af1b  ! 853: ADDCcc_I	addccc 	%r18, 0x0f1b, %r18
ibp_10_194:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_194:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_194
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_194:
    brnz %r16, ibp_wait10_194
    ld [%r23], %r16
    ba ibp_startwait10_194
    mov 0x10, %r16
continue_ibp_10_194:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_194:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_194
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_194:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_194
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_194:
    best_set_reg(0x00000040e6f8e1cf,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe0dfc3c0  ! 857: LDXA_R	ldxa	[%r31, %r0] 0x1e, %r16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9bb2c4cd  ! 1: FCMPNE32	fcmpne32	%d42, %d44, %r13
intvec_10_195:
	.word 0xa1b4c4d3  ! 861: FCMPNE32	fcmpne32	%d50, %d50, %r16
	.word 0x8d802004  ! 865: WRFPRS_I	wr	%r0, 0x0004, %fprs
	.word 0xc30fc000  ! 869: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
ceter_10_197:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 2, %r17
    sllx %r17, 60, %r17
    mov 0x18, %r16
    stxa %r17, [%r16]0x4c
	wrhpr %g0, 0x958, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95410000  ! 873: RDTICK	rd	%tick, %r10
	.word 0xd937c000  ! 877: STQF_R	-	%f12, [%r0, %r31]
br_longdelay2_10_198:
	.word 0x22cc8001  ! 1: BRZ	brz,a,pt	%r18,<label_0xc8001>
	.word 0xa5b7c4c0  ! 881: FCMPNE32	fcmpne32	%d62, %d0, %r18
dvapa_10_199:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb32, %r20
	mov 0x10, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x911, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fdf20  ! 885: LDDFA_R	ldda	[%r31, %r0], %f0
mondo_10_200:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r12, [%r0+0x3d0] %asi
    stxa %r4, [%r0+0x3d0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d910005  ! 889: WRPR_WSTATE_R	wrpr	%r4, %r5, %wstate
	.word 0xe2cfc720  ! 893: LDSBA_R	ldsba	[%r31, %r0] 0x39, %r17
dvapa_10_201:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x83a, %r20
	mov 0x17, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x209, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa77025f9  ! 897: POPC_I	popc	0x05f9, %r19
pmu_10_202:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffa8, %g1, %g7
	.word 0xa3800007  ! 901: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xe63fe1e0  ! 1: STD_I	std	%r19, [%r31 + 0x01e0]
	mov 0x32, %r30
	.word 0x91d0001e  ! 905: Tcc_R	ta	icc_or_xcc, %r0 + %r30
fpinit_10_205:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009c4  ! 909: FDIVd	fdivd	%f0, %f4, %f6
splash_tba_10_206:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 913: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_10_207:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3e0] %asi
    stxa %r9, [%r0+0x3c0] %asi
	.word 0x87802014  ! 1: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0x9d940004  ! 917: WRPR_WSTATE_R	wrpr	%r16, %r4, %wstate
	.word 0x19400001  ! 921: FBPUGE	fbuge
splash_hpstate_10_209:
	ta T_CHANGE_NONHPRIV
	.word 0x03400001  ! 1: FBPNE	fbne
	.word 0x819830cf  ! 925: WRHPR_HPSTATE_I	wrhpr	%r0, 0x10cf, %hpstate
demap_10_210:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x24cd0001  ! 1: BRLEZ	brlez,a,pt	%r20,<label_0xd0001>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x852, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda1fe0c2  ! 929: LDD_I	ldd	[%r31 + 0x00c2], %r13
	.word 0xdbe7c720  ! 1: CASA_I	casa	[%r31] 0x39, %r0, %r13
	.word 0xda97c240  ! 1: LDUHA_R	lduha	[%r31, %r0] 0x12, %r13
	mov 0x34, %r30
	.word 0x91d0001e  ! 933: Tcc_R	ta	icc_or_xcc, %r0 + %r30
splash_cmpr_10_212:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 937: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa7b244cd  ! 1: FCMPNE32	fcmpne32	%d40, %d44, %r19
intvec_10_213:
	.word 0x99a449d3  ! 941: FDIVd	fdivd	%f48, %f50, %f12
	.word 0x919330c5  ! 945: WRPR_PIL_I	wrpr	%r12, 0x10c5, %pil
fpinit_10_214:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009a4  ! 949: FDIVs	fdivs	%f0, %f4, %f4
	.word 0x91950003  ! 953: WRPR_PIL_R	wrpr	%r20, %r3, %pil
	.word 0xa669bc23  ! 957: UDIVX_I	udivx 	%r6, 0xfffffc23, %r19
	.word 0x87802088  ! 961: WRASI_I	wr	%r0, 0x0088, %asi
ibp_10_217:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_217:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_217
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_217:
    brnz %r16, ibp_wait10_217
    ld [%r23], %r16
    ba ibp_startwait10_217
    mov 0x10, %r16
continue_ibp_10_217:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_217:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_217
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_217:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_217
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_217:
    best_set_reg(0x0000004026e1cfaa,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe31fe070  ! 965: LDDF_I	ldd	[%r31, 0x0070], %f17
	.word 0x89800011  ! 969: WRTICK_R	wr	%r0, %r17, %tick
splash_lsu_10_219:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x64c10e06, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 973: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
ibp_10_220:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_220:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_220
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_220:
    brnz %r16, ibp_wait10_220
    ld [%r23], %r16
    ba ibp_startwait10_220
    mov 0x10, %r16
continue_ibp_10_220:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_220:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_220
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_220:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_220
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_220:
    best_set_reg(0x00000050a8cfaa2b,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x29b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x00800001  ! 977: BN	bn  	<label_0x1>
ibp_10_222:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_222:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_222
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_222:
    brnz %r16, ibp_wait10_222
    ld [%r23], %r16
    ba ibp_startwait10_222
    mov 0x10, %r16
continue_ibp_10_222:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_222:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_222
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_222:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_222
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_222:
    best_set_reg(0x00000040e9ea2b01,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfdc40  ! 981: STDFA_R	stda	%f0, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_224:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_224-donret_10_224+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ceb200 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x14c4, %htstate
	wrhpr %g0, 0x1d3, %hpstate  !  rand=1 (10)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_10_224:
	.word 0x81982095  ! 985: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0095, %hpstate
mondo_10_225:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r16, [%r0+0x3c0] %asi
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d950002  ! 989: WRPR_WSTATE_R	wrpr	%r20, %r2, %wstate
	.word 0x89800011  ! 993: WRTICK_R	wr	%r0, %r17, %tick
trapasi_10_227:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5b) 
	.word 0xe4d84b60  ! 997: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r18
	.word 0xc36fe050  ! 1001: PREFETCH_I	prefetch	[%r31 + 0x0050], #one_read
	.word 0x91d020b5  ! 1005: Tcc_I	ta	icc_or_xcc, %r0 + 181
	.word 0xe127c000  ! 1009: STF_R	st	%f16, [%r0, %r31]
	.word 0xa6dc4011  ! 1013: SMULcc_R	smulcc 	%r17, %r17, %r19
change_to_randtl_10_230:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_10_230:
	.word 0x8f902002  ! 1017: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_231:
	.word 0x99b304c1  ! 1021: FCMPNE32	fcmpne32	%d12, %d32, %r12
intveclr_10_232:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x93071aa3008f3503, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1025: FBPLG	fblg
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_233:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_233-donret_10_233+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x002d4a00 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1587, %htstate
	wrhpr %g0, 0x80a, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_233:
	.word 0xe46fe10d  ! 1029: LDSTUB_I	ldstub	%r18, [%r31 + 0x010d]
	.word 0x9f803db5  ! 1033: SIR	sir	0x1db5
pmu_10_235:
	nop
	nop
	setx 0xffffffbfffffffa1, %g1, %g7
	.word 0xa3800007  ! 1037: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8143e011  ! 1041: MEMBAR	membar	#LoadLoad | #Lookaside 
brcommon3_10_237:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd9e7c540  ! 1: CASA_I	casa	[%r31] 0x2a, %r0, %r12
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d903e93  ! 1045: WRPR_PSTATE_I	wrpr	%r0, 0x1e93, %pstate
intveclr_10_239:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x47a4a78994051683, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1049: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_cmpr_10_240:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1053: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe19fda00  ! 1057: LDDFA_R	ldda	[%r31, %r0], %f16
jmptr_10_241:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 1061: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0x95702ba5  ! 1065: POPC_I	popc	0x0ba5, %r10
	.word 0xa4f88012  ! 1069: SDIVcc_R	sdivcc 	%r2, %r18, %r18
br_badelay1_10_242:
	.word 0x02c94001  ! 1: BRZ	brz,pt  	%r5,<label_0x94001>
	.word 0xe737e170  ! 1: STQF_I	-	%f19, [0x0170, %r31]
	.word 0xe63fe1b0  ! 1: STD_I	std	%r19, [%r31 + 0x01b0]
	normalw
	.word 0xa9458000  ! 1073: RD_SOFTINT_REG	rd	%softint, %r20
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_244)+40, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_244)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_244:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_244:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984f456  ! 1077: WR_SET_SOFTINT_I	wr	%r19, 0x1456, %set_softint
	.word 0x97b48489  ! 1081: FCMPLE32	fcmple32	%d18, %d40, %r11
ibp_10_246:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_246:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_246
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_246:
    brnz %r16, ibp_wait10_246
    ld [%r23], %r16
    ba ibp_startwait10_246
    mov 0x10, %r16
continue_ibp_10_246:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_246:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_246
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_246:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_246
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_246:
    best_set_reg(0x00000040c8eb0118,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xd50, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87ac0a41  ! 1085: FCMPd	fcmpd	%fcc<n>, %f16, %f32
fpinit_10_247:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009c4  ! 1089: FDIVd	fdivd	%f0, %f4, %f4
pmu_10_248:
	nop
	nop
	setx 0xffffffbaffffffaa, %g1, %g7
	.word 0xa3800007  ! 1093: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe8800ae0  ! 1097: LDUWA_R	lduwa	[%r0, %r0] 0x57, %r20
	.word 0x99b08594  ! 1101: FCMPGT32	fcmpgt32	%d2, %d20, %r12
	.word 0x91d02033  ! 1105: Tcc_I	ta	icc_or_xcc, %r0 + 51
	.word 0x99a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f12
	.word 0xd91fe140  ! 1: LDDF_I	ldd	[%r31, 0x0140], %f12
	mov 0x32, %r30
	.word 0x91d0001e  ! 1109: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x95a509cc  ! 1113: FDIVd	fdivd	%f20, %f12, %f10
memptr_10_250:
	set 0x60740000, %r31
	.word 0x85832e7a  ! 1117: WRCCR_I	wr	%r12, 0x0e7a, %ccr
	.word 0x8d90319f  ! 1121: WRPR_PSTATE_I	wrpr	%r0, 0x119f, %pstate
	.word 0xd45fe068  ! 1125: LDX_I	ldx	[%r31 + 0x0068], %r10
memptr_10_253:
	set 0x60340000, %r31
	.word 0x8580a828  ! 1129: WRCCR_I	wr	%r2, 0x0828, %ccr
trapasi_10_254:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xe4d84e40  ! 1133: LDXA_R	ldxa	[%r1, %r0] 0x72, %r18
mondo_10_255:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3d0] %asi
    stxa %r6, [%r0+0x3d8] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d950011  ! 1137: WRPR_WSTATE_R	wrpr	%r20, %r17, %wstate
	.word 0x94d44013  ! 1141: UMULcc_R	umulcc 	%r17, %r19, %r10
intveclr_10_256:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x22f4265fb210f385, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x309, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1145: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_10_258:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x09b98ffde01d59a4, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x28a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1149: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_hpstate_10_259:
	.word 0x36800001  ! 1: BGE	bge,a	<label_0x1>
	.word 0x81982d0f  ! 1153: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0d0f, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_261:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_261-donret_10_261), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00912400 | (16 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x45b, %htstate
	wrhpr %g0, 0x50b, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_261:
	.word 0x36800001  ! 1157: BGE	bge,a	<label_0x1>
intveclr_10_262:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4a63d6b31262fe29, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xf93, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1161: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_10_263:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffad, %g1, %g7
	.word 0xa3800007  ! 1165: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x87acca52  ! 1169: FCMPd	fcmpd	%fcc<n>, %f50, %f18
mondo_10_266:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r4, [%r0+0x3e0] %asi
    stxa %r4, [%r0+0x3c0] %asi
	.word 0x87802083  ! 1: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x9d92c010  ! 1173: WRPR_WSTATE_R	wrpr	%r11, %r16, %wstate
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_10_267:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_10_268:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd23, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xb18, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe097d920  ! 1181: LDUHA_R	lduha	[%r31, %r0] 0xc9, %r16
	.word 0x0d400001  ! 1: FBPG	fbg
	.word 0x8d9035c7  ! 1185: WRPR_PSTATE_I	wrpr	%r0, 0x15c7, %pstate
pmu_10_270:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffa8, %g1, %g7
	.word 0xa3800007  ! 1189: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
pmu_10_271:
	nop
	nop
	setx 0xffffffb1ffffffa3, %g1, %g7
	.word 0xa3800007  ! 1193: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_10_272:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r12, [%r0+0x3d0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d948012  ! 1197: WRPR_WSTATE_R	wrpr	%r18, %r18, %wstate
memptr_10_273:
	set user_data_start, %r31
	.word 0x8580a03f  ! 1201: WRCCR_I	wr	%r2, 0x003f, %ccr
intveclr_10_274:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9b206e7253bab210, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1205: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
trapasi_10_275:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe4d84920  ! 1209: LDXA_R	ldxa	[%r1, %r0] 0x49, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_276:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_276-donret_10_276+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00544b00 | (0x82 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x483, %htstate
	wrhpr %g0, 0xcc0, %hpstate  !  rand=1 (10)
	retry
donretarg_10_276:
	.word 0xa3a0c9d1  ! 1213: FDIVd	fdivd	%f34, %f48, %f48
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_278) + 16, 16, 16)) -> intp(2,0,23,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_278)&0xffffffff) + 24, 16, 16)) -> intp(6,0,9,,,,,1)
#else
	set 0x7790ee42, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_278:
	.word 0x9f802a06  ! 1217: SIR	sir	0x0a06
	.word 0xc36fe04f  ! 1221: PREFETCH_I	prefetch	[%r31 + 0x004f], #one_read
splash_hpstate_10_280:
	.word 0x81983f35  ! 1225: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1f35, %hpstate
splash_cmpr_10_281:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1229: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x89800011  ! 1233: WRTICK_R	wr	%r0, %r17, %tick
brcommon2_10_283:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x9ba7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f44
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0x00800001  ! 1237: BN	bn  	<label_0x1>
jmptr_10_284:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1241: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_10_285:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 1245: BN	bn  	<label_0x1>
change_to_randtl_10_286:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_10_286:
	.word 0x8f902000  ! 1249: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
memptr_10_287:
	set 0x60340000, %r31
	.word 0x8582ad62  ! 1253: WRCCR_I	wr	%r10, 0x0d62, %ccr
ibp_10_288:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_288:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_288
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_288:
    brnz %r16, ibp_wait10_288
    ld [%r23], %r16
    ba ibp_startwait10_288
    mov 0x10, %r16
continue_ibp_10_288:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_288:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_288
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_288:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_288
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_288:
    best_set_reg(0x00000050a2c1188a,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x99702bc7  ! 1257: POPC_I	popc	0x0bc7, %r12
splash_htba_10_289:
	nop
	ta T_CHANGE_HPRIV
	setx 0x00000002002a0000, %r11, %r12
	.word 0x8b98000c  ! 1261: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
memptr_10_290:
	set 0x60740000, %r31
	.word 0x8584b414  ! 1265: WRCCR_I	wr	%r18, 0x1414, %ccr
brcommon2_10_291:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x81dfc000  ! 1: FLUSH_R	flush 	%r31, %r0, %r0
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xa1b7c7c0  ! 1269: PDIST	pdistn	%d62, %d0, %d16
	.word 0x9f803205  ! 1273: SIR	sir	0x1205
pmu_10_293:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb8ffffffa6, %g1, %g7
	.word 0xa3800007  ! 1277: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_10_294:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa9d, %r20
	mov 0x1, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x41, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe33fe0a0  ! 1281: STDF_I	std	%f17, [0x00a0, %r31]
	.word 0xe1bfe180  ! 1285: STDFA_I	stda	%f16, [0x0180, %r31]
memptr_10_295:
	set 0x60740000, %r31
	.word 0x85853ce5  ! 1289: WRCCR_I	wr	%r20, 0x1ce5, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_296) + 32, 16, 16)) -> intp(6,0,25,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_296)&0xffffffff) + 56, 16, 16)) -> intp(1,0,16,,,,,1)
#else
	set 0xffb0433f, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_296:
	.word 0x9f8026d2  ! 1293: SIR	sir	0x06d2
mondo_10_297:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3c0] %asi
    stxa %r18, [%r0+0x3c0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d950007  ! 1297: WRPR_WSTATE_R	wrpr	%r20, %r7, %wstate
splash_cmpr_10_298:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1301: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
jmptr_10_299:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 1305: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xe0dfc600  ! 1309: LDXA_R	ldxa	[%r31, %r0] 0x30, %r16
intveclr_10_301:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5af848358e094b1d, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x6c1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1313: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_302:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_302-donret_10_302), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00cfaa00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1a1d, %htstate
	best_set_reg(0x272, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	.word 0x36800001  ! 1: BGE	bge,a	<label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_10_302:
	.word 0x8198380f  ! 1317: WRHPR_HPSTATE_I	wrhpr	%r0, 0x180f, %hpstate
	.word 0x87802055  ! 1321: WRASI_I	wr	%r0, 0x0055, %asi
dvapa_10_303:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc2d, %r20
	mov 0x0, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x508, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd13fe030  ! 1325: STDF_I	std	%f8, [0x0030, %r31]
splash_hpstate_10_304:
	ta T_CHANGE_NONHPRIV
	.word 0x02c98001  ! 1: BRZ	brz,pt  	%r6,<label_0x98001>
	.word 0x81983300  ! 1329: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1300, %hpstate
mondo_10_305:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r1, [%r0+0x3e8] %asi
    stxa %r5, [%r0+0x3e0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d904014  ! 1333: WRPR_WSTATE_R	wrpr	%r1, %r20, %wstate
demap_10_306:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x08800001  ! 1: BLEU	bleu  	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x94b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe178  ! 1337: LDD_I	ldd	[%r31 + 0x0178], %r10
splash_hpstate_10_308:
	.word 0x1d400001  ! 1: FBPULE	fbule
	.word 0x8198284c  ! 1341: WRHPR_HPSTATE_I	wrhpr	%r0, 0x084c, %hpstate
cwp_10_309:
    set user_data_start, %o7
	.word 0x93902004  ! 1345: WRPR_CWP_I	wrpr	%r0, 0x0004, %cwp
	.word 0xa1902008  ! 1349: WRPR_GL_I	wrpr	%r0, 0x0008, %-
	.word 0x9f803a41  ! 1353: SIR	sir	0x1a41
	.word 0xe19fdc40  ! 1357: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe68008a0  ! 1361: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
	.word 0xa648c010  ! 1365: MULX_R	mulx 	%r3, %r16, %r19
trapasi_10_312:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xd2d84b60  ! 1369: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r9
	.word 0x8d802000  ! 1373: WRFPRS_I	wr	%r0, 0x0000, %fprs
splash_tba_10_314:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000000380000, %r11, %r12
	.word 0x8b90000c  ! 1377: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 1381: WRTICK_R	wr	%r0, %r17, %tick
pmu_10_316:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb9ffffffaa, %g1, %g7
	.word 0xa3800007  ! 1385: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1389: WRTICK_R	wr	%r0, %r17, %tick
	.word 0x8143e011  ! 1393: MEMBAR	membar	#LoadLoad | #Lookaside 
splash_cmpr_10_319:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 1397: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_10_321:
	ta T_CHANGE_NONHPRIV
	.word 0x81983c45  ! 1401: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1c45, %hpstate
dvapa_10_322:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8af, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd92, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa1a1c9a1  ! 1405: FDIVs	fdivs	%f7, %f1, %f16
tglhtw_10_323:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xdc2, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa7b48984  ! 1409: BSHUFFLE	fmovc32	%d18, %d4, %d50
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_324) + 32, 16, 16)) -> intp(6,0,26,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_324)&0xffffffff) + 48, 16, 16)) -> intp(2,0,8,,,,,1)
#else
	set 0x6dc0e211, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x99a489d1  ! 1: FDIVd	fdivd	%f18, %f48, %f12
intvec_10_324:
	.word 0xa9b044d0  ! 1413: FCMPNE32	fcmpne32	%d32, %d16, %r20
demap_10_325:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2ccc8001  ! 1: BRGZ	brgz,a,pt	%r18,<label_0xc8001>
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xe02, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe1b4  ! 1417: LDD_I	ldd	[%r31 + 0x01b4], %r9
tagged_10_326:
	tsubcctv %r5, 0x158a, %r19
	.word 0xda07e06f  ! 1421: LDUW_I	lduw	[%r31 + 0x006f], %r13
	.word 0x9684c010  ! 1425: ADDcc_R	addcc 	%r19, %r16, %r11
splash_cmpr_10_327:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 1429: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe31fc000  ! 1433: LDDF_R	ldd	[%r31, %r0], %f17
	.word 0x93d02032  ! 1437: Tcc_I	tne	icc_or_xcc, %r0 + 50
memptr_10_328:
	set 0x60740000, %r31
	.word 0x8584fb72  ! 1441: WRCCR_I	wr	%r19, 0x1b72, %ccr
brcommon3_10_329:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe06fe060  ! 1: LDSTUB_I	ldstub	%r16, [%r31 + 0x0060]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x81982c94  ! 1445: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0c94, %hpstate
tglhtw_10_330:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x392, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa7b44986  ! 1449: BSHUFFLE	fmovc32	%d48, %d6, %d50
trapasi_10_332:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 1453: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_10_333:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xf01cbc00, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x33400001  ! 1: FBPE	fbe,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 1457: FBPULE	fbule
	.word 0xa5a449ab  ! 1461: FDIVs	fdivs	%f17, %f11, %f18
	.word 0xd137e181  ! 1465: STQF_I	-	%f8, [0x0181, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_335:
	.word 0x39400001  ! 1469: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
    set 0x2588, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x99b507d1  ! 1473: PDIST	pdistn	%d20, %d48, %d12
intveclr_10_336:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x64a9e66a2d2a905c, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x34a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1477: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x87802036  ! 1481: WRASI_I	wr	%r0, 0x0036, %asi
memptr_10_338:
	set 0x60140000, %r31
	.word 0x85842951  ! 1485: WRCCR_I	wr	%r16, 0x0951, %ccr
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_339)+16, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_339)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_339:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_339:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9843035  ! 1489: WR_SET_SOFTINT_I	wr	%r16, 0x1035, %set_softint
	.word 0x8143e011  ! 1493: MEMBAR	membar	#LoadLoad | #Lookaside 
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_341:
	.word 0xa5a4c9d3  ! 1497: FDIVd	fdivd	%f50, %f50, %f18
dvapa_10_342:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf63, %r20
	mov 0x5, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xb02, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd03fe120  ! 1501: STD_I	std	%r8, [%r31 + 0x0120]
	.word 0x94ab0012  ! 1505: ANDNcc_R	andncc 	%r12, %r18, %r10
	.word 0x29800001  ! 1509: FBL	fbl,a	<label_0x1>
br_badelay1_10_344:
	.word 0xc36fe180  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0180], #one_read
	.word 0xe731c014  ! 1: STQF_R	-	%f19, [%r20, %r7]
	.word 0x1f400001  ! 1: FBPO	fbo
	normalw
	.word 0xa3458000  ! 1513: RD_SOFTINT_REG	rd	%softint, %r17
ibp_10_346:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_346:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_346
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_346:
    brnz %r16, ibp_wait10_346
    ld [%r23], %r16
    ba ibp_startwait10_346
    mov 0x10, %r16
continue_ibp_10_346:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_346:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_346
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_346:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_346
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_346:
    best_set_reg(0x00000040cad88a2c,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe1bfdd40  ! 1517: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_347:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_347-donret_10_347+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00081b00 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd59, %htstate
	wrhpr %g0, 0xd02, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_347:
	.word 0x8d90355f  ! 1521: WRPR_PSTATE_I	wrpr	%r0, 0x155f, %pstate
	.word 0x9f802923  ! 1525: SIR	sir	0x0923
	.word 0xe87fe1d0  ! 1529: SWAP_I	swap	%r20, [%r31 + 0x01d0]
brcommon1_10_349:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xa7702130  ! 1: POPC_I	popc	0x0130, %r19
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0x87aa4a49  ! 1533: FCMPd	fcmpd	%fcc<n>, %f40, %f40
	.word 0x8d9033b0  ! 1537: WRPR_PSTATE_I	wrpr	%r0, 0x13b0, %pstate
pmu_10_351:
	nop
	nop
	setx 0xffffffb8ffffffac, %g1, %g7
	.word 0xa3800007  ! 1541: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1545: WRTICK_R	wr	%r0, %r17, %tick
trapasi_10_354:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 1549: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
splash_tba_10_355:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000000003a0000, %r11, %r12
	.word 0x8b90000c  ! 1553: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_356:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_356-donret_10_356+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d4c600 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f4f, %htstate
	wrhpr %g0, 0x192, %hpstate  !  rand=1 (10)
	retry
donretarg_10_356:
	.word 0xa7a449d3  ! 1557: FDIVd	fdivd	%f48, %f50, %f50
pmu_10_357:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb6ffffffa9, %g1, %g7
	.word 0xa3800007  ! 1561: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8d902923  ! 1565: WRPR_PSTATE_I	wrpr	%r0, 0x0923, %pstate
ibp_10_359:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_359:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_359
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_359:
    brnz %r16, ibp_wait10_359
    ld [%r23], %r16
    ba ibp_startwait10_359
    mov 0x10, %r16
continue_ibp_10_359:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_359:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_359
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_359:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_359
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_359:
    best_set_reg(0x00000050b7ca2c63,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x55b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x20800001  ! 1569: BN	bn,a	<label_0x1>
	.word 0x87aa8a52  ! 1573: FCMPd	fcmpd	%fcc<n>, %f10, %f18
	.word 0x93b244d2  ! 1577: FCMPNE32	fcmpne32	%d40, %d18, %r9
	.word 0x8143e011  ! 1581: MEMBAR	membar	#LoadLoad | #Lookaside 
trapasi_10_363:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5a) 
	.word 0xd6d84b40  ! 1585: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r11
mondo_10_364:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3c8] %asi
    stxa %r17, [%r0+0x3d0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d940004  ! 1589: WRPR_WSTATE_R	wrpr	%r16, %r4, %wstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f803f11  ! 1: SIR	sir	0x1f11
intvec_10_365:
	.word 0xa7a189d0  ! 1593: FDIVd	fdivd	%f6, %f16, %f50
fpinit_10_366:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009c4  ! 1597: FDIVd	fdivd	%f0, %f4, %f4
brcommon1_10_367:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe3e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r17
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0x87a84a4c  ! 1601: FCMPd	fcmpd	%fcc<n>, %f32, %f12
mondo_10_368:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r3, [%r0+0x3c0] %asi
    stxa %r9, [%r0+0x3c0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d94c013  ! 1605: WRPR_WSTATE_R	wrpr	%r19, %r19, %wstate
memptr_10_369:
	set user_data_start, %r31
	.word 0x85843c45  ! 1609: WRCCR_I	wr	%r16, 0x1c45, %ccr
intveclr_10_370:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x13c81cf90482d83e, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1613: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_10_371:
	set 0x60740000, %r31
	.word 0x85823aa9  ! 1617: WRCCR_I	wr	%r8, 0x1aa9, %ccr
splash_lsu_10_372:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xbf21c8ba, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x26ca0001  ! 1: BRLZ	brlz,a,pt	%r8,<label_0xa0001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 1621: FBPULE	fbule
	.word 0x87802082  ! 1625: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0xe19fde20  ! 1629: LDDFA_R	ldda	[%r31, %r0], %f16
trapasi_10_374:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1633: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0xd8dfd920  ! 1637: LDXA_R	ldxa	[%r31, %r0] 0xc9, %r12
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_376) + 0, 16, 16)) -> intp(4,0,10,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_376)&0xffffffff) + 0, 16, 16)) -> intp(0,0,14,,,,,1)
#else
	set 0x7b30773b, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_376:
	.word 0x39400001  ! 1641: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x8d802000  ! 1645: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x8d802000  ! 1649: WRFPRS_I	wr	%r0, 0x0000, %fprs
mondo_10_377:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3d0] %asi
    stxa %r13, [%r0+0x3e0] %asi
	.word 0x87802088  ! 1: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0x9d908010  ! 1653: WRPR_WSTATE_R	wrpr	%r2, %r16, %wstate
ibp_10_378:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_378:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_378
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_378:
    brnz %r16, ibp_wait10_378
    ld [%r23], %r16
    ba ibp_startwait10_378
    mov 0x10, %r16
continue_ibp_10_378:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_378:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_378
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_378:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_378
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_378:
    best_set_reg(0x000000500aec630c,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xd83, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfda00  ! 1657: STDFA_R	stda	%f0, [%r0, %r31]
intveclr_10_379:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xadb95c93a924ce5e, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1661: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
ibp_10_380:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_380:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_380
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_380:
    brnz %r16, ibp_wait10_380
    ld [%r23], %r16
    ba ibp_startwait10_380
    mov 0x10, %r16
continue_ibp_10_380:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_380:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_380
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_380:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_380
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_380:
    best_set_reg(0x000000508de30c3c,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xdadfc400  ! 1665: LDXA_R	ldxa	[%r31, %r0] 0x20, %r13
	.word 0xe19fdb20  ! 1669: LDDFA_R	ldda	[%r31, %r0], %f16
br_badelay2_10_382:
	.word 0x00800001  ! 1: BN	bn  	<label_0x1>
	pdist %f20, %f6, %f4
	.word 0xa9b08311  ! 1673: ALIGNADDRESS	alignaddr	%r2, %r17, %r20
pmu_10_383:
	nop
	nop
	setx 0xffffffbbffffffa4, %g1, %g7
	.word 0xa3800007  ! 1677: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_384:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_384-donret_10_384+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00895d00 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x175f, %htstate
	best_set_reg(0x1d42, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	retry
donretarg_10_384:
	.word 0x81982c05  ! 1681: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0c05, %hpstate
mondo_10_385:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r7, [%r0+0x3c8] %asi
    stxa %r16, [%r0+0x3d0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d950003  ! 1685: WRPR_WSTATE_R	wrpr	%r20, %r3, %wstate
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_386) + 8, 16, 16)) -> intp(0,0,1,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_386)&0xffffffff) + 40, 16, 16)) -> intp(7,0,14,,,,,1)
#else
	set 0xa4f06d94, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_386:
	.word 0xa9b0c4d4  ! 1689: FCMPNE32	fcmpne32	%d34, %d20, %r20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_387:
	.word 0x99b404d2  ! 1693: FCMPNE32	fcmpne32	%d16, %d18, %r12
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_388:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_388-donret_10_388), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00dd2000 | (28 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x175e, %htstate
	wrhpr %g0, 0xf5a, %hpstate  !  rand=1 (10)
	.word 0x27400001  ! 1: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_10_388:
	.word 0xa9a309d0  ! 1697: FDIVd	fdivd	%f12, %f16, %f20
trapasi_10_389:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1701: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0x8d802000  ! 1705: WRFPRS_I	wr	%r0, 0x0000, %fprs
trapasi_10_391:
	nop
	mov 0x3c8, %r1 	! (VA for ASI 0x25) 
	.word 0xe4d844a0  ! 1709: LDXA_R	ldxa	[%r1, %r0] 0x25, %r18
intveclr_10_392:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xe62a3cac09a56332, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1713: FBPLG	fblg
dvapa_10_393:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc81, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x8d3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfdb20  ! 1717: STDA_R	stda	%r16, [%r31 + %r0] 0xd9
	.word 0xd93fe030  ! 1721: STDF_I	std	%f12, [0x0030, %r31]
	.word 0x16780001  ! 1725: BPGE	<illegal instruction>
	.word 0xa1902006  ! 1729: WRPR_GL_I	wrpr	%r0, 0x0006, %-
frzptr_10_395:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 1733: BN	bn,a	<label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_397)+40, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_397)&0xffffffff) + 40, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_397:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_397:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9817e6f  ! 1737: WR_SET_SOFTINT_I	wr	%r5, 0x1e6f, %set_softint
ibp_10_398:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_398:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_398
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_398:
    brnz %r16, ibp_wait10_398
    ld [%r23], %r16
    ba ibp_startwait10_398
    mov 0x10, %r16
continue_ibp_10_398:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_398:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_398
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_398:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_398
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_398:
    best_set_reg(0x000000500ecc3c44,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe9e7c2e0  ! 1741: CASA_I	casa	[%r31] 0x17, %r0, %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_399:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_399-donret_10_399+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x001a9200 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1607, %htstate
	wrhpr %g0, 0x201, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_10_399:
	.word 0xa7a2c9c6  ! 1745: FDIVd	fdivd	%f42, %f6, %f50
	.word 0xc19fe120  ! 1749: LDDFA_I	ldda	[%r31, 0x0120], %f0
	.word 0xe6cfd160  ! 1753: LDSBA_R	ldsba	[%r31, %r0] 0x8b, %r19
	.word 0xe44fe170  ! 1757: LDSB_I	ldsb	[%r31 + 0x0170], %r18
splash_tba_10_401:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1761: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_10_403:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xf42, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe151  ! 1765: LDD_I	ldd	[%r31 + 0x0151], %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_405:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_405-donret_10_405), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ecc600 | (0x8b << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xadd, %htstate
	best_set_reg(0x970, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	done
.align 2048
donretarg_10_405:
	.word 0xa9a249d2  ! 1769: FDIVd	fdivd	%f40, %f18, %f20
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_406) + 8, 16, 16)) -> intp(6,0,2,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_406)&0xffffffff) + 40, 16, 16)) -> intp(2,0,17,,,,,1)
#else
	set 0x22f06964, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x9f8039ed  ! 1: SIR	sir	0x19ed
intvec_10_406:
	.word 0x39400001  ! 1773: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
ibp_10_407:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_407:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_407
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_407:
    brnz %r16, ibp_wait10_407
    ld [%r23], %r16
    ba ibp_startwait10_407
    mov 0x10, %r16
continue_ibp_10_407:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_407:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_407
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_407:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_407
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_407:
    best_set_reg(0x00000040a0fc4475,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xcc8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd03fe140  ! 1777: STD_I	std	%r8, [%r31 + 0x0140]
	.word 0xa7a2c9d2  ! 1781: FDIVd	fdivd	%f42, %f18, %f50
brcommon3_10_411:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe7e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r19
    ba,a .+8
    jmpl %r27+0, %r27
    stxa %r9, [%r0] ASI_LSU_CONTROL
	.word 0x93aac831  ! 1785: FMOVGE	fmovs	%fcc1, %f17, %f9
	.word 0xc09fdf20  ! 1789: LDDA_R	ldda	[%r31, %r0] 0xf9, %r0
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_414)+40, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_414)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_414:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_414:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa981f618  ! 1793: WR_SET_SOFTINT_I	wr	%r7, 0x1618, %set_softint
brcommon3_10_416:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd5e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r10
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0x95b7c7c0  ! 1797: PDIST	pdistn	%d62, %d0, %d10
intveclr_10_417:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x580622929d3c746c, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1801: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_10_418:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x67b34a86b1541827, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1805: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_10_419:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xeb9, %r20
	mov 0x1d, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc13, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xdbe7d140  ! 1809: CASA_I	casa	[%r31] 0x8a, %r0, %r13
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_10_420:
	ta	T_CHANGE_NONPRIV	! macro
fpinit_10_421:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009a4  ! 1817: FDIVs	fdivs	%f0, %f4, %f6
intveclr_10_422:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb59bd9272f4478d3, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xc5a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1821: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xc36fe051  ! 1825: PREFETCH_I	prefetch	[%r31 + 0x0051], #one_read
fpinit_10_424:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89b00484  ! 1829: FCMPLE32	fcmple32	%d0, %d4, %r4
memptr_10_425:
	set 0x60340000, %r31
	.word 0x85846b4c  ! 1833: WRCCR_I	wr	%r17, 0x0b4c, %ccr
brcommon3_10_426:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e0c0  ! 1: STQF_I	-	%f13, [0x00c0, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x81982407  ! 1837: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0407, %hpstate
splash_tba_10_427:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1841: WRPR_TBA_R	wrpr	%r0, %r12, %tba
jmptr_10_428:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1845: JMPL_R	jmpl	%r27 + %r0, %r27
ibp_10_429:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_429:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_429
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_429:
    brnz %r16, ibp_wait10_429
    ld [%r23], %r16
    ba ibp_startwait10_429
    mov 0x10, %r16
continue_ibp_10_429:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_429:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_429
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_429:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_429
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_429:
    best_set_reg(0x00000050c7c475eb,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xad1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe89fc380  ! 1849: LDDA_R	ldda	[%r31, %r0] 0x1c, %r20
	.word 0x9f803258  ! 1853: SIR	sir	0x1258
dvapa_10_430:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb58, %r20
	mov 0xc, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa53, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd7e7e000  ! 1857: CASA_R	casa	[%r31] %asi, %r0, %r11
trapasi_10_432:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xe4d84980  ! 1861: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_434:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_434-donret_10_434+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0004ac00 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x6cd, %htstate
	best_set_reg(0x17ca, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	retry
donretarg_10_434:
	.word 0x99a509d4  ! 1865: FDIVd	fdivd	%f20, %f20, %f12
frzptr_10_435:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x24cfc001  ! 1: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 1869: BN	bn,a	<label_0x1>
trapasi_10_436:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe6d84920  ! 1873: LDXA_R	ldxa	[%r1, %r0] 0x49, %r19
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa7b444d0  ! 1: FCMPNE32	fcmpne32	%d48, %d16, %r19
intvec_10_437:
	.word 0x9f80306a  ! 1877: SIR	sir	0x106a
demap_10_438:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x253, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe090  ! 1881: LDD_I	ldd	[%r31 + 0x0090], %r10
intveclr_10_439:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa2bdaeab2d0d8fa9, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1885: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_441:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_441-donret_10_441), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00a0aa00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x55f, %htstate
	best_set_reg(0x16f2, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_441:
	.word 0x8d902ad3  ! 1889: WRPR_PSTATE_I	wrpr	%r0, 0x0ad3, %pstate
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_442)+24, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_442)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_442:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_442:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984fcb9  ! 1893: WR_SET_SOFTINT_I	wr	%r19, 0x1cb9, %set_softint
pmu_10_443:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa2, %g1, %g7
	.word 0xa3800007  ! 1897: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x9f8034e4  ! 1901: SIR	sir	0x14e4
	.word 0x22800001  ! 1905: BE	be,a	<label_0x1>
	.word 0x39400001  ! 1909: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_446:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_446-donret_10_446+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x006a6a00 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x5c5, %htstate
	best_set_reg(0x948, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_10_446:
	.word 0xe06fe188  ! 1913: LDSTUB_I	ldstub	%r16, [%r31 + 0x0188]
memptr_10_448:
	set 0x60740000, %r31
	.word 0x8581759b  ! 1917: WRCCR_I	wr	%r5, 0x159b, %ccr
	.word 0xe737e104  ! 1921: STQF_I	-	%f19, [0x0104, %r31]
	.word 0x9f802a93  ! 1925: SIR	sir	0x0a93
dvapa_10_450:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8a8, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd5b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5a349ab  ! 1929: FDIVs	fdivs	%f13, %f11, %f18
	.word 0x91d020b2  ! 1933: Tcc_I	ta	icc_or_xcc, %r0 + 178
intveclr_10_451:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x597536a00c7edec0, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x210, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1937: FBPLG	fblg
	.word 0xe48fd160  ! 1941: LDUBA_R	lduba	[%r31, %r0] 0x8b, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_452:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_452-donret_10_452+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00de7d00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc0e, %htstate
	wrhpr %g0, 0x380, %hpstate  !  rand=1 (10)
	retry
donretarg_10_452:
	.word 0x00800001  ! 1945: BN	bn  	<label_0x1>
	.word 0x9f802b50  ! 1949: SIR	sir	0x0b50
	.word 0x87802083  ! 1953: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x97b1c551  ! 1957: FCMPEQ16	fcmpeq16	%d38, %d48, %r11
	.word 0xa9b40593  ! 1961: FCMPGT32	fcmpgt32	%d16, %d50, %r20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_10_453:
	.word 0xa7b084c2  ! 1965: FCMPNE32	fcmpne32	%d2, %d2, %r19
	.word 0x8d802004  ! 1969: WRFPRS_I	wr	%r0, 0x0004, %fprs
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_454) + 16, 16, 16)) -> intp(5,0,1,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_454)&0xffffffff) + 48, 16, 16)) -> intp(6,0,15,,,,,1)
#else
	set 0x3270a129, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_10_454:
	.word 0xa7a489c6  ! 1973: FDIVd	fdivd	%f18, %f6, %f50
	.word 0x9f80335f  ! 1977: SIR	sir	0x135f
dvapa_10_455:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x893, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x880, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfc2e0  ! 1981: STDA_R	stda	%r16, [%r31 + %r0] 0x17
	.word 0xa9480000  ! 1985: RDHPR_HPSTATE	rdhpr	%hpstate, %r20
	.word 0x91d02032  ! 1989: Tcc_I	ta	icc_or_xcc, %r0 + 50
	.word 0x9f803ce4  ! 1993: SIR	sir	0x1ce4
splash_tba_10_456:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1997: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_10_457:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x5799ee05, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2001: FBPULE	fbule
	.word 0x9f80211b  ! 2005: SIR	sir	0x011b
dvapa_10_458:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x96b, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa53, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfc400  ! 2009: STDA_R	stda	%r16, [%r31 + %r0] 0x20
	wrhpr %g0, 0x780, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2013: MEMBAR	membar	#LoadLoad | #Lookaside 
ibp_10_460:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_460:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_460
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_460:
    brnz %r16, ibp_wait10_460
    ld [%r23], %r16
    ba ibp_startwait10_460
    mov 0x10, %r16
continue_ibp_10_460:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_460:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_460
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_460:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_460
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_460:
    best_set_reg(0x000000400ff5ebb8,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x208, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe13fe1d0  ! 2017: STDF_I	std	%f16, [0x01d0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_462:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_462-donret_10_462), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d35200 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1485, %htstate
	best_set_reg(0xe30, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	.word 0x3a800001  ! 1: BCC	bcc,a	<label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_10_462:
	.word 0x1a800001  ! 2021: BCC	bcc  	<label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_10_463)+56, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_10_463)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x10),1,3,,,,,1)
xir_10_463:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_10_463:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa982774c  ! 2025: WR_SET_SOFTINT_I	wr	%r9, 0x174c, %set_softint
	.word 0xe08008a0  ! 2029: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r16
pmu_10_466:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffac, %g1, %g7
	.word 0xa3800007  ! 2033: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_10_467:
	set 0x60140000, %r31
	.word 0x8582b77c  ! 2037: WRCCR_I	wr	%r10, 0x177c, %ccr
splash_hpstate_10_468:
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	.word 0x819830d5  ! 2041: WRHPR_HPSTATE_I	wrhpr	%r0, 0x10d5, %hpstate
ibp_10_469:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_469:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_469
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_469:
    brnz %r16, ibp_wait10_469
    ld [%r23], %r16
    ba ibp_startwait10_469
    mov 0x10, %r16
continue_ibp_10_469:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_469:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_469
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_469:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_469
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_469:
    best_set_reg(0x00000050c0ebb8c6,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xc32fe1e0  ! 2045: STXFSR_I	st-sfr	%f1, [0x01e0, %r31]
	.word 0x99508000  ! 2049: RDPR_TSTATE	<illegal instruction>
brcommon3_10_470:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e020  ! 1: STQF_I	-	%f13, [0x0020, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 2053: BN	bn,a	<label_0x1>
tglhtw_10_471:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x488, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa5b40987  ! 2057: BSHUFFLE	fmovc32	%d16, %d38, %d18
fpinit_10_472:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 2061: FCMPLE32	fcmple32	%d0, %d4, %r8
mondo_10_473:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r17, [%r0+0x3e0] %asi
    stxa %r9, [%r0+0x3e0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d914010  ! 2065: WRPR_WSTATE_R	wrpr	%r5, %r16, %wstate
	.word 0xa2ac8010  ! 2069: ANDNcc_R	andncc 	%r18, %r16, %r17
mondo_10_475:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3e8] %asi
    stxa %r6, [%r0+0x3e8] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d94c00d  ! 2073: WRPR_WSTATE_R	wrpr	%r19, %r13, %wstate
dvapa_10_477:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc30, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x989, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fdf20  ! 2077: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x8780201c  ! 2081: WRASI_I	wr	%r0, 0x001c, %asi
dvapa_10_478:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb93, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x308, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd8dfdf00  ! 2085: LDXA_R	ldxa	[%r31, %r0] 0xf8, %r12
ibp_10_479:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_479:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_479
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_479:
    brnz %r16, ibp_wait10_479
    ld [%r23], %r16
    ba ibp_startwait10_479
    mov 0x10, %r16
continue_ibp_10_479:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_479:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_479
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_479:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_479
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_479:
    best_set_reg(0x0000004016f8c681,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x957028c6  ! 2089: POPC_I	popc	0x08c6, %r10
	.word 0xd23fe1ce  ! 2093: STD_I	std	%r9, [%r31 + 0x01ce]
demap_10_481:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x00800001  ! 1: BN	bn  	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x2c3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe060  ! 2097: LDD_I	ldd	[%r31 + 0x0060], %r11
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xe1e7d160  ! 1: CASA_I	casa	[%r31] 0x8b, %r0, %r16
	mov 0x35, %r30
	.word 0x83d0001e  ! 2101: Tcc_R	te	icc_or_xcc, %r0 + %r30
splash_lsu_10_482:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x28810634, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2105: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
splash_cmpr_10_483:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2109: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x964b4012  ! 2113: MULX_R	mulx 	%r13, %r18, %r11
	.word 0x91948013  ! 2117: WRPR_PIL_R	wrpr	%r18, %r19, %pil
	.word 0xdb97c400  ! 2121: LDQFA_R	-	[%r31, %r0], %f13
memptr_10_485:
	set 0x60540000, %r31
	.word 0x85817fe1  ! 2125: WRCCR_I	wr	%r5, 0x1fe1, %ccr
splash_lsu_10_487:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xb7bfd836, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2129: FBPULE	fbule
tglhtw_10_488:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x1db, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x99b2898d  ! 2133: BSHUFFLE	fmovc32	%d10, %d44, %d12
	.word 0x9f802b34  ! 2137: SIR	sir	0x0b34
	.word 0xa7520000  ! 2141: RDPR_PIL	<illegal instruction>
	.word 0xc1bfe1c0  ! 2145: STDFA_I	stda	%f0, [0x01c0, %r31]
splash_cmpr_10_489:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 2149: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe127e11c  ! 2153: STF_I	st	%f16, [0x011c, %r31]
splash_cmpr_10_490:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2157: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe7e7dc40  ! 2161: CASA_I	casa	[%r31] 0xe2, %r0, %r19
splash_hpstate_10_492:
	.word 0x81983ccd  ! 2165: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ccd, %hpstate
cwp_10_493:
    set user_data_start, %o7
	.word 0x93902000  ! 2169: WRPR_CWP_I	wrpr	%r0, 0x0000, %cwp
	.word 0xe53fe0f0  ! 2173: STDF_I	std	%f18, [0x00f0, %r31]
splash_tba_10_496:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000400380000, %r11, %r12
	.word 0x8b90000c  ! 2177: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 2181: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0800a60  ! 2185: LDUWA_R	lduwa	[%r0, %r0] 0x53, %r8
splash_lsu_10_499:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x506d8287, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2189: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_500:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_500-donret_10_500), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00a32e00 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x38e, %htstate
	best_set_reg(0x1153, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	retry
donretarg_10_500:
	.word 0xdaffc400  ! 2193: SWAPA_R	swapa	%r13, [%r31 + %r0] 0x20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f802ed0  ! 1: SIR	sir	0x0ed0
intvec_10_501:
	.word 0x19400001  ! 2197: FBPUGE	fbuge
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_502:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_502-donret_10_502), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0015fb00 | (0x82 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xfc5, %htstate
	wrhpr %g0, 0x85a, %hpstate  !  rand=1 (10)
	retry
.align 2048
donretarg_10_502:
	.word 0x8d903353  ! 2201: WRPR_PSTATE_I	wrpr	%r0, 0x1353, %pstate
	.word 0x89800011  ! 2205: WRTICK_R	wr	%r0, %r17, %tick
memptr_10_504:
	set user_data_start, %r31
	.word 0x85827229  ! 2209: WRCCR_I	wr	%r9, 0x1229, %ccr
frzptr_10_505:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 2213: BN	bn  	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_507:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_507-donret_10_507), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x006c3200 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1893, %htstate
	wrhpr %g0, 0xc52, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_10_507:
	.word 0x8d9031d7  ! 2217: WRPR_PSTATE_I	wrpr	%r0, 0x11d7, %pstate
ibp_10_508:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_508:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_508
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_508:
    brnz %r16, ibp_wait10_508
    ld [%r23], %r16
    ba ibp_startwait10_508
    mov 0x10, %r16
continue_ibp_10_508:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_508:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_508
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_508:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_508
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_508:
    best_set_reg(0x00000040d3c681b2,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x183, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91b50493  ! 2221: FCMPLE32	fcmple32	%d20, %d50, %r8
intveclr_10_509:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9e203d684725a92a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2225: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_10_510:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2229: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0xb184c013  ! 2233: WR_STICK_REG_R	wr	%r19, %r19, %-
memptr_10_511:
	set 0x60540000, %r31
	.word 0x8584f6ba  ! 2237: WRCCR_I	wr	%r19, 0x16ba, %ccr
	.word 0x81b01021  ! 2241: SIAM	siam	1
	.word 0x91944008  ! 2245: WRPR_PIL_R	wrpr	%r17, %r8, %pil
splash_lsu_10_513:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x2a72a54d, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x23400001  ! 1: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2249: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xe19fe040  ! 2253: LDDFA_I	ldda	[%r31, 0x0040], %f16
trapasi_10_514:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 2257: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_10_515:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x6204a8cc, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x33400001  ! 1: FBPE	fbe,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2261: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x87802004  ! 2265: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0xe84fe040  ! 2269: LDSB_I	ldsb	[%r31 + 0x0040], %r20
pmu_10_517:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa6, %g1, %g7
	.word 0xa3800007  ! 2273: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe88008a0  ! 2277: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0xc32fc000  ! 2281: STXFSR_R	st-sfr	%f1, [%r0, %r31]
splash_cmpr_10_518:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2285: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x9bb044d3  ! 2289: FCMPNE32	fcmpne32	%d32, %d50, %r13
demap_10_520:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xf8a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe138  ! 2293: LDD_I	ldd	[%r31 + 0x0138], %r18
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_522) + 8, 16, 16)) -> intp(5,0,30,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_522)&0xffffffff) + 56, 16, 16)) -> intp(5,0,7,,,,,1)
#else
	set 0x40a0cce4, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_522:
	.word 0x39400001  ! 2297: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
dvapa_10_523:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x9df, %r20
	mov 0x2, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf81, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfdc00  ! 2301: STDA_R	stda	%r16, [%r31 + %r0] 0xe0
	.word 0x9f802447  ! 2305: SIR	sir	0x0447
br_longdelay3_10_525:
	nop
	not %g0, %r27
	jmpl %r27+0, %r27
	.word 0x9f803457  ! 2309: SIR	sir	0x1457
	.word 0xc36fe010  ! 2313: PREFETCH_I	prefetch	[%r31 + 0x0010], #one_read
pmu_10_526:
	nop
	nop
	setx 0xffffffb4ffffffaf, %g1, %g7
	.word 0xa3800007  ! 2317: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa1902009  ! 2321: WRPR_GL_I	wrpr	%r0, 0x0009, %-
memptr_10_527:
	set 0x60540000, %r31
	.word 0x8581ba43  ! 2325: WRCCR_I	wr	%r6, 0x1a43, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_528) + 56, 16, 16)) -> intp(3,0,7,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_528)&0xffffffff) + 24, 16, 16)) -> intp(7,0,12,,,,,1)
#else
	set 0x8040a7d4, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x91b184c3  ! 1: FCMPNE32	fcmpne32	%d6, %d34, %r8
intvec_10_528:
	.word 0x9f803c0d  ! 2329: SIR	sir	0x1c0d
trapasi_10_529:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe6d84940  ! 2333: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r19
demap_10_530:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x21400001  ! 1: FBPN	fbn,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x311, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe129  ! 2337: LDD_I	ldd	[%r31 + 0x0129], %r20
splash_htba_10_531:
	nop
	ta T_CHANGE_HPRIV
	setx 0x0000000000280000, %r11, %r12
	.word 0x8b98000c  ! 2341: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa4c26447  ! 2345: ADDCcc_I	addccc 	%r9, 0x0447, %r18
	.word 0x97b0c7d3  ! 2349: PDIST	pdistn	%d34, %d50, %d42
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_533:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_533-donret_10_533), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ac7800 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x14c4, %htstate
	best_set_reg(0x1621, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_533:
	.word 0x8d9035f4  ! 2353: WRPR_PSTATE_I	wrpr	%r0, 0x15f4, %pstate
ibp_10_534:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_534:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_534
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_534:
    brnz %r16, ibp_wait10_534
    ld [%r23], %r16
    ba ibp_startwait10_534
    mov 0x10, %r16
continue_ibp_10_534:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_534:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_534
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_534:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_534
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_534:
    best_set_reg(0x00000040d5c1b208,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x20800001  ! 2357: BN	bn,a	<label_0x1>
	.word 0xa150c000  ! 2361: RDPR_TT	<illegal instruction>
mondo_10_535:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3e0] %asi
    stxa %r19, [%r0+0x3c0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d930011  ! 2365: WRPR_WSTATE_R	wrpr	%r12, %r17, %wstate
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_10_536:
	ta	T_CHANGE_NONPRIV	! macro
memptr_10_537:
	set user_data_start, %r31
	.word 0x85846075  ! 2373: WRCCR_I	wr	%r17, 0x0075, %ccr
	.word 0xda0fc000  ! 2377: LDUB_R	ldub	[%r31 + %r0], %r13
demap_10_539:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xe83, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe108  ! 2381: LDD_I	ldd	[%r31 + 0x0108], %r18
	.word 0xd2c7d100  ! 2385: LDSWA_R	ldswa	[%r31, %r0] 0x88, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_540) + 24, 16, 16)) -> intp(3,0,29,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_540)&0xffffffff) + 16, 16, 16)) -> intp(7,0,2,,,,,1)
#else
	set 0xfa30be99, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_540:
	.word 0x95b504cb  ! 2389: FCMPNE32	fcmpne32	%d20, %d42, %r10
	.word 0xe0800ae0  ! 2393: LDUWA_R	lduwa	[%r0, %r0] 0x57, %r16
jmptr_10_541:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 2397: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_10_542:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa5, %g1, %g7
	.word 0xa3800007  ! 2401: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x27400001  ! 1: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
	.word 0x8d903a57  ! 2405: WRPR_PSTATE_I	wrpr	%r0, 0x1a57, %pstate
	.word 0xe53fe0b0  ! 2409: STDF_I	std	%f18, [0x00b0, %r31]
splash_cmpr_10_547:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2413: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_548:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_548-donret_10_548+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x004dbc00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1fcc, %htstate
	wrhpr %g0, 0xd0a, %hpstate  !  rand=1 (10)
	retry
donretarg_10_548:
	.word 0xa9a2c9d1  ! 2417: FDIVd	fdivd	%f42, %f48, %f20
trapasi_10_549:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xd6d84980  ! 2421: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r11
	.word 0x9f8038f8  ! 2425: SIR	sir	0x18f8
	.word 0x97480000  ! 2429: RDHPR_HPSTATE	rdhpr	%hpstate, %r11
	.word 0xe8d7c240  ! 2433: LDSHA_R	ldsha	[%r31, %r0] 0x12, %r20
mondo_10_550:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r16, [%r0+0x3c8] %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d940004  ! 2437: WRPR_WSTATE_R	wrpr	%r16, %r4, %wstate
splash_hpstate_10_551:
	ta T_CHANGE_NONHPRIV
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x819826f6  ! 2441: WRHPR_HPSTATE_I	wrhpr	%r0, 0x06f6, %hpstate
	.word 0xe2800be0  ! 2445: LDUWA_R	lduwa	[%r0, %r0] 0x5f, %r17
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_10_552) + 56, 16, 16)) -> intp(2,0,0,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_10_552)&0xffffffff) + 48, 16, 16)) -> intp(3,0,7,,,,,1)
#else
	set 0x6c0d981, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_10_552:
	.word 0x19400001  ! 2449: FBPUGE	fbuge
intveclr_10_553:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x945b0529489633cc, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2453: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
jmptr_10_554:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2457: JMPL_R	jmpl	%r27 + %r0, %r27
intveclr_10_555:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x675d66889415c980, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2461: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xa953c000  ! 2465: RDPR_FQ	<illegal instruction>
	.word 0xd61fc000  ! 2469: LDD_R	ldd	[%r31 + %r0], %r11
intveclr_10_556:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x136c889f0a8fc2db, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2473: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xd03fc000  ! 2477: STD_R	std	%r8, [%r31 + %r0]
dvapa_10_557:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x9a1, %r20
	mov 0x6, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x28a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f80310f  ! 2481: SIR	sir	0x110f
splash_tba_10_558:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2485: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_10_559:
	set 0x60140000, %r31
	.word 0x8584fadf  ! 2489: WRCCR_I	wr	%r19, 0x1adf, %ccr
	.word 0xc1bfde20  ! 2493: STDFA_R	stda	%f0, [%r0, %r31]
dvapa_10_561:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf0d, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x7c1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fde00  ! 2497: LDDFA_R	ldda	[%r31, %r0], %f16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_562:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_562-donret_10_562+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00361000 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1387, %htstate
	wrhpr %g0, 0x708, %hpstate  !  rand=1 (10)
	retry
.align 2048
donretarg_10_562:
	.word 0xe66fe155  ! 2501: LDSTUB_I	ldstub	%r19, [%r31 + 0x0155]
	.word 0xc1bfe100  ! 2505: STDFA_I	stda	%f0, [0x0100, %r31]
	.word 0xe697d040  ! 2509: LDUHA_R	lduha	[%r31, %r0] 0x82, %r19
br_badelay3_10_564:
	.word 0x02800001  ! 1: BE	be  	<label_0x1>
	.word 0xc37fe412	! Random illegal ?
	.word 0xe3110012  ! 1: LDQF_R	-	[%r4, %r18], %f17
	.word 0xa9a48827  ! 2513: FADDs	fadds	%f18, %f7, %f20
	.word 0x93b40333  ! 2517: BMASK	bmask	%r16, %r19, %r9
frzptr_10_567:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xa3702100  ! 1: POPC_I	popc	0x0100, %r17
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2521: BN	bn,a	<label_0x1>
memptr_10_568:
	set 0x60140000, %r31
	.word 0x8584f62b  ! 2525: WRCCR_I	wr	%r19, 0x162b, %ccr
dvapa_10_569:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xcaa, %r20
	mov 0x2, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xc01, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fde00  ! 2529: LDDFA_R	ldda	[%r31, %r0], %f16
splash_cmpr_10_571:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 2533: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x8d902053  ! 2537: WRPR_PSTATE_I	wrpr	%r0, 0x0053, %pstate
	.word 0xc09fdc40  ! 2541: LDDA_R	ldda	[%r31, %r0] 0xe2, %r0
dvapa_10_574:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe25, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa4a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93b407d3  ! 2545: PDIST	pdistn	%d16, %d50, %d40
mondo_10_575:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r7, [%r0+0x3c0] %asi
    stxa %r7, [%r0+0x3c0] %asi
	.word 0x87802083  ! 1: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x9d908013  ! 2549: WRPR_WSTATE_R	wrpr	%r2, %r19, %wstate
demap_10_576:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x390, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe0c5  ! 2553: LDD_I	ldd	[%r31 + 0x00c5], %r9
intveclr_10_577:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x0191ba90095274e9, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x91a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2557: FBPLG	fblg
	.word 0x89800011  ! 2561: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xe13fe170  ! 2565: STDF_I	std	%f16, [0x0170, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_581:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_581-donret_10_581+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00abfb00 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xa2d, %htstate
	best_set_reg(0x6f9, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	.word 0x0a800001  ! 1: BCS	bcs  	<label_0x1>
	done
.align 2048
donretarg_10_581:
	.word 0x8d9020d7  ! 2569: WRPR_PSTATE_I	wrpr	%r0, 0x00d7, %pstate
memptr_10_582:
	set user_data_start, %r31
	.word 0x8584f25f  ! 2573: WRCCR_I	wr	%r19, 0x125f, %ccr
splash_tba_10_583:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2577: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_10_584:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3e8] %asi
    stxa %r17, [%r0+0x3c0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d94c011  ! 2581: WRPR_WSTATE_R	wrpr	%r19, %r17, %wstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_585:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_585-donret_10_585+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x009a4a00 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f4d, %htstate
	wrhpr %g0, 0xfd8, %hpstate  !  rand=1 (10)
	ldx [%r11+%r0], %g1
	done
donretarg_10_585:
	.word 0x95a049d4  ! 2585: FDIVd	fdivd	%f32, %f20, %f10
    set 0xa7, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x9bb287c5  ! 2589: PDIST	pdistn	%d10, %d36, %d44
frzptr_10_586:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xc36fe100  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0100], #one_read
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe19fde20  ! 2593: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc36fe010  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0010], #one_read
	.word 0xe0dfd160  ! 1: LDXA_R	ldxa	[%r31, %r0] 0x8b, %r16
	mov 0x32, %r30
	.word 0x93d0001e  ! 2597: Tcc_R	tne	icc_or_xcc, %r0 + %r30
	.word 0x81580000  ! 2601: FLUSHW	flushw
fpinit_10_588:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2605: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x8780204f  ! 2609: WRASI_I	wr	%r0, 0x004f, %asi
splash_cmpr_10_590:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2613: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe88008a0  ! 2617: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
dvapa_10_591:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xde1, %r20
	mov 0x6, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf49, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 2621: STXFSR_R	st-sfr	%f1, [%r0, %r31]
trapasi_10_592:
	nop
	mov 0x18, %r1 	! (VA for ASI 0x4c) 
	.word 0xe6d84980  ! 2625: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r19
mondo_10_593:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r5, [%r0+0x3e0] %asi
    stxa %r1, [%r0+0x3c0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d90c010  ! 2629: WRPR_WSTATE_R	wrpr	%r3, %r16, %wstate
splash_cmpr_10_594:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2633: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xa0d4c010  ! 2637: UMULcc_R	umulcc 	%r19, %r16, %r16
	.word 0xa7b400e2  ! 2641: EDGE16LN	edge16ln	%r16, %r2, %r19
ibp_10_596:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_596:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_596
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_596:
    brnz %r16, ibp_wait10_596
    ld [%r23], %r16
    ba ibp_startwait10_596
    mov 0x10, %r16
continue_ibp_10_596:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_596:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_596
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_596:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_596
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_596:
    best_set_reg(0x00000040abf20856,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe19fda00  ! 2645: LDDFA_R	ldda	[%r31, %r0], %f16
jmptr_10_598:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 2649: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_10_599:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xc19fde20  ! 2653: LDDFA_R	ldda	[%r31, %r0], %f0
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_600:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_600-donret_10_600+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00efee00 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1346, %htstate
	best_set_reg(0xa91, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_10_600:
	.word 0xda6fe028  ! 2657: LDSTUB_I	ldstub	%r13, [%r31 + 0x0028]
demap_10_601:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x451, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe186  ! 2661: LDD_I	ldd	[%r31 + 0x0186], %r8
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_10_602:
	ta	T_CHANGE_NONPRIV	! macro
demap_10_603:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x603, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe1a4  ! 2669: LDD_I	ldd	[%r31 + 0x01a4], %r18
	.word 0xe1bfe1c0  ! 2673: STDFA_I	stda	%f16, [0x01c0, %r31]
	.word 0x8d802000  ! 2677: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x9f802dc2  ! 2681: SIR	sir	0x0dc2
br_badelay1_10_604:
	.word 0xd43fe0b0  ! 1: STD_I	std	%r10, [%r31 + 0x00b0]
	.word 0xe7343389  ! 1: STQF_I	-	%f19, [0x1389, %r16]
	.word 0xc36fe040  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0040], #one_read
	normalw
	.word 0xa7458000  ! 2685: RD_SOFTINT_REG	rd	%softint, %r19
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_10_606:
	ta	T_CHANGE_NONPRIV	! macro
	.word 0x8d802004  ! 2693: WRFPRS_I	wr	%r0, 0x0004, %fprs
frzptr_10_607:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2697: BN	bn,a	<label_0x1>
intveclr_10_608:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7a8cc90174cfc901, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x280, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2701: FBPLG	fblg
	.word 0xc36cb80d  ! 2705: PREFETCH_I	prefetch	[%r18 + 0xfffff80d], #one_read
pmu_10_610:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb9ffffffa9, %g1, %g7
	.word 0xa3800007  ! 2709: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_lsu_10_612:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x0a65cde0, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x10800001  ! 1: BA	ba  	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2713: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
pmu_10_613:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb8ffffffa2, %g1, %g7
	.word 0xa3800007  ! 2717: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_10_614:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x84c, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x35b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd8bfc200  ! 2721: STDA_R	stda	%r12, [%r31 + %r0] 0x10
	.word 0x81580000  ! 2725: FLUSHW	flushw
jmptr_10_616:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2729: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_10_617:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffad, %g1, %g7
	.word 0xa3800007  ! 2733: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_hpstate_10_618:
	ta T_CHANGE_NONHPRIV
	.word 0x17400001  ! 1: FBPGE	fbge
	.word 0x81983ad0  ! 2737: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ad0, %hpstate
	.word 0x91d02032  ! 2741: Tcc_I	ta	icc_or_xcc, %r0 + 50
splash_cmpr_10_619:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2745: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x91a2c9c9  ! 2749: FDIVd	fdivd	%f42, %f40, %f8
ibp_10_621:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_621:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_621
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_621:
    brnz %r16, ibp_wait10_621
    ld [%r23], %r16
    ba ibp_startwait10_621
    mov 0x10, %r16
continue_ibp_10_621:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_621:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_621
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_621:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_621
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_621:
    best_set_reg(0x000000401ac85634,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xa770232f  ! 2753: POPC_I	popc	0x032f, %r19
memptr_10_622:
	set 0x60140000, %r31
	.word 0x8584258b  ! 2757: WRCCR_I	wr	%r16, 0x058b, %ccr
	.word 0xa1902008  ! 2761: WRPR_GL_I	wrpr	%r0, 0x0008, %-
	.word 0xa3b500f1  ! 2765: EDGE16LN	edge16ln	%r20, %r17, %r17
	.word 0x87802083  ! 2769: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0xe83fe0d0  ! 1: STD_I	std	%r20, [%r31 + 0x00d0]
	.word 0xe9e7d140  ! 1: CASA_I	casa	[%r31] 0x8a, %r0, %r20
	mov 0xb2, %r30
	.word 0x91d0001e  ! 2773: Tcc_R	ta	icc_or_xcc, %r0 + %r30
trapasi_10_624:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xd4d84e40  ! 2777: LDXA_R	ldxa	[%r1, %r0] 0x72, %r10
	.word 0xe0cfc380  ! 2781: LDSBA_R	ldsba	[%r31, %r0] 0x1c, %r16
fpinit_10_625:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009c4  ! 2785: FDIVd	fdivd	%f0, %f4, %f8
	.word 0xe4cfc400  ! 2789: LDSBA_R	ldsba	[%r31, %r0] 0x20, %r18
	.word 0xe28fc400  ! 2793: LDUBA_R	lduba	[%r31, %r0] 0x20, %r17
	.word 0x89800011  ! 2797: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xc19fdf00  ! 2801: LDDFA_R	ldda	[%r31, %r0], %f0
fpinit_10_627:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009c4  ! 2805: FDIVd	fdivd	%f0, %f4, %f6
	.word 0x89800011  ! 2809: WRTICK_R	wr	%r0, %r17, %tick
tagged_10_630:
	tsubcctv %r18, 0x1caf, %r17
	.word 0xd607e00b  ! 2813: LDUW_I	lduw	[%r31 + 0x000b], %r11
	.word 0xa1a30d33  ! 2817: FsMULd	fsmuld	%f12, %f50, %f16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_632:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_632-donret_10_632), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x009c6400 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x747, %htstate
	best_set_reg(0x1ae1, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (10)
	ldx [%r12+%r0], %g1
	retry
donretarg_10_632:
	.word 0x2cc9c001  ! 2821: BRGZ	brgz,a,pt	%r7,<label_0x9c001>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_10_633:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_10_633-donret_10_633+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ca3b00 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd8d, %htstate
	wrhpr %g0, 0xe50, %hpstate  !  rand=1 (10)
	done
donretarg_10_633:
	.word 0xe0ffc400  ! 2825: SWAPA_R	swapa	%r16, [%r31 + %r0] 0x20
	.word 0xe6bfc400  ! 2829: STDA_R	stda	%r19, [%r31 + %r0] 0x20
	.word 0xd9e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r12
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0xb5, %r30
	.word 0x91d0001e  ! 2833: Tcc_R	ta	icc_or_xcc, %r0 + %r30
mondo_10_634:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3d0] %asi
    stxa %r20, [%r0+0x3d0] %asi
	.word 0x8780208a  ! 1: WRASI_I	wr	%r0, 0x008a, %asi
	.word 0x9d92000d  ! 2837: WRPR_WSTATE_R	wrpr	%r8, %r13, %wstate
pmu_10_635:
	nop
	nop
	setx 0xffffffbfffffffa7, %g1, %g7
	.word 0xa3800007  ! 2841: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
trapasi_10_636:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5a) 
	.word 0xdad84b40  ! 2845: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r13
	.word 0xe28008a0  ! 2849: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r17
trapasi_10_637:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x48) 
	.word 0xe4d84900  ! 2853: LDXA_R	ldxa	[%r1, %r0] 0x48, %r18
	.word 0x96d4c004  ! 2857: UMULcc_R	umulcc 	%r19, %r4, %r11
br_longdelay2_10_639:
	.word 0x1a800001  ! 1: BCC	bcc  	<label_0x1>
	.word 0xd23fe160  ! 2861: STD_I	std	%r9, [%r31 + 0x0160]
mondo_10_641:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r12, [%r0+0x3e0] %asi
    stxa %r18, [%r0+0x3d8] %asi
	.word 0x87802014  ! 1: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0x9d948011  ! 2865: WRPR_WSTATE_R	wrpr	%r18, %r17, %wstate
frzptr_10_642:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xc19fde00  ! 2869: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xd5e7d140  ! 2873: CASA_I	casa	[%r31] 0x8a, %r0, %r10
frzptr_10_645:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xda6fe080  ! 1: LDSTUB_I	ldstub	%r13, [%r31 + 0x0080]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2877: BN	bn,a	<label_0x1>
change_to_randtl_10_646:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_10_646:
	.word 0x8f902002  ! 2881: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
frzptr_10_647:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xc32fe0a0  ! 1: STXFSR_I	st-sfr	%f1, [0x00a0, %r31]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe19fdf00  ! 2885: LDDFA_R	ldda	[%r31, %r0], %f16
splash_lsu_10_648:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xec098148, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2889: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
memptr_10_649:
	set 0x60340000, %r31
	.word 0x8584af7a  ! 2893: WRCCR_I	wr	%r18, 0x0f7a, %ccr
intveclr_10_650:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x2fad4ade1af66fee, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2897: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_10_652:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3c0] %asi
    stxa %r16, [%r0+0x3c8] %asi
	.word 0x87802088  ! 1: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0x9d92000c  ! 2901: WRPR_WSTATE_R	wrpr	%r8, %r12, %wstate
memptr_10_653:
	set 0x60340000, %r31
	.word 0x8585377d  ! 2905: WRCCR_I	wr	%r20, 0x177d, %ccr
intveclr_10_654:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x33afaa60be0e8a6e, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xd18, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2909: FBPLG	fblg
mondo_10_656:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3c0] %asi
    stxa %r7, [%r0+0x3d8] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d914010  ! 2913: WRPR_WSTATE_R	wrpr	%r5, %r16, %wstate
	.word 0xe09fc3c0  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1e, %r16
	.word 0xe1e7c720  ! 1: CASA_I	casa	[%r31] 0x39, %r0, %r16
	mov 0x34, %r30
	.word 0x91d0001e  ! 2917: Tcc_R	ta	icc_or_xcc, %r0 + %r30
intveclr_10_657:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x76fb7ec524134468, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2921: FBPLG	fblg
tagged_10_658:
	tsubcctv %r2, 0x13d3, %r4
	.word 0xe207e08c  ! 2925: LDUW_I	lduw	[%r31 + 0x008c], %r17
splash_lsu_10_659:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xe43ff04a, %r2
	mov 0x3, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x13400001  ! 1: FBPE	fbe
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2929: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8d802000  ! 2933: WRFPRS_I	wr	%r0, 0x0000, %fprs
ibp_10_661:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x10, %r16
ibp_startwait10_661:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_10_661
    mov (~0x10&0xf0), %r16
    ld [%r23], %r16
ibp_wait10_661:
    brnz %r16, ibp_wait10_661
    ld [%r23], %r16
    ba ibp_startwait10_661
    mov 0x10, %r16
continue_ibp_10_661:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_10_661:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_10_661
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_10_661:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_10_661
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit10_661:
    best_set_reg(0x0000004021d63429,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe2dfc600  ! 2937: LDXA_R	ldxa	[%r31, %r0] 0x30, %r17
	.word 0xe6800be0  ! 2941: LDUWA_R	lduwa	[%r0, %r0] 0x5f, %r19
frzptr_10_663:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 2945: BN	bn  	<label_0x1>
	.word 0xd41fc000  ! 2949: LDD_R	ldd	[%r31 + %r0], %r10
	.word 0x04c98001  ! 2953: BRLEZ	brlez,pt  	%r6,<label_0x98001>
cwp_10_666:
    set user_data_start, %o7
	.word 0x93902001  ! 2957: WRPR_CWP_I	wrpr	%r0, 0x0001, %cwp
splash_tba_10_667:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2961: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_10_669:
	set user_data_start, %r31
	.word 0x8581e928  ! 2965: WRCCR_I	wr	%r7, 0x0928, %ccr
	wrhpr %g0, 0x2ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2969: MEMBAR	membar	#LoadLoad | #Lookaside 
mondo_10_671:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3c0] %asi
    stxa %r5, [%r0+0x3c0] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d90c008  ! 2973: WRPR_WSTATE_R	wrpr	%r3, %r8, %wstate
splash_cmpr_10_672:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 2977: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
intveclr_10_673:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xce731a67b11abe35, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xbd0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2981: FBPLG	fblg
	.word 0x8d903291  ! 2985: WRPR_PSTATE_I	wrpr	%r0, 0x1291, %pstate
	.word 0xd28008a0  ! 2989: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r9
	.word 0xe8800a80  ! 2993: LDUWA_R	lduwa	[%r0, %r0] 0x54, %r20
	.word 0x9f803c70  ! 2997: SIR	sir	0x1c70
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_4:
    wrhpr %g0, 0x6c0, %hpstate  ! ta T_CHANGE_NONHPRIV 
br_longdelay2_8_0:
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
vahole4_8_1:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x9f803914  ! 1: SIR	sir	0x1914
	.word 0xd83fc000  ! 5: STD_R	std	%r12, [%r31 + %r0]
mondo_8_2:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3d0] %asi
    stxa %r17, [%r0+0x3c8] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d92000c  ! 9: WRPR_WSTATE_R	wrpr	%r8, %r12, %wstate
splash_cmpr_8_4:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 13: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
fpinit_8_5:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009c4  ! 17: FDIVd	fdivd	%f0, %f4, %f4
splash_lsu_8_6:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x50390fe0, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 21: FBPULE	fbule
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_7:
	ta	T_CHANGE_NONPRIV	! macro
splash_hpstate_8_8:
	.word 0x05400001  ! 1: FBPLG	fblg
	.word 0x81983b63  ! 29: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1b63, %hpstate
	.word 0x24800001  ! 33: BLE	ble,a	<label_0x1>
	.word 0x87802058  ! 37: WRASI_I	wr	%r0, 0x0058, %asi
splash_htba_8_9:
	nop
	ta T_CHANGE_HPRIV
	best_set_reg(HV_TRAP_BASE_PA, %r11,%r12)
	.word 0x8b98000c  ! 41: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0x92fcc014  ! 45: SDIVcc_R	sdivcc 	%r19, %r20, %r9
memptr_8_12:
	set user_data_start, %r31
	.word 0x8584a1c9  ! 49: WRCCR_I	wr	%r18, 0x01c9, %ccr
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0x9f802fe1  ! 53: SIR	sir	0x0fe1
intveclr_8_13:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6165e593d3e88847, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 57: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_14) + 32, 16, 16)) -> intp(1,0,25,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_14)&0xffffffff) + 32, 16, 16)) -> intp(7,0,31,,,,,1)
#else
	set 0x59e0e0fb, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_14:
	.word 0x9f802f3c  ! 61: SIR	sir	0x0f3c
	.word 0xd6c7d000  ! 65: LDSWA_R	ldswa	[%r31, %r0] 0x80, %r11
	.word 0xe8c7d100  ! 69: LDSWA_R	ldswa	[%r31, %r0] 0x88, %r20
intveclr_8_15:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xdbbd7cbe7c5524cb, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 73: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_8_16:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009a4  ! 77: FDIVs	fdivs	%f0, %f4, %f6
	.word 0x97a00553  ! 81: FSQRTd	fsqrt	
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_17:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_17-donret_8_17), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00dee300 | (0x83 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x405, %htstate
	wrhpr %g0, 0x459, %hpstate  !  rand=1 (8)
	done
donretarg_8_17:
	.word 0xd8ffc400  ! 85: SWAPA_R	swapa	%r12, [%r31 + %r0] 0x20
splash_cmpr_8_18:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 89: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_8_19:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd4d84940  ! 93: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r10
	.word 0x95a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f10
	.word 0xd43fe060  ! 1: STD_I	std	%r10, [%r31 + 0x0060]
	mov 0xb2, %r30
	.word 0x91d0001e  ! 97: Tcc_R	ta	icc_or_xcc, %r0 + %r30
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_20) + 56, 16, 16)) -> intp(7,0,30,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_20)&0xffffffff) + 56, 16, 16)) -> intp(5,0,12,,,,,1)
#else
	set 0xcb0c0f1, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_20:
	.word 0xa1a109cb  ! 101: FDIVd	fdivd	%f4, %f42, %f16
mondo_8_21:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r11, [%r0+0x3d0] %asi
    stxa %r20, [%r0+0x3c0] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d924012  ! 105: WRPR_WSTATE_R	wrpr	%r9, %r18, %wstate
brcommon3_8_22:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd3e7c540  ! 1: CASA_I	casa	[%r31] 0x2a, %r0, %r9
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 109: BN	bn,a	<label_0x1>
dvapa_8_23:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xed8, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x80b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fdf20  ! 113: LDDA_R	ldda	[%r31, %r0] 0xf9, %r0
splash_cmpr_8_24:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 117: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_8_25:
	.word 0x00800001  ! 1: BN	bn  	<label_0x1>
	.word 0x81982709  ! 121: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0709, %hpstate
splash_tba_8_26:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 125: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_8_27:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3d0] %asi
    stxa %r20, [%r0+0x3c8] %asi
	.word 0x87802030  ! 1: WRASI_I	wr	%r0, 0x0030, %asi
	.word 0x9d93400a  ! 129: WRPR_WSTATE_R	wrpr	%r13, %r10, %wstate
	.word 0x8d802000  ! 133: WRFPRS_I	wr	%r0, 0x0000, %fprs
splash_tba_8_29:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000000380000, %r11, %r12
	.word 0x8b90000c  ! 137: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_30:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_30-donret_8_30), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00718200 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1707, %htstate
	wrhpr %g0, 0x510, %hpstate  !  rand=1 (8)
	retry
donretarg_8_30:
	.word 0x8d902e93  ! 141: WRPR_PSTATE_I	wrpr	%r0, 0x0e93, %pstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_31:
	.word 0xa7a189cb  ! 145: FDIVd	fdivd	%f6, %f42, %f50
	.word 0xa084c003  ! 149: ADDcc_R	addcc 	%r19, %r3, %r16
splash_decr_8_32:
    nop
    ta T_CHANGE_HPRIV
    mov 8, %r1
    stxa %r20, [%r1] 0x45
	.word 0xa7848013  ! 153: WR_GRAPHICS_STATUS_REG_R	wr	%r18, %r19, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa9a349cc  ! 1: FDIVd	fdivd	%f44, %f12, %f20
intvec_8_33:
	.word 0xa3a249d4  ! 157: FDIVd	fdivd	%f40, %f20, %f48
	ba,a	 skip_8_34
	fbue,a,pn	%fcc0,  skip_8_34
.align 512
skip_8_34:
	.word 0xa3a409d3  ! 161: FDIVd	fdivd	%f16, %f50, %f48
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_35:
	.word 0x9f803119  ! 165: SIR	sir	0x1119
splash_tba_8_36:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 169: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x83d02035  ! 173: Tcc_I	te	icc_or_xcc, %r0 + 53
vahole4_8_38:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x9f802782  ! 177: SIR	sir	0x0782
ibp_8_39:
	nop
	nop
	.word 0xe1bfdf20  ! 181: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa3702120  ! 1: POPC_I	popc	0x0120, %r17
	.word 0x9f803ea6  ! 185: SIR	sir	0x1ea6
	.word 0xa66c2b26  ! 189: UDIVX_I	udivx 	%r16, 0x0b26, %r19
intveclr_8_40:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x97e9b49ce2d0d24f, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xe51, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 193: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_42) + 40, 16, 16)) -> intp(6,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_42)&0xffffffff) + 0, 16, 16)) -> intp(7,0,23,,,,,1)
#else
	set 0x44e04aa1, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_42:
	.word 0xa7a1c9c1  ! 197: FDIVd	fdivd	%f38, %f32, %f50
intveclr_8_43:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7395b7f20040dc77, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 201: FBPLG	fblg
splash_tba_8_44:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 205: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_8_45:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x7fe56aab, %r2
	mov 0x3, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 209: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xe19fde20  ! 213: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x89800011  ! 217: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0cfd920  ! 221: LDSBA_R	ldsba	[%r31, %r0] 0xc9, %r8
splash_cmpr_8_48:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 225: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_8_49:
	nop
	nop
	.word 0xe1bfde00  ! 229: STDFA_R	stda	%f16, [%r0, %r31]
dvapa_8_50:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd4c, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x943, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 233: STXFSR_R	st-sfr	%f1, [%r0, %r31]
iaw_8_51:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_51:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_51
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_51:
    brnz %r16, iaw_wait8_51
    ld [%r23], %r16
    ba iaw_startwait8_51
    mov 0x8, %r16
continue_iaw_8_51:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_51:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_51
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_51:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_51
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_51:
	mov 0x38, %r18
iaw1_8_51:
	best_set_reg(0x00000000e1200000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xb02, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95b407c4  ! 237: PDIST	pdistn	%d16, %d4, %d10
	.word 0xe43fe020  ! 1: STD_I	std	%r18, [%r31 + 0x0020]
	.word 0x9f802e49  ! 241: SIR	sir	0x0e49
memptr_8_52:
	set 0x60340000, %r31
	.word 0x8584e7ef  ! 245: WRCCR_I	wr	%r19, 0x07ef, %ccr
splash_cmpr_8_53:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 249: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
br_badelay1_8_55:
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	.word 0xd23fe070  ! 1: STD_I	std	%r9, [%r31 + 0x0070]
	.word 0x2eccc001  ! 1: BRGEZ	brgez,a,pt	%r19,<label_0xcc001>
	normalw
	.word 0xa7458000  ! 253: RD_SOFTINT_REG	rd	%softint, %r19
	bneg,a	 skip_8_56
	bpos  	 skip_8_56
.align 4096
skip_8_56:
	.word 0x95b444c6  ! 257: FCMPNE32	fcmpne32	%d48, %d6, %r10
	.word 0xd1e7c3c0  ! 1: CASA_I	casa	[%r31] 0x1e, %r0, %r8
	.word 0x9f803395  ! 261: SIR	sir	0x1395
pmu_8_57:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb9ffffffa6, %g1, %g7
	.word 0xa3800007  ! 265: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_8_58:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r1, [%r0+0x3c0] %asi
    stxa %r18, [%r0+0x3d0] %asi
	.word 0x87802082  ! 1: WRASI_I	wr	%r0, 0x0082, %asi
	.word 0x9d94c010  ! 269: WRPR_WSTATE_R	wrpr	%r19, %r16, %wstate
	.word 0x9ba00160  ! 273: FABSq	dis not found

	.word 0x87802055  ! 277: WRASI_I	wr	%r0, 0x0055, %asi
trapasi_8_60:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xd0d84920  ! 281: LDXA_R	ldxa	[%r1, %r0] 0x49, %r8
memptr_8_61:
	set 0x60340000, %r31
	.word 0x8580edec  ! 285: WRCCR_I	wr	%r3, 0x0dec, %ccr
	.word 0x1e800001  ! 1: BVC	bvc  	<label_0x1>
	.word 0x8d9031a1  ! 289: WRPR_PSTATE_I	wrpr	%r0, 0x11a1, %pstate
demap_8_63:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x04c88001  ! 1: BRLEZ	brlez,pt  	%r2,<label_0x88001>
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	wrhpr %g0, 0xa18, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe61fe019  ! 293: LDD_I	ldd	[%r31 + 0x0019], %r19
	.word 0xe19fe0c0  ! 297: LDDFA_I	ldda	[%r31, 0x00c0], %f16
	.word 0xe28008a0  ! 301: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r17
tglhtw_8_65:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x1ca, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa7b4c986  ! 305: BSHUFFLE	fmovc32	%d50, %d6, %d50
pmu_8_66:
	nop
	nop
	setx 0xffffffb6ffffffa0, %g1, %g7
	.word 0xa3800007  ! 309: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_67)+24, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_67)&0xffffffff) + 48, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_67:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_67:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa980a5d7  ! 313: WR_SET_SOFTINT_I	wr	%r2, 0x05d7, %set_softint
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_68:
	ta	T_CHANGE_NONHPRIV	! macro
	.word 0xda9fc180  ! 321: LDDA_R	ldda	[%r31, %r0] 0x0c, %r13
	.word 0xda8008a0  ! 325: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r13
intveclr_8_71:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4bb45b55e52ac565, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 329: FBPLG	fblg
ibp_8_72:
	nop
	nop
	wrhpr %g0, 0x5c2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87aa8a4a  ! 333: FCMPd	fcmpd	%fcc<n>, %f10, %f10
trapasi_8_73:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x74) 
	.word 0xe6d84e80  ! 337: LDXA_R	ldxa	[%r1, %r0] 0x74, %r19
pmu_8_74:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb0ffffffa6, %g1, %g7
	.word 0xa3800007  ! 341: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x97b1c0e9  ! 345: EDGE16LN	edge16ln	%r7, %r9, %r11
dvapa_8_76:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc24, %r20
	mov 0x7, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x911, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe09fdc00  ! 349: LDDA_R	ldda	[%r31, %r0] 0xe0, %r16
	.word 0xd41fc000  ! 353: LDD_R	ldd	[%r31 + %r0], %r10
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_78) + 24, 16, 16)) -> intp(0,0,14,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_78)&0xffffffff) + 8, 16, 16)) -> intp(2,0,21,,,,,1)
#else
	set 0x6c50b60c, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x91b104d2  ! 1: FCMPNE32	fcmpne32	%d4, %d18, %r8
intvec_8_78:
	.word 0x97a449d4  ! 357: FDIVd	fdivd	%f48, %f20, %f42
trapasi_8_80:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xd0d84940  ! 361: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r8
	.word 0xe0bfc200  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x10
	.word 0x9f803f00  ! 365: SIR	sir	0x1f00
mondo_8_81:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r17, [%r0+0x3d8] %asi
    stxa %r19, [%r0+0x3c8] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d940002  ! 369: WRPR_WSTATE_R	wrpr	%r16, %r2, %wstate
ibp_8_82:
	nop
	nop
	.word 0xa9703fd6  ! 373: POPC_I	popc	0x1fd6, %r20
splash_hpstate_8_84:
	ta T_CHANGE_NONHPRIV
	.word 0x81983ccd  ! 377: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1ccd, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_86:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_86-donret_8_86), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00a27400 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1149, %htstate
	wrhpr %g0, 0x941, %hpstate  !  rand=1 (8)
	ldx [%r12+%r0], %g1
	retry
donretarg_8_86:
	.word 0xd66fe185  ! 381: LDSTUB_I	ldstub	%r11, [%r31 + 0x0185]
intveclr_8_88:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa08aed6b47102ab8, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x441, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 385: FBPLG	fblg
memptr_8_89:
	set 0x60540000, %r31
	.word 0x8582f56d  ! 389: WRCCR_I	wr	%r11, 0x156d, %ccr
	.word 0x87ab4a2d  ! 393: FCMPs	fcmps	%fcc<n>, %f13, %f13
iaw_8_90:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_90:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_90
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_90:
    brnz %r16, iaw_wait8_90
    ld [%r23], %r16
    ba iaw_startwait8_90
    mov 0x8, %r16
continue_iaw_8_90:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_90:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_90
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_90:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_90
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_90:
	mov 0x38, %r18
iaw1_8_90:
	best_set_reg(0x00000000e0200000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xa92, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93b487c2  ! 397: PDIST	pdistn	%d18, %d2, %d40
	.word 0xe1bfdf20  ! 401: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x91944003  ! 405: WRPR_PIL_R	wrpr	%r17, %r3, %pil
splash_cmpr_8_92:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 409: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_8_93:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 413: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_94) + 24, 16, 16)) -> intp(0,0,26,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_94)&0xffffffff) + 40, 16, 16)) -> intp(2,0,28,,,,,1)
#else
	set 0x8970c679, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_94:
	.word 0x9f803e97  ! 417: SIR	sir	0x1e97
demap_8_95:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x1a800001  ! 1: BCC	bcc  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x812, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe00c  ! 421: LDD_I	ldd	[%r31 + 0x000c], %r18
pmu_8_96:
	nop
	nop
	setx 0xffffffb7ffffffaf, %g1, %g7
	.word 0xa3800007  ! 425: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa5b500e9  ! 429: EDGE16LN	edge16ln	%r20, %r9, %r18
intveclr_8_99:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb1282665658ad81f, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 433: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_100)+24, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_100)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_100:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_100:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa980a475  ! 437: WR_SET_SOFTINT_I	wr	%r2, 0x0475, %set_softint
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_102:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_102-donret_8_102+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0060e800 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd0e, %htstate
	wrhpr %g0, 0x91b, %hpstate  !  rand=1 (8)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_8_102:
	.word 0x34800001  ! 441: BG	bg,a	<label_0x1>
dvapa_8_103:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8e6, %r20
	mov 0x2, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf80, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd4dfdd40  ! 445: LDXA_R	ldxa	[%r31, %r0] 0xea, %r10
trapasi_8_104:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x5b) 
	.word 0xe6d84b60  ! 449: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r19
ibp_8_105:
	nop
	nop
	wrhpr %g0, 0x21b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95a109ca  ! 453: FDIVd	fdivd	%f4, %f10, %f10
splash_hpstate_8_106:
	.word 0x8198369f  ! 457: WRHPR_HPSTATE_I	wrhpr	%r0, 0x169f, %hpstate
dvapa_8_107:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x979, %r20
	mov 0x7, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x340, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fda00  ! 461: LDDFA_R	ldda	[%r31, %r0], %f16
mondo_8_108:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r20, [%r0+0x3d0] %asi
    stxa %r17, [%r0+0x3e0] %asi
	.word 0x87802088  ! 1: WRASI_I	wr	%r0, 0x0088, %asi
	.word 0x9d94800d  ! 465: WRPR_WSTATE_R	wrpr	%r18, %r13, %wstate
	.word 0x81580000  ! 469: FLUSHW	flushw
	.word 0xa9b4c0f3  ! 473: EDGE16LN	edge16ln	%r19, %r19, %r20
trapasi_8_110:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x5b) 
	.word 0xe0d84b60  ! 477: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r16
	.word 0xe1bfe0e0  ! 481: STDFA_I	stda	%f16, [0x00e0, %r31]
splash_hpstate_8_111:
	.word 0x8198268d  ! 485: WRHPR_HPSTATE_I	wrhpr	%r0, 0x068d, %hpstate
	.word 0x9193000d  ! 489: WRPR_PIL_R	wrpr	%r12, %r13, %pil
demap_8_114:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0xc03, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe09c  ! 493: LDD_I	ldd	[%r31 + 0x009c], %r16
intveclr_8_116:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9c01c34526448441, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 497: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
demap_8_117:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xbc2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe158  ! 501: LDD_I	ldd	[%r31 + 0x0158], %r8
memptr_8_118:
	set 0x60140000, %r31
	.word 0x858460c7  ! 505: WRCCR_I	wr	%r17, 0x00c7, %ccr
	.word 0xa7524000  ! 509: RDPR_CWP	rdpr	%cwp, %r19
	.word 0x8d802000  ! 513: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0xd0800b80  ! 517: LDUWA_R	lduwa	[%r0, %r0] 0x5c, %r8
change_to_randtl_8_121:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_8_121:
	.word 0x8f902000  ! 521: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
iaw_8_122:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_122:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_122
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_122:
    brnz %r16, iaw_wait8_122
    ld [%r23], %r16
    ba iaw_startwait8_122
    mov 0x8, %r16
continue_iaw_8_122:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_122:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_122
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_122:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_122
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_122:
	mov 0x38, %r18
iaw1_8_122:
	best_set_reg(0x00000000e1200000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x789, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe09fc3e0  ! 525: LDDA_R	ldda	[%r31, %r0] 0x1f, %r16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa3b504d1  ! 1: FCMPNE32	fcmpne32	%d20, %d48, %r17
intvec_8_123:
	.word 0x9f802c96  ! 529: SIR	sir	0x0c96
splash_cmpr_8_124:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 533: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_8_125:
	nop
	nop
	.word 0xe1bfda60  ! 537: STDFA_R	stda	%f16, [%r0, %r31]
jmptr_8_126:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 541: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xc32fc000  ! 545: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0x9afb4007  ! 549: SDIVcc_R	sdivcc 	%r13, %r7, %r13
intveclr_8_127:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x917f4f55d7abfd1c, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 553: FBPLG	fblg
pmu_8_128:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffad, %g1, %g7
	.word 0xa3800007  ! 557: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_8_129:
	set user_data_start, %r31
	.word 0x8584ed4e  ! 561: WRCCR_I	wr	%r19, 0x0d4e, %ccr
	.word 0xe41fe1a0  ! 565: LDD_I	ldd	[%r31 + 0x01a0], %r18
frzptr_8_131:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 569: BN	bn,a	<label_0x1>
dvapa_8_133:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe37, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xac1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd697d140  ! 573: LDUHA_R	lduha	[%r31, %r0] 0x8a, %r11
dvapa_8_134:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb6b, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xed1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99a1c9d0  ! 577: FDIVd	fdivd	%f38, %f16, %f12
pmu_8_135:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbcffffffad, %g1, %g7
	.word 0xa3800007  ! 581: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe45fe1e0  ! 585: LDX_I	ldx	[%r31 + 0x01e0], %r18
	.word 0xe43fe120  ! 589: STD_I	std	%r18, [%r31 + 0x0120]
splash_hpstate_8_137:
	.word 0x18800001  ! 1: BGU	bgu  	<label_0x1>
	.word 0x81982fd1  ! 593: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0fd1, %hpstate
	.word 0x23400001  ! 1: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
	.word 0x8d903de1  ! 597: WRPR_PSTATE_I	wrpr	%r0, 0x1de1, %pstate
splash_cmpr_8_140:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 601: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_8_141:
	nop
	nop
	wrhpr %g0, 0x701, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f8020d0  ! 605: SIR	sir	0x00d0
splash_cmpr_8_142:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 609: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
pmu_8_143:
	nop
	nop
	setx 0xffffffb1ffffffa2, %g1, %g7
	.word 0xa3800007  ! 613: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
iaw_8_144:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_144:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_144
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_144:
    brnz %r16, iaw_wait8_144
    ld [%r23], %r16
    ba iaw_startwait8_144
    mov 0x8, %r16
continue_iaw_8_144:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_144:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_144
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_144:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_144
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_144:
	mov 0x38, %r18
iaw0_8_144:
	rd %pc, %r19
	add %r19, (16+5), %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x358, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe130  ! 617: LDD_I	ldd	[%r31 + 0x0130], %r8
	.word 0x8d802004  ! 621: WRFPRS_I	wr	%r0, 0x0004, %fprs
intveclr_8_145:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x4edaef8e58b13af8, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 625: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_8_146:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3e0] %asi
    stxa %r2, [%r0+0x3e8] %asi
	.word 0x8780208b  ! 1: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0x9d948007  ! 629: WRPR_WSTATE_R	wrpr	%r18, %r7, %wstate
frzptr_8_147:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xc1bfdd40  ! 633: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x32800001  ! 1: BNE	bne,a	<label_0x1>
	.word 0x8d9034e1  ! 637: WRPR_PSTATE_I	wrpr	%r0, 0x14e1, %pstate
tagged_8_149:
	taddcctv %r19, 0x165b, %r18
	.word 0xd407e034  ! 641: LDUW_I	lduw	[%r31 + 0x0034], %r10
dvapa_8_151:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8b5, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa8b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa7b487d1  ! 645: PDIST	pdistn	%d18, %d48, %d50
	.word 0x95b24ff1  ! 649: FONES	e	%f10
trapasi_8_152:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd8d84940  ! 653: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r12
trapasi_8_153:
	nop
	mov 0x3c0, %r1 	! (VA for ASI 0x25) 
	.word 0xd8d844a0  ! 657: LDXA_R	ldxa	[%r1, %r0] 0x25, %r12
demap_8_154:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r14, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x900, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe094  ! 661: LDD_I	ldd	[%r31 + 0x0094], %r11
tagged_8_155:
	taddcctv %r17, 0x1db6, %r7
	.word 0xd407e0ba  ! 665: LDUW_I	lduw	[%r31 + 0x00ba], %r10
	.word 0x8780204f  ! 669: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0xd697d920  ! 673: LDUHA_R	lduha	[%r31, %r0] 0xc9, %r11
    set 0xbfc, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x99b347d3  ! 677: PDIST	pdistn	%d44, %d50, %d12
memptr_8_157:
	set 0x60140000, %r31
	.word 0x85832c75  ! 681: WRCCR_I	wr	%r12, 0x0c75, %ccr
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_159:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_159-donret_8_159+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00089100 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x61f, %htstate
	wrhpr %g0, 0x648, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_159:
	.word 0x30800001  ! 685: BA	ba,a	<label_0x1>
intveclr_8_160:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xc6d63287bb2c4ef8, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 689: FBPLG	fblg
	.word 0xd2bfc540  ! 693: STDA_R	stda	%r9, [%r31 + %r0] 0x2a
	.word 0xe29fd140  ! 697: LDDA_R	ldda	[%r31, %r0] 0x8a, %r17
memptr_8_162:
	set user_data_start, %r31
	.word 0x85817980  ! 701: WRCCR_I	wr	%r5, 0x1980, %ccr
splash_tba_8_164:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 705: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_8_166:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x0f400001  ! 1: FBPU	fbu
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xcd1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe1e8  ! 709: LDD_I	ldd	[%r31 + 0x01e8], %r16
vahole2_8_167:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target2, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe19fdc00  ! 713: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x95b4c54c  ! 717: FCMPEQ16	fcmpeq16	%d50, %d12, %r10
	.word 0xe84fe0e0  ! 721: LDSB_I	ldsb	[%r31 + 0x00e0], %r20
	.word 0xe87fe180  ! 725: SWAP_I	swap	%r20, [%r31 + 0x0180]
	.word 0xa7a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f50
	.word 0xe7e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r19
	mov 0xb5, %r30
	.word 0x93d0001e  ! 729: Tcc_R	tne	icc_or_xcc, %r0 + %r30
	.word 0x81510000  ! 733: RDPR_TICK	rdpr	%tick, %r0
trapasi_8_169:
	nop
	mov 0x18, %r1 	! (VA for ASI 0x50) 
	.word 0xd2d84a00  ! 737: LDXA_R	ldxa	[%r1, %r0] 0x50, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_170) + 56, 16, 16)) -> intp(0,0,29,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_170)&0xffffffff) + 40, 16, 16)) -> intp(2,0,1,,,,,1)
#else
	set 0x9d003a59, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_170:
	.word 0xa7b504c4  ! 741: FCMPNE32	fcmpne32	%d20, %d4, %r19
demap_8_171:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r13, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x30b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd81fe1bc  ! 745: LDD_I	ldd	[%r31 + 0x01bc], %r12
	.word 0xe09fe030  ! 749: LDDA_I	ldda	[%r31, + 0x0030] %asi, %r16
pmu_8_172:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb2ffffffa0, %g1, %g7
	.word 0xa3800007  ! 753: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_8_173:
	set 0x60340000, %r31
	.word 0x85843488  ! 757: WRCCR_I	wr	%r16, 0x1488, %ccr
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_174:
	ta	T_CHANGE_NONPRIV	! macro
tagged_8_176:
	tsubcctv %r2, 0x1ee9, %r17
	.word 0xe807e0fc  ! 765: LDUW_I	lduw	[%r31 + 0x00fc], %r20
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_177:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_8_178:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb28, %r20
	mov 0x8, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x880, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x97a149b2  ! 773: FDIVs	fdivs	%f5, %f18, %f11
pmu_8_180:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbeffffffa7, %g1, %g7
	.word 0xa3800007  ! 777: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe19fe060  ! 781: LDDFA_I	ldda	[%r31, 0x0060], %f16
	.word 0x91d02033  ! 785: Tcc_I	ta	icc_or_xcc, %r0 + 51
	.word 0x8d903b10  ! 789: WRPR_PSTATE_I	wrpr	%r0, 0x1b10, %pstate
trapasi_8_182:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe2d84940  ! 793: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r17
br_badelay2_8_184:
	.word 0xa1a109d0  ! 1: FDIVd	fdivd	%f4, %f16, %f16
	pdist %f20, %f20, %f12
	.word 0x95b40313  ! 797: ALIGNADDRESS	alignaddr	%r16, %r19, %r10
	.word 0x89800011  ! 801: WRTICK_R	wr	%r0, %r17, %tick
frzptr_8_186:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x95702170  ! 1: POPC_I	popc	0x0170, %r10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 805: BN	bn,a	<label_0x1>
	.word 0x8d802004  ! 809: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_8_187:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 813: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
	.word 0xd05fe1b8  ! 817: LDX_I	ldx	[%r31 + 0x01b8], %r8
	.word 0xe19fe160  ! 821: LDDFA_I	ldda	[%r31, 0x0160], %f16
	.word 0xd6bfdf00  ! 1: STDA_R	stda	%r11, [%r31 + %r0] 0xf8
	.word 0x9f802354  ! 825: SIR	sir	0x0354
cwp_8_188:
    set user_data_start, %o7
	.word 0x93902002  ! 829: WRPR_CWP_I	wrpr	%r0, 0x0002, %cwp
	.word 0x8d903ae3  ! 833: WRPR_PSTATE_I	wrpr	%r0, 0x1ae3, %pstate
change_to_randtl_8_191:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_8_191:
	.word 0x8f902000  ! 837: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
tglhtw_8_192:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xb10, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x91b04993  ! 841: BSHUFFLE	fmovc32	%d32, %d50, %d8
	.word 0xe19fe180  ! 845: LDDFA_I	ldda	[%r31, 0x0180], %f16
	bcs,a	 skip_8_193
	stxa %r7, [%r0] ASI_LSU_CONTROL
	.word 0x9f8037d6  ! 1: SIR	sir	0x17d6
	stxa %r16, [%r0] ASI_LSU_CONTROL
.align 2048
skip_8_193:
	.word 0xd63fe171  ! 849: STD_I	std	%r11, [%r31 + 0x0171]
	.word 0xa8c4e516  ! 853: ADDCcc_I	addccc 	%r19, 0x0516, %r20
ibp_8_194:
	nop
	nop
	.word 0xe03fe0d0  ! 857: STD_I	std	%r16, [%r31 + 0x00d0]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_8_195:
	.word 0xa9b1c4d2  ! 861: FCMPNE32	fcmpne32	%d38, %d18, %r20
	.word 0x8d802000  ! 865: WRFPRS_I	wr	%r0, 0x0000, %fprs
	fbo,a,pn	%fcc0,  skip_8_196
	stxa %r9, [%r0] ASI_LSU_CONTROL
	fbule skip_8_196
	stxa %r20, [%r0] ASI_LSU_CONTROL
.align 512
skip_8_196:
	.word 0xc32fc000  ! 869: STXFSR_R	st-sfr	%f1, [%r0, %r31]
ceter_8_197:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 7, %r17
    sllx %r17, 60, %r17
    mov 0x18, %r16
    stxa %r17, [%r16]0x4c
	wrhpr %g0, 0xfcb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95410000  ! 873: RDTICK	rd	%tick, %r10
	.word 0xd937c000  ! 877: STQF_R	-	%f12, [%r0, %r31]
br_longdelay2_8_198:
	.word 0x04800001  ! 1: BLE	ble  	<label_0x1>
	.word 0xa5a7c9c0  ! 881: FDIVd	fdivd	%f62, %f0, %f18
dvapa_8_199:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8b4, %r20
	mov 0x1d, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe19, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fde20  ! 885: LDDFA_R	ldda	[%r31, %r0], %f0
mondo_8_200:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r9, [%r0+0x3d0] %asi
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d94c00b  ! 889: WRPR_WSTATE_R	wrpr	%r19, %r11, %wstate
	.word 0xe2cfc6c0  ! 893: LDSBA_R	ldsba	[%r31, %r0] 0x36, %r17
dvapa_8_201:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc91, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x7d3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa3b507d0  ! 897: PDIST	pdistn	%d20, %d16, %d48
pmu_8_202:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb5ffffffac, %g1, %g7
	.word 0xa3800007  ! 901: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe6bfc240  ! 1: STDA_R	stda	%r19, [%r31 + %r0] 0x12
	.word 0xe697d000  ! 1: LDUHA_R	lduha	[%r31, %r0] 0x80, %r19
	mov 0x35, %r30
	.word 0x93d0001e  ! 905: Tcc_R	tne	icc_or_xcc, %r0 + %r30
fpinit_8_205:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 909: FCMPd	fcmpd	%fcc<n>, %f0, %f4
splash_tba_8_206:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 913: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_8_207:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3e0] %asi
    stxa %r18, [%r0+0x3e0] %asi
	.word 0x87802080  ! 1: WRASI_I	wr	%r0, 0x0080, %asi
	.word 0x9d904010  ! 917: WRPR_WSTATE_R	wrpr	%r1, %r16, %wstate
	brgz,pt  	%r10, skip_8_208
	.word 0xc368afda  ! 1: PREFETCH_I	prefetch	[%r2 + 0x0fda], #one_read
.align 512
skip_8_208:
	.word 0x39400001  ! 921: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
splash_hpstate_8_209:
	ta T_CHANGE_NONHPRIV
	.word 0x3e800001  ! 1: BVC	bvc,a	<label_0x1>
	.word 0x81983f9f  ! 925: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1f9f, %hpstate
demap_8_210:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x27400001  ! 1: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x13, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda1fe19b  ! 929: LDD_I	ldd	[%r31 + 0x019b], %r13
	.word 0xc36fe050  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0050], #one_read
	.word 0xda97c200  ! 1: LDUHA_R	lduha	[%r31, %r0] 0x10, %r13
	mov 0xb5, %r30
	.word 0x91d0001e  ! 933: Tcc_R	ta	icc_or_xcc, %r0 + %r30
splash_cmpr_8_212:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 937: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f802d65  ! 1: SIR	sir	0x0d65
intvec_8_213:
	.word 0x39400001  ! 941: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x9194e8c1  ! 945: WRPR_PIL_I	wrpr	%r19, 0x08c1, %pil
fpinit_8_214:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 949: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x9192c00b  ! 953: WRPR_PIL_R	wrpr	%r11, %r11, %pil
	.word 0x966ce486  ! 957: UDIVX_I	udivx 	%r19, 0x0486, %r11
	.word 0x87802020  ! 961: WRASI_I	wr	%r0, 0x0020, %asi
ibp_8_217:
	nop
	nop
	.word 0xc3efe060  ! 965: PREFETCHA_I	prefetcha	[%r31, + 0x0060] %asi, #one_read
	.word 0x89800011  ! 969: WRTICK_R	wr	%r0, %r17, %tick
splash_lsu_8_219:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x68fc13f8, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 973: FBPULE	fbule
ibp_8_220:
	nop
	nop
	wrhpr %g0, 0x69b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x00800001  ! 977: BN	bn  	<label_0x1>
ibp_8_222:
	nop
	nop
	wrhpr %g0, 0x640, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfdb40  ! 981: STDFA_R	stda	%f0, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_224:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_224-donret_8_224+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x002de700 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x9fd, %htstate
	wrhpr %g0, 0xcc3, %hpstate  !  rand=1 (8)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_8_224:
	.word 0x8d903d5f  ! 985: WRPR_PSTATE_I	wrpr	%r0, 0x1d5f, %pstate
mondo_8_225:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3c0] %asi
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d90c014  ! 989: WRPR_WSTATE_R	wrpr	%r3, %r20, %wstate
	.word 0x89800011  ! 993: WRTICK_R	wr	%r0, %r17, %tick
trapasi_8_227:
	nop
	mov 0x30, %r1 	! (VA for ASI 0x5b) 
	.word 0xe4d84b60  ! 997: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r18
	.word 0xc36fe040  ! 1001: PREFETCH_I	prefetch	[%r31 + 0x0040], #one_read
	.word 0x91d020b5  ! 1005: Tcc_I	ta	icc_or_xcc, %r0 + 181
	.word 0xe127c000  ! 1009: STF_R	st	%f16, [%r0, %r31]
	.word 0x9adc8001  ! 1013: SMULcc_R	smulcc 	%r18, %r1, %r13
change_to_randtl_8_230:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_8_230:
	.word 0x8f902002  ! 1017: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_231:
	.word 0x9f802e67  ! 1021: SIR	sir	0x0e67
intveclr_8_232:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x21b9241be51aa12a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1025: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_233:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_233-donret_8_233+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x008f0300 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xf91, %htstate
	wrhpr %g0, 0xb98, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_233:
	.word 0xe46fe1de  ! 1029: LDSTUB_I	ldstub	%r18, [%r31 + 0x01de]
	.word 0xd7e7c2e0  ! 1: CASA_I	casa	[%r31] 0x17, %r0, %r11
	.word 0x9f803772  ! 1033: SIR	sir	0x1772
pmu_8_235:
	nop
	nop
	setx 0xffffffb7ffffffab, %g1, %g7
	.word 0xa3800007  ! 1037: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8143e011  ! 1041: MEMBAR	membar	#LoadLoad | #Lookaside 
brcommon3_8_237:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd9e7d160  ! 1: CASA_I	casa	[%r31] 0x8b, %r0, %r12
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x81982707  ! 1045: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0707, %hpstate
intveclr_8_239:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xf5f1b2c8eb26c66b, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1049: FBPLG	fblg
splash_cmpr_8_240:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1053: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xc19fdc40  ! 1057: LDDFA_R	ldda	[%r31, %r0], %f0
jmptr_8_241:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1061: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xa9703f77  ! 1065: POPC_I	popc	0x1f77, %r20
	.word 0xa2fc4009  ! 1069: SDIVcc_R	sdivcc 	%r17, %r9, %r17
br_badelay1_8_242:
	.word 0x3c800001  ! 1: BPOS	bpos,a	<label_0x1>
	.word 0xe737e130  ! 1: STQF_I	-	%f19, [0x0130, %r31]
	.word 0xa7a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f50
	normalw
	.word 0x9b458000  ! 1073: RD_SOFTINT_REG	rd	%softint, %r13
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_244)+24, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_244)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_244:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_244:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984bf37  ! 1077: WR_SET_SOFTINT_I	wr	%r18, 0x1f37, %set_softint
unsupttte_8_245:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0x680, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5b04488  ! 1081: FCMPLE32	fcmple32	%d32, %d8, %r18
ibp_8_246:
	nop
	nop
	wrhpr %g0, 0x518, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91a409b2  ! 1085: FDIVs	fdivs	%f16, %f18, %f8
fpinit_8_247:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 1089: FCMPd	fcmpd	%fcc<n>, %f0, %f4
pmu_8_248:
	nop
	nop
	setx 0xffffffbaffffffae, %g1, %g7
	.word 0xa3800007  ! 1093: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe8800aa0  ! 1097: LDUWA_R	lduwa	[%r0, %r0] 0x55, %r20
	.word 0x97b44585  ! 1101: FCMPGT32	fcmpgt32	%d48, %d36, %r11
	.word 0x93d02033  ! 1105: Tcc_I	tne	icc_or_xcc, %r0 + 51
	.word 0x99b7c7c0  ! 1: PDIST	pdistn	%d62, %d0, %d12
	.word 0xd89fdc40  ! 1: LDDA_R	ldda	[%r31, %r0] 0xe2, %r12
	mov 0x34, %r30
	.word 0x91d0001e  ! 1109: Tcc_R	ta	icc_or_xcc, %r0 + %r30
iaw_8_249:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_249:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_249
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_249:
    brnz %r16, iaw_wait8_249
    ld [%r23], %r16
    ba iaw_startwait8_249
    mov 0x8, %r16
continue_iaw_8_249:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_249:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_249
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_249:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_249
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_249:
	mov 0x38, %r18
iaw1_8_249:
	best_set_reg(0x00000000e1200000, %r20, %r19)
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x293, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5a449d0  ! 1113: FDIVd	fdivd	%f48, %f16, %f18
memptr_8_250:
	set 0x60540000, %r31
	.word 0x858221fb  ! 1117: WRCCR_I	wr	%r8, 0x01fb, %ccr
	.word 0x8d903af9  ! 1121: WRPR_PSTATE_I	wrpr	%r0, 0x1af9, %pstate
	.word 0xd45fe018  ! 1125: LDX_I	ldx	[%r31 + 0x0018], %r10
memptr_8_253:
	set 0x60140000, %r31
	.word 0x8585382d  ! 1129: WRCCR_I	wr	%r20, 0x182d, %ccr
trapasi_8_254:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xe4d84e40  ! 1133: LDXA_R	ldxa	[%r1, %r0] 0x72, %r18
mondo_8_255:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r1, [%r0+0x3e0] %asi
    stxa %r5, [%r0+0x3e0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d908011  ! 1137: WRPR_WSTATE_R	wrpr	%r2, %r17, %wstate
	.word 0x90d08013  ! 1141: UMULcc_R	umulcc 	%r2, %r19, %r8
intveclr_8_256:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb65575d410f6ae56, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x4c8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1145: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_8_258:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9783a079fee11e7f, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x741, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1149: FBPLG	fblg
splash_hpstate_8_259:
	.word 0x2eccc001  ! 1: BRGEZ	brgez,a,pt	%r19,<label_0xcc001>
	.word 0x81982ebd  ! 1153: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0ebd, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_261:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_261-donret_8_261), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00555700 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1d16, %htstate
	wrhpr %g0, 0x543, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_261:
	.word 0x27400001  ! 1157: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
intveclr_8_262:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x716c7135d9d24058, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xdd0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1161: FBPLG	fblg
pmu_8_263:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffa6, %g1, %g7
	.word 0xa3800007  ! 1165: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	fbl,a,pn	%fcc0,  skip_8_265
	bgu,a	 skip_8_265
.align 512
skip_8_265:
	.word 0x87a84a50  ! 1169: FCMPd	fcmpd	%fcc<n>, %f32, %f16
mondo_8_266:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r4, [%r0+0x3e8] %asi
    stxa %r19, [%r0+0x3d8] %asi
	.word 0x87802030  ! 1: WRASI_I	wr	%r0, 0x0030, %asi
	.word 0x9d94c004  ! 1173: WRPR_WSTATE_R	wrpr	%r19, %r4, %wstate
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_267:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_8_268:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb9c, %r20
	mov 0x18, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x258, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fc000  ! 1181: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0x27400001  ! 1: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
	.word 0x8d90391f  ! 1185: WRPR_PSTATE_I	wrpr	%r0, 0x191f, %pstate
pmu_8_270:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb8ffffffad, %g1, %g7
	.word 0xa3800007  ! 1189: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
pmu_8_271:
	nop
	nop
	setx 0xffffffbcffffffa7, %g1, %g7
	.word 0xa3800007  ! 1193: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_8_272:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3e0] %asi
    stxa %r4, [%r0+0x3d0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d91c008  ! 1197: WRPR_WSTATE_R	wrpr	%r7, %r8, %wstate
memptr_8_273:
	set user_data_start, %r31
	.word 0x858435eb  ! 1201: WRCCR_I	wr	%r16, 0x15eb, %ccr
intveclr_8_274:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x63b769e6e541d509, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1205: FBPLG	fblg
trapasi_8_275:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe4d84920  ! 1209: LDXA_R	ldxa	[%r1, %r0] 0x49, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_276:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_276-donret_8_276+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b3f500 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1789, %htstate
	wrhpr %g0, 0x3d8, %hpstate  !  rand=1 (8)
	retry
donretarg_8_276:
	.word 0xa1a409d3  ! 1213: FDIVd	fdivd	%f16, %f50, %f16
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_278) + 40, 16, 16)) -> intp(0,0,24,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_278)&0xffffffff) + 16, 16, 16)) -> intp(1,0,16,,,,,1)
#else
	set 0x4a60570d, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_278:
	.word 0x9f80244d  ! 1217: SIR	sir	0x044d
	bcc  	 skip_8_279
	stxa %r16, [%r0] ASI_LSU_CONTROL
	ble,a	 skip_8_279
	stxa %r13, [%r0] ASI_LSU_CONTROL
.align 2048
skip_8_279:
	.word 0xc30fc000  ! 1221: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
splash_hpstate_8_280:
	.word 0x81983f9f  ! 1225: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1f9f, %hpstate
splash_cmpr_8_281:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1229: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x89800011  ! 1233: WRTICK_R	wr	%r0, %r17, %tick
brcommon2_8_283:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0xa7a449d0  ! 1: FDIVd	fdivd	%f48, %f16, %f50
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0xa1b7c7c0  ! 1237: PDIST	pdistn	%d62, %d0, %d16
jmptr_8_284:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 1241: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_8_285:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xc19fda60  ! 1245: LDDFA_R	ldda	[%r31, %r0], %f0
change_to_randtl_8_286:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_8_286:
	.word 0x8f902002  ! 1249: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
memptr_8_287:
	set 0x60140000, %r31
	.word 0x8583205a  ! 1253: WRCCR_I	wr	%r12, 0x005a, %ccr
ibp_8_288:
	nop
	nop
	.word 0x87a94a49  ! 1257: FCMPd	fcmpd	%fcc<n>, %f36, %f40
splash_htba_8_289:
	nop
	ta T_CHANGE_HPRIV
	setx 0x0000000000280000, %r11, %r12
	.word 0x8b98000c  ! 1261: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
memptr_8_290:
	set 0x60540000, %r31
	.word 0x85846c3a  ! 1265: WRCCR_I	wr	%r17, 0x0c3a, %ccr
brcommon2_8_291:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0xe9108013  ! 1: LDQF_R	-	[%r2, %r19], %f20
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0x00800001  ! 1269: BN	bn  	<label_0x1>
	.word 0x91702070  ! 1: POPC_I	popc	0x0070, %r8
	.word 0x9f803371  ! 1273: SIR	sir	0x1371
pmu_8_293:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb6ffffffaa, %g1, %g7
	.word 0xa3800007  ! 1277: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_8_294:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc95, %r20
	mov 0x16, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x989, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe31fe0d0  ! 1281: LDDF_I	ldd	[%r31, 0x00d0], %f17
	.word 0xe1bfe040  ! 1285: STDFA_I	stda	%f16, [0x0040, %r31]
memptr_8_295:
	set 0x60140000, %r31
	.word 0x8580718f  ! 1289: WRCCR_I	wr	%r1, 0x118f, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_296) + 16, 16, 16)) -> intp(6,0,28,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_296)&0xffffffff) + 48, 16, 16)) -> intp(5,0,26,,,,,1)
#else
	set 0x2fe0cda1, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_296:
	.word 0x9f8037a8  ! 1293: SIR	sir	0x17a8
mondo_8_297:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r11, [%r0+0x3d0] %asi
    stxa %r7, [%r0+0x3e0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d918013  ! 1297: WRPR_WSTATE_R	wrpr	%r6, %r19, %wstate
splash_cmpr_8_298:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1301: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
jmptr_8_299:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1305: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xe0dfc720  ! 1309: LDXA_R	ldxa	[%r31, %r0] 0x39, %r16
intveclr_8_301:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x25d7b30401c32754, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x79a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1313: FBPLG	fblg
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_302:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_302-donret_8_302), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00da1d00 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x9dd, %htstate
	best_set_reg(0x508, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	.word 0x0a800001  ! 1: BCS	bcs  	<label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_8_302:
	.word 0x819827d7  ! 1317: WRHPR_HPSTATE_I	wrhpr	%r0, 0x07d7, %hpstate
	.word 0x87802036  ! 1321: WRASI_I	wr	%r0, 0x0036, %asi
dvapa_8_303:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf38, %r20
	mov 0x13, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe8b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd0bfc600  ! 1325: STDA_R	stda	%r8, [%r31 + %r0] 0x30
splash_hpstate_8_304:
	ta T_CHANGE_NONHPRIV
	.word 0x32800001  ! 1: BNE	bne,a	<label_0x1>
	.word 0x8198279d  ! 1329: WRHPR_HPSTATE_I	wrhpr	%r0, 0x079d, %hpstate
mondo_8_305:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3e8] %asi
    stxa %r19, [%r0+0x3d0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d91c012  ! 1333: WRPR_WSTATE_R	wrpr	%r7, %r18, %wstate
demap_8_306:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x3d400001  ! 1: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x2d3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe1e8  ! 1337: LDD_I	ldd	[%r31 + 0x01e8], %r10
splash_hpstate_8_308:
	.word 0x2acc4001  ! 1: BRNZ	brnz,a,pt	%r17,<label_0xc4001>
	.word 0x81983c1b  ! 1341: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1c1b, %hpstate
cwp_8_309:
    set user_data_start, %o7
	.word 0x93902000  ! 1345: WRPR_CWP_I	wrpr	%r0, 0x0000, %cwp
	.word 0xa1902004  ! 1349: WRPR_GL_I	wrpr	%r0, 0x0004, %-
	.word 0xe01fe1d0  ! 1: LDD_I	ldd	[%r31 + 0x01d0], %r16
	.word 0x9f803909  ! 1353: SIR	sir	0x1909
vahole2_8_310:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xc1bfdf20  ! 1357: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0xe68008a0  ! 1361: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
	.word 0x98488012  ! 1365: MULX_R	mulx 	%r2, %r18, %r12
trapasi_8_312:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xd2d84b60  ! 1369: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r9
	.word 0x8d802000  ! 1373: WRFPRS_I	wr	%r0, 0x0000, %fprs
splash_tba_8_314:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000000003a0000, %r11, %r12
	.word 0x8b90000c  ! 1377: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 1381: WRTICK_R	wr	%r0, %r17, %tick
pmu_8_316:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffa0, %g1, %g7
	.word 0xa3800007  ! 1385: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1389: WRTICK_R	wr	%r0, %r17, %tick
	.word 0x8143e011  ! 1393: MEMBAR	membar	#LoadLoad | #Lookaside 
splash_cmpr_8_319:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 1397: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_8_321:
	ta T_CHANGE_NONHPRIV
	.word 0x819824ad  ! 1401: WRHPR_HPSTATE_I	wrhpr	%r0, 0x04ad, %hpstate
dvapa_8_322:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x88c, %r20
	mov 0x16, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xdda, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95a1c9d4  ! 1405: FDIVd	fdivd	%f38, %f20, %f10
tglhtw_8_323:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xa5b, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa3b4c993  ! 1409: BSHUFFLE	fmovc32	%d50, %d50, %d48
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_324) + 56, 16, 16)) -> intp(7,0,24,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_324)&0xffffffff) + 32, 16, 16)) -> intp(4,0,14,,,,,1)
#else
	set 0xa750d85a, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x91a289c2  ! 1: FDIVd	fdivd	%f10, %f2, %f8
intvec_8_324:
	.word 0xa5b104cd  ! 1413: FCMPNE32	fcmpne32	%d4, %d44, %r18
demap_8_325:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x02800001  ! 1: BE	be  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0xe53, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe06b  ! 1417: LDD_I	ldd	[%r31 + 0x006b], %r9
tagged_8_326:
	tsubcctv %r10, 0x1988, %r0
	.word 0xda07e02a  ! 1421: LDUW_I	lduw	[%r31 + 0x002a], %r13
	.word 0xa8824014  ! 1425: ADDcc_R	addcc 	%r9, %r20, %r20
splash_cmpr_8_327:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 1429: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe31fc000  ! 1433: LDDF_R	ldd	[%r31, %r0], %f17
	.word 0x91d02035  ! 1437: Tcc_I	ta	icc_or_xcc, %r0 + 53
memptr_8_328:
	set 0x60340000, %r31
	.word 0x85816b82  ! 1441: WRCCR_I	wr	%r5, 0x0b82, %ccr
brcommon3_8_329:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe06fe0b0  ! 1: LDSTUB_I	ldstub	%r16, [%r31 + 0x00b0]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d90347b  ! 1445: WRPR_PSTATE_I	wrpr	%r0, 0x147b, %pstate
tglhtw_8_330:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x701, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa5b5098b  ! 1449: BSHUFFLE	fmovc32	%d20, %d42, %d18
trapasi_8_332:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 1453: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_8_333:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x6224f803, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x33400001  ! 1: FBPE	fbe,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 1457: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
unsupttte_8_334:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0x650, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91b4c488  ! 1461: FCMPLE32	fcmple32	%d50, %d8, %r8
	.word 0xd137e0a6  ! 1465: STQF_I	-	%f8, [0x00a6, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_335:
	.word 0x39400001  ! 1469: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
    set 0x3380, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0xa7b407d3  ! 1473: PDIST	pdistn	%d16, %d50, %d50
intveclr_8_336:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6bfa9c582d0a6818, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x441, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1477: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x8780204f  ! 1481: WRASI_I	wr	%r0, 0x004f, %asi
memptr_8_338:
	set 0x60740000, %r31
	.word 0x85833a24  ! 1485: WRCCR_I	wr	%r12, 0x1a24, %ccr
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_339)+40, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_339)&0xffffffff) + 8, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_339:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_339:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984a640  ! 1489: WR_SET_SOFTINT_I	wr	%r18, 0x0640, %set_softint
	.word 0x8143e011  ! 1493: MEMBAR	membar	#LoadLoad | #Lookaside 
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_341:
	.word 0xa7b4c4d2  ! 1497: FCMPNE32	fcmpne32	%d50, %d18, %r19
dvapa_8_342:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xfb8, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x28a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd0dfdf00  ! 1501: LDXA_R	ldxa	[%r31, %r0] 0xf8, %r8
	.word 0xa4ad0005  ! 1505: ANDNcc_R	andncc 	%r20, %r5, %r18
invtsb_8_343:
    nop
    nop
    ta T_CHANGE_HPRIV
    rd %asi, %r21
    wr %r0,ASI_MMU_REAL_RANGE, %asi
    mov 1, %r20
    sllx %r20, 63, %r20
    ldxa [ASI_MMU_REAL_RANGE_0] %asi, %r22
    xor %r22 ,%r20, %r22
    stxa %r22,  [ASI_MMU_REAL_RANGE_0] %asi
    ldxa [ASI_MMU_REAL_RANGE_1] %asi, %r22
    xor %r22 ,%r20, %r22
    stxa %r22,  [ASI_MMU_REAL_RANGE_1] %asi
    ldxa [ASI_MMU_REAL_RANGE_2] %asi, %r22
    xor %r22 ,%r20, %r22
    stxa %r22,  [ASI_MMU_REAL_RANGE_2] %asi
    ldxa [ASI_MMU_REAL_RANGE_3] %asi, %r22
    xor %r22 ,%r20, %r22
    stxa %r22,  [ASI_MMU_REAL_RANGE_3] %asi
    wr %r21, %r0, %asi
    wrhpr %g0, 0x5c8, %hpstate  ! ta T_CHANGE_NONHPRIV 
	.word 0x29800001  ! 1509: FBL	fbl,a	<label_0x1>
br_badelay1_8_344:
	.word 0x24cfc001  ! 1: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	.word 0xe3348009  ! 1: STQF_R	-	%f17, [%r9, %r18]
	.word 0x36800001  ! 1: BGE	bge,a	<label_0x1>
	normalw
	.word 0x9b458000  ! 1513: RD_SOFTINT_REG	rd	%softint, %r13
ibp_8_346:
	nop
	nop
	.word 0xe1bfdb40  ! 1517: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_347:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_347-donret_8_347+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0055d200 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd5f, %htstate
	wrhpr %g0, 0xe1b, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_347:
	.word 0x81982aed  ! 1521: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0aed, %hpstate
	fbue skip_8_348
	bl  	 skip_8_348
.align 4096
skip_8_348:
	.word 0x97a309d4  ! 1525: FDIVd	fdivd	%f12, %f20, %f42
	.word 0xe87fe000  ! 1529: SWAP_I	swap	%r20, [%r31 + 0x0000]
brcommon1_8_349:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xa7702190  ! 1: POPC_I	popc	0x0190, %r19
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xa5a109ad  ! 1533: FDIVs	fdivs	%f4, %f13, %f18
	.word 0x8d902fb5  ! 1537: WRPR_PSTATE_I	wrpr	%r0, 0x0fb5, %pstate
pmu_8_351:
	nop
	nop
	setx 0xffffffbbffffffac, %g1, %g7
	.word 0xa3800007  ! 1541: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1545: WRTICK_R	wr	%r0, %r17, %tick
trapasi_8_354:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 1549: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
splash_tba_8_355:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000400380000, %r11, %r12
	.word 0x8b90000c  ! 1553: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_356:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_356-donret_8_356+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00eb6d00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x2d7, %htstate
	wrhpr %g0, 0x1d0, %hpstate  !  rand=1 (8)
	retry
donretarg_8_356:
	.word 0x99a249d1  ! 1557: FDIVd	fdivd	%f40, %f48, %f12
pmu_8_357:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa5, %g1, %g7
	.word 0xa3800007  ! 1561: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8d9038d5  ! 1565: WRPR_PSTATE_I	wrpr	%r0, 0x18d5, %pstate
ibp_8_359:
	nop
	nop
	wrhpr %g0, 0x352, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfdc00  ! 1569: STDFA_R	stda	%f16, [%r0, %r31]
iaw_8_360:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_360:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_360
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_360:
    brnz %r16, iaw_wait8_360
    ld [%r23], %r16
    ba iaw_startwait8_360
    mov 0x8, %r16
continue_iaw_8_360:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_360:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_360
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_360:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_360
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_360:
	mov 0x38, %r18
iaw0_8_360:
	rd %pc, %r19
	add %r19, (16+1), %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x398, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95a249d3  ! 1573: FDIVd	fdivd	%f40, %f50, %f10
	brnz,a,pt	%r10, skip_8_361
	bge  	 skip_8_361
.align 2048
skip_8_361:
	.word 0x9f802aea  ! 1577: SIR	sir	0x0aea
	.word 0x8143e011  ! 1581: MEMBAR	membar	#LoadLoad | #Lookaside 
trapasi_8_363:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5a) 
	.word 0xd6d84b40  ! 1585: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r11
mondo_8_364:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3c0] %asi
    stxa %r11, [%r0+0x3d0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d940009  ! 1589: WRPR_WSTATE_R	wrpr	%r16, %r9, %wstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa5b444d2  ! 1: FCMPNE32	fcmpne32	%d48, %d18, %r18
intvec_8_365:
	.word 0x39400001  ! 1593: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
fpinit_8_366:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 1597: FCMPd	fcmpd	%fcc<n>, %f0, %f4
brcommon1_8_367:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe3e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r17
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xa1b2c7d4  ! 1601: PDIST	pdistn	%d42, %d20, %d16
mondo_8_368:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r8, [%r0+0x3e8] %asi
    stxa %r12, [%r0+0x3e0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d950013  ! 1605: WRPR_WSTATE_R	wrpr	%r20, %r19, %wstate
memptr_8_369:
	set user_data_start, %r31
	.word 0x858471df  ! 1609: WRCCR_I	wr	%r17, 0x11df, %ccr
intveclr_8_370:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x80edcad0441239db, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1613: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_8_371:
	set 0x60340000, %r31
	.word 0x85846e6c  ! 1617: WRCCR_I	wr	%r17, 0x0e6c, %ccr
splash_lsu_8_372:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x37c4ec87, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x2acb0001  ! 1: BRNZ	brnz,a,pt	%r12,<label_0xb0001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 1621: FBPULE	fbule
	.word 0x87802080  ! 1625: WRASI_I	wr	%r0, 0x0080, %asi
	.word 0xc19fc3e0  ! 1629: LDDFA_R	ldda	[%r31, %r0], %f0
trapasi_8_374:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1633: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0xd8dfd920  ! 1637: LDXA_R	ldxa	[%r31, %r0] 0xc9, %r12
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_376) + 32, 16, 16)) -> intp(0,0,31,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_376)&0xffffffff) + 56, 16, 16)) -> intp(3,0,9,,,,,1)
#else
	set 0x61508d92, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_376:
	.word 0x9f802b0f  ! 1641: SIR	sir	0x0b0f
	.word 0x8d802000  ! 1645: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x8d802004  ! 1649: WRFPRS_I	wr	%r0, 0x0004, %fprs
mondo_8_377:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r7, [%r0+0x3c0] %asi
    stxa %r19, [%r0+0x3d8] %asi
	.word 0x87802080  ! 1: WRASI_I	wr	%r0, 0x0080, %asi
	.word 0x9d90c012  ! 1653: WRPR_WSTATE_R	wrpr	%r3, %r18, %wstate
ibp_8_378:
	nop
	nop
	wrhpr %g0, 0xb4a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfda60  ! 1657: STDFA_R	stda	%f16, [%r0, %r31]
intveclr_8_379:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xf675b195d8d17767, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1661: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
ibp_8_380:
	nop
	nop
	.word 0xda97dc40  ! 1665: LDUHA_R	lduha	[%r31, %r0] 0xe2, %r13
iaw_8_381:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_381:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_381
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_381:
    brnz %r16, iaw_wait8_381
    ld [%r23], %r16
    ba iaw_startwait8_381
    mov 0x8, %r16
continue_iaw_8_381:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_381:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_381
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_381:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_381
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_381:
	mov 0x38, %r18
iaw3_8_381:
	setx vahole_target0, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x2d2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fdd40  ! 1669: LDDA_R	ldda	[%r31, %r0] 0xea, %r0
br_badelay2_8_382:
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	pdist %f12, %f26, %f0
	.word 0xa5b4830d  ! 1673: ALIGNADDRESS	alignaddr	%r18, %r13, %r18
pmu_8_383:
	nop
	nop
	setx 0xffffffb3ffffffa6, %g1, %g7
	.word 0xa3800007  ! 1677: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_384:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_384-donret_8_384+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00045800 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x14cf, %htstate
	best_set_reg(0x220, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	retry
donretarg_8_384:
	.word 0x81982dd5  ! 1681: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0dd5, %hpstate
mondo_8_385:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3d8] %asi
    stxa %r13, [%r0+0x3d8] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d944012  ! 1685: WRPR_WSTATE_R	wrpr	%r17, %r18, %wstate
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_386) + 8, 16, 16)) -> intp(2,0,5,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_386)&0xffffffff) + 48, 16, 16)) -> intp(5,0,4,,,,,1)
#else
	set 0xe4200511, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_386:
	.word 0x9bb484cd  ! 1689: FCMPNE32	fcmpne32	%d18, %d44, %r13
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_387:
	.word 0x39400001  ! 1693: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_388:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_388-donret_8_388), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0086eb00 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f5e, %htstate
	wrhpr %g0, 0x559, %hpstate  !  rand=1 (8)
	.word 0x34800001  ! 1: BG	bg,a	<label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_8_388:
	.word 0xa1a4c9c5  ! 1697: FDIVd	fdivd	%f50, %f36, %f16
trapasi_8_389:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1701: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0x8d802000  ! 1705: WRFPRS_I	wr	%r0, 0x0000, %fprs
trapasi_8_391:
	nop
	mov 0x3f0, %r1 	! (VA for ASI 0x25) 
	.word 0xe4d844a0  ! 1709: LDXA_R	ldxa	[%r1, %r0] 0x25, %r18
intveclr_8_392:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x62f93a8a07dfc731, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1713: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_8_393:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc7f, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x218, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfdb20  ! 1717: STDFA_R	stda	%f16, [%r0, %r31]
vahole3_8_394:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target0, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xd91fe170  ! 1721: LDDF_I	ldd	[%r31, 0x0170], %f12
	.word 0x36780001  ! 1725: BPGE	<illegal instruction>
	.word 0xa1902001  ! 1729: WRPR_GL_I	wrpr	%r0, 0x0001, %-
frzptr_8_395:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xc19fdf00  ! 1733: LDDFA_R	ldda	[%r31, %r0], %f0
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_397)+48, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_397)&0xffffffff) + 8, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_397:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_397:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa981a1e5  ! 1737: WR_SET_SOFTINT_I	wr	%r6, 0x01e5, %set_softint
ibp_8_398:
	nop
	nop
	.word 0xe81fe090  ! 1741: LDD_I	ldd	[%r31 + 0x0090], %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_399:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_399-donret_8_399+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00d85600 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1ce7, %htstate
	wrhpr %g0, 0xa9b, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_8_399:
	.word 0xa7a409d1  ! 1745: FDIVd	fdivd	%f16, %f48, %f50
	.word 0xc19fe1e0  ! 1749: LDDFA_I	ldda	[%r31, 0x01e0], %f0
	.word 0xe6cfc240  ! 1753: LDSBA_R	ldsba	[%r31, %r0] 0x12, %r19
	.word 0xe44fe1e8  ! 1757: LDSB_I	ldsb	[%r31 + 0x01e8], %r18
splash_tba_8_401:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1761: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_8_403:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r17, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x393, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe140  ! 1765: LDD_I	ldd	[%r31 + 0x0140], %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_405:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_405-donret_8_405), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00540b00 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1545, %htstate
	best_set_reg(0x1a68, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	done
.align 2048
donretarg_8_405:
	.word 0x99a409d0  ! 1769: FDIVd	fdivd	%f16, %f16, %f12
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_406) + 24, 16, 16)) -> intp(1,0,19,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_406)&0xffffffff) + 8, 16, 16)) -> intp(2,0,23,,,,,1)
#else
	set 0xfb60e65e, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x99b444cc  ! 1: FCMPNE32	fcmpne32	%d48, %d12, %r12
intvec_8_406:
	.word 0x19400001  ! 1773: FBPUGE	fbuge
ibp_8_407:
	nop
	nop
	wrhpr %g0, 0x908, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd0dfdf00  ! 1777: LDXA_R	ldxa	[%r31, %r0] 0xf8, %r8
unsupttte_8_409:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x5c        ! D unsupported page size ..
    wrhpr %g0, 0x203, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87aa4a48  ! 1781: FCMPd	fcmpd	%fcc<n>, %f40, %f8
brcommon3_8_411:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe7e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r19
    ba,a .+8
    jmpl %r27+0, %r27
    stxa %r11, [%r0] ASI_LSU_CONTROL
	.word 0x9baac82c  ! 1785: FMOVGE	fmovs	%fcc1, %f12, %f13
iaw_8_413:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_413:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_413
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_413:
    brnz %r16, iaw_wait8_413
    ld [%r23], %r16
    ba iaw_startwait8_413
    mov 0x8, %r16
continue_iaw_8_413:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_413:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_413
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_413:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_413
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_413:
	mov 0x38, %r18
iaw3_8_413:
	setx vahole_target0, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xdc8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fc3e0  ! 1789: LDDFA_R	ldda	[%r31, %r0], %f0
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_414)+48, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_414)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_414:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_414:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9853ff8  ! 1793: WR_SET_SOFTINT_I	wr	%r20, 0x1ff8, %set_softint
brcommon3_8_416:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd5e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r10
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xd5e7c080  ! 1797: CASA_I	casa	[%r31] 0x 4, %r0, %r10
intveclr_8_417:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xc42c60d8473fbef8, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1801: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_8_418:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6307340aa4a09c00, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1805: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_8_419:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xaf1, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x40, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda3fe170  ! 1809: STD_I	std	%r13, [%r31 + 0x0170]
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_420:
	ta	T_CHANGE_NONPRIV	! macro
fpinit_8_421:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009c4  ! 1817: FDIVd	fdivd	%f0, %f4, %f4
intveclr_8_422:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6c225bb25af4bf21, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x4cb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1821: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	fbule,a,pn	%fcc0,  skip_8_423
	stxa %r9, [%r0] ASI_LSU_CONTROL
	bpos  	 skip_8_423
	stxa %r17, [%r0] ASI_LSU_CONTROL
.align 1024
skip_8_423:
	.word 0xe43fe081  ! 1825: STD_I	std	%r18, [%r31 + 0x0081]
fpinit_8_424:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 1829: FCMPLE32	fcmple32	%d0, %d4, %r8
memptr_8_425:
	set 0x60340000, %r31
	.word 0x8584bf69  ! 1833: WRCCR_I	wr	%r18, 0x1f69, %ccr
brcommon3_8_426:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e150  ! 1: STQF_I	-	%f13, [0x0150, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d90352f  ! 1837: WRPR_PSTATE_I	wrpr	%r0, 0x152f, %pstate
splash_tba_8_427:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1841: WRPR_TBA_R	wrpr	%r0, %r12, %tba
jmptr_8_428:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 1845: JMPL_R	jmpl	%r27 + %r0, %r27
ibp_8_429:
	nop
	nop
	wrhpr %g0, 0xb8a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe93fe130  ! 1849: STDF_I	std	%f20, [0x0130, %r31]
	.word 0xe897d000  ! 1: LDUHA_R	lduha	[%r31, %r0] 0x80, %r20
	.word 0x9f802102  ! 1853: SIR	sir	0x0102
dvapa_8_430:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf63, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x6d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd69fc180  ! 1857: LDDA_R	ldda	[%r31, %r0] 0x0c, %r11
trapasi_8_432:
	nop
	mov 0x20, %r1 	! (VA for ASI 0x4c) 
	.word 0xe4d84980  ! 1861: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_434:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_434-donret_8_434+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00231f00 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x495, %htstate
	best_set_reg(0xd69, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	retry
donretarg_8_434:
	.word 0xa3a4c9c3  ! 1865: FDIVd	fdivd	%f50, %f34, %f48
frzptr_8_435:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xd1e7c080  ! 1: CASA_I	casa	[%r31] 0x 4, %r0, %r8
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 1869: BN	bn,a	<label_0x1>
trapasi_8_436:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe6d84920  ! 1873: LDXA_R	ldxa	[%r1, %r0] 0x49, %r19
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa3a409c6  ! 1: FDIVd	fdivd	%f16, %f6, %f48
intvec_8_437:
	.word 0x93b2c4d1  ! 1877: FCMPNE32	fcmpne32	%d42, %d48, %r9
demap_8_438:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r16, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xc1b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe149  ! 1881: LDD_I	ldd	[%r31 + 0x0149], %r10
intveclr_8_439:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8fe490d3358a592f, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1885: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_441:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_441-donret_8_441), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x008abe00 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xa97, %htstate
	best_set_reg(0x439, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_441:
	.word 0x8d90361c  ! 1889: WRPR_PSTATE_I	wrpr	%r0, 0x161c, %pstate
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_442)+56, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_442)&0xffffffff) + 32, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_442:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_442:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98437c9  ! 1893: WR_SET_SOFTINT_I	wr	%r16, 0x17c9, %set_softint
pmu_8_443:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb7ffffffa0, %g1, %g7
	.word 0xa3800007  ! 1897: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa7b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r19
	.word 0x9f803f4c  ! 1901: SIR	sir	0x1f4c
	.word 0x22800001  ! 1905: BE	be,a	<label_0x1>
	fbue skip_8_444
	.word 0x9f8030b3  ! 1: SIR	sir	0x10b3
.align 4096
skip_8_444:
	.word 0x87acca53  ! 1909: FCMPd	fcmpd	%fcc<n>, %f50, %f50
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_446:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_446-donret_8_446+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00582900 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc9f, %htstate
	best_set_reg(0x9bb, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_8_446:
	.word 0xe06fe0f8  ! 1913: LDSTUB_I	ldstub	%r16, [%r31 + 0x00f8]
memptr_8_448:
	set 0x60540000, %r31
	.word 0x8582f9a8  ! 1917: WRCCR_I	wr	%r11, 0x19a8, %ccr
	.word 0xe737e159  ! 1921: STQF_I	-	%f19, [0x0159, %r31]
	fbule,a,pn	%fcc0,  skip_8_449
	bvs  	 skip_8_449
.align 4096
skip_8_449:
	.word 0x87ac4a44  ! 1925: FCMPd	fcmpd	%fcc<n>, %f48, %f4
dvapa_8_450:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf27, %r20
	mov 0x10, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x24b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5703435  ! 1929: POPC_I	popc	0x1435, %r18
	.word 0x83d020b2  ! 1933: Tcc_I	te	icc_or_xcc, %r0 + 178
intveclr_8_451:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x3c09380e057d8afd, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x50b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 1937: FBPLG	fblg
	.word 0xe48fc540  ! 1941: LDUBA_R	lduba	[%r31, %r0] 0x2a, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_452:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_452-donret_8_452+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f7e100 | (0x58 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x10cd, %htstate
	wrhpr %g0, 0x11b, %hpstate  !  rand=1 (8)
	retry
donretarg_8_452:
	.word 0x2ec94001  ! 1945: BRGEZ	brgez,a,pt	%r5,<label_0x94001>
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0x9f8033fe  ! 1949: SIR	sir	0x13fe
	.word 0x87802036  ! 1953: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0xa5b28544  ! 1957: FCMPEQ16	fcmpeq16	%d10, %d4, %r18
	.word 0x99b28583  ! 1961: FCMPGT32	fcmpgt32	%d10, %d34, %r12
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_8_453:
	.word 0x19400001  ! 1965: FBPUGE	fbuge
	.word 0x8d802004  ! 1969: WRFPRS_I	wr	%r0, 0x0004, %fprs
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_454) + 32, 16, 16)) -> intp(2,0,8,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_454)&0xffffffff) + 8, 16, 16)) -> intp(6,0,18,,,,,1)
#else
	set 0x6e2056ff, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_8_454:
	.word 0x9f803bad  ! 1973: SIR	sir	0x1bad
	.word 0x9b7020c0  ! 1: POPC_I	popc	0x00c0, %r13
	.word 0x9f802bbf  ! 1977: SIR	sir	0x0bbf
dvapa_8_455:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb61, %r20
	mov 0x17, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x8cb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1e7dc40  ! 1981: CASA_I	casa	[%r31] 0xe2, %r0, %r16
	.word 0x95480000  ! 1985: RDHPR_HPSTATE	rdhpr	%hpstate, %r10
	.word 0x91d020b4  ! 1989: Tcc_I	ta	icc_or_xcc, %r0 + 180
	.word 0xa5b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r18
	.word 0x9f803d94  ! 1993: SIR	sir	0x1d94
splash_tba_8_456:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1997: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_8_457:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x1964de7e, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2001: FBPULE	fbule
	.word 0xa7b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r19
	.word 0x9f803277  ! 2005: SIR	sir	0x1277
dvapa_8_458:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe1e, %r20
	mov 0x16, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa9b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe11fe060  ! 2009: LDDF_I	ldd	[%r31, 0x0060], %f16
	wrhpr %g0, 0x100, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2013: MEMBAR	membar	#LoadLoad | #Lookaside 
ibp_8_460:
	nop
	nop
	wrhpr %g0, 0x4c2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc32fe1b0  ! 2017: STXFSR_I	st-sfr	%f1, [0x01b0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_462:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_462-donret_8_462), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00540900 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xd4d, %htstate
	best_set_reg(0x1680, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	.word 0x36800001  ! 1: BGE	bge,a	<label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_8_462:
	.word 0x1f400001  ! 2021: FBPO	fbo
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_8_463)+48, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_8_463)&0xffffffff) + 24, 16, 16)) -> intp(mask2tid(0x8),1,3,,,,,1)
xir_8_463:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_8_463:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9843b72  ! 2025: WR_SET_SOFTINT_I	wr	%r16, 0x1b72, %set_softint
	.word 0xe08008a0  ! 2029: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r16
pmu_8_466:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb7ffffffa5, %g1, %g7
	.word 0xa3800007  ! 2033: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_8_467:
	set 0x60740000, %r31
	.word 0x8584a996  ! 2037: WRCCR_I	wr	%r18, 0x0996, %ccr
splash_hpstate_8_468:
	.word 0x1e800001  ! 1: BVC	bvc  	<label_0x1>
	.word 0x81983797  ! 2041: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1797, %hpstate
ibp_8_469:
	nop
	nop
	.word 0xc3efe120  ! 2045: PREFETCHA_I	prefetcha	[%r31, + 0x0120] %asi, #one_read
	.word 0x99508000  ! 2049: RDPR_TSTATE	<illegal instruction>
brcommon3_8_470:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e120  ! 1: STQF_I	-	%f13, [0x0120, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 2053: BN	bn,a	<label_0x1>
tglhtw_8_471:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x40b, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa5b34994  ! 2057: BSHUFFLE	fmovc32	%d44, %d20, %d18
fpinit_8_472:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89b00484  ! 2061: FCMPLE32	fcmple32	%d0, %d4, %r4
mondo_8_473:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r3, [%r0+0x3d8] %asi
    stxa %r5, [%r0+0x3c0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d904003  ! 2065: WRPR_WSTATE_R	wrpr	%r1, %r3, %wstate
	.word 0x98ab4002  ! 2069: ANDNcc_R	andncc 	%r13, %r2, %r12
mondo_8_475:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r2, [%r0+0x3d0] %asi
    stxa %r18, [%r0+0x3d0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d928005  ! 2073: WRPR_WSTATE_R	wrpr	%r10, %r5, %wstate
dvapa_8_477:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe96, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd08, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc0bfda00  ! 2077: STDA_R	stda	%r0, [%r31 + %r0] 0xd0
	.word 0x8780208b  ! 2081: WRASI_I	wr	%r0, 0x008b, %asi
dvapa_8_478:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe9c, %r20
	mov 0x3, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xa51, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd83fe1f0  ! 2085: STD_I	std	%r12, [%r31 + 0x01f0]
ibp_8_479:
	nop
	nop
	.word 0xa5a509b0  ! 2089: FDIVs	fdivs	%f20, %f16, %f18
	bcc  	 skip_8_480
	stxa %r9, [%r0] ASI_LSU_CONTROL
	ble  	 skip_8_480
	stxa %r17, [%r0] ASI_LSU_CONTROL
.align 2048
skip_8_480:
	.word 0xd23fe11a  ! 2093: STD_I	std	%r9, [%r31 + 0x011a]
demap_8_481:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2a800001  ! 1: BCS	bcs,a	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x600, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe140  ! 2097: LDD_I	ldd	[%r31 + 0x0140], %r11
	.word 0xa1a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f16
	.word 0xc36fe120  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0120], #one_read
	mov 0xb1, %r30
	.word 0x91d0001e  ! 2101: Tcc_R	ta	icc_or_xcc, %r0 + %r30
splash_lsu_8_482:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x6f3b9c4f, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2105: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
splash_cmpr_8_483:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2109: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x9a494010  ! 2113: MULX_R	mulx 	%r5, %r16, %r13
	.word 0x91920010  ! 2117: WRPR_PIL_R	wrpr	%r8, %r16, %pil
	.word 0xdb97c540  ! 2121: LDQFA_R	-	[%r31, %r0], %f13
memptr_8_485:
	set 0x60540000, %r31
	.word 0x85842978  ! 2125: WRCCR_I	wr	%r16, 0x0978, %ccr
splash_lsu_8_487:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xaba6cb4e, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2129: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
tglhtw_8_488:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x742, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa7b48991  ! 2133: BSHUFFLE	fmovc32	%d18, %d48, %d50
	.word 0x917020d0  ! 1: POPC_I	popc	0x00d0, %r8
	.word 0x9f803dad  ! 2137: SIR	sir	0x1dad
	.word 0xa9520000  ! 2141: RDPR_PIL	<illegal instruction>
	.word 0xc1bfe000  ! 2145: STDFA_I	stda	%f0, [0x0000, %r31]
splash_cmpr_8_489:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 2149: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe127e000  ! 2153: STF_I	st	%f16, [0x0000, %r31]
splash_cmpr_8_490:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2157: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
vahole6_8_491:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe6bfdc40  ! 2161: STDA_R	stda	%r19, [%r31 + %r0] 0xe2
splash_hpstate_8_492:
	.word 0x81983615  ! 2165: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1615, %hpstate
cwp_8_493:
    set user_data_start, %o7
	.word 0x93902001  ! 2169: WRPR_CWP_I	wrpr	%r0, 0x0001, %cwp
iaw_8_495:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_495:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_495
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_495:
    brnz %r16, iaw_wait8_495
    ld [%r23], %r16
    ba iaw_startwait8_495
    mov 0x8, %r16
continue_iaw_8_495:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_495:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_495
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_495:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_495
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_495:
	mov 0x38, %r18
iaw4_8_495:
	setx common_target, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x658, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe51fe080  ! 2173: LDDF_I	ldd	[%r31, 0x0080], %f18
splash_tba_8_496:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000004003a0000, %r11, %r12
	.word 0x8b90000c  ! 2177: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 2181: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd08008a0  ! 2185: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r8
splash_lsu_8_499:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x77db9863, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2189: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_500:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_500-donret_8_500), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00cf1d00 | (16 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x24d, %htstate
	best_set_reg(0x18b3, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	retry
donretarg_8_500:
	.word 0xdaffc400  ! 2193: SWAPA_R	swapa	%r13, [%r31 + %r0] 0x20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa3a349c8  ! 1: FDIVd	fdivd	%f44, %f8, %f48
intvec_8_501:
	.word 0x97b444d1  ! 2197: FCMPNE32	fcmpne32	%d48, %d48, %r11
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_502:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_502-donret_8_502), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x009b4500 | (0x80 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xddd, %htstate
	wrhpr %g0, 0x658, %hpstate  !  rand=1 (8)
	retry
.align 2048
donretarg_8_502:
	.word 0x8d90239e  ! 2201: WRPR_PSTATE_I	wrpr	%r0, 0x039e, %pstate
	.word 0x89800011  ! 2205: WRTICK_R	wr	%r0, %r17, %tick
memptr_8_504:
	set user_data_start, %r31
	.word 0x85842775  ! 2209: WRCCR_I	wr	%r16, 0x0775, %ccr
frzptr_8_505:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xe1bfdb20  ! 2213: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_507:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_507-donret_8_507), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x004d9200 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xeff, %htstate
	wrhpr %g0, 0x71a, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_8_507:
	.word 0x81983501  ! 2217: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1501, %hpstate
ibp_8_508:
	nop
	nop
	wrhpr %g0, 0xb51, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99b48482  ! 2221: FCMPLE32	fcmple32	%d18, %d2, %r12
intveclr_8_509:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x27ac7972dc43ef73, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2225: FBPLG	fblg
fpinit_8_510:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009a4  ! 2229: FDIVs	fdivs	%f0, %f4, %f6
	.word 0xb1818010  ! 2233: WR_STICK_REG_R	wr	%r6, %r16, %-
memptr_8_511:
	set 0x60340000, %r31
	.word 0x85827e14  ! 2237: WRCCR_I	wr	%r9, 0x1e14, %ccr
	.word 0x81b01021  ! 2241: SIAM	siam	1
	.word 0x91918012  ! 2245: WRPR_PIL_R	wrpr	%r6, %r18, %pil
splash_lsu_8_513:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x0b602979, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2249: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xe19fe180  ! 2253: LDDFA_I	ldda	[%r31, 0x0180], %f16
trapasi_8_514:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 2257: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_8_515:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xc14090cf, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x0acc4001  ! 1: BRNZ	brnz,pt  	%r17,<label_0xc4001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2261: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x87802004  ! 2265: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0xe84fe0c8  ! 2269: LDSB_I	ldsb	[%r31 + 0x00c8], %r20
pmu_8_517:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb1ffffffa5, %g1, %g7
	.word 0xa3800007  ! 2273: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe8800ac0  ! 2277: LDUWA_R	lduwa	[%r0, %r0] 0x56, %r20
	.word 0xc32fc000  ! 2281: STXFSR_R	st-sfr	%f1, [%r0, %r31]
splash_cmpr_8_518:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2285: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	bgu  	 skip_8_519
	brlez,pn  	%r18, skip_8_519
.align 2048
skip_8_519:
	.word 0xc36d3824  ! 2289: PREFETCH_I	prefetch	[%r20 + 0xfffff824], #one_read
demap_8_520:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r16, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0xc88, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe0ea  ! 2293: LDD_I	ldd	[%r31 + 0x00ea], %r18
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_522) + 0, 16, 16)) -> intp(0,0,13,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_522)&0xffffffff) + 24, 16, 16)) -> intp(4,0,15,,,,,1)
#else
	set 0xff0fd4e, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_522:
	.word 0x9bb404cd  ! 2297: FCMPNE32	fcmpne32	%d16, %d44, %r13
dvapa_8_523:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe09, %r20
	mov 0x11, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x25b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfdc40  ! 2301: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xd23fe1e0  ! 1: STD_I	std	%r9, [%r31 + 0x01e0]
	.word 0x9f8028e7  ! 2305: SIR	sir	0x08e7
br_longdelay3_8_525:
	nop
	not %g0, %r27
	jmpl %r27+0, %r27
	.word 0x9f8026bd  ! 2309: SIR	sir	0x06bd
	.word 0xc36fe170  ! 2313: PREFETCH_I	prefetch	[%r31 + 0x0170], #one_read
pmu_8_526:
	nop
	nop
	setx 0xffffffb7ffffffa2, %g1, %g7
	.word 0xa3800007  ! 2317: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa1902001  ! 2321: WRPR_GL_I	wrpr	%r0, 0x0001, %-
memptr_8_527:
	set 0x60140000, %r31
	.word 0x8584bd20  ! 2325: WRCCR_I	wr	%r18, 0x1d20, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_528) + 24, 16, 16)) -> intp(7,0,5,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_528)&0xffffffff) + 56, 16, 16)) -> intp(4,0,15,,,,,1)
#else
	set 0x99a063d0, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0xa9a189d3  ! 1: FDIVd	fdivd	%f6, %f50, %f20
intvec_8_528:
	.word 0xa7b444c7  ! 2329: FCMPNE32	fcmpne32	%d48, %d38, %r19
trapasi_8_529:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe6d84940  ! 2333: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r19
demap_8_530:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2ccb0001  ! 1: BRGZ	brgz,a,pt	%r12,<label_0xb0001>
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x313, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe017  ! 2337: LDD_I	ldd	[%r31 + 0x0017], %r20
splash_htba_8_531:
	nop
	ta T_CHANGE_HPRIV
	setx 0x00000000002a0000, %r11, %r12
	.word 0x8b98000c  ! 2341: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa4c171a2  ! 2345: ADDCcc_I	addccc 	%r5, 0xfffff1a2, %r18
iaw_8_532:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_532:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_532
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_532:
    brnz %r16, iaw_wait8_532
    ld [%r23], %r16
    ba iaw_startwait8_532
    mov 0x8, %r16
continue_iaw_8_532:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_532:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_532
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_532:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_532
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_532:
	mov 0x38, %r18
iaw2_8_532:
	rdpr %tba, %r19
	mov 0x120,  %r20
	sllx %r20, 5, %r20
	add %r20, %r19, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x65b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99a489b0  ! 2349: FDIVs	fdivs	%f18, %f16, %f12
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_533:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_533-donret_8_533), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f6da00 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xfd5, %htstate
	best_set_reg(0x16a, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_533:
	.word 0x8d9025ce  ! 2353: WRPR_PSTATE_I	wrpr	%r0, 0x05ce, %pstate
ibp_8_534:
	nop
	nop
	.word 0xe19fdf00  ! 2357: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x9750c000  ! 2361: RDPR_TT	<illegal instruction>
mondo_8_535:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r4, [%r0+0x3e0] %asi
    stxa %r5, [%r0+0x3c0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d948002  ! 2365: WRPR_WSTATE_R	wrpr	%r18, %r2, %wstate
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_536:
	ta	T_CHANGE_NONPRIV	! macro
memptr_8_537:
	set user_data_start, %r31
	.word 0x858423a5  ! 2373: WRCCR_I	wr	%r16, 0x03a5, %ccr
	.word 0xda0fc000  ! 2377: LDUB_R	ldub	[%r31 + %r0], %r13
demap_8_539:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r15, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xbd0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe121  ! 2381: LDD_I	ldd	[%r31 + 0x0121], %r18
	.word 0xd2c7c280  ! 2385: LDSWA_R	ldswa	[%r31, %r0] 0x14, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_540) + 24, 16, 16)) -> intp(4,0,0,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_540)&0xffffffff) + 8, 16, 16)) -> intp(2,0,17,,,,,1)
#else
	set 0xc440027f, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_540:
	.word 0x39400001  ! 2389: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0xe0800c20  ! 2393: LDUWA_R	lduwa	[%r0, %r0] 0x61, %r16
jmptr_8_541:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2397: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_8_542:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb5ffffffa9, %g1, %g7
	.word 0xa3800007  ! 2401: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x1a800001  ! 1: BCC	bcc  	<label_0x1>
	.word 0x8d9031e1  ! 2405: WRPR_PSTATE_I	wrpr	%r0, 0x11e1, %pstate
vahole6_8_545:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe53fe190  ! 2409: STDF_I	std	%f18, [0x0190, %r31]
splash_cmpr_8_547:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2413: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_548:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_548-donret_8_548+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f44800 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x115d, %htstate
	wrhpr %g0, 0xcc1, %hpstate  !  rand=1 (8)
	retry
donretarg_8_548:
	.word 0xa7a449d3  ! 2417: FDIVd	fdivd	%f48, %f50, %f50
trapasi_8_549:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xd6d84980  ! 2421: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r11
	.word 0xe0dfc080  ! 1: LDXA_R	ldxa	[%r31, %r0] 0x04, %r16
	.word 0x9f802ef3  ! 2425: SIR	sir	0x0ef3
	.word 0x91480000  ! 2429: RDHPR_HPSTATE	rdhpr	%hpstate, %r8
	.word 0xe8d7c540  ! 2433: LDSHA_R	ldsha	[%r31, %r0] 0x2a, %r20
mondo_8_550:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r2, [%r0+0x3d8] %asi
    stxa %r2, [%r0+0x3e8] %asi
	.word 0x87802014  ! 1: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0x9d904014  ! 2437: WRPR_WSTATE_R	wrpr	%r1, %r20, %wstate
splash_hpstate_8_551:
	ta T_CHANGE_NONHPRIV
	.word 0x2accc001  ! 1: BRNZ	brnz,a,pt	%r19,<label_0xcc001>
	.word 0x8198259a  ! 2441: WRHPR_HPSTATE_I	wrhpr	%r0, 0x059a, %hpstate
	.word 0xe2800ba0  ! 2445: LDUWA_R	lduwa	[%r0, %r0] 0x5d, %r17
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_8_552) + 40, 16, 16)) -> intp(2,0,14,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_8_552)&0xffffffff) + 48, 16, 16)) -> intp(5,0,16,,,,,1)
#else
	set 0x6dd02565, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_8_552:
	.word 0x9f8033dd  ! 2449: SIR	sir	0x13dd
intveclr_8_553:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd72198992dac64e5, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2453: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
jmptr_8_554:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 2457: JMPL_R	jmpl	%r27 + %r0, %r27
intveclr_8_555:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xab2f42ec7e9f355d, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2461: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x9b53c000  ! 2465: RDPR_FQ	<illegal instruction>
	.word 0xd61fc000  ! 2469: LDD_R	ldd	[%r31 + %r0], %r11
intveclr_8_556:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x8ba82102d1dca628, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2473: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xd03fc000  ! 2477: STD_R	std	%r8, [%r31 + %r0]
dvapa_8_557:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xdce, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xfcb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x97702cbf  ! 2481: POPC_I	popc	0x0cbf, %r11
splash_tba_8_558:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2485: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_8_559:
	set 0x60140000, %r31
	.word 0x85847e2c  ! 2489: WRCCR_I	wr	%r17, 0x1e2c, %ccr
vahole2_8_560:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xc1bfde20  ! 2493: STDFA_R	stda	%f0, [%r0, %r31]
dvapa_8_561:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x906, %r20
	mov 0x19, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x3ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fdc00  ! 2497: LDDA_R	ldda	[%r31, %r0] 0xe0, %r0
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_562:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_562-donret_8_562+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x000a8b00 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x124e, %htstate
	wrhpr %g0, 0x313, %hpstate  !  rand=1 (8)
	retry
.align 2048
donretarg_8_562:
	.word 0xe66fe071  ! 2501: LDSTUB_I	ldstub	%r19, [%r31 + 0x0071]
	.word 0xe1bfe040  ! 2505: STDFA_I	stda	%f16, [0x0040, %r31]
	.word 0xa7a00160  ! 2509: FABSq	dis not found

br_badelay3_8_564:
	.word 0x02800001  ! 1: BE	be  	<label_0x1>
	.word 0xf9719a8a	! Random illegal ?
	.word 0xd711c007  ! 1: LDQF_R	-	[%r7, %r7], %f11
	.word 0x91a24832  ! 2513: FADDs	fadds	%f9, %f18, %f8
vahole5_8_566:
    nop
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xa1b48331  ! 2517: BMASK	bmask	%r18, %r17, %r16
frzptr_8_567:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xa3702050  ! 1: POPC_I	popc	0x0050, %r17
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2521: BN	bn,a	<label_0x1>
memptr_8_568:
	set 0x60140000, %r31
	.word 0x85812fc9  ! 2525: WRCCR_I	wr	%r4, 0x0fc9, %ccr
dvapa_8_569:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xf0d, %r20
	mov 0x1f, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x708, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfdc40  ! 2529: STDA_R	stda	%r16, [%r31 + %r0] 0xe2
splash_cmpr_8_571:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 2533: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x8d902a91  ! 2537: WRPR_PSTATE_I	wrpr	%r0, 0x0a91, %pstate
iaw_8_573:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_573:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_573
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_573:
    brnz %r16, iaw_wait8_573
    ld [%r23], %r16
    ba iaw_startwait8_573
    mov 0x8, %r16
continue_iaw_8_573:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_573:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_573
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_573:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_573
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_573:
	mov 0x38, %r18
iaw3_8_573:
	setx vahole_target0, %r20, %r19
	or %r19, 0x1, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0x501, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fdf00  ! 2541: LDDFA_R	ldda	[%r31, %r0], %f0
dvapa_8_574:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc4b, %r20
	mov 0x8, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf82, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f80222b  ! 2545: SIR	sir	0x022b
mondo_8_575:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r12, [%r0+0x3c0] %asi
    stxa %r7, [%r0+0x3d0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d948005  ! 2549: WRPR_WSTATE_R	wrpr	%r18, %r5, %wstate
demap_8_576:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r18, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	wrhpr %g0, 0xdd1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe171  ! 2553: LDD_I	ldd	[%r31 + 0x0171], %r9
intveclr_8_577:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xfe8babd5607ebfaa, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x58b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2557: FBPLG	fblg
	.word 0x89800011  ! 2561: WRTICK_R	wr	%r0, %r17, %tick
	.word 0x9f8021f0  ! 2565: SIR	sir	0x01f0
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_581:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_581-donret_8_581+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0063f400 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x10df, %htstate
	best_set_reg(0x6ea, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	.word 0x16800001  ! 1: BGE	bge  	<label_0x1>
	done
.align 2048
donretarg_8_581:
	.word 0x819833d5  ! 2569: WRHPR_HPSTATE_I	wrhpr	%r0, 0x13d5, %hpstate
memptr_8_582:
	set user_data_start, %r31
	.word 0x8584bfe6  ! 2573: WRCCR_I	wr	%r18, 0x1fe6, %ccr
splash_tba_8_583:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2577: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_8_584:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r5, [%r0+0x3e0] %asi
    stxa %r5, [%r0+0x3c0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d928011  ! 2581: WRPR_WSTATE_R	wrpr	%r10, %r17, %wstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_585:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_585-donret_8_585+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f32c00 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1cde, %htstate
	wrhpr %g0, 0x319, %hpstate  !  rand=1 (8)
	ldx [%r11+%r0], %g1
	done
donretarg_8_585:
	.word 0x91a409d2  ! 2585: FDIVd	fdivd	%f16, %f18, %f8
    set 0x7fa, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0xa5b347d3  ! 2589: PDIST	pdistn	%d44, %d50, %d18
frzptr_8_586:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x24cfc001  ! 1: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xc19fc2c0  ! 2593: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0xe1e7dc40  ! 1: CASA_I	casa	[%r31] 0xe2, %r0, %r16
	.word 0xe03fe020  ! 1: STD_I	std	%r16, [%r31 + 0x0020]
	mov 0x32, %r30
	.word 0x91d0001e  ! 2597: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x81580000  ! 2601: FLUSHW	flushw
fpinit_8_588:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91b00484  ! 2605: FCMPLE32	fcmple32	%d0, %d4, %r8
	.word 0x87802083  ! 2609: WRASI_I	wr	%r0, 0x0083, %asi
splash_cmpr_8_590:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2613: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe8800b40  ! 2617: LDUWA_R	lduwa	[%r0, %r0] 0x5a, %r20
dvapa_8_591:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8a7, %r20
	mov 0x12, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x19, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe080  ! 2621: LDD_I	ldd	[%r31 + 0x0080], %r9
trapasi_8_592:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4c) 
	.word 0xe6d84980  ! 2625: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r19
mondo_8_593:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r7, [%r0+0x3e0] %asi
    stxa %r10, [%r0+0x3d8] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d914005  ! 2629: WRPR_WSTATE_R	wrpr	%r5, %r5, %wstate
splash_cmpr_8_594:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2633: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xa0d10002  ! 2637: UMULcc_R	umulcc 	%r4, %r2, %r16
	.word 0x9bb340eb  ! 2641: EDGE16LN	edge16ln	%r13, %r11, %r13
ibp_8_596:
	nop
	nop
	.word 0x20800001  ! 2645: BN	bn,a	<label_0x1>
jmptr_8_598:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2649: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_8_599:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xe1bfda00  ! 2653: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_600:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_600-donret_8_600+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b8e000 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x5f, %htstate
	best_set_reg(0x8cb, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_8_600:
	.word 0xda6fe1a9  ! 2657: LDSTUB_I	ldstub	%r13, [%r31 + 0x01a9]
demap_8_601:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r8, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xda, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe04f  ! 2661: LDD_I	ldd	[%r31 + 0x004f], %r8
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_8_602:
	ta	T_CHANGE_NONPRIV	! macro
demap_8_603:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r19, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x12, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe024  ! 2669: LDD_I	ldd	[%r31 + 0x0024], %r18
	.word 0xc1bfe100  ! 2673: STDFA_I	stda	%f0, [0x0100, %r31]
	.word 0x8d802000  ! 2677: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0x93a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f40
	.word 0x9f80390c  ! 2681: SIR	sir	0x190c
br_badelay1_8_604:
	.word 0x95a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f10
	.word 0xe7343ef0  ! 1: STQF_I	-	%f19, [0x1ef0, %r16]
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	normalw
	.word 0x9b458000  ! 2685: RD_SOFTINT_REG	rd	%softint, %r13
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_8_606:
	ta	T_CHANGE_NONPRIV	! macro
	.word 0x8d802000  ! 2693: WRFPRS_I	wr	%r0, 0x0000, %fprs
frzptr_8_607:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xd63fe1b0  ! 1: STD_I	std	%r11, [%r31 + 0x01b0]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2697: BN	bn,a	<label_0x1>
intveclr_8_608:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x2760aa3efe520c0c, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xdc3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2701: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	fbue skip_8_609
	brgz,pt  	%r1, skip_8_609
.align 2048
skip_8_609:
	.word 0x19400001  ! 2705: FBPUGE	fbuge
pmu_8_610:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffae, %g1, %g7
	.word 0xa3800007  ! 2709: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_lsu_8_612:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x7398b9cb, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x04cc8001  ! 1: BRLEZ	brlez,pt  	%r18,<label_0xc8001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2713: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
pmu_8_613:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb7ffffffa5, %g1, %g7
	.word 0xa3800007  ! 2717: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_8_614:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x97e, %r20
	mov 0xa, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x289, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd8dfc380  ! 2721: LDXA_R	ldxa	[%r31, %r0] 0x1c, %r12
	.word 0x81580000  ! 2725: FLUSHW	flushw
jmptr_8_616:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 2729: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_8_617:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbdffffffa0, %g1, %g7
	.word 0xa3800007  ! 2733: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_hpstate_8_618:
	ta T_CHANGE_NONHPRIV
	.word 0x2ac90001  ! 1: BRNZ	brnz,a,pt	%r4,<label_0x90001>
	.word 0x819833de  ! 2737: WRHPR_HPSTATE_I	wrhpr	%r0, 0x13de, %hpstate
	.word 0x91d02035  ! 2741: Tcc_I	ta	icc_or_xcc, %r0 + 53
splash_cmpr_8_619:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2745: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
iaw_8_620:
	nop
	nop
	ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x8, %r16
iaw_startwait8_620:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_iaw_8_620
    mov (~0x8&0xf), %r16
    ld [%r23], %r16
iaw_wait8_620:
    brnz %r16, iaw_wait8_620
    ld [%r23], %r16
    ba iaw_startwait8_620
    mov 0x8, %r16
continue_iaw_8_620:
    sllx %r16, %r8,  %r16       !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_8_620:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_8_620
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_iaw_8_620:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_iaw_8_620
    ldxa [0x50]%asi, %r14       !Running_rw
iaw_doit8_620:
	mov 0x38, %r18
iaw2_8_620:
	rdpr %tba, %r19
	mov 0x11,  %r20
	sllx %r20, 5, %r20
	add %r20, %r19, %r19
	stxa %r19, [%r18]0x50
    stxa  %r16, [0x60] %asi     ! Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          ! restore %asi
	wrhpr %g0, 0xc9, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87a88a49  ! 2749: FCMPd	fcmpd	%fcc<n>, %f2, %f40
ibp_8_621:
	nop
	nop
	.word 0xa7b447d2  ! 2753: PDIST	pdistn	%d48, %d18, %d50
memptr_8_622:
	set 0x60740000, %r31
	.word 0x8580e91f  ! 2757: WRCCR_I	wr	%r3, 0x091f, %ccr
	.word 0xa1902001  ! 2761: WRPR_GL_I	wrpr	%r0, 0x0001, %-
	.word 0x97b400f3  ! 2765: EDGE16LN	edge16ln	%r16, %r19, %r11
	.word 0x87802055  ! 2769: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0x34, %r30
	.word 0x91d0001e  ! 2773: Tcc_R	ta	icc_or_xcc, %r0 + %r30
trapasi_8_624:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xd4d84e40  ! 2777: LDXA_R	ldxa	[%r1, %r0] 0x72, %r10
	.word 0xe0cfd060  ! 2781: LDSBA_R	ldsba	[%r31, %r0] 0x83, %r16
fpinit_8_625:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2785: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0xe4cfc2c0  ! 2789: LDSBA_R	ldsba	[%r31, %r0] 0x16, %r18
	.word 0xe28fc400  ! 2793: LDUBA_R	lduba	[%r31, %r0] 0x20, %r17
	.word 0x89800011  ! 2797: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xe19fdf00  ! 2801: LDDFA_R	ldda	[%r31, %r0], %f16
fpinit_8_627:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009c4  ! 2805: FDIVd	fdivd	%f0, %f4, %f6
	.word 0x89800011  ! 2809: WRTICK_R	wr	%r0, %r17, %tick
tagged_8_630:
	tsubcctv %r2, 0x1e4f, %r19
	.word 0xd607e08c  ! 2813: LDUW_I	lduw	[%r31 + 0x008c], %r11
	.word 0x91a50d27  ! 2817: FsMULd	fsmuld	%f20, %f38, %f8
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_632:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_632-donret_8_632), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00e58800 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xa8f, %htstate
	best_set_reg(0x6fb, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (8)
	ldx [%r12+%r0], %g1
	retry
donretarg_8_632:
	.word 0x22800001  ! 2821: BE	be,a	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_8_633:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_8_633-donret_8_633+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00621d00 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x3dc, %htstate
	wrhpr %g0, 0xb10, %hpstate  !  rand=1 (8)
	done
donretarg_8_633:
	.word 0xe0ffc400  ! 2825: SWAPA_R	swapa	%r16, [%r31 + %r0] 0x20
	.word 0xe6bfc400  ! 2829: STDA_R	stda	%r19, [%r31 + %r0] 0x20
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xd9e7c540  ! 1: CASA_I	casa	[%r31] 0x2a, %r0, %r12
	mov 0xb0, %r30
	.word 0x93d0001e  ! 2833: Tcc_R	tne	icc_or_xcc, %r0 + %r30
mondo_8_634:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3d8] %asi
    stxa %r16, [%r0+0x3d0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d90c013  ! 2837: WRPR_WSTATE_R	wrpr	%r3, %r19, %wstate
pmu_8_635:
	nop
	nop
	setx 0xffffffbaffffffa7, %g1, %g7
	.word 0xa3800007  ! 2841: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
trapasi_8_636:
	nop
	mov 0x30, %r1 	! (VA for ASI 0x5a) 
	.word 0xdad84b40  ! 2845: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r13
	.word 0xe2800bc0  ! 2849: LDUWA_R	lduwa	[%r0, %r0] 0x5e, %r17
trapasi_8_637:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x48) 
	.word 0xe4d84900  ! 2853: LDXA_R	ldxa	[%r1, %r0] 0x48, %r18
	.word 0x90d1000a  ! 2857: UMULcc_R	umulcc 	%r4, %r10, %r8
br_longdelay2_8_639:
	.word 0x04cc0001  ! 1: BRLEZ	brlez,pt  	%r16,<label_0xc0001>
	.word 0x24cfc001  ! 2861: BRLEZ	brlez,a,pt	%r31,<label_0xfc001>
mondo_8_641:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3d8] %asi
    stxa %r19, [%r0+0x3c8] %asi
	.word 0x8780208b  ! 1: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0x9d910012  ! 2865: WRPR_WSTATE_R	wrpr	%r4, %r18, %wstate
frzptr_8_642:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0xe1bfdf20  ! 2869: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9f8021b0  ! 2873: SIR	sir	0x01b0
frzptr_8_645:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xda6fe1d0  ! 1: LDSTUB_I	ldstub	%r13, [%r31 + 0x01d0]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe19fda60  ! 2877: LDDFA_R	ldda	[%r31, %r0], %f16
change_to_randtl_8_646:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_8_646:
	.word 0x8f902001  ! 2881: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
frzptr_8_647:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xc32fe0d0  ! 1: STXFSR_I	st-sfr	%f1, [0x00d0, %r31]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2885: BN	bn,a	<label_0x1>
splash_lsu_8_648:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x2a9b7786, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2889: FBPULE	fbule
memptr_8_649:
	set 0x60740000, %r31
	.word 0x8581344f  ! 2893: WRCCR_I	wr	%r4, 0x144f, %ccr
intveclr_8_650:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xab9ffd0e46d605e0, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2897: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_8_652:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r1, [%r0+0x3c0] %asi
    stxa %r19, [%r0+0x3e8] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d950013  ! 2901: WRPR_WSTATE_R	wrpr	%r20, %r19, %wstate
memptr_8_653:
	set 0x60540000, %r31
	.word 0x8584789b  ! 2905: WRCCR_I	wr	%r17, 0x189b, %ccr
intveclr_8_654:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xa4950be902fdc698, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xd83, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2909: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_8_656:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3c0] %asi
    stxa %r9, [%r0+0x3c8] %asi
	.word 0x87802080  ! 1: WRASI_I	wr	%r0, 0x0080, %asi
	.word 0x9d948010  ! 2913: WRPR_WSTATE_R	wrpr	%r18, %r16, %wstate
	.word 0xe11fe030  ! 1: LDDF_I	ldd	[%r31, 0x0030], %f16
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	mov 0xb2, %r30
	.word 0x91d0001e  ! 2917: Tcc_R	ta	icc_or_xcc, %r0 + %r30
intveclr_8_657:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x73dd373cb9871c45, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2921: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
tagged_8_658:
	tsubcctv %r3, 0x110d, %r10
	.word 0xe207e1a8  ! 2925: LDUW_I	lduw	[%r31 + 0x01a8], %r17
splash_lsu_8_659:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x630904fd, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x33400001  ! 1: FBPE	fbe,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 2929: FBPULE	fbule
	.word 0x8d802000  ! 2933: WRFPRS_I	wr	%r0, 0x0000, %fprs
ibp_8_661:
	nop
	nop
	.word 0xe31fe120  ! 2937: LDDF_I	ldd	[%r31, 0x0120], %f17
	.word 0xe68008a0  ! 2941: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
frzptr_8_663:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 2945: BN	bn  	<label_0x1>
	.word 0xd41fc000  ! 2949: LDD_R	ldd	[%r31 + %r0], %r10
	fbl,a,pn	%fcc0,  skip_8_665
	bcc,a	 skip_8_665
.align 4096
skip_8_665:
	.word 0x91a0c9d2  ! 2953: FDIVd	fdivd	%f34, %f18, %f8
cwp_8_666:
    set user_data_start, %o7
	.word 0x93902003  ! 2957: WRPR_CWP_I	wrpr	%r0, 0x0003, %cwp
splash_tba_8_667:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2961: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_8_669:
	set user_data_start, %r31
	.word 0x85837e59  ! 2965: WRCCR_I	wr	%r13, 0x1e59, %ccr
	wrhpr %g0, 0x4cb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2969: MEMBAR	membar	#LoadLoad | #Lookaside 
mondo_8_671:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3d8] %asi
    stxa %r12, [%r0+0x3d0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d94c008  ! 2973: WRPR_WSTATE_R	wrpr	%r19, %r8, %wstate
splash_cmpr_8_672:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 2977: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
intveclr_8_673:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x3ff8987a6eb34192, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x411, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2981: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x8d903d31  ! 2985: WRPR_PSTATE_I	wrpr	%r0, 0x1d31, %pstate
	.word 0xd28008a0  ! 2989: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r9
	.word 0xe8800ae0  ! 2993: LDUWA_R	lduwa	[%r0, %r0] 0x57, %r20
	.word 0xe6dfc200  ! 1: LDXA_R	ldxa	[%r31, %r0] 0x10, %r19
	.word 0x9f803569  ! 2997: SIR	sir	0x1569
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_3:
    wrhpr %g0, 0xda, %hpstate  ! ta T_CHANGE_NONHPRIV 
br_longdelay2_4_0:
	.word 0x24cc8001  ! 1: BRLEZ	brlez,a,pt	%r18,<label_0xc8001>
vahole4_4_1:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x9f8026dd  ! 1: SIR	sir	0x06dd
	.word 0xd83fc000  ! 5: STD_R	std	%r12, [%r31 + %r0]
mondo_4_2:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r11, [%r0+0x3c0] %asi
    stxa %r17, [%r0+0x3e0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d948011  ! 9: WRPR_WSTATE_R	wrpr	%r18, %r17, %wstate
splash_cmpr_4_4:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 13: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
fpinit_4_5:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x89a009a4  ! 17: FDIVs	fdivs	%f0, %f4, %f4
splash_lsu_4_6:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x60666f27, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 21: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_4_7:
	ta	T_CHANGE_NONPRIV	! macro
splash_hpstate_4_8:
	.word 0x24800001  ! 1: BLE	ble,a	<label_0x1>
	.word 0x81983614  ! 29: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1614, %hpstate
	.word 0x24800001  ! 33: BLE	ble,a	<label_0x1>
	.word 0x87802039  ! 37: WRASI_I	wr	%r0, 0x0039, %asi
splash_htba_4_9:
	nop
	ta T_CHANGE_HPRIV
	best_set_reg(HV_TRAP_BASE_PA, %r11,%r12)
	.word 0x8b98000c  ! 41: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa0fd0012  ! 45: SDIVcc_R	sdivcc 	%r20, %r18, %r16
memptr_4_12:
	set user_data_start, %r31
	.word 0x8582a82d  ! 49: WRCCR_I	wr	%r10, 0x082d, %ccr
	.word 0x9f802563  ! 53: SIR	sir	0x0563
intveclr_4_13:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x2b5a11f3dfffde61, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 57: FBPLG	fblg
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_14) + 8, 16, 16)) -> intp(7,0,30,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_14)&0xffffffff) + 48, 16, 16)) -> intp(3,0,16,,,,,1)
#else
	set 0x5d30f2b1, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_14:
	.word 0x9f80273d  ! 61: SIR	sir	0x073d
	.word 0xd6c7df00  ! 65: LDSWA_R	ldswa	[%r31, %r0] 0xf8, %r11
	.word 0xe8c7df00  ! 69: LDSWA_R	ldswa	[%r31, %r0] 0xf8, %r20
intveclr_4_15:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x82aac348a59f3e02, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 73: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
fpinit_4_16:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009a4  ! 77: FDIVs	fdivs	%f0, %f4, %f8
	.word 0x93a00541  ! 81: FSQRTd	fsqrt	
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_17:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_17-donret_4_17), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0078c900 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x14c7, %htstate
	wrhpr %g0, 0xe1a, %hpstate  !  rand=1 (4)
	done
donretarg_4_17:
	.word 0xd8ffc400  ! 85: SWAPA_R	swapa	%r12, [%r31 + %r0] 0x20
splash_cmpr_4_18:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 89: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_4_19:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd4d84940  ! 93: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r10
	.word 0x95702160  ! 1: POPC_I	popc	0x0160, %r10
	.word 0xd43fe1c0  ! 1: STD_I	std	%r10, [%r31 + 0x01c0]
	mov 0x30, %r30
	.word 0x91d0001e  ! 97: Tcc_R	ta	icc_or_xcc, %r0 + %r30
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_20) + 40, 16, 16)) -> intp(2,0,19,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_20)&0xffffffff) + 56, 16, 16)) -> intp(6,0,27,,,,,1)
#else
	set 0x19e0dccb, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_20:
	.word 0x39400001  ! 101: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
mondo_4_21:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r10, [%r0+0x3e0] %asi
    stxa %r16, [%r0+0x3d0] %asi
	.word 0x8780208b  ! 1: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0x9d920010  ! 105: WRPR_WSTATE_R	wrpr	%r8, %r16, %wstate
brcommon3_4_22:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd3e7d920  ! 1: CASA_I	casa	[%r31] 0xc9, %r0, %r9
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 109: BN	bn,a	<label_0x1>
dvapa_4_23:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd0a, %r20
	mov 0x5, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xfd2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfda00  ! 113: STDFA_R	stda	%f0, [%r0, %r31]
splash_cmpr_4_24:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 117: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_4_25:
	.word 0x29400001  ! 1: FBPL	fbl,a,pn	%fcc0, <label_0x1>
	.word 0x81983cc6  ! 121: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1cc6, %hpstate
splash_tba_4_26:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 125: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_4_27:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3e0] %asi
    stxa %r16, [%r0+0x3d8] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d928002  ! 129: WRPR_WSTATE_R	wrpr	%r10, %r2, %wstate
	.word 0x8d802004  ! 133: WRFPRS_I	wr	%r0, 0x0004, %fprs
splash_tba_4_29:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000000003a0000, %r11, %r12
	.word 0x8b90000c  ! 137: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_30:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_30-donret_4_30), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00105500 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f06, %htstate
	wrhpr %g0, 0xed3, %hpstate  !  rand=1 (4)
	retry
donretarg_4_30:
	.word 0x8d902c07  ! 141: WRPR_PSTATE_I	wrpr	%r0, 0x0c07, %pstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_31:
	.word 0x95a249d1  ! 145: FDIVd	fdivd	%f40, %f48, %f10
	.word 0x94840012  ! 149: ADDcc_R	addcc 	%r16, %r18, %r10
	.word 0xa7850011  ! 153: WR_GRAPHICS_STATUS_REG_R	wr	%r20, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x95a4c9cb  ! 1: FDIVd	fdivd	%f50, %f42, %f10
intvec_4_33:
	.word 0x39400001  ! 157: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	fbuge skip_4_34
	bneg  	 skip_4_34
.align 512
skip_4_34:
	.word 0x04cc4001  ! 161: BRLEZ	brlez,pt  	%r17,<label_0xc4001>
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_35:
	.word 0xa1b484c7  ! 165: FCMPNE32	fcmpne32	%d18, %d38, %r16
splash_tba_4_36:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 169: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x91d02032  ! 173: Tcc_I	ta	icc_or_xcc, %r0 + 50
vahole4_4_38:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0x819836ad  ! 177: WRHPR_HPSTATE_I	wrhpr	%r0, 0x16ad, %hpstate
ibp_4_39:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_39:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_39
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_39:
    brnz %r16, ibp_wait4_39
    ld [%r23], %r16
    ba ibp_startwait4_39
    mov 0x4, %r16
continue_ibp_4_39:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_39:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_39
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_39:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_39
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_39:
    best_set_reg(0x00000050cbc00150,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe19fdb20  ! 181: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x9f802b75  ! 185: SIR	sir	0x0b75
	.word 0xa668b776  ! 189: UDIVX_I	udivx 	%r2, 0xfffff776, %r19
intveclr_4_40:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xd5fe9580cf2f998c, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x950, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 193: FBPLG	fblg
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_42) + 16, 16, 16)) -> intp(2,0,12,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_42)&0xffffffff) + 24, 16, 16)) -> intp(7,0,23,,,,,1)
#else
	set 0x8bb02199, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_42:
	.word 0x9f8035be  ! 197: SIR	sir	0x15be
intveclr_4_43:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x59a61c033e2d917a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 201: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_tba_4_44:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 205: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_4_45:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x4313a356, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x21400001  ! 1: FBPN	fbn,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 209: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xe19fdf20  ! 213: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x89800011  ! 217: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd0cfc400  ! 221: LDSBA_R	ldsba	[%r31, %r0] 0x20, %r8
splash_cmpr_4_48:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 225: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_4_49:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_49:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_49
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_49:
    brnz %r16, ibp_wait4_49
    ld [%r23], %r16
    ba ibp_startwait4_49
    mov 0x4, %r16
continue_ibp_4_49:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_49:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_49
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_49:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_49
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_49:
    best_set_reg(0x00000040d5c15043,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xc1bfc3e0  ! 229: STDFA_R	stda	%f0, [%r0, %r31]
dvapa_4_50:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xbbb, %r20
	mov 0x11, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x1c1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd91fe100  ! 233: LDDF_I	ldd	[%r31, 0x0100], %f12
	.word 0x99b507d1  ! 237: PDIST	pdistn	%d20, %d48, %d12
	.word 0x9f802435  ! 241: SIR	sir	0x0435
memptr_4_52:
	set 0x60140000, %r31
	.word 0x85816e3d  ! 245: WRCCR_I	wr	%r5, 0x0e3d, %ccr
splash_cmpr_4_53:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 249: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
br_badelay1_4_55:
	.word 0x37400001  ! 1: FBPGE	fbge,a,pn	%fcc0, <label_0x1>
	.word 0x93a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f40
	.word 0x25400001  ! 1: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	normalw
	.word 0xa9458000  ! 253: RD_SOFTINT_REG	rd	%softint, %r20
	ble,a	 skip_4_56
	brnz,pt  	%r16, skip_4_56
.align 4096
skip_4_56:
	.word 0x19400001  ! 257: FBPUGE	fbuge
	.word 0x9f803604  ! 261: SIR	sir	0x1604
pmu_4_57:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffa1, %g1, %g7
	.word 0xa3800007  ! 265: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_4_58:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d944010  ! 269: WRPR_WSTATE_R	wrpr	%r17, %r16, %wstate
	.word 0xdbe7c280  ! 273: CASA_I	casa	[%r31] 0x14, %r0, %r13
	.word 0x87802014  ! 277: WRASI_I	wr	%r0, 0x0014, %asi
trapasi_4_60:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xd0d84920  ! 281: LDXA_R	ldxa	[%r1, %r0] 0x49, %r8
memptr_4_61:
	set 0x60340000, %r31
	.word 0x8584b84d  ! 285: WRCCR_I	wr	%r18, 0x184d, %ccr
	.word 0x2c800001  ! 1: BNEG	bneg,a	<label_0x1>
	.word 0x8d903831  ! 289: WRPR_PSTATE_I	wrpr	%r0, 0x1831, %pstate
demap_4_63:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2ccc8001  ! 1: BRGZ	brgz,a,pt	%r18,<label_0xc8001>
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	wrhpr %g0, 0xe5b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe61fe04d  ! 293: LDD_I	ldd	[%r31 + 0x004d], %r19
	.word 0xc19fe040  ! 297: LDDFA_I	ldda	[%r31, 0x0040], %f0
	.word 0xe28008a0  ! 301: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r17
tglhtw_4_65:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xc9a, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa7b44986  ! 305: BSHUFFLE	fmovc32	%d48, %d6, %d50
pmu_4_66:
	nop
	nop
	setx 0xffffffb0ffffffa9, %g1, %g7
	.word 0xa3800007  ! 309: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_67)+56, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_67)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_67:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_67:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9826079  ! 313: WR_SET_SOFTINT_I	wr	%r9, 0x0079, %set_softint
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_4_68:
	ta	T_CHANGE_NONHPRIV	! macro
	.word 0xda97c180  ! 321: LDUHA_R	lduha	[%r31, %r0] 0x0c, %r13
	.word 0xda800aa0  ! 325: LDUWA_R	lduwa	[%r0, %r0] 0x55, %r13
intveclr_4_71:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x89a43686325f56ee, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 329: FBPLG	fblg
ibp_4_72:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_72:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_72
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_72:
    brnz %r16, ibp_wait4_72
    ld [%r23], %r16
    ba ibp_startwait4_72
    mov 0x4, %r16
continue_ibp_4_72:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_72:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_72
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_72:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_72
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_72:
    best_set_reg(0x0000004003d04360,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x643, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa5a489c9  ! 333: FDIVd	fdivd	%f18, %f40, %f18
trapasi_4_73:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x74) 
	.word 0xe6d84e80  ! 337: LDXA_R	ldxa	[%r1, %r0] 0x74, %r19
pmu_4_74:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb3ffffffa3, %g1, %g7
	.word 0xa3800007  ! 341: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa3b4c0e7  ! 345: EDGE16LN	edge16ln	%r19, %r7, %r17
dvapa_4_76:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x978, %r20
	mov 0xd, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x409, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfdd40  ! 349: STDA_R	stda	%r16, [%r31 + %r0] 0xea
	.word 0xd41fc000  ! 353: LDD_R	ldd	[%r31 + %r0], %r10
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_78) + 48, 16, 16)) -> intp(4,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_78)&0xffffffff) + 56, 16, 16)) -> intp(5,0,15,,,,,1)
#else
	set 0xe760b8dd, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x19400001  ! 1: FBPUGE	fbuge
intvec_4_78:
	.word 0x19400001  ! 357: FBPUGE	fbuge
trapasi_4_80:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd0d84940  ! 361: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r8
	.word 0x9f8029e0  ! 365: SIR	sir	0x09e0
mondo_4_81:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r20, [%r0+0x3d0] %asi
    stxa %r16, [%r0+0x3c0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d940002  ! 369: WRPR_WSTATE_R	wrpr	%r16, %r2, %wstate
ibp_4_82:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_82:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_82
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_82:
    brnz %r16, ibp_wait4_82
    ld [%r23], %r16
    ba ibp_startwait4_82
    mov 0x4, %r16
continue_ibp_4_82:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_82:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_82
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_82:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_82
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_82:
    best_set_reg(0x000000401bc360a8,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xa9a449d3  ! 373: FDIVd	fdivd	%f48, %f50, %f20
splash_hpstate_4_84:
	ta T_CHANGE_NONHPRIV
	.word 0x81983c0b  ! 377: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1c0b, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_86:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_86-donret_4_86), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0080fb00 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xe96, %htstate
	wrhpr %g0, 0x80, %hpstate  !  rand=1 (4)
	ldx [%r12+%r0], %g1
	retry
donretarg_4_86:
	.word 0xd66fe033  ! 381: LDSTUB_I	ldstub	%r11, [%r31 + 0x0033]
intveclr_4_88:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6c3a7e8ddeaa0928, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x28a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 385: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_4_89:
	set 0x60340000, %r31
	.word 0x8582e35b  ! 389: WRCCR_I	wr	%r11, 0x035b, %ccr
	.word 0x87aaca29  ! 393: FCMPs	fcmps	%fcc<n>, %f11, %f9
	.word 0x97b287d0  ! 397: PDIST	pdistn	%d10, %d16, %d42
	.word 0xc1bfdb20  ! 401: STDFA_R	stda	%f0, [%r0, %r31]
	.word 0x9192c00d  ! 405: WRPR_PIL_R	wrpr	%r11, %r13, %pil
splash_cmpr_4_92:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 409: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
trapasi_4_93:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 413: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_94) + 32, 16, 16)) -> intp(4,0,7,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_94)&0xffffffff) + 24, 16, 16)) -> intp(2,0,5,,,,,1)
#else
	set 0x3f10ff85, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_94:
	.word 0x19400001  ! 417: FBPUGE	fbuge
demap_4_95:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x02cb4001  ! 1: BRZ	brz,pt  	%r13,<label_0xb4001>
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x9a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe008  ! 421: LDD_I	ldd	[%r31 + 0x0008], %r18
pmu_4_96:
	nop
	nop
	setx 0xffffffbcffffffa9, %g1, %g7
	.word 0xa3800007  ! 425: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa3b4c0e7  ! 429: EDGE16LN	edge16ln	%r19, %r7, %r17
intveclr_4_99:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x59004ce1297afd34, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 433: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_100)+40, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_100)&0xffffffff) + 32, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_100:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_100:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9847c3e  ! 437: WR_SET_SOFTINT_I	wr	%r17, 0x1c3e, %set_softint
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_102:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_102-donret_4_102+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ef7400 | (0x58 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x58e, %htstate
	wrhpr %g0, 0xa59, %hpstate  !  rand=1 (4)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_4_102:
	.word 0x3a800001  ! 441: BCC	bcc,a	<label_0x1>
dvapa_4_103:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x9a5, %r20
	mov 0x1f, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x29a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd4dfd140  ! 445: LDXA_R	ldxa	[%r31, %r0] 0x8a, %r10
trapasi_4_104:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x5b) 
	.word 0xe6d84b60  ! 449: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r19
ibp_4_105:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_105:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_105
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_105:
    brnz %r16, ibp_wait4_105
    ld [%r23], %r16
    ba ibp_startwait4_105
    mov 0x4, %r16
continue_ibp_4_105:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_105:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_105
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_105:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_105
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_105:
    best_set_reg(0x0000004023e0a8c7,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xedb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa1a049b2  ! 453: FDIVs	fdivs	%f1, %f18, %f16
splash_hpstate_4_106:
	.word 0x8198354f  ! 457: WRHPR_HPSTATE_I	wrhpr	%r0, 0x154f, %hpstate
dvapa_4_107:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe25, %r20
	mov 0x13, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x7c3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1bfda00  ! 461: STDFA_R	stda	%f16, [%r0, %r31]
mondo_4_108:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3d0] %asi
    stxa %r4, [%r0+0x3d0] %asi
	.word 0x8780201c  ! 1: WRASI_I	wr	%r0, 0x001c, %asi
	.word 0x9d950013  ! 465: WRPR_WSTATE_R	wrpr	%r20, %r19, %wstate
	.word 0x81580000  ! 469: FLUSHW	flushw
	.word 0x9bb500ed  ! 473: EDGE16LN	edge16ln	%r20, %r13, %r13
trapasi_4_110:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x5b) 
	.word 0xe0d84b60  ! 477: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r16
	.word 0xc1bfe100  ! 481: STDFA_I	stda	%f0, [0x0100, %r31]
splash_hpstate_4_111:
	.word 0x8198270f  ! 485: WRHPR_HPSTATE_I	wrhpr	%r0, 0x070f, %hpstate
	.word 0x91944014  ! 489: WRPR_PIL_R	wrpr	%r17, %r20, %pil
demap_4_114:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x12800001  ! 1: BNE	bne  	<label_0x1>
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x591, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe028  ! 493: LDD_I	ldd	[%r31 + 0x0028], %r16
intveclr_4_116:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xdb0536a3c0dc4fa2, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 497: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
demap_4_117:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x17400001  ! 1: FBPGE	fbge
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xd43, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe0a3  ! 501: LDD_I	ldd	[%r31 + 0x00a3], %r8
memptr_4_118:
	set 0x60740000, %r31
	.word 0x8581e3be  ! 505: WRCCR_I	wr	%r7, 0x03be, %ccr
	.word 0xa3524000  ! 509: RDPR_CWP	<illegal instruction>
	.word 0x8d802000  ! 513: WRFPRS_I	wr	%r0, 0x0000, %fprs
	.word 0xd0800c80  ! 517: LDUWA_R	lduwa	[%r0, %r0] 0x64, %r8
change_to_randtl_4_121:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_4_121:
	.word 0x8f902000  ! 521: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
	.word 0xc19fdf00  ! 525: LDDFA_R	ldda	[%r31, %r0], %f0
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_4_123:
	.word 0xa1b104c8  ! 529: FCMPNE32	fcmpne32	%d4, %d8, %r16
splash_cmpr_4_124:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 533: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_4_125:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_125:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_125
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_125:
    brnz %r16, ibp_wait4_125
    ld [%r23], %r16
    ba ibp_startwait4_125
    mov 0x4, %r16
continue_ibp_4_125:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_125:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_125
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_125:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_125
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_125:
    best_set_reg(0x00000050afe8c78e,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe19fdc40  ! 537: LDDFA_R	ldda	[%r31, %r0], %f16
jmptr_4_126:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 541: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xc32fc000  ! 545: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xa0fa8005  ! 549: SDIVcc_R	sdivcc 	%r10, %r5, %r16
intveclr_4_127:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x673d34098cc4ae38, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 553: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_4_128:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb3ffffffab, %g1, %g7
	.word 0xa3800007  ! 557: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_4_129:
	set user_data_start, %r31
	.word 0x8584781f  ! 561: WRCCR_I	wr	%r17, 0x181f, %ccr
	.word 0xe41fe170  ! 565: LDD_I	ldd	[%r31 + 0x0170], %r18
frzptr_4_131:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 569: BN	bn,a	<label_0x1>
dvapa_4_133:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb25, %r20
	mov 0x0, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xb1a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd697c180  ! 573: LDUHA_R	lduha	[%r31, %r0] 0x0c, %r11
dvapa_4_134:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb5a, %r20
	mov 0x17, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xf48, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa1a049b4  ! 577: FDIVs	fdivs	%f1, %f20, %f16
pmu_4_135:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa9, %g1, %g7
	.word 0xa3800007  ! 581: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe45fe1f8  ! 585: LDX_I	ldx	[%r31 + 0x01f8], %r18
	.word 0xe4bfd140  ! 589: STDA_R	stda	%r18, [%r31 + %r0] 0x8a
splash_hpstate_4_137:
	.word 0x23400001  ! 1: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
	.word 0x81982eb5  ! 593: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0eb5, %hpstate
	.word 0x2d400001  ! 1: FBPG	fbg,a,pn	%fcc0, <label_0x1>
	.word 0x8d9022a5  ! 597: WRPR_PSTATE_I	wrpr	%r0, 0x02a5, %pstate
splash_cmpr_4_140:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 601: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
ibp_4_141:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_141:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_141
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_141:
    brnz %r16, ibp_wait4_141
    ld [%r23], %r16
    ba ibp_startwait4_141
    mov 0x4, %r16
continue_ibp_4_141:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_141:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_141
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_141:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_141
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_141:
    best_set_reg(0x00000050e9c78e1c,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x551, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe0c0  ! 605: LDD_I	ldd	[%r31 + 0x00c0], %r20
splash_cmpr_4_142:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 609: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
pmu_4_143:
	nop
	nop
	setx 0xffffffbbffffffa4, %g1, %g7
	.word 0xa3800007  ! 613: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xd09fc540  ! 617: LDDA_R	ldda	[%r31, %r0] 0x2a, %r8
	.word 0x8d802000  ! 621: WRFPRS_I	wr	%r0, 0x0000, %fprs
intveclr_4_145:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x0a0aabef757385fc, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 625: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_4_146:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r7, [%r0+0x3c0] %asi
    stxa %r19, [%r0+0x3d8] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d94c00a  ! 629: WRPR_WSTATE_R	wrpr	%r19, %r10, %wstate
frzptr_4_147:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xc19fdf00  ! 633: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x2f400001  ! 1: FBPU	fbu,a,pn	%fcc0, <label_0x1>
	.word 0x8d9036d6  ! 637: WRPR_PSTATE_I	wrpr	%r0, 0x16d6, %pstate
tagged_4_149:
	taddcctv %r20, 0x1181, %r19
	.word 0xd407e198  ! 641: LDUW_I	lduw	[%r31 + 0x0198], %r10
dvapa_4_151:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x9fd, %r20
	mov 0x15, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x448, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x87aa8a42  ! 645: FCMPd	fcmpd	%fcc<n>, %f10, %f2
	.word 0x97b0cff2  ! 649: FONES	e	%f11
trapasi_4_152:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xd8d84940  ! 653: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r12
trapasi_4_153:
	nop
	mov 0x3e0, %r1 	! (VA for ASI 0x25) 
	.word 0xd8d844a0  ! 657: LDXA_R	ldxa	[%r1, %r0] 0x25, %r12
demap_4_154:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r6, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	wrhpr %g0, 0x648, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe081  ! 661: LDD_I	ldd	[%r31 + 0x0081], %r11
tagged_4_155:
	taddcctv %r19, 0x1fce, %r16
	.word 0xd407e1d8  ! 665: LDUW_I	lduw	[%r31 + 0x01d8], %r10
	.word 0x87802014  ! 669: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0xd697d100  ! 673: LDUHA_R	lduha	[%r31, %r0] 0x88, %r11
    set 0x3063, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x97b247cd  ! 677: PDIST	pdistn	%d40, %d44, %d42
memptr_4_157:
	set 0x60540000, %r31
	.word 0x8581f91e  ! 681: WRCCR_I	wr	%r7, 0x191e, %ccr
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_159:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_159-donret_4_159+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00e68700 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1f87, %htstate
	wrhpr %g0, 0x600, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_159:
	.word 0x3b400001  ! 685: FBPLE	fble,a,pn	%fcc0, <label_0x1>
intveclr_4_160:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x917ae7e7121e3930, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 689: FBPLG	fblg
	.word 0xd3e7c540  ! 693: CASA_I	casa	[%r31] 0x2a, %r0, %r9
	.word 0xe29fc080  ! 697: LDDA_R	ldda	[%r31, %r0] 0x04, %r17
memptr_4_162:
	set user_data_start, %r31
	.word 0x85837b2f  ! 701: WRCCR_I	wr	%r13, 0x1b2f, %ccr
splash_tba_4_164:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 705: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_4_166:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x0c800001  ! 1: BNEG	bneg  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x59, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe138  ! 709: LDD_I	ldd	[%r31 + 0x0138], %r16
vahole2_4_167:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target2, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe19fdb20  ! 713: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xa3b50549  ! 717: FCMPEQ16	fcmpeq16	%d20, %d40, %r17
	.word 0xe84fe138  ! 721: LDSB_I	ldsb	[%r31 + 0x0138], %r20
	.word 0xe87fe170  ! 725: SWAP_I	swap	%r20, [%r31 + 0x0170]
	.word 0xa7a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f19
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0x32, %r30
	.word 0x91d0001e  ! 729: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x81510000  ! 733: RDPR_TICK	rdpr	%tick, %r0
trapasi_4_169:
	nop
	mov 0x18, %r1 	! (VA for ASI 0x50) 
	.word 0xd2d84a00  ! 737: LDXA_R	ldxa	[%r1, %r0] 0x50, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_170) + 32, 16, 16)) -> intp(7,0,4,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_170)&0xffffffff) + 48, 16, 16)) -> intp(4,0,17,,,,,1)
#else
	set 0x434095d8, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_170:
	.word 0x91b504d3  ! 741: FCMPNE32	fcmpne32	%d20, %d50, %r8
demap_4_171:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r17, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x4c8, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd81fe1e0  ! 745: LDD_I	ldd	[%r31 + 0x01e0], %r12
	.word 0xe09fe120  ! 749: LDDA_I	ldda	[%r31, + 0x0120] %asi, %r16
pmu_4_172:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffaf, %g1, %g7
	.word 0xa3800007  ! 753: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_4_173:
	set 0x60540000, %r31
	.word 0x858424a6  ! 757: WRCCR_I	wr	%r16, 0x04a6, %ccr
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_4_174:
	ta	T_CHANGE_NONPRIV	! macro
tagged_4_176:
	tsubcctv %r19, 0x1c22, %r11
	.word 0xe807e020  ! 765: LDUW_I	lduw	[%r31 + 0x0020], %r20
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_4_177:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_4_178:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd70, %r20
	mov 0x13, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x658, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9f802fcf  ! 773: SIR	sir	0x0fcf
pmu_4_180:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa9, %g1, %g7
	.word 0xa3800007  ! 777: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xc19fe180  ! 781: LDDFA_I	ldda	[%r31, 0x0180], %f0
	.word 0x83d020b2  ! 785: Tcc_I	te	icc_or_xcc, %r0 + 178
	.word 0x8d903bd7  ! 789: WRPR_PSTATE_I	wrpr	%r0, 0x1bd7, %pstate
trapasi_4_182:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe2d84940  ! 793: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r17
br_badelay2_4_184:
	.word 0x95a249c1  ! 1: FDIVd	fdivd	%f40, %f32, %f10
	pdist %f20, %f12, %f0
	.word 0x91b1c310  ! 797: ALIGNADDRESS	alignaddr	%r7, %r16, %r8
	.word 0x89800011  ! 801: WRTICK_R	wr	%r0, %r17, %tick
frzptr_4_186:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x95702190  ! 1: POPC_I	popc	0x0190, %r10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe19fc2c0  ! 805: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x8d802004  ! 809: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_4_187:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 813: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
	.word 0xd05fe0a8  ! 817: LDX_I	ldx	[%r31 + 0x00a8], %r8
	.word 0xc19fe060  ! 821: LDDFA_I	ldda	[%r31, 0x0060], %f0
	.word 0x9f8025fc  ! 825: SIR	sir	0x05fc
cwp_4_188:
    set user_data_start, %o7
	.word 0x93902007  ! 829: WRPR_CWP_I	wrpr	%r0, 0x0007, %cwp
	.word 0x8d903a26  ! 833: WRPR_PSTATE_I	wrpr	%r0, 0x1a26, %pstate
change_to_randtl_4_191:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_4_191:
	.word 0x8f902000  ! 837: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
tglhtw_4_192:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xb58, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x99b10990  ! 841: BSHUFFLE	fmovc32	%d4, %d16, %d12
	.word 0xc19fe060  ! 845: LDDFA_I	ldda	[%r31, 0x0060], %f0
	fble skip_4_193
	stxa %r11, [%r0] ASI_LSU_CONTROL
	.word 0xc3687f1f  ! 1: PREFETCH_I	prefetch	[%r1 + 0xffffff1f], #one_read
	stxa %r15, [%r0] ASI_LSU_CONTROL
.align 2048
skip_4_193:
	.word 0xc32fc000  ! 849: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0x94c4eb2c  ! 853: ADDCcc_I	addccc 	%r19, 0x0b2c, %r10
ibp_4_194:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_194:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_194
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_194:
    brnz %r16, ibp_wait4_194
    ld [%r23], %r16
    ba ibp_startwait4_194
    mov 0x4, %r16
continue_ibp_4_194:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_194:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_194
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_194:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_194
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_194:
    best_set_reg(0x00000040c9ce1cfa,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe0dfd000  ! 857: LDXA_R	ldxa	[%r31, %r0] 0x80, %r16
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f802f2b  ! 1: SIR	sir	0x0f2b
intvec_4_195:
	.word 0x9bb4c4c4  ! 861: FCMPNE32	fcmpne32	%d50, %d4, %r13
	.word 0x8d802000  ! 865: WRFPRS_I	wr	%r0, 0x0000, %fprs
	bcs,a	 skip_4_196
	stxa %r19, [%r0] ASI_LSU_CONTROL
	fblg,a,pn	%fcc0,  skip_4_196
	stxa %r10, [%r0] ASI_LSU_CONTROL
.align 512
skip_4_196:
	.word 0xc30fc000  ! 869: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
ceter_4_197:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 7, %r17
    sllx %r17, 60, %r17
    mov 0x18, %r16
    stxa %r17, [%r16]0x4c
	wrhpr %g0, 0x591, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95410000  ! 873: RDTICK	rd	%tick, %r10
	.word 0xd937c000  ! 877: STQF_R	-	%f12, [%r0, %r31]
br_longdelay2_4_198:
	.word 0x2ccd0001  ! 1: BRGZ	brgz,a,pt	%r20,<label_0xd0001>
	.word 0xa5a7c9c0  ! 881: FDIVd	fdivd	%f62, %f0, %f18
dvapa_4_199:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc9d, %r20
	mov 0x15, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x898, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe09fdf20  ! 885: LDDA_R	ldda	[%r31, %r0] 0xf9, %r16
mondo_4_200:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r13, [%r0+0x3e0] %asi
    stxa %r16, [%r0+0x3e0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d92400b  ! 889: WRPR_WSTATE_R	wrpr	%r9, %r11, %wstate
	.word 0xe2cfc2c0  ! 893: LDSBA_R	ldsba	[%r31, %r0] 0x16, %r17
dvapa_4_201:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc48, %r20
	mov 0xe, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x543, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa1703493  ! 897: POPC_I	popc	0x1493, %r16
pmu_4_202:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb8ffffffa9, %g1, %g7
	.word 0xa3800007  ! 901: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe69fc280  ! 1: LDDA_R	ldda	[%r31, %r0] 0x14, %r19
	.word 0xe69fc380  ! 1: LDDA_R	ldda	[%r31, %r0] 0x1c, %r19
	mov 0x31, %r30
	.word 0x91d0001e  ! 905: Tcc_R	ta	icc_or_xcc, %r0 + %r30
fpinit_4_205:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8db00484  ! 909: FCMPLE32	fcmple32	%d0, %d4, %r6
splash_tba_4_206:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 913: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_4_207:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r4, [%r0+0x3c0] %asi
    stxa %r2, [%r0+0x3d0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d944006  ! 917: WRPR_WSTATE_R	wrpr	%r17, %r6, %wstate
	bgu,a	 skip_4_208
	fbuge skip_4_208
.align 512
skip_4_208:
	.word 0x9f8037ee  ! 921: SIR	sir	0x17ee
splash_hpstate_4_209:
	ta T_CHANGE_NONHPRIV
	.word 0x03400001  ! 1: FBPNE	fbne
	.word 0x8198365f  ! 925: WRHPR_HPSTATE_I	wrhpr	%r0, 0x165f, %hpstate
demap_4_210:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x06ccc001  ! 1: BRLZ	brlz,pt  	%r19,<label_0xcc001>
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xd8a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda1fe16a  ! 929: LDD_I	ldd	[%r31 + 0x016a], %r13
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	mov 0x30, %r30
	.word 0x83d0001e  ! 933: Tcc_R	te	icc_or_xcc, %r0 + %r30
splash_cmpr_4_212:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x70, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 937: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x93b1c4d1  ! 1: FCMPNE32	fcmpne32	%d38, %d48, %r9
intvec_4_213:
	.word 0x9f803cd6  ! 941: SIR	sir	0x1cd6
	.word 0x9190a8f8  ! 945: WRPR_PIL_I	wrpr	%r2, 0x08f8, %pil
fpinit_4_214:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009a4  ! 949: FDIVs	fdivs	%f0, %f4, %f8
	.word 0x91924013  ! 953: WRPR_PIL_R	wrpr	%r9, %r19, %pil
	.word 0x986c6358  ! 957: UDIVX_I	udivx 	%r17, 0x0358, %r12
	.word 0x87802055  ! 961: WRASI_I	wr	%r0, 0x0055, %asi
ibp_4_217:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_217:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_217
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_217:
    brnz %r16, ibp_wait4_217
    ld [%r23], %r16
    ba ibp_startwait4_217
    mov 0x4, %r16
continue_ibp_4_217:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_217:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_217
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_217:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_217
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_217:
    best_set_reg(0x00000050c4dcfaa2,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xc3efe120  ! 965: PREFETCHA_I	prefetcha	[%r31, + 0x0120] %asi, #one_read
	.word 0x89800011  ! 969: WRTICK_R	wr	%r0, %r17, %tick
splash_lsu_4_219:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x2378f3a4, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 973: FBPULE	fbule
ibp_4_220:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_220:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_220
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_220:
    brnz %r16, ibp_wait4_220
    ld [%r23], %r16
    ba ibp_startwait4_220
    mov 0x4, %r16
continue_ibp_4_220:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_220:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_220
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_220:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_220
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_220:
    best_set_reg(0x000000408ffaa2b0,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x648, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x00800001  ! 977: BN	bn  	<label_0x1>
ibp_4_222:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_222:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_222
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_222:
    brnz %r16, ibp_wait4_222
    ld [%r23], %r16
    ba ibp_startwait4_222
    mov 0x4, %r16
continue_ibp_4_222:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_222:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_222
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_222:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_222
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_222:
    best_set_reg(0x00000040a3e2b011,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x60b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fdf00  ! 981: LDDFA_R	ldda	[%r31, %r0], %f16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_224:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_224-donret_4_224+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00127400 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1fa5, %htstate
	wrhpr %g0, 0x410, %hpstate  !  rand=1 (4)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_4_224:
	.word 0x8d90285e  ! 985: WRPR_PSTATE_I	wrpr	%r0, 0x085e, %pstate
mondo_4_225:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r1, [%r0+0x3e0] %asi
    stxa %r17, [%r0+0x3c0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d94c011  ! 989: WRPR_WSTATE_R	wrpr	%r19, %r17, %wstate
	.word 0x89800011  ! 993: WRTICK_R	wr	%r0, %r17, %tick
trapasi_4_227:
	nop
	mov 0x20, %r1 	! (VA for ASI 0x5b) 
	.word 0xe4d84b60  ! 997: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r18
	.word 0xc36fe030  ! 1001: PREFETCH_I	prefetch	[%r31 + 0x0030], #one_read
	.word 0x93d02032  ! 1005: Tcc_I	tne	icc_or_xcc, %r0 + 50
	.word 0xe127c000  ! 1009: STF_R	st	%f16, [%r0, %r31]
	.word 0x90da8013  ! 1013: SMULcc_R	smulcc 	%r10, %r19, %r8
change_to_randtl_4_230:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_4_230:
	.word 0x8f902002  ! 1017: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_231:
	.word 0x97b1c4c7  ! 1021: FCMPNE32	fcmpne32	%d38, %d38, %r11
intveclr_4_232:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x1b765d0ca9fb10e3, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1025: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_233:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_233-donret_4_233+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00a8be00 | (0x88 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xb5b, %htstate
	wrhpr %g0, 0x4c1, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_233:
	.word 0xe46fe1f6  ! 1029: LDSTUB_I	ldstub	%r18, [%r31 + 0x01f6]
	.word 0x9f8035c0  ! 1033: SIR	sir	0x15c0
pmu_4_235:
	nop
	nop
	setx 0xffffffb6ffffffa2, %g1, %g7
	.word 0xa3800007  ! 1037: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8143e011  ! 1041: MEMBAR	membar	#LoadLoad | #Lookaside 
brcommon3_4_237:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd9e7dd40  ! 1: CASA_I	casa	[%r31] 0xea, %r0, %r12
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d902c89  ! 1045: WRPR_PSTATE_I	wrpr	%r0, 0x0c89, %pstate
intveclr_4_239:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x214195f3040f1f10, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1049: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_cmpr_4_240:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1053: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe19fda60  ! 1057: LDDFA_R	ldda	[%r31, %r0], %f16
jmptr_4_241:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 1061: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0x97703ccc  ! 1065: POPC_I	popc	0x1ccc, %r11
	.word 0x96fcc012  ! 1069: SDIVcc_R	sdivcc 	%r19, %r18, %r11
br_badelay1_4_242:
	.word 0x3e800001  ! 1: BVC	bvc,a	<label_0x1>
	.word 0xe737e100  ! 1: STQF_I	-	%f19, [0x0100, %r31]
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	normalw
	.word 0xa5458000  ! 1073: RD_SOFTINT_REG	rd	%softint, %r18
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_244)+16, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_244)&0xffffffff) + 40, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_244:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_244:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9847a1c  ! 1077: WR_SET_SOFTINT_I	wr	%r17, 0x1a1c, %set_softint
unsupttte_4_245:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0xf01, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x99a089a4  ! 1081: FDIVs	fdivs	%f2, %f4, %f12
ibp_4_246:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_246:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_246
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_246:
    brnz %r16, ibp_wait4_246
    ld [%r23], %r16
    ba ibp_startwait4_246
    mov 0x4, %r16
continue_ibp_4_246:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_246:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_246
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_246:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_246
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_246:
    best_set_reg(0x0000004083f01188,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x4d3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x9ba449d1  ! 1085: FDIVd	fdivd	%f48, %f48, %f44
fpinit_4_247:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 1089: FCMPd	fcmpd	%fcc<n>, %f0, %f4
pmu_4_248:
	nop
	nop
	setx 0xffffffb3ffffffa2, %g1, %g7
	.word 0xa3800007  ! 1093: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe8800b40  ! 1097: LDUWA_R	lduwa	[%r0, %r0] 0x5a, %r20
	.word 0x91b28590  ! 1101: FCMPGT32	fcmpgt32	%d10, %d16, %r8
	.word 0x91d020b2  ! 1105: Tcc_I	ta	icc_or_xcc, %r0 + 178
	.word 0x997021b0  ! 1: POPC_I	popc	0x01b0, %r12
	.word 0xd9e7dc40  ! 1: CASA_I	casa	[%r31] 0xe2, %r0, %r12
	mov 0xb3, %r30
	.word 0x83d0001e  ! 1109: Tcc_R	te	icc_or_xcc, %r0 + %r30
	.word 0xa5b047c4  ! 1113: PDIST	pdistn	%d32, %d4, %d18
memptr_4_250:
	set 0x60140000, %r31
	.word 0x8584f3fb  ! 1117: WRCCR_I	wr	%r19, 0x13fb, %ccr
	.word 0x8d903203  ! 1121: WRPR_PSTATE_I	wrpr	%r0, 0x1203, %pstate
	.word 0xd45fe1d0  ! 1125: LDX_I	ldx	[%r31 + 0x01d0], %r10
memptr_4_253:
	set 0x60740000, %r31
	.word 0x8580a88c  ! 1129: WRCCR_I	wr	%r2, 0x088c, %ccr
trapasi_4_254:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xe4d84e40  ! 1133: LDXA_R	ldxa	[%r1, %r0] 0x72, %r18
mondo_4_255:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r16, [%r0+0x3d0] %asi
	.word 0x8780204f  ! 1: WRASI_I	wr	%r0, 0x004f, %asi
	.word 0x9d90c001  ! 1137: WRPR_WSTATE_R	wrpr	%r3, %r1, %wstate
	.word 0x96d0c002  ! 1141: UMULcc_R	umulcc 	%r3, %r2, %r11
intveclr_4_256:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9d6ad4963c9a93b1, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x212, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1145: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_4_258:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xdf06b7bdac318bd8, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xa89, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1149: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
splash_hpstate_4_259:
	.word 0x21400001  ! 1: FBPN	fbn,a,pn	%fcc0, <label_0x1>
	.word 0x81983d9d  ! 1153: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1d9d, %hpstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_261:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_261-donret_4_261), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b7b700 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x59f, %htstate
	wrhpr %g0, 0x3c8, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_261:
	.word 0x2f400001  ! 1157: FBPU	fbu,a,pn	%fcc0, <label_0x1>
intveclr_4_262:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5e5a4031087e45e3, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xf02, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1161: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
pmu_4_263:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb0ffffffa6, %g1, %g7
	.word 0xa3800007  ! 1165: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	bleu,a	 skip_4_265
	bn,a	 skip_4_265
.align 512
skip_4_265:
	.word 0x24ca4001  ! 1169: BRLEZ	brlez,a,pt	%r9,<label_0xa4001>
mondo_4_266:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r7, [%r0+0x3d0] %asi
    stxa %r20, [%r0+0x3c0] %asi
	.word 0x87802036  ! 1: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0x9d950013  ! 1173: WRPR_WSTATE_R	wrpr	%r20, %r19, %wstate
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_4_267:
	ta	T_CHANGE_NONPRIV	! macro
dvapa_4_268:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc8c, %r20
	mov 0x1a, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x392, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe01fe190  ! 1181: LDD_I	ldd	[%r31 + 0x0190], %r16
	.word 0x0ccc0001  ! 1: BRGZ	brgz,pt  	%r16,<label_0xc0001>
	.word 0x8d903b93  ! 1185: WRPR_PSTATE_I	wrpr	%r0, 0x1b93, %pstate
pmu_4_270:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb6ffffffa2, %g1, %g7
	.word 0xa3800007  ! 1189: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
pmu_4_271:
	nop
	nop
	setx 0xffffffb5ffffffa7, %g1, %g7
	.word 0xa3800007  ! 1193: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
mondo_4_272:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r18, [%r0+0x3d0] %asi
    stxa %r19, [%r0+0x3d0] %asi
	.word 0x87802020  ! 1: WRASI_I	wr	%r0, 0x0020, %asi
	.word 0x9d92000a  ! 1197: WRPR_WSTATE_R	wrpr	%r8, %r10, %wstate
memptr_4_273:
	set user_data_start, %r31
	.word 0x8580fb23  ! 1201: WRCCR_I	wr	%r3, 0x1b23, %ccr
intveclr_4_274:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xc532b6a18be2974e, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1205: FBPLG	fblg
trapasi_4_275:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe4d84920  ! 1209: LDXA_R	ldxa	[%r1, %r0] 0x49, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_276:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_276-donret_4_276+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00c27400 | (0x83 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x9ed, %htstate
	wrhpr %g0, 0x79b, %hpstate  !  rand=1 (4)
	retry
donretarg_4_276:
	.word 0x95a449d1  ! 1213: FDIVd	fdivd	%f48, %f48, %f10
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_278) + 0, 16, 16)) -> intp(5,0,2,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_278)&0xffffffff) + 8, 16, 16)) -> intp(7,0,0,,,,,1)
#else
	set 0xa4b00dce, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_278:
	.word 0x19400001  ! 1217: FBPUGE	fbuge
	bneg  	 skip_4_279
	stxa %r15, [%r0] ASI_LSU_CONTROL
	bn  	 skip_4_279
	stxa %r8, [%r0] ASI_LSU_CONTROL
.align 2048
skip_4_279:
	.word 0xd7e7c400  ! 1221: CASA_I	casa	[%r31] 0x20, %r0, %r11
splash_hpstate_4_280:
	.word 0x81983fd6  ! 1225: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1fd6, %hpstate
splash_cmpr_4_281:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 1229: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x89800011  ! 1233: WRTICK_R	wr	%r0, %r17, %tick
brcommon2_4_283:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x9ba7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f44
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0x00800001  ! 1237: BN	bn  	<label_0x1>
jmptr_4_284:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1241: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_4_285:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 1245: BN	bn  	<label_0x1>
change_to_randtl_4_286:
	ta	T_CHANGE_HPRIV	! macro
done_change_to_randtl_4_286:
	.word 0x8f902002  ! 1249: WRPR_TL_I	wrpr	%r0, 0x0002, %tl
memptr_4_287:
	set 0x60540000, %r31
	.word 0x85843b79  ! 1253: WRCCR_I	wr	%r16, 0x1b79, %ccr
ibp_4_288:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_288:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_288
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_288:
    brnz %r16, ibp_wait4_288
    ld [%r23], %r16
    ba ibp_startwait4_288
    mov 0x4, %r16
continue_ibp_4_288:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_288:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_288
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_288:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_288
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_288:
    best_set_reg(0x00000050c3d188a2,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x91a209cd  ! 1257: FDIVd	fdivd	%f8, %f44, %f8
splash_htba_4_289:
	nop
	ta T_CHANGE_HPRIV
	setx 0x00000000002a0000, %r11, %r12
	.word 0x8b98000c  ! 1261: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
memptr_4_290:
	set 0x60740000, %r31
	.word 0x8582a02d  ! 1265: WRCCR_I	wr	%r10, 0x002d, %ccr
brcommon2_4_291:
    nop
    nop
    setx common_target, %r12, %r27
    ba,a .+12
	.word 0x81dfc000  ! 1: FLUSH_R	flush 	%r31, %r0, %r0
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0xa1b7c7c0  ! 1269: PDIST	pdistn	%d62, %d0, %d16
	.word 0x9f803e7c  ! 1273: SIR	sir	0x1e7c
pmu_4_293:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb7ffffffab, %g1, %g7
	.word 0xa3800007  ! 1277: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_4_294:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa5c, %r20
	mov 0xb, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x582, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe23fe1e0  ! 1281: STD_I	std	%r17, [%r31 + 0x01e0]
	.word 0xe1bfe180  ! 1285: STDFA_I	stda	%f16, [0x0180, %r31]
memptr_4_295:
	set 0x60340000, %r31
	.word 0x8581a392  ! 1289: WRCCR_I	wr	%r6, 0x0392, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_296) + 8, 16, 16)) -> intp(0,0,23,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_296)&0xffffffff) + 40, 16, 16)) -> intp(1,0,26,,,,,1)
#else
	set 0x3230484a, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_296:
	.word 0x93a489d0  ! 1293: FDIVd	fdivd	%f18, %f16, %f40
mondo_4_297:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3e8] %asi
    stxa %r12, [%r0+0x3d0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d908013  ! 1297: WRPR_WSTATE_R	wrpr	%r2, %r19, %wstate
splash_cmpr_4_298:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	.word 0xb3800011  ! 1301: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
jmptr_4_299:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 1305: JMPL_R	jmpl	%r27 + %r0, %r27
	.word 0xe0dfc3c0  ! 1309: LDXA_R	ldxa	[%r31, %r0] 0x1e, %r16
intveclr_4_301:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x76e225b2d66d63ce, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x683, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1313: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_302:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_302-donret_4_302), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00c03900 | (28 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1d17, %htstate
	best_set_reg(0x4e8, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	.word 0x0cca4001  ! 1: BRGZ	brgz,pt  	%r9,<label_0xa4001>
	ldx [%r12+%r0], %g1
	retry
donretarg_4_302:
	.word 0x8d903497  ! 1317: WRPR_PSTATE_I	wrpr	%r0, 0x1497, %pstate
	.word 0x87802055  ! 1321: WRASI_I	wr	%r0, 0x0055, %asi
dvapa_4_303:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd41, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x1d0, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd13fe120  ! 1325: STDF_I	std	%f8, [0x0120, %r31]
splash_hpstate_4_304:
	ta T_CHANGE_NONHPRIV
	.word 0x22cc8001  ! 1: BRZ	brz,a,pt	%r18,<label_0xc8001>
	.word 0x81982cc5  ! 1329: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0cc5, %hpstate
mondo_4_305:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r6, [%r0+0x3e8] %asi
    stxa %r20, [%r0+0x3c0] %asi
	.word 0x87802083  ! 1: WRASI_I	wr	%r0, 0x0083, %asi
	.word 0x9d944007  ! 1333: WRPR_WSTATE_R	wrpr	%r17, %r7, %wstate
demap_4_306:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2ecd0001  ! 1: BRGEZ	brgez,a,pt	%r20,<label_0xd0001>
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x18b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe0f0  ! 1337: LDD_I	ldd	[%r31 + 0x00f0], %r10
splash_hpstate_4_308:
	.word 0x28800001  ! 1: BLEU	bleu,a	<label_0x1>
	.word 0x81983da6  ! 1341: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1da6, %hpstate
cwp_4_309:
    set user_data_start, %o7
	.word 0x93902006  ! 1345: WRPR_CWP_I	wrpr	%r0, 0x0006, %cwp
	.word 0xa1902004  ! 1349: WRPR_GL_I	wrpr	%r0, 0x0004, %-
	.word 0x9f802b63  ! 1353: SIR	sir	0x0b63
vahole2_4_310:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target1, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe19fc3e0  ! 1357: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xe68008a0  ! 1361: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r19
	.word 0x924c000d  ! 1365: MULX_R	mulx 	%r16, %r13, %r9
trapasi_4_312:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x5b) 
	.word 0xd2d84b60  ! 1369: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r9
	.word 0x8d802004  ! 1373: WRFPRS_I	wr	%r0, 0x0004, %fprs
splash_tba_4_314:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000400380000, %r11, %r12
	.word 0x8b90000c  ! 1377: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 1381: WRTICK_R	wr	%r0, %r17, %tick
pmu_4_316:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbeffffffa6, %g1, %g7
	.word 0xa3800007  ! 1385: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1389: WRTICK_R	wr	%r0, %r17, %tick
	.word 0x8143e011  ! 1393: MEMBAR	membar	#LoadLoad | #Lookaside 
splash_cmpr_4_319:
    mov 1, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xb3800011  ! 1397: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
splash_hpstate_4_321:
	ta T_CHANGE_NONHPRIV
	.word 0x819838dd  ! 1401: WRHPR_HPSTATE_I	wrhpr	%r0, 0x18dd, %hpstate
dvapa_4_322:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x9d1, %r20
	mov 0x9, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe09, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xa3a289c9  ! 1405: FDIVd	fdivd	%f10, %f40, %f48
tglhtw_4_323:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xa02, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x93b34994  ! 1409: BSHUFFLE	fmovc32	%d44, %d20, %d40
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_324) + 24, 16, 16)) -> intp(0,0,31,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_324)&0xffffffff) + 0, 16, 16)) -> intp(5,0,10,,,,,1)
#else
	set 0xfc508df2, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x9f802a20  ! 1: SIR	sir	0x0a20
intvec_4_324:
	.word 0x9f80343a  ! 1413: SIR	sir	0x143a
demap_4_325:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x04800001  ! 1: BLE	ble  	<label_0x1>
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x24a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe10e  ! 1417: LDD_I	ldd	[%r31 + 0x010e], %r9
tagged_4_326:
	tsubcctv %r18, 0x1961, %r19
	.word 0xda07e166  ! 1421: LDUW_I	lduw	[%r31 + 0x0166], %r13
	.word 0xa0820014  ! 1425: ADDcc_R	addcc 	%r8, %r20, %r16
splash_cmpr_4_327:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 1429: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe31fc000  ! 1433: LDDF_R	ldd	[%r31, %r0], %f17
	.word 0x83d02034  ! 1437: Tcc_I	te	icc_or_xcc, %r0 + 52
memptr_4_328:
	set 0x60340000, %r31
	.word 0x85847320  ! 1441: WRCCR_I	wr	%r17, 0x1320, %ccr
brcommon3_4_329:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe06fe100  ! 1: LDSTUB_I	ldstub	%r16, [%r31 + 0x0100]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x8d903145  ! 1445: WRPR_PSTATE_I	wrpr	%r0, 0x1145, %pstate
tglhtw_4_330:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0x80, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x97b0c993  ! 1449: BSHUFFLE	fmovc32	%d34, %d50, %d42
trapasi_4_332:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 1453: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_4_333:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xd6013269, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x28800001  ! 1: BLEU	bleu,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 1457: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
unsupttte_4_334:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x54        ! I unsupported page size ..
    wrhpr %g0, 0x69b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x91a4c9d3  ! 1461: FDIVd	fdivd	%f50, %f50, %f8
	.word 0xd137e030  ! 1465: STQF_I	-	%f8, [0x0030, %r31]
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_335:
	.word 0x9f803ee5  ! 1469: SIR	sir	0x1ee5
    set 0x248, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x99b487d0  ! 1473: PDIST	pdistn	%d18, %d16, %d12
intveclr_4_336:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9d1dd5e2f833f8e2, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x28a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1477: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x87802004  ! 1481: WRASI_I	wr	%r0, 0x0004, %asi
memptr_4_338:
	set 0x60140000, %r31
	.word 0x8584e785  ! 1485: WRCCR_I	wr	%r19, 0x0785, %ccr
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_339)+8, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_339)&0xffffffff) + 48, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_339:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_339:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa984e2ea  ! 1489: WR_SET_SOFTINT_I	wr	%r19, 0x02ea, %set_softint
	.word 0x8143e011  ! 1493: MEMBAR	membar	#LoadLoad | #Lookaside 
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_341:
	.word 0x39400001  ! 1497: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
dvapa_4_342:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x949, %r20
	mov 0x10, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x41, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd03fe010  ! 1501: STD_I	std	%r8, [%r31 + 0x0010]
	.word 0x96a94011  ! 1505: ANDNcc_R	andncc 	%r5, %r17, %r11
	.word 0x29800001  ! 1509: FBL	fbl,a	<label_0x1>
br_badelay1_4_344:
	.word 0xe3e7c6c0  ! 1: CASA_I	casa	[%r31] 0x36, %r0, %r17
	.word 0xd3318008  ! 1: STQF_R	-	%f9, [%r8, %r6]
	.word 0x26c8c001  ! 1: BRLZ	brlz,a,pt	%r3,<label_0x8c001>
	normalw
	.word 0x9b458000  ! 1513: RD_SOFTINT_REG	rd	%softint, %r13
ibp_4_346:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_346:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_346
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_346:
    brnz %r16, ibp_wait4_346
    ld [%r23], %r16
    ba ibp_startwait4_346
    mov 0x4, %r16
continue_ibp_4_346:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_346:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_346
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_346:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_346
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_346:
    best_set_reg(0x000000403ac8a2c6,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe1bfc3e0  ! 1517: STDFA_R	stda	%f16, [%r0, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_347:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_347-donret_4_347+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00ac5200 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x5ed, %htstate
	wrhpr %g0, 0x2, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_347:
	.word 0x8198260f  ! 1521: WRHPR_HPSTATE_I	wrhpr	%r0, 0x060f, %hpstate
	fbug,a,pn	%fcc0,  skip_4_348
	bne  	 skip_4_348
.align 4096
skip_4_348:
	.word 0x9f80270e  ! 1525: SIR	sir	0x070e
	.word 0xe87fe0b0  ! 1529: SWAP_I	swap	%r20, [%r31 + 0x00b0]
brcommon1_4_349:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-4], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xa7702060  ! 1: POPC_I	popc	0x0060, %r19
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0x9b7036d4  ! 1533: POPC_I	popc	0x16d4, %r13
	.word 0x8d903643  ! 1537: WRPR_PSTATE_I	wrpr	%r0, 0x1643, %pstate
pmu_4_351:
	nop
	nop
	setx 0xffffffbcffffffab, %g1, %g7
	.word 0xa3800007  ! 1541: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x89800011  ! 1545: WRTICK_R	wr	%r0, %r17, %tick
trapasi_4_354:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x5b) 
	.word 0xdad84b60  ! 1549: LDXA_R	ldxa	[%r1, %r0] 0x5b, %r13
splash_tba_4_355:
	nop
	ta T_CHANGE_PRIV
	setx 0x00000004003a0000, %r11, %r12
	.word 0x8b90000c  ! 1553: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_356:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_356-donret_4_356+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x005bab00 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x881, %htstate
	wrhpr %g0, 0xd59, %hpstate  !  rand=1 (4)
	retry
donretarg_4_356:
	.word 0x9ba349c9  ! 1557: FDIVd	fdivd	%f44, %f40, %f44
pmu_4_357:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb6ffffffaa, %g1, %g7
	.word 0xa3800007  ! 1561: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x8d902bd2  ! 1565: WRPR_PSTATE_I	wrpr	%r0, 0x0bd2, %pstate
ibp_4_359:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_359:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_359
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_359:
    brnz %r16, ibp_wait4_359
    ld [%r23], %r16
    ba ibp_startwait4_359
    mov 0x4, %r16
continue_ibp_4_359:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_359:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_359
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_359:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_359
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_359:
    best_set_reg(0x0000005039e2c630,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x5d3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x20800001  ! 1569: BN	bn,a	<label_0x1>
	.word 0x977028ad  ! 1573: POPC_I	popc	0x08ad, %r11
	bne  	 skip_4_361
	fbu,a,pn	%fcc0,  skip_4_361
.align 2048
skip_4_361:
	.word 0x87acca50  ! 1577: FCMPd	fcmpd	%fcc<n>, %f50, %f16
	.word 0x8143e011  ! 1581: MEMBAR	membar	#LoadLoad | #Lookaside 
trapasi_4_363:
	nop
	mov 0x38, %r1 	! (VA for ASI 0x5a) 
	.word 0xd6d84b40  ! 1585: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r11
mondo_4_364:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3e0] %asi
    stxa %r8, [%r0+0x3e0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d92c014  ! 1589: WRPR_WSTATE_R	wrpr	%r11, %r20, %wstate
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa1a509cc  ! 1: FDIVd	fdivd	%f20, %f12, %f16
intvec_4_365:
	.word 0x9ba489c9  ! 1593: FDIVd	fdivd	%f18, %f40, %f44
fpinit_4_366:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 1597: FCMPd	fcmpd	%fcc<n>, %f0, %f4
brcommon1_4_367:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe3e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r17
    ba,a .+8
    jmpl %r27-0, %r27
	.word 0xa3a509a5  ! 1601: FDIVs	fdivs	%f20, %f5, %f17
mondo_4_368:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r13, [%r0+0x3c0] %asi
    stxa %r18, [%r0+0x3e0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d940012  ! 1605: WRPR_WSTATE_R	wrpr	%r16, %r18, %wstate
memptr_4_369:
	set user_data_start, %r31
	.word 0x858125c4  ! 1609: WRCCR_I	wr	%r4, 0x05c4, %ccr
intveclr_4_370:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x92987519c6915a91, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1613: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
memptr_4_371:
	set 0x60140000, %r31
	.word 0x8582af22  ! 1617: WRCCR_I	wr	%r10, 0x0f22, %ccr
splash_lsu_4_372:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x3a4f9e6c, %r2
	mov 0x6, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x0ecc0001  ! 1: BRGEZ	brgez,pt  	%r16,<label_0xc0001>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 1621: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8780208a  ! 1625: WRASI_I	wr	%r0, 0x008a, %asi
	.word 0xe19fdf00  ! 1629: LDDFA_R	ldda	[%r31, %r0], %f16
trapasi_4_374:
	nop
	mov 0x110, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1633: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0xd8dfc3c0  ! 1637: LDXA_R	ldxa	[%r31, %r0] 0x1e, %r12
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_376) + 56, 16, 16)) -> intp(7,0,1,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_376)&0xffffffff) + 48, 16, 16)) -> intp(7,0,25,,,,,1)
#else
	set 0xb1f0630f, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_376:
	.word 0x39400001  ! 1641: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	.word 0x8d802004  ! 1645: WRFPRS_I	wr	%r0, 0x0004, %fprs
	.word 0x8d802004  ! 1649: WRFPRS_I	wr	%r0, 0x0004, %fprs
mondo_4_377:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r17, [%r0+0x3e8] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d934006  ! 1653: WRPR_WSTATE_R	wrpr	%r13, %r6, %wstate
ibp_4_378:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_378:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_378
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_378:
    brnz %r16, ibp_wait4_378
    ld [%r23], %r16
    ba ibp_startwait4_378
    mov 0x4, %r16
continue_ibp_4_378:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_378:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_378
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_378:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_378
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_378:
    best_set_reg(0x000000403ec630c3,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x30b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc1bfda00  ! 1657: STDFA_R	stda	%f0, [%r0, %r31]
intveclr_4_379:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7f568e441644c82d, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1661: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
ibp_4_380:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_380:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_380
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_380:
    brnz %r16, ibp_wait4_380
    ld [%r23], %r16
    ba ibp_startwait4_380
    mov 0x4, %r16
continue_ibp_4_380:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_380:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_380
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_380:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_380
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_380:
    best_set_reg(0x000000409df0c3c4,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xc32fe160  ! 1665: STXFSR_I	st-sfr	%f1, [0x0160, %r31]
	.word 0xc1bfdd40  ! 1669: STDFA_R	stda	%f0, [%r0, %r31]
br_badelay2_4_382:
	.word 0x20800001  ! 1: BN	bn,a	<label_0x1>
	pdist %f10, %f16, %f8
	.word 0xa3b08303  ! 1673: ALIGNADDRESS	alignaddr	%r2, %r3, %r17
pmu_4_383:
	nop
	nop
	setx 0xffffffbaffffffa5, %g1, %g7
	.word 0xa3800007  ! 1677: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_384:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_384-donret_4_384+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00bccb00 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x717, %htstate
	best_set_reg(0x19, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	retry
donretarg_4_384:
	.word 0x81983f41  ! 1681: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1f41, %hpstate
mondo_4_385:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r6, [%r0+0x3e0] %asi
	.word 0x87802039  ! 1: WRASI_I	wr	%r0, 0x0039, %asi
	.word 0x9d904013  ! 1685: WRPR_WSTATE_R	wrpr	%r1, %r19, %wstate
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_386) + 48, 16, 16)) -> intp(4,0,22,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_386)&0xffffffff) + 56, 16, 16)) -> intp(0,0,10,,,,,1)
#else
	set 0x1b50098b, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_386:
	.word 0xa3a089c6  ! 1689: FDIVd	fdivd	%f2, %f6, %f48
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_387:
	.word 0xa1b244c2  ! 1693: FCMPNE32	fcmpne32	%d40, %d2, %r16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_388:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_388-donret_4_388), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0030fb00 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x655, %htstate
	wrhpr %g0, 0x18a, %hpstate  !  rand=1 (4)
	.word 0x0d400001  ! 1: FBPG	fbg
	ldx [%r12+%r0], %g1
	retry
donretarg_4_388:
	.word 0xa3a189d4  ! 1697: FDIVd	fdivd	%f6, %f20, %f48
trapasi_4_389:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe0d84940  ! 1701: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r16
	.word 0x8d802004  ! 1705: WRFPRS_I	wr	%r0, 0x0004, %fprs
trapasi_4_391:
	nop
	mov 0x3f8, %r1 	! (VA for ASI 0x25) 
	.word 0xe4d844a0  ! 1709: LDXA_R	ldxa	[%r1, %r0] 0x25, %r18
intveclr_4_392:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x018e4954b480eb2b, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1713: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_4_393:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xfae, %r20
	mov 0x1e, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xe82, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fdf00  ! 1717: LDDA_R	ldda	[%r31, %r0] 0xf8, %r0
vahole3_4_394:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target0, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xd9e7e000  ! 1721: CASA_R	casa	[%r31] %asi, %r0, %r12
	.word 0x36780001  ! 1725: BPGE	<illegal instruction>
	.word 0xa1902001  ! 1729: WRPR_GL_I	wrpr	%r0, 0x0001, %-
frzptr_4_395:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0xc19fde00  ! 1733: LDDFA_R	ldda	[%r31, %r0], %f0
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_397)+0, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_397)&0xffffffff) + 16, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_397:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_397:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa981e352  ! 1737: WR_SET_SOFTINT_I	wr	%r7, 0x0352, %set_softint
ibp_4_398:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_398:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_398
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_398:
    brnz %r16, ibp_wait4_398
    ld [%r23], %r16
    ba ibp_startwait4_398
    mov 0x4, %r16
continue_ibp_4_398:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_398:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_398
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_398:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_398
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_398:
    best_set_reg(0x000000403bc3c447,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xc32fe120  ! 1741: STXFSR_I	st-sfr	%f1, [0x0120, %r31]
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_399:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_399-donret_4_399+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x002e0300 | (32 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xc1d, %htstate
	wrhpr %g0, 0x780, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_4_399:
	.word 0xa9a349ca  ! 1745: FDIVd	fdivd	%f44, %f10, %f20
	.word 0xe19fe1e0  ! 1749: LDDFA_I	ldda	[%r31, 0x01e0], %f16
	.word 0xe6cfd060  ! 1753: LDSBA_R	ldsba	[%r31, %r0] 0x83, %r19
	.word 0xe44fe0a8  ! 1757: LDSB_I	ldsb	[%r31 + 0x00a8], %r18
splash_tba_4_401:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1761: WRPR_TBA_R	wrpr	%r0, %r12, %tba
demap_4_403:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r18, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0xd83, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe18b  ! 1765: LDD_I	ldd	[%r31 + 0x018b], %r20
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_405:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_405-donret_4_405), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00f77000 | (0x89 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1157, %htstate
	best_set_reg(0x5c1, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	done
.align 2048
donretarg_4_405:
	.word 0xa7a049c7  ! 1769: FDIVd	fdivd	%f32, %f38, %f50
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_406) + 24, 16, 16)) -> intp(5,0,17,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_406)&0xffffffff) + 16, 16, 16)) -> intp(6,0,27,,,,,1)
#else
	set 0xcb408b63, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0xa7a449c4  ! 1: FDIVd	fdivd	%f48, %f4, %f50
intvec_4_406:
	.word 0x9f802d69  ! 1773: SIR	sir	0x0d69
ibp_4_407:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_407:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_407
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_407:
    brnz %r16, ibp_wait4_407
    ld [%r23], %r16
    ba ibp_startwait4_407
    mov 0x4, %r16
continue_ibp_4_407:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_407:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_407
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_407:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_407
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_407:
    best_set_reg(0x0000004015c4475e,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0xf4b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd09fdd40  ! 1777: LDDA_R	ldda	[%r31, %r0] 0xea, %r8
unsupttte_4_409:
    nop
    nop
    ta T_CHANGE_HPRIV
    mov 1, %r20
    sllx %r20, 63, %r20
    or %r20, 2,%r20
    stxa %r20, [%g0]0x5c        ! D unsupported page size ..
    wrhpr %g0, 0xdcb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x97a4c9ad  ! 1781: FDIVs	fdivs	%f19, %f13, %f11
brcommon3_4_411:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xe7e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r19
    ba,a .+8
    jmpl %r27+0, %r27
    stxa %r10, [%r0] ASI_LSU_CONTROL
	.word 0x97aac833  ! 1785: FMOVGE	fmovs	%fcc1, %f19, %f11
	.word 0xc19fda60  ! 1789: LDDFA_R	ldda	[%r31, %r0], %f0
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_414)+32, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_414)&0xffffffff) + 0, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_414:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_414:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa98436ba  ! 1793: WR_SET_SOFTINT_I	wr	%r16, 0x16ba, %set_softint
brcommon3_4_416:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xd5e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r10
    ba,a .+8
    jmpl %r27-4, %r27
	.word 0xd4dfc080  ! 1797: LDXA_R	ldxa	[%r31, %r0] 0x04, %r10
intveclr_4_417:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x6437ca9f6d0ed543, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1801: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
intveclr_4_418:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x7ad0eb7bcefcdbe9, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 1805: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
dvapa_4_419:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe67, %r20
	mov 0x5, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xfd2, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xda97c600  ! 1809: LDUHA_R	lduha	[%r31, %r0] 0x30, %r13
	.word 0x8f902001  ! 1: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
reduce_priv_lvl_4_420:
	ta	T_CHANGE_NONPRIV	! macro
fpinit_4_421:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 1817: FCMPd	fcmpd	%fcc<n>, %f0, %f4
intveclr_4_422:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x97a2f184a06a45a1, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xc3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1821: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	fbu skip_4_423
	stxa %r9, [%r0] ASI_LSU_CONTROL
	bcc  	 skip_4_423
	stxa %r18, [%r0] ASI_LSU_CONTROL
.align 1024
skip_4_423:
	.word 0xc30fc000  ! 1825: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
fpinit_4_424:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009c4  ! 1829: FDIVd	fdivd	%f0, %f4, %f6
memptr_4_425:
	set 0x60740000, %r31
	.word 0x8584ff86  ! 1833: WRCCR_I	wr	%r19, 0x1f86, %ccr
brcommon3_4_426:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e110  ! 1: STQF_I	-	%f13, [0x0110, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 1837: BN	bn,a	<label_0x1>
splash_tba_4_427:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1841: WRPR_TBA_R	wrpr	%r0, %r12, %tba
jmptr_4_428:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 1845: JMPL_R	jmpl	%r27 + %r0, %r27
ibp_4_429:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_429:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_429
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_429:
    brnz %r16, ibp_wait4_429
    ld [%r23], %r16
    ba ibp_startwait4_429
    mov 0x4, %r16
continue_ibp_4_429:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_429:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_429
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_429:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_429
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_429:
    best_set_reg(0x00000050d0c75ebb,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x90, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe897c540  ! 1849: LDUHA_R	lduha	[%r31, %r0] 0x2a, %r20
	.word 0x9f802f77  ! 1853: SIR	sir	0x0f77
dvapa_4_430:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x94a, %r20
	mov 0x11, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x35b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd6bfd060  ! 1857: STDA_R	stda	%r11, [%r31 + %r0] 0x83
trapasi_4_432:
	nop
	mov 0x28, %r1 	! (VA for ASI 0x4c) 
	.word 0xe4d84980  ! 1861: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_434:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_434-donret_4_434+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x000a9100 | (0x8a << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1230, %htstate
	best_set_reg(0x16ab, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	retry
donretarg_4_434:
	.word 0x99a489d1  ! 1865: FDIVd	fdivd	%f18, %f48, %f12
frzptr_4_435:
    nop
    nop
    best_set_reg(0x3cb40000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 1869: BN	bn,a	<label_0x1>
trapasi_4_436:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe6d84920  ! 1873: LDXA_R	ldxa	[%r1, %r0] 0x49, %r19
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0x9f802ebd  ! 1: SIR	sir	0x0ebd
intvec_4_437:
	.word 0x19400001  ! 1877: FBPUGE	fbuge
demap_4_438:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r12, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x591, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd41fe160  ! 1881: LDD_I	ldd	[%r31 + 0x0160], %r10
intveclr_4_439:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x887cc79bc51d3e51, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 1885: FBPLG	fblg
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_441:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_441-donret_4_441), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x001bb200 | (22 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x134d, %htstate
	best_set_reg(0x513, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_441:
	.word 0x8d902517  ! 1889: WRPR_PSTATE_I	wrpr	%r0, 0x0517, %pstate
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_442)+24, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_442)&0xffffffff) + 40, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_442:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_442:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa981a4db  ! 1893: WR_SET_SOFTINT_I	wr	%r6, 0x04db, %set_softint
pmu_4_443:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb7ffffffae, %g1, %g7
	.word 0xa3800007  ! 1897: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x9f803628  ! 1901: SIR	sir	0x1628
	.word 0x02800001  ! 1905: BE	be  	<label_0x1>
	bpos  	 skip_4_444
	.word 0x9f803d47  ! 1: SIR	sir	0x1d47
.align 4096
skip_4_444:
	.word 0x39400001  ! 1909: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_446:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_446-donret_4_446+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00e34700 | (48 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xbc7, %htstate
	best_set_reg(0x661, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_4_446:
	.word 0xe06fe157  ! 1913: LDSTUB_I	ldstub	%r16, [%r31 + 0x0157]
memptr_4_448:
	set 0x60740000, %r31
	.word 0x8581e1f5  ! 1917: WRCCR_I	wr	%r7, 0x01f5, %ccr
	.word 0xe737e068  ! 1921: STQF_I	-	%f19, [0x0068, %r31]
	brgez,pn  	%r7, skip_4_449
	fbg,a,pn	%fcc0,  skip_4_449
.align 4096
skip_4_449:
	.word 0x24cc4001  ! 1925: BRLEZ	brlez,a,pt	%r17,<label_0xc4001>
dvapa_4_450:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xdbc, %r20
	mov 0x3, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x600, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93a449d2  ! 1929: FDIVd	fdivd	%f48, %f18, %f40
	.word 0x93d020b5  ! 1933: Tcc_I	tne	icc_or_xcc, %r0 + 181
intveclr_4_451:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xf4562f473a64ddc3, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x9d1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 1937: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0xe48fc6c0  ! 1941: LDUBA_R	lduba	[%r31, %r0] 0x36, %r18
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_452:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_452-donret_4_452+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00c20900 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x14c7, %htstate
	wrhpr %g0, 0x3c9, %hpstate  !  rand=1 (4)
	retry
donretarg_4_452:
	.word 0x22800001  ! 1945: BE	be,a	<label_0x1>
	.word 0x9f802b16  ! 1949: SIR	sir	0x0b16
	.word 0x87802036  ! 1953: WRASI_I	wr	%r0, 0x0036, %asi
	.word 0xa9b1c543  ! 1957: FCMPEQ16	fcmpeq16	%d38, %d34, %r20
	.word 0xa9b1858a  ! 1961: FCMPGT32	fcmpgt32	%d6, %d10, %r20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
intvec_4_453:
	.word 0x9f802f1f  ! 1965: SIR	sir	0x0f1f
	.word 0x8d802004  ! 1969: WRFPRS_I	wr	%r0, 0x0004, %fprs
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_454) + 40, 16, 16)) -> intp(6,0,20,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_454)&0xffffffff) + 8, 16, 16)) -> intp(4,0,14,,,,,1)
#else
	set 0x72608327, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x9f802278  ! 1: SIR	sir	0x0278
intvec_4_454:
	.word 0x9bb284d2  ! 1973: FCMPNE32	fcmpne32	%d10, %d18, %r13
	.word 0x9f8038de  ! 1977: SIR	sir	0x18de
dvapa_4_455:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xa7a, %r20
	mov 0x14, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xb81, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe1e7e000  ! 1981: CASA_R	casa	[%r31] %asi, %r0, %r16
	.word 0xa9480000  ! 1985: RDHPR_HPSTATE	rdhpr	%hpstate, %r20
	.word 0x91d02033  ! 1989: Tcc_I	ta	icc_or_xcc, %r0 + 51
	.word 0x9f803e45  ! 1993: SIR	sir	0x1e45
splash_tba_4_456:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 1997: WRPR_TBA_R	wrpr	%r0, %r12, %tba
splash_lsu_4_457:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x87df15bc, %r2
	mov 0x1, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2001: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x9f8037ed  ! 2005: SIR	sir	0x17ed
dvapa_4_458:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x998, %r20
	mov 0x14, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x690, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe0bfc2c0  ! 2009: STDA_R	stda	%r16, [%r31 + %r0] 0x16
	wrhpr %g0, 0x152, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2013: MEMBAR	membar	#LoadLoad | #Lookaside 
ibp_4_460:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_460:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_460
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_460:
    brnz %r16, ibp_wait4_460
    ld [%r23], %r16
    ba ibp_startwait4_460
    mov 0x4, %r16
continue_ibp_4_460:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_460:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_460
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_460:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_460
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_460:
    best_set_reg(0x0000004010debb8c,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x401, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe097d160  ! 2017: LDUHA_R	lduha	[%r31, %r0] 0x8b, %r16
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_462:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_462-donret_4_462), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x004a0100 | (0x55 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1d15, %htstate
	best_set_reg(0x693, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	.word 0x35400001  ! 1: FBPUE	fbue,a,pn	%fcc0, <label_0x1>
	ldx [%r12+%r0], %g1
	retry
donretarg_4_462:
	.word 0x2ccc0001  ! 2021: BRGZ	brgz,a,pt	%r16,<label_0xc0001>
#if (defined SPC || defined CMP)
!$EV trig_pc_d(1, expr(@VA(.MAIN.xir_4_463)+48, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.xir_4_463)&0xffffffff) + 56, 16, 16)) -> intp(mask2tid(0x4),1,3,,,,,1)
xir_4_463:
#else
#if (defined FC)
!! Generate XIR via RESET_GEN register
	ta T_CHANGE_HPRIV
	rdpr %pstate, %r18
	andn %r18, 0x208, %r18 ! Reset pstate.am,cle
	wrpr %r18, %pstate
#ifndef XIR_RND_CORES
	ldxa [%g0] 0x63, %o1
	mov 1, %r18
	sllx %r18, %o1, %r18
#endif
	mov 0x30, %r19
	setx 0x8900000808, %r16, %r17
	mov 0x2, %r16
xir_4_463:
	stxa %r18, [%r19] 0x41
	stx %r16, [%r17]
#endif
#endif
	.word 0xa9816f58  ! 2025: WR_SET_SOFTINT_I	wr	%r5, 0x0f58, %set_softint
	.word 0xe0800b80  ! 2029: LDUWA_R	lduwa	[%r0, %r0] 0x5c, %r16
pmu_4_466:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb4ffffffa8, %g1, %g7
	.word 0xa3800007  ! 2033: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
memptr_4_467:
	set 0x60140000, %r31
	.word 0x85843f7e  ! 2037: WRCCR_I	wr	%r16, 0x1f7e, %ccr
splash_hpstate_4_468:
	.word 0x29400001  ! 1: FBPL	fbl,a,pn	%fcc0, <label_0x1>
	.word 0x81982e5f  ! 2041: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0e5f, %hpstate
ibp_4_469:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_469:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_469
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_469:
    brnz %r16, ibp_wait4_469
    ld [%r23], %r16
    ba ibp_startwait4_469
    mov 0x4, %r16
continue_ibp_4_469:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_469:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_469
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_469:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_469
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_469:
    best_set_reg(0x00000040bdfb8c68,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xd73fe140  ! 2045: STDF_I	std	%f11, [0x0140, %r31]
	.word 0xa3508000  ! 2049: RDPR_TSTATE	<illegal instruction>
brcommon3_4_470:
    nop
    nop
    setx common_target, %r12, %r27
    lduw [%r27-0], %r12       ! Load common dest into dcache ..
    ba,a .+12
	.word 0xdb37e0e0  ! 1: STQF_I	-	%f13, [0x00e0, %r31]
    ba,a .+8
    jmpl %r27+0, %r27
	.word 0x20800001  ! 2053: BN	bn,a	<label_0x1>
tglhtw_4_471:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xe40, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0xa5b08989  ! 2057: BSHUFFLE	fmovc32	%d2, %d40, %d18
fpinit_4_472:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x91a009c4  ! 2061: FDIVd	fdivd	%f0, %f4, %f8
mondo_4_473:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r19, [%r0+0x3d0] %asi
    stxa %r8, [%r0+0x3c0] %asi
	.word 0x87802014  ! 1: WRASI_I	wr	%r0, 0x0014, %asi
	.word 0x9d928011  ! 2065: WRPR_WSTATE_R	wrpr	%r10, %r17, %wstate
	.word 0x94ad0012  ! 2069: ANDNcc_R	andncc 	%r20, %r18, %r10
mondo_4_475:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r10, [%r0+0x3e0] %asi
    stxa %r10, [%r0+0x3c0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d924010  ! 2073: WRPR_WSTATE_R	wrpr	%r9, %r16, %wstate
dvapa_4_477:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc98, %r20
	mov 0x13, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x649, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe19fdc00  ! 2077: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0x87802055  ! 2081: WRASI_I	wr	%r0, 0x0055, %asi
dvapa_4_478:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xec4, %r20
	mov 0x1b, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd92, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd83fe170  ! 2085: STD_I	std	%r12, [%r31 + 0x0170]
ibp_4_479:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_479:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_479
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_479:
    brnz %r16, ibp_wait4_479
    ld [%r23], %r16
    ba ibp_startwait4_479
    mov 0x4, %r16
continue_ibp_4_479:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_479:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_479
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_479:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_479
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_479:
    best_set_reg(0x0000004084cc681b,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x9ba309b2  ! 2089: FDIVs	fdivs	%f12, %f18, %f13
	bl  	 skip_4_480
	stxa %r8, [%r0] ASI_LSU_CONTROL
	brlez,a,pn	%r8, skip_4_480
	stxa %r14, [%r0] ASI_LSU_CONTROL
.align 2048
skip_4_480:
	.word 0xc36fe12e  ! 2093: PREFETCH_I	prefetch	[%r31 + 0x012e], #one_read
demap_4_481:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x22ca8001  ! 1: BRZ	brz,a,pt	%r10,<label_0xa8001>
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x69b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd61fe194  ! 2097: LDD_I	ldd	[%r31 + 0x0194], %r11
	.word 0xa1b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r16
	.word 0xc36fe050  ! 1: PREFETCH_I	prefetch	[%r31 + 0x0050], #one_read
	mov 0x32, %r30
	.word 0x91d0001e  ! 2101: Tcc_R	ta	icc_or_xcc, %r0 + %r30
splash_lsu_4_482:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x9d1cc33c, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2105: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
splash_cmpr_4_483:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2109: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x944a4011  ! 2113: MULX_R	mulx 	%r9, %r17, %r10
	.word 0x9194c006  ! 2117: WRPR_PIL_R	wrpr	%r19, %r6, %pil
	.word 0xdb97d100  ! 2121: LDQFA_R	-	[%r31, %r0], %f13
memptr_4_485:
	set 0x60140000, %r31
	.word 0x8580e680  ! 2125: WRCCR_I	wr	%r3, 0x0680, %ccr
splash_lsu_4_487:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x69d1f5bd, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2129: FBPULE	fbule
tglhtw_4_488:
    nop
    nop
    rd %asi, %l3        ! save %asi
    ta T_CHANGE_HPRIV
    wr %g0, ASI_MMU_ZERO_CONTEXT_TSB_CONFIG, %asi
    mov 1, %l2
    sllx %l2, 63, %l2
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_ZERO_CONTEXT_TSB_CONFIG_3] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_0] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_1] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_2] %asi
    ldxa [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi, %l4
    xor %l4, %l2, %l4
    stxa %l4, [ASI_MMU_NONZERO_CONTEXT_TSB_CONFIG_3] %asi
    wrhpr %g0, 0xad3, %hpstate  ! ta T_CHANGE_NONHPRIV
    wr %g0, %l3, %asi   !restore %asi
	.word 0x93b5098b  ! 2133: BSHUFFLE	fmovc32	%d20, %d42, %d40
	.word 0x9f80290d  ! 2137: SIR	sir	0x090d
	.word 0xa5520000  ! 2141: RDPR_PIL	<illegal instruction>
	.word 0xe1bfe180  ! 2145: STDFA_I	stda	%f16, [0x0180, %r31]
splash_cmpr_4_489:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 2149: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe127e0bd  ! 2153: STF_I	st	%f16, [0x00bd, %r31]
splash_cmpr_4_490:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2157: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
vahole6_4_491:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe69fd140  ! 2161: LDDA_R	ldda	[%r31, %r0] 0x8a, %r19
splash_hpstate_4_492:
	.word 0x81982cdb  ! 2165: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0cdb, %hpstate
cwp_4_493:
    set user_data_start, %o7
	.word 0x93902000  ! 2169: WRPR_CWP_I	wrpr	%r0, 0x0000, %cwp
	.word 0xe41fe080  ! 2173: LDD_I	ldd	[%r31 + 0x0080], %r18
splash_tba_4_496:
	nop
	ta T_CHANGE_PRIV
	setx 0x0000000000380000, %r11, %r12
	.word 0x8b90000c  ! 2177: WRPR_TBA_R	wrpr	%r0, %r12, %tba
	.word 0x89800011  ! 2181: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xd08008a0  ! 2185: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r8
splash_lsu_4_499:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x5a13f2a3, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2189: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_500:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_500-donret_4_500), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00945d00 | (4 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1e55, %htstate
	best_set_reg(0x1900, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	retry
donretarg_4_500:
	.word 0xdaffc400  ! 2193: SWAPA_R	swapa	%r13, [%r31 + %r0] 0x20
	rd %tick, %r28
#if (MAX_THREADS == 8)
	sethi %hi(0x33800), %r27
#else
	sethi %hi(0x30000), %r27
#endif
	andn %r28, %r27, %r28
	ta T_CHANGE_HPRIV
	stxa %r28, [%g0] 0x73
	.word 0xa9a049c1  ! 1: FDIVd	fdivd	%f32, %f32, %f20
intvec_4_501:
	.word 0x97a449c9  ! 2197: FDIVd	fdivd	%f48, %f40, %f42
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_502:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_502-donret_4_502), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00486500 | (54 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x756, %htstate
	wrhpr %g0, 0x78a, %hpstate  !  rand=1 (4)
	retry
.align 2048
donretarg_4_502:
	.word 0x8d90344d  ! 2201: WRPR_PSTATE_I	wrpr	%r0, 0x144d, %pstate
	.word 0x89800011  ! 2205: WRTICK_R	wr	%r0, %r17, %tick
memptr_4_504:
	set user_data_start, %r31
	.word 0x8585351c  ! 2209: WRCCR_I	wr	%r20, 0x151c, %ccr
frzptr_4_505:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 2213: BN	bn  	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_507:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_507-donret_4_507), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r12, %r10, %r12 ! low VA tpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00eb0d00 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x5c5, %htstate
	wrhpr %g0, 0xe1a, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
.align 2048
donretarg_4_507:
	.word 0x81983547  ! 2217: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1547, %hpstate
ibp_4_508:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_508:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_508
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_508:
    brnz %r16, ibp_wait4_508
    ld [%r23], %r16
    ba ibp_startwait4_508
    mov 0x4, %r16
continue_ibp_4_508:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_508:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_508
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_508:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_508
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_508:
    best_set_reg(0x000000408ee81b20,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	wrhpr %g0, 0x242, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x95b44492  ! 2221: FCMPLE32	fcmple32	%d48, %d18, %r10
intveclr_4_509:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x35ccb543743eaa9a, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2225: FBPLG	fblg
fpinit_4_510:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2229: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0xb182c00b  ! 2233: WR_STICK_REG_R	wr	%r11, %r11, %-
memptr_4_511:
	set 0x60140000, %r31
	.word 0x85843c4e  ! 2237: WRCCR_I	wr	%r16, 0x1c4e, %ccr
	.word 0x81b01021  ! 2241: SIAM	siam	1
	.word 0x9194c014  ! 2245: WRPR_PIL_R	wrpr	%r19, %r20, %pil
splash_lsu_4_513:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x7c6e9356, %r2
	mov 0x5, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x3c800001  ! 1: BPOS	bpos,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2249: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0xc19fe040  ! 2253: LDDFA_I	ldda	[%r31, 0x0040], %f0
trapasi_4_514:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x49) 
	.word 0xe2d84920  ! 2257: LDXA_R	ldxa	[%r1, %r0] 0x49, %r17
splash_lsu_4_515:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xabc16f57, %r2
	mov 0x4, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x3b400001  ! 1: FBPLE	fble,a,pn	%fcc0, <label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x3d400001  ! 2261: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
	.word 0x8780208b  ! 2265: WRASI_I	wr	%r0, 0x008b, %asi
	.word 0xe84fe1f8  ! 2269: LDSB_I	ldsb	[%r31 + 0x01f8], %r20
pmu_4_517:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb7ffffffaf, %g1, %g7
	.word 0xa3800007  ! 2273: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xe88008a0  ! 2277: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0xc32fc000  ! 2281: STXFSR_R	st-sfr	%f1, [%r0, %r31]
splash_cmpr_4_518:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2285: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	brz,pn  	%r16, skip_4_519
	fbuge skip_4_519
.align 2048
skip_4_519:
	.word 0x19400001  ! 2289: FBPUGE	fbuge
demap_4_520:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r6, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x84a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe092  ! 2293: LDD_I	ldd	[%r31 + 0x0092], %r18
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_522) + 32, 16, 16)) -> intp(4,0,11,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_522)&0xffffffff) + 56, 16, 16)) -> intp(2,0,4,,,,,1)
#else
	set 0xff0b282, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_522:
	.word 0x91a249cb  ! 2297: FDIVd	fdivd	%f40, %f42, %f8
dvapa_4_523:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc40, %r20
	mov 0x17, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x6ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc09fdb40  ! 2301: LDDA_R	ldda	[%r31, %r0] 0xda, %r0
	.word 0x9f802e5e  ! 2305: SIR	sir	0x0e5e
br_longdelay3_4_525:
	nop
	not %g0, %r27
	jmpl %r27+0, %r27
	.word 0x8d90371d  ! 2309: WRPR_PSTATE_I	wrpr	%r0, 0x171d, %pstate
	.word 0xc36fe1a0  ! 2313: PREFETCH_I	prefetch	[%r31 + 0x01a0], #one_read
pmu_4_526:
	nop
	nop
	setx 0xffffffb5ffffffac, %g1, %g7
	.word 0xa3800007  ! 2317: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0xa1902009  ! 2321: WRPR_GL_I	wrpr	%r0, 0x0009, %-
memptr_4_527:
	set 0x60340000, %r31
	.word 0x8585227a  ! 2325: WRCCR_I	wr	%r20, 0x027a, %ccr
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_528) + 16, 16, 16)) -> intp(6,0,22,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_528)&0xffffffff) + 24, 16, 16)) -> intp(0,0,10,,,,,1)
#else
	set 0xd090956b, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
	.word 0x39400001  ! 1: FBPUGE	fbuge,a,pn	%fcc0, <label_0x1>
intvec_4_528:
	.word 0xa7a4c9c4  ! 2329: FDIVd	fdivd	%f50, %f4, %f50
trapasi_4_529:
	nop
	mov 0x8, %r1 	! (VA for ASI 0x4a) 
	.word 0xe6d84940  ! 2333: LDXA_R	ldxa	[%r1, %r0] 0x4a, %r19
demap_4_530:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	.word 0x2f400001  ! 1: FBPU	fbu,a,pn	%fcc0, <label_0x1>
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0xbcb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe81fe1ca  ! 2337: LDD_I	ldd	[%r31 + 0x01ca], %r20
splash_htba_4_531:
	nop
	ta T_CHANGE_HPRIV
	setx 0x0000000200280000, %r11, %r12
	.word 0x8b98000c  ! 2341: WRHPR_HTBA_R	wrhpr	%r0, %r12, %htba
	.word 0xa2c1380f  ! 2345: ADDCcc_I	addccc 	%r4, 0xfffff80f, %r17
	.word 0x99702a83  ! 2349: POPC_I	popc	0x0a83, %r12
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_533:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_533-donret_4_533), %r12
	add %r12, 0x8, %r11 ! nonseq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00aa0100 | (0x8b << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xe41, %htstate
	best_set_reg(0x801, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_533:
	.word 0x81983e9c  ! 2353: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1e9c, %hpstate
ibp_4_534:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_534:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_534
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_534:
    brnz %r16, ibp_wait4_534
    ld [%r23], %r16
    ba ibp_startwait4_534
    mov 0x4, %r16
continue_ibp_4_534:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_534:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_534
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_534:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_534
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_534:
    best_set_reg(0x0000004087db2085,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xe1bfde20  ! 2357: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0x9b50c000  ! 2361: RDPR_TT	<illegal instruction>
mondo_4_535:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r13, [%r0+0x3c8] %asi
    stxa %r19, [%r0+0x3c0] %asi
	.word 0x87802004  ! 1: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0x9d924010  ! 2365: WRPR_WSTATE_R	wrpr	%r9, %r16, %wstate
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_4_536:
	ta	T_CHANGE_NONPRIV	! macro
memptr_4_537:
	set user_data_start, %r31
	.word 0x85832cf3  ! 2373: WRCCR_I	wr	%r12, 0x0cf3, %ccr
	.word 0xda0fc000  ! 2377: LDUB_R	ldub	[%r31 + %r0], %r13
demap_4_539:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r9, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x341, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe1c9  ! 2381: LDD_I	ldd	[%r31 + 0x01c9], %r18
	.word 0xd2c7c280  ! 2385: LDSWA_R	ldswa	[%r31, %r0] 0x14, %r9
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_540) + 0, 16, 16)) -> intp(5,0,6,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_540)&0xffffffff) + 40, 16, 16)) -> intp(5,0,27,,,,,1)
#else
	set 0x7de02432, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_540:
	.word 0xa1b284d3  ! 2389: FCMPNE32	fcmpne32	%d10, %d50, %r16
	.word 0xe08008a0  ! 2393: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r16
jmptr_4_541:
    nop
    nop
    best_set_reg(0xe1200000, %r20, %r27)
	.word 0xb7c6c000  ! 2397: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_4_542:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb5ffffffa1, %g1, %g7
	.word 0xa3800007  ! 2401: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
	.word 0x27400001  ! 1: FBPUL	fbul,a,pn	%fcc0, <label_0x1>
	.word 0x8d903a73  ! 2405: WRPR_PSTATE_I	wrpr	%r0, 0x1a73, %pstate
vahole6_4_545:
    nop
    mov 1, %r27
    sllx %r27, 49, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xe4dfc2c0  ! 2409: LDXA_R	ldxa	[%r31, %r0] 0x16, %r18
splash_cmpr_4_547:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2413: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_548:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_548-donret_4_548+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0005be00 | (57 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x9d, %htstate
	wrhpr %g0, 0x20a, %hpstate  !  rand=1 (4)
	retry
donretarg_4_548:
	.word 0xa5a309d4  ! 2417: FDIVd	fdivd	%f12, %f20, %f18
trapasi_4_549:
	nop
	mov 0x20, %r1 	! (VA for ASI 0x4c) 
	.word 0xd6d84980  ! 2421: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r11
	.word 0x9f803fe0  ! 2425: SIR	sir	0x1fe0
	.word 0x93480000  ! 2429: RDHPR_HPSTATE	rdhpr	%hpstate, %r9
	.word 0xe8d7c720  ! 2433: LDSHA_R	ldsha	[%r31, %r0] 0x39, %r20
mondo_4_550:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3c0] %asi
    stxa %r17, [%r0+0x3d0] %asi
	.word 0x87802030  ! 1: WRASI_I	wr	%r0, 0x0030, %asi
	.word 0x9d920013  ! 2437: WRPR_WSTATE_R	wrpr	%r8, %r19, %wstate
splash_hpstate_4_551:
	ta T_CHANGE_NONHPRIV
	.word 0x23400001  ! 1: FBPNE	fbne,a,pn	%fcc0, <label_0x1>
	.word 0x81982c8f  ! 2441: WRHPR_HPSTATE_I	wrhpr	%r0, 0x0c8f, %hpstate
	.word 0xe2800b40  ! 2445: LDUWA_R	lduwa	[%r0, %r0] 0x5a, %r17
#if (defined SPC || defined CMP1)
!$EV trig_pc_d(1, expr(@VA(.MAIN.intvec_4_552) + 48, 16, 16)) -> intp(7,0,4,,,,,1)
!$EV trig_pc_d(1, expr((@VA(.MAIN.intvec_4_552)&0xffffffff) + 16, 16, 16)) -> intp(6,0,6,,,,,1)
#else
	set 0x9c105801, %r28
#if (MAX_THREADS == 8)
	and %r28, 0x7ff, %r28
#endif
	stxa %r28, [%g0] 0x73
#endif
intvec_4_552:
	.word 0xa7a4c9d3  ! 2449: FDIVd	fdivd	%f50, %f50, %f50
intveclr_4_553:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x081cc89187a6e18e, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2453: FBPLG	fblg
jmptr_4_554:
    nop
    nop
    best_set_reg(0xe1a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2457: JMPL_R	jmpl	%r27 + %r0, %r27
intveclr_4_555:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x52e04ab18261ee90, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2461: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x9b53c000  ! 2465: RDPR_FQ	<illegal instruction>
	.word 0xd61fc000  ! 2469: LDD_R	ldd	[%r31 + %r0], %r11
intveclr_4_556:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xbb491536a24d6307, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x05400001  ! 2473: FBPLG	fblg
	.word 0xd03fc000  ! 2477: STD_R	std	%r8, [%r31 + %r0]
dvapa_4_557:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xc01, %r20
	mov 0x11, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xd5a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93702bbd  ! 2481: POPC_I	popc	0x0bbd, %r9
splash_tba_4_558:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2485: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_4_559:
	set 0x60340000, %r31
	.word 0x85852db0  ! 2489: WRCCR_I	wr	%r20, 0x0db0, %ccr
vahole2_4_560:
    nop
    ta T_CHANGE_NONHPRIV
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	.word 0xe1bfdf20  ! 2493: STDFA_R	stda	%f16, [%r0, %r31]
dvapa_4_561:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xd7b, %r20
	mov 0x6, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x313, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc0bfdc40  ! 2497: STDA_R	stda	%r0, [%r31 + %r0] 0xe2
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_562:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_562-donret_4_562+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x0022c700 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xe9c, %htstate
	wrhpr %g0, 0xcd3, %hpstate  !  rand=1 (4)
	retry
.align 2048
donretarg_4_562:
	.word 0xe66fe1a9  ! 2501: LDSTUB_I	ldstub	%r19, [%r31 + 0x01a9]
	.word 0xe1bfe1e0  ! 2505: STDFA_I	stda	%f16, [0x01e0, %r31]
	.word 0xe6dfc380  ! 2509: LDXA_R	ldxa	[%r31, %r0] 0x1c, %r19
br_badelay3_4_564:
	.word 0x22800001  ! 1: BE	be,a	<label_0x1>
	.word 0xd577974e	! Random illegal ?
	.word 0xd7124013  ! 1: LDQF_R	-	[%r9, %r19], %f11
	.word 0x91a5082a  ! 2513: FADDs	fadds	%f20, %f10, %f8
vahole5_4_566:
    nop
	setx vahole_target3, %r18, %r27
    jmpl %r27+0, %r27
	ta T_CHANGE_HPRIV
	.word 0xa3b50330  ! 2517: BMASK	bmask	%r20, %r16, %r17
frzptr_4_567:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xa3702030  ! 1: POPC_I	popc	0x0030, %r17
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2521: BN	bn,a	<label_0x1>
memptr_4_568:
	set 0x60140000, %r31
	.word 0x8582e18b  ! 2525: WRCCR_I	wr	%r11, 0x018b, %ccr
dvapa_4_569:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0x8f2, %r20
	mov 0x4, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xcc3, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xc19fde20  ! 2529: LDDFA_R	ldda	[%r31, %r0], %f0
splash_cmpr_4_571:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x100, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	.word 0xaf800011  ! 2533: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x8d90343b  ! 2537: WRPR_PSTATE_I	wrpr	%r0, 0x143b, %pstate
	.word 0xe09fdf00  ! 2541: LDDA_R	ldda	[%r31, %r0] 0xf8, %r16
dvapa_4_574:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe42, %r20
	mov 0xf, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x98, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x93b2848a  ! 2545: FCMPLE32	fcmple32	%d10, %d10, %r9
mondo_4_575:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r13, [%r0+0x3e0] %asi
    stxa %r18, [%r0+0x3c8] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d904007  ! 2549: WRPR_WSTATE_R	wrpr	%r1, %r7, %wstate
demap_4_576:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r16, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	wrhpr %g0, 0x940, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd21fe10a  ! 2553: LDD_I	ldd	[%r31 + 0x010a], %r9
intveclr_4_577:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xb021ae90e3c75514, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x60a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2557: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	.word 0x89800011  ! 2561: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xa1a00160  ! 2565: FABSq	dis not found

	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_581:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_581-donret_4_581+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00529600 | (20 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xf87, %htstate
	best_set_reg(0x1d9a, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	.word 0x2a800001  ! 1: BCS	bcs,a	<label_0x1>
	done
.align 2048
donretarg_4_581:
	.word 0x8d903c97  ! 2569: WRPR_PSTATE_I	wrpr	%r0, 0x1c97, %pstate
memptr_4_582:
	set user_data_start, %r31
	.word 0x85847dff  ! 2573: WRCCR_I	wr	%r17, 0x1dff, %ccr
splash_tba_4_583:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2577: WRPR_TBA_R	wrpr	%r0, %r12, %tba
mondo_4_584:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r7, [%r0+0x3e0] %asi
    stxa %r9, [%r0+0x3e0] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d90c00d  ! 2581: WRPR_WSTATE_R	wrpr	%r3, %r13, %wstate
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_585:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_585-donret_4_585+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00b3e800 | (0x8b << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0xf05, %htstate
	wrhpr %g0, 0x610, %hpstate  !  rand=1 (4)
	ldx [%r11+%r0], %g1
	done
donretarg_4_585:
	.word 0xa7a089c7  ! 2585: FDIVd	fdivd	%f2, %f38, %f50
    set 0xc5, %l3
    stxa    %l3, [%g0] ASI_SPARC_PWR_MGMT
	.word 0x95b507d2  ! 2589: PDIST	pdistn	%d20, %d18, %d10
frzptr_4_586:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x95a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f10
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe19fdf00  ! 2593: LDDFA_R	ldda	[%r31, %r0], %f16
	.word 0xc30fc000  ! 1: LDXFSR_R	ld-fsr	[%r31, %r0], %f1
	.word 0xe11fe1a0  ! 1: LDDF_I	ldd	[%r31, 0x01a0], %f16
	mov 0xb5, %r30
	.word 0x91d0001e  ! 2597: Tcc_R	ta	icc_or_xcc, %r0 + %r30
	.word 0x81580000  ! 2601: FLUSHW	flushw
fpinit_4_588:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2605: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x87802020  ! 2609: WRASI_I	wr	%r0, 0x0020, %asi
splash_cmpr_4_590:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x50, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_HPRIV
	wrhpr %r17, %g0, %hsys_tick_cmpr
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2613: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0xe88008a0  ! 2617: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
dvapa_4_591:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xb55, %r20
	mov 0x1d, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0xac1, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd297d060  ! 2621: LDUHA_R	lduha	[%r31, %r0] 0x83, %r9
trapasi_4_592:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x4c) 
	.word 0xe6d84980  ! 2625: LDXA_R	ldxa	[%r1, %r0] 0x4c, %r19
mondo_4_593:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r19, [%r0+0x3c0] %asi
    stxa %r10, [%r0+0x3d0] %asi
	.word 0x87802010  ! 1: WRASI_I	wr	%r0, 0x0010, %asi
	.word 0x9d950006  ! 2629: WRPR_WSTATE_R	wrpr	%r20, %r6, %wstate
splash_cmpr_4_594:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x60, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xaf800011  ! 2633: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x98d18004  ! 2637: UMULcc_R	umulcc 	%r6, %r4, %r12
	.word 0xa7b240f1  ! 2641: EDGE16LN	edge16ln	%r9, %r17, %r19
ibp_4_596:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_596:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_596
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_596:
    brnz %r16, ibp_wait4_596
    ld [%r23], %r16
    ba ibp_startwait4_596
    mov 0x4, %r16
continue_ibp_4_596:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_596:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_596
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_596:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_596
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_596:
    best_set_reg(0x00000050abe08563,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x20800001  ! 2645: BN	bn,a	<label_0x1>
jmptr_4_598:
    nop
    nop
    best_set_reg(0xe0200000, %r20, %r27)
	.word 0xb7c6c000  ! 2649: JMPL_R	jmpl	%r27 + %r0, %r27
frzptr_4_599:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	jmpl %r27, %r27
	.word 0x20800001  ! 2653: BN	bn,a	<label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_600:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_600-donret_4_600+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00169e00 | (0x4f << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1817, %htstate
	best_set_reg(0x18e8, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	ldx [%r12+%r0], %g1
	retry
.align 2048
donretarg_4_600:
	.word 0xda6fe140  ! 2657: LDSTUB_I	ldstub	%r13, [%r31 + 0x0140]
demap_4_601:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r18, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	stxa %g3, [%g3] 0x57
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x57
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	wrhpr %g0, 0x7ca, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd01fe012  ! 2661: LDD_I	ldd	[%r31 + 0x0012], %r8
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_4_602:
	ta	T_CHANGE_NONPRIV	! macro
demap_4_603:
	nop
	mov 0x80, %g3
	ta T_CHANGE_HPRIV
	stxa %r15, [%r0] ASI_LSU_CONTROL
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x5f
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	stxa %g3, [%g3] 0x5f
	stxa %g3, [%g3] 0x5f
	.word 0xbfefc000  ! 1: RESTORE_R	restore	%r31, %r0, %r31
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	stxa %g3, [%g3] 0x57
	.word 0x9d97c000  ! 1: WRPR_WSTATE_R	wrpr	%r31, %r0, %wstate
	.word 0xbfe7c000  ! 1: SAVE_R	save	%r31, %r0, %r31
	wrhpr %g0, 0x611, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xe41fe155  ! 2669: LDD_I	ldd	[%r31 + 0x0155], %r18
	.word 0xe1bfe100  ! 2673: STDFA_I	stda	%f16, [0x0100, %r31]
	.word 0x8d802004  ! 2677: WRFPRS_I	wr	%r0, 0x0004, %fprs
	.word 0x9f803de3  ! 2681: SIR	sir	0x1de3
br_badelay1_4_604:
	.word 0xd43fe060  ! 1: STD_I	std	%r10, [%r31 + 0x0060]
	.word 0xd531e63b  ! 1: STQF_I	-	%f10, [0x063b, %r7]
	.word 0xd5e7c400  ! 1: CASA_I	casa	[%r31] 0x20, %r0, %r10
	normalw
	.word 0x9b458000  ! 2685: RD_SOFTINT_REG	rd	%softint, %r13
	.word 0x8f902000  ! 1: WRPR_TL_I	wrpr	%r0, 0x0000, %tl
reduce_priv_lvl_4_606:
	ta	T_CHANGE_NONPRIV	! macro
	.word 0x8d802004  ! 2693: WRFPRS_I	wr	%r0, 0x0004, %fprs
frzptr_4_607:
    nop
    nop
    best_set_reg(0x3cbc0000+0x1ffc, %r20, %r27)
	ldx [%r27+0xc], %r20
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0xe19fdb20  ! 2697: LDDFA_R	ldda	[%r31, %r0], %f16
intveclr_4_608:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x47645544df594acf, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x51b, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2701: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
	bn  	 skip_4_609
	brgz,a,pt	%r12, skip_4_609
.align 2048
skip_4_609:
	.word 0x95a4c9d3  ! 2705: FDIVd	fdivd	%f50, %f50, %f10
pmu_4_610:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffb3ffffffa2, %g1, %g7
	.word 0xa3800007  ! 2709: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_lsu_4_612:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x278b02ef, %r2
	mov 0x7, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x2a800001  ! 1: BCS	bcs,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x1d400001  ! 2713: FBPULE	fbule
pmu_4_613:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbbffffffa1, %g1, %g7
	.word 0xa3800007  ! 2717: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
dvapa_4_614:
	nop
	nop
	ta T_CHANGE_HPRIV
	mov 0xe3f, %r20
	mov 0x1f, %r19
	sllx %r20, 23, %r20
	or %r19, %r20, %r19
	stxa %r19, [%g0] ASI_LSU_CONTROL
	mov 0x38, %r18
	stxa %r31, [%r18]0x58
	wrhpr %g0, 0x891, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0xd93fe080  ! 2721: STDF_I	std	%f12, [0x0080, %r31]
	.word 0x81580000  ! 2725: FLUSHW	flushw
jmptr_4_616:
    nop
    nop
    best_set_reg(0xe0a00000, %r20, %r27)
	.word 0xb7c6c000  ! 2729: JMPL_R	jmpl	%r27 + %r0, %r27
pmu_4_617:
	nop
	nop
	ta T_CHANGE_PRIV
	setx 0xffffffbaffffffae, %g1, %g7
	.word 0xa3800007  ! 2733: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
splash_hpstate_4_618:
	ta T_CHANGE_NONHPRIV
	.word 0x22800001  ! 1: BE	be,a	<label_0x1>
	.word 0x81983631  ! 2737: WRHPR_HPSTATE_I	wrhpr	%r0, 0x1631, %hpstate
	.word 0x91d02033  ! 2741: Tcc_I	ta	icc_or_xcc, %r0 + 51
splash_cmpr_4_619:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	ta T_CHANGE_PRIV
	.word 0xb3800011  ! 2745: WR_STICK_CMPR_REG_R	wr	%r0, %r17, %-
	.word 0x93a2c9a2  ! 2749: FDIVs	fdivs	%f11, %f2, %f9
ibp_4_621:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_621:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_621
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_621:
    brnz %r16, ibp_wait4_621
    ld [%r23], %r16
    ba ibp_startwait4_621
    mov 0x4, %r16
continue_ibp_4_621:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_621:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_621
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_621:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_621
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_621:
    best_set_reg(0x00000050abc56342,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0x93a249ac  ! 2753: FDIVs	fdivs	%f9, %f12, %f9
memptr_4_622:
	set 0x60740000, %r31
	.word 0x85843175  ! 2757: WRCCR_I	wr	%r16, 0x1175, %ccr
	.word 0xa1902006  ! 2761: WRPR_GL_I	wrpr	%r0, 0x0006, %-
	.word 0xa1b100ec  ! 2765: EDGE16LN	edge16ln	%r4, %r12, %r16
	.word 0x87802004  ! 2769: WRASI_I	wr	%r0, 0x0004, %asi
	.word 0xc32fc000  ! 1: STXFSR_R	st-sfr	%f1, [%r0, %r31]
	.word 0xe9e7dd40  ! 1: CASA_I	casa	[%r31] 0xea, %r0, %r20
	mov 0x32, %r30
	.word 0x91d0001e  ! 2773: Tcc_R	ta	icc_or_xcc, %r0 + %r30
trapasi_4_624:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x72) 
	.word 0xd4d84e40  ! 2777: LDXA_R	ldxa	[%r1, %r0] 0x72, %r10
	.word 0xe0cfd000  ! 2781: LDSBA_R	ldsba	[%r31, %r0] 0x80, %r16
fpinit_4_625:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x8da009a4  ! 2785: FDIVs	fdivs	%f0, %f4, %f6
	.word 0xe4cfdd40  ! 2789: LDSBA_R	ldsba	[%r31, %r0] 0xea, %r18
	.word 0xe28fc720  ! 2793: LDUBA_R	lduba	[%r31, %r0] 0x39, %r17
	.word 0x89800011  ! 2797: WRTICK_R	wr	%r0, %r17, %tick
	.word 0xe19fdb20  ! 2801: LDDFA_R	ldda	[%r31, %r0], %f16
fpinit_4_627:
    nop 
    setx fp_data_quads, %r19, %r20
    ldd [%r20], %f0
    ldd [%r20+8], %f4
    ld  [%r20+16], %fsr
    ld  [%r20+24], %r19
    wr  %r19, %g0, %gsr
	.word 0x87a80a44  ! 2805: FCMPd	fcmpd	%fcc<n>, %f0, %f4
	.word 0x89800011  ! 2809: WRTICK_R	wr	%r0, %r17, %tick
tagged_4_630:
	tsubcctv %r1, 0x1c09, %r11
	.word 0xd607e07a  ! 2813: LDUW_I	lduw	[%r31 + 0x007a], %r11
	.word 0x97a44d30  ! 2817: FsMULd	fsmuld	%f17, %f16, %f42
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_632:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_632-donret_4_632), %r12
	add %r12, 0x4, %r11 ! seq tnpc
	andn %r11, %r10, %r11 ! low VA tnpc
    wrpr %g0, 0x2, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x005c1300 | (0x83 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x1bdd, %htstate
	best_set_reg(0x1cd1, %g1, %g2)
	wrpr %g0, %g2, %pstate  ! rand=0 (4)
	ldx [%r12+%r0], %g1
	retry
donretarg_4_632:
	.word 0x29400001  ! 2821: FBPL	fbl,a,pn	%fcc0, <label_0x1>
	nop
	nop
	ta	T_CHANGE_HPRIV	! macro
donret_4_633:
	rd %pc, %r12
	mov HIGHVA_HIGHNUM, %r10
	sllx %r10, 32, %r10
	or %r12, %r10, %r12
	add %r12, (donretarg_4_633-donret_4_633+4), %r12
	add %r12, 0x4, %r11 ! seq tnpc
    wrpr %g0, 0x1, %tl
    wrpr %g0, %r12, %tpc
    wrpr %g0, %r11, %tnpc
    set (0x00644f00 | (28 << 24)), %r13
    and %r12, 0xfff, %r14
    sllx %r14, 32, %r14
    or %r13, %r14, %r20
    wrpr %r20, %g0, %tstate
    wrhpr %g0, 0x117, %htstate
	wrhpr %g0, 0xd01, %hpstate  !  rand=1 (4)
	done
donretarg_4_633:
	.word 0xe0ffc400  ! 2825: SWAPA_R	swapa	%r16, [%r31 + %r0] 0x20
	.word 0xe6bfc400  ! 2829: STDA_R	stda	%r19, [%r31 + %r0] 0x20
	.word 0xd9e7e000  ! 1: CASA_R	casa	[%r31] %asi, %r0, %r12
	.word 0xd83fe150  ! 1: STD_I	std	%r12, [%r31 + 0x0150]
	mov 0xb2, %r30
	.word 0x91d0001e  ! 2833: Tcc_R	ta	icc_or_xcc, %r0 + %r30
mondo_4_634:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r18, [%r0+0x3e8] %asi
    stxa %r13, [%r0+0x3c0] %asi
	.word 0x87802016  ! 1: WRASI_I	wr	%r0, 0x0016, %asi
	.word 0x9d91400d  ! 2837: WRPR_WSTATE_R	wrpr	%r5, %r13, %wstate
pmu_4_635:
	nop
	nop
	setx 0xffffffbaffffffa2, %g1, %g7
	.word 0xa3800007  ! 2841: WR_PERF_COUNTER_R	wr	%r0, %r7, %-
trapasi_4_636:
	nop
	mov 0x0, %r1 	! (VA for ASI 0x5a) 
	.word 0xdad84b40  ! 2845: LDXA_R	ldxa	[%r1, %r0] 0x5a, %r13
	.word 0xe2800c00  ! 2849: LDUWA_R	lduwa	[%r0, %r0] 0x60, %r17
trapasi_4_637:
	nop
	mov 0x10, %r1 	! (VA for ASI 0x48) 
	.word 0xe4d84900  ! 2853: LDXA_R	ldxa	[%r1, %r0] 0x48, %r18
	.word 0x9ad20006  ! 2857: UMULcc_R	umulcc 	%r8, %r6, %r13
br_longdelay2_4_639:
	.word 0x21400001  ! 1: FBPN	fbn,a,pn	%fcc0, <label_0x1>
	.word 0xd3e7d160  ! 2861: CASA_I	casa	[%r31] 0x8b, %r0, %r9
mondo_4_641:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r6, [%r0+0x3c0] %asi
    stxa %r7, [%r0+0x3c0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d93000c  ! 2865: WRPR_WSTATE_R	wrpr	%r12, %r12, %wstate
frzptr_4_642:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x20800001  ! 2869: BN	bn,a	<label_0x1>
	.word 0xd53fe0e0  ! 2873: STDF_I	std	%f10, [0x00e0, %r31]
frzptr_4_645:
    nop
    nop
    best_set_reg(0x3cb00000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xda6fe090  ! 1: LDSTUB_I	ldstub	%r13, [%r31 + 0x0090]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2877: BN	bn,a	<label_0x1>
change_to_randtl_4_646:
	ta	T_CHANGE_PRIV	! macro
done_change_to_randtl_4_646:
	.word 0x8f902001  ! 2881: WRPR_TL_I	wrpr	%r0, 0x0001, %tl
frzptr_4_647:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	mov %r27, %r26
	jmpl %r27+4, %r27
	.word 0xc32fe0f0  ! 1: STXFSR_I	st-sfr	%f1, [0x00f0, %r31]
	nop
	mov %r26, %r27
	jmpl %r27, %r27
	.word 0x20800001  ! 2885: BN	bn,a	<label_0x1>
splash_lsu_4_648:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0xb5511002, %r2
	mov 0x2, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	stxa %r2, [%r0] ASI_LSU_CONTROL
	.word 0x3d400001  ! 2889: FBPULE	fbule,a,pn	%fcc0, <label_0x1>
memptr_4_649:
	set 0x60140000, %r31
	.word 0x8584a867  ! 2893: WRCCR_I	wr	%r18, 0x0867, %ccr
intveclr_4_650:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0xc5d0512bbc66947e, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2897: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_4_652:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r3, [%r0+0x3e0] %asi
    stxa %r16, [%r0+0x3e0] %asi
	.word 0x87802055  ! 1: WRASI_I	wr	%r0, 0x0055, %asi
	.word 0x9d948014  ! 2901: WRPR_WSTATE_R	wrpr	%r18, %r20, %wstate
memptr_4_653:
	set 0x60140000, %r31
	.word 0x85817df2  ! 2905: WRCCR_I	wr	%r5, 0x1df2, %ccr
intveclr_4_654:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x980cf7032cf4ec48, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0x82, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x25400001  ! 2909: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
mondo_4_656:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
    stxa %r9, [%r0+0x3e0] %asi
    stxa %r2, [%r0+0x3c8] %asi
	.word 0x87802058  ! 1: WRASI_I	wr	%r0, 0x0058, %asi
	.word 0x9d93400b  ! 2913: WRPR_WSTATE_R	wrpr	%r13, %r11, %wstate
	.word 0xe09fd920  ! 1: LDDA_R	ldda	[%r31, %r0] 0xc9, %r16
	.word 0xe1e7c2e0  ! 1: CASA_I	casa	[%r31] 0x17, %r0, %r16
	mov 0xb4, %r30
	.word 0x83d0001e  ! 2917: Tcc_R	te	icc_or_xcc, %r0 + %r30
intveclr_4_657:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x9e16d2d27d12ad27, %r1, %r28
	stxa %r28, [%g0] 0x72
	.word 0x25400001  ! 2921: FBPLG	fblg,a,pn	%fcc0, <label_0x1>
tagged_4_658:
	tsubcctv %r10, 0x12f8, %r19
	.word 0xe207e095  ! 2925: LDUW_I	lduw	[%r31 + 0x0095], %r17
splash_lsu_4_659:
	nop
	nop
	ta T_CHANGE_HPRIV
	set 0x7ac8dfac, %r2
	mov 0x3, %r1
	sllx %r1, 32, %r1
	or %r1, %r2, %r2
	.word 0x2e800001  ! 1: BVS	bvs,a	<label_0x1>
	stxa %r2, [%r0] ASI_LSU_CONTROL
	ta T_CHANGE_NONHPRIV
	.word 0x1d400001  ! 2929: FBPULE	fbule
	.word 0x8d802000  ! 2933: WRFPRS_I	wr	%r0, 0x0000, %fprs
ibp_4_661:
	nop
	nop
    ta T_CHANGE_HPRIV
    mov 8, %r18
    rd %asi, %r12
    wr %r0, 0x41, %asi
    set sync_thr_counter4, %r23
#ifndef SPC
    ldxa [%g0]0x63, %r8
    and %r8, 0x38, %r8              ! Core ID
    add %r8, %r23, %r23
#else
    mov 0, %r8
#endif
    mov 0x4, %r16
ibp_startwait4_661:
    cas [%r23],%g0,%r16       !lock
    brz,a %r16, continue_ibp_4_661
    mov (~0x4&0xf), %r16
    ld [%r23], %r16
ibp_wait4_661:
    brnz %r16, ibp_wait4_661
    ld [%r23], %r16
    ba ibp_startwait4_661
    mov 0x4, %r16
continue_ibp_4_661:
    sllx %r16, %r8, %r16        !Mask for my core only
    ldxa [0x58]%asi, %r17       !Running_status
wait_for_stat_4_661:
    ldxa [0x50]%asi, %r13       !Running_rw
    cmp %r13, %r17
    bne,a %xcc, wait_for_stat_4_661
    ldxa [0x58]%asi, %r17       !Running_status
    stxa %r16, [0x68]%asi       !Park (W1C)
    ldxa [0x50]%asi, %r14       !Running_rw
wait_for_ibp_4_661:
    ldxa [0x58]%asi, %r17       !Running_status
    cmp %r14, %r17
    bne,a %xcc, wait_for_ibp_4_661
    ldxa [0x50]%asi, %r14       !Running_rw
ibp_doit4_661:
    best_set_reg(0x000000402ce34296,%r19, %r20)
    stxa %r20, [%r18]0x42
    stxa  %r16, [0x60] %asi     !Unpark (W1S)
    st %g0, [%r23]              !clear lock
    wr %r0, %r12, %asi          !restore %asi
	.word 0xc3efe1d0  ! 2937: PREFETCHA_I	prefetcha	[%r31, + 0x01d0] %asi, #one_read
	.word 0xe6800b00  ! 2941: LDUWA_R	lduwa	[%r0, %r0] 0x58, %r19
frzptr_4_663:
    nop
    nop
    best_set_reg(0x3cb80000+0x1ffc, %r20, %r27)
	jmpl %r27, %r27
	.word 0x00800001  ! 2945: BN	bn  	<label_0x1>
	.word 0xd41fc000  ! 2949: LDD_R	ldd	[%r31 + %r0], %r10
	fbul,a,pn	%fcc0,  skip_4_665
	fbug skip_4_665
.align 4096
skip_4_665:
	.word 0x04cc4001  ! 2953: BRLEZ	brlez,pt  	%r17,<label_0xc4001>
cwp_4_666:
    set user_data_start, %o7
	.word 0x93902002  ! 2957: WRPR_CWP_I	wrpr	%r0, 0x0002, %cwp
splash_tba_4_667:
	nop
	ta T_CHANGE_PRIV
	set 0x120000, %r12
	.word 0x8b90000c  ! 2961: WRPR_TBA_R	wrpr	%r0, %r12, %tba
memptr_4_669:
	set user_data_start, %r31
	.word 0x8582eec8  ! 2965: WRCCR_I	wr	%r11, 0x0ec8, %ccr
	wrhpr %g0, 0x6cb, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x8143e011  ! 2969: MEMBAR	membar	#LoadLoad | #Lookaside 
mondo_4_671:
	nop
	nop
	.word 0x87802025  ! 1: WRASI_I	wr	%r0, 0x0025, %asi
	ta T_CHANGE_PRIV
    stxa %r20, [%r0+0x3c0] %asi
    stxa %r9, [%r0+0x3d0] %asi
	.word 0x87802089  ! 1: WRASI_I	wr	%r0, 0x0089, %asi
	.word 0x9d914012  ! 2973: WRPR_WSTATE_R	wrpr	%r5, %r18, %wstate
splash_cmpr_4_672:
    mov 0, %r18
    sllx %r18, 63, %r18
    rd %tick, %r17 
    add %r17, 0x80, %r17
    or %r17, %r18, %r17
	.word 0xaf800011  ! 2977: WR_TICK_CMPR_REG_R	wr	%r0, %r17, %-
intveclr_4_673:
	nop
	nop
	ta T_CHANGE_HPRIV
	setx 0x5b9a63348b0899c6, %r1, %r28
	stxa %r28, [%g0] 0x72
	wrhpr %g0, 0xb9a, %hpstate  ! ta T_CHANGE_NONHPRIV
	.word 0x05400001  ! 2981: FBPLG	fblg
	.word 0x8d903e35  ! 2985: WRPR_PSTATE_I	wrpr	%r0, 0x1e35, %pstate
	.word 0xd2800b80  ! 2989: LDUWA_R	lduwa	[%r0, %r0] 0x5c, %r9
	.word 0xe88008a0  ! 2993: LDUWA_R	lduwa	[%r0, %r0] 0x45, %r20
	.word 0x9f802cda  ! 2997: SIR	sir	0x0cda
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_2:
! Code for Template instance: _t1_
.text
.global _t1_main

_t1_main:       
	!# Switch to hpriv mode
    	ta 	T_CHANGE_HPRIV

        !# trap counter
        mov 0, %i6

        ! Set up for PMU 
        set 0x32f1c1b9, %g2
        wr %g2, %g0, %pcr
        setx 0xffffffb7ffffffa8, %g2, %g7
        wr %g7, %g0, %pic

    	!# setup ASI register to point to SPU
    	wr 	%g0, 0x40, %asi

    	!# Make sure CWQ is currently disabled, not busy, not terminated, no protocol error; else fail
    	ldxa 	[%g0 + ASI_SPU_CWQ_CSR] %asi, %l1
    	and 	%l1, 0xf, %l2
    	cmp 	%g0, %l2
    	bne,pn 	%xcc, _t1_fail
    	nop

    	!# allocate control word queue (e.g., setup head/tail/first/last registers)
    	setx 	_t1_cwq_base, %g1, %l6

    	!# write base addr to first, head, and tail ptr
    	!# first store to first
    	stxa    %l6, [%g0 + ASI_SPU_CWQ_FIRST] %asi
    	ldxa    [%g0 + ASI_SPU_CWQ_FIRST] %asi, %l1
    	!# Mask off upper 16 bits
    	setx 	0x0000ffffffffffff, %l5, %l0
    	and 	%l0, %l6, %l2
    	cmp 	%l1, %l2
    	bne,pn 	%xcc,    _t1_fail
    	nop

    	!# then to head
    	stxa    %l6, [%g0 + ASI_SPU_CWQ_HEAD] %asi
    	ldxa    [%g0 + ASI_SPU_CWQ_HEAD] %asi, %l1
    	cmp 	%l1, %l2
    	bne,pn 	%xcc,    _t1_fail
    	nop

    	!# then to tail
    	stxa    %l6, [%g0 + ASI_SPU_CWQ_TAIL] %asi
    	ldxa    [%g0 + ASI_SPU_CWQ_TAIL] %asi, %l1
    	cmp 	%l1, %l2
    	bne,pn 	%xcc,    _t1_fail
    	nop

    	!# then end of CWQ region to LAST
    	setx _t1_cwq_last, %g1, %l5
    	stxa    %l5, [%g0 + ASI_SPU_CWQ_LAST] %asi
    	ldxa    [%g0 + ASI_SPU_CWQ_LAST] %asi, %l1
    	!# Mask off upper 16 bits
    	and 	%l0, %l5, %l2
    	cmp 	%l1, %l2
    	bne,pn 	%xcc,    _t1_fail
    	nop

    	or      %g0, 0x0, %i4			!# _t1_counter : Increment _t1_by 1 _t1_to _t1_step _t1_over CWs
    	or      %g0, 0x0, %i5			!# _t1_offset  : Increment _t1_by 8 _t1_to _t1_step _t1_over CWs

_t1_main_loop:
	setx 	_t1_spu_op_array, %l1, %l2
	ldx 	[%l2 + %i5], %i1 
	cmp	%i1, 7
	bne	_t1_not_ssl
	mov	%i5, %g5		!# Save _t1_real _t1_offset - _t1_if _t1_sslkey _t1_it _t1_has _t1_to _t1_be 0x10 _t1_aligned
	btst	8, %i5
	bz	_t1_not_ssl
	nop	
	add	%i5, 8, %i5

_t1_not_ssl:
	cmp	%i1, 8
	bg	_t1_fail
	mulx 	%i1, 8, %i1		!# Calc _t1_index _t1_into _t1_toc

	setx 	_t1_table_of_context, %l1, %l2
	ldx 	[%l2 + %i1], %l3	!# l3 = _t1_toc _t1_of _t1_current _t1_operation
	ldx 	[%l3 + 0x40], %l4   	!# l4 = alignment array

    	!# set  CWQ data
	ldx	[%l3], %l2		
	ldx 	[%l2 + %i5], %l2	!# Get Control Word _t1_from _t1_array
	mov 	%l2, %i7		!# Save _t1_it _t1_for _t1_later
        srlx 	%i7, 48,  %l1
        and 	%l1, 1, %l1
        cmp 	%l1, 1
        bne,pn %xcc, _t1_write_cwq
	nop
	inc	%i6			!# increase _t1_interrupt _t1_counter

_t1_write_cwq:
    	!# write CWQ entry (%l6 points to CWQ)
    	stx  	%l2, [%l6 + 0x0]

    	!# source address
	ldx 	[%l3 + 0x8], %l2
	ldx	[%l4 + 0x8], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x8]

    	!# Authentication Key  Address (40-bit)
	ldx	[%l3 + 0x10], %l2
	ldx	[%l4 + 0x10], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x10]

    	!# Authentication IV   Address (40-bit)
	ldx	[%l3 + 0x18], %l2
	ldx	[%l4 + 0x18], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x18]

    	!# Authentication FSAS Address (40-bit)
	ldx	[%l3 + 0x20], %l2
	ldx	[%l4 + 0x20], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x20]

    	!# Encryption Key Address (40-bit)
	ldx 	[%l3 + 0x28], %l2
	ldx	[%l4 + 0x28], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x28]

    	!# Encryption Initialization Vector Address (40-bit)
	ldx 	[%l3 + 0x30], %l2
	ldx	[%l4 + 0x30], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x30]

    	!# Destination Address (40-bit)
    	ldx 	[%l3 + 0x38], %l2
	ldx	[%l4 + 0x38], %l1
	add	%l2, %i5, %l2
        add 	%l2, %l1, %l2		!# _t1_WARNING : Misaligned _t1_address
    	stx 	%l2, [%l6 + 0x38]

    	!# Make sure all these stores get to memory before we start
    	membar 	#Sync

    	!# Set the enabled bit and reset the other bits
    	or      %g0, 0x1, %g1
    	stxa    %g1,    [%g0 + ASI_SPU_CWQ_CSR] %asi

    	!# Kick off the CWQ operation by writing to the CWQ_TAIL
    	!# Now add 1 (actually 8*8B) to tail pointer
    	ldxa    [%g0 + ASI_SPU_CWQ_TAIL] %asi, %l2
    	add 	%l2, 0x40, %l2
    	stxa    %l2, [%g0 + ASI_SPU_CWQ_TAIL] %asi
    	ldxa    [%g0 + ASI_SPU_CWQ_TAIL] %asi, %l1
    	cmp 	%l1, %l2
    	bne,pn 	%xcc,    _t1_fail
    	nop

    	!# CWQ_SYNC operation...
    	ldxa    [%g0 + 0x30] %asi, %l1
    andn %l1, 0x10, %l1  !# clear interrupt request bit
	addcc	%l1, -1, %i0
	bne	_t1_fail			!# test for unexpected protocal error
	nop
    	ldxa    [%g0 + ASI_SPU_CWQ_HEAD] %asi, %l1
    	ldxa    [%g0 + ASI_SPU_CWQ_TAIL] %asi, %l1
    !# I want to check all the data
	or %g0, 260, %i0    
	or %g0, %g0, %g3   
_t1_check_msg:
	ldx 	[%l3 + 0x8], %l5	!# Needed _t1_for Inplace
	add	%l5, %i5, %l5
	ldx     [%l5 + %g3], %l1
	add     %g3, 0x8, %g3   !# i++
	addcc   %i0, -1, %i0
	bgt     _t1_check_msg
	nop
    !# I want to check all the data
	or %g0, 260, %i0    
	or %g0, %g0, %g3   
_t1_check_results:
	ldx	[%l3 + 0x38], %l5	!# Needed _t1_for Copy
	add	%l5, %i5, %l5
	ldx     [%l5 + %g3], %l1
	add     %g3, 0x8, %g3   !# i++
	addcc   %i0, -1, %i0
	bgt     _t1_check_results
	nop

	or %g0, 0x8, %i0    
	or %g0, %g0, %g3   
_t1_check_sfas:
	ldx	[%l3 + 0x20], %l5
	ldx     [%l5 + %g3], %l1
	add     %g3, 0x8, %g3   !# i++
	addcc   %i0, -1, %i0
	bgt     _t1_check_sfas 
	nop

    !# I want to check all the State 32 words + 2 bytes XY
	or %g0, 0x23, %i0    
	or %g0, %g0, %g3   
_t1_check_state:
	ldx	[%l3 + 0x28], %l5		!# Needed _t1_for Streamout
	ldx     [%l5 + %g3], %l1
	add     %g3, 0x8, %g3   !# i++
	addcc   %i0, -1, %i0
	bgt     _t1_check_state
	nop

	mov	%g5, %i5
	add	%l6, 0x40, %l6  	!# next CWQ address
	add	%i5, 8, %i5		!# next _t1_offset 
	add	%i4, 1, %i4		!# loop _t1_counter
	cmp 	%i4, 41
	bl	_t1_main_loop
	nop	

	!call 	check_int_cnt		!# Check #ints (assuming all have happened at this time!)
	nop

    	EXIT_GOOD

_t1_fail:
    	EXIT_BAD

_t1_check_int_cnt:
 	cmp %g0, %i6
        bne,pn %xcc, _t1_fail
	nop
        retl
	nop


! diag source

	.word 0xa7a049d4  ! 1: FDIVd	fdivd	%f32, %f20, %f50
	.word 0xe312800c  ! 1: LDQF_R	-	[%r10, %r12], %f17
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop
.text
	setx	join_lbl_0_0, %g1, %g2
	jmp	%g2
	nop
fork_lbl_0_1:

#define MAX_TIMEOUT 0x002
#define WAIT_LOOP 0x100
.text
.global _t2_main

_t2_main:       

    	setx 0x0000deadbeefbad0, %l5, %l4

	!# Switch to hpriv mode
    	ta T_CHANGE_HPRIV

        ! Set up for PMU 
        set 0x3aa15fba, %g2
        wr %g2, %g0, %pcr
        setx 0xffffffb1ffffffae, %g2, %g7
        wr %g7, %g0, %pic

	or	%g0, 0x0, %g2		!# Operation Step
	or	%g0, 0x0, %g4		!# Operand   Step

	set	0x74a, %g3
	stxa	%g3, [%g0] ASI_SPARC_PWR_MGMT
	wr	%g3, 0x4, %fprs

	mov 	%l7, 	%g1
	wrpr 	%g0, 	0x0, 	%cwp

	or 	%g0, 	0x8, 	%l0
	sllx 	%l0, 	0x3c, 	%l0
	wrhpr 	%l0, 	0x580, 	%hsys_tick_cmpr
	wr 	%l0, 	0x580, 	%sys_tick_cmpr
	wr 	%l0, 	0x580, 	%tick_cmpr
	!# Execute Main Diag ..
        !# Write address of data region to load from in MA_PA reg, and check
	setx	_t2_ma_operands, %g6, %l7
          add	%l7, 12, %l7			!# _t2_WARNING : Misaligned _t2_address
          add	%l7, %g4, %l7
        wr %g0, 0x40, %asi
	stxa	%l7, [%g0 + 0x88] %asi 

_t2_ma_load:
	!# Write MAMEM address, start at 0
	or	%g0, 0x0, %l2
	stxa	%l2,	[%g0 + 0x90] %asi

	!# write MA_CTL
	set    0x58, %l1
    mov 0, %g7
    sllx %g7, 18, %g7
    or %l1, %g7, %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# LOAD

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait:
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x80] %asi, %l1
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop


_t2_loop_0:
	!# write NPRIME
	setx	 0xec496ef76d8be028, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 5, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_0:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_1:
	!# write NPRIME
	setx	 0x19e1277d6e13838d, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 10, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_1:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_2:
	!# write NPRIME
	setx	 0x22ff6addb0283f9f, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 7, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_2:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_3:
	!# write NPRIME
	setx	 0x48198515ea076ef8, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 3, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_3:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_4:
	!# write NPRIME
	setx	 0xb771a15be177061f, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 0, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_4:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_5:
	!# write NPRIME
	setx	 0x6b5751f0cf9e4e0a, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_5:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_6:
	!# write NPRIME
	setx	 0x67485befa59bebd1, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 12, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_6:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_7:
	!# write NPRIME
	setx	 0xe678dec9551cb079, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 8, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_7:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_8:
	!# write NPRIME
	setx	 0x28445ab46b6185b4, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_8:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_9:
	!# write NPRIME
	setx	 0xa6926b261e2b88e7, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 1, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_9:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_10:
	!# write NPRIME
	setx	 0x027a727dae8c51cd, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_10:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_11:
	!# write NPRIME
	setx	 0xe0a06de234d416fd, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 8, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_11:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_12:
	!# write NPRIME
	setx	 0x1e0c366f05a4bb53, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 16, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_12:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_13:
	!# write NPRIME
	setx	 0x006888d05c78c691, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 7, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_13:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_14:
	!# write NPRIME
	setx	 0xaa8204f24ea8b66d, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_14:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_15:
	!# write NPRIME
	setx	 0xa8ef51f13b4e455c, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_15:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_16:
	!# write NPRIME
	setx	 0xc6578f69158aaac4, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 15, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_16:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_17:
	!# write NPRIME
	setx	 0x89dd4f110e266e12, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 10, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_17:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_18:
	!# write NPRIME
	setx	 0xdbaac1f9d16e0220, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_18:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_19:
	!# write NPRIME
	setx	 0xb2b29ccaf50524ae, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_19:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_20:
	!# write NPRIME
	setx	 0xaf3d254222982ee7, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_20:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_21:
	!# write NPRIME
	setx	 0xecd0570fd83f6fab, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 15, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_21:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_22:
	!# write NPRIME
	setx	 0x93a6e186a285ebba, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 0, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_22:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_23:
	!# write NPRIME
	setx	 0x6c19e21af2784c3e, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 5, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_23:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_24:
	!# write NPRIME
	setx	 0x44a2ca88f0d25e11, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 16, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_24:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_25:
	!# write NPRIME
	setx	 0xaf98e70d93e441c3, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_25:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_26:
	!# write NPRIME
	setx	 0xba91aec3062f3c90, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 6, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_26:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_27:
	!# write NPRIME
	setx	 0x53747eb9ae4a5ce7, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_27:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_28:
	!# write NPRIME
	setx	 0x12ae8f9dc0af8cef, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 7, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_28:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_29:
	!# write NPRIME
	setx	 0x40f4c40ef65d36c3, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 15, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_29:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_30:
	!# write NPRIME
	setx	 0xc707e62fb452d8a9, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 3, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_30:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_31:
	!# write NPRIME
	setx	 0xa362dd591d4eee94, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 1, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_31:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_32:
	!# write NPRIME
	setx	 0x8631c72b83625f8a, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 5, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_32:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_33:
	!# write NPRIME
	setx	 0x5c1461781fe5a01e, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_33:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_34:
	!# write NPRIME
	setx	 0x88d6bfc0d47203a6, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 2, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_34:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_35:
	!# write NPRIME
	setx	 0x078ad8a92b3f0e45, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 0, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_35:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_36:
	!# write NPRIME
	setx	 0xacc2ddaa51da1144, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 5, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_36:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_37:
	!# write NPRIME
	setx	 0xb4599aecce37d221, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_37:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_38:
	!# write NPRIME
	setx	 0x843a3a1241d3e802, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 13, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_38:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_39:
	!# write NPRIME
	setx	 0x93241a62171848e2, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 2, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_39:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_40:
	!# write NPRIME
	setx	 0xc14f00e0bc7e2c67, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_40:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_41:
	!# write NPRIME
	setx	 0x935f88968270acf8, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_41:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_42:
	!# write NPRIME
	setx	 0xab669ad479fb4d80, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_42:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_43:
	!# write NPRIME
	setx	 0x63b21cf2151b66cf, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_43:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_44:
	!# write NPRIME
	setx	 0x26be4ffa722b2903, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 9, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_44:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_45:
	!# write NPRIME
	setx	 0x532e1c8f2a494104, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 1, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_45:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_46:
	!# write NPRIME
	setx	 0xaf5e2087d71f684f, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 8, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_46:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_47:
	!# write NPRIME
	setx	 0x70c683d93c96eb0c, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 11, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_47:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_48:
	!# write NPRIME
	setx	 0x7b87744ed6f81d5e, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 15, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_48:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_49:
	!# write NPRIME
	setx	 0x15f0bbbcf308f375, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 1, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_49:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_50:
	!# write NPRIME
	setx	 0x56bda96a79e47637, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 0, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_50:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_51:
	!# write NPRIME
	setx	 0x2049f2b331f047ce, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_51:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_52:
	!# write NPRIME
	setx	 0xd89d6d659bfd8fa6, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 5, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_52:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_53:
	!# write NPRIME
	setx	 0x42ac552f580547c1, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 12, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_53:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_54:
	!# write NPRIME
	setx	 0x26ae18d8d367e7c2, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 2, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_54:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_55:
	!# write NPRIME
	setx	 0xc3cf02fc13922183, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 11, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_55:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_56:
	!# write NPRIME
	setx	 0x7ad462348d6b6160, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 8, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_56:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_57:
	!# write NPRIME
	setx	 0x529228938a545856, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 2, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_57:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_58:
	!# write NPRIME
	setx	 0x226b64cac6031fe1, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_58:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_59:
	!# write NPRIME
	setx	 0xe3c59de421b34e64, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 11, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_59:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_60:
	!# write NPRIME
	setx	 0x119227114304c6ea, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 6, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_60:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_61:
	!# write NPRIME
	setx	 0x1b6c54d0c0f498b6, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 2, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_61:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_62:
	!# write NPRIME
	setx	 0x6df0a08cedea6fa1, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 6, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_62:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_63:
	!# write NPRIME
	setx	 0x204af72aabb84928, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_63:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_64:
	!# write NPRIME
	setx	 0x29230fe1e4ab92be, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_64:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_65:
	!# write NPRIME
	setx	 0xe2e34e799a66ed59, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_65:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_66:
	!# write NPRIME
	setx	 0x4d07b51b0a7d2264, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 14, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_66:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_67:
	!# write NPRIME
	setx	 0x0668ced3ba0568e0, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 5, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_67:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_68:
	!# write NPRIME
	setx	 0x591610e8da86ca6e, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 12, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_68:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_69:
	!# write NPRIME
	setx	 0x041738ee72724866, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 16, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_69:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_70:
	!# write NPRIME
	setx	 0xfcc2db431e134a42, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 11, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_70:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_71:
	!# write NPRIME
	setx	 0xbb117fae6a1fa7cb, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 4, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_71:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_72:
	!# write NPRIME
	setx	 0x92655fab62c862be, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 2, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_72:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_73:
	!# write NPRIME
	setx	 0xfe03910a50233206, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 17, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_73:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_loop_74:
	!# write NPRIME
	setx	 0x24142337853cb8e5, %g7, %l2
	stxa	%l2,	[%g0 + 0x98] %asi

	setx	_t2_ma_operations, %g6, %l7
	or	%g0, 15, %i0			!# OPSELECT
	umul	%i0, 16, %i0
	add	%i0, %g2, %i0

	!# write MA_ADDR
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x90] %asi

	!# write MA_CTL
	add %i0, 8, %i0
	ldx [%l7 + %i0], %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# OPERATION

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait2_74:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x98] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x90] %asi, %l1		!# MA Addr
	ldxa	[%g0 + 0x88] %asi, %l1		!# MA PA
	ldxa	[%g0 + 0x80] %asi, %l1		!# MA CTL
	andcc	%l1, %l2, %l1
	bne,pn %xcc,	_t2_fail
	nop
	add	%g2, 288, %g2			!# Operation Step  (16 * # _t2_of _t2_operations _t2_in _t2_queue)
	add	%g4, 164, %g4			!# Operand   Step  (_t2_always 164)

_t2_ma_store:	

        !# write MA_ADDR
	or %g0, 0x00, %l2
	stxa	%l2,	[%g0 + 0x90] %asi
        !# Write result address into MA_PA reg

        setx	_t2_ma_results, %g7, %l6
          add %l6, 14, %l6			!# _t2_WARNING : Misaligned _t2_address
	stxa	%l6, [%g0 + 0x88] %asi 

	!# write MA_CTL
	set    0x171,  %l1
    mov 0, %g7
    sllx %g7, 18, %g7
    or %l1, %g7, %l1
	stxa	%l1,	[%g0 + 0x80] %asi		!# STORE

	!# setup mask to check for INVOP
	or	%g0, 0x1, %l2
	sllx	%l2, 21, %l2

	#! Try MA_SYNC operation...
_t2_wait3:	
	ldxa	[%g0 + 0xA0] %asi, %l1
	ldxa	[%g0 + 0x80] %asi, %l1
	andcc	%l1, %l2, %l1
	bne,pn	%xcc,	_t2_fail
	nop

_t2_idle3:
#ifndef NO_MA_CHECK
	!# do dummy loads into %g1

	setx	_t2_ma_results, %g7, %l7
	or	%g0, %g0, %l3
	!# setup loop count
	or	%g0, 164, %i0
_t2_more:	
  	ldx	[%l7+%l3], %l0	!# a[_t2_i]
	addcc	%i0, -1, %i0
	bgt	_t2_more
	add	%l3, 0x8, %l3	!# i++
#endif
    b _t2_done_spu_ma_rand5

_t2_fail:
    EXIT_BAD

    nop
    nop
_t2_done_spu_ma_rand5:
	.word 0x9ba7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f44
	.word 0x81dfc000  ! 1: FLUSH_R	flush 	%r31, %r0, %r0
	nop
	nop
	ta T_CHANGE_PRIV
	wrpr %g0, %g0, %gl
	nop
	nop

join_lbl_0_0:
SECTION .MAIN
.text
diag_finish:
    nop
    nop
    nop
    ta T_CHANGE_HPRIV
#if  (MULTIPASS > 0)
multipass_check:
    rd %asi, %r12
    wr %g0, ASI_SCRATCHPAD, %asi
    ldxa [0x38]%asi, %r10
    cmp  %r10, MULTIPASS
    inc %r10
    stxa %r10, [0x38]%asi
    wr %g0, %r12, %asi
    bne fork_threads
    wrpr %g0, %g0, %gl
#endif
finish_diag:
	best_set_reg(HV_TRAP_BASE_PA, %r1, %r2)
    wrhpr %g2, %g0, %htba
    ta T_GOOD_TRAP
    nop
    nop
    nop
.data
    .xword 0x0
    ! fp data rs1, rs2, fsr, gsr quads ..
.global fp_data_quads
fp_data_quads:
	.xword 0x0044000000000000
	.xword 0x4028000000000000
	.xword 0x0fc0400400000000 
	.xword 0x0000000000000000 
	.xword 0x0041000000000000
	.xword 0x4022000000000000
	.xword 0x0600800000000000 
	.xword 0x0000000000000000 
	.xword 0x0220000000000000
	.xword 0x4140000000000000
	.xword 0x4fc0400400000000 
	.xword 0x0000000000000000 
	.xword 0x4090000000000000
	.xword 0x0090000000000000
	.xword 0x0f80400800000000 
	.xword 0x0a00000000000000 
.align 128
.global user_data_start
.data
user_data_start:

	.xword	0x842a47d85c303863
	.xword	0x6e1d775a885c6270
	.xword	0xc036bf7c3b1bdfc7
	.xword	0xdca79c098c75862c
	.xword	0x9f2aba8512456baa
	.xword	0xf1a136f2ad96e318
	.xword	0x3e2226b737626be6
	.xword	0x53ecbde8f93ba70c
	.xword	0x8c23ea5d749b0ea3
	.xword	0xb1703745cb2c591a
	.xword	0xeef78bdd99edf754
	.xword	0x01cbfb95cd17c044
	.xword	0x7bd5909ed98bce07
	.xword	0x7e0b8bedcc62a451
	.xword	0x6e9dd230487c8eab
	.xword	0x6248dc5da065df0e
	.xword	0x0fed696634111f86
	.xword	0x95801dd22e5cf2b2
	.xword	0x7bca7b416e2b4c6a
	.xword	0x90a348d55175b9fc
	.xword	0x0b66db3a6ebe896a
	.xword	0x6867205d00b1a1a0
	.xword	0x5a2ec070db22c58c
	.xword	0xaac26d71fbe07b86
	.xword	0xbfc49d6ee81008b8
	.xword	0xb319ad2308bcc67c
	.xword	0x489471932f3d0f39
	.xword	0x09d0e75eca9e90df
	.xword	0xc571dc3441b3eeb5
	.xword	0x80441017a0bb481b
	.xword	0xd8c0c7dde17415a8
	.xword	0x7c3bbdf424df8b54
	.xword	0x1c2b0e6376b28d6b
	.xword	0x6ff4edf32612cb22
	.xword	0xe220d40ad9b2f9a6
	.xword	0x6e20467c02ab75c1
	.xword	0x52fd3685bfbf3475
	.xword	0x0a7f779c38a61e4e
	.xword	0x376340bc361461f8
	.xword	0x97bc178f3e51c1f6
	.xword	0x6d0b62ce831122ee
	.xword	0xddf300b4944d059b
	.xword	0x0b7866efb89526a7
	.xword	0x1c2e6af19ccf1d9b
	.xword	0xf905a00b60acb14b
	.xword	0x1fceeb62959dad03
	.xword	0x47e2abbf4df91d1f
	.xword	0x39e49a269261f765
	.xword	0xfabf90497e2531bb
	.xword	0x65afeae4d8c2a0c9
	.xword	0x66f3b9b5202a61bf
	.xword	0x0f9fe2913bcdf449
	.xword	0x3650b588dd41ee1b
	.xword	0x98ae12778fc8a476
	.xword	0xe319659517165830
	.xword	0xd30435b9b35fc684
	.xword	0x5780643641c070a5
	.xword	0x0f87ed1d6c53b623
	.xword	0x709aad5c3dec34c4
	.xword	0x4e6a8e2a48987f96
	.xword	0x1a44c9a195929e76
	.xword	0x8c2231bc5cb3aa24
	.xword	0xc9424347caf71dd4
	.xword	0x12edb5496f11f908
	.xword	0xbe7b465e33079967
	.xword	0xa41b459b7a05ced2
	.xword	0x9bba33c408b1d0fb
	.xword	0x3b7420822b01fc69
	.xword	0x70a3d7670d9539bd
	.xword	0x7006329c63866022
	.xword	0x885204d71cd615f4
	.xword	0x35fba8b0edef0ee9
	.xword	0x57ecd0e041a49cd1
	.xword	0xb2925412324ab2f4
	.xword	0xb26cd7afaa13ed42
	.xword	0xadb1dd92db6fd41e
	.xword	0x7e7604fd4f586ac5
	.xword	0xc8b617450590464f
	.xword	0xb4529ee8d9f73c61
	.xword	0x7b150967e234be75
	.xword	0x64caa969fd69eb3c
	.xword	0x77f20cfbd6d9f28e
	.xword	0x82e03885f3e3d803
	.xword	0x08f1d461c2117cdc
	.xword	0xe6c11d8c01976221
	.xword	0xfa41bc9a8b76d45f
	.xword	0xb509cbe81da1a7fe
	.xword	0x0cb456cc50b55649
	.xword	0x009c27ab9e220cda
	.xword	0x37972ef9028f13ec
	.xword	0x08159b5ab57a90c4
	.xword	0x0b738175430dd7f5
	.xword	0x2f390bce6fc95a5c
	.xword	0x578c41b1c98ba88f
	.xword	0xbb78ed342ef4b169
	.xword	0x2c06a52928e5aeff
	.xword	0xf99b8da3e9ab5b87
	.xword	0x93c8bde06b08ee31
	.xword	0x96e490f7bf2e3433
	.xword	0x730ecd49aa813b35
	.xword	0x733ea1a93af05465
	.xword	0x5ab1f80066cc9d80
	.xword	0x3a7f9a7b86288998
	.xword	0xce78255e6cdf49c4
	.xword	0x496691e481b405dd
	.xword	0xf4c4b5bb0ce3e46e
	.xword	0xd3112fbdda45afad
	.xword	0xdb4704c7742f9792
	.xword	0xd6e43052fdd169db
	.xword	0x835a6d750799da92
	.xword	0x88860467b6353e98
	.xword	0x8a0720c69adfe783
	.xword	0x2e0a44c7ce5caeca
	.xword	0x8cabceabdc62d850
	.xword	0x93d5eed7d6e6f342
	.xword	0x76ed463b4ee088e0
	.xword	0x33c1d57a12cb2fab
	.xword	0x7faea7759388185b
	.xword	0x1a1991c862e5a403
	.xword	0x4b5cc4c5fd840423
	.xword	0x97423d0569ce6cb5
	.xword	0x013476f060d96694
	.xword	0x28e47331e8b8d5e3
	.xword	0xd7f8772959e22435
	.xword	0x008cf65b986b03cf
	.xword	0x0ccaa7fc2cdbd5ff
	.xword	0x4bc4f412a7941269
	.xword	0x26ff681fe01cc12a
	.xword	0x102947941b133a7b
	.xword	0xe4646c01e3fc29eb
	.xword	0x2488780b41a93eb8
	.xword	0xef9845c83cd60c5f
	.xword	0xde9306e58208fb04
	.xword	0x62e127eb43f98bba
	.xword	0xda051917827a41a4
	.xword	0xa938077a8cc940f4
	.xword	0xd23bf3fd8d6d10a1
	.xword	0xdff1d5aacc293b79
	.xword	0xd8187c5f2938c77a
	.xword	0x1e296e9b9ac85a06
	.xword	0x0de681b746f591f7
	.xword	0x7302844cb72e6f89
	.xword	0x2617792596f05bf1
	.xword	0x97315c8ba7a5c626
	.xword	0x11d8868a3d37aaa4
	.xword	0x7afe3bc9348f3766
	.xword	0x840b0cc95594582b
	.xword	0x0a2efc6ff08ac7b6
	.xword	0x889dae2ef22fe593
	.xword	0x1720eb4811ef61e1
	.xword	0x620c10f74444ba88
	.xword	0xbb17c01238b878ff
	.xword	0x148b7f194a6f2840
	.xword	0x4577892d19a5d36b
	.xword	0xcd45963267b889f0
	.xword	0x5e0553640541e7a4
	.xword	0x3a7f4eb7c5328e29
	.xword	0xa163c82aaae8ebc0
	.xword	0xcc01b6bf03dba7ab
	.xword	0xc9e314c313a89f6e
	.xword	0x171e3b1474f60d1c
	.xword	0x429672c3213ed821
	.xword	0x1059768c69c78346
	.xword	0x3ba47cc5eaf8109c
	.xword	0x3a4072d74dffde3a
	.xword	0xcd4c6c70de24e5c5
	.xword	0xbf0481ce24efc4a6
	.xword	0xbfa85f571d9ed496
	.xword	0x48d782488a771a99
	.xword	0x7d38e75e939bcb4e
	.xword	0xa6461795307b90c1
	.xword	0x7beff0925669dee4
	.xword	0x368e7d5fe17541a5
	.xword	0x187badf8611875f4
	.xword	0xe8e7e5372dc28273
	.xword	0x4bdc22fff06aeba8
	.xword	0x3c586645576121ce
	.xword	0x7adacb2b50907d3b
	.xword	0xe1ac6759576c5737
	.xword	0xaa3ce1493cc3b297
	.xword	0x6be228920ef43711
	.xword	0x51c00961f5892068
	.xword	0xe93cf28d128c3d3b
	.xword	0x45bb6e50272e77de
	.xword	0x639e4ca03633c828
	.xword	0x297f719be7f892a5
	.xword	0xed245d8aa85347f7
	.xword	0x48e71ac610ec5392
	.xword	0x8217d3afec15262b
	.xword	0x31092282868fc17d
	.xword	0x5af1a898039c0661
	.xword	0xd6c6f1faf08ed4f3
	.xword	0x29e059ae74e6c543
	.xword	0x9f92de0e6c68f27e
	.xword	0x4df3239033f13764
	.xword	0x2600d2dace997d92
	.xword	0x76ca605612726f05
	.xword	0x46838602485c3b17
	.xword	0x5cfcdc39a8174660
	.xword	0x2e42e0ab8be19206
	.xword	0x223794832c27eeb1
	.xword	0x65bace34e60e2370
	.xword	0x804827c6910c9c43
	.xword	0x3abe620f024487d1
	.xword	0xfca745566a300af6
	.xword	0xe3b487c7a4e996f7
	.xword	0xbb86b67eb87527b4
	.xword	0x251de15159089549
	.xword	0xd3e1bf304d8cd583
	.xword	0xca96b012daf955d4
	.xword	0x51c028c3eddbf9dd
	.xword	0x77cfc0ed07f89027
	.xword	0x1796380ba37d9ae0
	.xword	0xc74560dc7b289445
	.xword	0xc1c3169286e2b1d9
	.xword	0xf5280896edabccfd
	.xword	0x0c194bce390f8173
	.xword	0x8c11d5a7e3f291de
	.xword	0x386ff1016e99b629
	.xword	0xc4119242105a854e
	.xword	0x0659610d5ab11f68
	.xword	0x690e1be20be0d9d5
	.xword	0x8f22d89585856b01
	.xword	0xcddd56a8355e9bba
	.xword	0x44c0b4a02d64b6da
	.xword	0xd275919c25f762ac
	.xword	0x676eb4fb82f9b8d0
	.xword	0xfe08d7c3e389afe5
	.xword	0xe0b95ad7afe59e06
	.xword	0x1e73b611988ced65
	.xword	0xfc98879a81c7defd
	.xword	0x2b73465ece20554a
	.xword	0x94987b540b55fd50
	.xword	0xc945708bbc55d322
	.xword	0x31afc18492f07bd9
	.xword	0x704bcaaa9a94469c
	.xword	0xae2e05cff5718614
	.xword	0x9179bc23edc3f681
	.xword	0x795accdbd74be85a
	.xword	0x6567ca8afaca8fac
	.xword	0xec67afff5ba63765
	.xword	0xf57b728882a4fec3
	.xword	0x64fcc3c7173be733
	.xword	0x519cd0aa16316350
	.xword	0xe256e9dc851e2ff7
	.xword	0x7c8e1431fd249414
	.xword	0xba76b93cffbbd010
	.xword	0x423b2441d2e6d0d9
	.xword	0x27bdf982bb79c45d
	.xword	0x650ec4b5c4168d31
	.xword	0x25f224bea80fa12e
	.xword	0x8b289565025cd3bc
	.xword	0xbd8ac28d0d760c51
	.xword	0x68ea7b5e21c7f4c1
	.xword	0x561d3d52c716e317
	.xword	0xb471f14c30c61f1a

SECTION .HTRAPS
.text
.global restore_range_regs
restore_range_regs:
    wr %g0, ASI_MMU_REAL_RANGE, %asi
    mov 1, %g1
    sllx %g1, 63, %g1
    ldxa [ASI_MMU_REAL_RANGE_0] %asi, %g2
    or %g2 ,%g1, %g2
    stxa %g2,  [ASI_MMU_REAL_RANGE_0] %asi
    ldxa [ASI_MMU_REAL_RANGE_1] %asi, %g2
    or %g2 ,%g1, %g2
    stxa %g2,  [ASI_MMU_REAL_RANGE_1] %asi
    ldxa [ASI_MMU_REAL_RANGE_2] %asi, %g2
    or %g2 ,%g1, %g2
    stxa %g2,  [ASI_MMU_REAL_RANGE_2] %asi
    ldxa [ASI_MMU_REAL_RANGE_3] %asi, %g2
    or %g2 ,%g1, %g2
    stxa %g2,  [ASI_MMU_REAL_RANGE_3] %asi
    retry

.global wdog_2_ext
SECTION .HTRAPS
.global wdog_2_ext
.global retry_with_base_tba
.global resolve_bad_tte

.text
resolve_bad_tte:
    !if pc[63:15] matches tba, then relocated handler ..
    rdpr %tpc, %r4
check_tba:
    set 0x7fff, %r5
    andn %r4, %r5, %r5         !clear 14:0
    rdpr %tba, %r6             !compare pc[63:15]  to tba
    cmp %r5, %r6
    bne,a not_a_reloc_handler
    andn %r27, 0x1f, %r6
retry_with_base_tba:
    best_set_reg(TRAP_BASE_VA, %r3, %r5)
    cmp %r4, %r5
    bz htrap_5_ext_done
    set 0x7fff, %r3
    and %r4, %r3, %r4
    or %r5, %r4, %r4
    wrpr %r4, %tpc
    rdpr %tnpc, %r4
    and %r4, %r3, %r4
    or %r5, %r4, %r4
    wrpr %r4, %tnpc
    retry

    !assume %r27 is where we came from ..
not_a_reloc_handler:
    stxa %r27, [%r6] 0x57
    add %r27, 8, %r27
    wrpr %r27, %tnpc
    done

htrap_5_ext:
    rd %pc, %l2
    inc %l3
    add %l2, htrap_5_ext_done-htrap_5_ext, %l2
    rdpr %tl, %l3
    rdpr %tstate, %l4
    rdhpr %htstate, %l5
    or %l5, 0x4, %l5
    inc %l3
    wrpr %l3, %tl
    wrpr %l2, %tpc
    add %l2, 4, %l2
    wrpr %l2, %tnpc
    wrpr %l4, %tstate
    wrhpr %l5, %htstate
    retry
htrap_5_ext_done:
    done

wdog_2_ext:
    mov 0x1f, %l1
    stxa    %l1, [%g0] ASI_LSU_CTL_REG
 ! If TT != 2, then goto trap handler
    rdpr %tt, %l1
    cmp %l1, 0x2
    bne wdog_2_goto_handler
    nop
 ! else done
    done
wdog_2_goto_handler:
    rdhpr %htstate, %l3
    and %l3, 0x4, %l3    ! If previously in hpriv mode, go to hpriv 
    brnz,a %l3, wdog_2_goto_handler_1
    rdhpr %htba, %l3
    srlx %l1, 7, %l3     ! Send priv sw traps to priv mode ..
    cmp %l3, 0x2         ! 0x2 = priv sw trap, 0x3=hpriv sw trap ..
    be,a wdog_2_goto_handler_1
    rdpr %tba, %l3
    rdhpr %htba, %l3
wdog_2_goto_handler_1:
    sllx %l1, 5, %l1
    add %l1, %l3, %l3
    jmp %l3
    nop
! Red mode other reset handler
! Get htba, and tt and make trap address
! Jump to trap handler ..

SECTION .RED_SEC
.global red_other_ext
.global wdog_red_ext
.text
red_other_ext:
 ! IF TL=6, shift stack by one ..
    rdpr %tl, %l1
    cmp %l1, 6
    be start_tsa_shift
    nop

continue_red_other:
    mov 0x1f, %l1
    stxa    %l1, [%g0] ASI_LSU_CTL_REG

    rdpr %tt, %l1

    rdhpr %htstate, %l2
    and %l2, 0x4, %l2    ! If previously in hpriv mode, go to hpriv 
    brnz,a %l2, red_goto_handler
    rdhpr %htba, %l2
    srlx %l1, 7, %l2     ! Send priv sw traps to priv mode ..
    cmp %l2, 0x2         ! 0x2 = priv sw trap, 0x3=hpriv sw trap ..
    be,a red_goto_handler
    rdpr %tba, %l2
    rdhpr %htba, %l2
red_goto_handler:

    sllx %l1, 5, %l1
    add %l1, %l2, %l2
    rdhpr %hpstate, %l1
    jmp %l2
    wrhpr %l1, 0x20, %hpstate
    nop

wdog_red_ext:
 ! Shift stack down by 1 ...
    rdpr %tl, %l1
    cmp %l1, 6
    bl wdog_end
start_tsa_shift:
    mov 0x2, %l2

tsa_shift:
    wrpr %l2, %tl
    rdpr %tt, %l3
    rdpr %tpc, %l4
    rdpr %tnpc, %l5
    rdpr %tstate, %l6
    rdhpr %htstate, %l7
    dec %l2
    wrpr %l2, %tl
    wrpr %l3, %tt
    wrpr %l4, %tpc
    wrpr %l5, %tnpc
    wrpr %l6, %tstate
    wrhpr %l7, %htstate
    add %l2, 2, %l2
    cmp %l2, %l1
    ble tsa_shift
    nop
tsa_shift_done:
    dec %l1
    wrpr %l1, %tl

wdog_end:
 ! If TT != 2, then goto trap handler
    rdpr %tt, %l1

    cmp %l1, 0x2
    bne continue_red_other
    nop
 ! else done
    mov 0x1f, %l1
    stxa    %l1, [%g0] ASI_LSU_CTL_REG
    done
SECTION .T_CWQ_DATA DATA_VA=0x10000
attr_data {
    Name = .T_CWQ_DATA
    hypervisor
}
	.data
.global _t1_user_data_start
_t1_user_data_start:
.global _t1_scratch_area
_t1_scratch_area:

	.align 16
.global _t1_spu_op_array
_t1_spu_op_array:
	.xword 7
	.xword 7
	.xword 0
	.xword 2
	.xword 4
	.xword 7
	.xword 3
	.xword 1
	.xword 5
	.xword 0
	.xword 4
	.xword 0
	.xword 5
	.xword 7
	.xword 1
	.xword 6
	.xword 0
	.xword 3
	.xword 6
	.xword 6
	.xword 2
	.xword 4
	.xword 5
	.xword 4
	.xword 1
	.xword 2
	.xword 6
	.xword 4
	.xword 6
	.xword 3
	.xword 0
	.xword 4
	.xword 6
	.xword 2
	.xword 3
	.xword 2
	.xword 1
	.xword 2
	.xword 3
	.xword 3
	.xword 1
	.xword 6
	.xword 5
	.xword 2
	.xword 4
	.xword 3
	.xword 3
	.xword 4
	.xword 5
	.xword 0
.global _t1_aes_cwd_array
_t1_aes_cwd_array:
	.xword 0xc06100601700003f
	.xword 0xc0e100c01900002f
	.xword 0xc0e000601400000f
	.xword 0x406000401b00001f
	.xword 0x40e000801700003f
	.xword 0xc06000801400003f
	.xword 0x406100c01700003f
	.xword 0xc0e000a01500003f
	.xword 0xc06000e01300002f
	.xword 0xc06000401b00001f
	.xword 0xc0e100801b00000f
	.xword 0xc0e000a01500003f
	.xword 0xc06100401300003f
	.xword 0xc0e000601500003f
	.xword 0x406100a01700003f
	.xword 0x40e100c01400000f
	.xword 0xc06100c01800003f
	.xword 0x406100201800003f
	.xword 0xc0e000401700002f
	.xword 0xc0e100201300003f
	.xword 0xc0e100401700000f
	.xword 0x406100801500003f
	.xword 0xc06000201100001f
	.xword 0x40e000a01b00001f
	.xword 0xc06100001400003f
	.xword 0xc0e100201400002f
	.xword 0x406000a01500000f
	.xword 0x40e100601700002f
	.xword 0xc06000801500002f
	.xword 0x406000001500000f
	.xword 0xc06000001900001f
	.xword 0x40e100e01b00003f
	.xword 0x40e100601b00003f
	.xword 0xc0e000601700001f
	.xword 0x40e100001b00001f
	.xword 0xc0e000001400003f
	.xword 0x40e100801100000f
	.xword 0x406000c01300003f
	.xword 0xc06000601700003f
	.xword 0xc0e000201300001f
	.xword 0xc06100401900002f
	.xword 0xc0e100c01700003f
	.xword 0xc06000c01900001f
	.xword 0xc06100e01300000f
	.xword 0x406100401300001f
	.xword 0x40e100e01900000f
	.xword 0x40e100001300002f
	.xword 0x406100401b00001f
	.xword 0x40e000801100002f
	.xword 0xc0e100201000002f
.global _t1_des_cwd_array
_t1_des_cwd_array:
	.xword 0x406000600900001f
	.xword 0x40e1002009000017
	.xword 0x406000400d000017
	.xword 0x406100c00c00001f
	.xword 0x406000600d000007
	.xword 0x40e000a009000017
	.xword 0x40e100000e00001f
	.xword 0xc0e100c008000017
	.xword 0xc06000400800000f
	.xword 0x406000400c000017
	.xword 0xc0e000800e000017
	.xword 0xc0e100a00a000017
	.xword 0xc06100800e000017
	.xword 0xc0e000000d000007
	.xword 0xc0e000a00a00000f
	.xword 0x40e100e009000007
	.xword 0xc0e100800a00000f
	.xword 0xc06100600900000f
	.xword 0x406000400c00001f
	.xword 0x406100000c000017
	.xword 0xc06000800c000017
	.xword 0x406000000e000007
	.xword 0x406000e008000017
	.xword 0x406000200d00000f
	.xword 0xc06100800a00001f
	.xword 0x406100000a000017
	.xword 0xc0e1004008000017
	.xword 0xc0e1004008000007
	.xword 0xc0e000600d000017
	.xword 0xc06000800c000017
	.xword 0xc06100a00a00001f
	.xword 0xc0e000800d00001f
	.xword 0x40e000e00800001f
	.xword 0x406100a00a00000f
	.xword 0xc0e000600d000007
	.xword 0xc0e100400c000007
	.xword 0xc06000400a000017
	.xword 0x406100800e00001f
	.xword 0x406100400a00000f
	.xword 0x406100400900001f
	.xword 0xc0e000e008000017
	.xword 0x406000200c00001f
	.xword 0x40e100800e000017
	.xword 0x406100000e000007
	.xword 0x406000c00c000017
	.xword 0x4060000008000017
	.xword 0xc06000a00900000f
	.xword 0xc060004008000007
	.xword 0x40e100e008000017
	.xword 0x4060004008000017
.global _t1_copy_cwd_array
_t1_copy_cwd_array:
	.xword 0x2061000000000002
	.xword 0xa06100200000000a
	.xword 0x206100a00000000c
	.xword 0x206100200000000d
	.xword 0x2061000000000006
	.xword 0xa06000a00000000b
	.xword 0x2060000000000004
	.xword 0xa06000a000000008
	.xword 0x206000e000000005
	.xword 0xa06100e000000001
	.xword 0x206100200000000f
	.xword 0x206100400000000c
	.xword 0x2061008000000004
	.xword 0xa061002000000002
	.xword 0x2061006000000003
	.xword 0xa06100c00000000f
	.xword 0xa06000600000000a
	.xword 0xa06000800000000f
	.xword 0xa06000e000000006
	.xword 0xa06000e000000009
	.xword 0xa06000c000000002
	.xword 0x206100a00000000a
	.xword 0x2061000000000003
	.xword 0xa060008000000002
	.xword 0xa06000c000000007
	.xword 0x206000c00000000d
	.xword 0x2060004000000006
	.xword 0x206100c000000009
	.xword 0x2060008000000000
	.xword 0xa061004000000009
	.xword 0x206100800000000a
	.xword 0x206100e00000000a
	.xword 0xa06100000000000f
	.xword 0xa06000800000000b
	.xword 0x206100800000000c
	.xword 0x2061002000000009
	.xword 0xa060004000000006
	.xword 0xa06100400000000d
	.xword 0x2060002000000003
	.xword 0x206000c000000009
	.xword 0x206000200000000d
	.xword 0x2061002000000005
	.xword 0x2061006000000007
	.xword 0xa06100400000000e
	.xword 0xa060002000000000
	.xword 0x206000800000000e
	.xword 0x2060008000000006
	.xword 0x2060006000000001
	.xword 0x206000a00000000e
	.xword 0x206100a000000006
.global _t1_crc_cwd_array
_t1_crc_cwd_array:
	.xword 0x4162032400000006
	.xword 0xc161012800000005
	.xword 0x416203040000000b
	.xword 0xc16301e800000008
	.xword 0x416203e400000000
	.xword 0x416301480000000a
	.xword 0xc16303240000000b
	.xword 0x4162014800000002
	.xword 0xc162034400000005
	.xword 0x4163012800000005
	.xword 0xc16003e400000008
	.xword 0x416001e80000000b
	.xword 0x416003840000000a
	.xword 0xc16201c800000009
	.xword 0x416203c40000000c
	.xword 0xc16201c800000008
	.xword 0xc16303440000000f
	.xword 0x416001880000000e
	.xword 0xc16203a400000001
	.xword 0x416301c800000006
	.xword 0x416203a400000001
	.xword 0xc16101e800000009
	.xword 0x416303a40000000c
	.xword 0x416101280000000d
	.xword 0x416303e40000000a
	.xword 0xc16001080000000a
	.xword 0x416003640000000f
	.xword 0x416001080000000f
	.xword 0xc163030400000004
	.xword 0x416001080000000f
	.xword 0xc16303440000000d
	.xword 0xc16101a800000001
	.xword 0xc163030400000007
	.xword 0xc16101a800000000
	.xword 0x4162032400000006
	.xword 0xc160016800000006
	.xword 0x4161036400000002
	.xword 0xc16201080000000b
	.xword 0xc16103640000000c
	.xword 0x416201880000000f
	.xword 0x4162038400000004
	.xword 0xc16001a800000000
	.xword 0x416003040000000b
	.xword 0x416101480000000c
	.xword 0x416003c40000000d
	.xword 0x416201a80000000e
	.xword 0x4163032400000004
	.xword 0x4161012800000003
	.xword 0x4160038400000001
	.xword 0x416201e80000000f
.global _t1_hash_cwd_array
_t1_hash_cwd_array:
    .xword 0x41600ec200000028
    .xword 0xc1620d610000003e
    .xword 0x41620f0100000003
    .xword 0x41620fe100000037
    .xword 0x416209e100000004
    .xword 0xc1600a210000002a
    .xword 0xc1600ec10000000a
    .xword 0xc16215e300000021
    .xword 0xc1600ea10000002f
    .xword 0x416207e20000000f
    .xword 0xc1600ce30000002c
    .xword 0x41620e4200000013
    .xword 0x416210e300000035
    .xword 0xc162048200000030
    .xword 0x416200e100000003
    .xword 0x416207e300000021
    .xword 0x41630f220000003c
    .xword 0x41600fa100000016
    .xword 0x41630fc100000008
    .xword 0xc16200e10000003e
    .xword 0xc16007820000000b
    .xword 0x41600b8100000038
    .xword 0xc1600a8100000012
    .xword 0xc163052100000039
    .xword 0xc160166300000030
    .xword 0xc160180300000036
    .xword 0xc162068100000037
    .xword 0xc163098200000021
    .xword 0xc16217a300000015
    .xword 0xc16101210000003e
    .xword 0x416200820000003e
    .xword 0x4161018100000001
    .xword 0xc1620c4200000019
    .xword 0xc1600a0100000018
    .xword 0xc16106810000001a
    .xword 0x4160030100000038
    .xword 0x416007c100000003
    .xword 0x41600a0100000024
    .xword 0x4160030200000010
    .xword 0x41631f630000001b
    .xword 0xc16005a100000022
    .xword 0x4162092100000012
    .xword 0xc162096100000002
    .xword 0xc162092100000018
    .xword 0x41620e6100000002
    .xword 0x416108a300000028
    .xword 0xc1630ac10000003b
    .xword 0x416001a200000022
    .xword 0x4163020100000022
    .xword 0xc16206410000000b
.global _t1_hmac_cwd_array
_t1_hmac_cwd_array:
    .xword 0x41620e29000f0015
    .xword 0xc1621a4b001f0030
    .xword 0x41610c45000f0019
    .xword 0x416303e9000f0006
    .xword 0xc16309c5000f0004
    .xword 0x41601a67001f000f
    .xword 0x416000e7001f0021
    .xword 0x416200c9000f001a
    .xword 0x41610585000f000d
    .xword 0xc1620049000f002a
    .xword 0xc1620909000f0017
    .xword 0x41610409000f0002
    .xword 0xc1610e65000f0028
    .xword 0xc16206a5000f002d
    .xword 0x4163032b001f0036
    .xword 0xc1630b29000f0009
    .xword 0x41620ac5000f0014
    .xword 0xc1610309000f002b
    .xword 0x416303c5000f003c
    .xword 0x416108cb001f003a
    .xword 0x41610ba5000f0033
    .xword 0x416105e5000f0004
    .xword 0xc1620d49000f0013
    .xword 0x4160180b001f001e
    .xword 0xc16316e7001f0008
    .xword 0xc1610d45000f0020
    .xword 0x41610365000f0033
    .xword 0x41600529000f0011
    .xword 0xc1600a860013002e
    .xword 0xc1620ea9000f003e
    .xword 0x41620409000f003f
    .xword 0xc1631b0b001f002a
    .xword 0x4160052a00130012
    .xword 0x41620049000f0036
    .xword 0xc16307e9000f0002
    .xword 0x416108a9000f0022
    .xword 0xc1620449000f002d
    .xword 0x41600ec5000f0033
    .xword 0x4163028a0013002b
    .xword 0xc16106c9000f0031
    .xword 0xc16304e7001f0033
    .xword 0xc1630fc9000f001c
    .xword 0xc1620969000f0012
    .xword 0xc1630f89000f003a
    .xword 0x41620ea9000f002a
    .xword 0x41630ea5000f001a
    .xword 0x41611027001f0018
    .xword 0xc161010600130032
    .xword 0x4162028600130019
    .xword 0xc1600d6a0013001c
.global _t1_rc4_cwd_array
_t1_rc4_cwd_array:
	.xword 0x40e0008000000005
	.xword 0x40e1004004000001
	.xword 0xc0e000a00000000f
	.xword 0x40e000c004000004
	.xword 0xc0e000200400000a
	.xword 0xc0e0006000000003
	.xword 0xc0e100200000000d
	.xword 0x40e000c00400000c
	.xword 0xc0e0002000000007
	.xword 0x40e0006000000005
	.xword 0x40e100600400000e
	.xword 0x40e000400400000b
	.xword 0xc0e000c00000000f
	.xword 0xc0e0004004000006
	.xword 0xc0e0008004000006
	.xword 0x40e000e004000003
	.xword 0xc0e000800000000f
	.xword 0x40e100600400000e
	.xword 0x40e0002004000003
	.xword 0xc0e100e004000006
	.xword 0x40e100c004000001
	.xword 0x40e100c00000000a
	.xword 0xc0e0000000000008
	.xword 0xc0e000e004000004
	.xword 0x40e100e000000005
	.xword 0xc0e000a00400000e
	.xword 0xc0e0000000000001
	.xword 0x40e1000004000006
	.xword 0xc0e1006000000005
	.xword 0x40e000600000000f
	.xword 0x40e000c000000003
	.xword 0xc0e0000004000002
	.xword 0xc0e0008000000005
	.xword 0xc0e100200000000b
	.xword 0x40e100e000000005
	.xword 0x40e0000004000007
	.xword 0x40e0000000000004
	.xword 0x40e0008004000008
	.xword 0xc0e100a000000002
	.xword 0xc0e0002004000003
	.xword 0xc0e1004000000003
	.xword 0xc0e100a000000009
	.xword 0xc0e0006000000007
	.xword 0xc0e100c00400000e
	.xword 0xc0e1006000000005
	.xword 0xc0e0000000000003
	.xword 0x40e1008000000003
	.xword 0xc0e1000000000000
	.xword 0x40e1004004000008
	.xword 0x40e100e00400000c
.global _t1_sslkey_cwd_array
_t1_sslkey_cwd_array:
	.xword 0x1060002000000000, 0
	.xword 0x906000c000000000, 0
	.xword 0x10602e8000000000, 0
	.xword 0x90602c2000000000, 0
	.xword 0x1060324000000000, 0
	.xword 0x106026e000000000, 0
	.xword 0x106033e000000000, 0
	.xword 0x906005c000000000, 0
	.xword 0x9060140000000000, 0
	.xword 0x9060070000000000, 0
	.xword 0x9060216000000000, 0
	.xword 0x106022a000000000, 0
	.xword 0x90600b6000000000, 0
	.xword 0x10601fe000000000, 0
	.xword 0x106008e000000000, 0
	.xword 0x9060130000000000, 0
	.xword 0x1060056000000000, 0
	.xword 0x9060046000000000, 0
	.xword 0x1060376000000000, 0
	.xword 0x10603c0000000000, 0
	.xword 0x106007c000000000, 0
	.xword 0x1060078000000000, 0
	.xword 0x1060128000000000, 0
	.xword 0x9060224000000000, 0
	.xword 0x106015a000000000, 0
	.xword 0x9060294000000000, 0
	.xword 0x10600c0000000000, 0
	.xword 0x1060124000000000, 0
	.xword 0x1060368000000000, 0
	.xword 0x9060206000000000, 0
	.xword 0x1060082000000000, 0
	.xword 0x1060210000000000, 0
	.xword 0x1060074000000000, 0
	.xword 0x10603fe000000000, 0
	.xword 0x9060304000000000, 0
	.xword 0x9060128000000000, 0
	.xword 0x106031a000000000, 0
	.xword 0x90601f8000000000, 0
	.xword 0x9060328000000000, 0
	.xword 0x9060280000000000, 0
	.xword 0x106001a000000000, 0
	.xword 0x1060294000000000, 0
	.xword 0x906015a000000000, 0
	.xword 0x1060232000000000, 0
	.xword 0x906033e000000000, 0
	.xword 0x906018c000000000, 0
	.xword 0x10602c8000000000, 0
	.xword 0x9060378000000000, 0
	.xword 0x106028e000000000, 0
	.xword 0x906035c000000000, 0
_t1_aes_key_array:
	.xword 0x83f54d07909c5e80
	.xword 0x4c74b8b7fc672469
	.xword 0xf9de5c657cd30eb4
	.xword 0x026133fb63024c55
	.xword 0x5e061462c77fd2e2
	.xword 0x95a63ad88170233f
	.xword 0xac849daf3093e3f2
	.xword 0x91dd4268667ef5d1
	.xword 0xad246bdd92be47bb
	.xword 0x7f59b4605e5272d3
	.xword 0x504c075737d5c87c
	.xword 0xe894ab6f592a36a0
	.xword 0x06b19a37a1ba7784
	.xword 0x420cb4e92f0fa677
	.xword 0x429c30ebdde259f3
	.xword 0xc248c37a5465bc7c
	.xword 0xc1aae6a3cb92e85e
	.xword 0x3ede7e9b6189a595
	.xword 0x5a49d3e7f3ed60bb
	.xword 0xc90c237dac93804a
	.xword 0x0accbac28ad11d48
	.xword 0xeda9eeaabad4d0e8
	.xword 0x518290a58d99f05c
	.xword 0x318db8f338e2cd7a
	.xword 0x14d134073cbfe44a
	.xword 0xd2f739fc5a3c2ae6
	.xword 0x36a9d1bde7a5258e
	.xword 0x65e9f81ee85b6247
	.xword 0xc38635dc384e7fc5
	.xword 0xedaaf99614b8fa49
	.xword 0xd0edf2b7030eead9
	.xword 0x06e574bce6635e8a
	.xword 0x8f019d982e9ac206
	.xword 0xdf5e9527443bc18a
	.xword 0xee742d555110b763
	.xword 0x65dbe8076fb1a65a
	.xword 0x34313b3560f503be
	.xword 0xc31a096398f7e326
	.xword 0x8f0f9d374cf0f2b3
	.xword 0xe1e49b932b71b83d
	.xword 0xb1e11b9ac5af8c10
	.xword 0x2864e7db1c93e65e
	.xword 0xfd1f6db2063c1193
	.xword 0xbf8aced24781cc16
	.xword 0xc6b0e1b603f5c85d
	.xword 0x37b3d866e22e420d
	.xword 0x9459d0aab1945450
	.xword 0x07a182bd03438c0c
	.xword 0xeae292aee4f0abae
	.xword 0x26c481762ad94591
	.xword 0x10f839c6cc25b92a
	.xword 0x99854ff7754dbad6
	.xword 0xfc2c89563ff345d1
	.xword 0x175b5dbacab83a98
	.xword 0x881a4ba76343ab54
	.xword 0x2c951959581c650b
	.xword 0xb86a404a24e6a5ae
	.xword 0x1da951f55a09cb81
	.xword 0xb64500a76731bd2c
	.xword 0xbad5992a81cdc3dc
	.xword 0x43d295479912cea6
	.xword 0xb762f64c98c502e8
	.xword 0xdbde285e2ef71388
	.xword 0xe60dfd525ba67c33
	.xword 0x4f7d3ccbac9a78aa
	.xword 0x5fc4181f651230b6
	.xword 0x13c3883da96e361c
	.xword 0x9ab3cb214e8aee69
	.xword 0x4dd5d1113fc2cb72
	.xword 0x49221a0bb8a79e5e
	.xword 0xb288442b954e5fc0
	.xword 0x5a1e47ad8c5db682
	.xword 0xf88509a7d8878048
	.xword 0xef00d304594ecc94
	.xword 0x4cee11bff2721daf
	.xword 0x1775482ef7c2e214
	.xword 0xbf86fa7759b2ce7a
	.xword 0xbee68356b5b1bb16
	.xword 0x3c162ac6643f469b
	.xword 0x32fa42fa195f8cef
	.xword 0x28d5aaf7b5f4ab6d
	.xword 0x636f72710326fae9
	.xword 0xdfc46449c402ff64
	.xword 0x1487e3f5a7d53ace
	.xword 0xacd2419b07808654
	.xword 0xec88b72c1ee79449
_t1_aes_iv_array:
	.xword 0x5b9b9b3d305f73a6
	.xword 0xf00330fd19db230b
	.xword 0xe2a98661f624d558
	.xword 0x837c2da5b7469eb0
	.xword 0x6e32d995ba466205
	.xword 0xe047b7170dd1973a
	.xword 0x965743d26e324505
	.xword 0xd43efd7350df3383
	.xword 0xcce801af110752fe
	.xword 0x274a310d2e1de6be
	.xword 0x35229f1bb5acb6d2
	.xword 0xe122b9d8dc832f15
	.xword 0x43a76660d5b2945b
	.xword 0xc3a5e85ec953a679
	.xword 0x6d5859bfeb3a2162
	.xword 0x06d6b97f365dfbac
	.xword 0x85ef265d77db888e
	.xword 0x96c9933921620f3d
	.xword 0x2ffbd37440435f44
	.xword 0x68e45bf8413e65ca
	.xword 0xbccbf2550c2bc32d
	.xword 0x1514cedd249680d7
	.xword 0x8f80dee828ae705c
	.xword 0x07ab6e104c37941a
	.xword 0x123cea3bbc943c42
	.xword 0x712e67a8b59a3613
	.xword 0xda6dd6f37dfbd9e7
	.xword 0xe66e049766c798f5
	.xword 0x3e175db5baeac67d
	.xword 0x1a1a0bb3f7a59498
	.xword 0xf4c254daaf37b590
	.xword 0xcb5f92e1a3bdf8ca
	.xword 0x0e3c077b8eaae2f6
	.xword 0x8f59ed32d0a43086
	.xword 0xcf97b16e395e12a5
	.xword 0xdaff7fbe97efe8e8
	.xword 0xe59293fba92988ea
	.xword 0x82a95b19e16b1e85
	.xword 0x5a70a9743873b528
	.xword 0x38335fa73d6d219c
	.xword 0xa5da25adc050e952
	.xword 0x4849909897b941c4
	.xword 0xd725311c5a00f3d9
	.xword 0x4348e2bbe909d2b7
	.xword 0x4160e50e76d29d72
	.xword 0xc599bdfb9533a399
	.xword 0x1a0bf257c794504f
	.xword 0x6b51d727fb2f96b6
	.xword 0x824980c3042be821
	.xword 0xf18d964759b8e243
	.xword 0x46a845e07a2c396e
	.xword 0xf4cd617d370869e0
	.xword 0xd48510b45881b0e9
	.xword 0x1fded7aa2e1eef13
	.xword 0x5dccd52f19c96e93
	.xword 0xb5be7c4c16ba09b9
	.xword 0xcfb776e612273c90
	.xword 0x1b74a55cc163b10a
	.xword 0xf1d781b547ebc704
	.xword 0x445b678577150211
	.xword 0x6dce01b23651a025
	.xword 0x32d618210fd45b09
	.xword 0x8a7d0a7af5e65d65
	.xword 0x1b09d7dba18248e9
	.xword 0xd88861f79c4b689c
	.xword 0x3e08e33225cc9c61
	.xword 0xdb6a2e907de4295b
	.xword 0x7f90a176653740d7
	.xword 0x6cbb69112581cde6
	.xword 0x5b5dfe320c706327
	.xword 0x0a855e49548fa37e
	.xword 0x3eea3c952b415528
	.xword 0x4b9bd76acd18b360
	.xword 0x89733e66051fb614
	.xword 0x90c39436ddeb0e44
	.xword 0x4b500fb0a53af87c
	.xword 0x17a58e2ee99a70b7
	.xword 0xaffcf4caf8520a7a
	.xword 0x607688232154d4f5
	.xword 0xde693d1e1d74adae
	.xword 0x60f4896341932e17
	.xword 0x8030085120ef87d6
	.xword 0xbb3a3a7ddf4ba3b2
	.xword 0xfd8f7eef8e90cba4
	.xword 0x14be985cdfb14d41
	.xword 0x1bc052b96f040333
	.xword 0xd2e588c1f53cc639
	.xword 0x2a483d8d610978da
	.xword 0xf0a25d97d31f2609
	.xword 0xd888a188f915bc4c
	.xword 0xa97147786cb47e07
	.xword 0x70d699a2684459aa
	.xword 0x8ba1c9e9eadcdc3b
	.xword 0xf046ebafd5cd0012
	.xword 0xf8821dff6265e48e
	.xword 0xa298a09b59de5d8a
	.xword 0x64e675fdd38c019b
	.xword 0xd9e7d3dafb22e1f9
	.xword 0x140c974409d3d68b
	.xword 0x37b10212005c2e67
	.xword 0xc19a5975941ea812
	.xword 0x3548cff061716714
	.xword 0xced3b122ba6be5b7
	.xword 0xe8981b2122fabef7
	.xword 0x1c69de2e197273a8
	.xword 0x111bfdfa7357d6df
	.xword 0xeb20d42d186d5994
	.xword 0x954aa77936d2039c
	.xword 0x60697e288194b3fd
	.xword 0xd5f204040d21580b
	.xword 0x04f799b1281e9810
	.xword 0xc8e9d534316ae6d3
	.xword 0xb0c21020a1e2a35a
	.xword 0xe051d6bd3eaf50fb
	.xword 0x8061e6a0c70b9183
	.xword 0x4907e037d91388a0
	.xword 0x7b0a4d3f3ad27f06
	.xword 0xf7764a732dc914d9
	.xword 0xf2e150df5da17028
	.xword 0xb3666220c4d121fd
	.xword 0xb3d5fe34e15fdd89
	.xword 0x72cfa88f9ff77bf6
	.xword 0x008594a611bf33b0
	.xword 0x7f926621114cc82d
	.xword 0xd8f237d74f0ee32b
	.xword 0x6c84c00621b9a9ad
	.xword 0xb73e96f489dd27a5
	.xword 0x0de81e2945b24aff
	.xword 0xe70f1d61b91acd91
	.xword 0x5ad2958761fe3893
	.xword 0xed03272b445a1ab2
	.xword 0x195a4922ba8987f8
	.xword 0x874a6e069f057262
	.xword 0xc2914c4aee2458ee
	.xword 0x79d49ffe4094a3c2
	.xword 0x1e0da38d0f57cd32
	.xword 0x44528b206abac357
	.xword 0x2d4a2b155c858ecf
	.xword 0xd6e9147b11481a75
	.xword 0x1e96315e21d2c8d1
	.xword 0xe9a7cbc79e9deff3
	.xword 0xebf9f692e94f2b12
	.xword 0x6024199c70ac1f4d
	.xword 0x47e5d744801225ab
	.xword 0x123165172c83fba9
	.xword 0x466695ca2a018d72
	.xword 0x7a732433885038ab
	.xword 0x454d68dfc13d50e1
	.xword 0x32993b731f20ee0a
	.xword 0x4423eb7a24c5ae88
_t1_aes_alignment_array:
	.xword 15
	.xword 0
	.xword 15
	.xword 7
	.xword 10
	.xword 12
	.xword 4
	.xword 4
	.xword 2
	.xword 8
	.xword 4
	.xword 15
	.xword 8
	.xword 5
	.xword 8
	.xword 5
	.xword 6
	.xword 7
	.xword 11
	.xword 12
	.xword 7
	.xword 12
	.xword 5
	.xword 0
	.xword 10
	.xword 12
	.xword 4
	.xword 0
	.xword 0
	.xword 4
	.xword 4
	.xword 3
	.xword 13
	.xword 0
	.xword 14
	.xword 8
	.xword 14
	.xword 10
	.xword 0
	.xword 3
	.xword 3
	.xword 13
	.xword 14
	.xword 6
	.xword 2
	.xword 12
	.xword 7
	.xword 15
	.xword 13
	.xword 4
	.xword 4
	.xword 13
	.xword 0
	.xword 6
	.xword 0
	.xword 13
	.xword 1
	.xword 1
	.xword 14
	.xword 9
	.xword 0
	.xword 14
	.xword 7
	.xword 13
	.xword 0
	.xword 7
	.xword 10
	.xword 12
	.xword 4
	.xword 12
	.xword 15
	.xword 1
	.xword 11
	.xword 6
	.xword 7
	.xword 6
	.xword 12
	.xword 2
	.xword 15
	.xword 5
	.xword 11
	.xword 2
	.xword 1
	.xword 10
	.xword 6
	.xword 13
	.xword 5
	.xword 12
	.xword 6
	.xword 0
	.xword 0
	.xword 9
	.xword 12
	.xword 1
	.xword 7
	.xword 8
	.xword 0
	.xword 13
	.xword 2
	.xword 13
	.xword 2
	.xword 3
	.xword 8
	.xword 11
	.xword 4
	.xword 7
	.xword 1
	.xword 15
	.xword 9
	.xword 5
	.xword 7
	.xword 14
	.xword 12
	.xword 9
	.xword 5
	.xword 7
	.xword 2
	.xword 10
	.xword 10
	.xword 9
	.xword 6
	.xword 12
	.xword 15
	.xword 8
	.xword 11
	.xword 15
	.xword 1
	.xword 5
	.xword 2
	.xword 12
	.xword 14
	.xword 11
	.xword 0
	.xword 1
	.xword 1
	.xword 5
	.xword 11
	.xword 12
	.xword 7
	.xword 2
	.xword 10
	.xword 2
	.xword 14
	.xword 3
	.xword 8
	.xword 13
	.xword 11
	.xword 14
	.xword 13
	.xword 11
	.xword 13
	.xword 1
	.xword 11
	.xword 11
	.xword 6
	.xword 10
	.xword 5
	.xword 11
	.xword 6
	.xword 14
	.xword 1
	.xword 0
	.xword 0
	.xword 1
	.xword 10
	.xword 8
	.xword 3
	.xword 4
	.xword 0
	.xword 11
	.xword 10
	.xword 7
	.xword 14
	.xword 3
	.xword 3
	.xword 12
	.xword 7
	.xword 2
	.xword 5
	.xword 12
	.xword 12
	.xword 4
	.xword 4
	.xword 13
	.xword 2
	.xword 4
	.xword 4
	.xword 6
	.xword 9
	.xword 2
	.xword 5
	.xword 8
	.xword 4
	.xword 13
	.xword 3
	.xword 7
	.xword 1
	.xword 12
	.xword 15
	.xword 6
	.xword 9
	.xword 2
	.xword 9
	.xword 4
	.xword 3
	.xword 6
	.xword 2
	.xword 9
	.xword 7
	.xword 2
	.xword 12
	.xword 0
	.xword 10
	.xword 12
	.xword 4
	.xword 12
	.xword 10
	.xword 14
	.xword 13
	.xword 1
	.xword 10
	.xword 1
	.xword 8
	.xword 0
	.xword 12
	.xword 11
	.xword 11
	.xword 10
	.xword 12
	.xword 6
	.xword 14
	.xword 4
	.xword 12
	.xword 2
	.xword 11
	.xword 14
	.xword 10
	.xword 0
	.xword 0
	.xword 14
	.xword 4
	.xword 4
	.xword 11
	.xword 10
	.xword 12
	.xword 4
	.xword 10
	.xword 11
	.xword 7
	.xword 12
	.xword 10
	.xword 7
	.xword 7
	.xword 10
	.xword 10
	.xword 13
	.xword 12
	.xword 5
	.xword 13
	.xword 12
	.xword 3
	.xword 5
	.xword 13
	.xword 2
	.xword 15
	.xword 3
	.xword 0
	.xword 15
	.xword 11
	.xword 6
	.xword 1
	.xword 11
	.xword 15
	.xword 0
	.xword 14
	.xword 13
	.xword 5
	.xword 7
	.xword 13
	.xword 2
	.xword 11
	.xword 1
	.xword 2
	.xword 6
	.xword 6
	.xword 12
	.xword 4
	.xword 6
	.xword 1
	.xword 3
	.xword 12
	.xword 15
	.xword 0
	.xword 2
	.xword 6
	.xword 2
	.xword 13
	.xword 10
	.xword 10
	.xword 0
	.xword 3
	.xword 7
	.xword 5
	.xword 10
	.xword 15
	.xword 12
	.xword 5
	.xword 6
	.xword 8
	.xword 15
	.xword 9
	.xword 1
	.xword 9
	.xword 3
	.xword 2
	.xword 8
	.xword 10
	.xword 1
	.xword 14
	.xword 9
	.xword 2
	.xword 1
	.xword 5
	.xword 12
	.xword 5
	.xword 4
	.xword 15
	.xword 3
	.xword 7
	.xword 2
	.xword 7
	.xword 0
	.xword 8
	.xword 7
	.xword 10
	.xword 11
	.xword 15
	.xword 12
	.xword 4
	.xword 1
	.xword 6
	.xword 11
	.xword 5
	.xword 2
	.xword 5
	.xword 8
	.xword 8
	.xword 11
	.xword 15
	.xword 8
_t1_aes_src:
	.xword 0xf22148dd1236ddce
	.xword 0x10c6512af46306ee
	.xword 0xeeab51884fbe9513
	.xword 0x8ed0fffb7fa06130
	.xword 0xf09209cb50d8ff99
	.xword 0xe6c3de9deaa7c016
	.xword 0x7300d9283a9cc76d
	.xword 0xa379bf66d6f9b1c2
	.xword 0xe2665893f01ce35b
	.xword 0x0ab179182bd92046
	.xword 0x69aa6a8e6c1a8879
	.xword 0xb6f42c5aa0eb3f44
	.xword 0x42a89b37a0c32217
	.xword 0x06ec1f984d7a5dda
	.xword 0xd63f72a30bfee3a3
	.xword 0xe107c4bc40a801a7
	.xword 0x02c54ba146edad6b
	.xword 0x729afbf753e611c9
	.xword 0x1c125c0e0ef9ff86
	.xword 0xdb4ea083845795b8
	.xword 0xf7d4a3e96abf47a0
	.xword 0xed21fcd4e52ba08a
	.xword 0x3d9cb9092a8509c2
	.xword 0xd705d7324c9f6c47
	.xword 0x04f12bccc88afef3
	.xword 0x76424122f09a04de
	.xword 0xc387a118b4e85c0d
	.xword 0x9fb73262268cac6b
	.xword 0x47bdcb558fa07798
	.xword 0xc59454e1ce05a284
	.xword 0xba92bc1c16e63f6c
	.xword 0x30dd8dcc958068c9
	.xword 0xb74e48e2969205eb
	.xword 0xdf0c083497c6a9dc
	.xword 0x400bcb162ae7e261
	.xword 0xd62c5a4d97dca3ea
	.xword 0x838ae876b8e09196
	.xword 0xc77205b41f6cf0bc
	.xword 0x6bce4eb99575937f
	.xword 0xfb37dc02d70233b2
	.xword 0x3432178007be4d19
	.xword 0x91ef0ea574b2ba50
	.xword 0x807390133610cef9
	.xword 0xe187b24cb6bfea28
	.xword 0x28b2f5b07769d5df
	.xword 0x4b725e6663683708
	.xword 0xddf39fc288752850
	.xword 0x767116f14976b096
	.xword 0xbeaac5c3f6362d8e
	.xword 0x2815c1a406a13763
	.xword 0x178a53e4fdbd558a
	.xword 0x2f50b35e4bc4a524
	.xword 0x40c8156fd5152e60
	.xword 0x1cf6865a796fb794
	.xword 0x3338e3bc3d3234f2
	.xword 0xe9d05525607108b7
	.xword 0x6bd6f5975f89f218
	.xword 0xb9772bc07a56a9f8
	.xword 0x7f9905019ed76569
	.xword 0x6e358ce903f88532
	.xword 0xf564ced80b513c1f
	.xword 0x7e3f9e8d5b310679
	.xword 0xf73e15840e75b68d
	.xword 0xfb94cf8873006130
	.xword 0xc6dddb8134e8adfb
	.xword 0x9af357070678a7da
	.xword 0x86104a8093fce4f6
	.xword 0x9fad18e0304e8921
	.xword 0x9f08316bfb93fea1
	.xword 0x7e3ccc251e20980f
	.xword 0x86412d5c700818fd
	.xword 0xef3e1ebbf647d160
	.xword 0x5dbb27b89e283fdf
	.xword 0xb8dea7b0f4f59d26
	.xword 0xab789cefb21198ec
	.xword 0xa0560b3b67c6c86a
	.xword 0x431c6e36df41bfca
	.xword 0x81ed5b97bc972034
	.xword 0x4fcab4ed831fea89
	.xword 0x0c6368292206d786
	.xword 0x8d77cf4f99071462
	.xword 0x0c2abdaba0c5ed64
	.xword 0xc3530628af05fb0d
	.xword 0x51c6d5876e852286
	.xword 0xbd64cb5255387081
	.xword 0xcdb5edd083003b79
	.xword 0xd0d5d1a3855110c7
	.xword 0x153186a50614efa0
	.xword 0x81d122dc6f6646cf
	.xword 0xa213a8aaef5422e8
	.xword 0x4086c58deee8c325
	.xword 0x17224e6696b76ebc
	.xword 0x2d58f92f6696bcff
	.xword 0x24e88b09b839b188
	.xword 0xa62cd7244d1060af
	.xword 0x912a64dff977af91
	.xword 0x2a90b0d71b5349e0
	.xword 0xd5f53d49cb00200e
	.xword 0xcd59d6a7977ef027
	.xword 0x592368915c6ca63f
	.xword 0x2f0a4175693d461e
	.xword 0x89c0187008bc4461
	.xword 0x5e84355aa219394a
	.xword 0xccc45abc03ad6667
	.xword 0xbc72c1377913ec83
	.xword 0x9939c8ab0fdd6b58
	.xword 0x82eb4e561a98f364
	.xword 0x20380237fadf7ac0
	.xword 0x9ccba1889f3571e8
	.xword 0x1918d149dff55440
	.xword 0x190f63f1aa7ca346
	.xword 0x74a92658f8eaed5a
	.xword 0xd43d6e5be85aa24e
	.xword 0xd584a61296beaee3
	.xword 0x27a6cf36c8482a1b
	.xword 0x1c8f3fa18894f488
	.xword 0x359e104007abf94f
	.xword 0x66c0f1e7b4d1bbcb
	.xword 0x805e910d59d365a4
	.xword 0xfd94c878530976a6
	.xword 0x3fbe0ea7ba61dd7f
	.xword 0x1b6d9d2fa05e42ec
	.xword 0xfff46653eed6618f
	.xword 0xac20ddfcf22f48b2
	.xword 0xedb4f4883329d89c
	.xword 0x1d9d57e0c12bd8f9
	.xword 0xab5444e762f178b5
	.xword 0x22df89e7bfffed15
	.xword 0x8f9c10f36d6eece9
	.xword 0x4350bc96273da04a
	.xword 0x5248f03214cb5e3d
	.xword 0x307b98bce0f1b66e
	.xword 0x56ec77a385ec9131
	.xword 0x59d129c4eefb62de
	.xword 0x71627179f510a9a3
	.xword 0x4a1b42b406db5762
	.xword 0x3aca4b8548608106
	.xword 0x8234e872e7b1825b
	.xword 0xca66a451cba87f9b
	.xword 0xbdb87250bc13ee50
	.xword 0x59feeb9fdd84074d
	.xword 0xdbfa5062b7c214c1
	.xword 0x452c6a29cbb8ce19
	.xword 0x1e408dabcdbcc62f
	.xword 0x49dbdf56db7a1092
	.xword 0xc6982377760dae88
	.xword 0x78abe104003f57e8
	.xword 0x923548ee3a676fe0
	.xword 0x8f76c810b5c70ee8
	.xword 0x1fdc0d78ed176b8a
	.xword 0x3fb5f989b75681dd
	.xword 0xed2f9d5a8923fade
	.xword 0x1d17485d42a2e312
	.xword 0xcf31c7a0d4cde9b4
	.xword 0x3c724ed295c71b34
	.xword 0xd7d7550e5047f2d1
	.xword 0x4c5c03cb0c6a2e65
	.xword 0xfe425d60a4a614c5
	.xword 0xee356bcf0629b861
	.xword 0xd03b7f79d8f6c6b7
	.xword 0xfa44c12d6e14b74c
	.xword 0x07e9c7877190d7ae
	.xword 0x9a6759113279660d
	.xword 0x3ab232b4486fc69b
	.xword 0xb1a1d607962730cd
	.xword 0x9cc7939e04a131d1
	.xword 0x5e6ba4293ca27fc9
	.xword 0x56c6c65d56b2e1da
	.xword 0x0db60652f4259950
	.xword 0x18588f383bafc677
	.xword 0x53ef3e19fcfda9b6
	.xword 0x6e0081f7c2a28641
	.xword 0xb5c18efd4485080e
	.xword 0x310126057eeccc55
	.xword 0x35f251ebb1cb5e7e
	.xword 0xdf9608326cfe6fa8
	.xword 0xa84a3e08ca6acd55
	.xword 0xf7bec5314c01cd73
	.xword 0xcfe3e684ac0c23e5
	.xword 0xff6951948e2a64c4
	.xword 0x4f794dc71567745d
	.xword 0xed147f12f10f4145
	.xword 0x206b17a8ea661c7d
	.xword 0xc541b42586379fda
	.xword 0x2d5048b8e9b3e42d
	.xword 0x1f0ed009ea582d6a
	.xword 0xce34abe7255c35d4
	.xword 0x1ea1a58e2800bb9a
	.xword 0x42bf0c1219ab9777
	.xword 0x4bd949eb491c0daa
	.xword 0xb9146b5d294d3688
	.xword 0x139341260166dd87
	.xword 0xcf00227bd4d01f5c
	.xword 0xd99d5ba468b74e48
	.xword 0x3569ee84fb1b8eb3
	.xword 0x72bdda3cbd6c7b2c
	.xword 0x0740ce19354ad900
	.xword 0x63ff9da76001e5f6
	.xword 0xbb8db6b261a6b9c3
	.xword 0xba86483318ccb3aa
	.xword 0xdea6aa3268c437c1
	.xword 0xe82f8021136151a0
	.xword 0xdaa1d662cfa1f965
	.xword 0x6ed68596cec13b89
	.xword 0xf2aaa267990a80af
	.xword 0xec9b1cb12199cc6b
	.xword 0x931b96aae8afe53b
	.xword 0x99ab9ec05d58cb22
	.xword 0xd33e0fbe90ba67ff
	.xword 0x0da26f3aba50ea55
	.xword 0x32cd3363761301ca
	.xword 0x392553f1d8e417bb
	.xword 0x985f891e913c07f0
	.xword 0xa3aab68b1e501486
	.xword 0x39ac577f043bcb77
	.xword 0xb2d5e796b6d4b5b0
	.xword 0x2422d6c35b499560
	.xword 0xd38761c1a2ffe8e7
	.xword 0x6ed70674f7e1ebc6
	.xword 0xda93c0927d147c5f
	.xword 0x66574643ce3e65de
	.xword 0x798c7e6307f34fdf
	.xword 0x1beaa1fa62388c68
	.xword 0xeb12123bdbb373df
	.xword 0x2e3017342daece42
	.xword 0x8ff7e8e3b2d10115
	.xword 0xf81c6013079aa33d
	.xword 0xb916f08c7bc6c03c
	.xword 0x02363c701f1d43d1
	.xword 0x5bc27697a1f5436c
	.xword 0xd54a272f651a8a9a
	.xword 0xfa0deaba6876899a
	.xword 0xdf2ebdd5ca19cd62
	.xword 0x4c5d0e87951b713c
	.xword 0xb010c0b48b470bd0
	.xword 0x433717ea3b8a6ae6
	.xword 0x33d896078a73cc8d
	.xword 0x8b34958cbc729c43
	.xword 0xf9a55cd06d78fe26
	.xword 0x5e0278ddd98498cf
	.xword 0xa220c962986c3e84
	.xword 0xe666b37f29aa5b5a
	.xword 0x84c844f6b0da5031
	.xword 0x8961b06085702720
	.xword 0x3e9148e3dfb7727b
	.xword 0xd370fe333504c894
	.xword 0xd5b8a53ffee2aa17
	.xword 0x65e7b029fb0188d0
	.xword 0x09bd00bb4c597a5a
	.xword 0xe510e4143dad6704
	.xword 0x6971a1e714a8bc18
	.xword 0x1078d28ade5b682e
	.xword 0x0c6aecdef84cc478
	.xword 0xa25c40c4fd69267d
	.xword 0xcbba5b27d68c4b3a
	.xword 0x94cef691dc6554e5
	.xword 0x9733a94045d54a69
	.xword 0xa137deee9e808b90
	.xword 0xea1c651824db4af5
	.xword 0xbc4f4aa76022be1e
	.xword 0x672a2359e0c745c2
	.xword 0xb524bf9283a878af
	.xword 0x053a4d92cc8e8baa
	.xword 0xe3cfdcb541f4ed9a
	.xword 0xebbcf0c6039829d5
	.xword 0x008e3d3828138fc2
	.xword 0xf88b9697c8ecfad0
	.xword 0xef83d5d8bc816481
	.xword 0xd31291090dbeb5ca
	.xword 0x1702d4bf18b0d7e5
	.xword 0x3b9af552a878c27b
	.xword 0xe3c22e7f3526445a
	.xword 0xd3a175d3e8c16924
	.xword 0x4b8b787fecf6fdcb
	.xword 0xae70ca720195ac0b
	.xword 0xcd905dad29682edc
	.xword 0x333b25150f26a7a1
	.xword 0x15ad8b59e02c90d4
	.xword 0xa8c0ff023836dda3
	.xword 0x2574eb5cf3c6182d
	.xword 0x9d09b8c589bda95c
	.xword 0x059731a524c9599f
	.xword 0xf087210502c5393b
	.xword 0xa0f80d0e582561fc
	.xword 0x69749901c2c7533c
	.xword 0x828507a86940bd84
	.xword 0x52f8291e69e11e9a
	.xword 0xbb040100503b5901
	.xword 0xaaf86d99deaf9936
	.xword 0x611f9cbfb4489091
	.xword 0xa72fef9d94131044
	.xword 0xa9c54727ce58e451
	.xword 0x52acf43e7347712a
	.xword 0xabce7e7e38a88a1c
	.xword 0x23b2d79245a5bcf3
	.xword 0xa43d1447c60ba267
	.xword 0xdd520a0e523b85ee
	.xword 0xfdd1c5c0fdd7984b
	.xword 0x4f13fead9adec5fd
	.xword 0xa26eac608fd2b5e9
	.xword 0xb801ed04d7dbad39
	.xword 0x9b96a50778f13e0c
	.xword 0x4062d3f6c37dac9c
	.xword 0x29e46d52623e4d68
	.xword 0x3723a3448d15ebee
	.xword 0x61939edba00c178d
	.xword 0x9221a1a810f9f6c1
	.xword 0x03f657a1e6431494
	.xword 0x24816cac11d26d2f
	.xword 0xcf1c551aaf5cf293
_t1_aes_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_aes_auth_key:
	.xword 0x5ded12d50958106e
	.xword 0x0ee220b322aa56df
	.xword 0xb4232bba83eec68e
	.xword 0xa6e727712b1e5d83
	.xword 0xfae304e8108036df
	.xword 0xef260a9cafa7a400
	.xword 0xb868619e9ed6d5e9
	.xword 0xc4fa49d9f180bb90
	.xword 0x4ce27f93db94aed5
	.xword 0xed2ad9cfac049a59
	.xword 0x713c01f50804ea9a
	.xword 0x2f670fe3fce099e0
	.xword 0x304b60b0ac6821d1
	.xword 0xff52ebd2c5903d5b
	.xword 0x3a8847b5d008e0d8
	.xword 0xd21f5f1ea3efb82f
	.xword 0xc8ed46e1d328353b
	.xword 0xa3c6df7b910bc7f3
	.xword 0x6fb294fd73c22a28
	.xword 0x7eb02f36ffc20a9f
	.xword 0xa6317688457b305d
	.xword 0x8769013321a58f37
	.xword 0x823c84382062414f
	.xword 0xcb54b335e9c919b9
	.xword 0x9cabf4ada5026bfd
	.xword 0x271576261c8095c0
	.xword 0xefb45147ad7b0bf4
	.xword 0x54aa0da4cacc066d
	.xword 0x58bfb7a8fd01e81b
	.xword 0xaee205f6af171e19
	.xword 0xab999e3965803998
	.xword 0x30fc7d49a136bed2
	.xword 0xea2da1d30c89971b
	.xword 0xe549ec99017ac56a
	.xword 0x667c767cc765e09a
	.xword 0xaeb8bf35850e913c
	.xword 0xf6a28f35e297221a
	.xword 0x1592f9dd955bf04a
	.xword 0x4e0251826bdac1f1
	.xword 0x761e7ee048d36be0
	.xword 0x5b890c7e002ce626
	.xword 0xfa8630878e483f13
	.xword 0x8f8550e6c0225ed0
	.xword 0xcdc5f7a275ad1ba5
	.xword 0xd7d8146bd33f6e7e
	.xword 0x8a79cabe124db4d4
	.xword 0xc765ba2f6e81f3b6
	.xword 0x18b3ef26cda8ce80
	.xword 0x84cc4ebd540f04fd
	.xword 0x5d73a9625a525fe4
	.xword 0x32cdaf2a51dca26d
	.xword 0x177d4d88d23af786
	.xword 0x4f0e6c0a05f02145
	.xword 0x2d988509e4c1719a
	.xword 0xd4da259d9d8c3619
	.xword 0x53a0ce9d93c359fd
	.xword 0x9bd242c88a281b20
	.xword 0x3ce3803af59d3687
_t1_aes_auth_iv:
	.xword 0xefd8c5603a496e35
	.xword 0x28229b5b2effa09a
	.xword 0x85e73d6a26518816
	.xword 0xf7b464488500147a
	.xword 0x76a1576a9c7d16f8
	.xword 0xaca3082a456b07d8
	.xword 0x4037d377bf1a10c2
	.xword 0xf67ecc3989ceb628
	.xword 0x956a8eb04d7e3dc7
	.xword 0xe0a9d9542c668a11
	.xword 0xc79cb3e9ba99fda0
	.xword 0xd2ef22689b58c56a
	.xword 0x0e0c2e7f86222e2e
	.xword 0xa13b07b719f67633
	.xword 0xfb1aa17655d501af
	.xword 0xf15efb91ef597c9a
	.xword 0x043c46735ba6dc43
	.xword 0x563a1f3313cebc1a
	.xword 0xc7251e023d21f5ef
	.xword 0x5a663acbcc241ac5
	.xword 0x585bdca832b151f8
	.xword 0x55d5687b3c0faa08
	.xword 0x6602010dc524299d
	.xword 0xe84b5f1059412626
	.xword 0xb1ad0157fdc4eb13
	.xword 0x2999fb685848f3be
	.xword 0x015086e59ebced6f
	.xword 0x3bc756adf730db1a
	.xword 0xddfba762dab55b8a
	.xword 0x1dd222532ebf893c
	.xword 0x7ba09e8ef16a47f1
	.xword 0xc273f2853fcb769a
	.xword 0xec6ae2f47e327311
	.xword 0xf4a2ebc79cca19cb
	.xword 0xd08705e3ebb0b09b
	.xword 0x86f0d5f6b625f5a8
	.xword 0x9d04ba79eb6d6c48
	.xword 0xec858d357f0c49e0
	.xword 0x71efd064a80a3f5b
	.xword 0x3d5043cf7bdb246d
	.xword 0x4ea9e54c80a79507
	.xword 0x71fa1c403a6045be
	.xword 0x385e7de5c083f2a6
	.xword 0x1161ebad8ea4526d
	.xword 0x307f66835b871636
	.xword 0x37b62f3c2f4e1d12
	.xword 0x4577b8c7ee2eb70a
	.xword 0x8c8c65c57fe4fbbc
	.xword 0xc1616508ed5e902a
	.xword 0x5e91265292ad8c72
	.xword 0x87dcff20c716b32a
	.xword 0x0078b56b9f141b1a
	.xword 0x719691394ca26ff5
	.xword 0xc0fd1800109d8044
	.xword 0x3a24cd4a5214f1ad
	.xword 0x269d64b0461e535a
	.xword 0xa4225f566278aeee
	.xword 0xeb876250ade10c4b
_t1_aes_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_des_key_array:
	.xword 0x0636d4765927f774
	.xword 0xce965a29011fc7f6
	.xword 0x86268570d76bb3ed
	.xword 0x0b095e946bc09f09
	.xword 0xc2e5ccb23ff39e4f
	.xword 0x35c7a62650b39b6f
	.xword 0xb2611b13f127b8d0
	.xword 0xbbea0d80808a7020
	.xword 0x060e55d08e887be2
	.xword 0x7c22285e7b493909
	.xword 0x8b0f335275f15276
	.xword 0x1251c31d1b5a97ed
	.xword 0xb677e40357f900a3
	.xword 0x09a49789e78d39d5
	.xword 0x1b8391685c3b9c3e
	.xword 0x8092eb94ce19128e
	.xword 0x4d8e0b40a4bf403a
	.xword 0xb2c1145248f1c707
	.xword 0x0a4964348fa3e1a9
	.xword 0x453396062722abfc
	.xword 0x4d4e6924a4ef3880
	.xword 0xf2917749c9ed944d
	.xword 0x57242da16c1923c2
	.xword 0xe52a4b502568df5b
	.xword 0xd423c0864b900dee
	.xword 0x68e44515ef675db1
	.xword 0xbfd7136fbff36fa9
	.xword 0x1df1b1dee3b5f5f5
	.xword 0x5ab613f59307ef30
	.xword 0xaafc160b2a2276ee
	.xword 0x4215fa85ab22aa6d
	.xword 0xd663c821ac9e8324
	.xword 0xc870e396ff390b39
	.xword 0xca456348ef8eb7c1
	.xword 0xda756c8b81649907
	.xword 0x60b690de0cc6b554
	.xword 0xa7c63d13b2c483ec
	.xword 0x5233f1bebb43d3d8
	.xword 0xb544988bdd8944cf
	.xword 0x80f60a67b190d6fc
	.xword 0x932e187729185b9c
	.xword 0xe7b55f1085b5ac9e
	.xword 0xfb59088d79e106e6
	.xword 0x009ff8e9e2e6b72a
	.xword 0x9bee6576c70dc51f
	.xword 0xa799e80351a6f20b
	.xword 0x34271877f34ea04a
	.xword 0x7cf0fb856aacff3d
	.xword 0xcc46340f3c00eb96
	.xword 0xf82e7fbabc97555f
	.xword 0xe76407564bdc992e
	.xword 0xff8a39bf4d7139fd
	.xword 0x84303340d4b67071
	.xword 0x5a788ef6eff39929
	.xword 0x85874e317e3c6abf
	.xword 0x90ba2cf6d43b6a2f
	.xword 0x15340aea400c3e08
	.xword 0x211e011f6967fa64
	.xword 0x4594ee7fc11e8be0
	.xword 0x21a6d7a986b73fb4
	.xword 0x46ce062b2bfe3e41
	.xword 0xb5fa7bd4c201cefb
	.xword 0x7d27b6c7963f8a09
	.xword 0x508476bfed67f572
	.xword 0xfea99a27d9b38b0d
	.xword 0x74cb1fcd8b3d8421
	.xword 0x8a13ac36eb27dbe9
	.xword 0xc410bf37baeb4a4c
	.xword 0x3d96377bc0683290
	.xword 0x05cafaea80dd6399
	.xword 0x84ed5aa18a9b1618
	.xword 0xe3f3a29e25c9f550
	.xword 0x3e9d202f30d382f0
	.xword 0x23fca5482349a7bb
	.xword 0xee2567c46f6616d5
	.xword 0xb3d8445e66796d2e
	.xword 0x80ab735a555d3aab
	.xword 0xd8936127f94a4cff
	.xword 0xd4de23b0b3eac922
	.xword 0x1359ca79e03c2254
	.xword 0xaef34e63e99014e6
	.xword 0x42e7f1b453b4e0a5
	.xword 0x16015cbe02165e6a
	.xword 0x1a611fcb10704ffd
	.xword 0x49d3619c9427c932
	.xword 0x65a74d811f6ec8fe
_t1_des_iv_array:
	.xword 0x8abe5479f961f602
	.xword 0x7227f3f5a0346335
	.xword 0x704738bad3cbbcef
	.xword 0xad27fcfd497d5dd4
	.xword 0x088b1c36cdd7a780
	.xword 0xf58c21c90b79f835
	.xword 0x0f88baa28f2e778a
	.xword 0x402bd74b217643cc
	.xword 0x8df1af47b1fcdc51
	.xword 0x0b3cda596a9313a1
	.xword 0x3bc21bf4a2ade5e9
	.xword 0xdb23da03eef50698
	.xword 0x595097f7cded3e7e
	.xword 0x1f2b3b7a1ecf8541
	.xword 0x5ae39ce34bb87570
	.xword 0x99494c96cc500386
	.xword 0x0a30e71d250d1425
	.xword 0x1ad1acc003eeb062
	.xword 0x8f51fd8077281070
	.xword 0x08b555947fd9a02a
	.xword 0xb6f526bc4ab88acf
	.xword 0x72f449d4550fbf51
	.xword 0x6889726d3c35ecc8
	.xword 0x0d9f32dd2d3ecd61
	.xword 0x7939887cd05140b0
	.xword 0x06fed4adfbcb5cb6
	.xword 0x6ea944b6d740e992
	.xword 0x85fc4a581caae4a9
	.xword 0x18e8f1b5f65301d2
	.xword 0x188be8d627de48f6
	.xword 0x7e2c624f84cee9c8
	.xword 0x297223962bbd7c5f
	.xword 0xe6ac99e0bdd72022
	.xword 0x45fdb103df435d00
	.xword 0xba7690653b3a66f3
	.xword 0xcc0fefc634205c76
	.xword 0x2e2d6e2713c16396
	.xword 0xaaf281a584ef7598
	.xword 0x41e7c7faed00fa1c
	.xword 0xa408a9abebf8b07d
	.xword 0xc30e237b308f647e
	.xword 0xf194a672ec5a3b2f
	.xword 0xc88522abab9f9006
	.xword 0xfc74e70fa6764470
	.xword 0x14a5a913137f7d25
	.xword 0x3f6a4c58aff9f694
	.xword 0xa2a489bdf83c5c97
	.xword 0x6b69f4e7bc07ffe6
	.xword 0xa3a19023db4c7079
	.xword 0x5c8f6e94b71bba1b
	.xword 0xf8407eff57c3a13d
	.xword 0x9a5e310f2f898fe4
	.xword 0x409f9b63269da8f5
	.xword 0x6df9d320f269bdd0
	.xword 0x31d691225dd5b59a
	.xword 0xcb82ecb6f4016272
	.xword 0xa73242285fb49a00
	.xword 0xe0467d63fe79b03a
	.xword 0x9f8c1935839bd469
	.xword 0x5e400da27fc380d2
	.xword 0xa8194a8500a627e3
	.xword 0xf834c8a0c783a633
	.xword 0x8fb5d97cff05d762
	.xword 0x21bd5af61ea257fd
	.xword 0xd0ac55fde79493eb
	.xword 0x372210e3eb0d3e77
	.xword 0xa22da736888a8805
	.xword 0x108e20934eae48e9
	.xword 0xa022d9aa97f91a0e
	.xword 0x827991048f593ebc
	.xword 0x6101bd09d4cbab9e
	.xword 0x0da789cce9d1003d
	.xword 0xd7888d08ed812e18
	.xword 0x08749c31436d54d4
	.xword 0xf91a7a7e487254be
	.xword 0x2dcfd888edde8c88
	.xword 0x898b846b1e780aa6
	.xword 0x1081b3f612854d73
	.xword 0x31553aa5ca08e51a
	.xword 0x2b5762b1a32c76e8
	.xword 0xe3cee1d3cc7e50d1
	.xword 0x411cae983c896ef3
	.xword 0xa2725d07db6001e0
	.xword 0xf25712e2b7dcc513
	.xword 0xaf24f504dcd7f9ae
	.xword 0xa4f34735cf7f83e9
	.xword 0x1c00f328aa85c231
	.xword 0xaa8f47748e838a33
	.xword 0x80e88ac7aff137f0
	.xword 0x4fe28adc94cd6d43
	.xword 0xcee40147b1b54e81
	.xword 0x8b1281f4d52d973a
	.xword 0xb61cefb20520f8e9
	.xword 0x0575744dddcbf525
	.xword 0xf16744f641a76749
	.xword 0x02ae5bc32c6ee655
	.xword 0xc5814f464bfa2ef3
	.xword 0x5bccbfdd64f53340
	.xword 0x40928b1a99d04429
	.xword 0xa6062bff418aedef
	.xword 0x48041c65bcfa0a36
	.xword 0x2d9abfba28047ad7
	.xword 0x164672769eb45696
	.xword 0x2fa171e6e46d672a
	.xword 0x5ee1b8e9cbf62dc9
	.xword 0x59b53b7f724b16b1
	.xword 0x1ed1dac58935ecb5
	.xword 0xf151d64f34195263
	.xword 0x4bf188008e3445cf
	.xword 0xffd39b4da9890474
	.xword 0x2430f278a90f048c
	.xword 0xcef321a089182e8d
	.xword 0xac46b1c0f1a70e69
	.xword 0xa220694ee00fa80d
	.xword 0x54428cfb1162c4ce
	.xword 0xcb8a6687aa5c241e
	.xword 0x2cfe9d05e9b20ec0
	.xword 0x97f30a7deed16759
	.xword 0xf8a5be5c53bef1c2
	.xword 0x09c45bb2c1923302
	.xword 0xccf0d8b7441bcc96
	.xword 0x455533667649002c
	.xword 0x129d2ea8109c72f2
	.xword 0x9f1458ba6afb2ab5
	.xword 0xa60c81f2b15e3ede
	.xword 0x11685872c728803f
	.xword 0xd461d085dbd666ed
	.xword 0x2e2238ef5d39baee
	.xword 0x0882657e5264d289
	.xword 0x62fcb174c20c9a6f
	.xword 0x7d1454c305b76fe4
	.xword 0x165e4881de70ba9c
	.xword 0x81164aadb0752f5e
	.xword 0xc6209a71a14717f0
	.xword 0x577a1ebfd192f67f
	.xword 0x4f48016b074bc12b
	.xword 0x338277fbfc85af8a
	.xword 0x4f8f54b4531bd72b
	.xword 0x95d51c1ce0d44e8f
	.xword 0xd9b6e065db5fdb4f
	.xword 0x0672afbbcc4f79e6
	.xword 0x743145a2677f5121
	.xword 0x84869a52242693b4
	.xword 0xcfaa637a3106b958
	.xword 0x34c69fa385a782d2
	.xword 0x1dcd5159cbb58e43
	.xword 0x2dd60f95c668b8b4
	.xword 0xe2657cad1a0614aa
	.xword 0x3cf58f2f1863acd0
	.xword 0xbf161c0f84c53b40
_t1_des_alignment_array:
	.xword 5
	.xword 5
	.xword 6
	.xword 11
	.xword 0
	.xword 11
	.xword 3
	.xword 13
	.xword 7
	.xword 12
	.xword 15
	.xword 4
	.xword 6
	.xword 14
	.xword 1
	.xword 1
	.xword 11
	.xword 7
	.xword 8
	.xword 7
	.xword 5
	.xword 2
	.xword 5
	.xword 13
	.xword 0
	.xword 1
	.xword 9
	.xword 6
	.xword 5
	.xword 3
	.xword 5
	.xword 4
	.xword 2
	.xword 14
	.xword 8
	.xword 13
	.xword 3
	.xword 1
	.xword 4
	.xword 4
	.xword 0
	.xword 8
	.xword 10
	.xword 7
	.xword 0
	.xword 14
	.xword 3
	.xword 1
	.xword 3
	.xword 3
	.xword 15
	.xword 8
	.xword 13
	.xword 5
	.xword 6
	.xword 6
	.xword 10
	.xword 14
	.xword 15
	.xword 10
	.xword 1
	.xword 1
	.xword 12
	.xword 5
	.xword 5
	.xword 0
	.xword 11
	.xword 4
	.xword 7
	.xword 10
	.xword 4
	.xword 8
	.xword 12
	.xword 4
	.xword 10
	.xword 6
	.xword 12
	.xword 0
	.xword 14
	.xword 0
	.xword 10
	.xword 5
	.xword 4
	.xword 8
	.xword 4
	.xword 3
	.xword 6
	.xword 5
	.xword 5
	.xword 5
	.xword 9
	.xword 12
	.xword 10
	.xword 15
	.xword 8
	.xword 2
	.xword 13
	.xword 7
	.xword 11
	.xword 7
	.xword 15
	.xword 5
	.xword 5
	.xword 11
	.xword 5
	.xword 11
	.xword 6
	.xword 1
	.xword 3
	.xword 5
	.xword 1
	.xword 14
	.xword 3
	.xword 14
	.xword 10
	.xword 0
	.xword 1
	.xword 9
	.xword 8
	.xword 8
	.xword 15
	.xword 8
	.xword 5
	.xword 2
	.xword 13
	.xword 14
	.xword 8
	.xword 13
	.xword 10
	.xword 7
	.xword 2
	.xword 8
	.xword 5
	.xword 15
	.xword 4
	.xword 7
	.xword 12
	.xword 2
	.xword 13
	.xword 2
	.xword 14
	.xword 0
	.xword 4
	.xword 6
	.xword 5
	.xword 10
	.xword 6
	.xword 14
	.xword 14
	.xword 4
	.xword 10
	.xword 0
	.xword 5
	.xword 7
	.xword 2
	.xword 2
	.xword 13
	.xword 2
	.xword 14
	.xword 10
	.xword 14
	.xword 14
	.xword 8
	.xword 13
	.xword 13
	.xword 5
	.xword 4
	.xword 8
	.xword 5
	.xword 5
	.xword 7
	.xword 6
	.xword 0
	.xword 4
	.xword 8
	.xword 3
	.xword 12
	.xword 4
	.xword 11
	.xword 13
	.xword 8
	.xword 15
	.xword 11
	.xword 15
	.xword 5
	.xword 0
	.xword 14
	.xword 5
	.xword 14
	.xword 9
	.xword 6
	.xword 12
	.xword 6
	.xword 4
	.xword 13
	.xword 11
	.xword 12
	.xword 13
	.xword 13
	.xword 7
	.xword 6
	.xword 6
	.xword 2
	.xword 14
	.xword 3
	.xword 12
	.xword 13
	.xword 6
	.xword 7
	.xword 4
	.xword 9
	.xword 6
	.xword 5
	.xword 7
	.xword 11
	.xword 8
	.xword 2
	.xword 6
	.xword 9
	.xword 6
	.xword 12
	.xword 0
	.xword 6
	.xword 12
	.xword 12
	.xword 0
	.xword 12
	.xword 15
	.xword 0
	.xword 8
	.xword 3
	.xword 4
	.xword 2
	.xword 9
	.xword 7
	.xword 8
	.xword 12
	.xword 9
	.xword 4
	.xword 3
	.xword 1
	.xword 15
	.xword 6
	.xword 14
	.xword 5
	.xword 14
	.xword 2
	.xword 6
	.xword 7
	.xword 5
	.xword 10
	.xword 13
	.xword 1
	.xword 11
	.xword 14
	.xword 5
	.xword 8
	.xword 6
	.xword 14
	.xword 9
	.xword 5
	.xword 7
	.xword 14
	.xword 11
	.xword 8
	.xword 14
	.xword 14
	.xword 0
	.xword 2
	.xword 14
	.xword 1
	.xword 7
	.xword 6
	.xword 10
	.xword 11
	.xword 9
	.xword 8
	.xword 3
	.xword 13
	.xword 10
	.xword 4
	.xword 8
	.xword 7
	.xword 6
	.xword 2
	.xword 8
	.xword 11
	.xword 13
	.xword 4
	.xword 2
	.xword 8
	.xword 9
	.xword 14
	.xword 9
	.xword 2
	.xword 5
	.xword 0
	.xword 3
	.xword 7
	.xword 2
	.xword 14
	.xword 12
	.xword 9
	.xword 2
	.xword 5
	.xword 6
	.xword 4
	.xword 12
	.xword 6
	.xword 3
	.xword 4
	.xword 10
	.xword 5
	.xword 1
	.xword 1
	.xword 10
	.xword 1
	.xword 9
	.xword 7
	.xword 4
	.xword 1
	.xword 5
	.xword 2
	.xword 4
	.xword 15
	.xword 1
	.xword 2
	.xword 8
	.xword 6
	.xword 10
	.xword 6
	.xword 11
	.xword 7
	.xword 4
	.xword 0
	.xword 13
	.xword 13
	.xword 1
	.xword 13
	.xword 13
	.xword 0
	.xword 10
	.xword 10
	.xword 4
	.xword 7
	.xword 13
	.xword 8
	.xword 11
	.xword 8
	.xword 6
_t1_des_src:
	.xword 0x93f00eaf4595add9
	.xword 0x55e9f3c1f9f16a9d
	.xword 0x0744d9bb51f63d02
	.xword 0x0988e825aa9e9771
	.xword 0x0871d6cbbe8064f5
	.xword 0x75871755de4cee71
	.xword 0xe61ad435a0215d34
	.xword 0xff142970c22ea39a
	.xword 0x1a1438c074905498
	.xword 0x5f61c6a5d53e1c00
	.xword 0x160031d570a47089
	.xword 0x5d430724ea0df3b7
	.xword 0xc81cecd80c25d5e8
	.xword 0x5d95567eb7da9c41
	.xword 0xe017a94f7c1de525
	.xword 0x7953841c5f819a8d
	.xword 0x5b5f2038bafffc8e
	.xword 0x7759c8357032a424
	.xword 0xbc56d743dc2eb8fc
	.xword 0x09c15314cc6c7f9f
	.xword 0x07bf8b21d14484cd
	.xword 0xfc29894290f60860
	.xword 0x09a3bbd602699ec8
	.xword 0x960637563c58c3f1
	.xword 0xea31c92e7eda2a5a
	.xword 0x864964d6163de37f
	.xword 0x13c9ebc3053102b7
	.xword 0x66a592683a57fbb5
	.xword 0xcfdf921719babb89
	.xword 0xe9aee36540ad70ae
	.xword 0x1954429078044c33
	.xword 0xd1491a850e95ecbe
	.xword 0x197f3525c348b467
	.xword 0x2c853a80e421cb5e
	.xword 0x6418a1f38c072757
	.xword 0x2d3f68394a22084f
	.xword 0xf172cd812d158f47
	.xword 0x58589439b9c6708a
	.xword 0xc1fa20ccf5b6fdd5
	.xword 0x23c0c85c3cb89fc6
	.xword 0x97e3ecd11d88d569
	.xword 0xb760eb8b9fac8b3b
	.xword 0x56ceb7408939171b
	.xword 0xaf6804e15d506bc9
	.xword 0xe114ce925c5474c4
	.xword 0xada1623dc7683d31
	.xword 0xd732696b5158ec27
	.xword 0xa24ce0396bb3fc32
	.xword 0x9c87633e1a07f46d
	.xword 0x8420783bee83134f
	.xword 0x3e518a8cfb54b6e1
	.xword 0x6e44eb4485d1db39
	.xword 0xbf77959ea9e950fd
	.xword 0xf4957d65509cbc8e
	.xword 0xebcc70f585fefa2c
	.xword 0xc297b1a480f8d02b
	.xword 0xe17a0dff02b2f71f
	.xword 0xf82b400bf29780db
	.xword 0xbebe80d13ffc0c70
	.xword 0x1235931ac2badaa5
	.xword 0x2d3c92290b5b5148
	.xword 0x34a93b6a86579d9c
	.xword 0x3f21770af894ba73
	.xword 0x815fffc4af9fe6ae
	.xword 0xfb9ffc5fca97b67d
	.xword 0x51d82247121ac960
	.xword 0x2277604bc0316c2d
	.xword 0x2366251ba093943b
	.xword 0x70a4b7fecd106d71
	.xword 0xe024f9ee3e4578cf
	.xword 0xf3d98ba39005b304
	.xword 0xe22f2c5be960f3cf
	.xword 0xce492a76540ced39
	.xword 0x58cd3deeac159173
	.xword 0xe5250961b80ef107
	.xword 0x57b3174f3903bd53
	.xword 0x51cec16616cb705a
	.xword 0x98fe2b9332c18250
	.xword 0xb16306057ab833cf
	.xword 0x2ff187978e281b1d
	.xword 0x80eb006bfb06b58e
	.xword 0x38117c7c3342aa49
	.xword 0x5e5ae77d19ad3f12
	.xword 0x2693bbcc4cfb60f2
	.xword 0xab7eba6289317308
	.xword 0x0a814626da84aa1d
	.xword 0x428d0adf01bb74b3
	.xword 0xb75ede93c6d673ac
	.xword 0x4695bd177f89fd3e
	.xword 0x4453b163dd2f15f2
	.xword 0xaff96df088d9ac02
	.xword 0x7bb067216babb9d2
	.xword 0x7920daf2ba209a9c
	.xword 0x054146a423de6fff
	.xword 0x926cd125978be3d4
	.xword 0xfedcf3e28a65da34
	.xword 0x0cd38d95e360bb95
	.xword 0xd30660e520670798
	.xword 0xa9bfa8658d762454
	.xword 0x9a588ffe68805b05
	.xword 0xadbe78fa36539bf4
	.xword 0x9037fcbb20217647
	.xword 0x060c7f0c9794f26b
	.xword 0xb50b85b8d5c43416
	.xword 0x3aa6d8ff6cb8ef9b
	.xword 0x4f31e38c41461f2b
	.xword 0x4f21cd4fe340e427
	.xword 0x0728973db5cd6e6c
	.xword 0xdecda7e6630617a4
	.xword 0xe6a85b6a060f6ca9
	.xword 0x0835b33141c32e89
	.xword 0x24d881a0934c26bd
	.xword 0x7f6a6ecc42de46cf
	.xword 0x9b72f3fe8280d335
	.xword 0x67bc7ba1ed34ea62
	.xword 0x61dbdea7bd511bbe
	.xword 0x1260cc2d21a45053
	.xword 0x56f8f4a6fc2c6455
	.xword 0x1b1da99148618853
	.xword 0x7cc97d50fc40d89e
	.xword 0x6d9cc0c1c1ddd9d4
	.xword 0xb5120251b9008456
	.xword 0xb579291125559262
	.xword 0x5b4f655e7f40f0db
	.xword 0x00b1cdc582e4610e
	.xword 0x535f747809391f5a
	.xword 0x64872bd0977085d2
	.xword 0xfc0379dbb1f1645e
	.xword 0x8adc3ccad662b543
	.xword 0x9d4ceeb293eb86d4
	.xword 0x1005d8a14c2b9c57
	.xword 0x709c3d1293b96aee
	.xword 0x125225c8ccf8440d
	.xword 0xe30d2320543384c5
	.xword 0x91f0efcd04a47fe8
	.xword 0x86bdfc6ee500874c
	.xword 0xfe7351665fee138e
	.xword 0xba328f47b84cf2eb
	.xword 0xe7f8d49282cf3e44
	.xword 0x3d176b7421ecd716
	.xword 0xc7895fd97b3d6f55
	.xword 0x2d8ba0bf9c847bc0
	.xword 0xac273724a2e56d52
	.xword 0x53061a3b5b25f8dc
	.xword 0xe8f4e6ca96bcd0a7
	.xword 0x252a402a8d7c15aa
	.xword 0x7233b527639d2df3
	.xword 0x687349e8434a9765
	.xword 0x1a9a8458f5e300cf
	.xword 0xd416da4dfa6f0a5b
	.xword 0x00da16c1be3bfa58
	.xword 0xa00eb057d1b77326
	.xword 0x74a65376c6a3a63b
	.xword 0x8967d1d536506d99
	.xword 0x14597a12a39be935
	.xword 0x8244000f7085cff6
	.xword 0xb001e54708cb97ef
	.xword 0xb2108081289e8ba4
	.xword 0x13c3735e8ecf855c
	.xword 0x6abd158073e84a25
	.xword 0x2d157140a983de68
	.xword 0xa0d1e559fe965f3a
	.xword 0x2562fda73958ba8d
	.xword 0x29734551e5c86d66
	.xword 0xbccd3757e55b6071
	.xword 0x4965c8399abd945c
	.xword 0x746c17b59492f638
	.xword 0x8c97a66443b4459d
	.xword 0x92a8f02ecf320ddd
	.xword 0x04fa9ec500149845
	.xword 0x19930fc065061071
	.xword 0xeee535699004f0c5
	.xword 0x3ca8d6653e8c31d5
	.xword 0xa61e6892b30595e6
	.xword 0x64cda7501dce90e3
	.xword 0xd12c890e077f1d4e
	.xword 0x3969b3f65ae9e94e
	.xword 0x1c31cef05e5e6845
	.xword 0x53ece20fc058ddd8
	.xword 0x4cf0b116c90d890f
	.xword 0x48b0175d286f8212
	.xword 0x40f12044df2348c2
	.xword 0xd6ae1f3ae48ca257
	.xword 0x22e9d5ff60319aa6
	.xword 0x27b9360946099b1a
	.xword 0x4182fcb71120e702
	.xword 0x39fa8bd8c39b424e
	.xword 0x7cc8cf8fb7d714bf
	.xword 0xa15d362ba7d53318
	.xword 0x9897e3d35bd84339
	.xword 0x8cb2a6b5927eb7a3
	.xword 0x65334e3dbc276acf
	.xword 0x458c9f7378a609ee
	.xword 0x996358ad343f9fcd
	.xword 0x4ee20fbe91eb397f
	.xword 0x3c7e883b1b5c8b0d
	.xword 0x902e494209433581
	.xword 0x8bed42c0ca150bce
	.xword 0x10c4ddae417931ae
	.xword 0xc5ba4deea1839f35
	.xword 0x12bed32e0a573cc0
	.xword 0x8b62c961f32e61c3
	.xword 0x2835faf295e18964
	.xword 0xa0f599dfa7e932e8
	.xword 0xfa5acfb35900fd59
	.xword 0x2ea667dad2cc8e31
	.xword 0xd1f90d44adc6c8ec
	.xword 0x5a455c5573f55c6e
	.xword 0xce83437ad2f1212c
	.xword 0x0a6cf42b71058d14
	.xword 0xa717eb32beed85d6
	.xword 0x8290b5c3416c8e3d
	.xword 0x7fa14b776be10c22
	.xword 0x97bf382f01c0967d
	.xword 0xe9cad31b8ef1605a
	.xword 0xd9d011987077e453
	.xword 0xe15a00126a7bc3db
	.xword 0xd1c80df4fc184bdf
	.xword 0x50954f9efa65f02a
	.xword 0xe28baa64d3cf2033
	.xword 0x19b600555b73259f
	.xword 0xc4cbc795063c156c
	.xword 0xb9763b9106d5989e
	.xword 0x86b119edbfb7ff26
	.xword 0xe930c2a36cd2b90e
	.xword 0xb443988d6dc10353
	.xword 0x94743fb92c139f12
	.xword 0x5f3d828f707235f1
	.xword 0x261ce35af9a8b008
	.xword 0x132392e29a8f6ae8
	.xword 0xf9c92408451923af
	.xword 0x77f2b198567450ff
	.xword 0x5417e32eb789bad1
	.xword 0xde13ac3651efef54
	.xword 0xb133579e7183c69e
	.xword 0x7dec2e7d34bbaf53
	.xword 0xe80a1c70d7d91f00
	.xword 0x15f9d4e3e4184037
	.xword 0x160694c3e40855a0
	.xword 0xdde4f0201531d3a9
	.xword 0xb865ed6dab43f87f
	.xword 0x3cd8516e66983e88
	.xword 0x1d5c43e01b8e915a
	.xword 0x43d18c6eabfe48d8
	.xword 0x18d8faa6d680c3bb
	.xword 0x0301ab3d21c8773b
	.xword 0x65ce89560918c18e
	.xword 0x6fdf6a0e01b3b5bc
	.xword 0xdfbf9515eb2bebfe
	.xword 0xe8c5e17e5e23dbe9
	.xword 0x85d88c453ded3775
	.xword 0x75e03ae76c990e90
	.xword 0xbd60604d26707e4e
	.xword 0x71887d057ed2f9fa
	.xword 0x17457d2e2fdd7b4b
	.xword 0x018ea889f5765333
	.xword 0x1f729aea6ddad365
	.xword 0x841606f16863afca
	.xword 0x8d01f12ea9b30964
	.xword 0x1e659c1cf7c870bc
	.xword 0xcb8604fa272179bb
	.xword 0xdaf35cab3eb596d6
	.xword 0x95159bcd7c2d3dd7
	.xword 0x798e7a63f11a2909
	.xword 0x4c583ee2ca0851d7
	.xword 0xdbeb75c32d7941d9
	.xword 0x557e132d15494564
	.xword 0xc79021e738d65d92
	.xword 0x8ae6f9312c264739
	.xword 0x1631bc43c53e04c4
	.xword 0xa6c4631f0c4b10d3
	.xword 0xb33937f0298d66ff
	.xword 0x480b06f6d99cf3a6
	.xword 0xeedb1d8ea9d4bc86
	.xword 0xf06b9bba174fab0b
	.xword 0x793552d79eae24a5
	.xword 0x3bd832f99b0dfcca
	.xword 0xf6ce5bdda5d85469
	.xword 0x444dc28451f3453a
	.xword 0x600e221ae1024102
	.xword 0xd4e77bf4dec91688
	.xword 0xb836817d1c8d8ea8
	.xword 0xbbed36ad577336b9
	.xword 0x791f36d43e68ca60
	.xword 0x6a34cde958059e28
	.xword 0x9de89c1687ffd81e
	.xword 0xa6abed37b226c975
	.xword 0xa3807a4477e97445
	.xword 0xbf910d59c0e4f5f7
	.xword 0x69720e149cdd7d91
	.xword 0xa3318bd63dcee605
	.xword 0x63ab28423b0b6d27
	.xword 0x94f205db56ece038
	.xword 0x464d06141a392ecf
	.xword 0x7d0d7edee6c24216
	.xword 0xb2203d04e363c7e7
	.xword 0x9f2505adef43466b
	.xword 0xb607a47e0deda7c6
	.xword 0x11965754f2baa9ff
	.xword 0xe5ce7424d76e61bb
	.xword 0xbde7d249679d973f
	.xword 0x2c29b5e460728eb9
	.xword 0x712366c57a8404d5
	.xword 0x2c53d7effe9dae15
	.xword 0xb52193cc4d87e8ee
	.xword 0xee16b04e384b3350
	.xword 0x373a5ce3c4389bae
	.xword 0x6aa2c3518a6e8ec7
	.xword 0xce97a2ef6baddf8f
	.xword 0x17bc7027c15913bc
_t1_des_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_des_auth_key:
	.xword 0x269f0c57a24a4129
	.xword 0xa500f24e71845813
	.xword 0xad98768a03ec1b9b
	.xword 0xfd751d51e9dd1435
	.xword 0x4ef70ca4f3c01fbc
	.xword 0xaf92394e216c0c7b
	.xword 0xf05b904bbe443e1e
	.xword 0x66d215c6534c29cc
	.xword 0x7dc10bf54ad62383
	.xword 0x0486aef8791c5fdb
	.xword 0xc1e4241709531f43
	.xword 0x489551e66db1816a
	.xword 0x35741a8bbd408246
	.xword 0xde6b20bf7f619205
	.xword 0x5238306ed7b63af9
	.xword 0x21fd697897302dca
	.xword 0xbd383fec3d1fd0e9
	.xword 0x6ff81c0f96ce6968
	.xword 0x3ac4c5721be39d61
	.xword 0x53a27764bb0d968b
	.xword 0x359708cb23a9854f
	.xword 0x5823ba6a0c23b2a7
	.xword 0xe3424891423d6794
	.xword 0xf5679648bd66caee
	.xword 0x05f5a6bba1b5e2b9
	.xword 0xac6acac5139ff61e
	.xword 0xbd4bdec586b04570
	.xword 0x143e91aaa3c23e15
	.xword 0xf687ad93097d4689
	.xword 0x114b6354ee23cc61
	.xword 0x40382402873ed4ff
	.xword 0xfce0ed1b84d20d68
	.xword 0x2bb6b0b2af6b2cca
	.xword 0xfeeae7528faebe4d
	.xword 0x184c7559c143485a
	.xword 0xbe819d1ed5600871
	.xword 0x01cb8108e49a0bcf
	.xword 0xa8cf8510cb2f9f1b
	.xword 0xf0f9f0fbccb34dd9
	.xword 0x953350c6c85a8406
	.xword 0x86daa0128aa5e75a
	.xword 0x2d1bda02d728c56e
	.xword 0xac63cb95bb2b5f1c
	.xword 0x58dcb85b5e8d8746
	.xword 0x8f38ad0221c3990e
	.xword 0x18f5a42d43a5f72f
	.xword 0x4bd7e0d488ba7646
	.xword 0xa0020bebba5423ac
	.xword 0x98344f4a9a8eeb21
	.xword 0xd0e4f7ef6942746d
	.xword 0xcf9834c6c3d396b6
	.xword 0x91d6ccd20bb357d6
	.xword 0x8f377218dd0e00e0
	.xword 0xa2f6fd299541808e
	.xword 0x9193ab4d2609bda3
	.xword 0x3f5a5571485e3f07
	.xword 0xc0f7c6b57a1f7305
	.xword 0x271d81c4c7905dd2
_t1_des_auth_iv:
	.xword 0x199509e270efe206
	.xword 0xef8f262d4ec969f1
	.xword 0xc7b5d1af375f4de4
	.xword 0x6d051e3dc931675a
	.xword 0x04ba6c8f7d19120e
	.xword 0x95ff447bc7548201
	.xword 0xc9468b8ee90bf53d
	.xword 0x89a000b0c4117889
	.xword 0xc99a87f649107ad1
	.xword 0x94cd3aff0d08d776
	.xword 0x12168320026535e1
	.xword 0x47010e598205b247
	.xword 0x6c11377919b9781a
	.xword 0x09ba8a7f1a7237b7
	.xword 0xed43be38a40b79b0
	.xword 0x0b77248986393632
	.xword 0x0d419187e7e7d996
	.xword 0xa20f9549aa8e4355
	.xword 0x0ab2b9395dfe6fec
	.xword 0x0abe1f32da0d1ec6
	.xword 0x3afe24d2d87f5d66
	.xword 0x8201248e3939df86
	.xword 0xd336d272df6f5574
	.xword 0xb8b3169091ee0b8c
	.xword 0x4d56e3964790b814
	.xword 0x2eac179113d1f4da
	.xword 0x9a2453a23989feaf
	.xword 0x553598f4ab3b2335
	.xword 0x179a8cc7047f8002
	.xword 0x07bb3586de640ab1
	.xword 0xfe4d43522784b46e
	.xword 0x760496763da44307
	.xword 0x540c40343ca7163e
	.xword 0xae600f3695726097
	.xword 0x3ee6ea9c30097d40
	.xword 0x0ca1a8d72f4e7191
	.xword 0x8179a12652444bbb
	.xword 0x39555a78b44d6d67
	.xword 0x21216915248c7d7b
	.xword 0x46c0dbbcfcc68636
	.xword 0xe91e327f3fc6579b
	.xword 0xcffc6d850cc3f57e
	.xword 0xf16a258042e804d1
	.xword 0xf32d073bed5a7d01
	.xword 0xd416401555c95bb4
	.xword 0xb8619075eb64e6fd
	.xword 0x9b9483f4462c112c
	.xword 0xbe32a9a529e799d1
	.xword 0x8a7a39662ac3e9e3
	.xword 0xebf27e0376b0f98d
	.xword 0x1bb138c301b3aade
	.xword 0xb573e64920f62b0d
	.xword 0xfdc7f896850597ae
	.xword 0xc2b967c191d44d73
	.xword 0xd98bdcf883a6bc5a
	.xword 0xb4e76d4e92526a98
	.xword 0xeab20cf22a5b4e98
	.xword 0x356a95665148e623
_t1_des_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_copy_key_array:
	.xword 0xe7c91798d8373327
	.xword 0x737756192973cd69
	.xword 0xa042b0a7e7c7961d
	.xword 0x06fb83ea0410e288
	.xword 0x2d44eb33fa2b7648
	.xword 0x16ae1ac8e16ea0e9
	.xword 0x99a0fad4fc88aaa7
	.xword 0x2771757d6ff57fbe
	.xword 0x0c6201114853e173
	.xword 0x77d03e7f416fa48c
	.xword 0x88fa0e840cda4181
	.xword 0xd93ef590e7c2054b
	.xword 0xaca29dbf2f115ff5
	.xword 0x2bb4004bf0716de4
	.xword 0xe326fef8b54f32ae
	.xword 0xf5dd51797b251edb
	.xword 0x4c19ae7b7d63428d
	.xword 0x64e74c384bc80f24
	.xword 0xa2ebab3517f82a97
	.xword 0x01cb2ae9c270cfbd
	.xword 0xc8316ceef99e3337
	.xword 0xcbb095c81dc1e567
	.xword 0x43fe2869d53af0f9
	.xword 0x1d59ee9548b3e2ad
	.xword 0x5440ddf3631ada05
	.xword 0x582f4755fd72f296
	.xword 0x85abc37bc0fc2f7a
	.xword 0x43715e45920bd823
	.xword 0x9776d408647034cc
	.xword 0x4cd7fa5289fcf575
	.xword 0x9899fdc8e0571523
	.xword 0xeac1d5ebe23619d8
	.xword 0x67bed4dabd3b24bd
	.xword 0x7e9f3a09cd8e1dbc
	.xword 0xc0bb9f28fd93dad9
	.xword 0x6e81c5b878a1d635
	.xword 0x563df842e6799e17
	.xword 0x63651e2b4066107f
	.xword 0xd5ebcb8329563c35
	.xword 0x6dd464d48b03c57b
	.xword 0x623eaba4a0b45e76
	.xword 0x405948c61e914ae4
	.xword 0x7cdbe776f348b5f9
	.xword 0xa3fd68ac1f7781d9
	.xword 0x2d3d8aa59d1b2752
	.xword 0xc4f096e98a25214b
	.xword 0xafe13b46a8672333
	.xword 0x5fa38e43b20b5c26
	.xword 0x55e2d0250b2d2762
	.xword 0xeea1c29ce06ab50e
	.xword 0x80b5c66bfcf953a9
	.xword 0x8b0d3d0dfacb7020
	.xword 0x601b65ad36616ae4
	.xword 0x32a7e5a570a22be8
	.xword 0x919249ee2645f0f8
	.xword 0xd57cf7db7bda9989
	.xword 0x10224675bbfb4641
	.xword 0x5150ed54c3fb728e
	.xword 0xe362adf63f8781e0
	.xword 0xceff4bf7b8d0b34e
	.xword 0xba5f1696bc729313
	.xword 0x949eda183f6be2d0
	.xword 0x3f7e484dc7db6c84
	.xword 0x28f787550f63dee0
	.xword 0x9f04cf94a0461ad6
	.xword 0x4d9f9eb277f48bdd
	.xword 0x45fb1e79398a04ce
	.xword 0x03d54064f1348008
	.xword 0xc6b241a9da5b16a0
	.xword 0x6175c2723b8762d6
	.xword 0xd93e93c7732eb1eb
	.xword 0xb74e154f016ba6de
	.xword 0xbfb69a65391dd9b7
	.xword 0x2b6eac6512c9e0d5
	.xword 0x82ea8bfc949b8e20
	.xword 0xdf4e61c2867cff40
	.xword 0xec22bf38319eae5f
	.xword 0x88baa20da86c76f3
	.xword 0x6a90475512e480e8
	.xword 0xb674c446255b18b4
	.xword 0xd35d97b4a90ccde4
	.xword 0xbfd6503e3772827e
	.xword 0x9258427f940ed515
	.xword 0x65daea6e5958817e
	.xword 0xc1890676e5f3917b
	.xword 0x75e2d8bfcad7961d
_t1_copy_iv_array:
	.xword 0xff55142c411fade9
	.xword 0xce25c11323b1f8bb
	.xword 0x541f3c660ac2fc7e
	.xword 0xa4e93bec0b534e71
	.xword 0x3da8ab257ef3a47f
	.xword 0x7af9f7d932d62b13
	.xword 0x52b8316657af74d6
	.xword 0xea5619fa8ca3ce73
	.xword 0xec0441d834f2b9ab
	.xword 0x60dc60b7b37e74b1
	.xword 0x4be88a458f025468
	.xword 0x62e825f43e61c40c
	.xword 0x16ee5c4235aaae3a
	.xword 0x60d546b21613c65d
	.xword 0x4323525998bdab7f
	.xword 0x9f4e7a9ece8f4292
	.xword 0x8f1d0280c701d4e9
	.xword 0x9927c3227d3c0179
	.xword 0x01bf3eb45de62190
	.xword 0x1c4b43b6234701e8
	.xword 0x1394be109cd3dbce
	.xword 0x567ae401b3b70ffd
	.xword 0x407f9dbb0d8ca74b
	.xword 0x5f1f0bb556cce4c4
	.xword 0xd4ec590ac6ff50d9
	.xword 0x5e92c6d47792f30b
	.xword 0xf831c35e73861312
	.xword 0x3fb69e9ce1a7faba
	.xword 0xc89b0e42eb19686e
	.xword 0x92f2295549f2af16
	.xword 0x7e61b9a910d77b56
	.xword 0x17caad8e11c8eaea
	.xword 0xc9a269646dc03512
	.xword 0xf8a87f5506100387
	.xword 0x80c0b7cf0b99dfd6
	.xword 0x1ca4a75f6d4a43c0
	.xword 0x56442a237c116219
	.xword 0x26e57a33b797f4a1
	.xword 0x168332c8c8535457
	.xword 0xd16e9e1cf71cbfe3
	.xword 0x528ac4b04e1d9e7b
	.xword 0x92f6c9b2876debec
	.xword 0xd38452a90567eb6e
	.xword 0xa5abbc423fa44376
	.xword 0x79349057b0d15e63
	.xword 0xbfc422cfce8054d6
	.xword 0x97f5f37b9bd52c47
	.xword 0x1cf9c1553070f139
	.xword 0x3a6098bb4da990e5
	.xword 0xc8977e6d62d370c0
	.xword 0x2de1f70140bca86b
	.xword 0x0167ba79b8c6e27a
	.xword 0xdc165843ee6be5c1
	.xword 0x99c844df17c0e8d1
	.xword 0x0fc3377682df586f
	.xword 0x7545446642dd1bf8
	.xword 0x761c01c309343b51
	.xword 0x07315b94c0e0d1d6
	.xword 0x8f3c50e84aaec7d0
	.xword 0x1672cec4d58e40f5
	.xword 0x9085ae18dc748b53
	.xword 0x19c2f27ce3755be5
	.xword 0xeef83a0fec8eb9bf
	.xword 0x56c11f05d9030bf6
	.xword 0x9fd48be4a67f993c
	.xword 0xdacdb0c45eeddd2a
	.xword 0x2df5259c46449352
	.xword 0xb8a99dc9ed8bf085
	.xword 0x7cf59881e88f8eef
	.xword 0x63e425f18bf50e99
	.xword 0x636e65031cb3b692
	.xword 0x4bdead9a8e2445b9
	.xword 0x8126341c2b2e47fd
	.xword 0x4be9e2c83a8edb8a
	.xword 0x2c5ab0e4bcbd97f4
	.xword 0x2a1b8384d732ee05
	.xword 0xe64bf34fa27c23c1
	.xword 0x175885d462c8ce30
	.xword 0x26bca6f1fb98db31
	.xword 0x47e56ecb0c47f1af
	.xword 0x8fe151cc5d09ca33
	.xword 0xc17e5e82872ff642
	.xword 0xa7a6705d18bfa040
	.xword 0xe7b671d4f2002697
	.xword 0x45dcb9550bbffd8e
	.xword 0x7c7d0adce12a34c8
	.xword 0xc6d32bc23ea68518
	.xword 0x9471a4b381ae4dc0
	.xword 0xa774a2757b52c1af
	.xword 0xa81dcd000c00aa8a
	.xword 0x0560652e672d257e
	.xword 0x5b636a9d0212260a
	.xword 0xb1836c8761342a04
	.xword 0x2f044363cfa96079
	.xword 0x0bf8fe59473ef5b0
	.xword 0xdc51d4d3ad120bca
	.xword 0xa2573d24c9aa80ac
	.xword 0x7a619ae4b29273d9
	.xword 0x61d8547f00de4bfd
	.xword 0x01b1dcba8acfc28e
	.xword 0x8a8f24d0eb406aaf
	.xword 0x1c36819183fc3875
	.xword 0xb7d40c2ae850a3c6
	.xword 0x1fa02d3191a9fa1a
	.xword 0xbd2049556ef09dd3
	.xword 0x36f58f39ad5bf22b
	.xword 0x6afb572844ebf0db
	.xword 0xaba8d29912fa55de
	.xword 0xe2d0557cc78e3dc5
	.xword 0xb39949f7ac5a32fb
	.xword 0x39e6dada2d643190
	.xword 0xd921cf0ea0577d79
	.xword 0x4b9cea930c22e50f
	.xword 0x6c704d41831f9707
	.xword 0x15549acf198a80cb
	.xword 0xa47c23ea983b8306
	.xword 0x1cde487c7e2a127d
	.xword 0x23d4b7c1676c45ee
	.xword 0x2ce576def8bb8a90
	.xword 0x361e671e1d5cf185
	.xword 0x1cb203b5ba0d6dcb
	.xword 0xa6000b8eee76f6ca
	.xword 0xd506f5e6e42f3e5e
	.xword 0x806c53e472c24b10
	.xword 0xa34ed0e3a081624c
	.xword 0x3745a02a06b17dde
	.xword 0x764b3137e71d88c8
	.xword 0xf63844555e0d35ee
	.xword 0xa426fcd09f06cb43
	.xword 0x6172779c8330019d
	.xword 0xc21fc82c7852f691
	.xword 0x5f3006610cdafa0b
	.xword 0xe333f8026d672a0b
	.xword 0x3deffc08a56a5cc1
	.xword 0xf5b5bb07528ea595
	.xword 0xd69a94cc9f35a40b
	.xword 0x2b74642d4b998e96
	.xword 0x1da3e0d9923cd8ba
	.xword 0x2b8873d4230f2d91
	.xword 0xa907b9d5b9a44eb3
	.xword 0x230602df480669b3
	.xword 0xac682312d752c0fd
	.xword 0xec9a3e040660f34d
	.xword 0x2906156d76b1fd2d
	.xword 0x20cf93e4a2c295fd
	.xword 0x6534cd29a82e15c8
	.xword 0x23e6c8e66d759a54
	.xword 0x36c8a8ae8c0b3762
	.xword 0x8dd4c5e837be5885
	.xword 0x4286e6d18e6da4ef
_t1_copy_alignment_array:
	.xword 4
	.xword 15
	.xword 8
	.xword 9
	.xword 3
	.xword 13
	.xword 6
	.xword 7
	.xword 12
	.xword 5
	.xword 10
	.xword 5
	.xword 15
	.xword 6
	.xword 1
	.xword 14
	.xword 8
	.xword 0
	.xword 15
	.xword 1
	.xword 12
	.xword 4
	.xword 7
	.xword 0
	.xword 14
	.xword 6
	.xword 11
	.xword 3
	.xword 10
	.xword 4
	.xword 8
	.xword 0
	.xword 8
	.xword 0
	.xword 12
	.xword 5
	.xword 7
	.xword 10
	.xword 0
	.xword 2
	.xword 3
	.xword 1
	.xword 7
	.xword 2
	.xword 10
	.xword 6
	.xword 4
	.xword 11
	.xword 4
	.xword 15
	.xword 5
	.xword 11
	.xword 15
	.xword 14
	.xword 14
	.xword 14
	.xword 12
	.xword 2
	.xword 9
	.xword 3
	.xword 14
	.xword 4
	.xword 12
	.xword 15
	.xword 5
	.xword 8
	.xword 14
	.xword 14
	.xword 4
	.xword 9
	.xword 6
	.xword 8
	.xword 8
	.xword 10
	.xword 8
	.xword 15
	.xword 5
	.xword 12
	.xword 12
	.xword 12
	.xword 4
	.xword 13
	.xword 9
	.xword 11
	.xword 7
	.xword 4
	.xword 0
	.xword 10
	.xword 15
	.xword 12
	.xword 6
	.xword 5
	.xword 3
	.xword 11
	.xword 0
	.xword 4
	.xword 14
	.xword 10
	.xword 8
	.xword 1
	.xword 0
	.xword 2
	.xword 7
	.xword 4
	.xword 1
	.xword 9
	.xword 15
	.xword 11
	.xword 10
	.xword 3
	.xword 13
	.xword 7
	.xword 6
	.xword 14
	.xword 2
	.xword 15
	.xword 6
	.xword 7
	.xword 6
	.xword 7
	.xword 5
	.xword 14
	.xword 8
	.xword 7
	.xword 12
	.xword 11
	.xword 7
	.xword 5
	.xword 15
	.xword 6
	.xword 6
	.xword 1
	.xword 9
	.xword 5
	.xword 11
	.xword 3
	.xword 15
	.xword 3
	.xword 14
	.xword 13
	.xword 7
	.xword 3
	.xword 8
	.xword 8
	.xword 2
	.xword 15
	.xword 6
	.xword 10
	.xword 5
	.xword 8
	.xword 14
	.xword 8
	.xword 15
	.xword 3
	.xword 12
	.xword 5
	.xword 6
	.xword 11
	.xword 1
	.xword 15
	.xword 4
	.xword 5
	.xword 10
	.xword 4
	.xword 4
	.xword 4
	.xword 14
	.xword 13
	.xword 4
	.xword 3
	.xword 2
	.xword 15
	.xword 9
	.xword 10
	.xword 12
	.xword 11
	.xword 4
	.xword 0
	.xword 6
	.xword 13
	.xword 7
	.xword 15
	.xword 3
	.xword 13
	.xword 9
	.xword 7
	.xword 1
	.xword 15
	.xword 1
	.xword 7
	.xword 5
	.xword 0
	.xword 12
	.xword 3
	.xword 9
	.xword 2
	.xword 9
	.xword 9
	.xword 13
	.xword 1
	.xword 10
	.xword 7
	.xword 15
	.xword 12
	.xword 5
	.xword 6
	.xword 8
	.xword 10
	.xword 11
	.xword 12
	.xword 14
	.xword 3
	.xword 3
	.xword 5
	.xword 14
	.xword 8
	.xword 13
	.xword 6
	.xword 10
	.xword 2
	.xword 5
	.xword 8
	.xword 4
	.xword 12
	.xword 6
	.xword 12
	.xword 6
	.xword 5
	.xword 12
	.xword 5
	.xword 13
	.xword 4
	.xword 5
	.xword 7
	.xword 14
	.xword 3
	.xword 2
	.xword 13
	.xword 10
	.xword 11
	.xword 3
	.xword 8
	.xword 1
	.xword 2
	.xword 4
	.xword 6
	.xword 6
	.xword 1
	.xword 9
	.xword 9
	.xword 14
	.xword 5
	.xword 9
	.xword 1
	.xword 13
	.xword 7
	.xword 7
	.xword 3
	.xword 0
	.xword 9
	.xword 6
	.xword 7
	.xword 2
	.xword 13
	.xword 4
	.xword 8
	.xword 15
	.xword 9
	.xword 8
	.xword 12
	.xword 7
	.xword 3
	.xword 2
	.xword 12
	.xword 3
	.xword 9
	.xword 9
	.xword 2
	.xword 9
	.xword 15
	.xword 3
	.xword 6
	.xword 15
	.xword 14
	.xword 9
	.xword 15
	.xword 8
	.xword 13
	.xword 10
	.xword 7
	.xword 6
	.xword 0
	.xword 2
	.xword 13
	.xword 3
	.xword 7
	.xword 12
	.xword 4
	.xword 8
	.xword 12
	.xword 3
	.xword 2
	.xword 14
	.xword 9
	.xword 14
	.xword 8
	.xword 10
	.xword 8
	.xword 14
	.xword 4
	.xword 11
	.xword 1
	.xword 4
	.xword 8
	.xword 15
	.xword 14
	.xword 12
	.xword 14
	.xword 11
	.xword 4
	.xword 14
	.xword 5
	.xword 5
	.xword 5
	.xword 14
	.xword 1
	.xword 13
	.xword 9
	.xword 7
	.xword 14
	.xword 9
	.xword 13
	.xword 2
	.xword 8
	.xword 9
	.xword 6
	.xword 15
	.xword 9
	.xword 6
	.xword 11
	.xword 11
	.xword 13
	.xword 14
	.xword 13
	.xword 12
	.xword 14
	.xword 8
	.xword 1
	.xword 1
	.xword 5
_t1_copy_src:
	.xword 0xd32c3bb152ba419a
	.xword 0x5cfc384d7ad3a2ea
	.xword 0xd48f351b7ffe7aa4
	.xword 0x986949c4d81245e5
	.xword 0xba1e9bbc7c8fb09f
	.xword 0x8e7f869cb98a79a1
	.xword 0x80046902b09e55a7
	.xword 0xa29cfdde4303d88d
	.xword 0x6d5d0efba2ddca3e
	.xword 0xa8a8b8f0372cc417
	.xword 0xb41cff800667eb93
	.xword 0xa24c3c2adbcb2755
	.xword 0xb03207c6b422801a
	.xword 0xb96d55710d76e450
	.xword 0xb53cfb13cbae1497
	.xword 0xa4ab151560b37da8
	.xword 0x2f5159f54224dec8
	.xword 0x5d896149a14d8e5b
	.xword 0x7d13e7b59094d34c
	.xword 0xb715d03b53c10270
	.xword 0xc083efedcd0588f5
	.xword 0xe458491480dfc055
	.xword 0x15aea123aae7d914
	.xword 0xf9be52702cb91302
	.xword 0xaf4ec13862194a27
	.xword 0x5aa1bb49837ca776
	.xword 0x6cffd4c9930032e2
	.xword 0xaa78ce6d23aaad5f
	.xword 0xf7ffd4a397836e9a
	.xword 0x168c45dbf25e93fe
	.xword 0x1943cb352d468860
	.xword 0xcbe80ee0bd5f7112
	.xword 0xf8fa71e450896c4f
	.xword 0xc3b193a88552e8d2
	.xword 0xdbc36a87ad482f15
	.xword 0x18d9f2ec70f39f28
	.xword 0x1ce85566ecd786ba
	.xword 0xd98678c0056f71db
	.xword 0xf9edae24e5cf5a1f
	.xword 0xfb16b5297bd638d3
	.xword 0x4de062a6403018ff
	.xword 0x75b0351558ba3b42
	.xword 0xc99c5700c13fdfb1
	.xword 0xa0da6b3cfd4c3eff
	.xword 0xfc99017e44acd601
	.xword 0x16a8ae6065894456
	.xword 0xcca66d33effc5986
	.xword 0x8d19fcf30dd2cbd8
	.xword 0xfeeaf4fd55ab9f9a
	.xword 0x0c4dd680ee916370
	.xword 0x20d34647012dd787
	.xword 0x162fd486e9d95d7b
	.xword 0x6aaa18d7fffc40ad
	.xword 0x75e2d109b8579595
	.xword 0x440ad56d528a6e52
	.xword 0xefc49c74bb9dabea
	.xword 0xe28abf797eb15faf
	.xword 0x1be8fb009d2b8d46
	.xword 0x8874a9fe8a351464
	.xword 0xe9a946dbb3aa36ef
	.xword 0x9ab0108e17b52a2f
	.xword 0x806dbeafa15c19e9
	.xword 0x292d204d598c44be
	.xword 0xaa8f2bbeb7f910d5
	.xword 0x1c1c1c491038576d
	.xword 0x5aad69223ac84fd2
	.xword 0x41d7f96259748e88
	.xword 0xd8fa81d446303591
	.xword 0x1a53e48a155a7c40
	.xword 0xb773fadafeb010ef
	.xword 0xac10b497b4999255
	.xword 0xb063a277c74bda2a
	.xword 0xae2d1411d09a9c44
	.xword 0xe8b26e14c969d227
	.xword 0x602344205e5b351d
	.xword 0xb3a39063e5c884b0
	.xword 0xb78fb44918bf5bed
	.xword 0x85d0431b02f57b38
	.xword 0x59bbccad2b1698da
	.xword 0x4a16c536e3202311
	.xword 0xa306fefef148b04a
	.xword 0x9151a651fb904bc0
	.xword 0xb0a051ac24caa351
	.xword 0x1586873d435a5815
	.xword 0xa9425b063eb00630
	.xword 0x4d8c42941e030738
	.xword 0x6dc48249e15b3685
	.xword 0x4cd5475daaa622e4
	.xword 0xecf454e8445a637f
	.xword 0xab1e6e8d847360fe
	.xword 0x7d515e10ea28a81b
	.xword 0xd8f4ddcd91d41929
	.xword 0xde182a45feef72db
	.xword 0x30b7260e9325b6b5
	.xword 0xfbf052c592e442f4
	.xword 0xffa0147be2f801d6
	.xword 0x846a094bb67dec70
	.xword 0x0d1f9edbcb4e8889
	.xword 0x6cb5276a299d963f
	.xword 0x006c95af69d83ccf
	.xword 0x3d217a962014798e
	.xword 0xcf60b1b45564e273
	.xword 0x41e54f1d098d8df1
	.xword 0xa8a3d79e8cd21d30
	.xword 0xfae0c263bb5b59e8
	.xword 0x8a11f257731c334e
	.xword 0x3195953d5f7d043a
	.xword 0xe811201749800454
	.xword 0x7303cc7e560e9234
	.xword 0x010323e8ba55b419
	.xword 0xf72a8700632ffc1d
	.xword 0xa14279b8b9a944e6
	.xword 0x3696e0a878c3618c
	.xword 0xc7b965c152d885e1
	.xword 0x12b0eb37375047af
	.xword 0xf1e50f0191febd14
	.xword 0x9a43a429ef886fee
	.xword 0x22a5d5a438f1e770
	.xword 0x7e7f2b12272c6e27
	.xword 0x5d743797a2bb424f
	.xword 0x3b3732a73cb7014e
	.xword 0x389f5f0dbb4d6b99
	.xword 0x6064cfc089ba8ce1
	.xword 0x8b46b60a53a3df96
	.xword 0x6bc3cfbb2c65e9d1
	.xword 0xd728b7d1df201a18
	.xword 0xed2e98368dbdc0c1
	.xword 0xef3612d863bdbccc
	.xword 0x4fc3b5319210379a
	.xword 0x2ec834138496f177
	.xword 0x88931c051cfd16ec
	.xword 0xe41eb2beb14a37d2
	.xword 0xf85b20f576cd3f4d
	.xword 0xe09ef8bc335f6e89
	.xword 0x777994851cebdcaf
	.xword 0x0c07968a6bd55be6
	.xword 0x3c10035fdee65a16
	.xword 0xf48e0d1c1f0549f6
	.xword 0x288c2a4b0c67458a
	.xword 0xfd46ca579c87a32e
	.xword 0x28064325fbf9f7ac
	.xword 0x7920c02afb537f95
	.xword 0xacef0066a0ce6a75
	.xword 0x9ffe036c542f410e
	.xword 0x6e9e6682ebe2ac04
	.xword 0x09fa05f932a331be
	.xword 0x349efddb0988d11a
	.xword 0x2edcf0c1ada3ca02
	.xword 0x9481a1ffed2b0cce
	.xword 0x2e56dce3e72a5525
	.xword 0xe7ee94e52c9849c5
	.xword 0xa6a3252663c9f49d
	.xword 0xea9fc40f094ab708
	.xword 0x996ff47f3d05a6f8
	.xword 0xf0acf487239056c0
	.xword 0x02e25cc37416820d
	.xword 0x991c56c4960df913
	.xword 0xdebee633c8106d5f
	.xword 0xfe0f0566b7aee0ab
	.xword 0x1032b3a28f807b46
	.xword 0xc6d0a2290aaf11fd
	.xword 0x9f4a371127e7be44
	.xword 0xaff9d9da536aab64
	.xword 0xa27caeef22939b44
	.xword 0xc14641c9bea689d1
	.xword 0xef473fc1c795d1b3
	.xword 0xb54beb59a25df447
	.xword 0xae53272c7c120de8
	.xword 0x0f2510b26dc8f305
	.xword 0x7de72af41c15e63b
	.xword 0xb6f18ee52805adbd
	.xword 0xc3f5bda5f8f6d3e3
	.xword 0x146ee9e7fc1d29ac
	.xword 0xa7aca2953a1f6b43
	.xword 0x05676e3186a43b62
	.xword 0x2b1bc98036a33be5
	.xword 0x995cdacbb8b232e6
	.xword 0xbd9d2822aad2f6c3
	.xword 0x11c140ce67096d2a
	.xword 0x2990c832b8abaf5b
	.xword 0x7eb79585c90f563b
	.xword 0xb98d2f75210a909e
	.xword 0x4cd95aaac690d16f
	.xword 0xb9f09e625fd0ae60
	.xword 0x05bd4b5a6551611a
	.xword 0x83da53b29e39c14a
	.xword 0x681a339017a717f2
	.xword 0x5adf45f202484241
	.xword 0x049b3c639804ea63
	.xword 0x79c110059e1c74e3
	.xword 0xcabac829341fddb5
	.xword 0x4778a5f4d185a77a
	.xword 0xf7b5ec5b7e548aa2
	.xword 0x6423901890ccf336
	.xword 0x94b45fc10a9d5a66
	.xword 0x60a53246b75803a6
	.xword 0xebf96d81b6a03f53
	.xword 0x7426ce8257cd4576
	.xword 0xebff6d653f49d93a
	.xword 0x1b383085ba379915
	.xword 0x93f3604078c8a1bc
	.xword 0x5c0ff3cf6ae96953
	.xword 0x7baa6210da269b80
	.xword 0x3478e76d1f6f3580
	.xword 0x69dee226f4c0370d
	.xword 0xe4c164a9a97ca170
	.xword 0x8a432baba167223a
	.xword 0x2993effb0ff2b17e
	.xword 0x1d952894abd71698
	.xword 0x1ed9ae476572549c
	.xword 0xc7d0ac0c6774f072
	.xword 0xe76c19780378bfa7
	.xword 0x1f3ed0be5f9c6650
	.xword 0x6f382ed899cbb160
	.xword 0xf88a2471cfacfcbb
	.xword 0x21ad5902383b8e2a
	.xword 0x8e18ce996d3b82a9
	.xword 0xc9c262df80cbf7cc
	.xword 0xaa079d4284e632ed
	.xword 0x21bc48308326202c
	.xword 0x6082499c28d5e58d
	.xword 0x9cb108fcfdacce11
	.xword 0x2edad6f0d79cb4a9
	.xword 0x8fccc412365284ce
	.xword 0x941b45e2cf1b9d1b
	.xword 0x973b4f6ca3a09274
	.xword 0x2a659ec73755f11d
	.xword 0x0c11442b4a9d16ed
	.xword 0x91d721f54e87cecc
	.xword 0x460585c0ff12b4c7
	.xword 0x30e537c27efafc82
	.xword 0x5aded9e02e8166bc
	.xword 0x613165cc6a4f2d26
	.xword 0x533995484fc29095
	.xword 0xbe66e1484b69690e
	.xword 0xe0d87f0a9a78b961
	.xword 0xc32f0fe945f2b402
	.xword 0x51ed597bfecb4953
	.xword 0xf475af7b502f7f8d
	.xword 0x0a28da4117dc6984
	.xword 0x04e12236e77b3cd1
	.xword 0x4e6023c421a253db
	.xword 0xeea8d499bba92204
	.xword 0x8c51603b06b66952
	.xword 0xb0685b6a9c7cc725
	.xword 0xc30249bef0e6ac3f
	.xword 0x80ecba7802ebccb4
	.xword 0x604b3a16468729b1
	.xword 0x3ff4d4a68c73b7f1
	.xword 0x0856fd2ed0ca09b5
	.xword 0x05fc91cbec49d856
	.xword 0xec346496fdc1209a
	.xword 0x6e942c7a0059b7bb
	.xword 0x5396fe41ae61ac20
	.xword 0x96fb5c2a2a4737c2
	.xword 0x16561cfb48a42677
	.xword 0x3c4c9213f621fede
	.xword 0x1f65066f3e851f20
	.xword 0x1498aa421adc82bb
	.xword 0x40357b5f1e63119c
	.xword 0x38f11d5bcfdf2c5a
	.xword 0x961fabcada0c3c5f
	.xword 0x3b4c1db0c7e85614
	.xword 0x0320349467dd11ef
	.xword 0xc98bab8868d77a24
	.xword 0x60bd4a0424c504e2
	.xword 0x61254bcf7b899512
	.xword 0x09c3bd29281c524e
	.xword 0x01fc7229499b2d66
	.xword 0x2817a85f184da196
	.xword 0xa8664ef6e159835d
	.xword 0x2861077464615e46
	.xword 0x7a63885bf47bd577
	.xword 0x182efb771bca8cec
	.xword 0x9bf4a93ff6d7b92e
	.xword 0xaca57eb6c0e41bab
	.xword 0x5db2d1e975a5023d
	.xword 0x74eb09b2561b8f59
	.xword 0x211c063792c15d9c
	.xword 0xf4d353daac077613
	.xword 0xe3f8ab3b780210f8
	.xword 0x4ae554e8fd121775
	.xword 0x3f3d4160031d945c
	.xword 0x62db511cfa1b0243
	.xword 0xcf6ad1d6b6bea83e
	.xword 0x1a3bb7cc44cd4607
	.xword 0x0c9d530eab94d6dd
	.xword 0x70512f88fe39db0c
	.xword 0xb3161f7e158d4786
	.xword 0x581af286b35d1f08
	.xword 0xb6a45a4168c39996
	.xword 0x0264b41c418b3e97
	.xword 0x445ce93eb1493eb6
	.xword 0x24e9a7d1621241fa
	.xword 0xbdadaf1652a47eed
	.xword 0x5fe6227a344cf5ef
	.xword 0xc978dc92e7beb6d0
	.xword 0x417539562c74e383
	.xword 0x3484c167a8aa43b8
	.xword 0x0bbfc01b6fb47d35
	.xword 0x5cfe47521b3e1df7
	.xword 0xa41747a72f4e1ce9
	.xword 0xba26d027849511c3
	.xword 0x8deb6384a2bd4ce1
	.xword 0xd37785ceabdfad68
	.xword 0xc95bf0f8c60261a7
	.xword 0x5f85fbb8000b158f
	.xword 0x2fdeacbe18f40b4e
	.xword 0x14354abd663e0330
	.xword 0x379f68de69f67581
_t1_copy_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_copy_auth_key:
	.xword 0xbbf1f66117404349
	.xword 0x079a801b78013013
	.xword 0x8f1da5ef0fc9c47e
	.xword 0x02f8f4920aaa3791
	.xword 0xee2755f49ac4ac3e
	.xword 0x7519772fd17fae2e
	.xword 0xffb134f803e5bea7
	.xword 0x810c42ffd486e31c
	.xword 0x3564131528587d5c
	.xword 0x9049d8abd4cdc58d
	.xword 0xa025cfa4affdfb52
	.xword 0xe7f794902a4f2125
	.xword 0x2f9a0b5c61f20cd1
	.xword 0x0b15dbe9a427267e
	.xword 0x2eaeb440dd436a23
	.xword 0x2c8993039e8ef5d1
	.xword 0xe56145a375a86abb
	.xword 0x13b9637dd97c9691
	.xword 0x10d00c68be911198
	.xword 0x2308a8165447cf4e
	.xword 0x0ac6bc2c546712e5
	.xword 0x231551edec949062
	.xword 0xf4133f36363f1cfd
	.xword 0x66236be1d12d1657
	.xword 0x4edcdaa5aa4f3172
	.xword 0x9c521e882df36e80
	.xword 0xe39a6b446ef803c1
	.xword 0x05bb771bb5481b4a
	.xword 0x586d7895940de082
	.xword 0x6455a9844cb5e992
	.xword 0x11c4c89f742ee3ab
	.xword 0x07287dffb3ac4080
	.xword 0x066b22e0c28e745a
	.xword 0xfeb2a3ac38dc553d
	.xword 0x5d1b5751c84ff780
	.xword 0x87800cbe9d4d1943
	.xword 0x4e01da4b5716c5c1
	.xword 0x544464c1711b372d
	.xword 0x24f9517e7d7dc1e0
	.xword 0x4ee349465168e2b5
	.xword 0x57fe748e55b9cffd
	.xword 0x85e554e0786306ff
	.xword 0x4bc97bd84e64e8f5
	.xword 0xdc1aa39b36159f33
	.xword 0xab31665c2367748f
	.xword 0x4d2ee66c18278389
	.xword 0x0cb1225ff291eecc
	.xword 0x70e3cef7f60347cb
	.xword 0x1d29aa6065587026
	.xword 0xf50b1b39518f6636
	.xword 0x7f60412d5142c8b6
	.xword 0xd9d62c94752fb495
	.xword 0xd5d03a17acdd6e5b
	.xword 0x5d0f290c080b3ee2
	.xword 0x5c8d9f8ede427395
	.xword 0x6b1b72745e1eb219
	.xword 0x77317d83e1892e4d
	.xword 0x03282bec4dc9e4e2
_t1_copy_auth_iv:
	.xword 0x1bd3c83bd7364bd1
	.xword 0xa1fb32d7875cd269
	.xword 0xed51b606f31fb2b4
	.xword 0xa30ab48772de118e
	.xword 0x3c41cf13f202a5dd
	.xword 0x5cc31a0518796542
	.xword 0x591d70f4a6afd680
	.xword 0xf29bbf4133b34a30
	.xword 0x102a8380329d7ae5
	.xword 0xdd399d6b4dd871d8
	.xword 0x521d4ff6a6e893be
	.xword 0x939e968fdfe07136
	.xword 0x47b915e4a895d61b
	.xword 0x423b56020aca6812
	.xword 0x66acc4ca46c6b6bb
	.xword 0xfaa34cf476027b9e
	.xword 0x249d2d7d8978328d
	.xword 0xcdefda35116ff0e0
	.xword 0xd97327f83205f407
	.xword 0x34774abfe2eac547
	.xword 0x39da67c67254f8d2
	.xword 0x04b04d79b2902416
	.xword 0x3cdce51df58f3597
	.xword 0x6d176db7078ffda7
	.xword 0xf71e2e3eb146d1fa
	.xword 0xa30ce9d58071e758
	.xword 0x9dc828bcf16e59e7
	.xword 0xb7023d9e3352cb46
	.xword 0x831a5b9377a46aaf
	.xword 0x1e585c92cd21d67a
	.xword 0x40ae15169928494c
	.xword 0x560e62f06008f459
	.xword 0x51146e6d739b461c
	.xword 0xb3c1f4408e5173be
	.xword 0x06431f28ef42d045
	.xword 0x95de8e81112d6544
	.xword 0x7ead342aa6c8d5e0
	.xword 0xd40f93175dcc9085
	.xword 0x54c3c1b8721204b5
	.xword 0xf784fc23f20ab5db
	.xword 0x989fdc5b6fdbd1d9
	.xword 0xa9fe3c9e85250fef
	.xword 0x2ee6269ceb4c06b9
	.xword 0x3490c535810186ce
	.xword 0x3a10ebec3d4c98f4
	.xword 0xea12f5826ec0f08b
	.xword 0xe4fb94072f13f829
	.xword 0x459c921914451c04
	.xword 0x8ac9ae2d3cab14dd
	.xword 0x0228ef4885e7b1f1
	.xword 0xce6f4a750173285f
	.xword 0xf3c9914d93e0b76d
	.xword 0x8ef49335a1c4634b
	.xword 0x19d362241846709e
	.xword 0xf6610b7d8c1157bb
	.xword 0x2dafe912ed76fcbc
	.xword 0xcab4ac681e7a07b0
	.xword 0xa8c04aa0a8a91169
_t1_copy_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_crc_key_array:
	.xword 0x7e7fb9e61ad11a88
	.xword 0xe6513841cb423fa7
	.xword 0x5997a39ce63032ce
	.xword 0x78b7a8a6650974ec
	.xword 0x26c064c10c5761d4
	.xword 0x79e88bd7420897ef
	.xword 0x7b04dbceb25e39c1
	.xword 0xbbc42cf48476dc03
	.xword 0xd36f468680c8d5e7
	.xword 0x7e81ff50063b0fb5
	.xword 0x0faa48fad657d77a
	.xword 0x2f5c8748d7a81898
	.xword 0xc6829d1b9db04cd7
	.xword 0x5fcb0dd5081fca26
	.xword 0x785f59c1134211ec
	.xword 0x8346bdbde5f270c4
	.xword 0x0d8d08ef209ac812
	.xword 0xacb2ce836625d8f7
	.xword 0xfeb59bc7d4c388c5
	.xword 0x9016a1c22c8af78b
	.xword 0xb1e376486a07f64d
	.xword 0x85e1f3f17553b98a
	.xword 0xf26e468107ddc02d
	.xword 0x11c9d37e24279fdf
	.xword 0x6708591e10a76da2
	.xword 0x4b80a8ca1d758f0a
	.xword 0xc840ed86b15dded0
	.xword 0x9cd5d95157239918
	.xword 0xe16665da7d907c61
	.xword 0x4aba192161f27618
	.xword 0x9dbadd2f63b7d37d
	.xword 0x8f4c1670b4f457b0
	.xword 0x6c4cc9f2aceac755
	.xword 0x5a0752a347cb1d79
	.xword 0x1cc2503c5016cf87
	.xword 0x674342b77cf389c3
	.xword 0x296fcdfd8e68cd4e
	.xword 0xc2fdc2ed69613465
	.xword 0x33315ca0a51430c9
	.xword 0x3ef28f0eb8994b03
	.xword 0x905fbaac8b69327d
	.xword 0xa4a88a250fe644ff
	.xword 0xb502167dae4db7be
	.xword 0xf440ca3a0b91233e
	.xword 0x67f33637c0bc2afa
	.xword 0xd1ba73f03fe7dfcb
	.xword 0x8843c11e355806a1
	.xword 0x312d3b50952b9261
	.xword 0x5ff2c1024daf0daf
	.xword 0x6d04eb7e1e02f5e3
	.xword 0x8443712342952284
	.xword 0x57e9021b0ea42f37
	.xword 0x1d0b84dba7ed02a2
	.xword 0xb2d76edc40de055c
	.xword 0xe6c8dcdd9cda03c4
	.xword 0xc0cef74a205b140a
	.xword 0x352a06bfbd494fc9
	.xword 0x42993dff8cc3c061
	.xword 0xc399f52aa01ab54a
	.xword 0x8a7801decb0604f3
	.xword 0x8a3feb73f390286e
	.xword 0x59438f9eef1ab1cb
	.xword 0x1dfbaba512c33182
	.xword 0xd9dfe514fbf9c9d7
	.xword 0x7cd92256a1a4ec1e
	.xword 0x867462e39a64d854
	.xword 0xd27829e1060c3144
	.xword 0x380bad59df9d38e9
	.xword 0xb118a31043497b1e
	.xword 0x5c2b8317e1b6d431
	.xword 0x6633ea84bdb8e291
	.xword 0xdd1258ad34c5ced2
	.xword 0xdea1eb446a399d80
	.xword 0xa48bb1b016669968
	.xword 0xcce783654a614b72
	.xword 0xd9e0a94db1216877
	.xword 0xdd0fda14ed928003
	.xword 0xbef4b6fd738bec1d
	.xword 0xf6101c998e83f266
	.xword 0x12e3ed90cbce74d6
	.xword 0xf5e40ff1adc13c4f
	.xword 0xcd61661024efb5fc
	.xword 0x60d899b59036a923
	.xword 0xdd8a58282321f261
	.xword 0xad64aa36c23bc4d5
	.xword 0x853c8cd30c499a7e
_t1_crc_iv_array:
	.xword 0x5deaa6d315093bc4
	.xword 0x9af7df558201759b
	.xword 0x681cba3ac2f13cd7
	.xword 0x02ac67ba4ff79fc3
	.xword 0x4f25d32325ef5ab6
	.xword 0xde39e181af099c54
	.xword 0xc69903d7ea84f9a3
	.xword 0xd57347ebba640909
	.xword 0x2026373a7c4373ad
	.xword 0x3a945118f75b4f36
	.xword 0x2626a1c25e278f68
	.xword 0x3fcd8f1c1cd96afe
	.xword 0x93482fa71f20ccba
	.xword 0x66561c5418058f00
	.xword 0x1b44d136f4a9fefe
	.xword 0xef56665def23c621
	.xword 0x0e25c551454a60f1
	.xword 0x1664a45b6ce8a269
	.xword 0x3257b9cf9d14d55e
	.xword 0xdf36a3d2b533102c
	.xword 0xdc47fbb144c33496
	.xword 0xe64736a53e63441e
	.xword 0x700a9fc595f88b59
	.xword 0xa92c4727c95f42f3
	.xword 0x3bce9226bb96c7a8
	.xword 0xe1a0a3317faf3734
	.xword 0x0ce61313d8079818
	.xword 0xfb5834883fe1923a
	.xword 0xd3cff9462516bc52
	.xword 0x1802f72bbd42a128
	.xword 0xf0ecf92cbf6ac404
	.xword 0xa8baa2d6857501d0
	.xword 0x7ff96765e887b4ff
	.xword 0x34aee6b4371a58e9
	.xword 0x6da2a33d3e89b19f
	.xword 0x6875eff981ea09fe
	.xword 0x01c55cd689a4ca6b
	.xword 0x99b79fb3c9861987
	.xword 0xa654096de34f7eab
	.xword 0x273696abc7099e95
	.xword 0xedf97a1f8415f937
	.xword 0x9e04901738e7199b
	.xword 0x5fd755ae83466c82
	.xword 0x9c89df3c5bfb209b
	.xword 0xb33beaa35fad5c83
	.xword 0xe52992a80906d093
	.xword 0x2e5c57cc5c55127e
	.xword 0xbd1159a64115b550
	.xword 0xa213917ee853b7d0
	.xword 0x39ce09d3edb5f393
	.xword 0xe6f4869c1ed3a631
	.xword 0x2806f78556c352cf
	.xword 0xb6bbe9a8b1dd9b01
	.xword 0x92325e401e3517ba
	.xword 0xb01e80c85484947c
	.xword 0x5fb9b000800dc77f
	.xword 0x0df9b1030323d42e
	.xword 0x94d58b54de9ebd62
	.xword 0x87a164db51cf625f
	.xword 0xf60177ac26a1a520
	.xword 0x9610eb39302285db
	.xword 0x998807871eaf307a
	.xword 0xa33bd85edc6ab625
	.xword 0x8a8e219ae91299a2
	.xword 0xc6f287111438ae23
	.xword 0xcaca62d2da06f695
	.xword 0x5aeb5624b42dd5a6
	.xword 0x07ed4e91f83b1491
	.xword 0x5f35ffe515743f7f
	.xword 0x987851dc2de403e3
	.xword 0x05748137706bd37d
	.xword 0xc804cde1d63ab8d2
	.xword 0xd820108725c19dd2
	.xword 0xd8a4d457c15069ff
	.xword 0xcc6c9b4211f284da
	.xword 0xbad8a53d1aceaf78
	.xword 0xa4a33178c82750e4
	.xword 0x64598414bb1d18a6
	.xword 0xa7ede3dcb3014636
	.xword 0x2f2bb17be83f1b1a
	.xword 0x91a8be4771150f75
	.xword 0x45f5853fa69b654c
	.xword 0xfdc521b0a1987f5c
	.xword 0xff8e3bcdbc8a676f
	.xword 0xc0081f5c45acc3a0
	.xword 0x3b6554e05e739366
	.xword 0x7a573f0e61b7bf07
	.xword 0xb1327befa06082af
	.xword 0x3e51f2f3baf27f85
	.xword 0xca93dc4ee23d3036
	.xword 0x72b380a609a239fa
	.xword 0x4046eab1f5fa38d0
	.xword 0x8dc138f044b46159
	.xword 0xb20c2bc93c3cf6e9
	.xword 0x544c4442600ea562
	.xword 0x15597adb5eeac172
	.xword 0x31e8b821b6e462ba
	.xword 0x46842ffb0d2a9b59
	.xword 0x59c688dc0c5759c5
	.xword 0x851755ef93687060
	.xword 0xaf84a805a82651e5
	.xword 0x3e1c192350414550
	.xword 0xe290b6e57dc4ee3c
	.xword 0x2e52a6ba247c4b5c
	.xword 0x688fb6aa4e3ce4a3
	.xword 0xe5a309c3f3633e5d
	.xword 0x9d86ca0a29c79e6f
	.xword 0x26330e8f1b4cce77
	.xword 0x2bff537bb2775ab8
	.xword 0x568b8c9999485213
	.xword 0x8c993dad9ada8e26
	.xword 0xc1402557c1d04042
	.xword 0x5089f9527f1995c8
	.xword 0x4dedd0d926ccb49e
	.xword 0xc0b317dc2bb5bd77
	.xword 0x106b728ec5010c6b
	.xword 0xf1a18d4721d8059b
	.xword 0x10aafc468cfbb15a
	.xword 0xce3bc842054959ec
	.xword 0xac47f38d02a81da2
	.xword 0x7fce88453953d38b
	.xword 0x3c0830b1e9664935
	.xword 0xc332b6b986419053
	.xword 0xe3fc33d84d7ace50
	.xword 0xc8963f89464f3b27
	.xword 0xf35a2b7f3baab047
	.xword 0x33dfd91baf65512b
	.xword 0x2461a1d8772833cc
	.xword 0x69a8277e12664d52
	.xword 0xb1f90746f4d9e9ec
	.xword 0x986a5da4b65024e5
	.xword 0x05c64dd01459d909
	.xword 0x4046f909784b429d
	.xword 0x2c931e91022c574a
	.xword 0x89f6f805f4540219
	.xword 0xb2044c59c0689c72
	.xword 0xf499262278f49e18
	.xword 0x626fb2dfa06f0563
	.xword 0xda92da81b6bfbd16
	.xword 0xe27d2646d31144fd
	.xword 0xd9d61ee28196ec10
	.xword 0x7c4e7c5a7b958dcf
	.xword 0x80a51fe21b98e719
	.xword 0x014fcd235a0a64b8
	.xword 0xaad684fa6951a68f
	.xword 0x18b525151f674cbd
	.xword 0x6f55f5feea216b62
	.xword 0xf86897e4100340bb
	.xword 0x5aa1afc06798645e
	.xword 0x355fa694a0b35517
_t1_crc_alignment_array:
	.xword 2
	.xword 0
	.xword 0
	.xword 7
	.xword 11
	.xword 4
	.xword 8
	.xword 2
	.xword 2
	.xword 15
	.xword 10
	.xword 15
	.xword 14
	.xword 12
	.xword 0
	.xword 1
	.xword 4
	.xword 4
	.xword 8
	.xword 2
	.xword 4
	.xword 12
	.xword 4
	.xword 12
	.xword 8
	.xword 4
	.xword 4
	.xword 10
	.xword 8
	.xword 10
	.xword 2
	.xword 9
	.xword 5
	.xword 9
	.xword 13
	.xword 10
	.xword 15
	.xword 10
	.xword 14
	.xword 8
	.xword 10
	.xword 15
	.xword 3
	.xword 10
	.xword 0
	.xword 7
	.xword 0
	.xword 6
	.xword 14
	.xword 4
	.xword 9
	.xword 13
	.xword 0
	.xword 0
	.xword 10
	.xword 11
	.xword 4
	.xword 0
	.xword 11
	.xword 7
	.xword 1
	.xword 5
	.xword 5
	.xword 1
	.xword 0
	.xword 7
	.xword 2
	.xword 13
	.xword 13
	.xword 0
	.xword 15
	.xword 9
	.xword 3
	.xword 8
	.xword 13
	.xword 3
	.xword 8
	.xword 9
	.xword 13
	.xword 4
	.xword 13
	.xword 13
	.xword 9
	.xword 0
	.xword 0
	.xword 5
	.xword 4
	.xword 1
	.xword 0
	.xword 9
	.xword 2
	.xword 7
	.xword 13
	.xword 0
	.xword 8
	.xword 1
	.xword 10
	.xword 12
	.xword 11
	.xword 10
	.xword 4
	.xword 8
	.xword 9
	.xword 0
	.xword 8
	.xword 6
	.xword 12
	.xword 10
	.xword 13
	.xword 14
	.xword 2
	.xword 11
	.xword 2
	.xword 14
	.xword 6
	.xword 6
	.xword 9
	.xword 3
	.xword 14
	.xword 15
	.xword 6
	.xword 2
	.xword 14
	.xword 11
	.xword 10
	.xword 2
	.xword 2
	.xword 11
	.xword 1
	.xword 0
	.xword 4
	.xword 3
	.xword 0
	.xword 7
	.xword 13
	.xword 0
	.xword 4
	.xword 12
	.xword 4
	.xword 3
	.xword 0
	.xword 10
	.xword 12
	.xword 6
	.xword 12
	.xword 11
	.xword 13
	.xword 14
	.xword 8
	.xword 4
	.xword 9
	.xword 14
	.xword 5
	.xword 13
	.xword 9
	.xword 13
	.xword 8
	.xword 0
	.xword 2
	.xword 8
	.xword 5
	.xword 6
	.xword 8
	.xword 4
	.xword 8
	.xword 1
	.xword 8
	.xword 3
	.xword 14
	.xword 12
	.xword 14
	.xword 12
	.xword 1
	.xword 4
	.xword 7
	.xword 8
	.xword 2
	.xword 9
	.xword 8
	.xword 10
	.xword 11
	.xword 8
	.xword 2
	.xword 15
	.xword 1
	.xword 15
	.xword 9
	.xword 0
	.xword 11
	.xword 3
	.xword 9
	.xword 13
	.xword 2
	.xword 6
	.xword 14
	.xword 8
	.xword 11
	.xword 11
	.xword 7
	.xword 12
	.xword 15
	.xword 13
	.xword 3
	.xword 13
	.xword 3
	.xword 1
	.xword 8
	.xword 0
	.xword 3
	.xword 11
	.xword 11
	.xword 1
	.xword 15
	.xword 15
	.xword 2
	.xword 5
	.xword 12
	.xword 3
	.xword 8
	.xword 7
	.xword 4
	.xword 15
	.xword 13
	.xword 0
	.xword 15
	.xword 4
	.xword 4
	.xword 10
	.xword 8
	.xword 8
	.xword 11
	.xword 15
	.xword 1
	.xword 0
	.xword 3
	.xword 11
	.xword 4
	.xword 8
	.xword 3
	.xword 12
	.xword 7
	.xword 3
	.xword 1
	.xword 6
	.xword 8
	.xword 13
	.xword 5
	.xword 11
	.xword 14
	.xword 1
	.xword 13
	.xword 8
	.xword 1
	.xword 1
	.xword 8
	.xword 14
	.xword 0
	.xword 1
	.xword 8
	.xword 10
	.xword 2
	.xword 2
	.xword 5
	.xword 1
	.xword 4
	.xword 0
	.xword 3
	.xword 7
	.xword 7
	.xword 12
	.xword 11
	.xword 8
	.xword 1
	.xword 1
	.xword 6
	.xword 3
	.xword 10
	.xword 4
	.xword 12
	.xword 5
	.xword 5
	.xword 4
	.xword 5
	.xword 9
	.xword 6
	.xword 2
	.xword 11
	.xword 0
	.xword 6
	.xword 2
	.xword 0
	.xword 13
	.xword 15
	.xword 2
	.xword 15
	.xword 12
	.xword 8
	.xword 11
	.xword 7
	.xword 3
	.xword 7
	.xword 6
	.xword 3
	.xword 13
	.xword 2
	.xword 12
	.xword 6
	.xword 11
	.xword 2
	.xword 2
	.xword 9
	.xword 8
	.xword 0
	.xword 13
	.xword 12
	.xword 10
	.xword 11
	.xword 13
	.xword 0
	.xword 7
	.xword 3
	.xword 4
	.xword 5
	.xword 12
	.xword 14
	.xword 13
	.xword 15
	.xword 12
	.xword 13
	.xword 7
	.xword 10
	.xword 12
	.xword 9
	.xword 4
	.xword 5
	.xword 2
	.xword 4
	.xword 2
	.xword 12
	.xword 12
	.xword 5
	.xword 6
	.xword 14
	.xword 6
	.xword 2
	.xword 14
	.xword 10
	.xword 7
	.xword 14
	.xword 10
_t1_crc_src:
	.xword 0x29a40f442e7aa12e
	.xword 0xda446a5d74669962
	.xword 0xabbb9d40194c98f7
	.xword 0x36b2de143469afbe
	.xword 0x1e51f0311f1b4c16
	.xword 0xcaf96902b01144e3
	.xword 0x8f46ef526518cc85
	.xword 0x69e30a075e7c83cf
	.xword 0xdbcef177478018c2
	.xword 0x5b6f59185a9f0059
	.xword 0xe798c6787bfbe8e7
	.xword 0x2c9d1a7695ecaed5
	.xword 0x2194ee30f8bfbcbc
	.xword 0x32788d8ca3f02b49
	.xword 0x6feb83c22c462829
	.xword 0x73a9bb1ab9c5263a
	.xword 0x53705870c65ebce2
	.xword 0x0afcad9272926b58
	.xword 0x0fb1c1286f7085a9
	.xword 0xd8e37b12bffc05da
	.xword 0x06f862188b19dd14
	.xword 0x66cad02eadc78f86
	.xword 0xb024659b1594de07
	.xword 0xc64d1f0bcfdae1c4
	.xword 0xde193be089cf747b
	.xword 0xd9dcd67a0bdc4ddd
	.xword 0x32b34ae358b825bb
	.xword 0x3fceee31f0a13684
	.xword 0x24b20baa41952fbe
	.xword 0x21f40aec2ef439e8
	.xword 0x94dc0566a6d3a751
	.xword 0x87c32a75048bfb85
	.xword 0x7fa1a8b7e7fe8cec
	.xword 0x9e17c7ec8f775406
	.xword 0x6868c92485ed959b
	.xword 0x87295f16098f82b7
	.xword 0xa5d04ff9c0e20732
	.xword 0x8f64fccc3062b073
	.xword 0x9c707bab84fb0a87
	.xword 0xe78a7d5d7e522789
	.xword 0x9087bcd2ac19a3a8
	.xword 0xdae73242faa54b85
	.xword 0xe3d62ff8e24f273c
	.xword 0x3585bca1fcebff5c
	.xword 0x84e14d74831e9cf4
	.xword 0xa635c85bc05b8aae
	.xword 0xf9ba6cb12bd79b28
	.xword 0xab7f261a407b5fb1
	.xword 0x50fd7cbdae1a00f6
	.xword 0xa122a55e4d86aa80
	.xword 0x94d78069891ff46a
	.xword 0xaf0ac586f5e09639
	.xword 0x3d283069fcafaca6
	.xword 0x004c25ef55fdded6
	.xword 0xd2212af5fb3e9c3b
	.xword 0xeebfc966e0dbc512
	.xword 0x92f8d04e0eb9c961
	.xword 0xe4e7191c9ba215b7
	.xword 0x380ac95d9be981d3
	.xword 0x4996b6144d622d10
	.xword 0x4803da9dc35c7eee
	.xword 0xd58f4627a3149f5c
	.xword 0x57e0f236e8254e82
	.xword 0xba65e3c6d4a601cd
	.xword 0xbe3edd6b54b9cdea
	.xword 0x851e193340a4fedf
	.xword 0x214e591e25b8367e
	.xword 0xfcc2a0aab1674d2e
	.xword 0x5f8fbe1b7ae38127
	.xword 0x37f2fd2ffb263ca0
	.xword 0x67c5958c8f9a132e
	.xword 0x39c002e2be3a522b
	.xword 0xb78c87c418da605d
	.xword 0x1bbeb01e9f805814
	.xword 0x9d828ea7ccba632b
	.xword 0xdb5f7035e2ab5e0b
	.xword 0xb03c85c1e51e2afa
	.xword 0x15b698dd8e526a86
	.xword 0xbed8753017403777
	.xword 0x0283fd5636d20119
	.xword 0x2503d9bcf79199d4
	.xword 0x96155ce960712e16
	.xword 0xf9b7aa4acacf5487
	.xword 0x13d38ac82f3f9faf
	.xword 0x2d99b8fcb1ecb123
	.xword 0xa0988d76f86a7897
	.xword 0x5fa53c6c6f802932
	.xword 0x17b384de2432c429
	.xword 0xd84b48b713de3831
	.xword 0x9015764dd1a1726c
	.xword 0x902b82130be26aae
	.xword 0x3199bab2df47efb2
	.xword 0x0e88916b1b29c3e0
	.xword 0x93864bcf1a90218a
	.xword 0x909e53e85c0c12a6
	.xword 0x21404a514f91c1bb
	.xword 0xc90a2f11dc333909
	.xword 0x12ac466dc6327f48
	.xword 0xa9c046d5a4bdf252
	.xword 0x27f34acbf3390540
	.xword 0x5b5607f0086718ff
	.xword 0x36e5fc55a2c89ac2
	.xword 0x57dadb13a13d7d35
	.xword 0xa5dfb6034d18806c
	.xword 0x76d4f1d0c296c516
	.xword 0x580a890d666df296
	.xword 0x96e4279bb18da359
	.xword 0x49a25abe0224f88b
	.xword 0x451176a17112db6c
	.xword 0x7a8419d4d76df132
	.xword 0xa3477a0547fd4436
	.xword 0x3066ed8cefbcdc01
	.xword 0x003c0a3d048fd740
	.xword 0xd6af8d84011d84dd
	.xword 0xdfe7bcae2ade4784
	.xword 0x61492a358e872c73
	.xword 0x9488fa62461049ec
	.xword 0xe5ec56d4101bb3a7
	.xword 0x07c1e2f8cf6abefe
	.xword 0x4f2a1ba85360f35a
	.xword 0x601a0f203d723ed4
	.xword 0x88a083f81a10295d
	.xword 0x614cc600876c6058
	.xword 0xf976f5f2fcfb6a3d
	.xword 0xc06aa0d2ae6eaf79
	.xword 0x95295b513443d399
	.xword 0x25c8e9d5467e7b9d
	.xword 0xc342574927879758
	.xword 0xa45d319251628914
	.xword 0xbb5438a3c95152b4
	.xword 0x39381602bfe3137f
	.xword 0x962ff3bc78e8894c
	.xword 0x5e6fc9f2efa3f347
	.xword 0xcc83e03b753e6667
	.xword 0xdff1eadb92f2217b
	.xword 0x7d7995434a2c8e23
	.xword 0x68536afcf483e3fc
	.xword 0x9e1e33e63152ca66
	.xword 0x704900e483358797
	.xword 0xdc83a51c0b9aa63b
	.xword 0xe7aaf136ebfda359
	.xword 0x776de5e2498f86c3
	.xword 0x5280b9464b546b18
	.xword 0x320c2ae23b4119d7
	.xword 0xe3389ec32441fc91
	.xword 0xecabb5c9a1b066ea
	.xword 0x81b2be6e7cc32873
	.xword 0x1a84672e91c3db3d
	.xword 0xbb43242fdf50bbb8
	.xword 0x9e6b3848321e88cf
	.xword 0x3072eb3bfebd4e56
	.xword 0x6877fae4f09e8fc9
	.xword 0x93c28c3f28e9a1bc
	.xword 0x0d16ec32ddd5b30c
	.xword 0x178888f8d967c808
	.xword 0x09136f7c7a5a1aba
	.xword 0xbeb2542422de9130
	.xword 0x982e863d93c6a394
	.xword 0x08c779a868eb70fb
	.xword 0x312a1ca04b1c54d5
	.xword 0x3fe3b2e2967d286e
	.xword 0xaf8a4dfae1aa59b6
	.xword 0xb63754c48f83260f
	.xword 0x79dd6b3610942899
	.xword 0x8cdcd5d2c641f326
	.xword 0xb01deb3a9523ca2f
	.xword 0xd816efd74c175fd0
	.xword 0x72cb58cb509f9ebb
	.xword 0xbdebd3dc38de6835
	.xword 0x3cfe0ced724f680b
	.xword 0xa081d86cbb4a3cef
	.xword 0x93d32af6d83962a6
	.xword 0x9a766ba6bbd023a9
	.xword 0x8b461dfc24e56f33
	.xword 0x796c65e4e3f5f00f
	.xword 0xc44ac3cc8a7585dc
	.xword 0x35a10faa7dd80a26
	.xword 0x1f3495797d3237e4
	.xword 0xf784993ebf8df969
	.xword 0x2187b613d60635e5
	.xword 0xaea151de5a266ab8
	.xword 0x268bb86897f9756d
	.xword 0xad2fc6b1bf22bf7c
	.xword 0x24f6de3232f67191
	.xword 0x927584ccca27c521
	.xword 0x71b654c2b02eece1
	.xword 0x8397f7ba88de2e49
	.xword 0xc2ec2f69e9f41164
	.xword 0xc24e2a64a451f40d
	.xword 0x01b10a2b48f5742f
	.xword 0xd0e05fd2e6dd0838
	.xword 0x4c7fd80f83596eec
	.xword 0x4553d2b8d42a6682
	.xword 0x5f1bba6198ee1f08
	.xword 0x18928b06db898288
	.xword 0x1d851f9c1b133d66
	.xword 0x969b4c51021063a9
	.xword 0xc08b5caade8abf6e
	.xword 0x34864b6a3b9d0786
	.xword 0xa6b5b6d15cf9bf00
	.xword 0x50661d9a9fbbc10f
	.xword 0x5f19270eb43536d2
	.xword 0x2f5d9365da7a931c
	.xword 0x4e5628ee17beb5be
	.xword 0xb7fd5f681d8226c0
	.xword 0xd66a7e4d83690754
	.xword 0x9a44cd31846a8ec1
	.xword 0x5f8b3bb27d3efce5
	.xword 0x1e8cbef060bf5a1b
	.xword 0x57f110291a3964f9
	.xword 0x62d8ae6a834a66b3
	.xword 0x980942f86af1c21a
	.xword 0xd6a03a9c75a2e656
	.xword 0x14bebbe768fdae10
	.xword 0x59e98b019d00e389
	.xword 0xc1171ff96f258a41
	.xword 0xd1e83484f3642a93
	.xword 0xc6a2c6bebbca5c38
	.xword 0xbd0589c030bbe799
	.xword 0x2e7be5871e4a91b9
	.xword 0x8dd2137c472dfddb
	.xword 0x6afacdebf9cf95c8
	.xword 0x6cf3a4aaf9fbab44
	.xword 0x6ae48458b309e62b
	.xword 0x38576cca7aa73f77
	.xword 0xd665226615f7d26a
	.xword 0xacadfde1133d745a
	.xword 0x49e4488c93a3a62d
	.xword 0x4e2b3365a7347f28
	.xword 0xf464a39271058e44
	.xword 0x55400b7944a60d5e
	.xword 0xe3dc8c0b19cbedbe
	.xword 0xd83ed1c55e3b824a
	.xword 0xf772d5ac7076992f
	.xword 0xfe9a09ed75cb7fdd
	.xword 0xa57fc31b6d0310c0
	.xword 0xf94e2dc6aae3cc33
	.xword 0xe7cd7445ddc91a68
	.xword 0x9369ff07179c0223
	.xword 0xa39d2581fa7d5fbe
	.xword 0x4a4aee6d700fa06a
	.xword 0xdcf3e23faaefaabb
	.xword 0x8df18dd94b483c31
	.xword 0xb752876b29d59817
	.xword 0xd9f8de309c13557c
	.xword 0x841be622c21c41e1
	.xword 0x5799de47af154c54
	.xword 0x811898e9dcd2d839
	.xword 0x398feee913a478cc
	.xword 0xa5aebcf77927e398
	.xword 0xf53133a93effa1f7
	.xword 0x06668a22d85103a5
	.xword 0xb0a94ba378490487
	.xword 0x2b1e067a9ab86832
	.xword 0xf87ca072c6a3f43f
	.xword 0x46c0ffc306c89256
	.xword 0xd432d5cce0977281
	.xword 0xfb27bfa3a5632f6f
	.xword 0x939ba34d53b87c81
	.xword 0x87abac6fa14f23a9
	.xword 0x80f95f10e751d86b
	.xword 0xafc2468e8d419d0b
	.xword 0xd843835de72f9bc2
	.xword 0x3622910365c41ed0
	.xword 0x57c9e9057888a864
	.xword 0x1e66d8ada4a94b84
	.xword 0xd219beddf832d3c7
	.xword 0xb36a6dc455bcb305
	.xword 0x4c159e98998b0fc5
	.xword 0xb5600be736fc8ff0
	.xword 0x61eb16957b44af13
	.xword 0x1a6ecb0248a4d702
	.xword 0xe14f861c0645fad9
	.xword 0xfa97fc92c7861736
	.xword 0x38d0899435b9c348
	.xword 0x61877d2415ed93e8
	.xword 0x86054d6f07c5b5c5
	.xword 0x79a1e98a336da13b
	.xword 0x729844093608b75a
	.xword 0x998f34e9c25b0484
	.xword 0x14272f5cd6057bbc
	.xword 0x6f8e7e9798d0114a
	.xword 0x482961da9d13990e
	.xword 0xc4db698cd0a1b3e5
	.xword 0x629d1e0d0a870f6b
	.xword 0x3ec60dcf827428ea
	.xword 0x3a148d3ea12f7fa7
	.xword 0x3333db7c20f1ad3b
	.xword 0x064e24b56866127e
	.xword 0x3912f4a771dd1fdc
	.xword 0x496dbdc1c175c0e4
	.xword 0xf71a7e7ebb4d6002
	.xword 0x14bc09c9a0186bdb
	.xword 0xaed1ae31f3cad237
	.xword 0x69900973bbdb59a4
	.xword 0xfff8a60787d9c1d0
	.xword 0xf0ae2a91783ebae6
	.xword 0xc10e39fa3e0d8b76
	.xword 0x7bddaa6628ac5932
	.xword 0x2edfc0e609c0ce1e
	.xword 0x464b9a5951c65342
	.xword 0xf3feb1ff3304e1dd
	.xword 0x0c123803023fada8
	.xword 0x13998f8539573876
	.xword 0x08bef288adfb0d71
	.xword 0x5bbf9288a5f45770
	.xword 0xefd7b77c85aa3192
	.xword 0x1c24118238c67b8a
	.xword 0xac64df67594f0a1b
	.xword 0x0ba917a93e7aecf6
_t1_crc_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_crc_auth_key:
	.xword 0x9d09b3d0decd1fd8
	.xword 0x6cef11ae440bd4da
	.xword 0x607cc88da9c3ac26
	.xword 0x3b43624517cbf33b
	.xword 0x16ab5c3a2bca3d11
	.xword 0xdb8afe0b7b073de0
	.xword 0x7b3e8932e5bf35a8
	.xword 0x27d6a688fd4e6cd2
	.xword 0xee113a8a56b50476
	.xword 0x44d55c69473604c4
	.xword 0x7f236b0846f711e2
	.xword 0xec5179f6db8108a4
	.xword 0xe623c109ed53fc13
	.xword 0x2167143dcdd21cdc
	.xword 0x522989d20261101c
	.xword 0x0baa6cabfb97840c
	.xword 0x68e1bbe221f262aa
	.xword 0xc9a9149a975274e6
	.xword 0x8940400109f3bf08
	.xword 0x1b09debbb6177503
	.xword 0x88f252e3b8cd1a0d
	.xword 0x18755fb87757e7ac
	.xword 0x7a702ec96c208285
	.xword 0xe9d8d34542b0b1e9
	.xword 0x7a5d4379601d758b
	.xword 0x9b9d3b488ac17a94
	.xword 0x3543f349852abb34
	.xword 0xfbc908d9c75dc5c4
	.xword 0xb73d10455163f1ae
	.xword 0xdf4af3017a13c03e
	.xword 0x371d835f081744e5
	.xword 0xdb33f4bf643da061
	.xword 0x2335636c4dc19fe3
	.xword 0x67b8d9d0d56e3882
	.xword 0x6f45e81804dd42e9
	.xword 0xd03e0c909f5a4db5
	.xword 0x18b230c3bf063ad6
	.xword 0x1ce4853c6e46f7a7
	.xword 0xab7fa18d75338ee7
	.xword 0x4e4e025d38f574d0
	.xword 0x6720ba4892591489
	.xword 0xbe1453552b1823ae
	.xword 0x1562dea5568f53d1
	.xword 0x22d6a396b4cc11d4
	.xword 0x7eb94e17e150c7f4
	.xword 0x928e4b1e0b9c6126
	.xword 0x638609ead5312f6e
	.xword 0x0f7766874abd33e9
	.xword 0x02795a68bdcfcbd1
	.xword 0x20a07adb24865e8d
	.xword 0x0f376f0d22069eb3
	.xword 0x74a2eb23c898a725
	.xword 0x73a555242c281fbc
	.xword 0xb2c257e8b96fff8d
	.xword 0x9dc22214e979062c
	.xword 0x078f38ba3bfeff47
	.xword 0x66ba4c370d64bb2e
	.xword 0x8f974abdd96407c4
_t1_crc_auth_iv:
	.xword 0x8108b9274734306d
	.xword 0x1c25796b618a00be
	.xword 0x83fb8c9beaa1418c
	.xword 0x96a4fed13723f37c
	.xword 0x4b537ae6055279f2
	.xword 0xc3773a5b2eb84399
	.xword 0x3e8f3ad940af97d5
	.xword 0x70183026d6f694b0
	.xword 0xfcee9ec0d8f8dcce
	.xword 0xd08f4773ab7a40a6
	.xword 0xca0fbbfa2c83bda6
	.xword 0x68f47b030f0f6557
	.xword 0xf09bbc8e48010419
	.xword 0xc5412991ca4bf307
	.xword 0xd68128e8d4e64494
	.xword 0x48ccc4687c5bade5
	.xword 0x63308f65e3a31830
	.xword 0xda51e9a88608ddd2
	.xword 0x3bd438126ea1005f
	.xword 0xe481e5ca742c4297
	.xword 0x1e56939ba7de46c2
	.xword 0x34dc823e4865f27f
	.xword 0x5c5990e604047245
	.xword 0x0bef564cfc072f1d
	.xword 0xd2b37ef6ae4091c9
	.xword 0xd306eafc3121e2c5
	.xword 0xc91538213a08b626
	.xword 0xb24d9d1fe7dd7f56
	.xword 0x4a6e4d4107a22e7f
	.xword 0xca306e08e15be0c0
	.xword 0x4ccbd83be08b3d6b
	.xword 0xce20b7bdc5c11df5
	.xword 0x374381d9844279e2
	.xword 0xb5a932935ec78816
	.xword 0x0b5eaab435fa8aca
	.xword 0xa3298ca925f2c891
	.xword 0xc96502b286b3d39a
	.xword 0x43c13d10a63173b6
	.xword 0x4911da8a43031dd1
	.xword 0x87440237011843e3
	.xword 0xe7654b64b7ef4b2c
	.xword 0x5f5abbf5fa08db11
	.xword 0xe7f86633c2045f9a
	.xword 0x7c35fe083df426b5
	.xword 0x8fcc141474a03ecb
	.xword 0x29980c326662cac3
	.xword 0x7790fb3ff5e0ce9a
	.xword 0x56d307122a5408c6
	.xword 0x6fddf10d4dca8091
	.xword 0x81fbc0a2278575b5
	.xword 0xc0e4a7da9e49decf
	.xword 0x4bc20fb3283ee0bf
	.xword 0xba6c8813bf749320
	.xword 0xf55da4e388f04a9a
	.xword 0x38966916b9b5e4cb
	.xword 0x555384efc78cbe4d
	.xword 0xe8566752f8156fe2
	.xword 0x34f87e363aca35f5
_t1_crc_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_hash_key_array:
	.xword 0x1b4c5b9ecc4f8ac6
	.xword 0xf7c5774ceccd768c
	.xword 0x97b844dda565b352
	.xword 0x27e5ac035e137f6c
	.xword 0x56deb9433d9eacf5
	.xword 0x64955299c7c2536a
	.xword 0xe0001204963c70f4
	.xword 0xa5ab866760560190
	.xword 0xbf6c7673ba21a478
	.xword 0xb1deabf98555bf16
	.xword 0xf8a59a29a9b216d8
	.xword 0xcdbc9b678f2eb014
	.xword 0x80ac07665c6e87a0
	.xword 0x79969e1ca8d7c3a7
	.xword 0x006252c13f33d945
	.xword 0x88b608c5ac189b82
	.xword 0xd4efe092d20a1a03
	.xword 0x1e57d3c8dcfc74d5
	.xword 0x31020b2cb05171f1
	.xword 0xb328e61b493ade24
	.xword 0xe4c9e5bd7e1dc4bf
	.xword 0xe7151fa161ffaf9f
	.xword 0x7aef806915836f07
	.xword 0xd6f868c0535c5824
	.xword 0x24698155f87afcb1
	.xword 0x21ebad8f9c01aeac
	.xword 0x45655e95423a67c6
	.xword 0xf925350252c62ff2
	.xword 0x143d4401ed7d377a
	.xword 0x3352a9cfbe9474b3
	.xword 0x99d0273f391cd2da
	.xword 0x6cd9a54283127de7
	.xword 0x5833a0856cb0fb33
	.xword 0x40c8a1100f2bb8ee
	.xword 0x5ca0bffa7202fc1b
	.xword 0x4b73ecc2c66167d4
	.xword 0x6b2da63700090986
	.xword 0x1d51683a190ac35d
	.xword 0xd53ed6280d58412b
	.xword 0x8e016d3df76501b3
	.xword 0x7d9b61d5fb3d821a
	.xword 0xbdc113582459d103
	.xword 0x1e22d587363c688d
	.xword 0x1968d6735f77d26c
	.xword 0xb9b8b2c7918dd4ad
	.xword 0xc880ea5822189633
	.xword 0x7f877ad5494e5898
	.xword 0x84f9b436d6f2b067
	.xword 0x46d7e7906b32e239
	.xword 0x6b777ded82e7c34b
	.xword 0x0ff35354e45cdece
	.xword 0x5fc8f8b2d77ff9bf
	.xword 0xeb009515b182f54a
	.xword 0x0d5f1da643a701ac
	.xword 0x66ab4638a23df346
	.xword 0xd61f6916980203ac
	.xword 0xb6331b47adc9d99c
	.xword 0x323555e84ed41fd7
	.xword 0xd5b751e9069fcc64
	.xword 0x3d3b91647134ae31
	.xword 0x0b1e04b0bb8e7dc5
	.xword 0x78827c28c67cb066
	.xword 0x8aa58b144ce31fc6
	.xword 0xe3d078d9a987e75e
	.xword 0x431cf9c90bef5790
	.xword 0x3f0d9f36b1ea4991
	.xword 0xb17b49d8e1255f56
	.xword 0x8077b0fb5b3b712a
	.xword 0xdae0c85ae094102f
	.xword 0x403f49fc04ce8a68
	.xword 0x6b034e8786941c85
	.xword 0x6ae96e40ff83638b
	.xword 0x7984f59213b4e667
	.xword 0x821c1c0180fccb26
	.xword 0x012c2502b54617cb
	.xword 0x50b4494823e82e16
	.xword 0x8de9a0cfacb4b5b1
	.xword 0x5dcf7616e34dbca7
	.xword 0xcdf2e3435ae37d40
	.xword 0xda1881541020b0ba
	.xword 0xe1530343aae4e51c
	.xword 0x89593f7b0cbb77b7
	.xword 0xdb1b2ce49040142c
	.xword 0x7874e15f28ed4c1e
	.xword 0x97c5105264fc3b6c
	.xword 0x802e0d999283185d
_t1_hash_iv_array:
	.xword 0x6496975653253dde
	.xword 0x684842c2e98ea8a7
	.xword 0x39907fead4361cb8
	.xword 0x34df47f1abacbeaf
	.xword 0x4e1e5b2adee7b39b
	.xword 0x680a567bf15b5a56
	.xword 0x92a973973de703fc
	.xword 0x69ea1a356d8a3693
	.xword 0x80c27e37301e81cf
	.xword 0x6dd0e973bbaf58e2
	.xword 0x378f40a3f9d3b539
	.xword 0x897bb9270441b0fb
	.xword 0x072029457d550cca
	.xword 0x22dcf88dadf19dfa
	.xword 0x6b4404537cd8d3b7
	.xword 0xe39d0ec66094b6ff
	.xword 0xfb94fc42e180641b
	.xword 0x029a608e25167a2d
	.xword 0x773d8389065d7959
	.xword 0x4850e39fc0715d80
	.xword 0x3e157a5a18c88438
	.xword 0x55c4582fd4805e07
	.xword 0xd53900f3c0392be0
	.xword 0xd8c93c46c912a024
	.xword 0xc55c5276da3b8c6b
	.xword 0x1f89dc6dc1fe3c81
	.xword 0xfeb574ffe2f502d5
	.xword 0x9b98f7cc6400fd75
	.xword 0x37dc9745143696a2
	.xword 0x0c9bcbe7509ef13a
	.xword 0xa01843152f2b1f5f
	.xword 0x6022650f234c11c1
	.xword 0xc2d1d040f772fe98
	.xword 0x33bd17978076778e
	.xword 0x09f97dcbc7076d04
	.xword 0x99d77b1d5e6db156
	.xword 0xbc722bee53a9b025
	.xword 0xb918fbe3249defa3
	.xword 0xca9c08db35ec2744
	.xword 0x85fe9021afaa7ad9
	.xword 0x5e5724232b12dfa8
	.xword 0x67870d3973d4ab4f
	.xword 0x354b6e7a6b3d0c6a
	.xword 0x787b74c0c382a475
	.xword 0x296c50875ccc0850
	.xword 0x554b94c8c5ca12c5
	.xword 0xfbb071cdce26c333
	.xword 0x41c585eeb61eb834
	.xword 0xf6044ffb6de08e27
	.xword 0x6d39ae81a0380aa7
	.xword 0x88bbb391c8f6df32
	.xword 0x608af87bc4a44751
	.xword 0xddae6b4d3eb016e8
	.xword 0xab9826fa6f3111b7
	.xword 0x0cc88c881ed074e8
	.xword 0xb99fdc138bb1a305
	.xword 0x33ca2c74bf0023a8
	.xword 0x2598918a95430811
	.xword 0x5c62cd80653a93ee
	.xword 0x23bc1edfe1ad9448
	.xword 0x636ea7426656ea2c
	.xword 0x9af86e0945e83ec6
	.xword 0x39e65841f02bb26f
	.xword 0xfefc5c617e62ae99
	.xword 0x9773b2df504668d6
	.xword 0x0d921ce660039a3f
	.xword 0x5e60a8dfdd2ff5cf
	.xword 0xb35b7af8b33c6a81
	.xword 0xfb3695af57570d6d
	.xword 0x1433b865f53df086
	.xword 0x8af1862fa1c6b1f3
	.xword 0x9b71638390337e8c
	.xword 0x55a5b964d37d8c6f
	.xword 0x3bce61ea97a3c153
	.xword 0x12fb0967ab472edf
	.xword 0x623e6771c43b9f84
	.xword 0x0cae50397626218e
	.xword 0x86a1c3af6b05a043
	.xword 0x386383725d15a88b
	.xword 0xefdabf42aa4a3756
	.xword 0x421de5808f51e03c
	.xword 0x1bfedf9e04d93e88
	.xword 0xcb473b26882d1467
	.xword 0x74bb7a11d0b9a072
	.xword 0xf7e13fa39d254f47
	.xword 0xe27b726ddcc1c688
	.xword 0x48c8f1ddf48f2fa4
	.xword 0x7ac72254c154c4b3
	.xword 0x04dcae8d91e0b0e9
	.xword 0x47e58430cc758208
	.xword 0x3ec7b662cb199d6a
	.xword 0xbcd5ffb6aa76b485
	.xword 0x2729d2f3cf20fa32
	.xword 0xbce340d25fcb42ab
	.xword 0xe31f67a4159dc5f1
	.xword 0xabbad0700a137234
	.xword 0x3f90485e14eb0ae3
	.xword 0x9f20cafcb30076ac
	.xword 0x7c512a203bb4a034
	.xword 0x5aed6824c967cd7b
	.xword 0x479f5f999d3ed63a
	.xword 0xfe2f47a1cdb5108e
	.xword 0x60e2c098f84afa0e
	.xword 0xc4b5bdca755e7c70
	.xword 0xe4a3d965769384cf
	.xword 0x41cec3676094985e
	.xword 0x35674a814ec6adca
	.xword 0xe613913be146ae3f
	.xword 0xff42b5a51dc1c78c
	.xword 0xdeab7d54e06691f5
	.xword 0xcdb76ed90fee8873
	.xword 0xd41ba622090d4b03
	.xword 0x651b79f1092b5bba
	.xword 0x59d78e92fdb867fc
	.xword 0xa2785e06dfb4454e
	.xword 0x353b0525badd6536
	.xword 0xb7afbbb9943524ff
	.xword 0x16507ab4051f5008
	.xword 0xb5acf71d828e76bd
	.xword 0x111fbe857d975681
	.xword 0xcdb7dd3d969b46f2
	.xword 0xd7e3af6585423e1b
	.xword 0x8a8e5bb39d358923
	.xword 0xb70f536f5378b2f5
	.xword 0xd2b7997ee232441a
	.xword 0xc99b9cbb1843222f
	.xword 0x957a28513cbddff6
	.xword 0xb8a14d9d42e07876
	.xword 0xb77db7af5ce6de66
	.xword 0x7db9589701634700
	.xword 0xdadebc9346b8c08f
	.xword 0xe9f6913cae46470c
	.xword 0x3466322bc9f0c418
	.xword 0x2c193a68bc4cd8f6
	.xword 0x715e0723418872e7
	.xword 0xf597d446e881d938
	.xword 0xba5f362ab2eb3515
	.xword 0x71629fef950a98e7
	.xword 0xfc13732835664b4e
	.xword 0x2874e269f537516c
	.xword 0x315587201762867d
	.xword 0xe2f3117f0ceb7558
	.xword 0xad889d33a81b8797
	.xword 0xa053cdaa14657c70
	.xword 0x4a5d86dcd36e7669
	.xword 0xc6edc6cbe054e88b
	.xword 0x76bd39f357112166
	.xword 0x6c28ec5ce7add8da
	.xword 0x43f8c3eabf7ca154
	.xword 0x728d4030bddfb2f8
_t1_hash_alignment_array:
	.xword 9
	.xword 6
	.xword 1
	.xword 2
	.xword 10
	.xword 13
	.xword 7
	.xword 0
	.xword 3
	.xword 2
	.xword 5
	.xword 9
	.xword 14
	.xword 5
	.xword 7
	.xword 10
	.xword 4
	.xword 13
	.xword 0
	.xword 8
	.xword 8
	.xword 8
	.xword 10
	.xword 10
	.xword 8
	.xword 11
	.xword 0
	.xword 1
	.xword 3
	.xword 7
	.xword 0
	.xword 1
	.xword 7
	.xword 4
	.xword 6
	.xword 11
	.xword 10
	.xword 5
	.xword 13
	.xword 8
	.xword 11
	.xword 5
	.xword 1
	.xword 7
	.xword 7
	.xword 15
	.xword 2
	.xword 1
	.xword 9
	.xword 3
	.xword 12
	.xword 14
	.xword 0
	.xword 1
	.xword 13
	.xword 5
	.xword 10
	.xword 4
	.xword 4
	.xword 4
	.xword 15
	.xword 2
	.xword 6
	.xword 14
	.xword 13
	.xword 2
	.xword 9
	.xword 15
	.xword 7
	.xword 5
	.xword 3
	.xword 7
	.xword 12
	.xword 5
	.xword 9
	.xword 14
	.xword 1
	.xword 15
	.xword 11
	.xword 10
	.xword 8
	.xword 3
	.xword 0
	.xword 5
	.xword 12
	.xword 11
	.xword 0
	.xword 7
	.xword 7
	.xword 15
	.xword 3
	.xword 15
	.xword 2
	.xword 2
	.xword 14
	.xword 5
	.xword 11
	.xword 3
	.xword 15
	.xword 2
	.xword 14
	.xword 5
	.xword 8
	.xword 3
	.xword 11
	.xword 13
	.xword 9
	.xword 1
	.xword 8
	.xword 9
	.xword 12
	.xword 5
	.xword 14
	.xword 15
	.xword 11
	.xword 13
	.xword 5
	.xword 5
	.xword 5
	.xword 7
	.xword 8
	.xword 3
	.xword 10
	.xword 4
	.xword 1
	.xword 8
	.xword 15
	.xword 15
	.xword 15
	.xword 13
	.xword 0
	.xword 2
	.xword 11
	.xword 5
	.xword 15
	.xword 6
	.xword 6
	.xword 1
	.xword 3
	.xword 14
	.xword 11
	.xword 9
	.xword 14
	.xword 1
	.xword 4
	.xword 3
	.xword 8
	.xword 4
	.xword 15
	.xword 0
	.xword 8
	.xword 9
	.xword 4
	.xword 9
	.xword 14
	.xword 1
	.xword 8
	.xword 2
	.xword 12
	.xword 1
	.xword 13
	.xword 13
	.xword 4
	.xword 15
	.xword 15
	.xword 14
	.xword 14
	.xword 3
	.xword 13
	.xword 5
	.xword 1
	.xword 13
	.xword 2
	.xword 14
	.xword 14
	.xword 15
	.xword 13
	.xword 2
	.xword 14
	.xword 11
	.xword 10
	.xword 5
	.xword 6
	.xword 13
	.xword 14
	.xword 2
	.xword 1
	.xword 6
	.xword 11
	.xword 14
	.xword 8
	.xword 10
	.xword 7
	.xword 0
	.xword 8
	.xword 7
	.xword 12
	.xword 10
	.xword 12
	.xword 7
	.xword 9
	.xword 10
	.xword 9
	.xword 12
	.xword 10
	.xword 3
	.xword 2
	.xword 10
	.xword 9
	.xword 3
	.xword 12
	.xword 2
	.xword 15
	.xword 10
	.xword 9
	.xword 9
	.xword 5
	.xword 0
	.xword 4
	.xword 13
	.xword 8
	.xword 10
	.xword 3
	.xword 8
	.xword 7
	.xword 8
	.xword 3
	.xword 6
	.xword 3
	.xword 4
	.xword 14
	.xword 10
	.xword 7
	.xword 11
	.xword 0
	.xword 0
	.xword 2
	.xword 5
	.xword 5
	.xword 11
	.xword 5
	.xword 13
	.xword 1
	.xword 15
	.xword 6
	.xword 9
	.xword 4
	.xword 9
	.xword 6
	.xword 14
	.xword 2
	.xword 7
	.xword 1
	.xword 15
	.xword 13
	.xword 10
	.xword 4
	.xword 4
	.xword 8
	.xword 13
	.xword 6
	.xword 13
	.xword 13
	.xword 13
	.xword 0
	.xword 14
	.xword 8
	.xword 10
	.xword 9
	.xword 15
	.xword 1
	.xword 1
	.xword 10
	.xword 8
	.xword 1
	.xword 13
	.xword 9
	.xword 11
	.xword 11
	.xword 10
	.xword 3
	.xword 7
	.xword 0
	.xword 5
	.xword 10
	.xword 6
	.xword 13
	.xword 8
	.xword 5
	.xword 5
	.xword 14
	.xword 3
	.xword 8
	.xword 13
	.xword 2
	.xword 5
	.xword 5
	.xword 4
	.xword 10
	.xword 4
	.xword 2
	.xword 2
	.xword 11
	.xword 7
	.xword 15
	.xword 6
	.xword 11
	.xword 13
	.xword 10
	.xword 6
	.xword 1
	.xword 4
	.xword 3
	.xword 9
	.xword 15
	.xword 15
	.xword 1
	.xword 8
	.xword 13
	.xword 9
	.xword 2
	.xword 7
	.xword 8
	.xword 13
	.xword 9
	.xword 2
	.xword 7
	.xword 0
	.xword 15
	.xword 5
	.xword 1
	.xword 5
	.xword 3
	.xword 4
	.xword 12
	.xword 3
	.xword 13
	.xword 12
	.xword 12
	.xword 10
	.xword 5
	.xword 6
	.xword 14
	.xword 7
	.xword 10
	.xword 10
	.xword 6
	.xword 10
	.xword 13
	.xword 2
_t1_hash_src:
	.xword 0x377d73ca5b534ea9
	.xword 0x9bd3bf5341598027
	.xword 0xfc17d1244ba6b91d
	.xword 0x1d73279b949a2dc9
	.xword 0xe543f05ea9065e2d
	.xword 0x061025154d0f5396
	.xword 0x60bc4253b6a39257
	.xword 0xb8a411233a00ab4a
	.xword 0xa78ff265cb4bfb0c
	.xword 0xa494917ee9703465
	.xword 0x5a3337d7051bd3bd
	.xword 0x2a77f71683a8c6e2
	.xword 0xadf42ad0835b5262
	.xword 0x16b5fbe39631afc1
	.xword 0x1aea4d350171aad3
	.xword 0x8049067630838a62
	.xword 0x5bcf6e664736ba87
	.xword 0x7fbe75c9257615af
	.xword 0xce2b6ccef4282d18
	.xword 0x8b7852bd71f7e0a8
	.xword 0x4106c721b25a5d5f
	.xword 0x96176df85fc8cc6c
	.xword 0xc06a2a4f48644bbe
	.xword 0x627200b2ac745f39
	.xword 0x31ccf4b57b0d60ca
	.xword 0x945b25ba2f2b6d83
	.xword 0x19e887ac1d602dee
	.xword 0x7d7c2e1f79b93c74
	.xword 0xb05a8731e53a2249
	.xword 0xe0918dc4f1eea848
	.xword 0x0f9866567cb38736
	.xword 0xc1caeaf99c194cd8
	.xword 0xf31c83d32361a80d
	.xword 0xb6483038cd325490
	.xword 0x89c8c4753282bb71
	.xword 0x78ccc991b75a45b3
	.xword 0xe6ee5f0f33e63501
	.xword 0x38d1a4bfac4e1441
	.xword 0x767b87edd653e7be
	.xword 0xaef4a3584bbb442e
	.xword 0x7081a7f0450209e2
	.xword 0x4a38fa91ad3757a1
	.xword 0x82cb11f32ab30f99
	.xword 0x6fa0ecd27d678921
	.xword 0x0ede3ae4afcc6b87
	.xword 0xaef8f9928fe3aabf
	.xword 0x5a0ec04d79568dd8
	.xword 0xcedf9cc47d1589bb
	.xword 0x65f87eae075e0fd1
	.xword 0x9596c5d8f6577988
	.xword 0x1b311682fa36e4ca
	.xword 0x1a6470a6e54830ac
	.xword 0xb01dc440b15bf620
	.xword 0x345af386ef0879c1
	.xword 0x6d7ea35ef70b3f0d
	.xword 0x377b1265a9a8c723
	.xword 0x2ce869a3f4f2ed79
	.xword 0x5a3272ef763edb21
	.xword 0xd2e6d61b24393c8f
	.xword 0x3fb247779c9d02df
	.xword 0x53c0f424566f26c3
	.xword 0x07bea67018480aa8
	.xword 0xa1c596def21dbc0f
	.xword 0x4a83b9036dd44411
	.xword 0xe440a9d66e16608b
	.xword 0xc18f37b1349260be
	.xword 0xdeffca7910a6ab60
	.xword 0xaaaf38ea5ea5c111
	.xword 0x86d85251d3b0a4f8
	.xword 0xfab1f213e6c22293
	.xword 0x77b975433e033e88
	.xword 0x0d4d314dcec62b90
	.xword 0xfb87c840443b9987
	.xword 0xc12fe4f19f896e38
	.xword 0x81da5e131a915b39
	.xword 0xe0a09994240d39f5
	.xword 0xda88b439126efcf8
	.xword 0x99d1371b977e87d7
	.xword 0xa94558f772fd471d
	.xword 0x829752153732273e
	.xword 0x79030316d31e77f7
	.xword 0x130d29a5668bdb98
	.xword 0xe238435021156339
	.xword 0x54670af2ab6829c4
	.xword 0x26af5f2afea95bc8
	.xword 0xd42ec1d7c0cf4b72
	.xword 0xb9ce8e79e5ea62ad
	.xword 0x3cf36e1a8e2cb64a
	.xword 0xc33a6c5130ae3b39
	.xword 0x6f6768576ab9514f
	.xword 0xc4d6e47a36b5e9f0
	.xword 0x1fa5cea81ee77c2d
	.xword 0x884da5f4e8d15fb6
	.xword 0xa0ca65e03d2d4b95
	.xword 0x6d5961edf159f32d
	.xword 0x4fb9f5d606a8c416
	.xword 0xd6771ad24233fd0c
	.xword 0x98a40a0cbfb7375c
	.xword 0xc47401db72bfe562
	.xword 0xaca38a1214445a5d
	.xword 0x04ed9dd62f0f4e1c
	.xword 0xd479756f171c3208
	.xword 0x47ee34c2569b964e
	.xword 0x524689f9999070b9
	.xword 0xa3495ee7c6928b93
	.xword 0x3c22193a10d9aa9b
	.xword 0x4c418a21a3a604b9
	.xword 0x8cf9d1e18370f4ae
	.xword 0x2b5d0b2e9a9668fe
	.xword 0x0efc7ac5459c7383
	.xword 0x314f5ddc21996669
	.xword 0xd8e97d6d69012bf8
	.xword 0xd33df6da88702224
	.xword 0x15d209b881629b8f
	.xword 0xf8702b186b1fa8ed
	.xword 0xe293d5afdb28873d
	.xword 0x9c43163672aaf0ee
	.xword 0x31f3d85cd36d5df5
	.xword 0x5ec6dc732be2495c
	.xword 0x91e7fdfd15fa75a6
	.xword 0x8f8fec95ac294f5c
	.xword 0x864175162bf82e91
	.xword 0xb47db8b9210473a5
	.xword 0x8743c01afdce7473
	.xword 0xfcd9da3d1f9ac762
	.xword 0x42d5130d963eff68
	.xword 0xe8ec28ac300e6be1
	.xword 0x2f1ff387a4180a98
	.xword 0xa2ad04c3a406945a
	.xword 0x70c91b837ca021cd
	.xword 0xdd1d2b15a422ad25
	.xword 0x7adb86c148f429cb
	.xword 0xa6946772e7b9adf4
	.xword 0xc7339eb708f309bb
	.xword 0xabe8c56f3f08fef7
	.xword 0xde0b0afaeec23ed4
	.xword 0x86eaf95be994e13e
	.xword 0x90654e025dd4b714
	.xword 0xc8d0902b9976c01c
	.xword 0xfa4fdeae62b77e94
	.xword 0x5a862f83af4b85ec
	.xword 0xdeeb42f17521c7e5
	.xword 0x59a3b3369063c1eb
	.xword 0xeeb277b8271fc833
	.xword 0x20e79685e7098517
	.xword 0xaf6a747dc717ae72
	.xword 0x3de4cd3d842c0eb8
	.xword 0x671c9ecb09f048ac
	.xword 0x145e286b707a5526
	.xword 0x805556d185477f0f
	.xword 0x2038c974dd3f6157
	.xword 0x5bbc11fb1663963e
	.xword 0xf7bf9511561f6fef
	.xword 0x12d818451894e6d9
	.xword 0xf422725c50574e78
	.xword 0x0b93f8952fa54f36
	.xword 0xc4f3ffe414f1b364
	.xword 0x49407a8ac3e66d37
	.xword 0x9a57e81e42d42523
	.xword 0x87f0497dc84686dc
	.xword 0x15f3525414871e61
	.xword 0x53fb3f45c344b818
	.xword 0xd61c1b7757b861d3
	.xword 0xa0f33c2c85f36c83
	.xword 0x75740b68f7d25d47
	.xword 0xbfa337b26191a10c
	.xword 0xa8aa49e31f316ed0
	.xword 0xbf43c0ed7ddcaa48
	.xword 0x9fe6b4cf4e2be4aa
	.xword 0x9626a9914146b9b4
	.xword 0x54d8481d3cfd7448
	.xword 0x7a6893bdeef98973
	.xword 0xb6b5600b63b3adb6
	.xword 0xe568ba5fc262f41c
	.xword 0xd9ca62b11a2359e9
	.xword 0xe16e7cc68babe177
	.xword 0xfa9cffa5ddf74572
	.xword 0x45ac302ce9da1a6b
	.xword 0xa57e893893415eda
	.xword 0x948b4a707f922817
	.xword 0xdd06ac3ccf1aaac0
	.xword 0xd1bd5d855d013c46
	.xword 0x55f6247c1b5590ac
	.xword 0x1871d1dc5ccb3a6d
	.xword 0x9d6a1d62f37356a1
	.xword 0x0cdaf5debf4ff8f3
	.xword 0xc54fd04c8c0bdafb
	.xword 0x83ce59b9ec168b73
	.xword 0x76073ec62f0e709d
	.xword 0x72340a3faf2763bf
	.xword 0x5882775a1a0dea93
	.xword 0xebcc85f08bf45e45
	.xword 0xf77b3a40d481f8f8
	.xword 0x7d924335b5e19744
	.xword 0x8203d034ba63ad32
	.xword 0xf7c303d09c258414
	.xword 0x152f4655053f856d
	.xword 0xc645446e38b01227
	.xword 0x5c10c4b912271dcd
	.xword 0xff101523378c0f2d
	.xword 0xa9f350062568aeeb
	.xword 0x675ad97b6be418e8
	.xword 0x771ad5ec7bb6cf50
	.xword 0x1ad44e64bb9c6af3
	.xword 0xcf31d8da726f0fbb
	.xword 0xb61acd3b5b957d37
	.xword 0x6010c2496dd2326c
	.xword 0xa6c52b4481ce5894
	.xword 0x909b0fd9717a5776
	.xword 0x3063f3e7a6e4b4fa
	.xword 0xae44f25ee6b70600
	.xword 0x02f3cd2695e60878
	.xword 0x2d86f30cc7ef516a
	.xword 0x32e619f2e6dc1a96
	.xword 0x0e77b2aa8724b040
	.xword 0xb078bd0bef521292
	.xword 0x88b6c835eb087270
	.xword 0x6b183e7ea386fd55
	.xword 0x5f3a07802822f34a
	.xword 0x39fbbc8eebc5646f
	.xword 0x7e01370fd6fe8bd5
	.xword 0xc0345bdcedd999cc
	.xword 0x08d7f901de82aa64
	.xword 0x5d598e27136cdca6
	.xword 0x8894bb7153def772
	.xword 0x679da009d0fcf966
	.xword 0xa56f73ca0cf326dc
	.xword 0xfe07470d982d35b3
	.xword 0xc415f680e10d2d8b
	.xword 0xffa80210f181faf2
	.xword 0xc41e0e7921c0dad1
	.xword 0xca119000cc6858e2
	.xword 0x747534012e8e029e
	.xword 0xf96c35b813a424f1
	.xword 0x3b84d6e5479e2b46
	.xword 0xfdd61e35caa0df63
	.xword 0x03c177f38ab11103
	.xword 0xea4fd483655b8f21
	.xword 0x13986d1f30332110
	.xword 0x6b90977450d524de
	.xword 0x5ef0676c0ac0e23e
	.xword 0x5a323c43670e99fb
	.xword 0xb6fc4b0bc3db1e6c
	.xword 0x59657b5db7bb3442
	.xword 0x8ef16129d2642552
	.xword 0x61a7faa5e9d31ca8
	.xword 0xe8bb75854ec94c4f
	.xword 0xfd13c3a071c3e5a8
	.xword 0xd4c0a4bb3e04387a
	.xword 0x515257a6a52a7965
	.xword 0xd57850acba2daa3c
	.xword 0x152bc4a2ac831516
	.xword 0x7b938498b939d0e6
	.xword 0xa94f6a64e7ae526d
	.xword 0x37f4aa38b1dbf9fe
	.xword 0xe1da2c33b207c09e
	.xword 0xde76a8182ac9c063
	.xword 0x24afa5637dbd870a
	.xword 0xf8a5f4b333996e76
	.xword 0x3a878fc83710f073
	.xword 0xe221a24e1a02f9eb
	.xword 0xe0143badb5b0365c
	.xword 0x6c6f724550217aba
	.xword 0x4ae8a4280ef9107f
	.xword 0x5fd635c904bc5fdf
	.xword 0x2e6edc7337410e4b
	.xword 0xb0391a9e53c900b7
	.xword 0x8d11644983331e08
	.xword 0x77a5c8d4e96242a1
	.xword 0xc12475e1601ecff9
	.xword 0xebe28c5fa4dd1a34
	.xword 0xc6dce418c002bf9b
	.xword 0x737031b0e3b39c1d
	.xword 0x48175c43a718edc5
	.xword 0x3bce305348343689
	.xword 0xa04d38c8c417de0f
	.xword 0x4c95f99e6c62ab92
	.xword 0xd3c086f99e2a424f
	.xword 0x4b371bf4faf4cef9
	.xword 0x76faa8b3e81f2fee
	.xword 0x386f0c76dfd21600
	.xword 0xb83f95b0e6fae3a4
	.xword 0x3a32195338decf2d
	.xword 0xb822265d7dd0b1ef
	.xword 0x8438fb9e5a4afa5f
	.xword 0x49640b5707bab72b
	.xword 0x93340b784d41b338
	.xword 0x9f89231ae1970205
	.xword 0xd9f43b741b685d8c
	.xword 0xc26dfe27998bb041
	.xword 0xd82e9a759db3c628
	.xword 0x713ca44f54bcd80a
	.xword 0xc40cd30081273bdf
	.xword 0xd9f4fb604fc59dde
	.xword 0x61209921f1b848b1
	.xword 0x95d3614aeab8a2f9
	.xword 0xe565d83a0b1df688
	.xword 0x8f28a9892895a253
	.xword 0xad6aa4b9326373a3
	.xword 0x1a27d377cf8a1b9b
	.xword 0x9fde16333cdfe9ea
	.xword 0x7c9090db85c3ab25
	.xword 0x60a673fd7db1434e
	.xword 0x82ebe99515ba3ceb
	.xword 0x6d96986d7cf56818
	.xword 0x466b8259ec07b203
	.xword 0x039baaa83a21da32
	.xword 0xa9513f0ac0d808e5
	.xword 0x51fcea6d667ad3f5
	.xword 0xac4b412ddebff44d
_t1_hash_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_hash_auth_key:
	.xword 0xebdc6ceba1d977d1
	.xword 0x8b55f1301326e199
	.xword 0x620f5bf7a2e698c6
	.xword 0x2534412c29a5dd73
	.xword 0x1df9fd037bca0141
	.xword 0xa18ebb788a7da47a
	.xword 0x9845d5727ffc8100
	.xword 0x3a76539ec54f0457
	.xword 0x895c9a0a33d81843
	.xword 0x0290389de65d903f
	.xword 0x7dcfd7edb88952c1
	.xword 0x88ad0cdce7ddce9d
	.xword 0x35ae8303efefd6ad
	.xword 0x281af6e5f7fd8b10
	.xword 0xea7dbf0f4122eac4
	.xword 0xa5cf844b02eece66
	.xword 0x197dca3a33125315
	.xword 0x71da2e2c980be62c
	.xword 0xfb7867dd161e97b5
	.xword 0x230348b1e0abb3db
	.xword 0x45728026b0c2739c
	.xword 0x2e7282037397f79f
	.xword 0x5d1a499c4324926f
	.xword 0x06e638266b1dfa2c
	.xword 0xb4e9d192d5731406
	.xword 0x22f6540c3f07a77e
	.xword 0x29ffdf79578e58bf
	.xword 0x605cd05cb2e8cf04
	.xword 0x7b16ce684fa15c07
	.xword 0x3663ab6ba02e0c87
	.xword 0x34049d7c82424cb1
	.xword 0x16d3c22c10e49814
	.xword 0x8ef7f76b7a03e802
	.xword 0x3444bd2ee3924b53
	.xword 0xe0c659a5ff3b796d
	.xword 0x19ccb9fd21498a9d
	.xword 0xedc64b12c99d4bfa
	.xword 0xd74af05c171732e8
	.xword 0xeef145d22eeadfa2
	.xword 0xe304cd9d9ba26ce7
	.xword 0xce466c6511f2bd5c
	.xword 0x82828719becfd5ca
	.xword 0x727eb276b309dfc5
	.xword 0x71f92ee9fcbb34d6
	.xword 0xfc134110a87997d9
	.xword 0x4d5ec29f97c27609
	.xword 0x45715834d92d4949
	.xword 0x2d8e6bd6302cfd3c
	.xword 0x40dd7e218f0e0845
	.xword 0xd6383b468b03b8d9
	.xword 0x9848baa28eeee47c
	.xword 0x756233aaed2085d5
	.xword 0xd67ed4c86043140d
	.xword 0x383883c185f8381e
	.xword 0x3eab4e99a1ca70c2
	.xword 0x3904124c0cf161e6
	.xword 0x11ac9a647786ffd3
	.xword 0x088951686259c6a5
_t1_hash_auth_iv:
	.xword 0x9b7935a19e4b0ccf
	.xword 0xe765e3d2433e9528
	.xword 0xb9fe98b7ce6cfb73
	.xword 0x54b67645d34b6c67
	.xword 0x929f3938b5eefd22
	.xword 0x82e0d93395f49dac
	.xword 0xf97365a01941817e
	.xword 0xcd192c60e37304cd
	.xword 0xa5727c1193e91d8b
	.xword 0x87e3a61f61a4b8e3
	.xword 0x7d1f56578ac4f741
	.xword 0xd95012befccb4633
	.xword 0xecc0c2382fd09567
	.xword 0xd9bffc2f5157226c
	.xword 0x8ab221e6ed9a2abc
	.xword 0x2498957bc18a01cd
	.xword 0x4640433c920490f7
	.xword 0xf3cfca5f5ec85582
	.xword 0x6223faaa1b7e31d4
	.xword 0x9e0b85eb9ac733f6
	.xword 0x9e174fb030dd2670
	.xword 0x54f1c36cea79a2cb
	.xword 0x2c5ce3d84f5f0d21
	.xword 0xae589b553de79992
	.xword 0x7c5ddcdfe82f3a89
	.xword 0xc7c7722c59a2d33a
	.xword 0x6fd47ab5a47c3b36
	.xword 0x97bbc9fda0bb37b9
	.xword 0xe246f91438e02e8d
	.xword 0x920ebf1b74abf89b
	.xword 0x0440cb07fd4dc928
	.xword 0x57b664171b0922ab
	.xword 0x81644839f249696f
	.xword 0xc2392e4d2f2c3cb1
	.xword 0x49f3e4f881fd2530
	.xword 0xc6bb900709e9c63b
	.xword 0x11615cfbae0385bc
	.xword 0x3aa9ab9e6ae86ea7
	.xword 0xa9cd7d348399eff3
	.xword 0x88bf2cfb0d7eb93c
	.xword 0x45035937c3e1d370
	.xword 0x89f3e7dfb74ed7d9
	.xword 0x4a3516491cd9a128
	.xword 0xb7d4a2407e5bdb35
	.xword 0xa7ae706eaff63f15
	.xword 0x3d4c2d84ce880002
	.xword 0xc3c62f92bdc189dc
	.xword 0xb6322cb3d9052796
	.xword 0x5e6d162ea0100cec
	.xword 0xc37b47db87c87983
	.xword 0xce6cc6c6a996ff9d
	.xword 0x2b64dae7027de6e1
	.xword 0x3fef28190bbe4c43
	.xword 0xeb37c1d2a5e090a4
	.xword 0x3c077e187323c808
	.xword 0x91755653268c522e
	.xword 0xd800eac198219031
	.xword 0x177b9d42a1f99205
_t1_hash_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_hmac_key_array:
	.xword 0x088e426b92951f75
	.xword 0xa0d58dcae4f8882a
	.xword 0x0b94b6575168c224
	.xword 0x850bd767b3aee358
	.xword 0xb8a3ac0d9f61c1a8
	.xword 0x6dc4ccbf9bad3883
	.xword 0xb5ccb7ba143c3edd
	.xword 0x0fe3356a86cf2e10
	.xword 0xabc7eb878e63e2bc
	.xword 0x09bea8e3aa8ad0a3
	.xword 0xbcc7c75bd5dee80f
	.xword 0xe93396512fc0ba14
	.xword 0x9a249ecdf302aa7a
	.xword 0x6b759f08d0375dd1
	.xword 0x111a35281b5f1c09
	.xword 0xcf2f451d95b9be2c
	.xword 0xb07c0e746f31e031
	.xword 0xd9c41b2e27de5bf9
	.xword 0xa272d3d6c0b4dfe5
	.xword 0xa96e59470c1503e4
	.xword 0x826deeb4dfec510e
	.xword 0x01de0d3e45bb1265
	.xword 0xadcfaaed0d7ac0da
	.xword 0xe4dfcdfa635c2e95
	.xword 0x4ec5f21baebf5ef0
	.xword 0x4e1dca40b37106b5
	.xword 0xea248e94f4109979
	.xword 0xd2f8325ae7b86c62
	.xword 0x559f32296b0131f6
	.xword 0x8a3306287638673b
	.xword 0x46bec801ddb088c1
	.xword 0xee9cd90091fc9708
	.xword 0x23c1d6b11d81b9b9
	.xword 0xa6935fd946522c5f
	.xword 0x049a6204c8db7766
	.xword 0x87f4378efab813ac
	.xword 0x361bb0499cdb1282
	.xword 0xd82bf0825c470f91
	.xword 0xfcafe4444bc8219c
	.xword 0x1e9c6a8079d6611b
	.xword 0x202856fd504bccef
	.xword 0x77a76d5078bc8234
	.xword 0x51c4138645de2b34
	.xword 0x9ee3763b2da387f1
	.xword 0x050a88b2dc988bd1
	.xword 0xf5782e206689105e
	.xword 0xb2901f696713e1a6
	.xword 0x76f0e849bbd68d7c
	.xword 0x4cb85e374350329c
	.xword 0x0d2389434548bbbe
	.xword 0x104671d065044bf7
	.xword 0x4979e61255fc3791
	.xword 0xaacbd6bc8059f729
	.xword 0xe1b12a69f63680bf
	.xword 0x4b5672d1bbd57794
	.xword 0x9593c6f13fa6ee4f
	.xword 0x002d2915ebcb7870
	.xword 0xa818f229fb3f6628
	.xword 0x7a0085cdb25d3fe3
	.xword 0xdae2af10ac89032c
	.xword 0x98053c74d330e857
	.xword 0x30fc1a2805fdbcb8
	.xword 0x24a2703a2c0faf82
	.xword 0xbf0375ed048254d0
	.xword 0xbfcd781bf655eaed
	.xword 0x29ab48302b31f937
	.xword 0x9fae642540f98794
	.xword 0x949c37749e45faa7
	.xword 0x2689c1272a70beeb
	.xword 0x48aba42dea6cc4be
	.xword 0x29553cd208abac19
	.xword 0x154a8a16b02314d5
	.xword 0x4d436632128347f4
	.xword 0x78f14a63bf2cc425
	.xword 0xe8456463ce752212
	.xword 0xebf7bb18578cacb8
	.xword 0xe9342e329cc8d76f
	.xword 0x9edbef49925891d5
	.xword 0x3a18c656c4288b37
	.xword 0xd914e50493892e85
	.xword 0x9201c4e43ebeac17
	.xword 0xfaf608a922df3ae2
	.xword 0x245901a341207b6d
	.xword 0x210e22c346a6b778
	.xword 0xdf768521a67f1dd9
	.xword 0x63636a122c2592e7
_t1_hmac_iv_array:
	.xword 0xc6ad3e016304fd1a
	.xword 0x47b6f14101312d2a
	.xword 0x17c180de82dd4636
	.xword 0xf73d5cba81f3121d
	.xword 0xda17a4e73da19410
	.xword 0x6db9cc143321cde0
	.xword 0x0ca61ec78a6b02c3
	.xword 0xd9f942d81ac1ca62
	.xword 0x43329afbf7bcf521
	.xword 0xa8b385c0c20e78c3
	.xword 0x43e73515f19e3a7c
	.xword 0x731310b4b4ad3c47
	.xword 0xffc3aecb706a2d86
	.xword 0x06e539300454d54e
	.xword 0x89e98576f38369d7
	.xword 0x93d2670099a3ce2d
	.xword 0xd1b9e3eb71e04348
	.xword 0x4cb930dee21dfb7b
	.xword 0x7c09971fe9a731a8
	.xword 0x3518600d48a4a8c5
	.xword 0xf7aade017e40ba3c
	.xword 0x8d14e21c2c91607a
	.xword 0x132914f29519159e
	.xword 0x5baec2b76bd67629
	.xword 0xc6303145f6215e05
	.xword 0x8ff4420ee9647d12
	.xword 0xce8e95889f027cdb
	.xword 0xeee55f4d853be450
	.xword 0xc39cbe13194206a7
	.xword 0x8800b5db06d4f51b
	.xword 0x77a9d473321bd8b1
	.xword 0x006f90d65f24d1b6
	.xword 0xad11b7e01b02dc35
	.xword 0x0f92932200ce6bca
	.xword 0xafa4bc60595691d6
	.xword 0x52b0fb5f8fc03c4d
	.xword 0x532727b2ba91c88b
	.xword 0x18001796fbc94d20
	.xword 0x4e063f4130192b46
	.xword 0x9a7cf8687a1415b4
	.xword 0xde69cebd6e6d861a
	.xword 0x34862a21b4007023
	.xword 0xf537c6b53b1e4108
	.xword 0x6bbb80432242449f
	.xword 0xd58bd74605d87830
	.xword 0xe2b4ddccf4b19575
	.xword 0x5e9841b485fbe44b
	.xword 0x1b694a088d6b9566
	.xword 0x292f5435f614efef
	.xword 0x6c62caea88e30c89
	.xword 0xe6476a291261fea7
	.xword 0xcf3f2efd5911079e
	.xword 0x06548f5c85bc0b40
	.xword 0x1f6e923996fedccb
	.xword 0x0b29a1f1c3bfb215
	.xword 0x6a0e003412a5f96a
	.xword 0xc6c0417054da672f
	.xword 0x0a4550e0a3a05684
	.xword 0x7651dfe490749dd6
	.xword 0x939a8e73acc22680
	.xword 0x777766fff91e468a
	.xword 0xe537847dd2fd226d
	.xword 0x74bc23e29c079a46
	.xword 0x35f1f002ccc13496
	.xword 0x8f5807fe805d3145
	.xword 0x4fdab19ea883f69d
	.xword 0xdc634e786cf93668
	.xword 0x6a420ec95d8b247d
	.xword 0x5073f24ddeec9e6c
	.xword 0xdd757512de786c69
	.xword 0xbbe8d21cf0e0dcb4
	.xword 0x7067414d0ef8255e
	.xword 0x47554f4180d0f90d
	.xword 0x94b32671f5b67095
	.xword 0xdc1915b8daa8e5ab
	.xword 0x015590327b3965cd
	.xword 0x31a2a23a669ac013
	.xword 0x330e96f91de3b0c8
	.xword 0xb173e3f9a9c1b20f
	.xword 0xdad755c3e30eeca4
	.xword 0xb3cef0309fcf03b0
	.xword 0x60ce214ae32d7299
	.xword 0x7f0c44df7846307e
	.xword 0x6c732cad8e0e287f
	.xword 0xc71688a1f79b1580
	.xword 0x569a71c5c3eda7fd
	.xword 0x245168bdc1d808cf
	.xword 0x5c010090235b44c6
	.xword 0x6d125f50dfabead4
	.xword 0x1271e6ee7211c649
	.xword 0xb3a5588a020c4616
	.xword 0x8086d726dcd18475
	.xword 0x5f2a80a9c088eb8e
	.xword 0xf2dc41d36256a485
	.xword 0x136dc8e7779b190f
	.xword 0xfeaffa7ae8f3a175
	.xword 0x40ce9768c6b5463e
	.xword 0x5b433ab3650bb683
	.xword 0xabbee950b99502d9
	.xword 0xe10a86fe30563cf0
	.xword 0x5710791e7cc6d8b0
	.xword 0x53154cc0b47bf257
	.xword 0x2fe9d22bd2c4370d
	.xword 0xabe95f5c6d3d5dbe
	.xword 0xc1baa15dd43eb3c7
	.xword 0x14898c09505cb647
	.xword 0x9f85f0101c96b2c1
	.xword 0x4a4eeb34fe338f13
	.xword 0x8441c9917263e35d
	.xword 0x232dc7ab915fcf5d
	.xword 0x0ca77efc76c183fe
	.xword 0x1e2fc51d625e2d28
	.xword 0xc73e28ddbb76a7f7
	.xword 0x8bbc940c9d444852
	.xword 0xf0c9d8c77ba6fe60
	.xword 0x47c821354134cffe
	.xword 0x6e118853e92b4a74
	.xword 0xfc709e98a650fbf7
	.xword 0x32904c42e2c3ccd0
	.xword 0xaaa8df6a8b5621b3
	.xword 0x7863454ba52f5a14
	.xword 0x4ea48f4451687857
	.xword 0x3c8f23febf878c3b
	.xword 0xbfa551168c9ba98c
	.xword 0x6d426accb43b7696
	.xword 0xc975e2bc053767f5
	.xword 0xe372f892cd4edbdc
	.xword 0xa15a7bf1940522a2
	.xword 0xfddc7c3126a329b7
	.xword 0x717b2a3b6d780d7b
	.xword 0x98a0d809a007a031
	.xword 0x1a42a6137e6078de
	.xword 0x13834445bc5be472
	.xword 0xd4516a8a7b549522
	.xword 0xc0b63b725f2706c2
	.xword 0xa37ee481711576cc
	.xword 0x81d1351f65b101b9
	.xword 0x4fd44d4f589ddae9
	.xword 0x3317c475729c8f05
	.xword 0xe560c33000bb43bc
	.xword 0x450507f7c80f0a62
	.xword 0xb1a968e78381b725
	.xword 0x2aa5dc8cbf0cc658
	.xword 0x62111f977eb8c94a
	.xword 0xaed882a3a0ef6a0d
	.xword 0x0009851de8ee41f2
	.xword 0x2fedf151ce794b82
	.xword 0x3fcd512e71785c8a
	.xword 0x41727352903dedd8
	.xword 0xd9dce50054f67aa6
_t1_hmac_alignment_array:
	.xword 9
	.xword 3
	.xword 1
	.xword 10
	.xword 13
	.xword 10
	.xword 15
	.xword 1
	.xword 4
	.xword 5
	.xword 12
	.xword 6
	.xword 2
	.xword 1
	.xword 7
	.xword 6
	.xword 8
	.xword 6
	.xword 10
	.xword 1
	.xword 6
	.xword 7
	.xword 2
	.xword 5
	.xword 0
	.xword 7
	.xword 0
	.xword 9
	.xword 0
	.xword 12
	.xword 7
	.xword 4
	.xword 4
	.xword 0
	.xword 15
	.xword 9
	.xword 5
	.xword 3
	.xword 6
	.xword 4
	.xword 4
	.xword 7
	.xword 3
	.xword 12
	.xword 7
	.xword 4
	.xword 1
	.xword 3
	.xword 11
	.xword 7
	.xword 10
	.xword 5
	.xword 15
	.xword 3
	.xword 12
	.xword 7
	.xword 11
	.xword 15
	.xword 15
	.xword 2
	.xword 5
	.xword 2
	.xword 6
	.xword 2
	.xword 0
	.xword 11
	.xword 10
	.xword 5
	.xword 2
	.xword 0
	.xword 4
	.xword 2
	.xword 0
	.xword 10
	.xword 0
	.xword 14
	.xword 6
	.xword 8
	.xword 13
	.xword 12
	.xword 6
	.xword 14
	.xword 15
	.xword 2
	.xword 0
	.xword 8
	.xword 4
	.xword 5
	.xword 11
	.xword 7
	.xword 9
	.xword 13
	.xword 15
	.xword 15
	.xword 3
	.xword 12
	.xword 5
	.xword 15
	.xword 9
	.xword 5
	.xword 12
	.xword 11
	.xword 13
	.xword 2
	.xword 4
	.xword 9
	.xword 11
	.xword 10
	.xword 2
	.xword 6
	.xword 14
	.xword 9
	.xword 11
	.xword 5
	.xword 15
	.xword 14
	.xword 1
	.xword 14
	.xword 8
	.xword 1
	.xword 3
	.xword 5
	.xword 8
	.xword 14
	.xword 5
	.xword 9
	.xword 9
	.xword 10
	.xword 10
	.xword 1
	.xword 13
	.xword 12
	.xword 10
	.xword 3
	.xword 8
	.xword 13
	.xword 9
	.xword 15
	.xword 4
	.xword 4
	.xword 6
	.xword 12
	.xword 5
	.xword 13
	.xword 7
	.xword 10
	.xword 7
	.xword 4
	.xword 0
	.xword 5
	.xword 8
	.xword 3
	.xword 6
	.xword 14
	.xword 14
	.xword 6
	.xword 10
	.xword 4
	.xword 2
	.xword 11
	.xword 1
	.xword 2
	.xword 4
	.xword 6
	.xword 1
	.xword 14
	.xword 1
	.xword 0
	.xword 2
	.xword 9
	.xword 1
	.xword 9
	.xword 8
	.xword 15
	.xword 6
	.xword 9
	.xword 4
	.xword 9
	.xword 11
	.xword 15
	.xword 3
	.xword 6
	.xword 11
	.xword 6
	.xword 6
	.xword 12
	.xword 8
	.xword 7
	.xword 8
	.xword 8
	.xword 1
	.xword 7
	.xword 6
	.xword 2
	.xword 3
	.xword 5
	.xword 0
	.xword 11
	.xword 1
	.xword 14
	.xword 14
	.xword 10
	.xword 15
	.xword 15
	.xword 0
	.xword 9
	.xword 3
	.xword 9
	.xword 1
	.xword 1
	.xword 15
	.xword 14
	.xword 2
	.xword 14
	.xword 4
	.xword 6
	.xword 5
	.xword 6
	.xword 7
	.xword 3
	.xword 11
	.xword 4
	.xword 12
	.xword 6
	.xword 9
	.xword 15
	.xword 6
	.xword 1
	.xword 7
	.xword 7
	.xword 1
	.xword 11
	.xword 0
	.xword 7
	.xword 8
	.xword 0
	.xword 2
	.xword 4
	.xword 8
	.xword 6
	.xword 5
	.xword 4
	.xword 3
	.xword 2
	.xword 8
	.xword 3
	.xword 5
	.xword 13
	.xword 12
	.xword 6
	.xword 11
	.xword 1
	.xword 8
	.xword 5
	.xword 1
	.xword 14
	.xword 8
	.xword 1
	.xword 10
	.xword 9
	.xword 9
	.xword 13
	.xword 6
	.xword 8
	.xword 4
	.xword 8
	.xword 13
	.xword 0
	.xword 4
	.xword 6
	.xword 7
	.xword 15
	.xword 6
	.xword 3
	.xword 4
	.xword 3
	.xword 3
	.xword 7
	.xword 7
	.xword 13
	.xword 0
	.xword 15
	.xword 13
	.xword 2
	.xword 14
	.xword 3
	.xword 1
	.xword 14
	.xword 1
	.xword 9
	.xword 12
	.xword 8
	.xword 6
	.xword 3
	.xword 7
	.xword 1
	.xword 6
	.xword 15
	.xword 4
	.xword 5
	.xword 7
	.xword 1
	.xword 3
	.xword 9
	.xword 6
	.xword 13
	.xword 14
	.xword 1
	.xword 2
	.xword 0
	.xword 14
	.xword 8
	.xword 9
	.xword 0
	.xword 11
	.xword 10
	.xword 14
	.xword 3
	.xword 9
	.xword 2
	.xword 0
	.xword 12
	.xword 10
	.xword 13
	.xword 12
	.xword 7
	.xword 13
	.xword 2
	.xword 15
	.xword 10
	.xword 10
	.xword 12
	.xword 15
	.xword 2
	.xword 9
	.xword 9
	.xword 11
	.xword 1
	.xword 3
	.xword 11
	.xword 3
	.xword 3
	.xword 13
	.xword 9
	.xword 14
	.xword 11
	.xword 10
	.xword 9
	.xword 3
	.xword 11
_t1_hmac_src:
	.xword 0x38f8d06d861e6c74
	.xword 0xb5e1538e57a9a0ce
	.xword 0xb2dbe563ebc25953
	.xword 0xc4f5ea98ccecb211
	.xword 0xc9049e6fd17ade6d
	.xword 0xfed89ffa71ae4fa0
	.xword 0x510acc5f55461bc3
	.xword 0xfd6d355f23680fc8
	.xword 0x197a98f9b96cf412
	.xword 0x348de18dea0b5da2
	.xword 0xa75b637aa1b63d7f
	.xword 0x26329b2c5e28222c
	.xword 0xc65361f7fe4a0313
	.xword 0xb02a0fc4381ba103
	.xword 0x02fc7015ad42ca62
	.xword 0x5788aaaeaea59151
	.xword 0x4cf230fecf9a7fa5
	.xword 0x4a2d6922362f951d
	.xword 0x44ee14620f0e5255
	.xword 0x10c4dde173e48e69
	.xword 0x9355d65ee26b6dcf
	.xword 0x6ae5383800ce09e0
	.xword 0xc95be3b959a1956f
	.xword 0xd433bf0521fc6082
	.xword 0x4a005463fa633093
	.xword 0x852d9c367a922347
	.xword 0x4791b8f0df1476b4
	.xword 0xee0f0d41447ebd11
	.xword 0xea4c07406a596237
	.xword 0x13731c2e8ddd1aea
	.xword 0x157b188a8e1881dc
	.xword 0x89ef1fcddded9442
	.xword 0x6d3751f11ebc8e51
	.xword 0x3029407d28455ee3
	.xword 0x6a1f5b19834df552
	.xword 0x3e71a998d6841a0e
	.xword 0x3fd8b86d82ec5069
	.xword 0x96afce09770445f5
	.xword 0x115801937738a95f
	.xword 0xb1fda6e7b976a307
	.xword 0x9673ecfcd1cdb04f
	.xword 0xf5010a7cdde5b011
	.xword 0xeb281f7fb6cfd4f1
	.xword 0x082cc2794d022968
	.xword 0xea65e333022ed261
	.xword 0xa0f6cec5fc8fb02a
	.xword 0xe165d391cbad27ed
	.xword 0x9b37f4095831b762
	.xword 0x89a4eb4640c3f347
	.xword 0xd89451987fa3faee
	.xword 0xeb9a87f870aca846
	.xword 0xd56424eb0215cd14
	.xword 0x573fd5745fcdaa54
	.xword 0x5a3886138aeee12c
	.xword 0x03ce93761104a809
	.xword 0xeb98e479c5a5beda
	.xword 0x44fabe25a592020a
	.xword 0x66ef958e7bf2664e
	.xword 0x4bd2177b17cf0b85
	.xword 0xdc52e2331f27fe6f
	.xword 0xe0b4ff9816b53a96
	.xword 0x72ecd53e30f8b34a
	.xword 0x6d678a2d548881e5
	.xword 0x0d10b6b69faf1dee
	.xword 0x5d5f4e68a7fb6acb
	.xword 0x1c0dd10122d71c33
	.xword 0x3842b88692eb7e3f
	.xword 0x06fa8921e29e01f5
	.xword 0x22969c8d92f95474
	.xword 0x75d2366d174df038
	.xword 0x25eacea567529fd6
	.xword 0x4955c277af0fb6b6
	.xword 0x1d426b660eb5c754
	.xword 0x26b5be6fbb53a294
	.xword 0xb1422a893b9d885c
	.xword 0x9fab88c48b9e82d2
	.xword 0x6cc063e650a87a71
	.xword 0xae196cd7dd00c9cd
	.xword 0x61d1ad43cfa3d703
	.xword 0x95e96c0838841a2b
	.xword 0xe3f8b7f97b549279
	.xword 0xface1eeaf2327c1e
	.xword 0x0ea3ae3c8bea7837
	.xword 0x198416683ebb9886
	.xword 0x14a7ed6032cfb1fe
	.xword 0x7ec79c1270428a61
	.xword 0x3e5068800e9e6156
	.xword 0x28033f3ad20a564f
	.xword 0x3a9b8809cebe31f0
	.xword 0x8be428b245336d3f
	.xword 0x68c1ef79a4c6eebd
	.xword 0xc320049079ef19b2
	.xword 0x62ed5a99e622d0c4
	.xword 0x6c829603ae091eed
	.xword 0xaee5b6430eb85d27
	.xword 0x964cf08ef0a5c658
	.xword 0x2b6f822f1d4fd55f
	.xword 0x5efd2074238fe8d0
	.xword 0x73966aa6fa810298
	.xword 0x50bb8800204b1c2f
	.xword 0x74523725b725dd60
	.xword 0xc1fb42582ae14848
	.xword 0x7f52ca7da0161f96
	.xword 0x6d1c924adcd0c4a4
	.xword 0x7d563493d1a2f7ca
	.xword 0xa2b333331ee6e172
	.xword 0xc0edc1ec8c1930f5
	.xword 0x5ed73036b000c67c
	.xword 0xac0d5f2b282303b0
	.xword 0xe0440cc9e05f3f67
	.xword 0x0db82a882ca8519f
	.xword 0xf1cc8fd7e3db34d3
	.xword 0x72df3597f1e8195c
	.xword 0xccd69841eb318bf5
	.xword 0xd59b8fec199f41d2
	.xword 0xd75af53da1f59acc
	.xword 0x7746af777498d80c
	.xword 0x97054db56c1f59da
	.xword 0xf264b8b211a1885f
	.xword 0xcad3f4e28653407a
	.xword 0x2a91eb8bb2dd2794
	.xword 0xc4a54434f18b6783
	.xword 0xe8867be88e4fe87a
	.xword 0x2d5c272920f59757
	.xword 0xf13bade7cbf11f2d
	.xword 0xa6728b38c4151cae
	.xword 0x24dfd08ec7b66e14
	.xword 0xf4e382341766308e
	.xword 0x39c30e5f724c02a5
	.xword 0x78872000cfcea748
	.xword 0x03a19be510aca2c1
	.xword 0x7ba3db2b2aa320ce
	.xword 0xe06b15201d904ae9
	.xword 0xaf6a9a12d8914fd9
	.xword 0x48d8da4271f258f1
	.xword 0x15c7997b1be64406
	.xword 0x2fe6d70a12e7220c
	.xword 0x4a90ab5183a029ed
	.xword 0x28e77187690b840f
	.xword 0x42dca5a1f1d331d1
	.xword 0xc54f678a1e99687b
	.xword 0x5aa8664fed142d53
	.xword 0x885925766f43e420
	.xword 0xce5b0e49fa883f9d
	.xword 0xdc00c26e912e39a4
	.xword 0xf17133d89c6ed94c
	.xword 0xa593b3e91d0d2a6f
	.xword 0x99fce4e781d94166
	.xword 0xe89eeecfeb4fe3b7
	.xword 0xf9b334c869d22c60
	.xword 0x5d9c985aa71dedae
	.xword 0x8f2a3d975cdaf5f5
	.xword 0x3f00582742f3e637
	.xword 0xa9f6f2e022e00fbd
	.xword 0xa4e56b7ff9b28866
	.xword 0x677432f921d939dc
	.xword 0x3d89ad574f49252b
	.xword 0x639c0f36894035df
	.xword 0x3b9113368a1f52e8
	.xword 0xe22cc7ec608ffaf7
	.xword 0x54e3aa15b3cc940f
	.xword 0x74d0bdf06f12c514
	.xword 0xb5cb141150c5459b
	.xword 0x47244783d7db9cd3
	.xword 0xb2fdd4f2703bd4c6
	.xword 0x4abe5f7258dfe791
	.xword 0xbd6d2788e27d745b
	.xword 0x83c14534b5d327cc
	.xword 0xcae8e2e6490a6cd6
	.xword 0x9adbb93764cd0ee9
	.xword 0x736d402cb5294d29
	.xword 0x028cfd18c850a7b4
	.xword 0x581c541459b18b67
	.xword 0xf2c7c763d2b6e7db
	.xword 0xdd05178bc7f3e7fb
	.xword 0x5f51de4de2c61577
	.xword 0xddf3dee9320e81de
	.xword 0x28f13b382a18af98
	.xword 0x4e9517f1a9c8d02e
	.xword 0x9ea6eece5d7eb1a9
	.xword 0x70bdac9359af469f
	.xword 0x8fb8c1bbe5994b7d
	.xword 0x9e188646f9baf9e1
	.xword 0xb61524112789003d
	.xword 0x3e3a02eaa2e64c9d
	.xword 0x3d0b5b9c1441148d
	.xword 0x3aaee44d1347de8d
	.xword 0xece17c6bc48474e2
	.xword 0x75b388bb8bbc8fc2
	.xword 0x9e259b3f011c571b
	.xword 0xe0f7d4ee62536e13
	.xword 0x1820fd37d97cf4c2
	.xword 0xb2a4608d82526b89
	.xword 0x01c0693f7ea50a32
	.xword 0x9cba97155f9467f8
	.xword 0x7b661ef47334b906
	.xword 0xae45a79686152ba7
	.xword 0xc414de02522b85f5
	.xword 0x81a2aeff6f12164d
	.xword 0xa4fd1c2d4bfe8f05
	.xword 0xbb081a632f0f17f3
	.xword 0x8a0da198f3d38f4e
	.xword 0x207bf938eebd1365
	.xword 0x109dae499f44ac6c
	.xword 0x021517ccb88180aa
	.xword 0xa981d0fa838a887f
	.xword 0x9e110d0877f36bfc
	.xword 0x3e1eba019c035421
	.xword 0x0dca37038b62e728
	.xword 0x5d6cfd34cd7e917d
	.xword 0x847cc9cafd5eecb9
	.xword 0xf36fa378cd4f9cb8
	.xword 0x0f2ba9ef5e90a0cb
	.xword 0x178f75c333a5bae7
	.xword 0xffc9573f5b6da52b
	.xword 0x6abc854a640826e2
	.xword 0xf192db94e0cad638
	.xword 0x2489e4a4e60d2e20
	.xword 0x5a54a76ccefd553d
	.xword 0x917a837be8c93300
	.xword 0x63a91b05a41bc1a2
	.xword 0x6bd85263ceabe1a6
	.xword 0x5dcfd30fd6df9233
	.xword 0x01958009c9c24b69
	.xword 0x5348db57ef6a5b37
	.xword 0xa41af6d939bdb70a
	.xword 0xbde873110af899b2
	.xword 0xe43cb68475adefb6
	.xword 0x19432f31e2125958
	.xword 0x8e6974b628042599
	.xword 0x8f8ce0e3d5914629
	.xword 0xa6183112ef7665dc
	.xword 0x18354278c3325ac3
	.xword 0xfb7cba2857a5c2da
	.xword 0xa20ed15d009bceb0
	.xword 0xd95b8305fc3b2568
	.xword 0x19da0a9aafbd64f6
	.xword 0xc6db36e80c87ecc3
	.xword 0xd6a521aee2af5c41
	.xword 0xc319243ff3201d08
	.xword 0x0032f1bb087554cc
	.xword 0x979142bbc568df78
	.xword 0x2c5c381a3104bc5e
	.xword 0x9f6da63db485933c
	.xword 0xdf1845bbe24c0acb
	.xword 0xb7cfce7ae09a5059
	.xword 0x90b11a47d3b4d06e
	.xword 0xeb05bd4ce7b12c87
	.xword 0x9deda027122903b3
	.xword 0xb8fbb3b5d28aa912
	.xword 0xfc6e453d7c3a47d6
	.xword 0xb252c10f0e5490ae
	.xword 0xc34e3932f5684b9f
	.xword 0x33e50e23fa561e91
	.xword 0x6d5f2a0874d5689d
	.xword 0x960f0a42d82eec31
	.xword 0x592bcac569999c8b
	.xword 0xe6b9f8b63399379c
	.xword 0x3d4a7ee25f346a4b
	.xword 0xbe0a519c16d16be8
	.xword 0x234bfbe58f6549a2
	.xword 0x1a7ce6402a77094a
	.xword 0x6070512d0f57acf3
	.xword 0xec8720b2b5808aa1
	.xword 0x4521251b26b5ebe1
	.xword 0x9994b4a9db73ed08
	.xword 0x7773f1e0d7c4c508
	.xword 0x7e2c4845256cd34c
	.xword 0xa25e90d72e39e5c0
	.xword 0x17fe12dedc1f4ad8
	.xword 0x699931d80d9ad110
	.xword 0xf0702595560ce44c
	.xword 0x736dda23eb5e31b1
	.xword 0x04b93b92a964c5ee
	.xword 0xf7d49c7ef8bb0675
	.xword 0xa6e829208dca7e83
	.xword 0xb313b811c9eb2505
	.xword 0x34b2c9ea365f1029
	.xword 0xb76b93d8772dd135
	.xword 0xe07c00585b5f1a2d
	.xword 0xb3cf7c454f4ec762
	.xword 0x47816f5d5dab7241
	.xword 0x3871b781405fda96
	.xword 0xe8e6e10bef6bf419
	.xword 0x7378dac385da0952
	.xword 0x537a1db3547026cc
	.xword 0x595f2f0c5f6202b1
	.xword 0x1745a0bf851e6c62
	.xword 0x1abe0bdfb33a9658
	.xword 0xf6cf5a3dc439dc32
	.xword 0x862bae5c5660e1d5
	.xword 0xdcf58b49e8ab8ca3
	.xword 0x728988075081f8af
	.xword 0x849041ff4565469c
	.xword 0xce0e7839e35a04e1
	.xword 0x42753989c6399fe6
	.xword 0xf5063443059beb02
	.xword 0xfbfc6e0ab2a763ab
	.xword 0x3035a94fe20e011d
	.xword 0x610267b4b80cc674
	.xword 0x965fb5958c4ad61e
	.xword 0x777792866bf27902
	.xword 0xf7095c83f335c817
	.xword 0x1fd93453695d0e2d
	.xword 0x569b4935dcf004d5
	.xword 0x9cb00124059a4f2d
	.xword 0x1c403308620aeb1e
	.xword 0x6ac6e3eef504141b
	.xword 0x10b09e3758c65dcd
	.xword 0x9ef16df7aec9f501
_t1_hmac_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_hmac_auth_key:
	.xword 0x2d749ac21818947a
	.xword 0xea5f3d39419453e2
	.xword 0xdf3ba4cff59e349e
	.xword 0x29b35362ac58a6bb
	.xword 0xd8c787e2d525bca8
	.xword 0xc188acd5ab1e587f
	.xword 0xe8d28439f6f907b2
	.xword 0x305ce8c4bb614863
	.xword 0x5cf05270f2602da9
	.xword 0x2a64ce9f0d7483e0
	.xword 0x1c6ebb1905845d61
	.xword 0xc0a139c2e97f39cf
	.xword 0x78ce142a05f2bf64
	.xword 0x02d8158c24d0630e
	.xword 0x9d150a69387c0f2d
	.xword 0xac300292eab0752c
	.xword 0x719daf64b9aa4852
	.xword 0xbe9c75ebc333cd81
	.xword 0xe2cb766f0a7ed563
	.xword 0x93b624107a65c94d
	.xword 0x0e60cb841de84396
	.xword 0x35364042c9c2ecf3
	.xword 0x2b474e948d170aa4
	.xword 0x106e343df4f156d5
	.xword 0x2dced0003481b5f8
	.xword 0x6cbf1a18d160a87f
	.xword 0x220460619d67cd6c
	.xword 0x37c39df36189e534
	.xword 0x69c60bebb67d4607
	.xword 0xdd85c95a5ea05e68
	.xword 0xb2d17c3704f59348
	.xword 0xaf93c4c7d3fcba48
	.xword 0xc01b36b0629d2836
	.xword 0x0ef5305c0d34418b
	.xword 0x94708001bab9bcdb
	.xword 0xbcdc372af03c759c
	.xword 0xf5a411792b5c22a4
	.xword 0xc9460c0c8911dada
	.xword 0xbaba122fbe300af6
	.xword 0xdaa3d794baaf7367
	.xword 0x820b4e68866b1dd7
	.xword 0x694cffb41ff71565
	.xword 0x8008b503440f36c6
	.xword 0x0018821a5284e56e
	.xword 0xee3ffdae53ef4e6b
	.xword 0x8d380e75daf5b149
	.xword 0x90524517ef22bde7
	.xword 0x0f58adbe9e5fac92
	.xword 0xb166e9e51b7f3cdd
	.xword 0xe941417b607d17d8
	.xword 0xc1ec3693ee10f939
	.xword 0xf5116c5653120650
	.xword 0x685354f8852b9e95
	.xword 0xbe8292d0494ee138
	.xword 0x2b2de228490b7374
	.xword 0x1d6f75295d8f89bd
	.xword 0x7b31be3f25905bd5
	.xword 0x23feaf554e783c92
_t1_hmac_auth_iv:
	.xword 0xb6e7750124bca6fb
	.xword 0xbb6a227782274ef2
	.xword 0xbb50d2b6afd4a3a9
	.xword 0xeaf0fc4f518e4dc1
	.xword 0xb30c12c3872b5a3c
	.xword 0xe509e7134c10ad89
	.xword 0xb7845654dc40617f
	.xword 0x9cccb35187c595f4
	.xword 0x2360e79e0eaf9383
	.xword 0xb3e0b06b4a740189
	.xword 0x037ea9bd5badcca8
	.xword 0xed6d0df1573ad1bd
	.xword 0x565288386fabc68a
	.xword 0x93345ebd98c6b82b
	.xword 0x471a2899b86aa5c9
	.xword 0x1e039cf0dea398d7
	.xword 0x2c7e730d98a549e2
	.xword 0x16a0cc14f9e5a5c4
	.xword 0x8ec3d9e2604f0dfd
	.xword 0xacfe0643ae65a074
	.xword 0x6a7b5354090caf48
	.xword 0x3b4fcbfad2f52216
	.xword 0x0a29a96c5ef4f59c
	.xword 0x7e2a6954364dd037
	.xword 0x128cd0f4ba16a5a6
	.xword 0xaef355c007ba5b10
	.xword 0x7274f582dcee04c9
	.xword 0xc646c30dede31c16
	.xword 0xa969498cef4c7818
	.xword 0x93e459c7f101e04f
	.xword 0xd4bde4fd225cdc19
	.xword 0x66ecc2c6d5705ff3
	.xword 0x65458de40428920b
	.xword 0xa18ea9eea618a19a
	.xword 0x70fab20173d8c2f4
	.xword 0x8ae1ddd09c3ff7a4
	.xword 0x71a1934c013ff42b
	.xword 0x0012b7e6c2322903
	.xword 0x205cdf36fa1bee15
	.xword 0xbf7c1668754e9003
	.xword 0xa4895792644453d8
	.xword 0xe2c4e605db38df61
	.xword 0x94ad39162c6d8447
	.xword 0xbfcdbb4aa6c2c67e
	.xword 0x5d750aad9b505748
	.xword 0x06547884cc5f369a
	.xword 0xb98b2bb306863e7f
	.xword 0x52be59f64a61d191
	.xword 0xb9c8a2ff1ae70665
	.xword 0xd23436e2c8d2ee5d
	.xword 0x66fb39581d44a656
	.xword 0x0e59ce655ba90b0c
	.xword 0x8a1747ce4362740e
	.xword 0x678f8af776c09660
	.xword 0xe7feb4746342c3d8
	.xword 0x08279d675db92356
	.xword 0x80a772d67ff74a23
	.xword 0xfac1a06d3d536790
_t1_hmac_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_rc4_key_array:
	.xword 0xfe7590112e4ca00c
	.xword 0x18dddcb6f278a93a
	.xword 0x1b89fc755f719544
	.xword 0xa06831d3654dba7b
	.xword 0x1711ed9624970555
	.xword 0xe80d3072dc1c7a08
	.xword 0xf7b147bc287df18c
	.xword 0x60b236db24a532c2
	.xword 0x2e203d0c580963a0
	.xword 0x98b6c5c4de6e83a9
	.xword 0xc22362927818850f
	.xword 0xf8265f5156e85617
	.xword 0xe27d9aef34a50be5
	.xword 0x02e029da80287ce2
	.xword 0xf45148e56cd5058d
	.xword 0xbfaee3251bf46ec3
	.xword 0xa012b87ef07c4276
	.xword 0xc5395fb823b84456
	.xword 0x066c6d8346d02fb7
	.xword 0xa2aec9a1473110ae
	.xword 0xe4fceedfc0f28ea1
	.xword 0x62b9f4a57f64923d
	.xword 0xa4b238bbf29bfd6e
	.xword 0xa3dee9eb8e51da1c
	.xword 0xb228d263cb86eb39
	.xword 0xd4b87b65d5608431
	.xword 0x53125c896a872f12
	.xword 0x2cf611d6e0c802c6
	.xword 0x3f27a70b71f3949b
	.xword 0xb725ce865d48b999
	.xword 0xbb34c9384ea82e24
	.xword 0x401dacc53ff6f0a8
	.xword 0x08d991899dc5ec32
	.xword 0x6bf590df51c1b6ac
	.xword 0x08b7928d3511bdb1
	.xword 0xe3d06702f05a0c9f
	.xword 0xa205efbb3747e42a
	.xword 0xed1b047f2db06b06
	.xword 0x60c16f0d0ef41535
	.xword 0xd5e837a50ef99187
	.xword 0xdb058ba3a1ebb2a1
	.xword 0xfb32414662e055bb
	.xword 0xc275e70a0394d678
	.xword 0x43fb4b6249dae91f
	.xword 0xa1a685883ab1e4c9
	.xword 0x432334065759dbd6
	.xword 0xa82789e4ef4f5cb9
	.xword 0xdba8a7466d60cbe6
	.xword 0x61357db69fe847a9
	.xword 0xbf3ed8e264d7529d
	.xword 0x3bd0ae1ba4f2f2e3
	.xword 0xd1778227c62d3e31
	.xword 0x69e0b0c10d9a39fb
	.xword 0xd760cc54b5623947
	.xword 0xc8539a43e09b0d5b
	.xword 0xaed70821b564cae0
	.xword 0x0090785a971a09ce
	.xword 0x0e1dfc6f9fb412eb
	.xword 0xf96c82ed5d8ca10e
	.xword 0x5f7fc86654e06678
	.xword 0x98bc728c2529e691
	.xword 0xbe04affb28553bf8
	.xword 0x93fce6329f0cd59d
	.xword 0x65dd13e69b35ba6c
	.xword 0xf033e6d29591fe39
	.xword 0xc60645a93d571907
	.xword 0x41890dac56f4738e
	.xword 0x82d6913479be62fd
	.xword 0xcb6de128c682521d
	.xword 0xa9ad785ff300a0d8
	.xword 0x81203c55c537772f
	.xword 0x9474c01a0f1306b1
	.xword 0x8b5bb2b860d46ce7
	.xword 0x746cf227c1ec2281
	.xword 0xe17b4f4e4e381dd7
	.xword 0xde4f70bcb31e430c
	.xword 0xb8a16325f2831709
	.xword 0x6fd1942dbe820f63
	.xword 0xb6909647611d9644
	.xword 0x36539cf4161f6a9d
	.xword 0xee6f4ea402eef6df
	.xword 0x56751169d12cdf24
	.xword 0x39761b01441b1c06
	.xword 0xa4b15eb8aea6108f
	.xword 0x9f4849d4613f9503
	.xword 0xc813c5c2bbe592c8
_t1_rc4_iv_array:
	.xword 0x8ddf2c831f4515bc
	.xword 0x4aef46f3c317397d
	.xword 0x54b2da67b77cf909
	.xword 0x6773d050b89f948c
	.xword 0xc386a3eec84d5345
	.xword 0x19c68dd6e7f3b7a1
	.xword 0x7155360284cab0b2
	.xword 0xe203143be4ff24db
	.xword 0x7d2eacbde32e3e0c
	.xword 0x751e13b305470ccb
	.xword 0x2af5fdd97af6cb6a
	.xword 0xdcd87ac7f8a25c22
	.xword 0x91ec79b5861e24a9
	.xword 0x300a9f5e5a99a76a
	.xword 0x04a2bc28f4cb05b9
	.xword 0xed40126e4b0fe284
	.xword 0x44c0dfcaa56f485c
	.xword 0x31cbd34ec271e315
	.xword 0x6facc800b518e55b
	.xword 0x4776868ba1044c0d
	.xword 0x9b45820f92775c14
	.xword 0x2b8cb276a70c30b6
	.xword 0xda84c2fe38e1a970
	.xword 0x42f33d862b61840c
	.xword 0x4cabb521c7a3fcd7
	.xword 0x3065a27afc175405
	.xword 0x609aeaab4869f779
	.xword 0x5e8b1849e2774154
	.xword 0x00420f61da560e5c
	.xword 0x46b36e2114c45b99
	.xword 0xabb5585a0103cd14
	.xword 0xe1b4c7f4bec42f84
	.xword 0xbf1ff4499a200215
	.xword 0xb4f6a836b8c1f585
	.xword 0x223ee66f3a61d81d
	.xword 0xd12baeaad62c4b5a
	.xword 0x36089e9298c5f67d
	.xword 0x86d1bb91adca0abd
	.xword 0x358af13991e0cc4e
	.xword 0x11b38a6e4be73350
	.xword 0x0b0cf82fd32d16b6
	.xword 0x24dab3ccbeb64699
	.xword 0x74f5da101e4a5812
	.xword 0x3dadc2bb60e49b6f
	.xword 0xdec74cf1147bbbac
	.xword 0xc190083b63308198
	.xword 0x3a2358af45e9f1d3
	.xword 0xd0fbac74f76cbf30
	.xword 0xc82a46c56d2a9cfb
	.xword 0x5bf34c9b4c072712
	.xword 0xa0ef9be1e4b20b7a
	.xword 0xe83ab5194c642037
	.xword 0x55f358bca20f133b
	.xword 0x9c36ca27839b5091
	.xword 0xc0e476e5ca6bae3d
	.xword 0x6302d8b16e7802ca
	.xword 0x24e903173fd1789c
	.xword 0x7a1d9b1608d2bdee
	.xword 0xc84f0ec88deb6440
	.xword 0x7547803c1b69c691
	.xword 0x9f6f9ca24ec31239
	.xword 0xfe0bc0180603c97f
	.xword 0x74284cc030c52ca6
	.xword 0x18d34248b66f5e22
	.xword 0x287126af9b3e856a
	.xword 0x67c3fdc63aa9f5ba
	.xword 0xfa46441629978476
	.xword 0x30a768bb46a41ba0
	.xword 0xc36f7ea3420d16b0
	.xword 0xd48bd17767ee64f4
	.xword 0x2587edf28cadb02b
	.xword 0x4dff035213bac604
	.xword 0x41e4dd6deac466cf
	.xword 0x440eb3e6e9134c94
	.xword 0x9083748d804c6550
	.xword 0xf00b0b8336c197ea
	.xword 0x2dbd7afbaeb2b9ad
	.xword 0x9e926591fc624ebe
	.xword 0x428fd55cc831bf61
	.xword 0xb3313c18743e50bb
	.xword 0x9bf275c6de3bede5
	.xword 0x7c0611c27a4ed8b5
	.xword 0x5e14757216bf1920
	.xword 0xd8c6b763345754c6
	.xword 0x48da22b463edd9a0
	.xword 0xd6ca6ef468a17f5c
	.xword 0x9aa4aa2eaef0929b
	.xword 0xaf181b57266f14f8
	.xword 0xfde717069a59be10
	.xword 0x91ab8559ee072a98
	.xword 0x3f405222dc1dbff1
	.xword 0x74a0f211556e7a43
	.xword 0x962ee0e0a89b48a9
	.xword 0xec9a2768a46578cf
	.xword 0x307f8fc530c75291
	.xword 0x15c75daabca65478
	.xword 0x0ec487b12962f70d
	.xword 0x4ab09f9ed74446ed
	.xword 0x4477d9d46730078c
	.xword 0xa3ae46aadea89ecf
	.xword 0x10852a2cb4b4c93a
	.xword 0x9572d612d0069d13
	.xword 0x77b0140690581bc6
	.xword 0xa47e427ec2174ab0
	.xword 0xb14621bc2d9065f0
	.xword 0xab949c130667cf1f
	.xword 0x2e12547e3c1c01f2
	.xword 0x27f1dae70b0b9e0a
	.xword 0xaaad53f8bab89ddd
	.xword 0x82d8edcce8d25c76
	.xword 0x0cd5bfdfe779ea95
	.xword 0x5634ea982884f3b9
	.xword 0x1f0362e26b497f68
	.xword 0x3f9ead15b779b030
	.xword 0x6233c1f9c3b06009
	.xword 0xd940e08a16a61aa6
	.xword 0xa0710d8a9a6f99a0
	.xword 0x9057a9805c71f3ff
	.xword 0x4d596152ccc222c8
	.xword 0x83343587caa0fbe7
	.xword 0x176d6406613b55f2
	.xword 0xd2a5fdd6945de8d3
	.xword 0x7b80ee466069ce1b
	.xword 0x6841bb294d596e3b
	.xword 0x858e439e484dc8e6
	.xword 0xbc1e57c97d163654
	.xword 0x44e86c1d7c823e41
	.xword 0x15217121b9cc8a36
	.xword 0xcc6fb1aa868c8501
	.xword 0x5e3c778478bd9d66
	.xword 0xf298a719cacd6bf4
	.xword 0x663c830bc0e2a823
	.xword 0x27e75355986ed9b5
	.xword 0xe800380558aeb518
	.xword 0x711f3c5295e96622
	.xword 0x9157f26a41a205ac
	.xword 0x410867de02874916
	.xword 0x06a6f0c934f3356c
	.xword 0x7166eef3b7e1f8f9
	.xword 0xe19541806aeb603c
	.xword 0x59935f49a59db67b
	.xword 0xf7711efd9c8975ea
	.xword 0x8161f44574a0d4ef
	.xword 0x6d9afbd4b9aaebc4
	.xword 0xae57680bd19fe514
	.xword 0x645b2d947f97e739
	.xword 0x84e0aad48b63531c
	.xword 0x0c32e112f603f8ce
	.xword 0x6463937fc2e7b142
	.xword 0xa6d7aa560dc063cc
_t1_rc4_alignment_array:
	.xword 7
	.xword 6
	.xword 8
	.xword 2
	.xword 3
	.xword 11
	.xword 5
	.xword 15
	.xword 7
	.xword 5
	.xword 14
	.xword 14
	.xword 15
	.xword 8
	.xword 12
	.xword 10
	.xword 12
	.xword 1
	.xword 4
	.xword 12
	.xword 12
	.xword 0
	.xword 2
	.xword 2
	.xword 9
	.xword 3
	.xword 2
	.xword 1
	.xword 6
	.xword 14
	.xword 1
	.xword 2
	.xword 1
	.xword 9
	.xword 10
	.xword 0
	.xword 14
	.xword 9
	.xword 15
	.xword 8
	.xword 11
	.xword 6
	.xword 15
	.xword 1
	.xword 10
	.xword 10
	.xword 15
	.xword 6
	.xword 2
	.xword 6
	.xword 4
	.xword 2
	.xword 15
	.xword 2
	.xword 1
	.xword 15
	.xword 12
	.xword 1
	.xword 6
	.xword 10
	.xword 13
	.xword 2
	.xword 7
	.xword 0
	.xword 9
	.xword 11
	.xword 8
	.xword 8
	.xword 15
	.xword 5
	.xword 6
	.xword 12
	.xword 14
	.xword 11
	.xword 9
	.xword 14
	.xword 12
	.xword 14
	.xword 15
	.xword 8
	.xword 6
	.xword 2
	.xword 15
	.xword 6
	.xword 9
	.xword 5
	.xword 6
	.xword 1
	.xword 5
	.xword 15
	.xword 5
	.xword 11
	.xword 6
	.xword 4
	.xword 1
	.xword 1
	.xword 1
	.xword 2
	.xword 6
	.xword 9
	.xword 12
	.xword 2
	.xword 6
	.xword 12
	.xword 9
	.xword 5
	.xword 0
	.xword 13
	.xword 8
	.xword 7
	.xword 2
	.xword 8
	.xword 12
	.xword 7
	.xword 1
	.xword 5
	.xword 4
	.xword 4
	.xword 8
	.xword 13
	.xword 2
	.xword 13
	.xword 12
	.xword 7
	.xword 3
	.xword 8
	.xword 5
	.xword 14
	.xword 2
	.xword 10
	.xword 2
	.xword 13
	.xword 11
	.xword 8
	.xword 1
	.xword 10
	.xword 12
	.xword 3
	.xword 10
	.xword 5
	.xword 2
	.xword 6
	.xword 11
	.xword 10
	.xword 12
	.xword 2
	.xword 14
	.xword 1
	.xword 10
	.xword 2
	.xword 7
	.xword 3
	.xword 2
	.xword 12
	.xword 14
	.xword 7
	.xword 10
	.xword 14
	.xword 0
	.xword 7
	.xword 12
	.xword 4
	.xword 15
	.xword 15
	.xword 10
	.xword 7
	.xword 1
	.xword 3
	.xword 6
	.xword 4
	.xword 8
	.xword 7
	.xword 15
	.xword 3
	.xword 4
	.xword 11
	.xword 7
	.xword 9
	.xword 5
	.xword 13
	.xword 12
	.xword 4
	.xword 1
	.xword 11
	.xword 15
	.xword 12
	.xword 0
	.xword 13
	.xword 0
	.xword 11
	.xword 4
	.xword 12
	.xword 10
	.xword 3
	.xword 13
	.xword 14
	.xword 7
	.xword 14
	.xword 11
	.xword 12
	.xword 10
	.xword 11
	.xword 1
	.xword 10
	.xword 8
	.xword 3
	.xword 12
	.xword 7
	.xword 0
	.xword 14
	.xword 2
	.xword 4
	.xword 7
	.xword 6
	.xword 10
	.xword 8
	.xword 6
	.xword 8
	.xword 11
	.xword 7
	.xword 14
	.xword 2
	.xword 14
	.xword 14
	.xword 8
	.xword 11
	.xword 13
	.xword 7
	.xword 6
	.xword 10
	.xword 0
	.xword 1
	.xword 13
	.xword 8
	.xword 9
	.xword 11
	.xword 5
	.xword 6
	.xword 0
	.xword 0
	.xword 8
	.xword 3
	.xword 14
	.xword 12
	.xword 3
	.xword 3
	.xword 3
	.xword 4
	.xword 2
	.xword 1
	.xword 4
	.xword 8
	.xword 3
	.xword 6
	.xword 9
	.xword 13
	.xword 10
	.xword 5
	.xword 2
	.xword 11
	.xword 10
	.xword 10
	.xword 9
	.xword 1
	.xword 8
	.xword 10
	.xword 5
	.xword 15
	.xword 7
	.xword 1
	.xword 4
	.xword 13
	.xword 4
	.xword 8
	.xword 2
	.xword 15
	.xword 5
	.xword 8
	.xword 13
	.xword 13
	.xword 12
	.xword 10
	.xword 5
	.xword 4
	.xword 5
	.xword 3
	.xword 0
	.xword 9
	.xword 1
	.xword 11
	.xword 4
	.xword 14
	.xword 11
	.xword 6
	.xword 5
	.xword 10
	.xword 6
	.xword 6
	.xword 3
	.xword 7
	.xword 7
	.xword 11
	.xword 2
	.xword 0
	.xword 1
	.xword 8
	.xword 2
	.xword 13
	.xword 1
	.xword 6
	.xword 5
	.xword 0
	.xword 7
	.xword 2
	.xword 4
	.xword 11
	.xword 3
	.xword 6
	.xword 8
	.xword 6
	.xword 2
	.xword 6
	.xword 15
	.xword 14
	.xword 1
	.xword 3
	.xword 4
	.xword 4
	.xword 2
	.xword 13
	.xword 15
	.xword 12
	.xword 9
	.xword 11
	.xword 1
	.xword 5
	.xword 8
	.xword 4
	.xword 3
	.xword 15
	.xword 3
	.xword 14
	.xword 13
	.xword 10
	.xword 6
	.xword 7
	.xword 4
	.xword 5
	.xword 3
	.xword 12
_t1_rc4_src:
	.xword 0xb37eb42f209cca6b
	.xword 0x27b279d37b3d3c52
	.xword 0x5839431369219066
	.xword 0x8027b23496fcd0f9
	.xword 0xd949a097299221b1
	.xword 0xd36fd0924b3d2914
	.xword 0x5134413752362acc
	.xword 0x7ecdfdec978f036c
	.xword 0xabd014b8583a8a68
	.xword 0x1098822e4f7c7fd1
	.xword 0x7127013fea416a14
	.xword 0x99cc46e050a4da0a
	.xword 0x10570d71ebf4502c
	.xword 0x3b519a358b601316
	.xword 0x0e3449ac867bfff7
	.xword 0xa296921bd6b624d9
	.xword 0x391c6acd8cd3bf54
	.xword 0x88b965753e59abc5
	.xword 0x2dc0998c85e9d810
	.xword 0x5a80b52c83013081
	.xword 0x87825cdbbee46ff5
	.xword 0xe9d9f3f7ad985d16
	.xword 0x7b5cc3481f2e9478
	.xword 0x3f63dea22a6b818a
	.xword 0x21a09135205037c3
	.xword 0x6776aca3cdc31bc5
	.xword 0x85f53892e61e0d43
	.xword 0xed1f8a28227626b5
	.xword 0xd183dc43fbdb32b8
	.xword 0x27e2ef2adc854a0e
	.xword 0xc5ebdc19ca227060
	.xword 0xe3b5529cce98b195
	.xword 0x7e8cdd9b599507fd
	.xword 0xf6f1a238070850da
	.xword 0x6166cec679cac8f6
	.xword 0x1ed431da8ca7da1b
	.xword 0x3f9d36e28d97deff
	.xword 0x4c538a53a5e97c8b
	.xword 0x98038c210cb60448
	.xword 0x007fd31cf3253e4a
	.xword 0xe44308040206fb97
	.xword 0x12e7b1b178d6d16b
	.xword 0x84c50cff1c3851be
	.xword 0xbfc0e47b32aa613a
	.xword 0x82099ec775afac82
	.xword 0x46b23f8c62d58754
	.xword 0xd395e90b0430f019
	.xword 0x75e0363d76fdaf9d
	.xword 0xc8dbb102fef926d4
	.xword 0x358820aa6d197b2c
	.xword 0x3c8277466ee637c5
	.xword 0x0c55edb578b754df
	.xword 0x2b56201dd4072642
	.xword 0x4f9cf0bbfbf14707
	.xword 0x6e5809e57b4df337
	.xword 0x0adc739742f73a21
	.xword 0xb32aa17df228e9e3
	.xword 0x2f4af8d38f6d4277
	.xword 0xf8c92cdbaf014f11
	.xword 0x5863cba2304180fe
	.xword 0xa504f3fa623be349
	.xword 0x2c46abe39ef2f12a
	.xword 0xf8202abf557ec4a4
	.xword 0x88c3873a0fa4c075
	.xword 0x2d50c65950226197
	.xword 0x9e984511246cec50
	.xword 0xb4a09678320d08fd
	.xword 0xedaccbdfebc68974
	.xword 0xa335370dfb0abc93
	.xword 0x4a9e384ae192e555
	.xword 0x2facdd724dc8b95a
	.xword 0x3d88a6c2782eb973
	.xword 0x7a2b0ad551ff8c63
	.xword 0xef71cacd8226c268
	.xword 0x4d58b3b0a246d1ab
	.xword 0xe971dcb6c58c25ad
	.xword 0x07bbf6804902acc8
	.xword 0x8a0b8b98a4a29c97
	.xword 0x5bc2bc6e435e80e7
	.xword 0x368fa930e4e84e5a
	.xword 0x47fc0ad15cc070ad
	.xword 0x557fe3526d041abb
	.xword 0x9796e27428395cd4
	.xword 0xd61adc477996b64e
	.xword 0x1eac125dab2e434c
	.xword 0xeab292eda55ef054
	.xword 0xd49cdf62a1464f78
	.xword 0x0658260a127ed3a1
	.xword 0xf21822d88e2ea9cc
	.xword 0x18351e799a6affa8
	.xword 0x404f8202797ae7ae
	.xword 0x3900ba052d3a380f
	.xword 0x7688e7b4006383b5
	.xword 0xea7feca60551c9e5
	.xword 0xf20633a9b693170a
	.xword 0x33b50b4e1d80f24b
	.xword 0x0d48363a578f5659
	.xword 0x4a5d1f0f6317adcb
	.xword 0x824d1b1cba1920cc
	.xword 0x3cdef2fe23fa6643
	.xword 0x81f52bd02cdd7aa0
	.xword 0x4177e827351a0c54
	.xword 0x94d50cac3f2f5f4f
	.xword 0xa5f79790a1575719
	.xword 0x39d3a886028082f7
	.xword 0xa155db7702d94d75
	.xword 0x50c0df0ad9973f2a
	.xword 0xf206bdf011e24863
	.xword 0x514745c53a7cd4b5
	.xword 0x7a47fd301a1f5e73
	.xword 0x2289212be2350fb2
	.xword 0x640da81c075d4fd3
	.xword 0x9d429a2ca20bd62e
	.xword 0x34ecb3be59f51ac5
	.xword 0xe51e4a52df563a03
	.xword 0x16ae8f6b71dd024b
	.xword 0xc8bca2ec98741d9f
	.xword 0xa7a725e7b5c2de4c
	.xword 0x13d6a266cfa73ae6
	.xword 0xbb5938486d146401
	.xword 0x2ba4e61be5988c4a
	.xword 0x8d7398a8c91d59ee
	.xword 0x51ae30c077f82f49
	.xword 0x13eb0ed00a2a6e49
	.xword 0xdecdc7021b9201e5
	.xword 0xbca000e5d52a1e97
	.xword 0x474ce3e27cc525bb
	.xword 0xce50c0bd33e8e52f
	.xword 0x120ac734c0a5868b
	.xword 0x811b09057199c489
	.xword 0x4f98d451271d8b5a
	.xword 0x0990d74c0bc69636
	.xword 0x760f184f7d51e85b
	.xword 0x36109ba41cf63631
	.xword 0x824a376b9b79e5be
	.xword 0x2c2e3964be9ebbb9
	.xword 0xdee09ea6a23b3978
	.xword 0xd8c46bcf77e58e04
	.xword 0x76871b8ec6ab3470
	.xword 0x4e250a7b7ea03b3d
	.xword 0x5de2f848335ba70d
	.xword 0x2ca0e8b04e0e1d38
	.xword 0xcb2991178e692177
	.xword 0x00d4a97453a4f773
	.xword 0x5ee398391eecc128
	.xword 0xc3bb1be328b55137
	.xword 0x6f52417cf4746690
	.xword 0xd0b023c92fd4d0d4
	.xword 0x19ded4277952d55e
	.xword 0x2079ec5a09f386a0
	.xword 0x346bdd5e84b64572
	.xword 0x2670ca8258c15370
	.xword 0x9256d49167036df0
	.xword 0xeba866ff73a0e540
	.xword 0x3f1ced8c8b2634b2
	.xword 0xb6e7a130027438fd
	.xword 0x8e9b456577b0300c
	.xword 0x4c3299e9c2cf1c35
	.xword 0x5a3183b0efc420ea
	.xword 0x66ff6906c6715deb
	.xword 0x2640678b5521714b
	.xword 0xe35535e4c5ec3c1f
	.xword 0x769484750aa3e173
	.xword 0x563d1118d44ed73e
	.xword 0x11434eacdf9fe7b5
	.xword 0xdc15bf226450e992
	.xword 0xefcca5328cfb0e91
	.xword 0x1dcdb5339058455e
	.xword 0x9da05958b5b24a99
	.xword 0x0c4a186d4af92748
	.xword 0x8fdd8ae8db9cfdef
	.xword 0x7fb69095a0239624
	.xword 0x618d5de32ee8ded1
	.xword 0xa405cc28ffc1a939
	.xword 0x0d8f9830983a09b0
	.xword 0x7b125606e207698a
	.xword 0xc0e23a9845e99e33
	.xword 0x9fb1aefcab52587e
	.xword 0x65693eb9d7c41767
	.xword 0x80553a0c19b6e64c
	.xword 0x38aee249c1e22073
	.xword 0x658d6e30b4673ac4
	.xword 0x9788ec09f5e97c84
	.xword 0xe9a85dfffc130d75
	.xword 0x62168f670b41ffb4
	.xword 0xa4f159678e4efa3e
	.xword 0xcc11419a143cba77
	.xword 0xf2ac3642a0716bec
	.xword 0x11035208b0ee9094
	.xword 0x79b68070074d7a4d
	.xword 0x6b14a762efd8e5c2
	.xword 0x8d622c15376f26a1
	.xword 0x3bc250bdede0d5b7
	.xword 0xf7d6a38383d7e414
	.xword 0x44b7aec6fca5d284
	.xword 0x87c2aa7c7848e233
	.xword 0x7e1d134a92c8597d
	.xword 0x50d25899f631c4af
	.xword 0x3380bd85f5ce92d1
	.xword 0x93de8daafe1bcdb6
	.xword 0x6ea7f0dfc657631a
	.xword 0x58d5dcff8c72059e
	.xword 0xdde2e138df5eac37
	.xword 0x9289ce8c92185eee
	.xword 0xf1b19380a13e41bd
	.xword 0xb6a3a4c0d0a4b038
	.xword 0xc0dc14556a3d1678
	.xword 0x882b38b0b0f54f76
	.xword 0x8810d4da8db29699
	.xword 0x3d4daa51a244086c
	.xword 0x971dff796d18490d
	.xword 0xae0641f59bbb086f
	.xword 0x3fc28be5b5900a9a
	.xword 0x5b8a997b32b3d3d1
	.xword 0x292220f2cc379045
	.xword 0x6b86acf3ffa97a8d
	.xword 0x6e3232ad04ca240b
	.xword 0xa6e3108403637d43
	.xword 0xed60b0f7766617bb
	.xword 0xe99c962cebdbcb58
	.xword 0xf928d9f10bdb7d00
	.xword 0x0a7430e03529d7b4
	.xword 0x8374796d9a151a25
	.xword 0xaf02a55b7c3c5874
	.xword 0x6299059c7e48ca1d
	.xword 0x06a3639d3c2e84c3
	.xword 0xa038e864bf3b2f00
	.xword 0x69ce321a0e199b3a
	.xword 0xcaffa2e096b7a9fb
	.xword 0xb170f2ccebb5fc60
	.xword 0xb57d3e3d4ec484dd
	.xword 0x26e7b0510d0c418c
	.xword 0x46f7767633b71556
	.xword 0xe9818ffcc82141d8
	.xword 0x37ede8cbc293cd80
	.xword 0x0cc870512fcae355
	.xword 0x3607fe25aaeaacc4
	.xword 0xd6e5ef8a752c61b2
	.xword 0xda8d19456abc363b
	.xword 0x8be1784524b7c782
	.xword 0x39fee7a894747240
	.xword 0xd0c8a83887a3577c
	.xword 0x209f6fca2aced6c9
	.xword 0x926a20825fef6c3c
	.xword 0x9ebfda17e9769a03
	.xword 0x1aae10ace76bd53b
	.xword 0x88c94681bd6ea5ce
	.xword 0x0cd93c9b3b5ed81c
	.xword 0x6d8b234be598536e
	.xword 0x6c55bff3b929c0f3
	.xword 0xac95d68ada33aed6
	.xword 0x12fc077c838eb15f
	.xword 0x8dbe2c92e73fe79f
	.xword 0xf63ad8943710079e
	.xword 0x976ecfce5405d11b
	.xword 0x473ff536e8febc1a
	.xword 0x44d4d50b1b43dc94
	.xword 0x93bb9b86fccc2dcf
	.xword 0xd7157f0597ecbed1
	.xword 0x08a6a9a10528f694
	.xword 0x700dcd4f39b9402e
	.xword 0x05c838e2574ef7d5
	.xword 0x6306fd023990b1f5
	.xword 0xb4220bff9b95d5b7
	.xword 0x4c456803522a0b9b
	.xword 0x38daac7e74aff4eb
	.xword 0xfa644685b3d20d9a
	.xword 0x9f8b2626837f0853
	.xword 0x87b9b64b2cfc22a7
	.xword 0xd863bc32d18f284c
	.xword 0x945929cfdb13239d
	.xword 0xe30815644c4623b1
	.xword 0x1324060954d6f9a2
	.xword 0x0267fbdfc7115b52
	.xword 0x228d38be1c1c3aea
	.xword 0xdee608427a2b7864
	.xword 0x0df1f1d2c0bc93aa
	.xword 0xcb1d169dac97cc46
	.xword 0xe590ff9030bb9752
	.xword 0xccab46fe202371ef
	.xword 0x9e6e8767c35a3fd0
	.xword 0x962fc8aa60f23e00
	.xword 0x54e029d272ec94f0
	.xword 0x70dd91d2566de8ad
	.xword 0xf3a9f65b89160da3
	.xword 0x4fd8241404f4eab2
	.xword 0xa784eafb7f9baef4
	.xword 0xf140a428e81aba7d
	.xword 0x1a5282ad093f4e77
	.xword 0x86d257fd7703f98a
	.xword 0xedd8d29a2f131f02
	.xword 0x4c982a94088f9942
	.xword 0x0139853dab9c4b83
	.xword 0x4bb1b67fd9a61290
	.xword 0x0c4552e7daa511b7
	.xword 0x3c8e0ddb700c9370
	.xword 0xc2373b9897c5bae0
	.xword 0x1deafd9d246e292e
	.xword 0xa9b9c37fd5b30137
	.xword 0x30a6f7fb1a46c2e7
	.xword 0xe76fb18bfded8259
	.xword 0x6b907934db2e155e
	.xword 0x3889ba3b3b8da9f7
	.xword 0x03265f697ca08d14
	.xword 0x610b8c00262816d3
	.xword 0xf4df60bd591c1bfd
	.xword 0xe315ed455c24b31e
	.xword 0x46466940e34056f9
	.xword 0x643b28f764e73c02
	.xword 0x36603a41a832437c
_t1_rc4_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_rc4_auth_key:
	.xword 0xe23299a37484cc0e
	.xword 0xdcfa313f18a6ab23
	.xword 0x5f48300ef0f8fc04
	.xword 0x0b3a881652e8afea
	.xword 0x6fa4c21a5561bec0
	.xword 0xd0172d2e6350a324
	.xword 0x0a30304450b403f0
	.xword 0x060be66c977c5643
	.xword 0x4f16eca9d5cc53c7
	.xword 0x9e52fa51d3126d25
	.xword 0xb2f05ab4ef1e2a2a
	.xword 0xf030aff89fd7b3ff
	.xword 0x02ad2c1c5651e9f0
	.xword 0x56b74178514836cc
	.xword 0x7947dc51f2a05e0a
	.xword 0x32e203d6c1e06567
	.xword 0x5c336a11c140cb78
	.xword 0x3988243593e1575d
	.xword 0xbadae3700908f7e4
	.xword 0x8033028b0510b7b4
	.xword 0x990b238aafbe2f8c
	.xword 0x948e50ee8e9aac2d
	.xword 0x4c857fec410d0656
	.xword 0x5861910327f99ea4
	.xword 0x1c63f4be88f41324
	.xword 0x2dc3dd045d3673cf
	.xword 0x7a247651475fc73d
	.xword 0x5b4ed42b6073fdc1
	.xword 0x3e13741b70ee371e
	.xword 0x2b207770f527b81c
	.xword 0x43e395aee2b8fce1
	.xword 0xfac25bbf4b8a0af0
	.xword 0xe8c177a765a58737
	.xword 0xded550b61f894513
	.xword 0x3f83064aa4aee69a
	.xword 0x7aef4363405e619b
	.xword 0xfb2d08b652045d78
	.xword 0xa93b0de44f445199
	.xword 0x69bd77d51437f068
	.xword 0xcd6f8719abaf56e3
	.xword 0xec964bb7e635e3aa
	.xword 0x0722a72266010212
	.xword 0x60090947746397c7
	.xword 0x370cd6e432d54eba
	.xword 0xf9b2c996f79aff87
	.xword 0x2974a32339294484
	.xword 0x1f012dc3fbe1f313
	.xword 0xaf9efab584aa1f12
	.xword 0x5ced4dd615e4501f
	.xword 0x6882c0ff1570102e
	.xword 0x240b90fcfe5fba31
	.xword 0xd12ecb1042c2a23b
	.xword 0x0a4b5134bc7bf0e1
	.xword 0x39228a03d0c86ac2
	.xword 0x01d522bd87678cca
	.xword 0xa600af40309df90f
	.xword 0x5338bc0c994d3715
	.xword 0x1467c0ca06119a6e
_t1_rc4_auth_iv:
	.xword 0xe3db1e1ae7dd3f0a
	.xword 0x87535a9fb234ac29
	.xword 0xb820ac3b224d3b5c
	.xword 0x5682c28573774f62
	.xword 0xa7f64a45ff62c11c
	.xword 0xcc0f4af5b0f16417
	.xword 0x7b2df58717c5613b
	.xword 0x8fe5526206cb55a2
	.xword 0x0389d37a5376602b
	.xword 0x5e27d3673253cbc2
	.xword 0x5fee4022acc403c9
	.xword 0x1e8d96c07cf18956
	.xword 0x1e3c0aa3bd06a662
	.xword 0xd36b370d9d45fa67
	.xword 0xeec6e5f9f3242145
	.xword 0x5a1c65a2c906c84c
	.xword 0x02b6473b18b6397e
	.xword 0xe47b41bb00830064
	.xword 0x1013e1e035cc9c7d
	.xword 0x314a2c41d6fdc5d4
	.xword 0x03d9e809609808cf
	.xword 0x1ee9b70d6cda03a5
	.xword 0x90f052db0ce3839c
	.xword 0x6552d295218b3fef
	.xword 0xb4279d66b5196632
	.xword 0x23c05efaef9618e1
	.xword 0x80639059ecedfb0a
	.xword 0xbb06aad8c3bc5ebb
	.xword 0x7caa595076d63015
	.xword 0x19899f6eb422cf03
	.xword 0xe48aa75c44202015
	.xword 0x7939f5edb24411a8
	.xword 0xd40b310722c22d3b
	.xword 0xa50453272d4de2db
	.xword 0x2e9e9a50ab4396bb
	.xword 0x9a70d620978c4dbe
	.xword 0xb017b68478e993ea
	.xword 0xc362127973b7382d
	.xword 0x4714ffbe323e9e09
	.xword 0xed2b41d905b6f985
	.xword 0x4a4879496fae44f7
	.xword 0x2d30afd7088dfa1b
	.xword 0x775ecc77c7c8cc28
	.xword 0x3cb79bd2560244d3
	.xword 0xb12eb2d867b9b6e8
	.xword 0x75824bbc44082f6e
	.xword 0x21086d95188984cd
	.xword 0x891d667766800d66
	.xword 0x16e4c64c39c5bcbb
	.xword 0xa012e86144d7b0e3
	.xword 0xf0f66ecfd55d1c91
	.xword 0x33610c60207ee0cf
	.xword 0x318478e65451670c
	.xword 0x63a8fb98d7bf2f68
	.xword 0xd0bffc72b15cfa46
	.xword 0x364e41e167129597
	.xword 0x69ce91cafa577018
	.xword 0x56e893bfd4bf4fc2
_t1_rc4_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_sslkey_key_array:
	.xword 0xcbc4e547f2f756ef
	.xword 0xa82da0ce77ebed0d
	.xword 0xbaf6b350c8893ccd
	.xword 0xe406abf1de8576b4
	.xword 0xa6aa5d9b8f947b9e
	.xword 0x43ecd001ff5f1ded
	.xword 0xcb030165326969a9
	.xword 0x212f0397e0d47629
	.xword 0x6f1f2a0fe1f053d7
	.xword 0x466be5b60d3080da
	.xword 0x4174931983b7654f
	.xword 0xf7096d4f603cfa1b
	.xword 0xd9af2e6ba82f0a80
	.xword 0x5837785abd499b55
	.xword 0x57cdadb46bd04d4f
	.xword 0x8e3ece06d0e68fc7
	.xword 0x3b287d570a2259ec
	.xword 0xcc2fd5722fa9a1f8
	.xword 0x13da89fdc3176fe2
	.xword 0xb30b5b13fe0cdaa0
	.xword 0x8b24224c33421694
	.xword 0x1c606f797c15679e
	.xword 0x9d5d877db3e6ab1b
	.xword 0x4112136c3f019ffb
	.xword 0x8b5c34a0adda5c1f
	.xword 0xddcf8f407058cf6e
	.xword 0xcfbfd7ffb360f39d
	.xword 0x90740d7b147dcee7
	.xword 0xb6fc454d37e833f3
	.xword 0x471929401e63d232
	.xword 0x2b4763bf894a097e
	.xword 0xb158df35c713f4d3
	.xword 0x284c1a7b8795ffbf
	.xword 0xc6cb3b28aa412191
	.xword 0x4f0802f00af7b141
	.xword 0x6fdadf56169cc7ba
	.xword 0x8dba54ed569bd6fb
	.xword 0x333b96f7d391eb11
	.xword 0xe68ad569eee4bb13
	.xword 0x9e890b4f8ffdebb8
	.xword 0xb47fa8aea4d69152
	.xword 0xfacdd2183d4db984
	.xword 0x88480b0f620b44bb
	.xword 0xf557bb9b81154cdc
	.xword 0xb7bc231fadb1a54c
	.xword 0x3f0accbf32e08119
	.xword 0xfc55797d53887bf6
	.xword 0x6cff7dd4edc988bb
	.xword 0x1497a846da05d997
	.xword 0xc6d76c8328732776
	.xword 0xa71da9c9cca3967a
	.xword 0xc6517fcbb1f64324
	.xword 0x91c9b3bc62964054
	.xword 0x7c1747087e81bae1
	.xword 0xc85dcc4ca65644d6
	.xword 0x1f58b3dd04e9f2c2
	.xword 0xf1843c18c75c20d3
	.xword 0xc7d596a37e5f74aa
	.xword 0xf0f173a24b20d1e5
	.xword 0xd3b192ecbe19aaa6
	.xword 0x4da5ab4440013955
	.xword 0xd97757749e7706df
	.xword 0x35d7e4702b9ab67a
	.xword 0x576be0e1bf1bbc60
	.xword 0x441a324507cb44f0
	.xword 0xa1c98faf4e173f41
	.xword 0x8fbdff56e6fefa5b
	.xword 0xfff6aa2c44d33aa9
	.xword 0xc07c85d05a0c9a84
	.xword 0x65105820de036ca8
	.xword 0xb9cf233e6b8ceed1
	.xword 0x7dc6e753e1b6fdd4
	.xword 0x46bba915572712d7
	.xword 0x89ef1bd866832983
	.xword 0xde88109d4f15d8fe
	.xword 0xe8c84ee3856f3e31
	.xword 0x35e8b1274bd8ebb2
	.xword 0xe593f2eaa03bf271
	.xword 0x09c2721e891a32d1
	.xword 0xd32f4884aa5eae80
	.xword 0x5e0e345c769dc30c
	.xword 0x011e888f06050de3
	.xword 0xf6fdce9d6ee67c45
	.xword 0x70e606af8ffaf474
	.xword 0x5113e9652a75d18a
	.xword 0xf04dfb9b1e1308c4
_t1_sslkey_iv_array:
	.xword 0xfab500e3b1cc09aa
	.xword 0xbbc4a6b8e4957009
	.xword 0x33d78efc5a78f9ce
	.xword 0x3c74710759e52233
	.xword 0x257fa0b91728ab5d
	.xword 0xcbfe34f0d19fd5e3
	.xword 0x3a9681df6539674f
	.xword 0xb487447ff44c650a
	.xword 0x4288f6513e7207b2
	.xword 0x2456e59eb5b4de90
	.xword 0xcd7b4d9f501f2ef3
	.xword 0x503c9825c6bb4473
	.xword 0xe791e0a889b8acfd
	.xword 0x0e92cf51606bf7b9
	.xword 0x98114f37f6cc79ab
	.xword 0xcaf4403cf7e85774
	.xword 0x3a4e8060174b6ebd
	.xword 0x73e9c8ce4ef9152f
	.xword 0xd9fbef4569ecbce1
	.xword 0xffbade8b5896ea50
	.xword 0xc0e5d78d315a422f
	.xword 0x86a6abf1321576e4
	.xword 0xcb0fd90df337894f
	.xword 0x611f369dfbdd9514
	.xword 0x9aa5534f81d7aec9
	.xword 0x38977e09e234802a
	.xword 0x360b216777cd6b23
	.xword 0xd8893b9b14b7093a
	.xword 0x73e0e7510649745b
	.xword 0x1dfa855d1c250f42
	.xword 0x9cb8e38586f442df
	.xword 0xa0a159771c7a1f78
	.xword 0x9f64a815f5c7a10b
	.xword 0xfc2621770cfd00b3
	.xword 0x53c2334b0bc7b2a2
	.xword 0x5d51f856985bfafb
	.xword 0x0722e872a60dd507
	.xword 0x7155725c3004ce45
	.xword 0x1b2fe63b97505928
	.xword 0xa983ba3260c6203a
	.xword 0x46f54a3e33243834
	.xword 0xa9701cc3a6776225
	.xword 0x5c3de20bb0ea98fa
	.xword 0x6bac5bc76095ae21
	.xword 0xa37b1326ae813d4a
	.xword 0x363395398292f041
	.xword 0xa025fdde08471d5f
	.xword 0xf821bc7c8da5eb72
	.xword 0x3bd61d777f56f0ad
	.xword 0xa7322c2b55225cef
	.xword 0x99fb831242ef019d
	.xword 0x4880a785436d3771
	.xword 0x283808a79c8c8743
	.xword 0x0f57562675d7d657
	.xword 0x9af7c5c5f416855f
	.xword 0x447cbeabcd941675
	.xword 0xf80856b5afb13eac
	.xword 0x90ed836a0857b3b1
	.xword 0xbcee110364b32edf
	.xword 0x95d6b86c085aef01
	.xword 0x285e9925ef5c60d8
	.xword 0x03c877dfdb678d82
	.xword 0x185f0d63b9e527e1
	.xword 0x99d9a320ac3b62f5
	.xword 0x4841925c2e448355
	.xword 0x31fbaf0f93c3027b
	.xword 0xc008d428ec4be79b
	.xword 0xd1e2df511afd5009
	.xword 0x5fbf9c5301643080
	.xword 0x0af3df379d4e34f2
	.xword 0x2d17570b33c1af37
	.xword 0x7d6b6879988bd2ef
	.xword 0x10b0642bc0e371b6
	.xword 0x46b9a546f2cd3ef8
	.xword 0x87be07cd8f89adf4
	.xword 0x479418590a7b9f17
	.xword 0x49bd1be7a1f74f37
	.xword 0x8c40c9278b8d9e17
	.xword 0x90d9a4a096390ca0
	.xword 0x62c570bda8d61f77
	.xword 0x7fa5da1705a1c308
	.xword 0x9d5757f3138be443
	.xword 0x7521bf07c27549a6
	.xword 0x195a9eba3851a2e3
	.xword 0x55160d5f901c038f
	.xword 0x0437fa79ed0c4731
	.xword 0x50ffc799af70d878
	.xword 0x6fd7b4ae50d81e49
	.xword 0x96bc86cf6d109213
	.xword 0xfa2181a948d9944b
	.xword 0xc396b8a5828e94a7
	.xword 0xfcb6a2c01187a1aa
	.xword 0x7805def72d9d06a6
	.xword 0x73979ef87d3cd759
	.xword 0x187e0802bd028fd1
	.xword 0xc03d6bef224538e1
	.xword 0x734cd5e6a7aeff15
	.xword 0xa12e13a726562dc3
	.xword 0xccfbb5008cf745e9
	.xword 0xe51c93ca250bd5ce
	.xword 0xae2ac297497884f5
	.xword 0xf0c8f3bcca4ee6c4
	.xword 0x059cca3db71e9124
	.xword 0xd7ee7d987756c66e
	.xword 0xb896e42b957c75ad
	.xword 0xfbca13ecb0391382
	.xword 0x69c9a634db6ebb1f
	.xword 0xb128bd0c146513b6
	.xword 0xd3e7ebc98dd6dc05
	.xword 0xd665e56af86ea317
	.xword 0xdeca5f56ce69a000
	.xword 0x8ffd11b8bef098ce
	.xword 0xfcbf2a4eb4d46d33
	.xword 0x31b26b439435a888
	.xword 0xe51a759089b4fd22
	.xword 0x1ae8ab90df7801bc
	.xword 0xae877719d239d5ba
	.xword 0xa3dc3a85b25d72f7
	.xword 0x2f68f052dd255589
	.xword 0x9ce2e3d5a5b25d5f
	.xword 0x8219906a3b66b79d
	.xword 0x15e9a4e090b552d6
	.xword 0x73e2a21f7b3293a8
	.xword 0x9c1adfef9d9dc77e
	.xword 0xbdee8bfdfae31707
	.xword 0xb7f274d83fa8394f
	.xword 0xda6337434a8209eb
	.xword 0x9c9948588b181569
	.xword 0xeffc45c6389bee1d
	.xword 0x06aae886fe932dfd
	.xword 0xba94ebeaf8085d48
	.xword 0xc7cee5e148303ccb
	.xword 0xf315369da15852c7
	.xword 0xa174edf36853e4ae
	.xword 0xae448ce7e305d972
	.xword 0x4e870575eb4835a9
	.xword 0x575ffc8cfb90f245
	.xword 0x2a5c44faf3ab65f9
	.xword 0xbff0879f786aae08
	.xword 0x881e6f3c1efec68d
	.xword 0x7b0c5054af2a241a
	.xword 0x2f3ae25dab145d61
	.xword 0x2a61ca33e80ef14b
	.xword 0x97161eb7aa15f7f7
	.xword 0xf34f377bb10ca347
	.xword 0xff251dfcc2259ec4
	.xword 0x02a4e09a173f40ac
	.xword 0x770c09fbae8024ec
	.xword 0x8ce7a91c63a09d3b
	.xword 0x796250a6a7f21535
_t1_sslkey_alignment_array:
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
	.xword 0
_t1_sslkey_src:
	.xword 0x36f869a535ab0429
	.xword 0xb48232fccba016c5
	.xword 0x9dd11ca812af25db
	.xword 0x6476f7eb07c1a756
	.xword 0x32120b4e9f1483eb
	.xword 0xb67b28554c4720cc
	.xword 0xa24f4e0d1197b82c
	.xword 0xf6774c3bbd3ed73d
	.xword 0xee0a031ea42a6f03
	.xword 0x0411ca00bd97a17d
	.xword 0x253646102d0406bd
	.xword 0x1a0e7a5bf28b50d3
	.xword 0x177746c30ee56471
	.xword 0xf3a42d749b554aca
	.xword 0x8893292f4b3248b9
	.xword 0x79f2ff444ca4c34a
	.xword 0xe9eb9427eae843a6
	.xword 0x2ff5a0a66ac95dcc
	.xword 0x03d1aaf6d2f993fc
	.xword 0x904fb0e8b03dfd7a
	.xword 0x94e8e2e9cf389d77
	.xword 0x40b6ee68df5735a8
	.xword 0xe71b6911e85c13c5
	.xword 0xe3b48a1e4dafb8b3
	.xword 0x0d9d80c2bf351f37
	.xword 0xc4e49a1c6d0461ba
	.xword 0x40061582ae96f011
	.xword 0xf93e6fe43035e062
	.xword 0x5f2e37e3b05d3839
	.xword 0x1d69d1765265129b
	.xword 0x7d529239760d00ff
	.xword 0xcb1587d9b5f415c6
	.xword 0x5c797b30ff7ccb11
	.xword 0x900927c597f51447
	.xword 0x868ca59df9e6db6f
	.xword 0xabadc2fd09126468
	.xword 0xd5c391a26da6827b
	.xword 0x894032400d8d95f8
	.xword 0x7e22477c9a00d038
	.xword 0x98fb7b3519f64002
	.xword 0x22c9b03e685daf5b
	.xword 0x7a7c1820813b0caa
	.xword 0xba83b90d7603f7ad
	.xword 0xa21a587ad05aa08d
	.xword 0x907b80d1892eba42
	.xword 0x24bc188441d2d214
	.xword 0xa98a1a7b4fe1e049
	.xword 0xadc08abeb66a6e30
	.xword 0x7fe5bf3f75ab130d
	.xword 0xd56f05bd22c38e9e
	.xword 0xa8830e14c0550b6b
	.xword 0x7b724fb22496d42d
	.xword 0x8c010a975dd05e25
	.xword 0x3cc773668c88c19f
	.xword 0x7b45b01441f950d4
	.xword 0x0ca61a354a08d071
	.xword 0x33c232b8065bac83
	.xword 0x102c2825b028a1ad
	.xword 0xe705d0b514703b82
	.xword 0x5795d380b14928a7
	.xword 0xeb0ff8d8bf81fba4
	.xword 0xaf6d7b4c10108d21
	.xword 0x93d46f9684955773
	.xword 0x0e7a1e06a39fd01c
	.xword 0x97f40aaf6e388a31
	.xword 0xdd412b6774f7c2cf
	.xword 0x62d81af148e350ff
	.xword 0x53db47ec03314a5e
	.xword 0xd0b65f1ff32f1088
	.xword 0xeaf508619247787b
	.xword 0xde092e46a2091716
	.xword 0x8bc233ac1d9dff16
	.xword 0xd6d283923cc40f43
	.xword 0x7188d2a079f36d54
	.xword 0x76518179b428a5fb
	.xword 0x7a357005bb831b2b
	.xword 0x89015ccead0135e9
	.xword 0x71447b06d4f4c398
	.xword 0xfe1bd0c3ec56d3f9
	.xword 0x8ec90064105598e4
	.xword 0xa3c0e3d6dde8d7c3
	.xword 0x95e39b9422c124db
	.xword 0x6e7498c36df8f610
	.xword 0x2af07214ea55c24c
	.xword 0x8ce0ea592a511b62
	.xword 0x711331971f281f27
	.xword 0xa5871b709bacff79
	.xword 0xf5cbe5e6f3f793b2
	.xword 0x1058dfa6486e5039
	.xword 0xcea34a04a5a7933f
	.xword 0x2e37834507b89838
	.xword 0xace31b9db26563fa
	.xword 0xfef7aa48955f719d
	.xword 0xfc7f8f5790185d41
	.xword 0x0dfc7b7f7b1911f1
	.xword 0x7506bc169d8a6d73
	.xword 0xec28438463178f8c
	.xword 0x8e71c86df0723643
	.xword 0x67e337143fa27a96
	.xword 0xd5a5822428a70d05
	.xword 0xa7d8736cd0628c9b
	.xword 0x126fa4629bd59786
	.xword 0x5a31ab84c48d5c10
	.xword 0xfdeda226000ecf99
	.xword 0x0bb5c8e4518dfb17
	.xword 0x03d9c639cfa2323a
	.xword 0xac181dc6166c9e6c
	.xword 0x4209906369b1c230
	.xword 0x975dc543ee0a96d2
	.xword 0x9a3bec61ea993a7f
	.xword 0xb2888184caee541c
	.xword 0x9103ef7d239a62d0
	.xword 0x28d40ec339a6935d
	.xword 0x804be00118233616
	.xword 0xe3d014ecbe8a6132
	.xword 0x3044fbbc579c0dd8
	.xword 0x6ce8694f418a879e
	.xword 0x9666cf7f66d099f7
	.xword 0x9e7954bd2d383721
	.xword 0x3280e41f7b241a38
	.xword 0x0c75ae91e7d941e2
	.xword 0x43a6fffd4850ea43
	.xword 0xaa4f79096f10bf48
	.xword 0x8cfc2659b792be02
	.xword 0x531cf4a426ee8b16
	.xword 0xfed03f412d75a17c
	.xword 0x7e5cfd8c39e24b21
	.xword 0x73065510c18b508e
	.xword 0xdaee2a80e18947f7
	.xword 0x415419ce976cf6e0
	.xword 0x546194f516e09302
	.xword 0xe93e4959c971bb21
	.xword 0x3a67b44eb18e06ed
	.xword 0x559716467d0498ff
	.xword 0x9ecc2f413bc8c624
	.xword 0x2498eea9b93f7fab
	.xword 0x6641c58aab8f3a3a
	.xword 0xc9242404792b7e10
	.xword 0x9875a97b35735d38
	.xword 0xa6c2295b4e9ecd10
	.xword 0x5edb831db79d3fb1
	.xword 0x69980e2f42993267
	.xword 0x0442e55a168e0d90
	.xword 0x5f7eaabd477d0340
	.xword 0xd89e0ab6b2a43042
	.xword 0xdaeb87e6ab0496b6
	.xword 0x3ff601020eb5effe
	.xword 0x26c40fbe204dd159
	.xword 0x742a467a5376ed6e
	.xword 0x41f8e1731c9f8ad5
	.xword 0xa653a28c0a2971d3
	.xword 0xaff5aaf4b12c2362
	.xword 0x690c50e26538a6be
	.xword 0xac4d8cc7978350b0
	.xword 0x09db692cc891d8af
	.xword 0xaa2c64987c14abdb
	.xword 0x483e74dc033cfa2b
	.xword 0xf0c7df1c35da578c
	.xword 0x749b6694e31a1b0c
	.xword 0x84978617e84b7a30
	.xword 0x5d8b956ca9563278
	.xword 0x53552d2522121e0f
	.xword 0x8c76ee76944aa685
	.xword 0x93d0757d524f36ac
	.xword 0xf5d59dfc33323b4e
	.xword 0x5563f8d006f5a09f
	.xword 0x63e5a297c27788bf
	.xword 0x3bf94e1b78d36b3c
	.xword 0x113ffdc81409281c
	.xword 0x0393abd336fb8f85
	.xword 0x5abded52afa255ce
	.xword 0x1d0c1f991f8b168d
	.xword 0x5cae9e05934c4cf1
	.xword 0x3319d0610db75bf2
	.xword 0x2883c2c4ee7af3b1
	.xword 0x3f9bbffa008b67f9
	.xword 0x414ffcf9a0321235
	.xword 0x295778b6d5120440
	.xword 0x2b956a741e5b22d5
	.xword 0xca205aaf623e5a03
	.xword 0xb9280bc5346b760a
	.xword 0x63df1820415ffb61
	.xword 0xc7f27314b4363100
	.xword 0xec44f15fa57e40b9
	.xword 0xa591f9515ff0f24c
	.xword 0x507c46d156cb080c
	.xword 0xb3d043c7a0ef5493
	.xword 0xabd028e72fa72de4
	.xword 0x36faf1af3b0b6d74
	.xword 0x97cfc60701f462bc
	.xword 0xb1105bdc13591997
	.xword 0x83ec3e509fb916cf
	.xword 0xdd541cb015c58f32
	.xword 0x97bd0b9822f0abc4
	.xword 0xad7dac694a8e42f9
	.xword 0x3137c0f543402bd8
	.xword 0xbb9fdf3323b5391c
	.xword 0x9a442796167b0d01
	.xword 0x853bf62afc52010e
	.xword 0xf1a62814d170549b
	.xword 0x17cc67b33f93bfde
	.xword 0xb89ee3766a0f1810
	.xword 0xb9d8b8e45ddd87d3
	.xword 0x65aa9fe03b0775a2
	.xword 0xed494bfff9a3e1be
	.xword 0x96b8757a155785dd
	.xword 0x5d7497cecc47351d
	.xword 0x5c2a9053ac8397b0
	.xword 0x4481cfcfab9588ea
	.xword 0x2d5262f5afc50c97
	.xword 0x111b0028b1ef96e6
	.xword 0x308ea71456ed9d17
	.xword 0x2e6440d734559389
	.xword 0x853a58f3d53c7860
	.xword 0x3e02b180d7da9946
	.xword 0x3e6064df7aecec29
	.xword 0x089fc67cc6618801
	.xword 0xa1631cdc88dad5ce
	.xword 0x3d3b7c8317ff9353
	.xword 0xe9b6a28ae581feb3
	.xword 0x81f6ff720e679e06
	.xword 0xd77ecf2e24164342
	.xword 0xb4abd103bebd8b09
	.xword 0xe5e86588c028c790
	.xword 0x4c1d933a2497bbb5
	.xword 0x7839b88ae60c2f10
	.xword 0xefaa1edb32166073
	.xword 0xea80753a7a678b6f
	.xword 0xa63518289561820b
	.xword 0x20b5c1031fa29ce7
	.xword 0x6256473e715475d0
	.xword 0xef552ee757653a0c
	.xword 0x3045874132df7031
	.xword 0xbeb981a07cb3ef69
	.xword 0x16de26a733a55863
	.xword 0xe332b7195a7c936d
	.xword 0x1da6499afe436372
	.xword 0xa4f7697ebb8e56f1
	.xword 0xf8d4bb557d983b3b
	.xword 0x47db23545d4eb681
	.xword 0x98cd5a56263da949
	.xword 0xe77b6ca10233fd88
	.xword 0xabee709b10f6caf6
	.xword 0xe3c377eec2ed2213
	.xword 0x7cabef74daa6239b
	.xword 0xe671742ac446a7fb
	.xword 0x5339e8fd58688afd
	.xword 0xdbbd397f3f2f01f2
	.xword 0x29dc3cbae55302fc
	.xword 0xdc99c0cb9a6845a8
	.xword 0x4fd8078f869528e0
	.xword 0x91fdd86046f4e984
	.xword 0x211f5e3aeede804f
	.xword 0x81d4bd083702758a
	.xword 0x79205bdacdbbfe8a
	.xword 0x0ceb08e3547f7c8c
	.xword 0x836de538febe5fca
	.xword 0xbd40dbb849953613
	.xword 0x6353c4e6366c9349
	.xword 0x3a109cafd965dd1a
	.xword 0xe489593360a871f7
	.xword 0x9f924644f0d0373e
	.xword 0xd573c12119c4530d
	.xword 0x80ff7b8ba44207c7
	.xword 0xff0e3af6c25e152f
	.xword 0x963c9d14ae7453f2
	.xword 0xef89c92593da6a8d
	.xword 0x37af76b9f46f3b85
	.xword 0x943c546ef2f38adc
	.xword 0x89c3acda70d2df8a
	.xword 0x5d91e9959afecea3
	.xword 0xadce258fce40316f
	.xword 0x61ec2c950ae26e1f
	.xword 0xa85964b9696ee714
	.xword 0x7e4544618daa4947
	.xword 0x1786e4ef78a6b493
	.xword 0x80d636ee83254d9b
	.xword 0x4451503b3091c388
	.xword 0xf3ee569564c36e51
	.xword 0x61e7a362b578bc40
	.xword 0x041217221e831d16
	.xword 0x3aa1aafdcfab539b
	.xword 0x33ca878fdd4169af
	.xword 0x42aa661fd234e1d0
	.xword 0xd3a8c4b81dbce6d1
	.xword 0x263189b1613e3e19
	.xword 0x2ed82914251095b9
	.xword 0x94c97fa69c1e80ee
	.xword 0xfb2a0903a40a62b0
	.xword 0x68992cb5936bac21
	.xword 0xc55db2d004ddc99e
	.xword 0x9ed83d083e890af4
	.xword 0xf93472af53c5da12
	.xword 0x23f23f7bc806a981
	.xword 0xfc67a1fc28d982b5
	.xword 0x171eb13a4fb8ca3c
	.xword 0x151f64008872439a
	.xword 0x88bd758a7d3429a5
	.xword 0x8636bc403da0971c
	.xword 0x4dc7eed33a5bd085
	.xword 0x76d835c3d8adfce6
	.xword 0x1b435d20d0f4d302
	.xword 0xacc5ad9ca270fc9a
	.xword 0xa12cbcf517582faf
	.xword 0xb0cde5cdfdd2abfd
	.xword 0x87d35f5d9a755b07
	.xword 0x195808ecbcdda00e
	.xword 0xe1bfdd2c5d7fcccd
	.xword 0xd52c154c745cfa38
	.xword 0x822d74b78e7c4f37
_t1_sslkey_dest:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_sslkey_auth_key:
	.xword 0xaba5a43a6954d6c7
	.xword 0x7bbd9850864dc181
	.xword 0x1a25259842ae1e8f
	.xword 0x5c34ce3fc0f139b7
	.xword 0x5ae922dc5ebdd236
	.xword 0x0f368e78accf3905
	.xword 0x4e0164a77f3f1f0e
	.xword 0xaa5343bc3def21d6
	.xword 0xd6ef14aa540ecd17
	.xword 0xb268d3e009a0dad5
	.xword 0xde45f4702e8146d7
	.xword 0xc19a3b03729670f8
	.xword 0xc283af0f24313a22
	.xword 0x11b62b8b94ccb5da
	.xword 0x8694f9ba8c6fc13e
	.xword 0x31701f8f56827425
	.xword 0xd25a1a2417802917
	.xword 0x2642ef91fc5d9360
	.xword 0x962d2779518c5f31
	.xword 0x68dafedeba1ca0a8
	.xword 0x9dbd4c8423811f72
	.xword 0x09f88ed71da91aef
	.xword 0xd7dfc8cdaeaa4a73
	.xword 0xfb8a328db51edb09
	.xword 0x4511d97abc2e1307
	.xword 0x4696a6d99302ad4b
	.xword 0xc1cc766d776ad2fc
	.xword 0x1f020997bac0d60f
	.xword 0x11e836dbd528c187
	.xword 0xc65273f4bfc0cf20
	.xword 0xc56a20251349f300
	.xword 0x5e3c94f629eb3e80
	.xword 0x2de6c1a0c2c9d919
	.xword 0x7dce1d561a148f45
	.xword 0xf998142a2d7f6b62
	.xword 0x99934177b03d56eb
	.xword 0x324180f7eec53e69
	.xword 0x1747b0fc33d58e76
	.xword 0x5e61e79491f60dec
	.xword 0xde024bef88c63ffe
	.xword 0xc03b72fa5243e6d4
	.xword 0xe7eaca868b78e13e
	.xword 0x7d8ab1ccbd4ed010
	.xword 0xa764858e10ce2f30
	.xword 0x35ffb8f7e5bc4544
	.xword 0xc8241f32ba0266d9
	.xword 0x09e628d62c557237
	.xword 0xbf32f5c4617d655c
	.xword 0xd5ce7329e68347ba
	.xword 0x2fb0b165d668a47f
	.xword 0x9a3ee4c9bdd78565
	.xword 0x9a63ee66bfd5945b
	.xword 0xb39d90d61eee763e
	.xword 0x48d60f7a931097e1
	.xword 0xa7972625fddda2e4
	.xword 0xabf766b22ab51883
	.xword 0xbc375388b3456f91
	.xword 0x34e375b69fb50884
_t1_sslkey_auth_iv:
	.xword 0xe86204e40d3c3f17
	.xword 0x4aef82be0eea0c59
	.xword 0xfcae66ea407915f7
	.xword 0xb8424b1d4d7cb608
	.xword 0x9584eaef21c9c39b
	.xword 0x3fb1745c59155fa0
	.xword 0x44795dfb20a0b822
	.xword 0xd735c413b4c0b899
	.xword 0x4471dd979f3f98b3
	.xword 0xdc7d3dfd0db5ac89
	.xword 0x16ed32679b333e10
	.xword 0x4dd31d330efbb667
	.xword 0x782eb613fea5dccd
	.xword 0x67c618ad2a9a546a
	.xword 0xb1943bc2a7dc35f4
	.xword 0x38ce328c6455a20a
	.xword 0xaadbfcc526669821
	.xword 0x8e7c16b557ddd471
	.xword 0x94a10bdb8d4c12a9
	.xword 0xcf6c06c66143793a
	.xword 0xf305cb6d2659b962
	.xword 0x8aa9933a73bff0ae
	.xword 0xc33dda10840e45e8
	.xword 0x3004860d04fef1a1
	.xword 0x68c30429dce5f534
	.xword 0x88e23a832a7896b4
	.xword 0xa544b258372ca37a
	.xword 0xe87d85ade108a28b
	.xword 0x637e5cba5f21779e
	.xword 0x9dc3bf441726b7c1
	.xword 0xee102303ab880050
	.xword 0xcb9f87976ac21d44
	.xword 0x2460cb956978e5ab
	.xword 0x4c41aa606eb5b90f
	.xword 0x68130a5e104ff053
	.xword 0x23fff90ce103dee1
	.xword 0xf372b3364aaccaf1
	.xword 0x75ce12d38b5b6c25
	.xword 0x016e0c447726e1f9
	.xword 0x5ff7fe92a636d2c9
	.xword 0xfa878be5949e52be
	.xword 0xd5f546ba542e057e
	.xword 0x15d1d82a015ec235
	.xword 0xbe43636a20c3c8e9
	.xword 0xa27c7dd2e7de5e59
	.xword 0x74f305c76119c13f
	.xword 0x9d1d84c5804324b6
	.xword 0xf417279d4d330c5f
	.xword 0xf06dee47ec3b522b
	.xword 0x33df27778ac68765
	.xword 0x91b115c9e2df35f5
	.xword 0xceee82641935f873
	.xword 0x8cdd7c0d2df00a29
	.xword 0xabe81f496a2a6b95
	.xword 0xb02986c386473304
	.xword 0x91e7fb33ed6197d8
	.xword 0x5ac8a7afeef71d37
	.xword 0xf927247a3a3990c0
_t1_sslkey_fas_result:
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
	.xword 0xDEADBEEFDEADBEEF
_t1_aes_toc:
	.xword _t1_aes_cwd_array
	.xword _t1_aes_src
	.xword _t1_aes_auth_key
	.xword _t1_aes_auth_iv
	.xword _t1_aes_fas_result
	.xword _t1_aes_key_array
	.xword _t1_aes_iv_array
	.xword _t1_aes_dest
	.xword _t1_aes_alignment_array
_t1_des_toc:
	.xword _t1_des_cwd_array
	.xword _t1_des_src
	.xword _t1_des_auth_key
	.xword _t1_des_auth_iv
	.xword _t1_des_fas_result
	.xword _t1_des_key_array
	.xword _t1_des_iv_array
	.xword _t1_des_dest
	.xword _t1_des_alignment_array
_t1_copy_toc:
	.xword _t1_copy_cwd_array
	.xword _t1_copy_src
	.xword _t1_copy_auth_key
	.xword _t1_copy_auth_iv
	.xword _t1_copy_fas_result
	.xword _t1_copy_key_array
	.xword _t1_copy_iv_array
	.xword _t1_copy_dest
	.xword _t1_copy_alignment_array
_t1_crc_toc:
	.xword _t1_crc_cwd_array
	.xword _t1_crc_src
	.xword _t1_crc_auth_key
	.xword _t1_crc_auth_iv
	.xword _t1_crc_fas_result
	.xword _t1_crc_key_array
	.xword _t1_crc_iv_array
	.xword _t1_crc_dest
	.xword _t1_crc_alignment_array
_t1_hash_toc:
	.xword _t1_hash_cwd_array
	.xword _t1_hash_src
	.xword _t1_hash_auth_key
	.xword _t1_hash_auth_iv
	.xword _t1_hash_fas_result
	.xword _t1_hash_key_array
	.xword _t1_hash_iv_array
	.xword _t1_hash_dest
	.xword _t1_hash_alignment_array
_t1_hmac_toc:
	.xword _t1_hmac_cwd_array
	.xword _t1_hmac_src
	.xword _t1_hmac_auth_key
	.xword _t1_hmac_auth_iv
	.xword _t1_hmac_fas_result
	.xword _t1_hmac_key_array
	.xword _t1_hmac_iv_array
	.xword _t1_hmac_dest
	.xword _t1_hmac_alignment_array
_t1_rc4_toc:
	.xword _t1_rc4_cwd_array
	.xword _t1_rc4_src
	.xword _t1_rc4_auth_key
	.xword _t1_rc4_auth_iv
	.xword _t1_rc4_fas_result
	.xword _t1_rc4_key_array
	.xword _t1_rc4_iv_array
	.xword _t1_rc4_dest
	.xword _t1_rc4_alignment_array
_t1_sslkey_toc:
	.xword _t1_sslkey_cwd_array
	.xword _t1_sslkey_src
	.xword _t1_sslkey_auth_key
	.xword _t1_sslkey_auth_iv
	.xword _t1_sslkey_fas_result
	.xword _t1_sslkey_key_array
	.xword _t1_sslkey_iv_array
	.xword _t1_sslkey_dest
	.xword _t1_sslkey_alignment_array
.global _t1_table_of_context
_t1_table_of_context:
	.xword _t1_aes_toc
	.xword _t1_des_toc
	.xword _t1_copy_toc
	.xword _t1_crc_toc
	.xword _t1_hash_toc
	.xword _t1_hmac_toc
	.xword _t1_rc4_toc
	.xword _t1_sslkey_toc

!# CWQ data area, set aside 512 CW's worth
!# 512*8*8 = 32KB
.align 32*1024
.global _t1_cwq_base
_t1_cwq_base:
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
	.xword 0xAAAAAAAAAAAAAAA
.align 32*1024
.global _t1_cwq_last
_t1_cwq_last:

.end

SECTION .T_MAX_DATA DATA_VA=0x8000
attr_data {
    Name = .T_MAX_DATA
    hypervisor
}
.data
_t2_user_data_start:
_t2_scratch_area:

.align 8
.global _t2_ma_operands
_t2_ma_operands:
.xword 0x972af7d503205810
.xword 0x53ec603265f413cc
.xword 0x9bba52a24fda40d7
.xword 0x1e0e3863ed9907a3
.xword 0x992c74fa8595bbd4
.xword 0xcfcdb1ae9621c1fd
.xword 0x1d1d56646f3d0c88
.xword 0x051773cf5913b7b9
.xword 0xbf6f5a3a32a106e7
.xword 0x808606bf424f09f1
.xword 0x01130d3d5413aa88
.xword 0x12f79354bc2a1bbd
.xword 0x9e7f239823323cc4
.xword 0x1e85762e18800469
.xword 0x46c6c6a864241f97
.xword 0xbcda21334920108f
.xword 0x166019543e6a806e
.xword 0xd9d72765f4af2d8a
.xword 0x51686bbaa731a56d
.xword 0xb764cffa12e9b789
.xword 0xc537c68386163b3f
.xword 0xc207b1bf28eff177
.xword 0xdb11c98754eb824e
.xword 0x9d200466dccf9db8
.xword 0x3109cbed79371447
.xword 0x578e211e86dee2f6
.xword 0x51a0ed0d15f8c26e
.xword 0x6346c4c05e52c504
.xword 0xbc4c607c16ac08da
.xword 0xd6fa2b3b63f9318e
.xword 0x9e21e471e5ed8af0
.xword 0x7765eb45eb6150a9
.xword 0x8c85cac09dd6d2a4
.xword 0x369633af26609b68
.xword 0x8a00478d5f2493f6
.xword 0xe419016c4b725c84
.xword 0x0612af8c9ea79d2c
.xword 0xf78aac8125a08248
.xword 0x3218604933cc0cb1
.xword 0x16306676a1e51712
.xword 0x2bf9c0b5943fb24c
.xword 0xf2b99c18cb2a8205
.xword 0xb6115b6ebda8c193
.xword 0x665ac0b97843d490
.xword 0xaf442797350e2d9a
.xword 0x34ce9551ae7726ee
.xword 0xd0b22aa6be27a14a
.xword 0xbfc84d44457b7901
.xword 0x963cc189d941a7a2
.xword 0x94088439ac57da48
.xword 0x3e36e60100a7ca52
.xword 0x2319a63b87f0121b
.xword 0xd48fb06d0d542e9f
.xword 0x75d13223626086f7
.xword 0x5026f3c0570aeee3
.xword 0xe498adfb7f4ff489
.xword 0x6970fa3ae9bb6eac
.xword 0x43b39275bbe744a2
.xword 0x59c5568836c6ce69
.xword 0x2e6d9538cecc7dfc
.xword 0x17b7047fac2441c6
.xword 0x7385047e650c3d79
.xword 0x7b60d9adef794639
.xword 0xeed7bbfd3a849a1b
.xword 0xf49c8b3eb267745b
.xword 0x6693cc108bdced2b
.xword 0xb23f8dbcbf0b374e
.xword 0x3b94ad9acaf256dd
.xword 0x54cf9e06a1b535f4
.xword 0x27bafc646d0783c4
.xword 0x9c1b6f0a59bc8523
.xword 0x2d59a2f4dd4b574f
.xword 0x913bdacf0e803343
.xword 0x5e686c31849979b6
.xword 0x9d4ffe68c669cb0c
.xword 0xa8a099a6234e8b2e
.xword 0x956849aa20d580c1
.xword 0xa96e38833b484e74
.xword 0x77021fa2fc548c29
.xword 0xb9ace493e4866f9b
.xword 0xaefd357df2c38766
.xword 0xf67dc76a1a3d44d0
.xword 0x32e73a91fb219336
.xword 0x590ca9e1acbe7375
.xword 0x5f7fa35a28a79578
.xword 0x6562fc0f89ee3f1e
.xword 0xd7ed153afae6ce9b
.xword 0x72e1270b01a3b94f
.xword 0x30f546a0ac97407d
.xword 0x3a6e50d25c16d787
.xword 0x366b11533b7a336b
.xword 0xeda3f2b2b34d71b9
.xword 0x621900f277b35bf1
.xword 0xc062017952b4ccba
.xword 0x787a49e4179c2adc
.xword 0x52f3638afc51b181
.xword 0xcd548f632a6ddac7
.xword 0xd5da9fe867216c63
.xword 0x70d41b61bcf968b8
.xword 0x4f93277947c4f9f0
.xword 0xfb18888fd2f5b48c
.xword 0xfa8e49b5e387e21e
.xword 0xbbf73296fb9a1369
.xword 0x309eddd90b04e852
.xword 0xa9fdf719a0dc005f
.xword 0x9d008b4dc0c1d3dc
.xword 0xaa7b4147ad345f05
.xword 0x689901d5ec06304e
.xword 0xb9e6055afc556041
.xword 0xb4ae8169eaf9dc4a
.xword 0xf52b1d1514c24672
.xword 0x930f044c31746001
.xword 0x058c81e6fd4d84ba
.xword 0xe4c0a8db6eb49b94
.xword 0x052565a7d93d0a6f
.xword 0x2f9b5e2a59b6525d
.xword 0xbd347241505994aa
.xword 0x4cfe72bc98caf3a8
.xword 0xa3eee811ef0d223e
.xword 0x7b7ca5c02bf37f03
.xword 0x1a8b4d5dff894bdc
.xword 0x679350ff3cde27c7
.xword 0xc1c731db55904215
.xword 0x5472dbbe7d599d09
.xword 0x40773dfac2dfe84d
.xword 0x194fc3eee0588e9d
.xword 0x589541005f28b0ed
.xword 0x1dcdb0e6fade187d
.xword 0x5002cf261b7fecd2
.xword 0x40559ab239452a1c
.xword 0xf15797fce25f7ca8
.xword 0x90cf904ef95010bd
.xword 0xb8bc4786e2457ea6
.xword 0x425b633d2c857ccc
.xword 0xf61c2477bf2de9bf
.xword 0xc6eedffc93232c40
.xword 0x45b86d746f33d795
.xword 0x26833df66bfe018a
.xword 0x9101adb600f130ed
.xword 0x1ce7988b45d0c679
.xword 0xa76f1fdd656b62a0
.xword 0x707e1738c7d22bc4
.xword 0x7f46d655470104fc
.xword 0x42dc15c8669e649d
.xword 0xade49a2b5ff922cc
.xword 0xb62150962f175a22
.xword 0xc5142800d5cdac62
.xword 0xcc50d39e1ccfe45f
.xword 0x00a51423238e7c65
.xword 0xa8519d70a907fadf
.xword 0xb9660baadf0afb69
.xword 0xcdd1efb8d7350d41
.xword 0x175682dcb44cd67c
.xword 0x68837dedc199b7cc
.xword 0x94aa2ba2ea6d65fd
.xword 0x98a8586bed358667
.xword 0xe9fbd92dc8396fe7
.xword 0x5fc2827276a2e82e
.xword 0x2b8ef0ea92f23edb
.xword 0x9877d0b52d6accc9
.xword 0xbd89095d0e51203c
.xword 0xd7807360dde216e7
.xword 0xf685653125a7b36d
.xword 0x5c4db0523c683924

.align 8
.global _t2_ma_operations
_t2_ma_operations:
.xword 0  
.xword 47 | (0 << 18)   !ma_ctl_Ld (0)

.xword 0
.xword 0x182 | (0 << 18)   !ma_ctl_St (0)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (0)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (0)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (0)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (0)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (0)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (0)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (0)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (0)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (0)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (0)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (0)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (0)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (0)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (0)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (0)

.xword 0
.xword 0x1104 | (0 << 18) !ma_ctl_StParity (0)

.xword 0  
.xword 0x54 | (0 << 18)   !ma_ctl_Ld (1)

.xword 0
.xword 0x13f | (0 << 18)   !ma_ctl_St (1)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (1)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (1)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (1)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (1)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (1)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (1)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (1)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (1)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (1)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (1)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (1)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (1)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (1)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (1)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (1)

.xword 0
.xword 0x111a | (0 << 18) !ma_ctl_StParity (1)

.xword 0  
.xword 0x92 | (0 << 18)   !ma_ctl_Ld (2)

.xword 0
.xword 0x146 | (0 << 18)   !ma_ctl_St (2)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (2)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (2)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (2)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (2)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (2)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (2)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (2)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (2)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (2)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (2)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (2)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (2)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (2)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (2)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (2)

.xword 0
.xword 0x111b | (0 << 18) !ma_ctl_StParity (2)

.xword 0  
.xword 46 | (0 << 18)   !ma_ctl_Ld (3)

.xword 0
.xword 0x120 | (0 << 18)   !ma_ctl_St (3)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (3)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (3)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (3)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (3)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (3)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (3)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (3)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (3)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (3)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (3)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (3)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (3)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (3)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (3)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (3)

.xword 0
.xword 0x110f | (0 << 18) !ma_ctl_StParity (3)

.xword 0  
.xword 47 | (0 << 18)   !ma_ctl_Ld (4)

.xword 0
.xword 0x179 | (0 << 18)   !ma_ctl_St (4)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (4)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (4)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (4)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (4)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (4)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (4)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (4)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (4)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (4)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (4)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (4)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (4)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (4)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (4)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (4)

.xword 0
.xword 0x1100 | (0 << 18) !ma_ctl_StParity (4)

.xword 0  
.xword 0x8f | (0 << 18)   !ma_ctl_Ld (5)

.xword 0
.xword 0x148 | (0 << 18)   !ma_ctl_St (5)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (5)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (5)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (5)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (5)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (5)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (5)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (5)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (5)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (5)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (5)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (5)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (5)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (5)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (5)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (5)

.xword 0
.xword 0x1115 | (0 << 18) !ma_ctl_StParity (5)

.xword 0  
.xword 0x77 | (0 << 18)   !ma_ctl_Ld (6)

.xword 0
.xword 0x160 | (0 << 18)   !ma_ctl_St (6)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (6)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (6)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (6)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (6)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (6)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (6)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (6)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (6)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (6)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (6)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (6)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (6)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (6)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (6)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (6)

.xword 0
.xword 0x110a | (0 << 18) !ma_ctl_StParity (6)

.xword 0  
.xword 0x6b | (0 << 18)   !ma_ctl_Ld (7)

.xword 0
.xword 0x155 | (0 << 18)   !ma_ctl_St (7)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (7)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (7)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (7)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (7)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (7)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (7)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (7)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (7)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (7)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (7)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (7)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (7)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (7)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (7)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (7)

.xword 0
.xword 0x1103 | (0 << 18) !ma_ctl_StParity (7)

.xword 0  
.xword 0x62 | (0 << 18)   !ma_ctl_Ld (8)

.xword 0
.xword 0x181 | (0 << 18)   !ma_ctl_St (8)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (8)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (8)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (8)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (8)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (8)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (8)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (8)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (8)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (8)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (8)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (8)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (8)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (8)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (8)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (8)

.xword 0
.xword 0x1105 | (0 << 18) !ma_ctl_StParity (8)

.xword 0  
.xword 0x7e | (0 << 18)   !ma_ctl_Ld (9)

.xword 0
.xword 0x153 | (0 << 18)   !ma_ctl_St (9)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (9)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (9)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (9)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (9)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (9)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (9)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (9)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (9)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (9)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (9)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (9)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (9)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (9)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (9)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (9)

.xword 0
.xword 0x1109 | (0 << 18) !ma_ctl_StParity (9)

.xword 0  
.xword 0x65 | (0 << 18)   !ma_ctl_Ld (10)

.xword 0
.xword 0x137 | (0 << 18)   !ma_ctl_St (10)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (10)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (10)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (10)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (10)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (10)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (10)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (10)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (10)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (10)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (10)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (10)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (10)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (10)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (10)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (10)

.xword 0
.xword 0x1110 | (0 << 18) !ma_ctl_StParity (10)

.xword 0  
.xword 0x73 | (0 << 18)   !ma_ctl_Ld (11)

.xword 0
.xword 0x18e | (0 << 18)   !ma_ctl_St (11)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (11)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (11)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (11)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (11)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (11)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (11)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (11)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (11)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (11)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (11)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (11)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (11)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (11)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (11)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (11)

.xword 0
.xword 0x110f | (0 << 18) !ma_ctl_StParity (11)

.xword 0  
.xword 38 | (0 << 18)   !ma_ctl_Ld (12)

.xword 0
.xword 0x159 | (0 << 18)   !ma_ctl_St (12)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (12)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (12)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (12)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (12)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (12)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (12)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (12)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (12)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (12)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (12)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (12)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (12)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (12)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (12)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (12)

.xword 0
.xword 0x1114 | (0 << 18) !ma_ctl_StParity (12)

.xword 0  
.xword 0x97 | (0 << 18)   !ma_ctl_Ld (13)

.xword 0
.xword 0x143 | (0 << 18)   !ma_ctl_St (13)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (13)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (13)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (13)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (13)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (13)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (13)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (13)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (13)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (13)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (13)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (13)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (13)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (13)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (13)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (13)

.xword 0
.xword 0x111d | (0 << 18) !ma_ctl_StParity (13)

.xword 0  
.xword 0x6a | (0 << 18)   !ma_ctl_Ld (14)

.xword 0
.xword 0x135 | (0 << 18)   !ma_ctl_St (14)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (14)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (14)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (14)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (14)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (14)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (14)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (14)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (14)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (14)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (14)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (14)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (14)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (14)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (14)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (14)

.xword 0
.xword 0x1115 | (0 << 18) !ma_ctl_StParity (14)

.xword 0  
.xword 0x99 | (0 << 18)   !ma_ctl_Ld (15)

.xword 0
.xword 0x14e | (0 << 18)   !ma_ctl_St (15)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (15)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (15)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (15)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (15)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (15)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (15)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (15)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (15)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (15)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (15)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (15)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (15)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (15)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (15)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (15)

.xword 0
.xword 0x110b | (0 << 18) !ma_ctl_StParity (15)

.xword 0  
.xword 0x71 | (0 << 18)   !ma_ctl_Ld (16)

.xword 0
.xword 0x12a | (0 << 18)   !ma_ctl_St (16)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (16)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (16)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (16)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (16)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (16)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (16)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (16)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (16)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (16)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (16)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (16)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (16)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (16)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (16)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (16)

.xword 0
.xword 0x1114 | (0 << 18) !ma_ctl_StParity (16)

.xword 0  
.xword 0x8f | (0 << 18)   !ma_ctl_Ld (17)

.xword 0
.xword 0x155 | (0 << 18)   !ma_ctl_St (17)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (17)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (17)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (17)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (17)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (17)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (17)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (17)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (17)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (17)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (17)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (17)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (17)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (17)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (17)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (17)

.xword 0
.xword 0x111b | (0 << 18) !ma_ctl_StParity (17)

.xword 0  
.xword 0x8c | (0 << 18)   !ma_ctl_Ld (18)

.xword 0
.xword 0x121 | (0 << 18)   !ma_ctl_St (18)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (18)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (18)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (18)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (18)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (18)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (18)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (18)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (18)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (18)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (18)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (18)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (18)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (18)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (18)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (18)

.xword 0
.xword 0x1108 | (0 << 18) !ma_ctl_StParity (18)

.xword 0  
.xword 40 | (0 << 18)   !ma_ctl_Ld (19)

.xword 0
.xword 0x172 | (0 << 18)   !ma_ctl_St (19)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (19)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (19)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (19)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (19)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (19)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (19)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (19)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (19)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (19)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (19)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (19)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (19)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (19)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (19)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (19)

.xword 0
.xword 0x1107 | (0 << 18) !ma_ctl_StParity (19)

.xword 0  
.xword 0x83 | (0 << 18)   !ma_ctl_Ld (20)

.xword 0
.xword 0x189 | (0 << 18)   !ma_ctl_St (20)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (20)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (20)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (20)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (20)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (20)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (20)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (20)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (20)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (20)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (20)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (20)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (20)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (20)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (20)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (20)

.xword 0
.xword 0x1114 | (0 << 18) !ma_ctl_StParity (20)

.xword 0  
.xword 0x45 | (0 << 18)   !ma_ctl_Ld (21)

.xword 0
.xword 0x168 | (0 << 18)   !ma_ctl_St (21)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (21)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (21)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (21)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (21)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (21)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (21)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (21)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (21)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (21)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (21)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (21)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (21)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (21)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (21)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (21)

.xword 0
.xword 0x110e | (0 << 18) !ma_ctl_StParity (21)

.xword 0  
.xword 0x6c | (0 << 18)   !ma_ctl_Ld (22)

.xword 0
.xword 0x142 | (0 << 18)   !ma_ctl_St (22)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (22)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (22)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (22)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (22)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (22)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (22)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (22)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (22)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (22)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (22)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (22)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (22)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (22)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (22)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (22)

.xword 0
.xword 0x1104 | (0 << 18) !ma_ctl_StParity (22)

.xword 0  
.xword 0x7b | (0 << 18)   !ma_ctl_Ld (23)

.xword 0
.xword 0x13d | (0 << 18)   !ma_ctl_St (23)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (23)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (23)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (23)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (23)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (23)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (23)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (23)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (23)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (23)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (23)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (23)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (23)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (23)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (23)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (23)

.xword 0
.xword 0x110a | (0 << 18) !ma_ctl_StParity (23)

.xword 0  
.xword 54 | (0 << 18)   !ma_ctl_Ld (24)

.xword 0
.xword 0x12d | (0 << 18)   !ma_ctl_St (24)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (24)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (24)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (24)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (24)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (24)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (24)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (24)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (24)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (24)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (24)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (24)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (24)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (24)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (24)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (24)

.xword 0
.xword 0x1111 | (0 << 18) !ma_ctl_StParity (24)

.xword 0  
.xword 0x43 | (0 << 18)   !ma_ctl_Ld (25)

.xword 0
.xword 0x135 | (0 << 18)   !ma_ctl_St (25)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (25)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (25)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (25)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (25)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (25)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (25)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (25)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (25)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (25)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (25)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (25)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (25)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (25)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (25)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (25)

.xword 0
.xword 0x1107 | (0 << 18) !ma_ctl_StParity (25)

.xword 0  
.xword 0x84 | (0 << 18)   !ma_ctl_Ld (26)

.xword 0
.xword 0x156 | (0 << 18)   !ma_ctl_St (26)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (26)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (26)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (26)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (26)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (26)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (26)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (26)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (26)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (26)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (26)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (26)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (26)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (26)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (26)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (26)

.xword 0
.xword 0x111a | (0 << 18) !ma_ctl_StParity (26)

.xword 0  
.xword 0x5f | (0 << 18)   !ma_ctl_Ld (27)

.xword 0
.xword 0x159 | (0 << 18)   !ma_ctl_St (27)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (27)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (27)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (27)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (27)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (27)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (27)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (27)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (27)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (27)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (27)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (27)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (27)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (27)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (27)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (27)

.xword 0
.xword 0x1116 | (0 << 18) !ma_ctl_StParity (27)

.xword 0  
.xword 0x8c | (0 << 18)   !ma_ctl_Ld (28)

.xword 0
.xword 0x14e | (0 << 18)   !ma_ctl_St (28)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (28)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (28)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (28)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (28)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (28)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (28)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (28)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (28)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (28)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (28)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (28)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (28)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (28)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (28)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (28)

.xword 0
.xword 0x1104 | (0 << 18) !ma_ctl_StParity (28)

.xword 0  
.xword 0x98 | (0 << 18)   !ma_ctl_Ld (29)

.xword 0
.xword 0x156 | (0 << 18)   !ma_ctl_St (29)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (29)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (29)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (29)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (29)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (29)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (29)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (29)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (29)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (29)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (29)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (29)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (29)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (29)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (29)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (29)

.xword 0
.xword 0x1101 | (0 << 18) !ma_ctl_StParity (29)

.xword 0  
.xword 0x78 | (0 << 18)   !ma_ctl_Ld (30)

.xword 0
.xword 0x15d | (0 << 18)   !ma_ctl_St (30)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (30)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (30)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (30)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (30)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (30)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (30)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (30)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (30)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (30)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (30)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (30)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (30)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (30)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (30)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (30)

.xword 0
.xword 0x110b | (0 << 18) !ma_ctl_StParity (30)

.xword 0  
.xword 0x78 | (0 << 18)   !ma_ctl_Ld (31)

.xword 0
.xword 0x180 | (0 << 18)   !ma_ctl_St (31)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (31)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (31)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (31)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (31)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (31)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (31)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (31)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (31)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (31)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (31)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (31)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (31)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (31)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (31)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (31)

.xword 0
.xword 0x110b | (0 << 18) !ma_ctl_StParity (31)

.xword 0  
.xword 40 | (0 << 18)   !ma_ctl_Ld (32)

.xword 0
.xword 0x146 | (0 << 18)   !ma_ctl_St (32)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (32)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (32)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (32)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (32)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (32)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (32)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (32)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (32)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (32)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (32)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (32)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (32)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (32)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (32)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (32)

.xword 0
.xword 0x1103 | (0 << 18) !ma_ctl_StParity (32)

.xword 0  
.xword 0x8e | (0 << 18)   !ma_ctl_Ld (33)

.xword 0
.xword 0x141 | (0 << 18)   !ma_ctl_St (33)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (33)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (33)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (33)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (33)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (33)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (33)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (33)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (33)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (33)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (33)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (33)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (33)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (33)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (33)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (33)

.xword 0
.xword 0x1113 | (0 << 18) !ma_ctl_StParity (33)

.xword 0  
.xword 0x99 | (0 << 18)   !ma_ctl_Ld (34)

.xword 0
.xword 0x18c | (0 << 18)   !ma_ctl_St (34)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (34)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (34)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (34)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (34)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (34)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (34)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (34)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (34)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (34)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (34)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (34)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (34)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (34)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (34)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (34)

.xword 0
.xword 0x1102 | (0 << 18) !ma_ctl_StParity (34)

.xword 0  
.xword 0x73 | (0 << 18)   !ma_ctl_Ld (35)

.xword 0
.xword 0x141 | (0 << 18)   !ma_ctl_St (35)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (35)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (35)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (35)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (35)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (35)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (35)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (35)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (35)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (35)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (35)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (35)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (35)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (35)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (35)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (35)

.xword 0
.xword 0x1117 | (0 << 18) !ma_ctl_StParity (35)

.xword 0  
.xword 46 | (0 << 18)   !ma_ctl_Ld (36)

.xword 0
.xword 0x18e | (0 << 18)   !ma_ctl_St (36)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (36)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (36)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (36)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (36)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (36)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (36)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (36)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (36)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (36)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (36)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (36)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (36)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (36)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (36)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (36)

.xword 0
.xword 0x111a | (0 << 18) !ma_ctl_StParity (36)

.xword 0  
.xword 57 | (0 << 18)   !ma_ctl_Ld (37)

.xword 0
.xword 0x16b | (0 << 18)   !ma_ctl_St (37)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (37)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (37)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (37)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (37)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (37)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (37)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (37)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (37)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (37)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (37)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (37)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (37)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (37)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (37)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (37)

.xword 0
.xword 0x111b | (0 << 18) !ma_ctl_StParity (37)

.xword 0  
.xword 0x5b | (0 << 18)   !ma_ctl_Ld (38)

.xword 0
.xword 0x18f | (0 << 18)   !ma_ctl_St (38)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (38)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (38)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (38)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (38)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (38)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (38)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (38)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (38)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (38)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (38)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (38)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (38)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (38)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (38)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (38)

.xword 0
.xword 0x1102 | (0 << 18) !ma_ctl_StParity (38)

.xword 0  
.xword 0x94 | (0 << 18)   !ma_ctl_Ld (39)

.xword 0
.xword 0x147 | (0 << 18)   !ma_ctl_St (39)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (39)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (39)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (39)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (39)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (39)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (39)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (39)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (39)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (39)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (39)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (39)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (39)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (39)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (39)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (39)

.xword 0
.xword 0x111b | (0 << 18) !ma_ctl_StParity (39)

.xword 0  
.xword 36 | (0 << 18)   !ma_ctl_Ld (40)

.xword 0
.xword 0x12f | (0 << 18)   !ma_ctl_St (40)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (40)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (40)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (40)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (40)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (40)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (40)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (40)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (40)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (40)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (40)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (40)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (40)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (40)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (40)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (40)

.xword 0
.xword 0x1116 | (0 << 18) !ma_ctl_StParity (40)

.xword 0  
.xword 0x88 | (0 << 18)   !ma_ctl_Ld (41)

.xword 0
.xword 0x11e | (0 << 18)   !ma_ctl_St (41)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (41)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (41)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (41)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (41)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (41)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (41)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (41)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (41)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (41)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (41)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (41)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (41)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (41)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (41)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (41)

.xword 0
.xword 0x1105 | (0 << 18) !ma_ctl_StParity (41)

.xword 0  
.xword 47 | (0 << 18)   !ma_ctl_Ld (42)

.xword 0
.xword 0x13d | (0 << 18)   !ma_ctl_St (42)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (42)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (42)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (42)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (42)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (42)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (42)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (42)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (42)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (42)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (42)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (42)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (42)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (42)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (42)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (42)

.xword 0
.xword 0x1117 | (0 << 18) !ma_ctl_StParity (42)

.xword 0  
.xword 36 | (0 << 18)   !ma_ctl_Ld (43)

.xword 0
.xword 0x175 | (0 << 18)   !ma_ctl_St (43)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (43)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (43)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (43)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (43)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (43)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (43)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (43)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (43)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (43)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (43)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (43)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (43)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (43)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (43)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (43)

.xword 0
.xword 0x110a | (0 << 18) !ma_ctl_StParity (43)

.xword 0  
.xword 43 | (0 << 18)   !ma_ctl_Ld (44)

.xword 0
.xword 0x145 | (0 << 18)   !ma_ctl_St (44)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (44)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (44)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (44)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (44)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (44)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (44)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (44)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (44)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (44)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (44)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (44)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (44)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (44)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (44)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (44)

.xword 0
.xword 0x1107 | (0 << 18) !ma_ctl_StParity (44)

.xword 0  
.xword 0x83 | (0 << 18)   !ma_ctl_Ld (45)

.xword 0
.xword 0x15b | (0 << 18)   !ma_ctl_St (45)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (45)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (45)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (45)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (45)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (45)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (45)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (45)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (45)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (45)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (45)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (45)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (45)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (45)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (45)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (45)

.xword 0
.xword 0x111a | (0 << 18) !ma_ctl_StParity (45)

.xword 0  
.xword 30 | (0 << 18)   !ma_ctl_Ld (46)

.xword 0
.xword 0x154 | (0 << 18)   !ma_ctl_St (46)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (46)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (46)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (46)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (46)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (46)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (46)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (46)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (46)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (46)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (46)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (46)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (46)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (46)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (46)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (46)

.xword 0
.xword 0x110a | (0 << 18) !ma_ctl_StParity (46)

.xword 0  
.xword 0x4a | (0 << 18)   !ma_ctl_Ld (47)

.xword 0
.xword 0x149 | (0 << 18)   !ma_ctl_St (47)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (47)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (47)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (47)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (47)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (47)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (47)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (47)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (47)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (47)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (47)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (47)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (47)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (47)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (47)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (47)

.xword 0
.xword 0x1112 | (0 << 18) !ma_ctl_StParity (47)

.xword 0  
.xword 0x8a | (0 << 18)   !ma_ctl_Ld (48)

.xword 0
.xword 0x17a | (0 << 18)   !ma_ctl_St (48)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (48)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (48)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (48)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (48)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (48)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (48)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (48)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (48)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (48)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (48)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (48)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (48)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (48)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (48)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (48)

.xword 0
.xword 0x1107 | (0 << 18) !ma_ctl_StParity (48)

.xword 0  
.xword 0x8d | (0 << 18)   !ma_ctl_Ld (49)

.xword 0
.xword 0x162 | (0 << 18)   !ma_ctl_St (49)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (49)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (49)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (49)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (49)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (49)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (49)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (49)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (49)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (49)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (49)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (49)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (49)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (49)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (49)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (49)

.xword 0
.xword 0x111b | (0 << 18) !ma_ctl_StParity (49)

.xword 0  
.xword 0x61 | (0 << 18)   !ma_ctl_Ld (50)

.xword 0
.xword 0x15e | (0 << 18)   !ma_ctl_St (50)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (50)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (50)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (50)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (50)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (50)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (50)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (50)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (50)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (50)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (50)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (50)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (50)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (50)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (50)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (50)

.xword 0
.xword 0x1100 | (0 << 18) !ma_ctl_StParity (50)

.xword 0  
.xword 0x9a | (0 << 18)   !ma_ctl_Ld (51)

.xword 0
.xword 0x15a | (0 << 18)   !ma_ctl_St (51)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (51)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (51)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (51)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (51)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (51)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (51)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (51)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (51)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (51)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (51)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (51)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (51)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (51)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (51)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (51)

.xword 0
.xword 0x110d | (0 << 18) !ma_ctl_StParity (51)

.xword 0  
.xword 0x86 | (0 << 18)   !ma_ctl_Ld (52)

.xword 0
.xword 0x12a | (0 << 18)   !ma_ctl_St (52)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (52)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (52)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (52)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (52)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (52)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (52)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (52)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (52)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (52)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (52)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (52)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (52)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (52)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (52)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (52)

.xword 0
.xword 0x1118 | (0 << 18) !ma_ctl_StParity (52)

.xword 0  
.xword 0x51 | (0 << 18)   !ma_ctl_Ld (53)

.xword 0
.xword 0x178 | (0 << 18)   !ma_ctl_St (53)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (53)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (53)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (53)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (53)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (53)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (53)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (53)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (53)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (53)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (53)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (53)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (53)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (53)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (53)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (53)

.xword 0
.xword 0x1106 | (0 << 18) !ma_ctl_StParity (53)

.xword 0  
.xword 0x93 | (0 << 18)   !ma_ctl_Ld (54)

.xword 0
.xword 0x172 | (0 << 18)   !ma_ctl_St (54)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (54)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (54)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (54)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (54)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (54)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (54)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (54)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (54)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (54)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (54)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (54)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (54)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (54)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (54)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (54)

.xword 0
.xword 0x110e | (0 << 18) !ma_ctl_StParity (54)

.xword 0  
.xword 62 | (0 << 18)   !ma_ctl_Ld (55)

.xword 0
.xword 0x127 | (0 << 18)   !ma_ctl_St (55)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (55)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (55)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (55)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (55)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (55)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (55)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (55)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (55)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (55)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (55)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (55)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (55)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (55)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (55)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (55)

.xword 0
.xword 0x1103 | (0 << 18) !ma_ctl_StParity (55)

.xword 0  
.xword 61 | (0 << 18)   !ma_ctl_Ld (56)

.xword 0
.xword 0x154 | (0 << 18)   !ma_ctl_St (56)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (56)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (56)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (56)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (56)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (56)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (56)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (56)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (56)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (56)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (56)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (56)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (56)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (56)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (56)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (56)

.xword 0
.xword 0x1106 | (0 << 18) !ma_ctl_StParity (56)

.xword 0  
.xword 0x53 | (0 << 18)   !ma_ctl_Ld (57)

.xword 0
.xword 0x183 | (0 << 18)   !ma_ctl_St (57)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (57)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (57)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (57)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (57)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (57)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (57)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (57)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (57)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (57)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (57)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (57)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (57)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (57)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (57)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (57)

.xword 0
.xword 0x111a | (0 << 18) !ma_ctl_StParity (57)

.xword 0  
.xword 0x9d | (0 << 18)   !ma_ctl_Ld (58)

.xword 0
.xword 0x129 | (0 << 18)   !ma_ctl_St (58)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (58)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (58)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (58)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (58)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (58)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (58)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (58)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (58)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (58)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (58)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (58)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (58)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (58)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (58)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (58)

.xword 0
.xword 0x1106 | (0 << 18) !ma_ctl_StParity (58)

.xword 0  
.xword 0x64 | (0 << 18)   !ma_ctl_Ld (59)

.xword 0
.xword 0x190 | (0 << 18)   !ma_ctl_St (59)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (59)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (59)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (59)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (59)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (59)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (59)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (59)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (59)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (59)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (59)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (59)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (59)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (59)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (59)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (59)

.xword 0
.xword 0x1104 | (0 << 18) !ma_ctl_StParity (59)

.xword 0  
.xword 0x81 | (0 << 18)   !ma_ctl_Ld (60)

.xword 0
.xword 0x14a | (0 << 18)   !ma_ctl_St (60)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (60)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (60)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (60)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (60)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (60)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (60)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (60)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (60)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (60)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (60)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (60)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (60)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (60)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (60)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (60)

.xword 0
.xword 0x1100 | (0 << 18) !ma_ctl_StParity (60)

.xword 0  
.xword 51 | (0 << 18)   !ma_ctl_Ld (61)

.xword 0
.xword 0x178 | (0 << 18)   !ma_ctl_St (61)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (61)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (61)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (61)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (61)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (61)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (61)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (61)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (61)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (61)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (61)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (61)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (61)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (61)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (61)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (61)

.xword 0
.xword 0x1106 | (0 << 18) !ma_ctl_StParity (61)

.xword 0  
.xword 0x73 | (0 << 18)   !ma_ctl_Ld (62)

.xword 0
.xword 0x147 | (0 << 18)   !ma_ctl_St (62)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (62)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (62)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (62)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (62)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (62)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (62)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (62)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (62)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (62)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (62)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (62)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (62)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (62)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (62)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (62)

.xword 0
.xword 0x110d | (0 << 18) !ma_ctl_StParity (62)

.xword 0  
.xword 0x50 | (0 << 18)   !ma_ctl_Ld (63)

.xword 0
.xword 0x177 | (0 << 18)   !ma_ctl_St (63)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (63)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (63)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (63)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (63)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (63)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (63)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (63)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (63)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (63)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (63)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (63)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (63)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (63)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (63)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (63)

.xword 0
.xword 0x1104 | (0 << 18) !ma_ctl_StParity (63)

.xword 0  
.xword 31 | (0 << 18)   !ma_ctl_Ld (64)

.xword 0
.xword 0x158 | (0 << 18)   !ma_ctl_St (64)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (64)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (64)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (64)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (64)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (64)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (64)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (64)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (64)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (64)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (64)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (64)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (64)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (64)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (64)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (64)

.xword 0
.xword 0x1114 | (0 << 18) !ma_ctl_StParity (64)

.xword 0  
.xword 0x7a | (0 << 18)   !ma_ctl_Ld (65)

.xword 0
.xword 0x126 | (0 << 18)   !ma_ctl_St (65)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (65)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (65)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (65)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (65)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (65)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (65)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (65)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (65)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (65)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (65)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (65)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (65)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (65)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (65)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (65)

.xword 0
.xword 0x1110 | (0 << 18) !ma_ctl_StParity (65)

.xword 0  
.xword 0x84 | (0 << 18)   !ma_ctl_Ld (66)

.xword 0
.xword 0x160 | (0 << 18)   !ma_ctl_St (66)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (66)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (66)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (66)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (66)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (66)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (66)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (66)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (66)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (66)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (66)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (66)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (66)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (66)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (66)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (66)

.xword 0
.xword 0x1118 | (0 << 18) !ma_ctl_StParity (66)

.xword 0  
.xword 0x81 | (0 << 18)   !ma_ctl_Ld (67)

.xword 0
.xword 0x164 | (0 << 18)   !ma_ctl_St (67)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (67)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (67)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (67)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (67)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (67)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (67)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (67)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (67)

.xword 0x78285050
.xword 0xa01 | (0 << 18)    !ma_ctl_ModSq (67)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (67)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (67)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (67)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (67)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (67)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (67)

.xword 0
.xword 0x110e | (0 << 18) !ma_ctl_StParity (67)

.xword 0  
.xword 0x81 | (0 << 18)   !ma_ctl_Ld (68)

.xword 0
.xword 0x182 | (0 << 18)   !ma_ctl_St (68)

.xword 0x80604020
.xword 0x202 | (0 << 18)   !ma_ctl_ModMul (68)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (68)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (68)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (68)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (68)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (68)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (68)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (68)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (68)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (68)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (68)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (68)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (68)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (68)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (68)

.xword 0
.xword 0x1107 | (0 << 18) !ma_ctl_StParity (68)

.xword 0  
.xword 0x96 | (0 << 18)   !ma_ctl_Ld (69)

.xword 0
.xword 0x16c | (0 << 18)   !ma_ctl_St (69)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (69)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (69)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (69)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (69)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (69)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (69)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (69)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (69)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (69)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (69)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (69)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (69)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (69)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (69)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (69)

.xword 0
.xword 0x1111 | (0 << 18) !ma_ctl_StParity (69)

.xword 0  
.xword 53 | (0 << 18)   !ma_ctl_Ld (70)

.xword 0
.xword 0x14c | (0 << 18)   !ma_ctl_St (70)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (70)

.xword 0x356a
.xword 0x301 | (0 << 18)   !ma_ctl_ModRed (70)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (70)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (70)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (70)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (70)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (70)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (70)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (70)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (70)

.xword 0x7766000000554422
.xword 0xc02 | (0 << 18)    !ma_ctl_gfp_ptDbl (70)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (70)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (70)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (70)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (70)

.xword 0
.xword 0x110a | (0 << 18) !ma_ctl_StParity (70)

.xword 0  
.xword 0x4c | (0 << 18)   !ma_ctl_Ld (71)

.xword 0
.xword 0x124 | (0 << 18)   !ma_ctl_St (71)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (71)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (71)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (71)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (71)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (71)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (71)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (71)

.xword 0x00287850
.xword 0x901 | (0 << 18)   !ma_ctl_ModAdd (71)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (71)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (71)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (71)

.xword 0x706200000054462a
.xword 0xd02 | (0 << 18)    !ma_ctl_gfp_ptAdd (71)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (71)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (71)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (71)

.xword 0
.xword 0x111a | (0 << 18) !ma_ctl_StParity (71)

.xword 0  
.xword 32 | (0 << 18)   !ma_ctl_Ld (72)

.xword 0
.xword 0x18c | (0 << 18)   !ma_ctl_St (72)

.xword 0x80604020
.xword 0x203 | (0 << 18)   !ma_ctl_ModMul (72)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (72)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (72)

.xword 0x6a35
.xword 0x502 | (0 << 18)  !ma_ctl_gf2m_ModAdd (72)

.xword 0x78285050
.xword 0x602 | (0 << 18)   !ma_ctl_gf2m_ModSq (72)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (72)

.xword 0x00287850
.xword 0x802 | (0 << 18)   !ma_ctl_ModSub (72)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (72)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (72)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (72)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (72)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (72)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (72)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (72)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (72)

.xword 0
.xword 0x111b | (0 << 18) !ma_ctl_StParity (72)

.xword 0  
.xword 0x9e | (0 << 18)   !ma_ctl_Ld (73)

.xword 0
.xword 0x184 | (0 << 18)   !ma_ctl_St (73)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (73)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (73)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (73)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (73)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (73)

.xword 0x80604020
.xword 0x701 | (0 << 18)  !ma_ctl_gf2m_ModMul (73)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (73)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (73)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (73)

.xword 0x64500000003c0000
.xword 0xb01 | (0 << 18)    !ma_ctl_gfp_ptDbl (73)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (73)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (73)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (73)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (73)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (73)

.xword 0
.xword 0x110e | (0 << 18) !ma_ctl_StParity (73)

.xword 0  
.xword 0x75 | (0 << 18)   !ma_ctl_Ld (74)

.xword 0
.xword 0x12b | (0 << 18)   !ma_ctl_St (74)

.xword 0x80604020
.xword 0x201 | (0 << 18)   !ma_ctl_ModMul (74)

.xword 0x356a
.xword 0x302 | (0 << 18)   !ma_ctl_ModRed (74)

.xword 0x0000006000408020
.xword 0x401 | (0 << 18)   !ma_ctl_ModExp (74)

.xword 0x6a35
.xword 0x501 | (0 << 18)  !ma_ctl_gf2m_ModAdd (74)

.xword 0x78285050
.xword 0x601 | (0 << 18)   !ma_ctl_gf2m_ModSq (74)

.xword 0x80604020
.xword 0x702 | (0 << 18)  !ma_ctl_gf2m_ModMul (74)

.xword 0x00287850
.xword 0x801 | (0 << 18)   !ma_ctl_ModSub (74)

.xword 0x00287850
.xword 0x902 | (0 << 18)   !ma_ctl_ModAdd (74)

.xword 0x78285050
.xword 0xa02 | (0 << 18)    !ma_ctl_ModSq (74)

.xword 0x64500000003c0000
.xword 0xb02 | (0 << 18)    !ma_ctl_gfp_ptDbl (74)

.xword 0x7766000000554422
.xword 0xc01 | (0 << 18)    !ma_ctl_gfp_ptDbl (74)

.xword 0x706200000054462a
.xword 0xd01 | (0 << 18)    !ma_ctl_gfp_ptAdd (74)

.xword 0x784d005800423721
.xword 0xe01 | (0 << 18)    !ma_ctl_gfp_ptMul (74)

.xword 0x804d006000504020
.xword 0xf01 | (0 << 18)   !ma_ctl_gf2m_ptMul (74)

.xword 0x0000006000408020
.xword 0x1001 | (0 << 18)  !ma_ctl_gf2m_ModExp (74)

.xword 0
.xword 0x110c | (0 << 18) !ma_ctl_StParity (74)


.align 8
.global _t2_ma_results
_t2_ma_results:
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF
.xword 0xDEADBEEFDEADBEEF



SECTION .MyHTRAPS_0 TEXT_VA = 0x0000000000280000, DATA_VA = 0x00000000002c0000
attr_text {
	Name	 = .MyHTRAPS_0,
	RA	 = 0x0000000000280000,
	PA	 = ra2pa(0x0000000000280000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0,
	TTE_X	 = 0
}


attr_data {
	Name	 = .MyHTRAPS_0,
	RA	 = 0x00000000002c0000,
	PA	 = ra2pa(0x00000000002c0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}

.text
#include "htraps.s"
#include "tlu_htraps_ext.s"



SECTION .MyHTRAPS_1 TEXT_VA = 0x00000000002a0000, DATA_VA = 0x00000000002e0000
attr_text {
	Name	 = .MyHTRAPS_1,
	RA	 = 0x00000000002a0000,
	PA	 = ra2pa(0x00000000002a0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0,
	TTE_X	 = 0
}


attr_data {
	Name	 = .MyHTRAPS_1,
	RA	 = 0x00000000002e0000,
	PA	 = ra2pa(0x00000000002e0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}

.text
#include "htraps.s"
#include "tlu_htraps_ext.s"



SECTION .MyHTRAPS_2 TEXT_VA = 0x0000000200280000, DATA_VA = 0x00000002002c0000
attr_text {
	Name	 = .MyHTRAPS_2,
	RA	 = 0x0000000200280000,
	PA	 = ra2pa(0x0000000200280000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 0,
	TTE_X	 = 0
}


attr_data {
	Name	 = .MyHTRAPS_2,
	RA	 = 0x00000002002c0000,
	PA	 = ra2pa(0x00000002002c0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}

.text
#include "htraps.s"
#include "tlu_htraps_ext.s"



SECTION .MyHTRAPS_3 TEXT_VA = 0x00000002002a0000, DATA_VA = 0x00000002002e0000
attr_text {
	Name	 = .MyHTRAPS_3,
	RA	 = 0x00000002002a0000,
	PA	 = ra2pa(0x00000002002a0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 0,
	TTE_X	 = 0
}


attr_data {
	Name	 = .MyHTRAPS_3,
	RA	 = 0x00000002002e0000,
	PA	 = ra2pa(0x00000002002e0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}

.text
#include "htraps.s"
#include "tlu_htraps_ext.s"





SECTION .MyTRAPS_0 TEXT_VA = 0x0000000000380000, DATA_VA = 0x00000000003c0000
attr_text {
	Name	 = .MyTRAPS_0,
	RA	 = 0x0000000000380000,
	PA	 = ra2pa(0x0000000000380000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0,
	TTE_X	 = 1
}


attr_data {
	Name	 = .MyTRAPS_0,
	RA	 = 0x00000000003c0000,
	PA	 = ra2pa(0x00000000003c0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 1
}

#include "traps.s"



SECTION .MyTRAPS_1 TEXT_VA = 0x00000000003a0000, DATA_VA = 0x00000000003e0000
attr_text {
	Name	 = .MyTRAPS_1,
	RA	 = 0x00000000003a0000,
	PA	 = ra2pa(0x00000000003a0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 1,
	TTE_X	 = 1
}


attr_data {
	Name	 = .MyTRAPS_1,
	RA	 = 0x00000000003e0000,
	PA	 = ra2pa(0x00000000003e0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 1
}

#include "traps.s"



SECTION .MyTRAPS_2 TEXT_VA = 0x0000000400380000, DATA_VA = 0x00000004003c0000
attr_text {
	Name	 = .MyTRAPS_2,
	RA	 = 0x0000000400380000,
	PA	 = ra2pa(0x0000000400380000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 0,
	TTE_X	 = 1
}


attr_data {
	Name	 = .MyTRAPS_2,
	RA	 = 0x00000004003c0000,
	PA	 = ra2pa(0x00000004003c0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}

#include "traps.s"



SECTION .MyTRAPS_3 TEXT_VA = 0x00000004003a0000, DATA_VA = 0x00000004003e0000
attr_text {
	Name	 = .MyTRAPS_3,
	RA	 = 0x00000004003a0000,
	PA	 = ra2pa(0x00000004003a0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0,
	TTE_X	 = 1
}


attr_data {
	Name	 = .MyTRAPS_3,
	RA	 = 0x00000004003e0000,
	PA	 = ra2pa(0x00000004003e0000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0,
	TTE_V	 = 1,
	TTE_Size	 = PART0_Z_PAGE_SIZE_3,
	TTE_NFO	 = 1,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}

#include "traps.s"





SECTION .MyDATA_0 TEXT_VA = 0x00000000e0140000, DATA_VA = 0x0000000060140000
attr_text {
	Name	 = .MyDATA_0,
	RA	 = 0x0000000170100000,
	PA	 = ra2pa(0x0000000170100000,0),
	part_0_ctx_zero_tsb_config_0,
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 5,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 0
}


attr_data {
	Name	 = .MyDATA_0,
	RA	 = 0x0000000170100000,
	PA	 = ra2pa(0x0000000170100000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 1
}


attr_data {
	Name	 = .MyDATA_0,
	RA	 = 0x0000000170100000,
	PA	 = ra2pa(0x0000000170100000,0),
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = SCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 5,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0,
	tsbonly
}


attr_data {
	Name	 = .MyDATA_0,
	hypervisor
}


attr_text {
	Name	 = .MyDATA_0,
	hypervisor
}

.data
	.xword	0xc7374bb1f14c130e
	.xword	0x68fb85414ca60108
	.xword	0xd3b1a1a724007496
	.xword	0x1d197dc72406960a
	.xword	0xcc66bf916d2453b3
	.xword	0x06058818bdf62a55
	.xword	0x33f8c7eeaae25d59
	.xword	0xb3326fc5ae725b3d
	.xword	0xa05fc55a6176e003
	.xword	0xf3ceb23f2225920b
	.xword	0xf0056a98f593f2a1
	.xword	0x3fe4bdf19972e2c6
	.xword	0x6d5e0f6d871c27f5
	.xword	0xd60c972a7e094551
	.xword	0x1f8706c4a482e6ff
	.xword	0x02875bbaebdd8530
	.xword	0xc4bf2cacfe21fb1d
	.xword	0x56a535094b8626e3
	.xword	0x241a99c869f2191d
	.xword	0x93796734206d5a8c
	.xword	0x7fdb5322cc28a31c
	.xword	0x6fa8f8f1ff3ba64d
	.xword	0xae585fffc333ef08
	.xword	0x5f4f6edaa3881d37
	.xword	0x9ff45ddbe6306326
	.xword	0xea27c3f7808b2447
	.xword	0x7b2a504978d811aa
	.xword	0x1db9b10efc451679
	.xword	0x3bf1451cc501ad0d
	.xword	0x91e6d90f028f95a7
	.xword	0x92a7660c08504b8c
	.xword	0x90691ff69ab099e0



SECTION .MyDATA_1 TEXT_VA = 0x00000000e0340000, DATA_VA = 0x0000000060340000
attr_text {
	Name	 = .MyDATA_1,
	RA	 = 0x0000000170300000,
	PA	 = ra2pa(0x0000000170300000,0),
	part_0_ctx_zero_tsb_config_0,
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}


attr_data {
	Name	 = .MyDATA_1,
	RA	 = 0x0000000170300000,
	PA	 = ra2pa(0x0000000170300000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0
}


attr_data {
	Name	 = .MyDATA_1,
	RA	 = 0x0000000170300000,
	PA	 = ra2pa(0x0000000170300000,0),
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = SCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 5,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 0,
	tsbonly
}


attr_data {
	Name	 = .MyDATA_1,
	hypervisor
}


attr_text {
	Name	 = .MyDATA_1,
	hypervisor
}

.data
	.xword	0x69278e8c0514dd17
	.xword	0x89e7d223aa3be468
	.xword	0x94588e83b502271c
	.xword	0x2c2a9bf86c8e63b6
	.xword	0x285d2505f6c952a1
	.xword	0x3989fc8165ddbebe
	.xword	0x408b9d2fd6c4c72e
	.xword	0xe31901ac346780e3
	.xword	0x8cf1be98acf5df02
	.xword	0x58e9e039e71edcc8
	.xword	0x4f79b6ba0a975ec1
	.xword	0xe3ad001dce4bb9b4
	.xword	0x6be96e2e7fd2a627
	.xword	0xe52e53e528e23338
	.xword	0x2f032e8d0b0983b3
	.xword	0xb6a2594ccfbb01e9
	.xword	0xfa8162e9166940c7
	.xword	0xad5c86a8079880ac
	.xword	0xa3e6a789d7eb43f6
	.xword	0xaf4d809b135112b6
	.xword	0xce1bf52ff318474a
	.xword	0xdc4fa5fdccfd681b
	.xword	0xa61df32288a1e102
	.xword	0x8b90222df7abc0bb
	.xword	0xb6003d5946a1fcf0
	.xword	0xb3d092676c5b0463
	.xword	0x89467e475444b655
	.xword	0xebc49faab0184efe
	.xword	0x8ea875f8e49cc892
	.xword	0x46c0aa29517653cc
	.xword	0x93a3ff9638f39048
	.xword	0x46740f925e81c037



SECTION .MyDATA_2 TEXT_VA = 0x00000000e0540000, DATA_VA = 0x0000000060540000
attr_text {
	Name	 = .MyDATA_2,
	RA	 = 0x0000000170500000,
	PA	 = ra2pa(0x0000000170500000,0),
	part_0_ctx_zero_tsb_config_0,
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0
}


attr_data {
	Name	 = .MyDATA_2,
	RA	 = 0x0000000170500000,
	PA	 = ra2pa(0x0000000170500000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 1
}


attr_data {
	Name	 = .MyDATA_2,
	RA	 = 0x0000000170500000,
	PA	 = ra2pa(0x0000000170500000,0),
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = SCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 5,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 0,
	tsbonly
}


attr_data {
	Name	 = .MyDATA_2,
	hypervisor
}


attr_text {
	Name	 = .MyDATA_2,
	hypervisor
}

.data
	.xword	0xa398c8f1839d68ad
	.xword	0xb3afa01225254045
	.xword	0xb28369aa5d103174
	.xword	0x49b8efa2d53114d6
	.xword	0x301dc201e3578173
	.xword	0x6b6361b9b1067b10
	.xword	0x68b4b6941adee446
	.xword	0xe44b72512f121206
	.xword	0xa8782ff141e71a10
	.xword	0x745ea33f751db11b
	.xword	0x2bce2bce6ee99f28
	.xword	0x0fae38a6e448be9e
	.xword	0xa74b146c658ebc22
	.xword	0x0651ec91c2cb4204
	.xword	0x0cf1026c9f488b83
	.xword	0xab23a015954d40a7
	.xword	0x84dd2f1b7b289c8e
	.xword	0x019a9d8d15c43d8e
	.xword	0x5f40c3d89ad30058
	.xword	0xf04ec0ce7692dc4d
	.xword	0x0131f4513aee2f77
	.xword	0x7afa189e0ffd6c1f
	.xword	0x25e56fe802752e16
	.xword	0x29770ea4415eb1ef
	.xword	0xe5d6da3a17348604
	.xword	0x5343f6fa82f676a0
	.xword	0x79be2f6330a05f5a
	.xword	0xc1094996a7cce0c1
	.xword	0xffa4fe90ffaf0c32
	.xword	0x0fc906515d5b9927
	.xword	0x1a1edec92a9878f9
	.xword	0x287b2be78022eac9



SECTION .MyDATA_3 TEXT_VA = 0x00000000e0740000, DATA_VA = 0x0000000060740000
attr_text {
	Name	 = .MyDATA_3,
	RA	 = 0x0000000170700000,
	PA	 = ra2pa(0x0000000170700000,0),
	part_0_ctx_zero_tsb_config_0,
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 0
}


attr_data {
	Name	 = .MyDATA_3,
	RA	 = 0x0000000170700000,
	PA	 = ra2pa(0x0000000170700000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 1,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 0
}


attr_data {
	Name	 = .MyDATA_3,
	RA	 = 0x0000000170700000,
	PA	 = ra2pa(0x0000000170700000,0),
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = SCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 1,
	tsbonly
}


attr_data {
	Name	 = .MyDATA_3,
	hypervisor
}


attr_text {
	Name	 = .MyDATA_3,
	hypervisor
}

.data
	.xword	0xe43b23ac5fbd7416
	.xword	0xa5e71c98ba3654a7
	.xword	0x6a356727879f0cbb
	.xword	0xf44a100defce8b86
	.xword	0x560e32ec30a75a7b
	.xword	0xf498ef0ec083453e
	.xword	0x31f4126da817b1cf
	.xword	0x662d1fcb31829a90
	.xword	0xe3d82d1638652815
	.xword	0xb925114c51e91199
	.xword	0x7ce11b2fa70088f7
	.xword	0xcc1d42312f946b30
	.xword	0x863edb2f1bcf15e4
	.xword	0xeaa41d3bd559dff1
	.xword	0x85528de6623526e8
	.xword	0x144951458f57f363
	.xword	0x1922490b27561ff1
	.xword	0x2bb3dc9247b24dc6
	.xword	0x6a479c1ccc9bc4f5
	.xword	0xd859a67dea16f12d
	.xword	0xda368019a882f761
	.xword	0x923db9a6f5fadf06
	.xword	0xed7fc4b5df497f2c
	.xword	0x2d10b4da00411dd7
	.xword	0xe46a1dcb3d83ef22
	.xword	0x8da585bd87aebd0d
	.xword	0xddfb6da02c5af191
	.xword	0x8ef0a984496281e0
	.xword	0xab627a30932d07dd
	.xword	0x9c72fc0f87ff97e9
	.xword	0xca67b59d3f4e233c
	.xword	0x5fa006d390ae9a52





SECTION .MyTEXT_0 TEXT_VA = 0x00000000e0200000
attr_text {
	Name	 = .MyTEXT_0,
	RA	 = 0x00000000e0200000,
	PA	 = ra2pa(0x00000000e0200000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_EP	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 1
}

.text
nuff_said_0:
	.word 0x81b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r0
	.word 0xa1a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f16
	mov HIGHVA_HIGHNUM, %r11
	sllx %r11, 32, %r11
	or %r27, %r11, %r27
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	.word 0x81b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r0
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0



SECTION .MyTEXT_1 TEXT_VA = 0x00000000e0a00000
attr_text {
	Name	 = .MyTEXT_1,
	RA	 = 0x00000000e0a00000,
	PA	 = ra2pa(0x00000000e0a00000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 1
}

.text
nuff_said_1:
	.word 0xe1bfdb40  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xc19fda60  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	mov HIGHVA_HIGHNUM, %r11
	sllx %r11, 32, %r11
	or %r27, %r11, %r27
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	.word 0xe1bfde00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	.word 0xa1b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r16



SECTION .MyTEXT_2 TEXT_VA = 0x00000000e1200000
attr_text {
	Name	 = .MyTEXT_2,
	RA	 = 0x00000000e1200000,
	PA	 = ra2pa(0x00000000e1200000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_EP	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 1
}

.text
nuff_said_2:
	.word 0xa1b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r16
	.word 0x81a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f0
	mov HIGHVA_HIGHNUM, %r11
	sllx %r11, 32, %r11
	or %r27, %r11, %r27
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	.word 0xc19fde20  ! 1: LDDFA_R	ldda	[%r31, %r0], %f0
	.word 0x81b7c480  ! 1: FCMPLE32	fcmple32	%d62, %d0, %r0



SECTION .MyTEXT_3 TEXT_VA = 0x00000000e1a00000
attr_text {
	Name	 = .MyTEXT_3,
	RA	 = 0x00000000e1a00000,
	PA	 = ra2pa(0x00000000e1a00000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 1
}

.text
nuff_said_3:
	.word 0x87afca40  ! 1: FCMPd	fcmpd	%fcc<n>, %f62, %f0
	.word 0xe1bfdf00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]
	mov HIGHVA_HIGHNUM, %r11
	sllx %r11, 32, %r11
	or %r27, %r11, %r27
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	jmpl %r27+8, %r0
	.word 0xa1a7c9c0  ! 1: FDIVd	fdivd	%f62, %f0, %f16
	.word 0xc0bfdd40  ! 1: STDA_R	stda	%r0, [%r31 + %r0] 0xea





SECTION .VaHOLE_0 TEXT_VA = 0x00007fffffffe000
attr_text {
	Name	 = .VaHOLE_0,
	RA	 = 0x00000000ffffe000,
	PA	 = ra2pa(0x00000000ffffe000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 1,
	TTE_X	 = 1
}

.text
.global vahole_target0
.text
.global vahole_target1
.text
.global vahole_target2
.text
.global vahole_target3
	nop
.align 4096
	nop
.align 2048
	nop
.align 1024
	nop
.align 512
	nop
.align 256
	nop
.align 128
	nop
.align 64
	nop
	nop
.align 16
	nop;nop;nop
vahole_target0: nop;nop
vahole_target1: nop
vahole_target2: nop;nop;nop
vahole_target3: nop;nop;nop





SECTION .VaHOLEL_0 TEXT_VA = 0x00000000ffffe000
attr_text {
	Name	 = .VaHOLEL_0,
	RA	 = 0x00000000ffffe000,
	PA	 = ra2pa(0x00000000ffffe000,0),
	part_0_ctx_zero_tsb_config_0,
	part_0_ctx_nonzero_tsb_config_0,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0,
	TTE_X	 = 1,
	tsbonly
}

.text
	nop





SECTION .ZERO_0 TEXT_VA = 0x0000000000000000
attr_text {
	Name	 = .ZERO_0,
	RA	 = 0x0000000000000000,
	PA	 = ra2pa(0x0000000000000000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = 0x44,
	TTE_V	 = 1,
	TTE_Size	 = 3,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 1,
	TTE_X	 = 1
}


.text
	nop
    mov HIGHVA_HIGHNUM, %r11
    sllx %r11, 32, %r11
    or %r27, %r11, %r27
	jmpl %r27+8, %r0
	nop
	jmpl %r27+8, %r0
	nop

Power_On_Reset:
    setx HRedmode_Reset_Handler, %g1, %g2
    jmp %g2
    nop
.align 32

Watchdog_Reset:
    setx wdog_red_ext, %g1, %g2
    jmp %g2
    nop
.align 32

External_Reset:
    My_External_Reset

.align 32

Software_Initiated_Reset:
    setx Software_Reset_Handler, %g1, %g2
    jmp %g2
    nop

.align 32

RED_Mode_Other_Reset:
 ! IF TL=6, shift stack by one ..
    rdpr %tl, %l1
    cmp %l1, 6
    be start_tsa_shift
    nop

continue_red_other:
    mov 0x1f, %l1
    stxa    %l1, [%g0] ASI_LSU_CTL_REG

    rdpr %tt, %l1

    rdhpr %htstate, %l2
    and %l2, 0x4, %l2    ! If previously in hpriv mode, go to hpriv 
    brnz,a %l2, red_goto_handler
    rdhpr %htba, %l2
    srlx %l1, 7, %l2     ! Send priv sw traps to priv mode ..
    cmp %l2, 0x2         ! 0x2 = priv sw trap, 0x3=hpriv sw trap ..
    be,a red_goto_handler
    rdpr %tba, %l2
    rdhpr %htba, %l2
red_goto_handler:

    sllx %l1, 5, %l1
    add %l1, %l2, %l2
    rdhpr %hpstate, %l1
    jmp %l2
    wrhpr %l1, 0x20, %hpstate
    nop

wdog_red_ext:
 ! Shift stack down by 1 ...
    rdpr %tl, %l1
    cmp %l1, 6
    bl wdog_end
start_tsa_shift:
    mov 0x2, %l2

tsa_shift:
    wrpr %l2, %tl
    rdpr %tt, %l3
    rdpr %tpc, %l4
    rdpr %tnpc, %l5
    rdpr %tstate, %l6
    rdhpr %htstate, %l7
    dec %l2
    wrpr %l2, %tl
    wrpr %l3, %tt
    wrpr %l4, %tpc
    wrpr %l5, %tnpc
    wrpr %l6, %tstate
    wrhpr %l7, %htstate
    add %l2, 2, %l2
    cmp %l2, %l1
    ble tsa_shift
    nop
tsa_shift_done:
    dec %l1
    wrpr %l1, %tl

wdog_end:
 ! If TT != 2, then goto trap handler
    rdpr %tt, %l1

    cmp %l1, 0x2
    bne continue_red_other
    nop
 ! else done
    mov 0x1f, %l1
    stxa    %l1, [%g0] ASI_LSU_CTL_REG
    done





SECTION .VaHOLE_PA_0 TEXT_VA = 0x000000ffffffe000
attr_text {
	Name	 = .VAHOLE_PA_0,
	hypervisor
}

	nop
.align 4096
	nop
.align 2048
	nop
.align 1024
	nop
.align 512
	nop
.align 256
	nop
.align 128
	nop
.align 64
	nop
	nop
.align 16
	nop;nop;nop
	nop
	nop
	jmpl %r27+8, %r0
	nop
	nop
	nop
	jmpl %r27+8, %r0
	nop





SECTION .MASKEDHOLE_0 TEXT_VA = 0x0000000100000000
attr_text {
	Name	 = .MASKEDHOLE_0,
	RA	 = 0x0000000000000000,
	PA	 = ra2pa(0x0000000000000000,0),
	part_0_ctx_zero_tsb_config_3,
	part_0_ctx_nonzero_tsb_config_3,
	TTE_G	 = 1,
	TTE_Context	 = 0x44,
	TTE_V	 = 1,
	TTE_Size	 = 1,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 0,
	TTE_X	 = 1,
	tsbonly
}


attr_text {
	Name	 = .MASKEDHOLE_0,
	hypervisor
}

	mov HIGHVA_HIGHNUM, %r11
	sllx %r11, 32, %r11
	or %r27, %r11, %r27
	jmpl %r27+8, %r0
	nop





SECTION .MyFRZ_0 TEXT_VA = 0x000000003cb00000
attr_text {
	Name	 = .MyFRZ_0,
	RA	 = 0x000000003cb00000,
	PA	 = ra2pa(0x000000003cb00000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 0
}


.text
.global last_in_frz_1_0

    nop
.align 4096
    nop
.align 2048
    nop
.align 1024
    nop
.align 512
    nop
.align 256
    nop
.align 128
    nop
.align 64
    nop
.align 16
    nop; nop; ;nop; nop; nop; nop; nop; nop; nop; nop; nop
last_in_frz_1_0:
	.word 0xa17020a0  ! 1: POPC_I	popc	0x00a0, %r16



SECTION .MyFRZ_1 TEXT_VA = 0x000000003cb40000
attr_text {
	Name	 = .MyFRZ_1,
	RA	 = 0x000000003cb40000,
	PA	 = ra2pa(0x000000003cb40000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 1,
	TTE_W	 = 1
}


.text
.global last_in_frz_1_1

    nop
.align 4096
    nop
.align 2048
    nop
.align 1024
    nop
.align 512
    nop
.align 256
    nop
.align 128
    nop
.align 64
    nop
.align 16
    nop; nop; ;nop; nop; nop; nop; nop; nop; nop; nop; nop
last_in_frz_1_1:
	.word 0x0ccfc001  ! 1: BRGZ	brgz,pt  	%r31,<label_0xfc001>



SECTION .MyFRZ_2 TEXT_VA = 0x000000003cb80000
attr_text {
	Name	 = .MyFRZ_2,
	RA	 = 0x000000003cb80000,
	PA	 = ra2pa(0x000000003cb80000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 1,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 1,
	TTE_EP	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 0
}


.text
.global last_in_frz_1_2

    nop
.align 4096
    nop
.align 2048
    nop
.align 1024
    nop
.align 512
    nop
.align 256
    nop
.align 128
    nop
.align 64
    nop
.align 16
    nop; nop; ;nop; nop; nop; nop; nop; nop; nop; nop; nop
last_in_frz_1_2:
	.word 0xc11fe1e0  ! 1: LDDF_I	ldd	[%r31, 0x01e0], %f0



SECTION .MyFRZ_3 TEXT_VA = 0x000000003cbc0000
attr_text {
	Name	 = .MyFRZ_3,
	RA	 = 0x000000003cbc0000,
	PA	 = ra2pa(0x000000003cbc0000,0),
	part_0_ctx_zero_tsb_config_1,
	part_0_ctx_nonzero_tsb_config_1,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 1,
	TTE_EP	 = 0,
	TTE_E	 = 0,
	TTE_P	 = 1,
	TTE_W	 = 1
}


.text
.global last_in_frz_1_3

    nop
.align 4096
    nop
.align 2048
    nop
.align 1024
    nop
.align 512
    nop
.align 256
    nop
.align 128
    nop
.align 64
    nop
.align 16
    nop; nop; ;nop; nop; nop; nop; nop; nop; nop; nop; nop
last_in_frz_1_3:
	.word 0x1e800001  ! 1: BVC	bvc  	<label_0x1>





SECTION .MyFRZn_0 TEXT_VA = 0x000000003cb02000
attr_text {
	Name	 = .MyFRZn_0,
	RA	 = 0x000000003cb02000,
	PA	 = ra2pa(0x000000003cb02000,0),
	part_0_ctx_zero_tsb_config_2,
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 0,
	TTE_P	 = 0,
	TTE_W	 = 0
}

	nop
	nop
	jmpl %r27+8, %r0
	.word 0x9f802080  ! 1: SIR	sir	0x0080



SECTION .MyFRZn_1 TEXT_VA = 0x000000003cb42000
attr_text {
	Name	 = .MyFRZn_1,
	RA	 = 0x000000003cb42000,
	PA	 = ra2pa(0x000000003cb42000,0),
	part_0_ctx_zero_tsb_config_2,
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 1,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0
}

	nop
	nop
	jmpl %r27+8, %r0
	.word 0xe1bfdc00  ! 1: STDFA_R	stda	%f16, [%r0, %r31]



SECTION .MyFRZn_2 TEXT_VA = 0x000000003cb82000
attr_text {
	Name	 = .MyFRZn_2,
	RA	 = 0x000000003cb82000,
	PA	 = ra2pa(0x000000003cb82000,0),
	part_0_ctx_zero_tsb_config_2,
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 1,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0
}

	nop
	nop
	jmpl %r27+8, %r0
	.word 0x81a7c9a0  ! 1: FDIVs	fdivs	%f31, %f0, %f0



SECTION .MyFRZn_3 TEXT_VA = 0x000000003cbc2000
attr_text {
	Name	 = .MyFRZn_3,
	RA	 = 0x000000003cbc2000,
	PA	 = ra2pa(0x000000003cbc2000,0),
	part_0_ctx_zero_tsb_config_2,
	part_0_ctx_nonzero_tsb_config_2,
	TTE_G	 = 1,
	TTE_Context	 = PCONTEXT,
	TTE_V	 = 1,
	TTE_Size	 = 0,
	TTE_NFO	 = 0,
	TTE_IE	 = 0,
	TTE_Soft2	 = 0,
	TTE_Diag	 = 0,
	TTE_Soft	 = 0,
	TTE_L	 = 0,
	TTE_CP	 = 0,
	TTE_CV	 = 0,
	TTE_EP	 = 1,
	TTE_E	 = 1,
	TTE_P	 = 0,
	TTE_W	 = 0
}

	nop
	nop
	jmpl %r27+8, %r0
	.word 0xe0bfc3e0  ! 1: STDA_R	stda	%r16, [%r31 + %r0] 0x1f



#if 0
#endif

