// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: ccu_sysclk133.diaglist
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
<sys(ccu_clkratios_133) name=sys(ccu_clkratios_133)>

  <runargs -config_cpp_args=-DFSR_RTL=FSR_RTL -config_cpp_args=-DIDT_AMB>  // warning: these are required for both build args and run args
//<runargs -vcs_run_args=+SYSCLK_133>                                      // it's in fc.diaglist, but leave it for info.
  <runargs -midas_args=-DCMP_THREAD_START=0x1 -finish_mask=1>   // single thread (ie. thread 0)
  <runargs -midas_args=-DRESET_STAT_CHECK>                      // must specify this option when doing WMR reset
  <runargs -nofast_boot -vcs_run_args=+NO_CCU_CSR_SLAM -midas_args=-DCCU_REG_PROG -midas_args=-DWARM_RESET_INIT>
  <runargs -sas -midas_args=-DBOOTPROM_INIT>
  <runargs -vcs_run_args=+SSI_CLK_4 -vcs_run_args=+show_delta>
  <runargs -vcs_run_args=+mcu_errmon_disable -vcs_run_args=+mcu_fmon_disable -vcs_run_args=+l2esr_mon_off>
  <runargs -vcs_run_args=+ccu_checker>
  <runargs -max_cycle=3000000 -rtl_timeout=100000 -vcs_run_args=+skt_timeout=100000>  // default timeout: cycles=2000000, rtl=25000, socket=50000

     memop_all_atomics_CMPDR_RATIO_2_00_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_2_00
     memop_all_atomics_CMPDR_RATIO_2_25_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_2_25
     memop_all_atomics_CMPDR_RATIO_2_50_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_2_50
     memop_all_atomics_CMPDR_RATIO_2_75_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_2_75
     memop_all_atomics_CMPDR_RATIO_3_00_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_3_00
     memop_all_atomics_CMPDR_RATIO_3_25_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_3_25
     memop_all_atomics_CMPDR_RATIO_3_50_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_3_50
     memop_all_atomics_CMPDR_RATIO_3_75_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_3_75
     memop_all_atomics_CMPDR_RATIO_4_00_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_4_00
     memop_all_atomics_CMPDR_RATIO_4_25_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_4_25
     memop_all_atomics_CMPDR_RATIO_4_50_sysclk133	memop_all_atomics.s -midas_args=-DCMPDR_RATIO_4_50

  </runargs>
  </runargs>
  </runargs>
  </runargs>
  </runargs>
  </runargs>
  </runargs>
  </runargs>
//</runargs>
  </runargs>

</sys(ccu_clkratios_133)>

