// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: isa1.diaglist
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#if (! defined CCM && ! defined FC)

<sys(isa1)>
<sys(all)>
<sys(all_T2)>
<sys(isa1_st) name=sys(isa1_st)>
    isa1_noldst_fc_0513		isa1_noldst_fc_0513.s 
    lsu_align_raw		lsu_align_raw.s
    lsu_storeraw_fc_0		lsu_storeraw_fc_0.s
    spc_basic_isa2_fc_0		spc_basic_isa2_fc_0.s
    spc_mul_ldst		spc_mul_ldst.s
    spc_asi                 	spc_asi.s
    spc_flush0                 	spc_flush0.s
    ldst_atomic                	ldst_atomic.s
</sys(isa1_st)>

<sys(isa1_mt) name=sys(isa1_mt)>

#if (!defined FC)
<runargs -vcs_run_args=+thread=all>
#endif
#if (defined FC)
<runargs -midas_args=-DCMP_THREAD_START=all -finish_mask=all >
#endif

    
    //saveld1            saveld1.s
    biccgen            biccgen.s
    bpccgen            bpccgen.s
    bprgen             bprgen.s
    ifu_basic_bicc     ifu_basic_bicc.s
    ifu_basic_br1      ifu_basic_br1.s
    ifu_basic_br2      ifu_basic_br2.s
    ifu_basic_br       ifu_basic_br.s
    ifu_basic_ex1      ifu_basic_ex1.s
    ifu_basic_ex_raw   ifu_basic_ex_raw.s
    ifu_basic_mov      ifu_basic_mov.s 
    ifu_basic_branch   ifu_basic_branch.s
    lsu_cpqfill	       lsu_cpqfill.s
    spc_pmu_asr	       spc_pmu_asr.s	
    spc_tlu_rml_asr    spc_tlu_rml_asr.s
</runargs> // -vcs_run_args=+thread=all
</sys(isa1_mt)>

<sys(isa1_nospec) name=sys(isa1_nospec)>
<runargs -midas_args=-DNOSPEC_EN>
    ifu_basic_x			ifu_basic_x.s
    ifu_basic_branch		ifu_basic_branch.s
    biccgen                     biccgen.s
    bpccgen                     bpccgen.s
    bprgen                      bprgen.s
    isa1_noldst_fc_0513		isa1_noldst_fc_0513.s 
    spc_basic_isa2_fc_0		spc_basic_isa2_fc_0.s
</runargs> //  -midas_args=-DNOSPEC_EN
</sys(isa1_nospec)>
</sys(all_T2)>
</sys(all)>
</sys(isa1)>

#endif
