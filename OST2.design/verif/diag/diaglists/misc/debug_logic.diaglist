// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: debug_logic.diaglist
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
#ifndef NO_DEBUG_LOGIC

#ifdef SPC
<sys(debug)>

////////////////
// weekly (all)
////////////////
// <sys(all)>
// <sys(debug_regs) name=sys(debug_regs)>
//   debug_registers_1 debug_registers.s -vcs_run_args=+thread=1
//   debug_registers_2 debug_registers.s -vcs_run_args=+thread=2
//   debug_registers_4 debug_registers.s -vcs_run_args=+thread=4
//   debug_registers_8 debug_registers.s -vcs_run_args=+thread=8
//   debug_registers_10 debug_registers.s -vcs_run_args=+thread=10
//   debug_registers_20 debug_registers.s -vcs_run_args=+thread=20
//   debug_registers_40 debug_registers.s -vcs_run_args=+thread=40
//   debug_registers_80 debug_registers.s -vcs_run_args=+thread=80
// </sys(debug_regs)>
// </sys(all)>

////////////////
// DO mode only
////////////////
<sys(debug_doMode) name=sys(debug_doMode)>

<sys(all)>
<sys(nightly)>

<runargs -vcs_run_args=+doModeFreq=2200 -vcs_run_args=+doModeLenMin=200 -vcs_run_args=+doModeLenMax=600 -vcs_run_args=+TIMEOUT=2000000 -max_cycle=2000000 -vcs_run_args=+skt_timeout=2000000>

// passing DO mode

//<nocmp name=nocmp>
<runargs -vcs_run_args=+thread=all -midas_args=-DMULTIPASS=1>
nocmp_rand_0    nocmp_rand_0.s
nocmp_rand_2    nocmp_rand_2.s
nocmp_rand_3    nocmp_rand_3.s
nocmp_rand_4    nocmp_rand_4.s
nocmp_rand_5    nocmp_rand_5.s
nocmp_rand_6    nocmp_rand_6.s
nocmp_rand_7    nocmp_rand_7.s
nocmp_rand_8    nocmp_rand_8.s
nocmp_rand_9    nocmp_rand_9.s
</runargs>



//----------------------------------------
//---tsotool diag
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -vcs_run_args=+TIMEOUT=2000000 -max_cycle=+3000000 -midas_args=-allow_tsb_conflicts>
n2_8tcasxa_2 n2_8tcasxa_2.s
n2_8tcasxa_5 n2_8tcasxa_5.s
n2_8t_ldst1_7 n2_8t_ldst1_7.s
n2_8t_bstbld_1 n2_8t_bstbld_1.s
n2_8t_bstbld_10 n2_8t_bstbld_10.s
</runargs>

//---ccx diag
<runargs -fast_boot -midas_args=-allow_tsb_conflicts -max_cycle=+3000000 -vcs_run_args=+TIMEOUT=10000 -midas_args=-DCMP_THREAD_START=ALL -finish_mask=all -midas_args=-DCREGS_LSU_CTL_REG_DC=0 -midas_args=-DCREGS_LSU_CTL_REG_IC=0  -vcs_run_args=+l2esr_mon_off -midas_args=-DPART_0_BASE=0x200000000 -vcs_run_args=+8_FBDIMMS -midas_args=-DL2_REG_PROG -vcs_run_args=+DISABLE_OOB_CHECK -vcs_run_args=+ios_0in_ras_chk_off -vcs_run_args=+l2cpx_errmon_off>
n2_cpx_fill_io_8b n2_cpx_fill_io_8b.s
</runargs>


//----------------------------------------
//---MPGen diags
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -midas_args=-allow_tsb_conflicts>
mpgen_semi_full_isa_1   mpgen_semi_full_isa_1.s  
mpgen_semi_full_isa_2   mpgen_semi_full_isa_2.s  
mpgen_semi_full_isa_3   mpgen_semi_full_isa_3.s  
mpgen_ldst_mix          mpgen_ldst_mix.s       
mpgen_ldst_int_no_asi   mpgen_ldst_int_no_asi.s
mpgen_ldst_all_l2_banks mpgen_ldst_all_l2_banks.s
</runargs>

//----------------------------------------
//---KAOS diags
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -midas_args=-allow_tsb_conflicts>
fc_kaos_0         fc_kaos_0.s
fc_kaos_1         fc_kaos_1.s
fc_kaos_2         fc_kaos_2.s
fc_kaos_fgu_3     fc_kaos_fgu_3.s
fc_kaos_fgu_4     fc_kaos_fgu_4.s
</runargs>


  exu_irf_global_n2  exu_irf_global_n2.s

<runargs -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all -vcs_run_args =+l2lat_value=12>
        ifu_8th_kaos_06_07_04_500       ifu_8th_kaos_06_07_04_500.s
	ifu_bicc_kaos_12_05_04_113	ifu_bicc_kaos_12_05_04_113.s
        ifu_cmp_demap_kaos_08_10_108	ifu_cmp_demap_kaos_08_10_108.s  -rtl_timeout=2000000
	ifu_kaos_05_02_04_500		ifu_kaos_05_02_04_500.s
</runargs>


<runargs -vcs_run_args=+thread=all>
    isa3_asr_pr_hpr_f2	isa3_asr_pr_hpr_f2.s
    isa3_basic0_f0		isa3_basic0_f0.s
    isa3_fsr0_f0		isa3_fsr0_f0.s
</runargs>

<runargs -nosas -midas_args=-DNOPMUENABLE>
        isa3_pmu_cpu_ldst       isa3_pmu_cpu_ldst.s
</runargs>

<runargs -vcs_run_args=+thread=all -midas_args=-DTHREAD_COUNT=ALL_THREADS>
   isa3_scratchpad_f1	isa3_scratchpad_f1.s
</runargs>

<runargs -sas  -rtl_timeout=5000000  -max_cycle=5000000 -vcs_run_args=+skt_timeout=5000000>
    isa3_spu_cwq21_32c_tcp_sync         isa3_spu_cwq21_32c_tcp_sync.s
        isa3_spu_cwq2_des_121503            isa3_spu_cwq2_des_121503.s
</runargs>

<runargs -vcs_run_args=+thread=all -sas -midas_args=-allow_tsb_conflicts>
    ld_blk                ld_blk.s
    ldst_sync_fc11        ldst_sync_fc11.s -vcs_run_args=+inval_rate=300
    saveld1               saveld1.s
</runargs>

<runargs -sas -vcs_run_args=+thread=1f -midas_args=-DTSB_SEARCH_BURST>
   mmu_mt_asi_cp_burst	     mmu_mt_asi_cp.s  
   mmu_mt_hwtw_demap_burst         mmu_mt_hwtw_demap.s
</runargs>

<runargs -sas -vcs_run_args=+thread=all>
   mmu_mt_demap_page         mmu_mt_demap_page.s
</runargs>

<runargs -sas -vcs_run_args=+thread=all -midas_args=-DTSB_SEARCH_PREDICTION>
   mmu_mt_realrange_0_prediction        mmu_mt_realrange_0.s
</runargs>

<runargs  -vcs_run_args=+thread=all -vcs_run_args=+th_timeout=2000000 -tg_seed=1 -midas_args=-ld_args=-N -midas_args=-allow_tsb_conflicts -vcs_run_args=+err_sync_on>
   mmu_random_3           mmu_random_3.s
</runargs>


<runargs -vcs_run_args=+TIMEOUT=5000000 -vcs_run_args=+skt_timeout=5000000 -max_cycle=+5000000>
  spu_aes_pmu_sel6 spu_aes_pmu_sel6.s -vcs_run_args=+thread=ff -nosas -midas_args=-DNOPMUENABLE
</runargs>


    tlu_iaw_range_1       tlu_iaw_range.s -vcs_run_args=+thread=11
    tlu_rand04_ind_20   tlu_rand04_ind_20.s
    tlu_rand05_ind_03   tlu_rand05_ind_03.s
// <runargs -vcs_run_args=+thread=all>
//     tlu_tba_htba_range  tlu_tba_htba_range.s
// </runargs>

</runargs> // doModeFreq

  ifu_cmp_07_30_04_11	ifu_cmp_07_30_04_11.s -sas  -vcs_run_args=+0in_no_checksim_db -vcs_run_args=+0in_no_statistics -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all -vcs_run_args=+l2lat_value=12 -rtl_timeout=2000000 -vcs_run_args=+inval_rate=1000  -vcs_run_args=+doModeFreq=2200 -vcs_run_args=+doModeLenMin=300 -vcs_run_args=+doModeLenMax=1000 -vcs_run_args=+TIMEOUT=2000000

  isa3_spu_ma_pm	isa3_spu_ma_pm.s -sas  -vcs_run_args=+0in_no_checksim_db -vcs_run_args=+0in_no_statistics -sas -rtl_timeout=5000000 -max_cycle=5000000 -vcs_run_args=+skt_timeout=5000000 -drm_cpufreq="1200 .."  -vcs_run_args=+doModeFreq=2200 -vcs_run_args=+doModeLenMin=300 -vcs_run_args=+doModeLenMax=1000 -vcs_run_args=+TIMEOUT=5000000

  tlu_rand05_ind_06_20_6	tlu_rand05_ind_06_20_6.s -sas -vcs_run_args=+0in_no_checksim_db -vcs_run_args=+0in_no_statistics -vcs_run_args=+noredwdrkill -vcs_run_args=+thread=all -vcs_run_args=+err_ic_on  -vcs_run_args=+doModeFreq=2200 -vcs_run_args=+doModeLenMin=300 -vcs_run_args=+doModeLenMax=1000 -vcs_run_args=+TIMEOUT=2000000

///////////////////////
// failing
///////////////////////
  
</sys(nightly)>
</sys(all)>
</sys(debug_doMode)>


////////////////
// SS mode only
////////////////
<sys(debug_ssMode) name=sys(debug_ssMode)>
<sys(all)>
<sys(nightly)>

<runargs -vcs_run_args=+ssModeFreq=2500 -vcs_run_args=+ssModeMaxSessions=20 -vcs_run_args=+ssModeBurstMin=20 -vcs_run_args=+ssModeBurstMax=250 -vcs_run_args=+TIMEOUT=2000000 -max_cycle=2000000 -vcs_run_args=+skt_timeout=2000000>

//////////////
/////////////


//<nocmp name=nocmp>
<runargs -vcs_run_args=+thread=all -midas_args=-DMULTIPASS=1>
nocmp_rand_0    nocmp_rand_0.s
nocmp_rand_1    nocmp_rand_1.s
nocmp_rand_2    nocmp_rand_2.s
nocmp_rand_3    nocmp_rand_3.s
nocmp_rand_4    nocmp_rand_4.s
nocmp_rand_5    nocmp_rand_5.s
nocmp_rand_6    nocmp_rand_6.s
nocmp_rand_7    nocmp_rand_7.s
nocmp_rand_8    nocmp_rand_8.s
nocmp_rand_9    nocmp_rand_9.s
</runargs>


//----------------------------------------
//---tsotool diag
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -vcs_run_args=+TIMEOUT=2000000 -max_cycle=+3000000 -midas_args=-allow_tsb_conflicts>
// n2_8tcasxa_2 n2_8tcasxa_2.s
// n2_8tcasxa_5 n2_8tcasxa_5.s
// n2_8t_ldst1_7 n2_8t_ldst1_7.s
n2_8t_bstbld_1 n2_8t_bstbld_1.s
n2_8t_bstbld_10 n2_8t_bstbld_10.s
</runargs>

//---ccx diag
<runargs -fast_boot -midas_args=-allow_tsb_conflicts -max_cycle=+3000000 -vcs_run_args=+TIMEOUT=10000 -midas_args=-DCMP_THREAD_START=ALL -finish_mask=all -midas_args=-DCREGS_LSU_CTL_REG_DC=0 -midas_args=-DCREGS_LSU_CTL_REG_IC=0  -vcs_run_args=+l2esr_mon_off -midas_args=-DPART_0_BASE=0x200000000 -vcs_run_args=+8_FBDIMMS -midas_args=-DL2_REG_PROG -vcs_run_args=+DISABLE_OOB_CHECK -vcs_run_args=+ios_0in_ras_chk_off -vcs_run_args=+l2cpx_errmon_off>
n2_cpx_fill_io_8b n2_cpx_fill_io_8b.s
</runargs>


//----------------------------------------
//---MPGen diags
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -midas_args=-allow_tsb_conflicts>
mpgen_semi_full_isa_1   mpgen_semi_full_isa_1.s  
// mpgen_semi_full_isa_2   mpgen_semi_full_isa_2.s  
// mpgen_semi_full_isa_3   mpgen_semi_full_isa_3.s  
// mpgen_ldst_mix          mpgen_ldst_mix.s       
// mpgen_ldst_int_no_asi   mpgen_ldst_int_no_asi.s
mpgen_ldst_all_l2_banks mpgen_ldst_all_l2_banks.s
</runargs>

//----------------------------------------
//---KAOS diags
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -midas_args=-allow_tsb_conflicts>
fc_kaos_0         fc_kaos_0.s
// fc_kaos_1         fc_kaos_1.s
// fc_kaos_2         fc_kaos_2.s
// fc_kaos_fgu_3     fc_kaos_fgu_3.s
// fc_kaos_fgu_4     fc_kaos_fgu_4.s
</runargs>


  exu_irf_global_n2  exu_irf_global_n2.s

<runargs -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all -vcs_run_args =+l2lat_value=12>
        ifu_8th_kaos_06_07_04_500       ifu_8th_kaos_06_07_04_500.s
	ifu_bicc_kaos_12_05_04_113	ifu_bicc_kaos_12_05_04_113.s
        ifu_cmp_demap_kaos_08_10_108	ifu_cmp_demap_kaos_08_10_108.s  -rtl_timeout=2000000
	ifu_kaos_05_02_04_500		ifu_kaos_05_02_04_500.s
</runargs>


<runargs -vcs_run_args=+thread=all>
    isa3_asr_pr_hpr_f2	isa3_asr_pr_hpr_f2.s
    isa3_basic0_f0		isa3_basic0_f0.s
    isa3_fsr0_f0		isa3_fsr0_f0.s
</runargs>

<runargs -nosas -midas_args=-DNOPMUENABLE>
        isa3_pmu_cpu_ldst       isa3_pmu_cpu_ldst.s
</runargs>

<runargs -vcs_run_args=+thread=all -midas_args=-DTHREAD_COUNT=ALL_THREADS>
   isa3_scratchpad_f1	isa3_scratchpad_f1.s
</runargs>

<runargs -sas  -rtl_timeout=5000000  -max_cycle=5000000 -vcs_run_args=+skt_timeout=5000000>
    isa3_spu_cwq21_32c_tcp_sync         isa3_spu_cwq21_32c_tcp_sync.s
        isa3_spu_cwq2_des_121503            isa3_spu_cwq2_des_121503.s
</runargs>

<runargs -vcs_run_args=+thread=all -sas -midas_args=-allow_tsb_conflicts>
    ld_blk                ld_blk.s
    ldst_sync_fc11        ldst_sync_fc11.s -vcs_run_args=+inval_rate=300
    saveld1               saveld1.s
</runargs>

<runargs -sas -vcs_run_args=+thread=1f -midas_args=-DTSB_SEARCH_BURST>
   mmu_mt_asi_cp_burst	     mmu_mt_asi_cp.s  
   mmu_mt_hwtw_demap_burst         mmu_mt_hwtw_demap.s
</runargs>

<runargs -sas -vcs_run_args=+thread=all>
   mmu_mt_demap_page         mmu_mt_demap_page.s
</runargs>

<runargs -sas -vcs_run_args=+thread=all -midas_args=-DTSB_SEARCH_PREDICTION>
   mmu_mt_realrange_0_prediction        mmu_mt_realrange_0.s
</runargs>

<runargs  -vcs_run_args=+thread=all -vcs_run_args=+th_timeout=2000000 -tg_seed=1 -midas_args=-ld_args=-N -midas_args=-allow_tsb_conflicts -vcs_run_args=+err_sync_on>
   mmu_random_3           mmu_random_3.s
</runargs>

    tlu_iaw_range_1       tlu_iaw_range.s -vcs_run_args=+thread=11
    tlu_rand04_ind_20   tlu_rand04_ind_20.s
    tlu_rand05_ind_03   tlu_rand05_ind_03.s
// <runargs -vcs_run_args=+thread=all>
//     tlu_tba_htba_range  tlu_tba_htba_range.s
// </runargs>

</runargs> // ssModeFreq

</sys(nightly)>
</sys(all)>
</sys(debug_ssMode) name=sys(debug_ssMode)>



////////////////
// Soft mode only
////////////////
<sys(debug_softMode) name=sys(debug_softMode)>
<sys(all)>
<sys(nightly)>

<runargs -vcs_run_args=+softStopFreq=2200 -vcs_run_args=+TIMEOUT=2000000 -max_cycle=2000000 -vcs_run_args=+skt_timeout=2000000>

// passing soft stop mode


//<nocmp name=nocmp>
<runargs -vcs_run_args=+thread=all -midas_args=-DMULTIPASS=1>
nocmp_rand_0    nocmp_rand_0.s
nocmp_rand_1    nocmp_rand_1.s
nocmp_rand_2    nocmp_rand_2.s
nocmp_rand_3    nocmp_rand_3.s
nocmp_rand_4    nocmp_rand_4.s
nocmp_rand_5    nocmp_rand_5.s
nocmp_rand_6    nocmp_rand_6.s
nocmp_rand_7    nocmp_rand_7.s
nocmp_rand_8    nocmp_rand_8.s
nocmp_rand_9    nocmp_rand_9.s
</runargs>

//----------------------------------------
//---tsotool diag
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -vcs_run_args=+TIMEOUT=2000000 -max_cycle=+3000000 -midas_args=-allow_tsb_conflicts>
n2_8tcasxa_2 n2_8tcasxa_2.s
n2_8tcasxa_5 n2_8tcasxa_5.s
n2_8t_ldst1_7 n2_8t_ldst1_7.s
n2_8t_bstbld_10 n2_8t_bstbld_10.s
</runargs>

//---ccx diag
<runargs -fast_boot -midas_args=-allow_tsb_conflicts -max_cycle=+3000000 -vcs_run_args=+TIMEOUT=10000 -midas_args=-DCMP_THREAD_START=ALL -finish_mask=all -midas_args=-DCREGS_LSU_CTL_REG_DC=0 -midas_args=-DCREGS_LSU_CTL_REG_IC=0  -vcs_run_args=+l2esr_mon_off -midas_args=-DPART_0_BASE=0x200000000 -vcs_run_args=+8_FBDIMMS -midas_args=-DL2_REG_PROG -vcs_run_args=+DISABLE_OOB_CHECK -vcs_run_args=+ios_0in_ras_chk_off -vcs_run_args=+l2cpx_errmon_off>
n2_cpx_fill_io_8b n2_cpx_fill_io_8b.s
</runargs>


//----------------------------------------
//---MPGen diags
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -midas_args=-allow_tsb_conflicts>
mpgen_semi_full_isa_1   mpgen_semi_full_isa_1.s  
mpgen_semi_full_isa_2   mpgen_semi_full_isa_2.s  
mpgen_semi_full_isa_3   mpgen_semi_full_isa_3.s  
mpgen_ldst_mix          mpgen_ldst_mix.s       
mpgen_ldst_int_no_asi   mpgen_ldst_int_no_asi.s
mpgen_ldst_all_l2_banks mpgen_ldst_all_l2_banks.s
</runargs>

//----------------------------------------
//---KAOS diags
<runargs -vcs_run_args=+finish_mask=all -midas_args=-DCMP_THREAD_START=ALL -midas_args=-allow_tsb_conflicts>
fc_kaos_0         fc_kaos_0.s
fc_kaos_1         fc_kaos_1.s
fc_kaos_2         fc_kaos_2.s
fc_kaos_fgu_3     fc_kaos_fgu_3.s
fc_kaos_fgu_4     fc_kaos_fgu_4.s
</runargs>


  exu_irf_global_n2  exu_irf_global_n2.s

<runargs -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all -vcs_run_args =+l2lat_value=12>
        ifu_8th_kaos_06_07_04_500       ifu_8th_kaos_06_07_04_500.s
	ifu_bicc_kaos_12_05_04_113	ifu_bicc_kaos_12_05_04_113.s
        ifu_cmp_demap_kaos_08_10_108	ifu_cmp_demap_kaos_08_10_108.s  -rtl_timeout=2000000
	ifu_kaos_05_02_04_500		ifu_kaos_05_02_04_500.s
</runargs>


<runargs -vcs_run_args=+thread=all>
    isa3_asr_pr_hpr_f2	isa3_asr_pr_hpr_f2.s
    isa3_basic0_f0		isa3_basic0_f0.s
    isa3_fsr0_f0		isa3_fsr0_f0.s
</runargs>

<runargs -nosas -midas_args=-DNOPMUENABLE>
        isa3_pmu_cpu_ldst       isa3_pmu_cpu_ldst.s
</runargs>

<runargs -vcs_run_args=+thread=all -midas_args=-DTHREAD_COUNT=ALL_THREADS>
   isa3_scratchpad_f1	isa3_scratchpad_f1.s
</runargs>

<runargs -sas  -rtl_timeout=5000000  -max_cycle=5000000 -vcs_run_args=+skt_timeout=5000000>
    isa3_spu_cwq21_32c_tcp_sync         isa3_spu_cwq21_32c_tcp_sync.s
        isa3_spu_cwq2_des_121503            isa3_spu_cwq2_des_121503.s
</runargs>

<runargs -vcs_run_args=+thread=all -sas -midas_args=-allow_tsb_conflicts>
    ld_blk                ld_blk.s
    ldst_sync_fc11        ldst_sync_fc11.s -vcs_run_args=+inval_rate=300
    saveld1               saveld1.s
</runargs>

<runargs -sas -vcs_run_args=+thread=1f -midas_args=-DTSB_SEARCH_BURST>
   mmu_mt_asi_cp_burst	     mmu_mt_asi_cp.s  
   mmu_mt_hwtw_demap_burst         mmu_mt_hwtw_demap.s
</runargs>

<runargs -sas -vcs_run_args=+thread=all>
   mmu_mt_demap_page         mmu_mt_demap_page.s
</runargs>

<runargs -sas -vcs_run_args=+thread=all -midas_args=-DTSB_SEARCH_PREDICTION>
   mmu_mt_realrange_0_prediction        mmu_mt_realrange_0.s
</runargs>

<runargs  -vcs_run_args=+thread=all -vcs_run_args=+th_timeout=2000000 -tg_seed=1 -midas_args=-ld_args=-N -midas_args=-allow_tsb_conflicts -vcs_run_args=+err_sync_on>
   mmu_random_3           mmu_random_3.s
</runargs>

<runargs -vcs_run_args=+TIMEOUT=5000000 -vcs_run_args=+skt_timeout=5000000 -max_cycle=+50000000>
  spu_aes_pmu_sel6 spu_aes_pmu_sel6.s -vcs_run_args=+thread=ff -nosas -midas_args=-DNOPMUENABLE
</runargs>


    tlu_iaw_range_1       tlu_iaw_range.s -vcs_run_args=+thread=11
    tlu_rand04_ind_20   tlu_rand04_ind_20.s
    tlu_rand05_ind_03   tlu_rand05_ind_03.s
// <runargs -vcs_run_args=+thread=all>
//     tlu_tba_htba_range  tlu_tba_htba_range.s
// </runargs>

</runargs> // StopFreq


  ldst_sync_fc19	ldst_sync_fc19.s -sas -vcs_run_args=+0in_no_checksim_db -vcs_run_args=+0in_no_statistics -vcs_run_args=+thread=all -sas -midas_args=-allow_tsb_conflicts -vcs_run_args=+inval_rate=500 -vcs_run_args=+softStopFreq=2200 -vcs_run_args=+TIMEOUT=2000000 -vcs_run_args=+skt_timeout=2000000

  ifu_cmp_07_30_04_11	ifu_cmp_07_30_04_11.s -sas -vcs_run_args=+0in_no_checksim_db -vcs_run_args=+0in_no_statistics -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all -vcs_run_args=+l2lat_value=12 -rtl_timeout=2000000 -vcs_run_args=+inval_rate=1000 -sunv_run -vcs_run_args=+softStopFreq=2200 -vcs_run_args=+TIMEOUT=2000000 -vcs_run_args=+skt_timeout=2000000


  
</sys(nightly)>
</sys(all)>
</sys(debug_softMode) name=sys(debug_softMode)>



</sys(debug)>

#endif
#endif
