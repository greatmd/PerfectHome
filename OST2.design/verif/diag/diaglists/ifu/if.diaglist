// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T2 Processor File: if.diaglist
// Copyright (C) 1995-2007 Sun Microsystems, Inc. All Rights Reserved
// 4150 Network Circle, Santa Clara, California 95054, U.S.A.
//
// * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// 
// For the avoidance of doubt, and except that if any non-GPL license 
// choice is available it will apply instead, Sun elects to use only 
// the General Public License version 2 (GPLv2) at this time for any 
// software where a choice of GPL license versions is made 
// available with the language indicating that GPLv2 or any later version 
// may be used, or where a choice of which version of the GPL is applied is 
// otherwise unspecified. 
//
// Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara, 
// CA 95054 USA or visit www.sun.com if you need additional information or 
// have any questions. 
// 
// ========== Copyright Header End ============================================
<sys(ifu)>
<sys(all)>
<sys(nightly)>

#if ((! defined CCM && ! defined FC) || defined ALL_DIAGS)

<sys(ifu_1th) name=sys(ifu_1th)>
<runargs -midas_args=-allow_tsb_conflicts>
	ifu_kaos_04_07_04_1	ifu_kaos_04_07_04_1.s
	ifu_addr_hole_indra_01_rand_0	ifu_addr_hole_indra_01_rand_0.s
	ifu_ic_toggle_kaos_05_25_04_500	ifu_ic_toggle_kaos_05_25_04_500.s
	
</runargs>
</sys(ifu_1th)>

<sys(ifu_ras) name=sys(ifu_ras)>
<runargs -midas_args=-DNOERRCHK -vcs_run_args=+notlb_sync -sas_run_args=-DNOTLB_SYNC -vcs_run_args=+err_sync_on -vcs_run_args=+err_chkrs_off -vcs_run_args=+noDebugModes>
	ifu_asi_tag_ldst_0	ifu_asi_tag_ldst.s  -vcs_run_args=+icache_chkr_off
	ifu_asi_icache_instr_ldst_1	ifu_asi_icache_instr_ldst.s -vcs_run_args=+thread=02

	ifu_asi_icache_instr_0		ifu_asi_icache_instr_0.s  -vcs_run_args=+thread=04
	ifu_asi_icache_instr_1		ifu_asi_icache_instr_1.s  -vcs_run_args=+thread=08

	ifu_asi_icache_instr_trap_0	ifu_asi_icache_instr_trap.s 
	ifu_asi_icache_instr_trap_1	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=02
	ifu_asi_icache_instr_trap_2	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=04
	ifu_asi_icache_instr_trap_3	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=08
	ifu_asi_icache_instr_trap_4	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=10
	ifu_asi_icache_instr_trap_5	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=20
	ifu_asi_icache_instr_trap_6	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=40
	ifu_asi_icache_instr_trap_7	ifu_asi_icache_instr_trap.s  -vcs_run_args=+thread=80


	ifu_asi_icache_tag_0 		ifu_asi_icache_tag_0.s  -vcs_run_args=+thread=20
	ifu_asi_icache_tag_1 		ifu_asi_icache_tag_1.s  -vcs_run_args=+thread=10

	ifu_asi_icache_tag_trap_0	ifu_asi_icache_tag_trap.s  
	ifu_asi_icache_tag_trap_1	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=02
	ifu_asi_icache_tag_trap_2	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=04
	ifu_asi_icache_tag_trap_3	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=08
	ifu_asi_icache_tag_trap_4	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=10
	ifu_asi_icache_tag_trap_5	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=20
	ifu_asi_icache_tag_trap_6	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=40
	ifu_asi_icache_tag_trap_7	ifu_asi_icache_tag_trap.s  -vcs_run_args=+thread=80


	ifu_asi_icache_mhit_0		ifu_asi_icache_mhit_0.s  -vcs_run_args=+thread=40 -nosas 

	ifu_asi_icache_mhit_1		ifu_asi_icache_mhit_1.s  -vcs_run_args=+thread=80
	//removing the diag. It is a multi hit diag that rleis upon the fact that line
	//will always be loaded in way 0-6. In this case the line gets loaded
	
	
	//ifu_asi_icache_mhit_trap_0	ifu_asi_icache_mhit_trap.s 
	ifu_asi_icache_mhit_trap_1	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=02
	ifu_asi_icache_mhit_trap_2	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=04
	ifu_asi_icache_mhit_trap_3	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=08
	ifu_asi_icache_mhit_trap_4	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=10
	ifu_asi_icache_mhit_trap_5	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=20
	ifu_asi_icache_mhit_trap_6	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=40
	ifu_asi_icache_mhit_trap_7	ifu_asi_icache_mhit_trap.s  -vcs_run_args=+thread=80

	ifu_asi_icache_valid_0_0	ifu_asi_icache_valid_0.s  -nosas	
	ifu_asi_icache_valid_1_1	ifu_asi_icache_valid_1.s  -vcs_run_args=+thread=02
	ifu_asi_icache_valid_trap_0	ifu_asi_icache_valid_trap.s 
	ifu_asi_icache_valid_trap_1	ifu_asi_icache_valid_trap.s   -vcs_run_args=+thread=02
	ifu_asi_icache_valid_trap_2	ifu_asi_icache_valid_trap.s  -vcs_run_args=+thread=04
	ifu_asi_icache_valid_trap_3	ifu_asi_icache_valid_trap.s   -vcs_run_args=+thread=08
	ifu_asi_icache_valid_trap_4	ifu_asi_icache_valid_trap.s  -vcs_run_args=+thread=10
	ifu_asi_icache_valid_trap_5	ifu_asi_icache_valid_trap.s   -vcs_run_args=+thread=20
	ifu_asi_icache_valid_trap_6	ifu_asi_icache_valid_trap.s  -vcs_run_args=+thread=40
	ifu_asi_icache_valid_trap_7	ifu_asi_icache_valid_trap.s  -vcs_run_args=+thread=80
</runargs>
</sys(ifu_ras)>

#ifdef SPC

<sys(ifu_ras1) name=sys(ifu_ras1)>
<runargs -vcs_run_args=+err_sync_on -vcs_run_args=+err_chkrs_off -vcs_run_args=+noDebugModes>
	err_ittp_diag_0	err_ittp_diag.s  
	err_ittp_diag_1	err_ittp_diag.s  -vcs_run_args=+thread=02
	err_ittp_diag_2	err_ittp_diag.s  -vcs_run_args=+thread=04
	err_ittp_diag_3	err_ittp_diag.s  -vcs_run_args=+thread=08
	err_ittp_diag_4	err_ittp_diag.s  -vcs_run_args=+thread=10
	err_ittp_diag_5	err_ittp_diag.s  -vcs_run_args=+thread=20
	err_ittp_diag_6	err_ittp_diag.s  -vcs_run_args=+thread=40
	err_ittp_diag_7	err_ittp_diag.s  -vcs_run_args=+thread=80
	
	err_ittp_mt	err_ittp_mt.s  -vcs_run_args=+thread=0f   -midas_args=-DNOERRCHK
	
	err_itdp_diag_0	err_itdp_diag.s  
	err_itdp_diag_1	err_itdp_diag.s  -vcs_run_args=+thread=02
	err_itdp_diag_2	err_itdp_diag.s  -vcs_run_args=+thread=04
	err_itdp_diag_3	err_itdp_diag.s  -vcs_run_args=+thread=08
	err_itdp_diag_4	err_itdp_diag.s  -vcs_run_args=+thread=10
	err_itdp_diag_5	err_itdp_diag.s  -vcs_run_args=+thread=20
	err_itdp_diag_6	err_itdp_diag.s  -vcs_run_args=+thread=40
	err_itdp_diag_7	err_itdp_diag.s  -vcs_run_args=+thread=80
	
	err_itdp_mt	err_itdp_mt.s  -vcs_run_args=+thread=0f -midas_args=-DNOERRCHK 
	err_ic_err_inv  err_ic_err_inv.s  -vcs_run_args=+icache_chkr_off

	err_icdp_forward_progress      err_icdp_forward_progress.s
	err_ictp_forward_progress      err_ictp_forward_progress.s
	err_icmh_forward_progress      err_icmh_forward_progress.s

	bug_118910_a			bug_118910_a.s 
	bug_118910_b			bug_118910_b.s
	bug_118910_c			bug_118910_c.s 
	bug_118910_d			bug_118910_d.s
</runargs>

<runargs -midas_args=-DNOERRCHK -vcs_run_args=+noDebugModes>
        err_itl2c_diag      err_itl2c_diag.s -vcs_run_args=+thread=0f
        err_itl2u_diag      err_itl2u_diag.s -vcs_run_args=+thread=0f
        err_itl2nd_diag      err_itl2nd_diag.s  -vcs_run_args=+thread=0f
        err_itl2c_mt      err_itl2c_mt.s -vcs_run_args=+thread=f0
        err_itl2u_mt      err_itl2u_mt.s -vcs_run_args=+thread=f0
        err_itl2nd_mt      err_itl2nd_mt.s  -vcs_run_args=+thread=f0
</runargs>
	bug_114119         bug_114119.s -vcs_run_args=+thread=all -nosas
</sys(ifu_ras1)>

#endif

<sys(ifu_2th) name=sys(ifu_2th)>
<runargs  -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=03>

</runargs>
</sys(ifu_2th)>

<sys(ifu_4th) name=sys(ifu_4th)> 
<runargs -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=0f>
</runargs>
</sys(ifu_4th)>


<sys(ifu_directed) name=sys(ifu_directed)> 
<runargs -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all>
  backToBackPacketsCacheable          backToBackPacketsCacheable.s
  backToBackPacketsNonCacheable       backToBackPacketsNonCacheable.s
  backToBackPacketsCacheInterleaved   backToBackPacketsCacheInterleaved.s
</runargs>
</sys(ifu_directed)>

<sys(ifu_8th)  name=sys(ifu_8th)>
<runargs -midas_args=-allow_tsb_conflicts -vcs_run_args=+thread=all -vcs_run_args=+l2lat_value=12> 
	ifu_8th_sp_kaos_03_10_04_1	ifu_8th_sp_kaos_03_10_04_1.s
	ifu_8th_sp_kaos_04_05_04_1	ifu_8th_sp_kaos_04_05_04_1.s
	ifu_br_05_10_04_297		ifu_br_05_10_04_297.s
	ifu_kaos_05_06_04_500		ifu_kaos_05_06_04_500.s
	ifu_kaos_05_02_04_500		ifu_kaos_05_02_04_500.s
	ifu_kaos_05_05_04_216		ifu_kaos_05_05_04_216.s
	ifu_kaos_04_28_04_5		ifu_kaos_04_28_04_5.s
	ifu_kaos_04_28_04_1		ifu_kaos_04_28_04_1.s
	ifu_jmpl_kaos_12_05_04_100	ifu_jmpl_kaos_12_05_04_100.s
	ifu_ic_toggle_kaos_8th_05_19_04_4	ifu_ic_toggle_kaos_8th_05_19_04_4.s
	ifu_ic_toggle_kaos_8th_05_19_04_180	ifu_ic_toggle_kaos_8th_05_19_04_180.s
	ifu_br_kaos_12_05_04_167	ifu_br_kaos_12_05_04_167.s
	ifu_jmpl_kaos_05_22_04_0	ifu_jmpl_kaos_05_22_04_0.s
	ifu_jmpl_kaos_05_23_04_1	ifu_jmpl_kaos_05_23_04_1.s
	ifu_bicc_kaos_12_05_04_94	ifu_bicc_kaos_12_05_04_94.s
	ifu_bicc_kaos_12_05_04_113	ifu_bicc_kaos_12_05_04_113.s
	ifu_sp_kaos_05_05_04_81		ifu_sp_kaos_05_05_04_81.s
	ifu_jmpl_kaos_05_28_04_5	ifu_jmpl_kaos_05_28_04_5.s
	ifu_8th_kaos_06_07_04_500	ifu_8th_kaos_06_07_04_500.s		

	ifu_all_rmw_01_indra_rand_0	ifu_all_rmw_01_indra_rand_0.s
	ifu_br_ap_01_indra_0		ifu_br_ap_01_indra_0.s
	ifu_br_delay_coupling_rand_0	ifu_br_delay_coupling_rand_0.s
	ifu_demap_kaos_07_26_04_01	ifu_demap_kaos_07_26_04_01.s
	ifu_kaos_07_17_04_0		ifu_kaos_07_17_04_0.s
	ifu_kaos_07_17_04_113		ifu_kaos_07_17_04_113.s
	ifu_cmp_kaos_08_02_04_500	ifu_cmp_kaos_08_02_04_500.s  -rtl_timeout=10000
	ifu_cmp_07_30_04_37		ifu_cmp_07_30_04_37.s  -rtl_timeout=10000 -vcs_run_args=+inval_rate=1000
	ifu_cmp_07_30_04_11		ifu_cmp_07_30_04_11.s  -rtl_timeout=10000 -vcs_run_args=+inval_rate=1000
	ifu_cmp_07_30_04_32		ifu_cmp_07_30_04_32.s  -rtl_timeout=10000 -vcs_run_args=+inval_rate=1000
	ifu_cmp_kaos_08_16_99		ifu_cmp_kaos_08_16_99.s  -rtl_timeout=10000 -vcs_run_args=+random_ccx_gnt
	ifu_cmp_kaos_08_16_223		ifu_cmp_kaos_08_16_223.s  -rtl_timeout=10000 -vcs_run_args=+random_ccx_gnt
	ifu_cmp_kaos_08_16_122		ifu_cmp_kaos_08_16_122.s  -rtl_timeout=10000 -vcs_run_args=+random_ccx_gnt
	ifu_cmp_kaos_08_16_191		ifu_cmp_kaos_08_16_191.s  -rtl_timeout=10000 -vcs_run_args=+random_ccx_gnt
	ifu_cmp_demap_kaos_08_10_108	ifu_cmp_demap_kaos_08_10_108.s  -rtl_timeout=10000
	ifu_indra_diff_path_imiss_0	ifu_indra_diff_path_imiss_0.s -rtl_timeout=10000
	ifu_nc_kaos_01_31_05_1		ifu_nc_kaos_01_31_05_1.s
	ifu_kaos_07_17_04_0_ic_direct	ifu_kaos_07_17_04_0.s -midas_args=-DIASSOCDIS=1
	ifu_br_kaos_toggle_ic_drmode_0	ifu_br_kaos_toggle_ic_drmode_0.s
</sys(ifu_8th)>

</runargs>

//#if ((! defined CCM && ! defined FC) || defined ALL_DIAGS)
#endif

</sys(nightly)>
</sys(all)>
</sys(ifu)>



